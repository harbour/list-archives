From mbelgrano at deltain.it  Sat Apr  5 06:23:21 2008
From: mbelgrano at deltain.it (Massimo Belgrano)
Date: Sat Apr  5 06:23:31 2008
Subject: [Harbour] Ron have decided to cancel Massimo
Message-ID: <AFB948164110ED43B5EB849E8DEEF03815EAE5@SRV02.deltain.net>

In a non democratic context will be possible kill a man because it Stole
three deer at the court of King (geordi song)
"He never hurted any, Stole sixteen of the King's royal deer"
"Geordie will be hang'd in a golden chain,  'tis not the chain of many,
Stole sixteen of the King's royal deer
Here I see arrogance of king of create law made itself
Ron want my post only on comp.lang.xharbour and I want leave Xharbour
for the better harbour
I have public appreciate Przemyslaw's idea and probably Ron not love it.
But no problem " Who loves me not I deserve"
I think that more important inspiration for X[harbour] community cames
from harbour (New Gt architecture, multithread, reliability and
consistence) 

Harbour developer ng is usable from
http://news.gmane.org/gmane.comp.lang.harbour.devel

-----Original Message-----
From: Ron Pinkas [mailto:Ron@xHarbour.com] 
Sent: Friday, April 04, 2008 7:16 PM
To: Massimo Belgrano
Cc: Xharbour-Developers List
Subject: Re: [xHarbour-developers] Multiplatform database front end for
xharbour

Hi Guys,

It's been few months since I gave developer access to Massimo. These  
rights were given specifically to allow him to contribute SYNCH of  
fixes between CVS branches, as he volunteered to do. Not a single  
attempt to contribute such synch of fixes has been visible. Instead  
we get many posts of important news, and other recurring opinions,  
which I believe to be very important for the evolution of xHarbour.  
Because such posts and opinions are better posted on,  
comp.lang.xharbour, I decided to cancel Massimo's unused, developer  
access, until actual contribution is forwarded.

Ron

Massimo Belgrano


From mbelgrano at deltain.it  Sun Apr  6 06:17:23 2008
From: mbelgrano at deltain.it (Massimo Belgrano)
Date: Sun Apr  6 06:17:33 2008
Subject: [Harbour] rddads and ads_vfp support
Message-ID: <AFB948164110ED43B5EB849E8DEEF03815EAF3@SRV02.deltain.net>

Is planed in harbour support for ADS v 9 ?
Anyone know Wich kind of modification require for support new feature?
ADS 9 have new TableType ADS_VFP (
"L,LOGICAL;N,NUMERIC,8,2;D,DATE;C,CHAR,5;M,MEMO;"+
"BLOB,BINARY;DB,DOUBLE,2;I,INT,null;DT,TIMESTAMP;AI,AUTOINC;"+
"CUR,MONEY,null;VC,VARCHARFOX,10,null;VB,VARBINARYFOX,10;"
And imo this is the only part of ads 9 who require update
Seem that Xharbour have started this implementation

Wich of this type of fields are supported also from dbfcdx?


Massimo Belgrano

From mbelgrano at deltain.it  Sun Apr  6 07:40:44 2008
From: mbelgrano at deltain.it (Massimo Belgrano)
Date: Sun Apr  6 07:40:59 2008
Subject: [Harbour] Wich suggestion for switcing from xharbour to harbour?
Message-ID: <AFB948164110ED43B5EB849E8DEEF03815EAF4@SRV02.deltain.net>

Most people here have switched from xharbour to xharbour
Usefull if you want post the Modification required 

I have collect same post about it

TDifferences from harbour legend:
HB=Harbour XHB=xHarbour
[HB|XHB] has means the the other hasn't
[HB|XHB]= means different names for a "comparable thing"

> list:
> - XHB=IN HB=$

Not true. XHB can use IN as synonym of $.
IN in xHarbour does not make any other job then $ and is translated by
lexer to $.
$ in xHarbour has additional functionality. It can be used also for
ARRAYs and HASHes.
In Harbour such functionality is enabled by HB_COMPAT_XHB though here I
think that it may be good to enable it by default too.

> - XHB has LIKE

and also HAS. IN, HAS, LIKE are not enabled in Harbour because using
identifiers as operators breaks PP rules. In PP identifiers have
different precedence then non id characters use for operators so they
cannot be added to Harbour without breaking compatibility with Clipper.

> - XHB has HBLOG functions

Just like few other RTL functions but most of them can be collected in
separate library and added to Harbour without any problems.

> - HB has hbcompat.ch ( to help port XHB prgs )

Please note that this file has two sections. It can be usable also in
xHarbour so I suggest to add it also to xHarbour CVS.

> - common.ch is different

nothing seriously important what cannot be hidden by few rules in
hbcompat.ch

> - HB compiler has -kM switch
> - XHB compiler has -J<app>.hil ( and some i18n support )

I'll add i18n support to Harbour though I have some doubts if
reinventing the wheel is good idea. Instead of using our own format I
plan to use gettext format so it will be possible to use a lot of well
known different tools which help in translations and also make lot of
them automatically.

> - pcre lib HB=hbpcre XHB=pcrepos
> ( here I vote for hbpcre )
> - contrib/gd HB=hbgd XHB=gdlib
> ( here I vote for hbgd )
> - XHB gt subsys "requires" gtnul HB doesn't have it

Not true. Harbour have GTNUL and it's always included in RTL library.

> - HB gt subsys has gttrm as default for Linux/Unix XHB doesn't have it
> - XHB has HB_OpenProcess/HB_ProcessValue

The same as for HBLOG above.

> - HB has #pragma escapedstrings = on
> - HB has SET EOL <eol>
> - XHB has some trace functions at prg level like valtoprg, tracelog,
...

The same as for HBLOG above.

> - XHB shell scripts are xhb* HB are hb*

IMHO it's good - you can use both compilers simultaneously on the same
machine.

> P.S. if xHarbour would use -W2 to warn about unused prg's vars in RTL 
> it would help to move code from xHarbour to Harbour.

This is my list oriented to core code extensions.
IMHO adding separated functions to the list does not make big sense
because anyone can port most of them between project in few hours.

XHARBOUR core extensions not supported by Harbour even with
HB_COMPAT_XHB
========================================================================
=
1. bit operators: BITAND(&) BITOR(|) BITXOR(^^) BITSHIFTR(>>)
BITSHIFTL(<<) 2. IN, HAS, LIKE operators

   Probably I'll add #operator directive to PP so support for them can
   be added in hbcompat.ch if someone will need it.

3. using one character length string as numeric value

   Probbly will be never supported - at least I do not want to make it.
   It causes even more problems then using [] for strings.

4. reverted behavior of item references stored in arrays

   Implemented strictly (not like in xHarbour where it's not respected
   in some places) will have some good effects eliminating some Clipper
   anomalies and in general it's not bad idea. Unfortunately it breaks
   Clipper compatibility so I do not think that Harbour will support it
   (at least in default build) because users have code which needs
   original Clipper behavior. This code was using arrays as workaround
   for limited in Clipper number of function parameters.
   AFAIK in xHarbour it was reverted only for one reason: when user
   assigns item in array returned by hb_aParams() and corresponding
   parameter was passed by reference then reference is respected and
   original parameter is changed. I do not know any other reasons why
   in xHarbour it was changed breaking Clipper compatibility.

5. background tasks

   I hope we will add them with Ryszard's asynchronous task library

6. GLOBAL / GLOBAL EXTERNAL (GLOBAL_EXTERN)

   I think that I'll add them somewhere in the future but it will
   be implemented internally in different way then in xHarbour.
   In xHarbour GLOBALs can be used _ONLY_ if compiler generate C
   code and the implementation strictly depends on C compiler and
   linker behavior.

7. MT mode

   Harbour does not have MT mode yet. I'll add it but the low level
   implementation will be absolutely different then xHarbour ones.
   In fact for real MT mode it's necessary to make much deeper
   modifications then in xHarbour. In xHarbour most of subsystem was
   never updated for MT mode so xHarbour MT applications can crash
   randomly, f.e. classes code is not protected at all and new classes
   can be added dynamically. It means that if one thread executes some
   methods and other will create new class (1-st time calls class
   function) then you have very bad race condition because s_pClasses
   will be reallocated and can change its address in memory. For real
   MT mode all such problems have to be resolved.

We can also create list of Harbour features not supported by xHarbour.


"abcd"[2] => "b"

is posible in xHarbour but not in Harbour

This syntax is supported only when you compile Harbour with
HB_COMPAT_XHB macro but with working range checking and will not be
enabled in default build to its side effects. For sure I will never
replicate exact xHarbour behavior because it simply disables RT error if
I make some mistake in index of multidimensional arrays, f.e.:

    proc main
    local s:="ABC"
    ? s[1,2,3,4,5,6,7,8,9]
    return

xHarbour compiles and executes this code without any errors.
In the past when I was using xHarbour for my applications I lost much
more time looking for errors in wrong indexing then I can ever benefit
from the above feature. People writing plagins for my applications also
asked me why they are not working as expected in some cases and it was
caused by typos in array indexing. Now I simply answer: recompile the
code with Harbour and check if all indexes are correct and I do not want
to return to this problem again. For sure no one who has to use often
multidimensional arrays would never introduced such feature.
Enabling range checking like in Harbour compiled with HB_COMPAT_XHB
macro does not resolve the whole problem because cVal[n] returns string
so the above code can be changed to:

    proc main
    local s:="ABC"
    ? s[1,1,1,1,1,1,1,1,1]
    return

and now also Harbour will not generate RT error. The only one solution
for above problem is changing returning 1 character string value to
numeric value with ASCII code of given character and this is the default
Harbour behavior when compiled without HB_COMPAT_XHB and compile time
(-ks) and runtime (//FLAGS:s) switches are used. In such case:

    proc main
    local s:="ABC"
    ? s[2]
    return

shows:
        66

and:
    ? s[2,1]

generates RT error.



Massimo Belgrano

From mbelgrano at deltain.it  Sun Apr  6 07:54:40 2008
From: mbelgrano at deltain.it (Massimo Belgrano)
Date: Sun Apr  6 07:54:55 2008
Subject: [Harbour] Wich suggestion for switcing from xharbour to harbour?
In-Reply-To: <AFB948164110ED43B5EB849E8DEEF03815EAF4@SRV02.deltain.net>
References: <AFB948164110ED43B5EB849E8DEEF03815EAF4@SRV02.deltain.net>
Message-ID: <AFB948164110ED43B5EB849E8DEEF03815EAF5@SRV02.deltain.net>

How Will work #pragma?
#ifdef __XHARBOUR__
#PRAGMA DEBUGINFO=Off
#ENDIF

How Will work untraslate
#ifdef __XHARBOUR__
  #xuntranslate lj_gotoxy  (   //   =>
  #xuntranslate LJ_SAY     (   //    =>
  #xuntranslate LJ_FILL    (   //    =>
  #xuntranslate LoPrPcx    (   //   =>
#ENDIF


 Is not possible somethink like?
#ifdef __XHARBOUR__ .OR. ifdef __HARBOUR__ ?


 
From druzus at acn.waw.pl  Sun Apr  6 10:14:08 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Sun Apr  6 10:14:14 2008
Subject: [Harbour] Wich suggestion for switcing from xharbour to
	harbour?
In-Reply-To: <AFB948164110ED43B5EB849E8DEEF03815EAF5@SRV02.deltain.net>
References: <AFB948164110ED43B5EB849E8DEEF03815EAF4@SRV02.deltain.net>
	<AFB948164110ED43B5EB849E8DEEF03815EAF5@SRV02.deltain.net>
Message-ID: <20080406141408.GA27559@localhost.localdomain>

On Sun, 06 Apr 2008, Massimo Belgrano wrote:
> How Will work #pragma?
> #ifdef __XHARBOUR__
> #PRAGMA DEBUGINFO=Off
> #ENDIF

In both compilers it works in the same way.
xHarbour uses PP borrowed from Harbour code with few small modifications.

> How Will work untraslate
> #ifdef __XHARBOUR__
>   #xuntranslate lj_gotoxy  (   //   =>
>   #xuntranslate LJ_SAY     (   //    =>
>   #xuntranslate LJ_FILL    (   //    =>
>   #xuntranslate LoPrPcx    (   //   =>
> #ENDIF

In the Clipper compatible PP the match pattern depends also on result
pattern. It means that two rules can have literally the same match
pattern but because result pattern is different then they will accept
different expressions. Please look at these two PP commands:

   #command CMD <x> [, <y>] => ? "CMD1:", <x> [; ?? <y>]
   #command CMD <x> [, <y>] => ? "CMD2:", <x>; ?? <y>

Both commands have exactly the same match pattern and only the result
pattern is different. But having the same match pattern they will accept
different line, f.e.:

   #command CMD <x> [, <y>] => ? "CMD0:", <x> [; ?? <y>]
   #command CMD <x> [, <y>] => ? "CMD1:", <x> [; ?? <y>]
   #command CMD <x> [, <y>] => ? "CMD2:", <x>; ?? <y>
   proc main()
   CMD 1          // CMD2:          1
   CMD 1, 2       // CMD2:          1         2
   CMD 1, 2, 3    // CMD1:          1         2         3
   return

As you can see rules with CMD1 and CMD2 are still active.
Rules with CMD0 is hidden by CMD1. Now programmer may want
to disable only rule CMD1 to restore CMD0 functionality.
It can simply make:
   #uncommand CMD <x> [, <y>] => ? "CMD1:", <x> [; ?? <y>]

and now
   CMD 1, 2, 3
shows:
   CMD0:          1         2         3

It means that without passing result pattern rule it's not
possible to well detect which rule should be untranslated.
I implemented such functionality in both compilers but later
in xHarbour it was broken probably due to not sufficient
knowledge about PP internals so now in xHarbour you can
untranslate only the last rule which has the same match
pattern though it can accept different data.
Looks like xHarbour reach the level when it has to be be bug
compatible with older xHarbour releases. Result of bad design
decisions and not well thought features.

>  Is not possible somethink like?
> #ifdef __XHARBOUR__ .OR. ifdef __HARBOUR__ ?

   #IFDEF __HARBOUR__

is accepted by both compilers.

   #IFDEF __XHARBOUR__

is accpeted only by xHarbour.

Both compilers support C like #IF / #ELIF / #ELSE / #ENDIF directive
so you can use:

   #IF defined( __HARBOUR__ ) .AND. !defined( __XHARBOUR__ )
      ...
   #ENDIF

best regards,
Przemek
From druzus at acn.waw.pl  Sun Apr  6 10:17:54 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Sun Apr  6 10:17:59 2008
Subject: [Harbour] Wich suggestion for switcing from xharbour to harbour?
In-Reply-To: <AFB948164110ED43B5EB849E8DEEF03815EAF4@SRV02.deltain.net>
References: <AFB948164110ED43B5EB849E8DEEF03815EAF4@SRV02.deltain.net>
Message-ID: <20080406141754.GB27559@localhost.localdomain>

On Sun, 06 Apr 2008, Massimo Belgrano wrote:
> TDifferences from harbour legend:
[...]

This is not full list and few things changed in the last month.
I'm sorry but I do not have time to create such list now. Maybe
somewhere in the future. Now I have to find time to finish
whatsnew.txt for next release.

best regards,
Przemek
From druzus at acn.waw.pl  Sun Apr  6 10:37:37 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Sun Apr  6 10:37:43 2008
Subject: [Harbour] rddads and ads_vfp support
In-Reply-To: <AFB948164110ED43B5EB849E8DEEF03815EAF3@SRV02.deltain.net>
References: <AFB948164110ED43B5EB849E8DEEF03815EAF3@SRV02.deltain.net>
Message-ID: <20080406143737.GC27559@localhost.localdomain>

On Sun, 06 Apr 2008, Massimo Belgrano wrote:
> Is planed in harbour support for ADS v 9 ?
> Anyone know Wich kind of modification require for support new feature?
> ADS 9 have new TableType ADS_VFP (
> "L,LOGICAL;N,NUMERIC,8,2;D,DATE;C,CHAR,5;M,MEMO;"+
> "BLOB,BINARY;DB,DOUBLE,2;I,INT,null;DT,TIMESTAMP;AI,AUTOINC;"+
> "CUR,MONEY,null;VC,VARCHARFOX,10,null;VB,VARBINARYFOX,10;"
> And imo this is the only part of ads 9 who require update
> Seem that Xharbour have started this implementation

New field types can be added in few minutes by someone who has ADS9.
(I do not). It's enough to update two functions in ads1.c

> Wich of this type of fields are supported also from dbfcdx?

All except varchar/varbinary in VFP like implementation and NULL flags.
The TIME and DAYTIME fields are translated to strings until Harbour
will not have native daytime/time types.

See the ChangeLog file, f.e.:
   2007-09-25 03:20 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)

This is short list of some new fields in some combinations supported
by Harbour:

proc main()
   dbCreate("_tst", {{"F01", "+", 4, 0},; // autoinc
                     {"F02", "=", 8, 0},; // modtime
                     {"F03", "^", 8, 0},; // rowversion
                     {"F04", "@", 8, 0},; // daytime
                     {"F05", "T", 8, 0},; // alternative daytime
                     {"F06", "T", 4, 0},; // time
                     {"F07", "I", 8, 4},; // 64bit integer with 4 decimal places
                     {"F08", "I", 4, 2},; // 32bit integer with 2 decimal places
                     {"F09", "D", 3, 0},; // packed date
                     {"F10", "D", 4, 0},; // 32bit date
                     {"F11", "V", 6, 0},; // SIX3 variable size and type field
                     {"F12", "M", 4, 0},; // memo
                     {"F13", "Y", 8, 4},; // currency
                     {"F14", "B", 8, 2}}) // double value
   use _tst
   while lastrec() < 10
      dbappend()
   enddo
   browse()
   close
return
From mbelgrano at deltain.it  Sun Apr  6 10:39:46 2008
From: mbelgrano at deltain.it (Massimo Belgrano)
Date: Sun Apr  6 10:39:54 2008
Subject: [Harbour] Wich suggestion for switcing from xharbour
	toharbour?
In-Reply-To: <20080406141408.GA27559@localhost.localdomain>
References: <AFB948164110ED43B5EB849E8DEEF03815EAF4@SRV02.deltain.net><AFB948164110ED43B5EB849E8DEEF03815EAF5@SRV02.deltain.net>
	<20080406141408.GA27559@localhost.localdomain>
Message-ID: <AFB948164110ED43B5EB849E8DEEF03815EAF6@SRV02.deltain.net>

>>  Is not possible somethink like?
>> #ifdef __XHARBOUR__ .OR. ifdef __HARBOUR__ ?
>
>   #IFDEF __HARBOUR__>
>
>is accepted by both compilers.
>
>   #IFDEF __XHARBOUR__
>
>is accpeted only by xHarbour.
>
>Both compilers support C like #IF / #ELIF / #ELSE / #ENDIF directive so
you can use:
>
>   #IF defined( __HARBOUR__ ) .AND. !defined( __XHARBOUR__ )
>      ...
>   #ENDIF>
>
>best regards,
>Przemek

Very thanks for your clarification
If I want a code executed  only in harbour I can use 
   #IF defined( __HARBOUR__ ) .AND. !defined( __XHARBOUR__ )
      ...
   #ENDIF

 
From mbelgrano at deltain.it  Sun Apr  6 10:52:10 2008
From: mbelgrano at deltain.it (Massimo Belgrano)
Date: Sun Apr  6 10:52:18 2008
Subject: [Harbour] rddads and ads_vfp support
In-Reply-To: <20080406143737.GC27559@localhost.localdomain>
References: <AFB948164110ED43B5EB849E8DEEF03815EAF3@SRV02.deltain.net>
	<20080406143737.GC27559@localhost.localdomain>
Message-ID: <AFB948164110ED43B5EB849E8DEEF03815EAF7@SRV02.deltain.net>



-----Original Message-----
>From: harbour-bounces@harbour-project.org
[mailto:harbour-bounces@harbour-project.org] On Behalf Of Przemyslaw
>Czerpak
>
>New field types can be added in few minutes by someone who has ADS9.
>(I do not). It's enough to update two functions in ads1.c

Here can be downloaded
http://www.sybase.com/products/databasemanagement/advantagedatabaseserve
r
http://devzone.advantagedatabase.com/dz/content.aspx?key=20&Release=12&P
roduct=5
with ads will be supported varchar/varbinary also?

>> Wich of this type of fields are supported also from dbfcdx?
>All except varchar/varbinary in VFP like implementation and NULL flags.
Very good.
Is planed in future also SUPPORT FOR varchar/varbinary?


>This is short list of some new fields in some combinations supported by
Harbour:
>
>proc main()
>   dbCreate("_tst", {{"F01", "+", 4, 0},; // autoinc
>                     {"F02", "=", 8, 0},; // modtime
>                     {"F03", "^", 8, 0},; // rowversion
>                     {"F04", "@", 8, 0},; // daytime
>                     {"F05", "T", 8, 0},; // alternative daytime
>                     {"F06", "T", 4, 0},; // time
>                     {"F07", "I", 8, 4},; // 64bit integer with 4
decimal places
>                     {"F08", "I", 4, 2},; // 32bit integer with 2
decimal places
>                     {"F09", "D", 3, 0},; // packed date
>                     {"F10", "D", 4, 0},; // 32bit date
>                     {"F11", "V", 6, 0},; // SIX3 variable size and
type field
>                     {"F12", "M", 4, 0},; // memo
>                     {"F13", "Y", 8, 4},; // currency
>                     {"F14", "B", 8, 2}}) // double value
>   use _tst
>   while lastrec() < 10
>      dbappend()
>   enddo
>   browse()
>   close
>return

Will be used "+=^#TIDVYB" also from rddads?

 
From mbelgrano at deltain.it  Sun Apr  6 15:00:00 2008
From: mbelgrano at deltain.it (Massimo Belgrano)
Date: Sun Apr  6 15:00:41 2008
Subject: [Harbour] C:\HARBOUR\BIN\bin\harbour.cfg cannot be created. 
Message-ID: <AFB948164110ED43B5EB849E8DEEF03815EAF8@SRV02.deltain.net>

HBMAKE -F NEWMAKE.BC
C:\HARBOUR\BIN\bin\harbour.cfg cannot be created. FERROR 3

SET HB_ARCHITECTURE=w32
SET HB_COMPILER=bcc32
SET INCLUDE=c:\harbour\INCLUDE;c:\xharbour\bcc55\INCLUDE;
SET LIB=c:\harbour\LIB;c:\xharbour\bcc55\lib;c:\xharbour\bcc55\lib\PSDK

SET HARBDIR=c:\harbour
SET HRB_DIR=c:\harbour
SET HDIR=c:\harbour
set HB_PATH=c:\harbour
SET HG_HRB=c:\harbour
SET HB_BIN_INSTALL=c:\harbour\BIN\b32
SET HB_LIB_INSTALL=c:\harbour\LIB\B32
SET HB_INC_INSTALL=c:\harbour\INCLUDE\
set HB_GT_LIB=
SET HG_BCC=c:\xharbour\bcc55
set BCCDIR=c:\xharbour\bcc55
SET BCDIR=c:\xharbour\bcc55
SET BCC_DIR=c:\xharbour\bcc55
SET MAKEDIR=c:\xharbour\bcc55
set mybcdir=c:\xharbour\bcc55\bin
SET L_USR=
set PRG_USR=
set C_USR=-O2 
SET CFLAGS= -tWM -a8 -OS -O2 -5 -6 -DADS_REQUIRE_VERSION=7
SET HB_LEX=SIMPLEX 
SET BISON_SIMPLES=c:\harbour\DJGPP\share\bison\bison.simple
SET Bison_Simple=c:\harbour\DJGPP\share\bison\bison.simple
SET HG_ROOT=c:\oohg

Massimo Belgrano

From mbelgrano at deltain.it  Mon Apr  7 05:13:55 2008
From: mbelgrano at deltain.it (Massimo Belgrano)
Date: Mon Apr  7 06:35:16 2008
Subject: [Harbour] Little sugegstion for replace www_ebcreate
Message-ID: <AFB948164110ED43B5EB849E8DEEF03815EAF9@SRV02.deltain.net>

I am porting my xharbour+gtwvw to harbour
I am replacing most  gtwvw function, but I don't know replace this
 
        @ 15, 64  SAY "3? Gr.lib."
         @ 15, 75  GET  M_GRUPPO6 PICTURE "@!"   
         VUOTO=SPACE(0)
        #IFDEF __GTWVW__
             nEBid := wvw_ebCreate(NIL, 18, 7, 22, 73 , m_note,,.T.)
             // unico difetto sembra essere la tabrighe che ? sovrapposta
         #else
          @ 18,6 GET VUOTO VALID EDINOTE(18,7,22,73)   //edinote
         #ENDIF

www_ebecreate have a windows look, manage select,copy & past.
How can replace it?

In this shapshot of code i have another question/a dream :
How will be possible manage a fields with formatted test & image (html/rtf) ?
Will be stored in varbinary or blob?
How will bw managed?
I need a blob editor like http://www.withdata.com/dbblobeditor.html?



Best regards
Massimo Belgrano

From druzus at acn.waw.pl  Mon Apr  7 07:25:51 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Mon Apr  7 09:34:47 2008
Subject: [Harbour] Compiling Harbour with DJGPP
In-Reply-To: <47EF708A.2020504@yahoo.com.br>
References: <47EE3E9F.6040605@yahoo.com.br> <47EF708A.2020504@yahoo.com.br>
Message-ID: <20080407112551.GA6334@localhost.localdomain>

On Sun, 30 Mar 2008, Marcos Antonio Gambeta wrote:
> "Extended Error 183" don?t stop the compilation. The first real problem is:

Yes but it can signal the source of problem.

> C:\WINDOWS\SYSTEM32\COMMAND.COM /Ccopy ..\..\harbour.yyc harboury.c
>      0 file(s) copied
> C:\WINDOWS\SYSTEM32\COMMAND.COM /Ccopy ..\..\harbour.yyh harboury.h
>      0 file(s) copied
> To resolve, i copied the files manually:
> copy source\compiler\harbour.yyc source\compiler\dos\djgpp\harboury.c
> copy source\compiler\harbour.yyh source\compiler\dos\djgpp\harboury.h

strange, it should work. At least it works for me but I'm using
real DOS (in DOSEMU) at my Linux system.
The whole DJGPP build can be done cleanly without any problems.

> The next error is:
> .../../gtpca.c: In function 'hb_gt_pca_Init':
> .../../gtpca.c:508: error: storage size of 'win' isn't known
> .../../gtpca.c:510: error: 'TIOCGWINSZ' undeclared (first use in this function)
> .../../gtpca.c:510: error: (Each undeclared identifier is reported only once
> .../../gtpca.c:510: error: for each function it appears in.)
> .../../gtpca.c:508: warning: unused variable 'win'
> make.exe[4]: *** [gtpca.o] Error 1
> make.exe[3]: *** [descend] Error 2
> make.exe[2]: *** [first] Error 2
> make.exe[1]: *** [first] Error 2
> make.exe: *** [first] Error 2

Your DJGPP version does not support console IO.
What version do you use?
I can add workaround for such versions.

> Bug to be fixed ? Or a local problem ?

For me everything works fine. So it's bound with your local installation
though it may be wider problem, f.e. in some MS-Windows versions so if
we can locate it and resolve then it may help some users.

best regards,
Przemek
From mpaliwoda at interia.pl  Mon Apr  7 13:17:16 2008
From: mpaliwoda at interia.pl (Marek Paliwoda)
Date: Mon Apr  7 16:11:56 2008
Subject: [Harbour] Re: Compiling Harbour with DJGPP
In-Reply-To: <47EF708A.2020504@yahoo.com.br>
References: <47EE3E9F.6040605@yahoo.com.br> <47EF708A.2020504@yahoo.com.br>
Message-ID: <ftdkuu$64q$1@ger.gmane.org>

Marcos,

> The next error is:
> 
> .../../gtpca.c: In function 'hb_gt_pca_Init':
> .../../gtpca.c:508: error: storage size of 'win' isn't known
> .../../gtpca.c:510: error: 'TIOCGWINSZ' undeclared (first use in this 
> function)
> .../../gtpca.c:510: error: (Each undeclared identifier is reported only 
> once
> .../../gtpca.c:510: error: for each function it appears in.)
> .../../gtpca.c:508: warning: unused variable 'win'
> make.exe[4]: *** [gtpca.o] Error 1
> make.exe[3]: *** [descend] Error 2
> make.exe[2]: *** [first] Error 2
> make.exe[1]: *** [first] Error 2
> make.exe: *** [first] Error 2
> 
> Bug to be fixed ? Or a local problem ?

Goto <djgpp_dir>/iclude/sys, open a file ioctl.h
with your favorite editor, find the following lines :

#if 0
/*
** UNIX stuff
**
** This is subject to major changes in the near future.
** Do not use it yet.
*/

and change them to

#if 1
/*
** UNIX stuff
**
** This is subject to major changes in the near future.
** Do not use it yet.
*/

(you have to change only one line :))

-- 

Marek

From jarabal at ya.com  Tue Apr  8 07:22:16 2008
From: jarabal at ya.com (Javier)
Date: Tue Apr  8 11:59:04 2008
Subject: [Harbour] Transform() PICTURE @R compatible Clipper 5.1 and VFP.
Message-ID: <47FB5568.2000207@ya.com>

In Clipper 5.1, FoxPro, VFP, ..., the result is adjusts to length of entry data for types character.
This does more easy the application of a accountant mask, for example .-

Local cAccount := "12345"

? '[' + Transform( cAccount, '@R 999.99.99.9999' ) + ']'  // [123.45]

In Clipper 5.2 y Harbour it's adjusts to length of mask, "PICTURE".

? '[' + Transform( cAccount, '@R 999.99.99.9999' ) + ']'  // [123.45.  .    ]

Would it be possible to find a solution compatible style @L?

Thanks in advance
Xavi

From antonioharbour at gmail.com  Tue Apr  8 17:32:58 2008
From: antonioharbour at gmail.com (Antonio Linares)
Date: Tue Apr  8 23:24:55 2008
Subject: [Harbour] ADORDD - Found() implementation
Message-ID: <9471afc80804081432x63a836abm2950aaa7100c962f@mail.gmail.com>

These changes are required in adordd.prg in order to have Found()
working after a LOCATE command:

...
#define WA_FOUND     15

#define WA_SIZE      15
...
static function ADO_LOCATE( nWA, lContinue )

   local aWAData    := USRRDD_AREADATA( nWA )
   local oRecordSet := aWAData[ WA_RECORDSET ]

   oRecordSet:Find( aWAData[ WA_SCOPEINFO ][ UR_SI_CFOR ], If(
lContinue, 1, 0 ) )
   aWAData[ WA_FOUND ] = ! oRecordSet:EOF
   aWAData[ WA_EOF ] = oRecordSet:EOF

return SUCCESS
...
static function ADO_FOUND( nWA, lFound )

   local aWAData := USRRDD_AREADATA( nWA )

   lFound = aWAData[ WA_FOUND ]

return SUCCESS
...
   aAdoFunc[ UR_FOUND ]        := ( @ADO_FOUND() )

I appreciate if someone upload it to the svn. Thanks,
From mbelgrano at deltain.it  Wed Apr  9 06:39:16 2008
From: mbelgrano at deltain.it (Massimo Belgrano)
Date: Wed Apr  9 14:13:57 2008
Subject: [Harbour] 2008-04-09 UTC+0100 Belgrano Massimo
	(mbelgrano/at/deltain.it)
Message-ID: <AFB948164110ED43B5EB849E8DEEF03815EB0C@SRV02.deltain.net>

2008-04-09 UTC+0100 Belgrano Massimo (mbelgrano/at/deltain.it)
   *harbour/contrib/rddado/adordd.prg 
   *harbour/contrib/rddado/tests/test.prg
   Support For Found() working after a LOCATE command 
   by Antonio Linares

Massimo Belgrano
?

From mbelgrano at deltain.it  Wed Apr  9 08:20:00 2008
From: mbelgrano at deltain.it (Massimo Belgrano)
Date: Wed Apr  9 16:54:35 2008
Subject: [Harbour] How Hbmk, hblnk, hbcc with bcc
Message-ID: <AFB948164110ED43B5EB849E8DEEF03815EB0D@SRV02.deltain.net>

How can I make Hbmk.exe, hblnk.exe, hbcc.exe with harbour/bcc?


Massimo Belgrano



From druzus at acn.waw.pl  Wed Apr  9 14:44:06 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Thu Apr 10 01:06:53 2008
Subject: [Harbour] 2008-04-09 20:42 UTC+0200 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <200804091844.m39Ii6FP012056@31-mo5-4.acn.waw.pl>

2008-04-09 20:42 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/ChangeLog
  * harbour/harbour.spec
    * reverted translation to UTF8 - Tomaz please check your editor
      settings and disable automatic translation to UTF8. It's not
      the first as such situation happens.

  * harbour/include/hbclass.ch
    + added two missing PP directives
    ! protected against some repeated external definitions

  * harbour/source/pp/Makefile
  * harbour/source/pp/hbppgen.c
  * harbour/source/pp/ppcore.c
  * harbour/source/common/hbver.c
  * harbour/source/common/hbverdsp.c
  * harbour/source/main/harbour.c
  * harbour/source/vm/cmdarg.c
  * harbour/utils/hbpp/hbpp.c
  * harbour/include/hbpp.h
  * harbour/include/hbcomp.h
  * harbour/include/hbver.h
  * harbour/include/hbapi.h
  * harbour/make_vcce.mak
  * harbour/make_b32.mak
  * harbour/make_vc.mak
  * harbour/make_gcc.mak
    + added support for dynamically set during compilation ChangeLog entry
      ChangeLog ID and SVN revision and compilation flags
      Now hbppgen creates in include directory hbverbld.h file with
      information extracted from ChangeLog. New hbppgen parameters:
         Syntax:  ./hbppgen <file>[.prg] [options]
         Options: -i<path>       add #include file search path
                  -c[<file>]     look for ChangeLog file
                  -o<file>       creates .c file with PP rules
                  -v<file>       creates .h file with version information
                  -w             write preprocessed (.ppo) input file
                  -q             disable information messages
    + added new C functions:
         int hb_verSvnID( void )
            - retrieves ChangeLog SVN revision number
         const char * hb_verSvnChangeLogID( void )
            - retrieves a static buffer containing ChangeLog ID string
         const char * hb_verSvnLastEntry( void )
            - retrieves a static buffer containing ChangeLog last entry string
         const char * hb_verFlagsC( void )
            - retrieves a static buffer containing build time C compiler
              flags in C_USR envvar
         const char * hb_verFlagsL( void )
            - retrieves a static buffer containing build time linker
              flags in L_USR envvar
         const char * hb_verFlagsPRG( void )
            - retrieves a static buffer containing build time Harbour compiler
              flags in PRG_USR envvar
    + added new default PP defines which can be used in .prg code compiled
      by Harbour compiler: HB_VER_LENTRY, HB_VER_CHLID, HB_VER_SVNID

  * harbour/source/rtl/gtxwc/gtxwc.c
    * formatting

  * harbour/source/rtl/gttrm/gttrm.c
    ! fixed redrawing GPM mouse pointer after screen updating

  * harbour/source/rtl/gtstd/gtstd.c
  * harbour/source/rtl/gtpca/gtpca.c
    * updated for compilation even if some POSIX macros are not supported
      f.e. problems with some DJGPP versions reported recently

  * harbour/source/debug/dbgentry.c
  * harbour/source/debug/dbgtobj.prg
  * harbour/source/debug/dbgbrwsr.prg
  * harbour/source/debug/dbgthsh.prg
  * harbour/source/debug/tbrwtext.prg
  * harbour/source/debug/dbgwa.prg
  * harbour/source/debug/debugger.prg
  * harbour/source/debug/dbghelp.prg
  * harbour/source/debug/dbgtarr.prg
    ! Fixed object inspector in the debugger.
    ! Added HbDbBrowser:invalidate() message. Fixes work area browsing in debugger.
    ! Added an minimalistic TBrowse implementation that is just enough
      for internal use by the debugger. Fixes miscellaneous problems e.g.
      when debugging a piece of code with RELATIONs turned on.
    Fixes by Phil Krylov borrowed from xHarbour.

best regards
Przemek
From druzus at acn.waw.pl  Wed Apr  9 18:14:12 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Thu Apr 10 03:43:04 2008
Subject: [Harbour] New TBROWSE class
Message-ID: <20080409221412.GA16429@localhost.localdomain>

Hi All,

I'm attaching new TBROWSE class.
This new implementation though borrowed from previous Harbour version
some methods code like NTOP(), NBOTTOM(), NLEFT(), NRIGHT(), BORDER(),
MESSAGE() which recently Victor Szakats added. I also took some Victor's
comments.
Victor I didn't take colors related functions and method because my
tests shows that they are not as close to CA-Cl*pper as they should.
I tried to make this TBROWSE class maximally compatible with CA-Cl*pper
but it's neither Harbour nor xHarbour compatible. Both old implementations
have some serious differences to Clipper.
The order of instance variables in new TBROWSE class is compatible
with Clipper so it should be compatible also with the code which
directly manipulates them using array indexes (not suggested but
I've seen such code).
The final code is a little bit smaller then current Harbour
implementation and much smaller then xHarbour one though it address
some things which were not implemented so far at all.
There are still some minor differences to Clipper I know though most
of them is intentional and probably you should not detect them in
normal usage. Two minor things should be fixed yet and I'll do that
in some spare time. Deeper tests shows that most of core TBROWSE code
is written in C and it can be seen in used algorithms (f.e. some data
which are calculated online and .prg implementation have to cause some
serious speed overhead) and bugs like wrong casting and missing
protection against buffer overflow. Because it's possible that many
of you will want to create your own TBROWSE classes inheriting from
the original one then I decided to keep whole code in .prg files
without any C stuff. Anyhow if you look at some data structures and
functions/methods then you will find that it will be much easier to
write it in C.
I've never used TBROWSE with Clipper so I cannot test it as well as
I'd like. But I have some not mine Clipper's code which extensively
uses TBROWSE and so far I was not able to port it to [x]Harbour due
to some wrong visual effects. With this new class it works without
any problems.
If possible then I would like to ask all of you to make tests with
this new class and your code. It will be the best if you have some
original Clipper code not updated to work also with Harbour or xHarbour.
If sth will be wrong then please inform me.
If all will work correctly then I'll replace current code with the new
one before release.
Now I'm returning to whatsnew.txt ;-)

best regards,
Przemek
-------------- next part --------------
A non-text attachment was scrubbed...
Name: tbrowse.prg.gz
Type: application/x-gzip
Size: 15704 bytes
Desc: not available
Url : http://lists.harbour-project.org/pipermail/harbour/attachments/20080410/725d14a1/tbrowse.prg-0001.gz
From teo at windtelsoft.com  Wed Apr  9 20:29:03 2008
From: teo at windtelsoft.com (Teo Fonrouge)
Date: Thu Apr 10 06:39:22 2008
Subject: [Harbour] How Hbmk, hblnk, hbcc with bcc
In-Reply-To: <AFB948164110ED43B5EB849E8DEEF03815EB0D@SRV02.deltain.net>
References: <AFB948164110ED43B5EB849E8DEEF03815EB0D@SRV02.deltain.net>
Message-ID: <200804091929.03543.teo@windtelsoft.com>

On Wednesday 09 April 2008 07:20:00 am Massimo Belgrano wrote:
> How can I make Hbmk.exe, hblnk.exe, hbcc.exe with harbour/bcc?

You can't without a scripting capable shell (like bash, sh, etc).

If you want to use those tools on windows, you need to build harbour under 
cygwin, or MinGW/MSYS shell.



best regards

Teo Fonrouge


From druzus at acn.waw.pl  Wed Apr  9 20:56:03 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Thu Apr 10 07:58:07 2008
Subject: [Harbour] How Hbmk, hblnk, hbcc with bcc
In-Reply-To: <AFB948164110ED43B5EB849E8DEEF03815EB0D@SRV02.deltain.net>
References: <AFB948164110ED43B5EB849E8DEEF03815EB0D@SRV02.deltain.net>
Message-ID: <20080410005603.GA19638@localhost.localdomain>

On Wed, 09 Apr 2008, Massimo Belgrano wrote:
> How can I make Hbmk.exe, hblnk.exe, hbcc.exe with harbour/bcc?

hb* tools are BASH scripts and are supported only on platforms
where bash is available and now they can work only with GCC based
compilers.
For BCC you will need new tool. But it should not be hard to write
sth like using pure .prg code. For sure not now (I'm sorry but I'm
too busy with my business jobs) but maybe in the future I'll write
sth what will work with other compilers.

best regards,
Przemek
From teo at windtelsoft.com  Thu Apr 10 16:40:58 2008
From: teo at windtelsoft.com (Teo Fonrouge)
Date: Fri Apr 11 02:46:24 2008
Subject: [Harbour] New TBROWSE class
In-Reply-To: <20080409221412.GA16429@localhost.localdomain>
References: <20080409221412.GA16429@localhost.localdomain>
Message-ID: <200804101540.58618.teo@windtelsoft.com>

On Wednesday 09 April 2008 05:14:12 pm Przemyslaw Czerpak wrote:
> Hi All,
>
> I'm attaching new TBROWSE class.
> This new implementation though borrowed from previous Harbour version
> some methods code like NTOP(), NBOTTOM(), NLEFT(), NRIGHT(), BORDER(),
> MESSAGE() which recently Victor Szakats added. I also took some Victor's
> comments.
> Victor I didn't take colors related functions and method because my
> tests shows that they are not as close to CA-Cl*pper as they should.
> I tried to make this TBROWSE class maximally compatible with CA-Cl*pper
> but it's neither Harbour nor xHarbour compatible. Both old implementations
> have some serious differences to Clipper.
> The order of instance variables in new TBROWSE class is compatible
> with Clipper so it should be compatible also with the code which
> directly manipulates them using array indexes (not suggested but
> I've seen such code).
> The final code is a little bit smaller then current Harbour
> implementation and much smaller then xHarbour one though it address
> some things which were not implemented so far at all.
> There are still some minor differences to Clipper I know though most
> of them is intentional and probably you should not detect them in
> normal usage. Two minor things should be fixed yet and I'll do that
> in some spare time. Deeper tests shows that most of core TBROWSE code
> is written in C and it can be seen in used algorithms (f.e. some data
> which are calculated online and .prg implementation have to cause some
> serious speed overhead) and bugs like wrong casting and missing
> protection against buffer overflow. Because it's possible that many
> of you will want to create your own TBROWSE classes inheriting from
> the original one then I decided to keep whole code in .prg files
> without any C stuff. Anyhow if you look at some data structures and
> functions/methods then you will find that it will be much easier to
> write it in C.
> I've never used TBROWSE with Clipper so I cannot test it as well as
> I'd like. But I have some not mine Clipper's code which extensively
> uses TBROWSE and so far I was not able to port it to [x]Harbour due
> to some wrong visual effects. With this new class it works without
> any problems.
> If possible then I would like to ask all of you to make tests with
> this new class and your code. It will be the best if you have some
> original Clipper code not updated to work also with Harbour or xHarbour.
> If sth will be wrong then please inform me.

Przemek,

I've found just a visual issue, attached is a screen-shoot showing a wrong 
behavior regarding the columns width when moving the cursor vertically. 

As you'll see, the first column 'invades' the second column for the total 
width of the first column when the cursor is moved, the first column has 
specified a :width of 8 and a max len of 16.

> If all will work correctly then I'll replace current code with the new
> one before release.
> Now I'm returning to whatsnew.txt ;-)

best regards

Teo

>
> best regards,
> Przemek


-------------- next part --------------
A non-text attachment was scrubbed...
Name: newbrowse.png
Type: image/png
Size: 3869 bytes
Desc: not available
Url : http://lists.harbour-project.org/pipermail/harbour/attachments/20080410/69f5c4e7/newbrowse.png
From druzus at acn.waw.pl  Thu Apr 10 17:45:42 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Fri Apr 11 03:29:23 2008
Subject: [Harbour] New TBROWSE class
In-Reply-To: <200804101540.58618.teo@windtelsoft.com>
References: <20080409221412.GA16429@localhost.localdomain>
	<200804101540.58618.teo@windtelsoft.com>
Message-ID: <20080410214542.GA24842@localhost.localdomain>

On Thu, 10 Apr 2008, Teo Fonrouge wrote:
> Przemek,
> I've found just a visual issue, attached is a screen-shoot showing a wrong 
> behavior regarding the columns width when moving the cursor vertically. 
> As you'll see, the first column 'invades' the second column for the total 
> width of the first column when the cursor is moved, the first column has 
> specified a :width of 8 and a max len of 16.

Thank you very much.
I guess it's the result of missing protection against size in
hilite/dehilite methods I've already fixed. Please try the attached
fixed TBrowse code. I also corrected hitTest method. There is still
one incompatiblity with calculating column positions though it's
minor problem and I'll fixed it tomorrow.
I'm attaching small example with the code I extracted from one of
programs I used for tests. Try to use it with mouse. It should start
displaying from bottom position. You can HIDE some columns clicking
one HIDE and restore them by clicking on SHOW ALL. INS highlights
current row DEL restore original colors. 1, 2 and 3 freeze columns.
Compare the results compiling it with Harbour and xHarbour and then
with CL5.3 and attached TBrowse code. It's one of code peace I had
problems after recompilation with [x]Harbour.
I'm waiting for any other problems you will detect.

best regards,
Przemek
-------------- next part --------------
A non-text attachment was scrubbed...
Name: tbrowse.prg.gz
Type: application/x-gzip
Size: 15766 bytes
Desc: not available
Url : http://lists.harbour-project.org/pipermail/harbour/attachments/20080410/4e536e4a/tbrowse.prg-0001.gz
-------------- next part --------------
A non-text attachment was scrubbed...
Name: tb1.prg.gz
Type: application/x-gzip
Size: 1262 bytes
Desc: not available
Url : http://lists.harbour-project.org/pipermail/harbour/attachments/20080410/4e536e4a/tb1.prg-0001.gz
From dbtopas at dbtopas.lt  Thu Apr 10 19:53:49 2008
From: dbtopas at dbtopas.lt (Mindaugas Kavaliauskas)
Date: Fri Apr 11 05:35:00 2008
Subject: [Harbour] New TBROWSE class
In-Reply-To: <20080409221412.GA16429@localhost.localdomain>
References: <20080409221412.GA16429@localhost.localdomain>
Message-ID: <47FEA88D.9030709@dbtopas.lt>

Hi,


> If possible then I would like to ask all of you to make tests with
> this new class and your code. It will be the best if you have some
> original Clipper code not updated to work also with Harbour or xHarbour.
> If sth will be wrong then please inform me.
> If all will work correctly then I'll replace current code with the new
> one before release.

I found some old DOS code using TBrowse() object. It's dated 1997-11-27. 
It was compiled last time in 1999. I can try to test, but I'm not sure 
if I'll be able to do it. It uses some .asm code to implement mouse in 
DOS. Browse code even tries to change mouse pointer shape (by using 
different symbol) to indicate the action performed on mouse button 
press. Ex., arrow down (symbol CHR(25)) mouse pointer indicate PageDown 
action on mouse button press. There are many other tricks which are not 
compatible with current Windows/Unix code.


 > The order of instance variables in new TBROWSE class is compatible
 > with Clipper so it should be compatible also with the code which
 > directly manipulates them using array indexes (not suggested but
 > I've seen such code).

I found some code using oBrowse[6] instead of oBrowse:columns, but I 
also found some more exotic code:

nRow += BIN2W(SUBSTR(poTab[14], 33, 2)) - 1 // nFirstRow - nTop - 1
poTab:AutoLite := .F.
poTab:Dehilite()
poTab[14] := MyStuff(poTab[14], 41, I2BIN(nRow) + I2BIN(nRow))
poTab:RefreshAll()

It operates on internal browse C structure. I remember, we were unable 
to get some information about active/hilited browse row or something, 
without using code like that. I do not remember the details, only this 
original comment left.
MyStuff(a, b, c) is STUFF(a, b, LEN(c), c) written in .asm, because 
original Clipper 5.2 implementation of STUFF used to make memory 
corruption with unpredictable errors later.


Best regards,
Mindaugas

From druzus at acn.waw.pl  Thu Apr 10 21:42:13 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Fri Apr 11 06:19:12 2008
Subject: [Harbour] New TBROWSE class
In-Reply-To: <200804102000.27530.teo@windtelsoft.com>
References: <20080409221412.GA16429@localhost.localdomain>
	<200804101540.58618.teo@windtelsoft.com>
	<20080410214542.GA24842@localhost.localdomain>
	<200804102000.27530.teo@windtelsoft.com>
Message-ID: <20080411014213.GA26357@localhost.localdomain>

> Using the last tbrowse version that you just send I still have found problems 
> regarding of size & position of cells, for illustrate this problems, I took 
> the liberty of change a little your sample and attached it as tb2.prg
> please try it and modify/reorder the items in the array <aData> in the 
> AddMoreColumns() function to see the problems.

Thank you very much - it greatly helps.
Please try this version. It should be fixed with some issues I was
talking in previous message. The only one difference between CL5.3
I can see in this example is different logical column position.
CL5.3 calculates the position on row value and the transform one
is wider so it's not in the middle of column. I intentionally haven't
replicated it.

> (I think that will be useful if we could have this new tbrowse.prg in the SVN 
> (renamed of course) to be able to collaborate in the debugging.)

Current debugger does not use TBrowse. I've just synced it with
Phil Krylov's modifications in xHarbour. He added small TBrowse
class to debugger code which is used instead of the RTL one.

best regards,
Przemek
-------------- next part --------------
A non-text attachment was scrubbed...
Name: tbrowse.prg.gz
Type: application/x-gzip
Size: 15955 bytes
Desc: not available
Url : http://lists.harbour-project.org/pipermail/harbour/attachments/20080411/0229f394/tbrowse.prg.gz
From teo at windtelsoft.com  Thu Apr 10 21:00:27 2008
From: teo at windtelsoft.com (Teo Fonrouge)
Date: Fri Apr 11 06:43:09 2008
Subject: [Harbour] New TBROWSE class
In-Reply-To: <20080410214542.GA24842@localhost.localdomain>
References: <20080409221412.GA16429@localhost.localdomain>
	<200804101540.58618.teo@windtelsoft.com>
	<20080410214542.GA24842@localhost.localdomain>
Message-ID: <200804102000.27530.teo@windtelsoft.com>

On Thursday 10 April 2008 04:45:42 pm Przemyslaw Czerpak wrote:
> On Thu, 10 Apr 2008, Teo Fonrouge wrote:
> > Przemek,
> > I've found just a visual issue, attached is a screen-shoot showing a
> > wrong behavior regarding the columns width when moving the cursor
> > vertically. As you'll see, the first column 'invades' the second column
> > for the total width of the first column when the cursor is moved, the
> > first column has specified a :width of 8 and a max len of 16.
>
> Thank you very much.
> I guess it's the result of missing protection against size in
> hilite/dehilite methods I've already fixed. Please try the attached
> fixed TBrowse code. I also corrected hitTest method. There is still
> one incompatiblity with calculating column positions though it's
> minor problem and I'll fixed it tomorrow.
> I'm attaching small example with the code I extracted from one of
> programs I used for tests. Try to use it with mouse. It should start
> displaying from bottom position. You can HIDE some columns clicking
> one HIDE and restore them by clicking on SHOW ALL. INS highlights
> current row DEL restore original colors. 1, 2 and 3 freeze columns.
> Compare the results compiling it with Harbour and xHarbour and then
> with CL5.3 and attached TBrowse code. It's one of code peace I had
> problems after recompilation with [x]Harbour.
> I'm waiting for any other problems you will detect.

Using the last tbrowse version that you just send I still have found problems 
regarding of size & position of cells, for illustrate this problems, I took 
the liberty of change a little your sample and attached it as tb2.prg

please try it and modify/reorder the items in the array <aData> in the 
AddMoreColumns() function to see the problems.


best regards

Teo

(I think that will be useful if we could have this new tbrowse.prg in the SVN 
(renamed of course) to be able to collaborate in the debugging.)
-------------- next part --------------
A non-text attachment was scrubbed...
Name: tb2.prg.gz
Type: application/x-gzip
Size: 1498 bytes
Desc: not available
Url : http://lists.harbour-project.org/pipermail/harbour/attachments/20080410/7bb48043/tb2.prg-0001.gz
From mbelgrano at deltain.it  Thu Apr 10 09:41:22 2008
From: mbelgrano at deltain.it (Massimo Belgrano)
Date: Fri Apr 11 08:51:29 2008
Subject: [Harbour] 2008-04-10 15:39 UTC+0100 Belgrano Massimo
	(mbelgrano/at/deltain.it)
Message-ID: <AFB948164110ED43B5EB849E8DEEF03815EB1B@SRV02.deltain.net>

2008-04-10 15:39 UTC+0100 Belgrano Massimo (mbelgrano/at/deltain.it)
  * harbour/contrib/rddado/adordd.prg 
    Instead of overloading FOUND method in ADO RDD it will be
    more efficient to use standard implementation written in C
    by Przemyslaw  suggestion

?

From lorenzo.fiorini at gmail.com  Fri Apr 11 01:23:46 2008
From: lorenzo.fiorini at gmail.com (Lorenzo Fiorini)
Date: Fri Apr 11 17:29:38 2008
Subject: [Harbour] 2008-04-09 20:42 UTC+0200 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <200804091844.m39Ii6FP012056@31-mo5-4.acn.waw.pl>
References: <200804091844.m39Ii6FP012056@31-mo5-4.acn.waw.pl>
Message-ID: <9257026e0804102223u6f9b1b49yc0464cf376e4c89f@mail.gmail.com>

On Wed, Apr 9, 2008 at 8:44 PM, Przemyslaw Czerpak <druzus@acn.waw.pl> wrote:

>     ! Fixed object inspector in the debugger.
>     ! Added HbDbBrowser:invalidate() message. Fixes work area browsing in debugger.
>     ! Added an minimalistic TBrowse implementation that is just enough
>       for internal use by the debugger. Fixes miscellaneous problems e.g.
>       when debugging a piece of code with RELATIONs turned on.
>     Fixes by Phil Krylov borrowed from xHarbour.

Great !!!

many thanks,
Lorenzo
From teo at windtelsoft.com  Fri Apr 11 01:32:14 2008
From: teo at windtelsoft.com (Teo Fonrouge)
Date: Fri Apr 11 17:38:01 2008
Subject: [Harbour] New TBROWSE class
In-Reply-To: <20080411015218.GB26357@localhost.localdomain>
References: <20080409221412.GA16429@localhost.localdomain>
	<200804102000.27530.teo@windtelsoft.com>
	<20080411015218.GB26357@localhost.localdomain>
Message-ID: <200804110032.14632.teo@windtelsoft.com>

On Thursday 10 April 2008 08:52:18 pm you wrote:
> On Thu, 10 Apr 2008, Teo Fonrouge wrote:
> > Using the last tbrowse version that you just send I still have found
> > problems regarding of size & position of cells, for illustrate this
> > problems, I took the liberty of change a little your sample and attached
> > it as tb2.prg please try it and modify/reorder the items in the array
> > <aData> in the AddMoreColumns() function to see the problems.
>
> Thank you very much for your tests - they greatly help me.
> I'm attaching tbrowse code which should fix this and also
> some other issue I was talking about in previous message.
> The only one difference between CL5.3 and tbr2 you sent is
> in logical column formatting - Clipper takes size of row logical
> value without the picture clause and the calculated position is
> not in the middle of column. I haven't replicated it intentionally.
> If you will find sth else then please inform me.

I haven't found any problems with this version, I have tested it with two 
large apps that make heavy use of tbrowse, in fact, is solves (in my case) 
the following issues with the current tbrowse SVN version:

 * Fixes the colors obtained in :colorblocks
 * Fixes wrong positioning of empty columns and then setting a width > 0
 * Fixes wrong positions and displaying of columns with freeze cols
 * Fixes sporadic RT/errors when setting freezed cols
 * Fixes wrong displaying of heading/footing labels

>
> > (I think that will be useful if we could have this new tbrowse.prg in the
> > SVN (renamed of course) to be able to collaborate in the debugging.)
>
> Current debugger does not use TBrowse. I've just synced it with
> xHarbour Phil Krylov's modification. He added small TBrowse class to
> debugger code which is used instead of the RTL one.

I haven't a Clipper 5.* framework and barely remember the tbrowse behavior, 
but this tbrowse version fixes problems that showed (until now) when I jumped 
from Clipper to [x]Harbour. I'm sure that we need more tests, specially from 
people with Clipper 5.*, but  I'm sure that this tbrowse version is better 
that the SVN one.


best regards

Teo
From jerryfinuliar at yahoo.com  Fri Apr 11 01:50:11 2008
From: jerryfinuliar at yahoo.com (Jerry Finuliar)
Date: Fri Apr 11 18:03:46 2008
Subject: [Harbour] Build Problem in BCC
Message-ID: <413027.65861.qm@web31102.mail.mud.yahoo.com>

I been offline for a couple of weeks and after I update my working copy I get this error.
D:\harbour>call make_b32.bat
TLIB  Version 2.0   Copyright (c) 1987, 1988 Borland International
Warning: unknown command line switch 'P' ignored
Error: unexpected char '3' in command line

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.harbour-project.org/pipermail/harbour/attachments/20080410/fae1962d/attachment.html
From teo at windtelsoft.com  Fri Apr 11 02:30:53 2008
From: teo at windtelsoft.com (Teo Fonrouge)
Date: Fri Apr 11 18:50:04 2008
Subject: [Harbour] New TBROWSE class
In-Reply-To: <200804110032.14632.teo@windtelsoft.com>
References: <20080409221412.GA16429@localhost.localdomain>
	<20080411015218.GB26357@localhost.localdomain>
	<200804110032.14632.teo@windtelsoft.com>
Message-ID: <200804110130.53227.teo@windtelsoft.com>

On Friday 11 April 2008 12:32:14 am Teo Fonrouge wrote:

[snip]

Przemek,

Just a little request, in the :doConfigure() method, I think that we need to 
use the value of oCol:width if it is not NIL, this is to allow a combination 
of a oCol:block that can return a empty string in this stage *but* oCol:width 
has a numeric value.

I don't know if this is a Clipper 5.* compatible feature.

This is the diff:

<diff>
@@ -1241,7 +1241,11 @@
       xValue := Eval( oCol:block )
       cValue := Transform( xValue, oCol:picture )
       cType  := ValType( xValue )
+      IF oCol:width = NIL
       nWidth := LEN( cValue )
+      ELSE
+        nWidth := oCol:width
+      ENDIF
       cColSep := oCol:colSep
       IF cColSep == NIL
          cColSep := ::colSep
</diff>


best regards

Teo
From mbelgrano at deltain.it  Fri Apr 11 05:55:02 2008
From: mbelgrano at deltain.it (Massimo Belgrano)
Date: Fri Apr 11 22:38:28 2008
Subject: [Harbour] 2008-04-11 11.45 UTC+0100 Belgrano Massimo
	(mbelgrano/at/deltain.it)
Message-ID: <AFB948164110ED43B5EB849E8DEEF03815EB21@SRV02.deltain.net>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/gif
Size: 3559 bytes
Desc: image001.gif
Url : http://lists.harbour-project.org/pipermail/harbour/attachments/20080411/cc71ef5a/attachment.gif
From mbelgrano at deltain.it  Fri Apr 11 09:49:50 2008
From: mbelgrano at deltain.it (Massimo Belgrano)
Date: Sat Apr 12 02:42:26 2008
Subject: [Harbour] How Hbmk, hblnk, hbcc with bcc
In-Reply-To: <20080410005603.GA19638@localhost.localdomain>
References: <AFB948164110ED43B5EB849E8DEEF03815EB0D@SRV02.deltain.net>
	<20080410005603.GA19638@localhost.localdomain>
Message-ID: <AFB948164110ED43B5EB849E8DEEF03815EB23@SRV02.deltain.net>

Can i use http://win-bash.sourceforge.net/ ?



-----Original Message-----
From: harbour-bounces@harbour-project.org
[mailto:harbour-bounces@harbour-project.org] On Behalf Of Przemyslaw
Czerpak
Sent: Thursday, April 10, 2008 2:56 AM
To: Harbour Project Main Developer List.
Subject: Re: [Harbour] How Hbmk, hblnk, hbcc with bcc

On Wed, 09 Apr 2008, Massimo Belgrano wrote:
> How can I make Hbmk.exe, hblnk.exe, hbcc.exe with harbour/bcc?

hb* tools are BASH scripts and are supported only on platforms
where bash is available and now they can work only with GCC based
compilers.
For BCC you will need new tool. But it should not be hard to write
sth like using pure .prg code. For sure not now (I'm sorry but I'm
too busy with my business jobs) but maybe in the future I'll write
sth what will work with other compilers.

best regards,
Przemek
_______________________________________________
Harbour mailing list
Harbour@harbour-project.org
http://lists.harbour-project.org/mailman/listinfo/harbour
From marcos.gambeta at yahoo.com.br  Fri Apr 11 17:23:24 2008
From: marcos.gambeta at yahoo.com.br (Marcos Antonio Gambeta)
Date: Sat Apr 12 08:42:28 2008
Subject: [Harbour] Compiling Harbour with DJGPP
In-Reply-To: <20080407112551.GA6334@localhost.localdomain>
References: <47EE3E9F.6040605@yahoo.com.br> <47EF708A.2020504@yahoo.com.br>
	<20080407112551.GA6334@localhost.localdomain>
Message-ID: <47FFD6CC.7080201@yahoo.com.br>

Hi Przemyslaw,

Please, forgive my delay (problems with my email account).

My SO is Windows Vista Ultimate. I used the link below to get the files 
to DJGPP installation (selected W2K/XP as OS):
http://www.delorie.com/djgpp/zip-picker.html

gcc.exe --version ---> 4.2.3

With current Harbour i can compile the sources, but with manual copy of 
some files.
2008-04-11 11.45 UTC+0100 Belgrano Massimo (mbelgrano/at/deltain.it)

The command below is not working on Vista:
command.com /Ccopy source dest

"make_gnu.bat install" don?t work because problem above. See examples below:

C:\WINDOWS\SYSTEM32\COMMAND.COM /Ccopy clipdefs.h d:\hrbdjgpp\include
        0 file(s) copied
C:\WINDOWS\SYSTEM32\COMMAND.COM /Ccopy extend.h d:\hrbdjgpp\include
        0 file(s) copied
C:\WINDOWS\SYSTEM32\COMMAND.COM /Ccopy hbapi.h d:\hrbdjgpp\include
        0 file(s) copied

I need to copy manually:

copy source\compiler\harbour.yyc source\compiler\dos\djgpp\harboury.c
copy source\compiler\harbour.yyh source\compiler\dos\djgpp\harboury.h
copy source\macro\macro.yyc source\macro\dos\djgpp\macroy.c
copy source\macro\macro.yyh source\macro\dos\djgpp\macroy.h

Thanks!


Regards,
Marcos Gambeta

From marcos.gambeta at yahoo.com.br  Fri Apr 11 17:30:14 2008
From: marcos.gambeta at yahoo.com.br (Marcos Antonio Gambeta)
Date: Sat Apr 12 09:47:05 2008
Subject: [Harbour] Re: Compiling Harbour with DJGPP
In-Reply-To: <ftdkuu$64q$1@ger.gmane.org>
References: <47EE3E9F.6040605@yahoo.com.br> <47EF708A.2020504@yahoo.com.br>
	<ftdkuu$64q$1@ger.gmane.org>
Message-ID: <47FFD866.2000400@yahoo.com.br>

Marek Paliwoda escreveu:
> Goto <djgpp_dir>/iclude/sys, open a file ioctl.h
> with your favorite editor, find the following lines :
Marek,

Thank you! With current Harbour, i can compile without the change in 
file ioctl.h.


Regards,
Marcos Gambeta

From lorenzo.fiorini at gmail.com  Sat Apr 12 02:15:52 2008
From: lorenzo.fiorini at gmail.com (Lorenzo Fiorini)
Date: Sat Apr 12 18:23:55 2008
Subject: [Harbour] New TBROWSE class
In-Reply-To: <20080411014213.GA26357@localhost.localdomain>
References: <20080409221412.GA16429@localhost.localdomain>
	<200804101540.58618.teo@windtelsoft.com>
	<20080410214542.GA24842@localhost.localdomain>
	<200804102000.27530.teo@windtelsoft.com>
	<20080411014213.GA26357@localhost.localdomain>
Message-ID: <9257026e0804112315x2b7d5a0fh629870d6e2afdc95@mail.gmail.com>

On Fri, Apr 11, 2008 at 3:42 AM, Przemyslaw Czerpak <druzus@acn.waw.pl> wrote:

I've found an issue when there is a freeze.

I've modified tb2.prg to work with cl53b and renamed tb3.prg.

Set the freeze to 2 typing 2 go to last col with Ctrl+Home than return
to the first using Ctrl+Home and see the differences with cl53b ( it
seems that in our class the columns after the "freezed ones" are not
displayed ).

best regards,
Lorenzo
-------------- next part --------------
A non-text attachment was scrubbed...
Name: tb3.tgz
Type: application/x-gzip
Size: 1592 bytes
Desc: not available
Url : http://lists.harbour-project.org/pipermail/harbour/attachments/20080412/97ef2aee/tb3.tgz
From harbour.01 at syenar.hu  Thu Apr 10 19:48:23 2008
From: harbour.01 at syenar.hu (=?ISO-8859-2?Q?Szak=E1ts_Viktor?=)
Date: Sun Apr 13 03:18:13 2008
Subject: [Harbour] New TBROWSE class
In-Reply-To: <20080409221412.GA16429@localhost.localdomain>
References: <20080409221412.GA16429@localhost.localdomain>
Message-ID: <07D635D8-9C24-40E2-B655-9101E8D4730C@syenar.hu>

Hi again,

I've checked your code (just a very quick overview),
and it's obviously not based on my local version I've
sent to Marek a few weeks ago.

I just can hope it's still not too late, I'm attaching it as
it is for you now. Areas where I did make progress is display
compatibility, including colors, column display for different
picture/type combinations, separator handling and lots of other
bits, like method/var behaviours, lots of cleanups, lots of
formatting and adding some ideas from xhb in a reworked way.
There are many subtle CA-Clipper details replicated.

Areas missing: horizontal navigation, caching, some
probably obvious display and refresh bugs.

Brgds,
Viktor

-------------- next part --------------
A non-text attachment was scrubbed...
Name: tbrowse!.prg
Type: application/octet-stream
Size: 88779 bytes
Desc: not available
Url : http://lists.harbour-project.org/pipermail/harbour/attachments/20080411/9d9d8fbe/tbrowse-0001.obj
-------------- next part --------------


On 2008.04.10., at 0:14, Przemyslaw Czerpak wrote:

> Hi All,
>
> I'm attaching new TBROWSE class.
> This new implementation though borrowed from previous Harbour version
> some methods code like NTOP(), NBOTTOM(), NLEFT(), NRIGHT(), BORDER(),
> MESSAGE() which recently Victor Szakats added. I also took some  
> Victor's
> comments.
> Victor I didn't take colors related functions and method because my
> tests shows that they are not as close to CA-Cl*pper as they should.
> I tried to make this TBROWSE class maximally compatible with CA- 
> Cl*pper
> but it's neither Harbour nor xHarbour compatible. Both old  
> implementations
> have some serious differences to Clipper.
> The order of instance variables in new TBROWSE class is compatible
> with Clipper so it should be compatible also with the code which
> directly manipulates them using array indexes (not suggested but
> I've seen such code).
> The final code is a little bit smaller then current Harbour
> implementation and much smaller then xHarbour one though it address
> some things which were not implemented so far at all.
> There are still some minor differences to Clipper I know though most
> of them is intentional and probably you should not detect them in
> normal usage. Two minor things should be fixed yet and I'll do that
> in some spare time. Deeper tests shows that most of core TBROWSE code
> is written in C and it can be seen in used algorithms (f.e. some data
> which are calculated online and .prg implementation have to cause some
> serious speed overhead) and bugs like wrong casting and missing
> protection against buffer overflow. Because it's possible that many
> of you will want to create your own TBROWSE classes inheriting from
> the original one then I decided to keep whole code in .prg files
> without any C stuff. Anyhow if you look at some data structures and
> functions/methods then you will find that it will be much easier to
> write it in C.
> I've never used TBROWSE with Clipper so I cannot test it as well as
> I'd like. But I have some not mine Clipper's code which extensively
> uses TBROWSE and so far I was not able to port it to [x]Harbour due
> to some wrong visual effects. With this new class it works without
> any problems.
> If possible then I would like to ask all of you to make tests with
> this new class and your code. It will be the best if you have some
> original Clipper code not updated to work also with Harbour or  
> xHarbour.
> If sth will be wrong then please inform me.
> If all will work correctly then I'll replace current code with the new
> one before release.
> Now I'm returning to whatsnew.txt ;-)
>
> best regards,
> Przemek
> <tbrowse.prg.gz>_______________________________________________
> Harbour mailing list
> Harbour@harbour-project.org
> http://lists.harbour-project.org/mailman/listinfo/harbour

From mbelgrano at deltain.it  Sat Apr 12 11:09:13 2008
From: mbelgrano at deltain.it (Massimo Belgrano)
Date: Sun Apr 13 16:59:30 2008
Subject: [Harbour] Build Problem in BCC
In-Reply-To: <413027.65861.qm@web31102.mail.mud.yahoo.com>
References: <413027.65861.qm@web31102.mail.mud.yahoo.com>
Message-ID: <AFB948164110ED43B5EB849E8DEEF03815EB27@SRV02.deltain.net>

I don't receive any error compiling Harbour with bcc
Try a full clean 
make_b32_ALL CLEAN

From: harbour-bounces@harbour-project.org [mailto:harbour-bounces@harbour-project.org] On Behalf Of Jerry Finuliar
Sent: Friday, April 11, 2008 7:50 AM
To: harbour@harbour-project.org
Subject: [Harbour] Build Problem in BCC

I been offline for a couple of weeks and after I update my working copy I get this error.
D:\harbour>call make_b32.bat
TLIB? Version 2.0?? Copyright (c) 1987, 1988 Borland International
Warning: unknown command line switch 'P' ignored
Error: unexpected char '3' in command line

__________________________________________________
Do You Yahoo!?
Tired of spam? Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
From harbour.01 at syenar.hu  Sun Apr 13 14:03:47 2008
From: harbour.01 at syenar.hu (=?iso-8859-2?Q?Szak=E1ts_Viktor?=)
Date: Mon Apr 14 15:23:22 2008
Subject: [Harbour] CHANGELOG: 2008-04-13 19:19 UTC+0100 Viktor Szakats
 (harbour.01 syenar hu)
Message-ID: <01c89d90$Blat.v2.6.2$b8a6981a$1a1c7b7ba540@127.0.0.1>

2008-04-13 19:19 UTC+0100 Viktor Szakats (harbour.01 syenar hu)
   * common.mak
   + utils/hbtest/rt_main.h
   + utils/hbtest/rt_miscc.c
   * utils/hbtest/rt_str.prg
   * utils/hbtest/Makefile
   * hbtest/make_c5x.bat
   * hbtest/make_xpp.bat
     + Added light framework to implement C level regression tests.
     + Added regression tests for some incompatible Str() conversions.
       TOFIX: The problem seems to be in hb_retnl() (and friends, 
              presumably) where in C5x the internal width gets 
              modified to 20 when certain value is reached (+/-1000000000), 
              while in Harbour the length stays 10.
              I tried to do the same test using Item API, but I got 
              so strange results in C, that I finally dropped it.
     + Added optional C compilation using MSC for CA-Cl*pper 
       build batch file.
     + Added better support to compile the test suite under C5.3.
       Caller will need to use "set HB_COMPAT_C53=1" for this mode.

   * utils/hbtest/rt_array.prg
     ! Corrected some (ASize()) expected results when not in 5.3 mode.

   * utils/hbtest/rt_str.prg
     + Added comments for some erroneous C5.3 'Str(Val())' results.

   * utils/hbtest/rt_math.prg
     ! Corrected expected C5.2/5.3 result for 'MOD()'.
       TOFIX: The Harbour result is different, and in contrary to 
              C5.x it won't allow to substitue values from the 
              error handler, when wrong types were passed initially, 
              which is IMO a bug.

   * utils/hbtest/rt_misc.prg
     ! Some results synced with C5.x (where the result could be 
       "explained"), two marked as buggy/questionable.
     ! Two strange Harbour-synced results swapped for the somewhat 
       more meaningful C5.x ones.
     + Added some more strange date conversion tests.
     ; All these could be fixed in Harbour to give the exact same 
       C5.x values even for these strange inputs, but it's by no 
       means a priority.

   * source/rtl/transfrm.c
     ! FoxPro/XPP feature guarded with HB_COMPAT_FOXPRO || HB_COMPAT_XPP,
       meaning that it stays enabled by default because of HB_COMPAT_XPP.

   * contrib/rddads/make_b32.bat
   * contrib/rddads/make_vc.bat
     ! Fixed the dir precedence when looking for ace32.dll.
--
Brgds,
Viktor

From harbour.01 at syenar.hu  Sun Apr 13 16:27:18 2008
From: harbour.01 at syenar.hu (=?iso-8859-2?Q?Szak=E1ts_Viktor?=)
Date: Mon Apr 14 19:12:09 2008
Subject: [Harbour] CHANGELOG: 2008-04-13 22:16 UTC+0100 Viktor Szakats
 (harbour.01 syenar hu)
Message-ID: <01c89da4$Blat.v2.6.2$c515ed08$18fcbbba9338@127.0.0.1>

2008-04-13 22:16 UTC+0100 Viktor Szakats (harbour.01 syenar hu)
   * utils/hbtest/make_c5x.bat
   * utils/hbtest/hbtest.prg
   * utils/hbtest/rt_miscc.c
   * utils/hbtest/rt_misc.prg
     - Removed dependency on hbclip.
     + Added proper C version of hb_SToD() for C5.x compiles.
       (Needs MSC)
     ! Refixed hb_SToD() results messed up in my previous 
       commit. Sorry for the confusion, Harbour was perfectly 
       100% compatible, the reference values were wrong in 
       default HBTEST for CA-Cl*pper.
     + Disabling hb_SToD() tests with invalid input values 
       for CA-Cl*pper in case there was no C compiler available 
       when building HBTEST. This is to avoid any invalid 
       results (due to the .prg version of hb_SToD() and to 
       avoid confusions such as above.
--
Brgds,
Viktor

From harbour.01 at syenar.hu  Sun Apr 13 19:48:40 2008
From: harbour.01 at syenar.hu (=?iso-8859-2?Q?Szak=E1ts_Viktor?=)
Date: Tue Apr 15 00:33:33 2008
Subject: [Harbour] CHANGELOG: 2008-04-14 01:40 UTC+0100 Viktor Szakats
 (harbour.01 syenar hu)
Message-ID: <01c89dc0$Blat.v2.6.2$e678e646$162cdce093c0@127.0.0.1>

2008-04-14 01:40 UTC+0100 Viktor Szakats (harbour.01 syenar hu)
   * source/rtl/tbcolumn.prg
     + TBColumn() instance variable ordering in class definition 
       made CA-Cl*pper compatible, so that it's now possible to 
       access object vars as array elements the same way.
       Read-only access is strongly recommended when using this 
       unofficial access method, and the practice is overall 
       discouraged.
--
Brgds,
Viktor

From lkrausem at shaw.ca  Sun Apr 13 20:15:49 2008
From: lkrausem at shaw.ca (Luis Krause Mantilla)
Date: Tue Apr 15 01:13:51 2008
Subject: [Harbour] Build Problem in BCC
In-Reply-To: <413027.65861.qm@web31102.mail.mud.yahoo.com>
References: <413027.65861.qm@web31102.mail.mud.yahoo.com>
Message-ID: <4802A235.2030909@shaw.ca>

Jerry:

Make sure you're using Bison 2.1.  I seem to recall you get
that error if using an older version of Bison (you can find it
in Sourceforge.net).

Regards,

Jerry Finuliar wrote:
> I been offline for a couple of weeks and after I update my working 
> copy I get this error.
> D:\harbour>call make_b32.bat
> TLIB  Version 2.0   Copyright (c) 1987, 1988 Borland International
> Warning: unknown command line switch 'P' ignored
> Error: unexpected char '3' in command line
>
> __________________________________________________
> Do You Yahoo!?
> Tired of spam? Yahoo! Mail has the best spam protection around
> http://mail.yahoo.com
> ------------------------------------------------------------------------
>
> _______________________________________________
> Harbour mailing list
> Harbour@harbour-project.org
> http://lists.harbour-project.org/mailman/listinfo/harbour
>   

-- 
Luis Krause Mantilla
lkrausem at shaw dot ca
luis_krause at hotmail dot com
"May the Source be with GNU"


From wangshuming01 at gmail.com  Sun Apr 13 20:52:54 2008
From: wangshuming01 at gmail.com (wang shuming)
Date: Tue Apr 15 01:55:37 2008
Subject: [Harbour] TOleAuto(): 1 will read as 1.00
Message-ID: <c26b21640804131752y5d9aef94p67cd3d96514b93c3@mail.gmail.com>

Hi,
 excel file, cell type normal .
  itemid  qty
   001     1
   002     1
   010     8

  oExcel := TOleAuto():New( "Excel.Application" )
        oExcel:WorkBooks:Open(ALLTRIM(cfile))
        oSheet := oExcel:ActiveSheet()
?   oSheet:Cells(2,1):Value
//1.00

?   oSheet:Cells(2,1):Value
//2.00

?   oSheet:Cells(3,1):Value
//10.00
Best regards!

Shuming Wang
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.harbour-project.org/pipermail/harbour/attachments/20080414/299a171a/attachment.html
From eghorbino at yahoo.com  Tue Apr 15 19:38:46 2008
From: eghorbino at yahoo.com (Edmer)
Date: Tue Apr 15 19:38:49 2008
Subject: [Harbour] OrdSkipUnique of ADS 9
Message-ID: <16597247.post@talk.nabble.com>


Hi Gurus,

Would it be possible that Harbour could detect if we are using ADS ver 9.x 
and if so, Could it use the new AdsSkipUnique API of ADS 9 when we invoke 
the OrdSkipUnique() function. Just a thought.

Cheers to all,
Ed

-- 
View this message in context: http://www.nabble.com/Re%3A-OrdSkipUnique-of-ADS-9-tp16597247p16597247.html
Sent from the Harbour - Dev mailing list archive at Nabble.com.

From eghorbino at yahoo.com  Tue Apr 15 19:39:17 2008
From: eghorbino at yahoo.com (Edmer)
Date: Tue Apr 15 19:39:21 2008
Subject: [Harbour] ADORDD
Message-ID: <16599296.post@talk.nabble.com>


What is the equivalent function for DbSeek() in ADORDD.

Thanks,
Ed

-- 
View this message in context: http://www.nabble.com/Re%3A-ADORDD-tp16599296p16599296.html
Sent from the Harbour - Dev mailing list archive at Nabble.com.

From peter.sulyok at creditexpress.hu  Wed Apr 16 04:21:04 2008
From: peter.sulyok at creditexpress.hu (=?iso-8859-2?Q?Sulyok_P=E9ter?=)
Date: Wed Apr 16 04:21:27 2008
Subject: [Harbour] Problem width the connect method of tsmtp class
Message-ID: <002f01c89f9a$d0459460$eb01000a@CE0021>

Hy Developers!

I use a harbour 0.99.3 Beta compiler under the winxp.
If i like connect to an smtp server, than the connect method result error.
If i try connect width an older harbour, than the connect is correct.
I need to harbour 0.99.3 or later version, because i use an adordd modul, that the older versions haven't got.
But i cannot send a mail width smtp.
Any idea?

Brgds:


            Peti

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.harbour-project.org/pipermail/harbour/attachments/20080416/6a7e97f3/attachment.html
From mbelgrano at deltain.it  Wed Apr 16 06:41:46 2008
From: mbelgrano at deltain.it (Massimo Belgrano)
Date: Wed Apr 16 06:41:59 2008
Subject: [Harbour] OrdSkipUnique of ADS 9
In-Reply-To: <16597247.post@talk.nabble.com>
References: <16597247.post@talk.nabble.com>
Message-ID: <AFB948164110ED43B5EB849E8DEEF03815EB40@SRV02.deltain.net>

With ads if you have a program that access to v9 and v8 you must use
client v8 ant can't use the new feature of v9 because you application is
linked with v8
Also in harbour is statically linked and you must use
#define ADS_REQUIRE_VERSION 8
So I suggest use conditional code with 
#if ADS_REQUIRE_VERSION >= 6
And finally made two executable one for v8 and one for v9
  

-----Original Message-----
From: harbour-bounces@harbour-project.org
[mailto:harbour-bounces@harbour-project.org] On Behalf Of Edmer
Sent: Wednesday, April 16, 2008 1:39 AM
To: harbour@harbour-project.org
Subject: Re: [Harbour] OrdSkipUnique of ADS 9


Hi Gurus,

Would it be possible that Harbour could detect if we are using ADS ver
9.x 
and if so, Could it use the new AdsSkipUnique API of ADS 9 when we
invoke 
the OrdSkipUnique() function. Just a thought.

Cheers to all,
Ed

-- 
View this message in context:
http://www.nabble.com/Re%3A-OrdSkipUnique-of-ADS-9-tp16597247p16597247.h
tml
Sent from the Harbour - Dev mailing list archive at Nabble.com.

_______________________________________________
Harbour mailing list
Harbour@harbour-project.org
http://lists.harbour-project.org/mailman/listinfo/harbour
From druzus at acn.waw.pl  Wed Apr 16 08:42:10 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Wed Apr 16 08:42:15 2008
Subject: [Harbour] 2008-04-16 14:41 UTC+0200 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <200804161242.m3GCgAq3006838@31-mo5-4.acn.waw.pl>

2008-04-16 14:41 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbclass.ch
    ! removed:
         MESSAGE <msgName> IS <mthName>
      used as synonym of:
         MESSAGE <msgName> METHOD <mthName>
      If someone was using the removed version then please update the
      code to MESSAGE ... METHOD ...
      The removed command has special meaning in Class(y) and it allow
      to define alternate names for existing messages. I'll add support
      for them in the future.

  * harbour/contrib/hbct/ctwin.c
    * added disabled code which is a workaround for some possible
      bad side effect caused by online shadow showing by CTWIN.

  * harbour/source/rtl/errorint.c
    ! fixed displaying internal error message

  * harbour/source/common/hbver.c
    * added "Rev." prefix to shown revision number

  * harbour/include/hbexprop.h
  * harbour/include/hbexprb.c
  * harbour/source/common/expropt1.c
  * harbour/source/common/expropt2.c
    + added hb_compExprReduceNegate()
    ! fixed wrong negate optimizations for platforms where HB_LONG_MAX
      is smaller then -HB_LONG_MIN, f.e. all x86 based CPUs.
    ! fixed setting the size in optimized negative numbers
    ! fixed some math optimizations to not use casting to double value
      when it's not necessary - when double precision is smaller then HB_LONG
      (f.e. on x86 it's 53 bits and HB_LONG has 64bit) such casting can damage
      up to 11 less significant bits in big 64 bit numbers.

  * harbour/source/rtl/hbinet.c
    * replaced MAKEWORD() macro with HB_MKWORD() to pacify BCC58 warnings

  * harbour/include/hbdefs.h
    + added #include <limits.h>
      It should hide some warnings related to redefined integer size constants
      Viktor if it will not help for BCC58 warnings then you will have to add
         #include <stdint.h>
      few lines below but please remember that older BCC version does not
      have it so check for the exact compiler version.
    ! changed macros which setting default numeric item size for more strict
      Clipper compatible mode. I'm not a fun of some Clipper behavior in
      calculating number size and I left some notes about it in hbdefs.h
      Anyhow this and some other modifications below should cover the
      differences you've found recently. Some things are not addressed by
      me intentionally, f.e. _itemPutNL() in Clipper always set size to 10
      without checking the maximum size so it's too small for values less
      then -999999999. Harbour compiler makes more compile time optimizations
      then Clipper. The formatting rules used by compiler are a little bit
      different then by VM so this can be source of some other differences
      to Clipper. I can easy create some examples. Harbour supports 64bit
      signed integers and Clipper doesn't. This is yet another situation
      when we may have different results then Clipper. Most of them can
      be hidden if we add new PCODE(s) for integer number with explicit
      size but I do not think it's such important to increase PCODE list.
      In few cases it will be necessary to disable some optimizations at
      all and I do not like it. In the future when I will be adding some
      new optimizations I also add compiler switch to disable/enable
      optimizations which can have such side effects for people who need
      strict formatting.

  * harbour/include/hbvmpub.h
  * harbour/source/common/hbstr.c
  * harbour/source/vm/hvm.c
  * harbour/source/vm/itemapi.c
  * harbour/source/rtl/round.c
    * updated for more Clipper compatible number formating using new macros

best regards
Przemek
From jfl at mafact.com  Wed Apr 16 09:11:00 2008
From: jfl at mafact.com (J. Lefebvre)
Date: Wed Apr 16 09:11:32 2008
Subject: [Harbour] 2008-04-16 14:41 UTC+0200 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <200804161242.m3GCgAq3006838@31-mo5-4.acn.waw.pl>
Message-ID: <5b2f9706.1c89fc3.1707d0.6045@mafact.com>

Hi Przemek,

About "MESSAGE <msgName> IS <mthName>" and to allow the same meaning as Class(y),
should'nt it be so simple as translating it to "MESSAGE <mthName> METHOD <msgName>".

Doing this, mthName will act as msgName, resulting in the creation of an alternate method Name.

Regards,

JF,

-----Message d'origine-----
De?: harbour-bounces@harbour-project.org [mailto:harbour-bounces@harbour-project.org] De la part de Przemyslaw Czerpak
Envoy??: mercredi 16 avril 2008 14:42
??: harbour@harbour-project.org
Objet?: [Harbour] 2008-04-16 14:41 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)

2008-04-16 14:41 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbclass.ch
    ! removed:
         MESSAGE <msgName> IS <mthName>
      used as synonym of:
         MESSAGE <msgName> METHOD <mthName>
      If someone was using the removed version then please update the
      code to MESSAGE ... METHOD ...
      The removed command has special meaning in Class(y) and it allow
      to define alternate names for existing messages. I'll add support
      for them in the future.

  * harbour/contrib/hbct/ctwin.c
    * added disabled code which is a workaround for some possible
      bad side effect caused by online shadow showing by CTWIN.

  * harbour/source/rtl/errorint.c
    ! fixed displaying internal error message

  * harbour/source/common/hbver.c
    * added "Rev." prefix to shown revision number

  * harbour/include/hbexprop.h
  * harbour/include/hbexprb.c
  * harbour/source/common/expropt1.c
  * harbour/source/common/expropt2.c
    + added hb_compExprReduceNegate()
    ! fixed wrong negate optimizations for platforms where HB_LONG_MAX
      is smaller then -HB_LONG_MIN, f.e. all x86 based CPUs.
    ! fixed setting the size in optimized negative numbers
    ! fixed some math optimizations to not use casting to double value
      when it's not necessary - when double precision is smaller then HB_LONG
      (f.e. on x86 it's 53 bits and HB_LONG has 64bit) such casting can damage
      up to 11 less significant bits in big 64 bit numbers.

  * harbour/source/rtl/hbinet.c
    * replaced MAKEWORD() macro with HB_MKWORD() to pacify BCC58 warnings

  * harbour/include/hbdefs.h
    + added #include <limits.h>
      It should hide some warnings related to redefined integer size constants
      Viktor if it will not help for BCC58 warnings then you will have to add
         #include <stdint.h>
      few lines below but please remember that older BCC version does not
      have it so check for the exact compiler version.
    ! changed macros which setting default numeric item size for more strict
      Clipper compatible mode. I'm not a fun of some Clipper behavior in
      calculating number size and I left some notes about it in hbdefs.h
      Anyhow this and some other modifications below should cover the
      differences you've found recently. Some things are not addressed by
      me intentionally, f.e. _itemPutNL() in Clipper always set size to 10
      without checking the maximum size so it's too small for values less
      then -999999999. Harbour compiler makes more compile time optimizations
      then Clipper. The formatting rules used by compiler are a little bit
      different then by VM so this can be source of some other differences
      to Clipper. I can easy create some examples. Harbour supports 64bit
      signed integers and Clipper doesn't. This is yet another situation
      when we may have different results then Clipper. Most of them can
      be hidden if we add new PCODE(s) for integer number with explicit
      size but I do not think it's such important to increase PCODE list.
      In few cases it will be necessary to disable some optimizations at
      all and I do not like it. In the future when I will be adding some
      new optimizations I also add compiler switch to disable/enable
      optimizations which can have such side effects for people who need
      strict formatting.

  * harbour/include/hbvmpub.h
  * harbour/source/common/hbstr.c
  * harbour/source/vm/hvm.c
  * harbour/source/vm/itemapi.c
  * harbour/source/rtl/round.c
    * updated for more Clipper compatible number formating using new macros

best regards
Przemek
_______________________________________________
Harbour mailing list
Harbour@harbour-project.org
http://lists.harbour-project.org/mailman/listinfo/harbour

From mbelgrano at deltain.it  Wed Apr 16 09:17:10 2008
From: mbelgrano at deltain.it (Massimo Belgrano)
Date: Wed Apr 16 09:17:17 2008
Subject: [Harbour] Problem width the connect method of tsmtp class
In-Reply-To: <002f01c89f9a$d0459460$eb01000a@CE0021>
References: <002f01c89f9a$d0459460$eb01000a@CE0021>
Message-ID: <AFB948164110ED43B5EB849E8DEEF03815EB46@SRV02.deltain.net>

Can you post a sample so I try?
Imo will be changed sequence of parameter in different version

From: harbour-bounces@harbour-project.org [mailto:harbour-bounces@harbour-project.org] On Behalf Of Sulyok P?ter
Sent: Wednesday, April 16, 2008 10:21 AM
To: harbour@harbour-project.org
Subject: [Harbour] Problem width the connect method of tsmtp class

Hy Developers!
?
I use a harbour 0.99.3 Beta compiler under the winxp.
If i like connect to an smtp server, than the connect method result error.
If i try connect width an older harbour, than the connect is correct.
I need to harbour 0.99.3 or later version, because i use an adordd modul, that the older versions haven't got.
But i cannot send a mail width smtp.
Any idea?
?
Brgds:
?
?
??? ??? ??? Peti
?
?
From harbour.01 at syenar.hu  Wed Apr 16 10:38:48 2008
From: harbour.01 at syenar.hu (=?ISO-8859-1?Q?Szak=E1ts_Viktor?=)
Date: Wed Apr 16 10:40:21 2008
Subject: [Harbour] 2008-04-16 14:41 UTC+0200 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <200804161242.m3GCgAq3006838@31-mo5-4.acn.waw.pl>
References: <200804161242.m3GCgAq3006838@31-mo5-4.acn.waw.pl>
Message-ID: <55EF4F7C-7D19-4EEA-A1D0-9B1732624656@syenar.hu>

>
Hey Przemek,

>  * harbour/include/hbdefs.h
>    + added #include <limits.h>
>      It should hide some warnings related to redefined integer size  
> constants
>      Viktor if it will not help for BCC58 warnings then you will  
> have to add
>         #include <stdint.h>
>      few lines below but please remember that older BCC version does  
> not
>      have it so check for the exact compiler version.

As per Andi's and your suggestion, I've included <stdint.h> #if  
__BORLANDC_ > 1410,
then the redefinition warnings indeed go, but these new ones appear:

Warning W8041 source\compiler\hbmain.c 3410: Negating unsigned value  
in function hb_compGenPushLong
Warning W8041 source\compiler\hbmain.c 3427: Negating unsigned value  
in function hb_compGenPushLong
Warning W8041 source\vm\macro.c 1199: Negating unsigned value in  
function hb_macroGenPushLong
Warning W8041 source\rtl\itemseri.c 281: Negating unsigned value in  
function hb_itemSerialSize
Warning W8041 source\rtl\itemseri.c 421: Negating unsigned value in  
function hb_serializeItem
Warning W8056 source\rdd\dbf1.c 2379: Integer arithmetic overflow in  
function hb_dbfPutValue
Warning W8041 source\rdd\dbf1.c 2386: Negating unsigned value in  
function hb_dbfPutValue
Warning W8056 source\rdd\dbf1.c 2398: Integer arithmetic overflow in  
function hb_dbfPutValue
Warning W8041 source\rdd\dbf1.c 2405: Negating unsigned value in  
function hb_dbfPutValue
Warning W8041 source\rdd\dbf1.c 2422: Negating unsigned value in  
function hb_dbfPutValue
Warning W8041 source\rdd\dbf1.c 2466: Negating unsigned value in  
function hb_dbfPutValue
Warning W8041 source\rdd\dbf1.c 2467: Negating unsigned value in  
function hb_dbfPutValue
Warning W8041 source\rdd\dbffpt\dbffpt1.c 1254: Negating unsigned  
value in function hb_fptCountSMTItemLength
Warning W8041 source\rdd\dbffpt\dbffpt1.c 1379: Negating unsigned  
value in function hb_fptStoreSMTItem
Warning W8041 source\rdd\dbffpt\dbffpt1.c 1704: Negating unsigned  
value in function hb_fptStoreSixItem
Warning W8041 source\rdd\dbffpt\dbffpt1.c 1905: Negating unsigned  
value in function hb_fptCountFlexItemLength
Warning W8041 source\rdd\dbffpt\dbffpt1.c 1981: Negating unsigned  
value in function hb_fptStoreFlexItem
Warning W8041 source\rdd\dbffpt\dbffpt1.c 3019: Negating unsigned  
value in function hb_fptPutMemo
Warning W8041 source\rdd\dbffpt\dbffpt1.c 3512: Negating unsigned  
value in function hb_fptPutVarField
Warning W8041 source\rdd\dbffpt\dbffpt1.c 3513: Negating unsigned  
value in function hb_fptPutVarField
Warning W8041 source\rdd\dbffpt\dbffpt1.c 3570: Negating unsigned  
value in function hb_fptPutVarField

>    ! changed macros which setting default numeric item size for more  
> strict
>      Clipper compatible mode. I'm not a fun of some Clipper behavior  
> in
>      calculating number size and I left some notes about it in  
> hbdefs.h
>      Anyhow this and some other modifications below should cover the
>      differences you've found recently. Some things are not  
> addressed by
>      me intentionally, f.e. _itemPutNL() in Clipper always set size  
> to 10
>      without checking the maximum size so it's too small for values  
> less
>      then -999999999. Harbour compiler makes more compile time  
> optimizations
>      then Clipper. The formatting rules used by compiler are a  
> little bit
>      different then by VM so this can be source of some other  
> differences
>      to Clipper. I can easy create some examples. Harbour supports  
> 64bit
>      signed integers and Clipper doesn't. This is yet another  
> situation
>      when we may have different results then Clipper. Most of them can
>      be hidden if we add new PCODE(s) for integer number with explicit
>      size but I do not think it's such important to increase PCODE  
> list.
>      In few cases it will be necessary to disable some optimizations  
> at
>      all and I do not like it. In the future when I will be adding  
> some
>      new optimizations I also add compiler switch to disable/enable
>      optimizations which can have such side effects for people who  
> need
>      strict formatting.

I would also vote for strict mode unless it has any undesired
side effects with regards to future expandability or development
possibilities.

I trust your judgment on these issues, and also many thanks for
the fixes.

[ Demagog story warning: This small difference caused my app to
actually not start at all, showing an invalid license. Once finding
the problem it was easy to fix with a few LTrim()s, but even
such a subtle detail can have this big effect. ]

Brgds,
Viktor

From druzus at acn.waw.pl  Wed Apr 16 10:42:26 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Wed Apr 16 10:42:32 2008
Subject: [Harbour] 2008-04-16 14:41 UTC+0200 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <5b2f9706.1c89fc3.1707d0.6045@mafact.com>
References: <200804161242.m3GCgAq3006838@31-mo5-4.acn.waw.pl>
	<5b2f9706.1c89fc3.1707d0.6045@mafact.com>
Message-ID: <20080416144226.GA17718@localhost.localdomain>

On Wed, 16 Apr 2008, J. Lefebvre wrote:
> Hi Przemek,
> About "MESSAGE <msgName> IS <mthName>" and to allow the same meaning as Class(y),
> should'nt it be so simple as translating it to "MESSAGE <mthName> METHOD <msgName>".

It was working in exactly such way and I disabled it because
in Class(y) it has different meaning.
   MESSAGE <msgName> METHOD <mthName>
redirects <msgName> to [<class>_]<mthName>() function in Harbour and Class(y).
   MESSAGE <msgName> IS <altName>

In Class(y) redirects <msgName> to message <altName> which can be inherited
from other parent classes and [<class>_]<mthName>() function does not have to
exist at all.

> Doing this, mthName will act as msgName, resulting in the creation of an alternate method Name.

Yes but it needs [<class>_]<mthName>() function so such redirecting can
be used only for messages which are locally defined methods. It means
that we need separate construction for MESSAGE ... IS ...
I left an example of such construction in the hbclass.ch code bu is
commented now for easier detecting the code which should be updated.
In the future I plan to add direct support for alternate messages in
our class code so it will not be necessary to use intermediate INLINE
code block like in the commented example.
BTW Please remember that [x]Harbour has support for function pointers and
for method which are simple functions we are using this pointers without
any other intermediate codeblocks. Class(y) always needs codeblock.
It means that in [x]Harbour function methods are executed faster because
it's not necessary to intermediate codeblock with additional self parameters
plus all other passed to message. So in Class(y) using BLOCK/INLINE methods
was a little bit faster because from codeblock code it was not necessary
to execute function. But it's not true in [x]Harbour. We have very fast
direct method function execution and using BLOCK/INLINE methods gives
slower code. Practice shows that most of users do not know about it.
now in our hbclass.ch code we are supporting some commands using internally
INLINE methods. In the future I plan to add direct support for most of
such construction to classy code to eliminate this overhead. Then we
will have messages defined by MESSAGE ... IS ... and also
ACCESS/ASSIGN ... IS ... working with the same speed as original methods.

best regards,
Przemek
From jfl at mafact.com  Wed Apr 16 11:03:00 2008
From: jfl at mafact.com (J. Lefebvre)
Date: Wed Apr 16 11:03:43 2008
Subject: [Harbour] 2008-04-16 14:41 UTC+0200 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <20080416144226.GA17718@localhost.localdomain>
Message-ID: <84f8d6a.1c89fd3.7dc43a.749@mafact.com>

OK, I understand and agree.

Regards,

JF,

-----Message d'origine-----
De?: harbour-bounces@harbour-project.org [mailto:harbour-bounces@harbour-project.org] De la part de Przemyslaw Czerpak
Envoy??: mercredi 16 avril 2008 16:42
??: Harbour Project Main Developer List.
Objet?: Re: RE: [Harbour] 2008-04-16 14:41 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)

On Wed, 16 Apr 2008, J. Lefebvre wrote:
> Hi Przemek,
> About "MESSAGE <msgName> IS <mthName>" and to allow the same meaning as Class(y),
> should'nt it be so simple as translating it to "MESSAGE <mthName> METHOD <msgName>".

It was working in exactly such way and I disabled it because
in Class(y) it has different meaning.
   MESSAGE <msgName> METHOD <mthName>
redirects <msgName> to [<class>_]<mthName>() function in Harbour and Class(y).
   MESSAGE <msgName> IS <altName>

In Class(y) redirects <msgName> to message <altName> which can be inherited
from other parent classes and [<class>_]<mthName>() function does not have to
exist at all.

> Doing this, mthName will act as msgName, resulting in the creation of an alternate method Name.

Yes but it needs [<class>_]<mthName>() function so such redirecting can
be used only for messages which are locally defined methods. It means
that we need separate construction for MESSAGE ... IS ...
I left an example of such construction in the hbclass.ch code bu is
commented now for easier detecting the code which should be updated.
In the future I plan to add direct support for alternate messages in
our class code so it will not be necessary to use intermediate INLINE
code block like in the commented example.
BTW Please remember that [x]Harbour has support for function pointers and
for method which are simple functions we are using this pointers without
any other intermediate codeblocks. Class(y) always needs codeblock.
It means that in [x]Harbour function methods are executed faster because
it's not necessary to intermediate codeblock with additional self parameters
plus all other passed to message. So in Class(y) using BLOCK/INLINE methods
was a little bit faster because from codeblock code it was not necessary
to execute function. But it's not true in [x]Harbour. We have very fast
direct method function execution and using BLOCK/INLINE methods gives
slower code. Practice shows that most of users do not know about it.
now in our hbclass.ch code we are supporting some commands using internally
INLINE methods. In the future I plan to add direct support for most of
such construction to classy code to eliminate this overhead. Then we
will have messages defined by MESSAGE ... IS ... and also
ACCESS/ASSIGN ... IS ... working with the same speed as original methods.

best regards,
Przemek
_______________________________________________
Harbour mailing list
Harbour@harbour-project.org
http://lists.harbour-project.org/mailman/listinfo/harbour

From druzus at acn.waw.pl  Wed Apr 16 11:23:25 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Wed Apr 16 11:23:35 2008
Subject: [Harbour] 2008-04-16 14:41 UTC+0200 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <55EF4F7C-7D19-4EEA-A1D0-9B1732624656@syenar.hu>
References: <200804161242.m3GCgAq3006838@31-mo5-4.acn.waw.pl>
	<55EF4F7C-7D19-4EEA-A1D0-9B1732624656@syenar.hu>
Message-ID: <20080416152325.GA17800@localhost.localdomain>

On Wed, 16 Apr 2008, Szak?ts Viktor wrote:

Hi Viktor,

> As per Andi's and your suggestion, I've included <stdint.h> #if  
> __BORLANDC_ > 1410,

Can you check the exact version from which BCC has stdint.h to
use >= instead of > ? 1410 is 5.82 so such limit will work for
BCC 5.83 and newer. Is it intentional?

> then the redefinition warnings indeed go, but these new ones appear:
> Warning W8041 source\compiler\hbmain.c 3410: Negating unsigned value  
> in function hb_compGenPushLong
> Warning W8041 source\compiler\hbmain.c 3427: Negating unsigned value  
> in function hb_compGenPushLong

It effects HB_LIM_INT32 macro. It uses INT32_MIN and INT32_MAX
defines and one of them is probably wrong defined in stdint.h.
Can you check their definitions in you stdint.h? It's also possible
that the warning is side effect of internal compiler casting just
like in MAKEWORD(). I can pacify it but it may hide some real problems
in the future so before I'll touch anything I'd like to know the exact
reasons so if possible I want to see INT32_MIN and INT32_MAX definitions
in your stdint.h and maybe some other later.
Is this BCC version freely available so I can download it and check.

best regards,
Przemek
From harbour.01 at syenar.hu  Wed Apr 16 11:43:44 2008
From: harbour.01 at syenar.hu (=?ISO-8859-2?Q?Szak=E1ts_Viktor?=)
Date: Wed Apr 16 11:45:24 2008
Subject: [Harbour] 2008-04-16 14:41 UTC+0200 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <20080416152325.GA17800@localhost.localdomain>
References: <200804161242.m3GCgAq3006838@31-mo5-4.acn.waw.pl>
	<55EF4F7C-7D19-4EEA-A1D0-9B1732624656@syenar.hu>
	<20080416152325.GA17800@localhost.localdomain>
Message-ID: <453AD429-CB6F-42EA-9BF3-16B24264BBCD@syenar.hu>

> On Wed, 16 Apr 2008, Szak?ts Viktor wrote:
>
> Hi Viktor,
>
>> As per Andi's and your suggestion, I've included <stdint.h> #if
>> __BORLANDC_ > 1410,
>
> Can you check the exact version from which BCC has stdint.h to
> use >= instead of > ? 1410 is 5.82 so such limit will work for
> BCC 5.83 and newer. Is it intentional?

Nope, just retype mistake.

BC++ 5.5.1 aka. "BCC55" stdint.h missing. __BORLANDC__ == 1361
BC++ 5.82  aka. "BCC58" stdint.h present. __BORLANDC__ == 1410

I have no other versions of 32bit BCC.

>> then the redefinition warnings indeed go, but these new ones appear:
>> Warning W8041 source\compiler\hbmain.c 3410: Negating unsigned value
>> in function hb_compGenPushLong
>> Warning W8041 source\compiler\hbmain.c 3427: Negating unsigned value
>> in function hb_compGenPushLong
>
> It effects HB_LIM_INT32 macro. It uses INT32_MIN and INT32_MAX
> defines and one of them is probably wrong defined in stdint.h.
> Can you check their definitions in you stdint.h? It's also possible
> that the warning is side effect of internal compiler casting just
> like in MAKEWORD(). I can pacify it but it may hide some real problems
> in the future so before I'll touch anything I'd like to know the exact
> reasons so if possible I want to see INT32_MIN and INT32_MAX  
> definitions
> in your stdint.h and maybe some other later.
> Is this BCC version freely available so I can download it and check.

Yes, it is, just a tad complicated to find it:
http://cc.codegear.com/free/turbo

To save you some rounds, here's stdint.h:

-----------------------------------------------------------------
#ifndef __STDINT_H
#define __STDINT_H

/* 7.18.1.1 Exact-width integer types */

typedef __int8 int8_t;
typedef __int16 int16_t;
typedef __int32 int32_t;
typedef __int64 int64_t;

typedef unsigned __int8 uint8_t;
typedef unsigned __int16 uint16_t;
typedef unsigned __int32 uint32_t;
typedef unsigned __int64 uint64_t;



/* 7.18.1.2 Minimum-width integer types */

typedef __int8 int_least8_t;
typedef __int16 int_least16_t;
typedef __int32 int_least32_t;
typedef __int64 int_least64_t;

typedef unsigned __int8 uint_least8_t;
typedef unsigned __int16 uint_least16_t;
typedef unsigned __int32 uint_least32_t;
typedef unsigned __int64 uint_least64_t;



/* 7.18.1.3 Fastest minimum-width integer types */

typedef __int8 int_fast8_t;
typedef __int16 int_fast16_t;
typedef __int32 int_fast32_t;
typedef __int64 int_fast64_t;

typedef unsigned __int8 uint_fast8_t;
typedef unsigned __int16 uint_fast16_t;
typedef unsigned __int32 uint_fast32_t;
typedef unsigned __int64 uint_fast64_t;



/* 7.18.1.4 Integer types capable of holding object pointers */

typedef int32_t intptr_t;
typedef uint32_t uintptr_t;



/* 7.18.1.5 Greatest-width integer types */

typedef int64_t intmax_t;
typedef uint64_t uintmax_t;



/* 7.18.2.1 Limits of exact-width integer types */

#define INT8_MIN ((int8_t) -128)
#define INT16_MIN ((int16_t) -32768)
#define INT32_MIN ((int32_t) -2147483648)
#define INT64_MIN ((int64_t) -9223372036854775808)

#define INT8_MAX ((int8_t) 127)
#define INT16_MAX ((int16_t) 32767)
#define INT32_MAX ((int32_t) 2147483647)
#define INT64_MAX ((int64_t) 9223372036854775807)

#define UINT8_MAX ((uint8_t) 255)
#define UINT16_MAX ((uint16_t) 65535)
#define UINT32_MAX ((uint32_t) 4294967295)
#define UINT64_MAX ((uint64_t) 18446744073709551615)



/* 7.18.2.2 Limits of minimum-width integer types */

#define INT_LEAST8_MIN ((int_least8_t) -128)
#define INT_LEAST16_MIN ((int_least16_t) -32768)
#define INT_LEAST32_MIN ((int_least32_t) -2147483648)
#define INT_LEAST64_MIN ((int_least64_t) -9223372036854775808)

#define INT_LEAST8_MAX ((int_least8_t) 127)
#define INT_LEAST16_MAX ((int_least16_t) 32767)
#define INT_LEAST32_MAX ((int_least32_t) 2147483647)
#define INT_LEAST64_MAX ((int_least64_t) 9223372036854775807)

#define UINT_LEAST8_MAX ((uint_least8_t) 255)
#define UINT_LEAST16_MAX ((uint_least16_t) 65535)
#define UINT_LEAST32_MAX ((uint_least32_t) 4294967295)
#define UINT_LEAST64_MAX ((uint_least64_t) 18446744073709551615)



/* 7.18.2.3 Limits of fastest minimum-width integer types */

#define INT_FAST8_MIN ((int_fast8_t) -128)
#define INT_FAST16_MIN ((int_fast16_t) -32768)
#define INT_FAST32_MIN ((int_fast32_t) -2147483648)
#define INT_FAST64_MIN ((int_fast64_t) -9223372036854775808)

#define INT_FAST8_MAX ((int_fast8_t) 127)
#define INT_FAST16_MAX ((int_fast16_t) 32767)
#define INT_FAST32_MAX ((int_fast32_t) 2147483647)
#define INT_FAST64_MAX ((int_fast64_t) 9223372036854775807)

#define UINT_FAST8_MAX ((uint_fast8_t) 255)
#define UINT_FAST16_MAX ((uint_fast16_t) 65535)
#define UINT_FAST32_MAX ((uint_fast32_t) 4294967295)
#define UINT_FAST64_MAX ((uint_fast64_t) 18446744073709551615)



/* 7.18.2.4 Limits of integer types capable of holding object pointers  
*/

#define INTPTR_MIN ((intptr_t) -32768)
#define INTPTR_MAX ((intptr_t) 32767)
#define UINTPTR_MAX ((intptr_t) 65535)



/* 7.18.2.5 Limits of greatest-width integer types */

#define INTMAX_MIN ((intmax_t) -9223372036854775808)
#define INTMAX_MAX ((intmax_t) 9223372036854775807)
#define UINTMAX_MAX ((uintmax_t) 18446744073709551615)



/* 7.18.3 Limits of other integer types */

#define PTRDIFF_MIN ((int32_t) -65536)
#define PTRDIFF_MAX ((int32_t) 65535)

#ifdef __STDC_LIMIT_MACROS
#define SIG_ATOMIC_MIN INT32_MIN
#define SIG_ATOMIC_MAX INT32_MAX
#endif

#define SIZE_MAX 65535

#ifdef __STDC_CONSTANT_MACROS
#define WCHAR_MIN INT16_MIN
#define WCHAR_MAX INT16_MAX
#define WINT_MIN INT16_MIN
#define WINT_MAX INT16_MAX
#endif



/* 7.18.4.1 Macros for minimum-width integer constants */

#define INT8_C(x) ((int8_t) x)
#define INT16_C(x) ((int16_t) x)
#define INT32_C(x) ((int32_t) x)
#define INT64_C(x) ((int64_t) x)

#define UINT8_C(x) ((uint8_t) x)
#define UINT16_C(x) ((uint16_t) x)
#define UINT32_C(x) ((uint32_t) x)
#define UINT64_C(x) ((uint64_t) x)



/* 7.18.4.2 Macros for greatest-width integer constants */

#define INTMAX_C(x) ((intmax_t) x)
#define UINTMAX_C(x) ((uintmax_t) x)

#endif /* __STDINT_H */
-----------------------------------------------------------------

Brgds,
Viktor

From druzus at acn.waw.pl  Wed Apr 16 19:41:02 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Wed Apr 16 19:41:08 2008
Subject: [Harbour] New TBROWSE
Message-ID: <20080416234102.GA24695@localhost.localdomain>

Hi All,

I'm attaching updated TBrowse code. There are 2 minor TODO notes in
the code but rest is addressed. I do not know about any problems with
this code but maybe I missed sth.
Please make tests. If you will find any problems or incompatibilities
to Clipper then please inform me.
If everything will be OK then I plan to commit it in next days.

best regards,
Przemek
-------------- next part --------------
A non-text attachment was scrubbed...
Name: tbrowse.prg.gz
Type: application/x-gzip
Size: 17244 bytes
Desc: not available
Url : http://lists.harbour-project.org/pipermail/harbour/attachments/20080417/bdef3763/tbrowse.prg.gz
From harbour.01 at syenar.hu  Wed Apr 16 21:46:27 2008
From: harbour.01 at syenar.hu (=?ISO-8859-2?Q?Szak=E1ts_Viktor?=)
Date: Wed Apr 16 21:48:02 2008
Subject: [Harbour] New TBROWSE
In-Reply-To: <20080416234102.GA24695@localhost.localdomain>
References: <20080416234102.GA24695@localhost.localdomain>
Message-ID: <60984D87-7443-4C26-BD31-EE3281C134FE@syenar.hu>

Hi Przemek,

I did some tests using rto_tb.prg, pls. find the fixes
applied to tbrowse.prg attached.

Shortly:
- ::freeze return value on assign made compatible
   when numeric, but out of range value was assigned.
- ::colSep, ::headSep, ::footSep, ::skipBlock,
   ::goTopBlock, ::goBottomBlock SETGETs added to
   replicate exact CA-Cl*pper behaviour. This way
   type checking is done by _eInstVar() instead of
   the class engine.

There are just three unexplained differences (amazing BTW)
when comparing the C53 and Harbour output of rto_tb.prg;
value of o:rowPos, where it is 2 in C53 and 1 in
Harbour after calls in line 214 (and 215, 216).
This is actually a pretty small test case there.

One minor issue I've noticed - which doesn't affect actual
functionality, AFAICS - is if you use BROWSE()
and you keep <PgDn> pressed on the first row, or <PgUp>
pressed on the last row, on a long database, you may notice
that the non-stable rows are being "scrolled" until the browse
gets enough time to stabilize (or you reach the other end
of the table). I can't really describe this in better words,
but you may see it if you compare C5x and Harbour in the above
situation. Probably just cosmetic stuff or some internal side
effect (or me seeing ghosts :).

I'll continue to do some more tests.

Brgds,
Viktor

-------------- next part --------------
A non-text attachment was scrubbed...
Name: tbrowse.prg.gz
Type: application/x-gzip
Size: 17579 bytes
Desc: not available
Url : http://lists.harbour-project.org/pipermail/harbour/attachments/20080417/5b3a5391/tbrowse.prg-0001.gz
-------------- next part --------------


On 2008.04.17., at 1:41, Przemyslaw Czerpak wrote:

> Hi All,
>
> I'm attaching updated TBrowse code. There are 2 minor TODO notes in
> the code but rest is addressed. I do not know about any problems with
> this code but maybe I missed sth.
> Please make tests. If you will find any problems or incompatibilities
> to Clipper then please inform me.
> If everything will be OK then I plan to commit it in next days.
>
> best regards,
> Przemek
> <tbrowse.prg.gz>_______________________________________________
> Harbour mailing list
> Harbour@harbour-project.org
> http://lists.harbour-project.org/mailman/listinfo/harbour

From harbour.01 at syenar.hu  Wed Apr 16 22:00:04 2008
From: harbour.01 at syenar.hu (=?iso-8859-2?Q?Szak=E1ts_Viktor?=)
Date: Wed Apr 16 22:02:14 2008
Subject: [Harbour] CHANGELOG: 2008-04-17 03:53 UTC+0100 Viktor Szakats
 (harbour.01 syenar hu)
Message-ID: <01c8a02e$Blat.v2.6.2$c0f750f4$1124a92d38dc@127.0.0.1>

2008-04-17 03:53 UTC+0100 Viktor Szakats (harbour.01 syenar hu)
   * include/hbextern.ch
   * source/rtl/errorapi.c
     + Added ERRORINHAN() (and alias ERRORINHANDLER()) CA-Cl*pper 
       compatible, undocumented function, guarded with HB_C52_UNDOC.
       Same as Harbour __ERRINHANDLER().

   * source/rtl/trim.c
   * source/rtl/strtran.c
     + Added strict branches for incompatible error messages.
     % Minor optimization in STRTRAN() parameter checking.

   * utils/hbtest/rt_str.prg
     + Reenabled two C53-only test calls.

   * include/hbdefs.h
     ! Minor indentation fix.

   * utils/hbdoc/hbdoc.prg
   * utils/hbdot/hbdot.prg
   * utils/hbmake/hbmake.prg
   * utils/hbpp/hbpp.c
   * utils/hbtest/hbtest.prg
   * utils/hbrun/hbrun.prg
     ! Year updated in copyright banners.
--
Brgds,
Viktor

From mbelgrano at deltain.it  Thu Apr 17 05:11:07 2008
From: mbelgrano at deltain.it (Massimo Belgrano)
Date: Thu Apr 17 05:11:24 2008
Subject: R: [Harbour] New TBROWSE
In-Reply-To: <20080416234102.GA24695@localhost.localdomain>
References: <20080416234102.GA24695@localhost.localdomain>
Message-ID: <AFB948164110ED43B5EB849E8DEEF03815EB4C@SRV02.deltain.net>

Will a GT transform TBROWSE in gui Element?

-----Messaggio originale-----
Da: harbour-bounces@harbour-project.org [mailto:harbour-bounces@harbour-project.org] Per conto di Przemyslaw Czerpak
Inviato: gioved? 17 aprile 2008 1.41
A: Harbour Project Main Developer List.
Oggetto: [Harbour] New TBROWSE

Hi All,

I'm attaching updated TBrowse code. There are 2 minor TODO notes in the code but rest is addressed. I do not know about any problems with this code but maybe I missed sth.
Please make tests. If you will find any problems or incompatibilities to Clipper then please inform me.
If everything will be OK then I plan to commit it in next days.

best regards,
Przemek
From sscc at mweb.co.za  Thu Apr 17 05:42:35 2008
From: sscc at mweb.co.za (Alex Strickland)
Date: Thu Apr 17 05:42:42 2008
Subject: R: [Harbour] New TBROWSE
In-Reply-To: <AFB948164110ED43B5EB849E8DEEF03815EB4C@SRV02.deltain.net>
References: <20080416234102.GA24695@localhost.localdomain>
	<AFB948164110ED43B5EB849E8DEEF03815EB4C@SRV02.deltain.net>
Message-ID: <48071B8B.8080504@mweb.co.za>

Massimo Belgrano wrote:

> Will a GT transform TBROWSE in gui Element?

Why don't you have a look at it? The short answer is "no".

Regards
Alex

From mbelgrano at deltain.it  Thu Apr 17 05:48:43 2008
From: mbelgrano at deltain.it (Massimo Belgrano)
Date: Thu Apr 17 05:48:49 2008
Subject: R: R: [Harbour] New TBROWSE
In-Reply-To: <48071B8B.8080504@mweb.co.za>
References: <20080416234102.GA24695@localhost.localdomain><AFB948164110ED43B5EB849E8DEEF03815EB4C@SRV02.deltain.net>
	<48071B8B.8080504@mweb.co.za>
Message-ID: <AFB948164110ED43B5EB849E8DEEF03815EB4D@SRV02.deltain.net>

I speak about future version sorry if  My bad English can made error
In a future version OF harbour/GT will tbrowse code be used IN GUI ... and WEB?

-----Messaggio originale-----
Da: harbour-bounces@harbour-project.org [mailto:harbour-bounces@harbour-project.org] Per conto di Alex Strickland
Inviato: gioved? 17 aprile 2008 11.43
A: Harbour Project Main Developer List.
Oggetto: Re: R: [Harbour] New TBROWSE

Massimo Belgrano wrote:

> Will a GT transform TBROWSE in gui Element?

Why don't you have a look at it? The short answer is "no".

Regards
Alex

_______________________________________________
Harbour mailing list
Harbour@harbour-project.org
http://lists.harbour-project.org/mailman/listinfo/harbour
From lorenzo.fiorini at gmail.com  Thu Apr 17 06:31:14 2008
From: lorenzo.fiorini at gmail.com (Lorenzo Fiorini)
Date: Thu Apr 17 06:31:25 2008
Subject: [Harbour] New TBROWSE
In-Reply-To: <20080416234102.GA24695@localhost.localdomain>
References: <20080416234102.GA24695@localhost.localdomain>
Message-ID: <9257026e0804170331vc33c32eob0ed3c950418589d@mail.gmail.com>

On Thu, Apr 17, 2008 at 1:41 AM, Przemyslaw Czerpak <druzus@acn.waw.pl> wrote:

>  I'm attaching updated TBrowse code. There are 2 minor TODO notes in
> ...
>  If everything will be OK then I plan to commit it in next days.

Many thanks, the issues I've reported before are fixed.

So far I don't see any stopper to commit it.

best regards,
Lorenzo
From harbour.01 at syenar.hu  Thu Apr 17 07:27:22 2008
From: harbour.01 at syenar.hu (=?iso-8859-2?Q?Szak=E1ts_Viktor?=)
Date: Thu Apr 17 07:29:37 2008
Subject: [Harbour] CHANGELOG: 2008-04-17 13:26 UTC+0100 Viktor Szakats
 (harbour.01 syenar hu)
Message-ID: <01c8a07e$Blat.v2.6.2$014502c4$159412a707f4@127.0.0.1>

2008-04-17 13:26 UTC+0100 Viktor Szakats (harbour.01 syenar hu)
   * common.mak
   * source/rtl/Makefile
   * source/rtl/defpath.c
   + source/rtl/defpathu.c
   * source/rtl/errorapi.c
   + source/rtl/errorapu.c
   * source/rtl/shadow.c
   + source/rtl/shadowu.c
     * Undocumented compatibility functions moved to separate files.

--
Brgds,
Viktor

From harbour.01 at syenar.hu  Thu Apr 17 07:57:10 2008
From: harbour.01 at syenar.hu (=?iso-8859-2?Q?Szak=E1ts_Viktor?=)
Date: Thu Apr 17 07:59:24 2008
Subject: [Harbour] CHANGELOG: 2008-04-17 13:46 UTC+0100 Viktor Szakats
 (harbour.01 syenar hu)
Message-ID: <01c8a082$Blat.v2.6.2$2af901b6$238a5ca4f92@127.0.0.1>

2008-04-17 13:46 UTC+0100 Viktor Szakats (harbour.01 syenar hu)
   * source/rtl/tget.prg
     * Formatting.

   * source/rtl/net.c
     ! Casting in DOS branch.
--
Brgds,
Viktor

From druzus at acn.waw.pl  Thu Apr 17 08:08:36 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Thu Apr 17 08:08:42 2008
Subject: [Harbour] New TBROWSE
In-Reply-To: <60984D87-7443-4C26-BD31-EE3281C134FE@syenar.hu>
References: <20080416234102.GA24695@localhost.localdomain>
	<60984D87-7443-4C26-BD31-EE3281C134FE@syenar.hu>
Message-ID: <20080417120836.GA25922@localhost.localdomain>

On Thu, 17 Apr 2008, Szak?ts Viktor wrote:

Hi Viktor,

> I did some tests using rto_tb.prg, pls. find the fixes
> applied to tbrowse.prg attached.

Thank you,

> Shortly:
> - ::freeze return value on assign made compatible
>   when numeric, but out of range value was assigned.

To be precis it should return INT( nColumns ) - I'll fix it.

> - ::colSep, ::headSep, ::footSep, ::skipBlock,
>   ::goTopBlock, ::goBottomBlock SETGETs added to
>   replicate exact CA-Cl*pper behaviour. This way
>   type checking is done by _eInstVar() instead of
>   the class engine.

Yes this will make error messages compatible with Clipper.
Though I'd like to keep type spec in this ivars. It's not
necessary to remove it and it may be usable in the future.

> There are just three unexplained differences (amazing BTW)
> when comparing the C53 and Harbour output of rto_tb.prg;
> value of o:rowPos, where it is 2 in C53 and 1 in
> Harbour after calls in line 214 (and 215, 216).
> This is actually a pretty small test case there.

I'll look at it.

> One minor issue I've noticed - which doesn't affect actual
> functionality, AFAICS - is if you use BROWSE()
> and you keep <PgDn> pressed on the first row, or <PgUp>
> pressed on the last row, on a long database, you may notice
> that the non-stable rows are being "scrolled" until the browse
> gets enough time to stabilize (or you reach the other end
> of the table). I can't really describe this in better words,
> but you may see it if you compare C5x and Harbour in the above
> situation. Probably just cosmetic stuff or some internal side
> effect (or me seeing ghosts :).

I did it and Clipper makes the same. I'm attaching a little bit
modified example which have delay in skip block to illustrate it.
Try it in Clipper and new TBrowse code. You will see that old
rows are shown they will not be overload. There is also one small
difference in scrolling which I should fix. CA-Clipper sets default
color to TBrowse colors so it's not the empty area after scrolling
is field with standard TBrowse color (W+/R) and in new code it's
default color (W/N). I'll change it. In this test you can also see
two things I haven't replicated intentionally.
1-st is missing protection against invalidating row buffer when
view are decrease during working. Run the test, wait a while for
stabilization and then thi SPACE to decrease number of rows to 6
and PGDN to see what CL53 will do. As you can see the unexisting
rows are still visible and as long as you will not jump to top
or bottom TBrowse will not refresh them.
2-nd is sth what I do not understand. Looks like some typo or
unfinished code to detect some changes. Only CL53 does it and
makes it regularly in all my tests. Run the test, wait for
stabilization and look at value in col2 row5. It will be 5 at
startup. Then make any operation which will force header redrowing,
f.e. freeze some column using 0,1,2,3 or move left/right to force
horizontal scrolling. You will see that all such operation causes
that CL53 moves to row 5 and reload it and then moves back to previous
position. CL52 does not make anything like that. I do not know what it
is and why it does it. It looks like some internal TBrowse code
invalidate unintentionally this row and tbrowse has to refresh it.
CL53 alwys make it and the refreshed row number may change depending
on the rowcount and it's about rowcount / 3 + 1. Maybe I'm wrong but
it looks for me like unintentional overloading memory byte where
status of row is hold what makes it invalid.
At the beginning I thought that it may be some type of changes detecting
for automatic refreshing but it does not help in the trick with SPACE
in this tests - change in source code the reduced rowcount to 3 and you
will see that only the row 5 is invalidated.
I do not plan to replicate it but please remember about it in TBrowse
tests. This may cause some unpredictable results.

> I'll continue to do some more tests.

Thank you very much.

best regards,
Przemek
-------------- next part --------------
#include "inkey.ch"
#include "button.ch"
#include "setcurs.ch"
#include "box.ch"

proc main()

   static s_nCount := 0
   static s_nPos   := 1
   static s_nSize  := 100

   local nTop, nLeft, nBottom, nRight
   local cColor
   local oBrw, oCol1, oCol2, oCol3, oCol4, oCol5
   local nKey, nCol

   nTop    := 2
   nLeft   := 10
   nBottom := 20
   nRight  := 70
   cColor  := "W+/R,G+/BR,RG+/B,BG+/G,N/GR,GR+/BG,B/GR*"

   set date format to "yyyy/mm/dd"

   // enable mouse events in CL53/Harbour
   set( _SET_EVENTMASK, INKEY_ALL )
   mSetCursor( .t. )

   cls
   dispBox( nTop, nLeft, nBottom, nRight, B_DOUBLE_SINGLE, cColor )
   dispOutAt( nTop + 3,    nLeft,  "?", cColor )
   dispOutAt( nTop + 3,    nRight, "?", cColor )
   dispOutAt( nBottom - 2, nLeft,  "?", cColor )
   dispOutAt( nBottom - 2, nRight, "?", cColor )

   oBrw := tbrowseNew( nTop + 1, nLeft + 1, nBottom - 1, nRight - 1 )

   oBrw:colorSpec( cColor )
   oBrw:headSep := "? ??"
   oBrw:footSep := "? ??"
   oBrw:colSep  := "? ?"

   oBrw:SkipBlock     := { | n | delay(0.2), ;
                           n := iif( n < 0, max( n, 1 - s_nPos ), ;
                                            min( s_nSize - s_nPos, n ) ), ;
                                 s_nPos += n, n }
   oBrw:GoTopBlock    := { || s_nPos := 1 }
   oBrw:GoBottomBlock := { || s_nPos := s_nSize }

   oCol1 := tbColumnNew( "COL;1;", {|| s_nPos } )
   oCol1:defColor := { 2, 1, 3, 4 }
   oCol1:footing := "position"
   oCol1:colorBlock := {|val| { val % 5 + 1, val % 3 + 2 } }

   oCol2 := tbColumnNew( "COL;2",  {|| s_nCount++ } )
   oCol2:defColor := { 3, 4, 5, 6 }
   oCol2:footing := "counter"
   oCol2:headSep := "? ???HIDE??"

   oCol3 := tbColumnNew( "COL 3",  {|| s_nPos % 3 == 0 } )
   oCol3:defColor := { 5, 6, 2, 3 }
   oCol3:footing := "logical"
   oCol3:picture := "@YR [Y]"  // Clipper wrongly calculate the size here
   oCol3:headSep := "? ???HIDE??"
   oCol3:footSep := "? ??"
   oCol3:colSep  := "? ?"

   oCol4 := tbColumnNew( "   SHOW;   ALL",  {|| date() - s_nPos} )
   oCol4:defColor := { 6, 3, 4, 2 }
   oCol4:footing := "date"

   oCol5 := tbColumnNew( "COL;5",  {|| VERSION() } )
   oCol5:defColor := { 6, 3, 4, 2 }
   oCol5:footing := "string"
   oCol5:width := 20

   oBrw:addColumn( oCol1 )
   oBrw:addColumn( oCol2 )
   oBrw:addColumn( oCol3 )
   oBrw:addColumn( oCol4 )
   oBrw:addColumn( oCol5 )

   // start at bottom
   // oBrw:goBottom()

   while .T.
      while !oBrw:stabilize() .and. nextkey()==0
      enddo
      nKey := inkey( 0 )
      if nKey == K_ESC
         exit
      elseif nKey == K_SPACE
         s_nSize := 6
      elseif nKey == K_INS
         oBrw:colorRect( { oBrw:rowPos, 1, oBrw:rowPos, 4 }, { 7, 6 } )
      elseif nKey == K_DEL
         oBrw:refreshCurrent()
      elseif nKey >= ASC( "0" ) .AND. nKey <= ASC( "3" )
         oBrw:freeze := nKey - ASC( "0" )
      elseif nKey == K_LBUTTONDOWN .and. ;
             oBrw:hitTest(mRow(),mCol()) == HTHEADSEP .and. ;
             ( ( nCol := oBrw:mColPos ) == 2 .or. nCol == 3 )
         if nCol == 2
            oCol2:width := 0
         else
            oCol3:width := 0
         endif
         oBrw:configure()
      elseif nKey == K_LBUTTONDOWN .and. ;
             oBrw:hitTest(mRow(),mCol()) == HTHEADING .and. ;
             oBrw:mColPos == 4
         oCol2:width := 10
         oCol3:width := 7
         oBrw:configure()
      else
         oBrw:applyKey( nKey )
      endif
   enddo

return

proc delay(n)
   n+=seconds()
   while seconds()<n; enddo
return
From druzus at acn.waw.pl  Thu Apr 17 09:22:12 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Thu Apr 17 09:22:18 2008
Subject: [Harbour] New TBROWSE
In-Reply-To: <20080417120836.GA25922@localhost.localdomain>
References: <20080416234102.GA24695@localhost.localdomain>
	<60984D87-7443-4C26-BD31-EE3281C134FE@syenar.hu>
	<20080417120836.GA25922@localhost.localdomain>
Message-ID: <20080417132212.GA26957@localhost.localdomain>

On Thu, 17 Apr 2008, Przemyslaw Czerpak wrote:

Hi Viktor,

> > There are just three unexplained differences (amazing BTW)
> > when comparing the C53 and Harbour output of rto_tb.prg;
> > value of o:rowPos, where it is 2 in C53 and 1 in
> > Harbour after calls in line 214 (and 215, 216).
> > This is actually a pretty small test case there.
> I'll look at it.

The answer is very simple.
Clipper keeps internally rowpos as offset from top line and
when you access this value using :rowpos method it returns it
decreased by header size. When you add column the internal
rowpos is updated and header size is added to internal rowpos
variable. But when you delete column Clipper does not properly
update it removing the reduced header size. Change in this test
heading to "test;01h" and you will see that rowpos becomes 3.
It's a bug which is also the reason of not shown last foot line
in VV1.PRG you sent to me when column does not have foot separator
and there is no global foot separator but other columns have it.
The internal row position for beginning of footing area (footsep
and/or footing) is wrongly calculated because it does not respect
foot separators introduced by other columns so later when it's
shown there in no place to display last footing line.
I do not want to replicate it.

best regards,
Przemek
From lorenzo.fiorini at gmail.com  Thu Apr 17 11:55:30 2008
From: lorenzo.fiorini at gmail.com (Lorenzo Fiorini)
Date: Thu Apr 17 11:55:37 2008
Subject: [Harbour] Debugger and class hidden scope
Message-ID: <9257026e0804170855r1d56466je766522820d11908@mail.gmail.com>

We told about this time ago.

This is what we get inspecting a tbrowse object:
Error BASE/41  Scope violation (hidden): TBROWSE:ACELLCOLORS
Called from TBROWSE:ACELLCOLORS(0)
Called from __OBJSENDMSG(0)
Called from __OBJGETVALUELIST(170)
Called from HBDBOBJECT:NEW(84)
...

Any workaround?

best regards,
Lorenzo
From phil at newstar.rinet.ru  Thu Apr 17 13:34:48 2008
From: phil at newstar.rinet.ru (Phil Krylov)
Date: Thu Apr 17 13:34:57 2008
Subject: [Harbour] Debugger and class hidden scope
In-Reply-To: <9257026e0804170855r1d56466je766522820d11908@mail.gmail.com>
References: <9257026e0804170855r1d56466je766522820d11908@mail.gmail.com>
Message-ID: <c10dbf450804171034y289fc9b0w9d5e6e76dd2fdc4c@mail.gmail.com>

Hi,

On 17/04/2008, Lorenzo Fiorini <lorenzo.fiorini@gmail.com> wrote:
> We told about this time ago.
>
>  This is what we get inspecting a tbrowse object:
>  Error BASE/41  Scope violation (hidden): TBROWSE:ACELLCOLORS
>  Called from TBROWSE:ACELLCOLORS(0)
>  Called from __OBJSENDMSG(0)
>  Called from __OBJGETVALUELIST(170)
>  Called from HBDBOBJECT:NEW(84)
>  ...
>
>  Any workaround?

In xHarbour, this is solved using __SetClassScope() function which
temporarily disables class message scopes while in debugger. In
Harbour, it's #ifdef'ed out in debugger.prg because there's no such
function in Harbour. I don't know if it can be easily solved in
current Harbour's class engine.

-- Ph.
From druzus at acn.waw.pl  Thu Apr 17 14:56:01 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Thu Apr 17 14:56:08 2008
Subject: [Harbour] Debugger and class hidden scope
In-Reply-To: <c10dbf450804171034y289fc9b0w9d5e6e76dd2fdc4c@mail.gmail.com>
References: <9257026e0804170855r1d56466je766522820d11908@mail.gmail.com>
	<c10dbf450804171034y289fc9b0w9d5e6e76dd2fdc4c@mail.gmail.com>
Message-ID: <20080417185601.GA5112@localhost.localdomain>

On Thu, 17 Apr 2008, Phil Krylov wrote:
> On 17/04/2008, Lorenzo Fiorini <lorenzo.fiorini@gmail.com> wrote:
> > We told about this time ago.
> >  This is what we get inspecting a tbrowse object:
> >  Error BASE/41  Scope violation (hidden): TBROWSE:ACELLCOLORS
> >  Called from TBROWSE:ACELLCOLORS(0)
> >  Called from __OBJSENDMSG(0)
> >  Called from __OBJGETVALUELIST(170)
> >  Called from HBDBOBJECT:NEW(84)
> >  ...
> >  Any workaround?
> In xHarbour, this is solved using __SetClassScope() function which
> temporarily disables class message scopes while in debugger. In
> Harbour, it's #ifdef'ed out in debugger.prg because there's no such
> function in Harbour. I don't know if it can be easily solved in
> current Harbour's class engine.

Such functionality like in xHarbour can be added in few lines but
it does not resolve the problem. In Harbour you have support for
real private variables and methods. It means that child classes
can have it's own messages with the same name as hidden messages
in parents but it does not effect parent class code. When it calls
one of such hidden messages then its own version is executed. It
means that the same class can have more messages with the same name
inherited from parents. If you disable scoping then only the last
child message will be visible. xHarbour does not have such functionality
at all and you can disable scoping at anytime. In fact they are not
work as they should even enabled.
If you want to see how it works in Harbour then please try tests/clsnv.prg
It's very important feature. It means that working in a team you do not
have to worry about name conflicts because all hidden messages belongs
only to the owner and it's guarantied that they will not be effected by
other messages with the same name which can appear in child or parent
classes.
The debugger is executing .prg functions which change execution context
and classes code forbids to access hidden and protected messages.
To really resolve the problem (without disabling scoping) we will need
some mechanism to change current execution context to the code actually
debugged before sending messages. I can write function which will do that
but I need to know which functionality you need. It will be also usable
in any OOP debugging because scopes will still work just like in normal
code.
In tests/clsscope.prg you can find test code which tests OOP scoping.
You can try it also in xHarbour but you will have to divide classes
in this file into separated .obj modules because xHarbour uses symbol
table for scope checking instead of real stack execution context so
it cannot work for the code which uses the same symbol table.

best regards,
Przemek
From druzus at acn.waw.pl  Thu Apr 17 15:37:37 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Thu Apr 17 15:37:43 2008
Subject: [Harbour] New TBROWSE
In-Reply-To: <004b01c8a02a$34aa3660$0303a8c0@hbco>
References: <20080416234102.GA24695@localhost.localdomain>
	<004b01c8a02a$34aa3660$0303a8c0@hbco>
Message-ID: <20080417193737.GA10503@localhost.localdomain>

On Wed, 16 Apr 2008, Bill Smith wrote:

Hi Bill,

I sent any message to your return address so I'm answering here.

> I have a short test program which initially illustrated a minor problem with
> scrolling using TBrowse in the Windows environment.
[...]

Thank you very much for tests. I cannot replicate exactly the problem
you have but I've found two bugs in positioning.
1. PGUP/PGDOWN when not executed from first/last visible row was
   moving the cursors two far
2. PGUP/PGDOWN executed during refreshing was not respecting current
   position in the buffer end was scrolling database less then necessary
I also cleaned unpleasure visual effect when browse standard color was
different then default background color used to erase empty screen area
after scroll(). Clipper uses browse colors instead of current colors set
by setColor() function.
It also uses HB_CLS_NOTOBJECT to keep original error messages from
classy/HVM code which are Clipper compatible to make Viktor more happy
when using rto_tb.prg test ;-) (BTW very nice helper tool to test some
tbrowse behavior)

Maybe above resolves the problem you noticed.
I'm attaching fixed code.

best regards,
Przemek
-------------- next part --------------
A non-text attachment was scrubbed...
Name: tbrowse.prg.gz
Type: application/x-gzip
Size: 17645 bytes
Desc: not available
Url : http://lists.harbour-project.org/pipermail/harbour/attachments/20080417/f5026402/tbrowse.prg-0001.gz
From harbour.01 at syenar.hu  Thu Apr 17 17:29:00 2008
From: harbour.01 at syenar.hu (=?ISO-8859-2?Q?Szak=E1ts_Viktor?=)
Date: Thu Apr 17 17:30:35 2008
Subject: [Harbour] New TBROWSE
In-Reply-To: <20080417193737.GA10503@localhost.localdomain>
References: <20080416234102.GA24695@localhost.localdomain>
	<004b01c8a02a$34aa3660$0303a8c0@hbco>
	<20080417193737.GA10503@localhost.localdomain>
Message-ID: <34C67D9C-5DD4-48EB-9786-5A34D130F1E9@syenar.hu>

Hi Przemek,

Find attached two minor fixes regarding ::message initial value,
which should be NIL. (maybe AS USUAL would be better there instead
of nothing.) I've also changed 'dummy' initial value to "", to at
least match the type.

I'll extend rto_tb.prg with these and some more.

Brgds,
Viktor

-------------- next part --------------
A non-text attachment was scrubbed...
Name: tbrowse.prg.gz
Type: application/x-gzip
Size: 17648 bytes
Desc: not available
Url : http://lists.harbour-project.org/pipermail/harbour/attachments/20080417/cffb8ac7/tbrowse.prg.gz
-------------- next part --------------


On 2008.04.17., at 21:37, Przemyslaw Czerpak wrote:

> On Wed, 16 Apr 2008, Bill Smith wrote:
>
> Hi Bill,
>
> I sent any message to your return address so I'm answering here.
>
>> I have a short test program which initially illustrated a minor  
>> problem with
>> scrolling using TBrowse in the Windows environment.
> [...]
>
> Thank you very much for tests. I cannot replicate exactly the problem
> you have but I've found two bugs in positioning.
> 1. PGUP/PGDOWN when not executed from first/last visible row was
>   moving the cursors two far
> 2. PGUP/PGDOWN executed during refreshing was not respecting current
>   position in the buffer end was scrolling database less then  
> necessary
> I also cleaned unpleasure visual effect when browse standard color was
> different then default background color used to erase empty screen  
> area
> after scroll(). Clipper uses browse colors instead of current colors  
> set
> by setColor() function.
> It also uses HB_CLS_NOTOBJECT to keep original error messages from
> classy/HVM code which are Clipper compatible to make Viktor more happy
> when using rto_tb.prg test ;-) (BTW very nice helper tool to test some
> tbrowse behavior)
>
> Maybe above resolves the problem you noticed.
> I'm attaching fixed code.
>
> best regards,
> Przemek
> <tbrowse.prg.gz>_______________________________________________
> Harbour mailing list
> Harbour@harbour-project.org
> http://lists.harbour-project.org/mailman/listinfo/harbour

From harbour.01 at syenar.hu  Thu Apr 17 18:01:43 2008
From: harbour.01 at syenar.hu (=?iso-8859-2?Q?Szak=E1ts_Viktor?=)
Date: Thu Apr 17 18:03:54 2008
Subject: [Harbour] CHANGELOG: 2008-04-18 00:01 UTC+0100 Viktor Szakats
 (harbour.01 syenar hu)
Message-ID: <01c8a0d6$Blat.v2.6.2$9f42efce$17f011666bd4@127.0.0.1>

2008-04-18 00:01 UTC+0100 Viktor Szakats (harbour.01 syenar hu)
   * tests/rto_tb.prg
     + Added some C5.3 var tests.
     + Added object as array info.
     * Suppressed _eInstVar() difference by including 
       a strictly compatible copy of it for Harbour.
     * Exclude incompatible binary array elements of the object.

   * tests/rto_get.prg
     * Exclude incompatible binary array elements of the object.

   + bin/bld_os2.cmd
     + Added OS/2 build command file.
     ; Someone pls test and update the content if needed.
--
Brgds,
Viktor

From harbour.01 at syenar.hu  Thu Apr 17 18:49:28 2008
From: harbour.01 at syenar.hu (=?ISO-8859-2?Q?Szak=E1ts_Viktor?=)
Date: Thu Apr 17 18:51:10 2008
Subject: [Harbour] New TBROWSE
In-Reply-To: <20080417132212.GA26957@localhost.localdomain>
References: <20080416234102.GA24695@localhost.localdomain>
	<60984D87-7443-4C26-BD31-EE3281C134FE@syenar.hu>
	<20080417120836.GA25922@localhost.localdomain>
	<20080417132212.GA26957@localhost.localdomain>
Message-ID: <7BA43AFA-926C-4B8F-B845-F17D96E3AF1B@syenar.hu>


Hi Przemek,

On 2008.04.17., at 15:22, Przemyslaw Czerpak wrote:

> On Thu, 17 Apr 2008, Przemyslaw Czerpak wrote:
>
> Hi Viktor,
>
>>> There are just three unexplained differences (amazing BTW)
>>> when comparing the C53 and Harbour output of rto_tb.prg;
>>> value of o:rowPos, where it is 2 in C53 and 1 in
>>> Harbour after calls in line 214 (and 215, 216).
>>> This is actually a pretty small test case there.
>> I'll look at it.
>
> The answer is very simple.
> Clipper keeps internally rowpos as offset from top line and
> when you access this value using :rowpos method it returns it
> decreased by header size. When you add column the internal
> rowpos is updated and header size is added to internal rowpos
> variable. But when you delete column Clipper does not properly
> update it removing the reduced header size. Change in this test
> heading to "test;01h" and you will see that rowpos becomes 3.
> It's a bug which is also the reason of not shown last foot line
> in VV1.PRG you sent to me when column does not have foot separator
> and there is no global foot separator but other columns have it.
> The internal row position for beginning of footing area (footsep
> and/or footing) is wrongly calculated because it does not respect
> foot separators introduced by other columns so later when it's
> shown there in no place to display last footing line.
> I do not want to replicate it.

Thanks a lot! Of course no need to replace it if
it's a Clipper bug (which is now even documented) :)

Just to reiterate in public: Your TBrowse()
work is excellent, hats off for this, I have at
least some ideas how complicated this thing is,
and your new version is just amazing engineering.

My vote to upload it to SVN.

Brgds,
Viktor

From harbour.01 at syenar.hu  Thu Apr 17 19:06:13 2008
From: harbour.01 at syenar.hu (=?iso-8859-2?Q?Szak=E1ts_Viktor?=)
Date: Thu Apr 17 19:08:19 2008
Subject: [Harbour] CHANGELOG: 2008-04-18 01:04 UTC+0100 Viktor Szakats
 (harbour.01 syenar hu)
Message-ID: <01c8a0df$Blat.v2.6.2$a1f3b074$17f8c2d13298@127.0.0.1>

2008-04-18 01:04 UTC+0100 Viktor Szakats (harbour.01 syenar hu)
   * tests/rto_tb.prg
     + Added some assigment tests using numerics with decimals.
     ! Fixed typo in prev commit.
--
Brgds,
Viktor

From harbour.01 at syenar.hu  Thu Apr 17 19:08:46 2008
From: harbour.01 at syenar.hu (=?ISO-8859-2?Q?Szak=E1ts_Viktor?=)
Date: Thu Apr 17 19:10:16 2008
Subject: [Harbour] New TBROWSE
In-Reply-To: <20080417120836.GA25922@localhost.localdomain>
References: <20080416234102.GA24695@localhost.localdomain>
	<60984D87-7443-4C26-BD31-EE3281C134FE@syenar.hu>
	<20080417120836.GA25922@localhost.localdomain>
Message-ID: <4302071C-F189-454F-AA5D-CF5FDF02F5A9@syenar.hu>

>
Hi Przemek,

> fh.Thank you,
>
>> Shortly:
>> - ::freeze return value on assign made compatible
>>  when numeric, but out of range value was assigned.
>
> To be precis it should return INT( nColumns ) - I'll fix it.

Thanks. You must be right, I remember having this in mind,
but my latest code told otherwise for some reason.

I've uploaded some more floating point tests to rto_tb.prg,
which will show a few more such problems in ::rowPos, ::nTop,
::nBottom, ::nLeft, ::nRight.

::rowPos seems to return the original (unrounded) value on assigment.
::<coordinates> seems to retain the unrounded values in the
object and also in the returned value.

>> - ::colSep, ::headSep, ::footSep, ::skipBlock,
>>  ::goTopBlock, ::goBottomBlock SETGETs added to
>>  replicate exact CA-Cl*pper behaviour. This way
>>  type checking is done by _eInstVar() instead of
>>  the class engine.
>
> Yes this will make error messages compatible with Clipper.
> Though I'd like to keep type spec in this ivars. It's not
> necessary to remove it and it may be usable in the future.

I agree it's better that way, and they indeed don't interfere.

>> One minor issue I've noticed - which doesn't affect actual
>> functionality, AFAICS - is if you use BROWSE()
>> and you keep <PgDn> pressed on the first row, or <PgUp>
>> pressed on the last row, on a long database, you may notice
>> that the non-stable rows are being "scrolled" until the browse
>> gets enough time to stabilize (or you reach the other end
>> of the table). I can't really describe this in better words,
>> but you may see it if you compare C5x and Harbour in the above
>> situation. Probably just cosmetic stuff or some internal side
>> effect (or me seeing ghosts :).
>
> I did it and Clipper makes the same. I'm attaching a little bit
> modified example which have delay in skip block to illustrate it.
> Try it in Clipper and new TBrowse code. You will see that old
> rows are shown they will not be overload. There is also one small
> difference in scrolling which I should fix. CA-Clipper sets default
> color to TBrowse colors so it's not the empty area after scrolling
> is field with standard TBrowse color (W+/R) and in new code it's
> default color (W/N). I'll change it. In this test you can also see
> two things I haven't replicated intentionally.
> 1-st is missing protection against invalidating row buffer when
> view are decrease during working. Run the test, wait a while for
> stabilization and then thi SPACE to decrease number of rows to 6
> and PGDN to see what CL53 will do. As you can see the unexisting
> rows are still visible and as long as you will not jump to top
> or bottom TBrowse will not refresh them.
> 2-nd is sth what I do not understand. Looks like some typo or
> unfinished code to detect some changes. Only CL53 does it and
> makes it regularly in all my tests. Run the test, wait for
> stabilization and look at value in col2 row5. It will be 5 at
> startup. Then make any operation which will force header redrowing,
> f.e. freeze some column using 0,1,2,3 or move left/right to force
> horizontal scrolling. You will see that all such operation causes
> that CL53 moves to row 5 and reload it and then moves back to previous
> position. CL52 does not make anything like that. I do not know what it
> is and why it does it. It looks like some internal TBrowse code
> invalidate unintentionally this row and tbrowse has to refresh it.
> CL53 alwys make it and the refreshed row number may change depending
> on the rowcount and it's about rowcount / 3 + 1. Maybe I'm wrong but
> it looks for me like unintentional overloading memory byte where
> status of row is hold what makes it invalid.

I've now retested this effect using your latest source,
and the problem is no more. Thanks!

> At the beginning I thought that it may be some type of changes  
> detecting
> for automatic refreshing but it does not help in the trick with SPACE
> in this tests - change in source code the reduced rowcount to 3 and  
> you
> will see that only the row 5 is invalidated.
> I do not plan to replicate it but please remember about it in TBrowse
> tests. This may cause some unpredictable results.

Indeed strange, ugly too, it must be a bug. I agree not to
replicate it.

Brgds,
Viktor

From druzus at acn.waw.pl  Thu Apr 17 19:42:23 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Thu Apr 17 19:42:28 2008
Subject: [Harbour] 2008-04-18 01:41 UTC+0200 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <200804172342.m3HNgNGJ017826@31-mo5-4.acn.waw.pl>

2008-04-18 01:41 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbapigt.h
  * harbour/source/rtl/gtapi.c
    ! changed USHORT hb_gtColorToN( char * szColorString ) to
      int hb_gtColorToN( char * szColorString ) - it should be the same
      type as indexes in hb_gtColorsToString() functions

  * harbour/source/rtl/hbgtcore.c
    * return -1 from COLORNUM() method when passed color is not
      valid color string

  * harbour/contrib/hbct/screen2.c
  * harbour/contrib/hbct/color.c
  * harbour/contrib/hbct/screen1.c
  * harbour/contrib/hbct/ctwfunc.c
  * harbour/contrib/hbnf/color2n.c
  * harbour/contrib/gtwvg/wvtcore.c
    * updated to respect -1 returned for wrong color strings

  * harbour/source/rtl/tget.prg
    * updated to respect -1 returned for wrong color strings
      Viktor please check me, now it's simpler and hbtest does not
      reports any errors so I guess that this version will work like
      in Clipper also for :colorSpec := "R,X,Y,0" or similar

  * harbour/source/rtl/tobject.prg
  * harbour/source/debug/dbgbrwsr.prg
    * formatting

best regards
Przemek
From druzus at acn.waw.pl  Thu Apr 17 20:53:10 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Thu Apr 17 20:53:15 2008
Subject: [Harbour] 2008-04-18 02:53 UTC+0200 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <200804180053.m3I0rAiH019681@31-mo5-4.acn.waw.pl>

2008-04-18 02:53 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/tbrowse.prg
    * new TBrowse code - many thanks to Viktor Szakats for his help and
      code and to all others who tested this implementation.
      It should be very close to Clipper except some minor differences.
      Most of them are bugs not replicated intentionally. In few cases
      some of them like wrong positioning of logical columns with extended
      size by oCol:picture expression the original Clipper behavior is
      covered by HB_C53_STRICT macro (with cell overwriting during
      navigation but without internal buffer overflows) but it should
      be used rather for tests only not for normal applications.
      I left three TODO notes in the code for some less important things
      which maybe addressed in the future though they should not effect
      99.99% of Clipper programs.
      It's a new code so it's possible that it contains bugs so
      if you will find any problems then please inform me.
      Warning: This TBrowse implementation is strongly Clipper oriented.
               It's neither compatible with previous Harbour nor xHarbour
               one in intentional or unexpected differences to Clipper.
               It also does not have any extensions which existed in the
               old code. In the old code there was TODO note about some
               xBase++ extensions - I do not have xBase++ so I cannot say
               anything about it. If any of you things that they are
               important then I can add them if group agree but I will
               need detail description of additional methods and probably
               results of some tests.

best regards
Przemek
From druzus at acn.waw.pl  Thu Apr 17 21:02:30 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Thu Apr 17 21:02:36 2008
Subject: [Harbour] 2008-04-18 03:02 UTC+0200 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <200804180102.m3I12UDi020540@31-mo5-4.acn.waw.pl>

2008-04-18 03:02 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/tbrowse.prg
    ! fixed typo in last minute modification

best regards
Przemek
From hbco2 at sbcglobal.net  Fri Apr 18 02:32:25 2008
From: hbco2 at sbcglobal.net (Bill Smith)
Date: Fri Apr 18 02:33:45 2008
Subject: [Harbour] 2008-04-18 02:53 UTC+0200 Przemyslaw
	Czerpak(druzus/at/priv.onet.pl)
References: <200804180053.m3I0rAiH019681@31-mo5-4.acn.waw.pl>
Message-ID: <001f01c8a11d$fc7af820$0303a8c0@hbco>

Hi Przemek,

Just uploaded a new series of harbour files, but the TBrowse.prg has a
series of >>>>> .mine and >>>>> r8352 line items.

Bill

----- Original Message ----- 
From: "Przemyslaw Czerpak" <druzus@acn.waw.pl>
To: <harbour@harbour-project.org>
Sent: Thursday, April 17, 2008 5:53 PM
Subject: [Harbour] 2008-04-18 02:53 UTC+0200 Przemyslaw
Czerpak(druzus/at/priv.onet.pl)


> 2008-04-18 02:53 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
>   * harbour/source/rtl/tbrowse.prg
>     * new TBrowse code - many thanks to Viktor Szakats for his help and
>       code and to all others who tested this implementation.
>       It should be very close to Clipper except some minor differences.
>       Most of them are bugs not replicated intentionally. In few cases
>       some of them like wrong positioning of logical columns with extended
>       size by oCol:picture expression the original Clipper behavior is
>       covered by HB_C53_STRICT macro (with cell overwriting during
>       navigation but without internal buffer overflows) but it should
>       be used rather for tests only not for normal applications.
>       I left three TODO notes in the code for some less important things
>       which maybe addressed in the future though they should not effect
>       99.99% of Clipper programs.
>       It's a new code so it's possible that it contains bugs so
>       if you will find any problems then please inform me.
>       Warning: This TBrowse implementation is strongly Clipper oriented.
>                It's neither compatible with previous Harbour nor xHarbour
>                one in intentional or unexpected differences to Clipper.
>                It also does not have any extensions which existed in the
>                old code. In the old code there was TODO note about some
>                xBase++ extensions - I do not have xBase++ so I cannot say
>                anything about it. If any of you things that they are
>                important then I can add them if group agree but I will
>                need detail description of additional methods and probably
>                results of some tests.
>
> best regards
> Przemek
> _______________________________________________
> Harbour mailing list
> Harbour@harbour-project.org
> http://lists.harbour-project.org/mailman/listinfo/harbour

From druzus at acn.waw.pl  Fri Apr 18 05:34:18 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Fri Apr 18 06:20:10 2008
Subject: [Harbour] 2008-04-18 02:53 UTC+0200 Przemyslaw
	Czerpak(druzus/at/priv.onet.pl)
In-Reply-To: <001f01c8a11d$fc7af820$0303a8c0@hbco>
References: <200804180053.m3I0rAiH019681@31-mo5-4.acn.waw.pl>
	<001f01c8a11d$fc7af820$0303a8c0@hbco>
Message-ID: <20080418093418.GA5519@34-mo7-2.acn.waw.pl>

On Thu, 17 Apr 2008, Bill Smith wrote:
> Hi Przemek,
> Just uploaded a new series of harbour files, but the TBrowse.prg has a
> series of >>>>> .mine and >>>>> r8352 line items.

It's result of conflict during merging your local tbrowse.prg
with the one from the SF repository. Remove all tbrowse.prg*
files and .#tbrowse.prg* and make svn update to take SVN version.

best regards
Przemek
From dmacias at mail.udg.mx  Fri Apr 18 05:05:36 2008
From: dmacias at mail.udg.mx (David Arturo Macias Corona)
Date: Fri Apr 18 06:42:20 2008
Subject: [Harbour] Re: CHANGELOG: 2008-04-18 00:01 UTC+0100 Viktor Szakats
 (harbour.01 syenar hu)
In-Reply-To: <20070304160715.C41882572F8@antivirus.noc.udg.mx>
References: <20070304160715.C41882572F8@antivirus.noc.udg.mx>
Message-ID: <48086460.6000700@mail.udg.mx>

>2008-04-18 00:01 UTC+0100 Viktor Szakats (harbour.01 syenar hu)
 >   + bin/bld_os2.cmd
 >     + Added OS/2 build command file.
 >     ; Someone pls test and update the content if needed.

Current Harbour build/run fine under OS/2

Viktor, bld_os2.cmd contain old names for libraries

Changing them to bld.bat list ( :A_OS2 section ) work fine

David Macias

    if "%HB_COMPILER%" == "gcc"     gcc %1.c %CFLAGS% -I%HB_INC_INSTALL% 
-L%HB_LIB_INSTALL% -lhbcpage -lhbdebug -lhbvm -lhbrtl -l%_HB_GT_LIB% 
-lhblang -lhbrdd -lhbrtl -lhbvm -lhbmacro -lhbpp -lrddfpt -lrddntx 
-lrddcdx -lhbsix -lhbcommon

From druzus at acn.waw.pl  Fri Apr 18 07:07:12 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Fri Apr 18 09:56:08 2008
Subject: [Harbour] 2008-04-18 13:06 UTC+0200 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <200804181107.m3IB7Cmi008410@31-mo5-4.acn.waw.pl>

2008-04-18 13:06 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/gtwvg/wvtcore.c
    ! fixed missing ; in last modification
    * when wrong color string is passed from user code then use
      hb_gtGetCurrColor()

best regards
Przemek
From druzus at acn.waw.pl  Fri Apr 18 07:40:17 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Fri Apr 18 12:31:11 2008
Subject: [Harbour] Debugger and class hidden scope
In-Reply-To: <20080417185601.GA5112@localhost.localdomain>
References: <9257026e0804170855r1d56466je766522820d11908@mail.gmail.com>
	<c10dbf450804171034y289fc9b0w9d5e6e76dd2fdc4c@mail.gmail.com>
	<20080417185601.GA5112@localhost.localdomain>
Message-ID: <20080418114016.GA11084@34-mo7-2.acn.waw.pl>

On Thu, 17 Apr 2008, Przemyslaw Czerpak wrote:

Hi Phil,

> The debugger is executing .prg functions which change execution context
> and classes code forbids to access hidden and protected messages.
> To really resolve the problem (without disabling scoping) we will need
> some mechanism to change current execution context to the code actually
> debugged before sending messages. I can write function which will do that
> but I need to know which functionality you need. It will be also usable
> in any OOP debugging because scopes will still work just like in normal
> code.

As I can see debugger code uses __objGetValueList() and __objGetMethodList()
to extract information about object and then __objSendMsg() to get/set
information about object variables. I can create functions which such
functionality but to show real values of instance data in current execution
context then I will need stack offset to function symbol of currently
debugged code so I can dynamically calculate the real scope. Can you
easy access such information?
If yes then I can create functions like:
   __dbgObjValueList( <obj>, <nStackOffset> [, <lRealVars>] ) -> <aVars>
   __dbgObjMethodList( <obj>, <nStackOffset> [, <lRealMethod>] ) -> <aMethods>
   __dbgObjValue( <obj>, <nStackOffset> [, <xNewValue>] ) -> <xValue>

<lRealVars> can be used optionally to extract only real variables
without methods which can work like variables.
<lRealMethod> can be used optionally to extract real methods even
if they work like variables.
If you think that they are not necessary then we can drop these parameters.
__dbgObjValue() can be used to get or set value. It will work for real
variables but also for methods which can work like variables.
All these functions will work with the privileges like for the
code which is executed by HVM with function symbol at <nStackOffset>.
If some data cannot be accessed due to scope violation then I can ignore
it or I can return RTE string instead of generating RTE depending on
your preferences. I can even add functions like:
   __dbgObjTestAccess( <obj>, <nStackOffset> ) -> xResult
   __dbgObjTestAssign( <obj>, <nStackOffset> ) -> xResult
where xResult will be .T. or error object.
It will be very simple to create such functions also for xHarbour
as simple wrappers to current __obj*() functions ignoring additional
functionality to keep the same debugger code. Maybe in the future
someone will update xHarbour classy code adding missing functionality
and in such case he will have ready to use interface.

best regards,
Przemek
From philb at philb.us  Fri Apr 18 14:43:24 2008
From: philb at philb.us (Phil Barnett)
Date: Fri Apr 18 20:48:01 2008
Subject: [Harbour] Mail Server Backup
Message-ID: <200804181443.24732.philb@philb.us>

Over the weekend we got spam bombed. The inbound mail queue was deleted with 
600k entries.

If you have sent something to the mail list and it hasn't shown up, send it 
again. It was probably lost in the storm.

Thanks.

-- 
In order to ensure a safe police state; the right of the people to keep and 
bear arms must be infringed.
From harbour.01 at syenar.hu  Fri Apr 18 21:08:52 2008
From: harbour.01 at syenar.hu (=?ISO-8859-1?Q?Szak=E1ts_Viktor?=)
Date: Sat Apr 19 02:05:10 2008
Subject: [Harbour] 2008-04-18 01:41 UTC+0200 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <200804172342.m3HNgNGJ017826@31-mo5-4.acn.waw.pl>
References: <200804172342.m3HNgNGJ017826@31-mo5-4.acn.waw.pl>
Message-ID: <659DE3DB-2450-4813-A466-039863B8C1D4@syenar.hu>

>
Hi Przemek,

>  * harbour/source/rtl/tget.prg
>    * updated to respect -1 returned for wrong color strings
>      Viktor please check me, now it's simpler and hbtest does not
>      reports any errors so I guess that this version will work like
>      in Clipper also for :colorSpec := "R,X,Y,0" or similar

I did some tests and it looks alright.

>  * harbour/source/rtl/tobject.prg

I think cMsg="_" is not as safe as SubStr( cMsg, 1, 1 ) == "_",
because it makes it depend on SET EXACT setting. Left( cMsg, 1 ) == "_"
could be the best here.

Unless it was intentional, I have a fix ready in the queue for this.

Brgds,
Viktor

From mhsabado at gmail.com  Sat Apr 19 01:52:42 2008
From: mhsabado at gmail.com (Mario H. Sabado)
Date: Sat Apr 19 10:19:46 2008
Subject: [Harbour] FOpen() Argument Error
Message-ID: <480988AA.7040001@gmail.com>


Hi,

When running my compiled application, I got the following error.  I 
tried to put an Alert("message") just after the local variable 
declarations of the MAIN function but still got the same error.  My 
application used to work with Harbour and Prezemek advised me to check 
for possible NIL parameter of FOPEN(). Any other hint?
---------------------------------------------
Error BASE/2021  Argument error: FOPEN
Called from FOPEN(0)
Called from FILECOPY(95)
---------------------------------------------

Thanks,
Mario


From druzus at acn.waw.pl  Sun Apr 20 07:25:23 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Sun Apr 20 13:03:45 2008
Subject: [Harbour] 2008-04-18 01:41 UTC+0200 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <659DE3DB-2450-4813-A466-039863B8C1D4@syenar.hu>
References: <200804172342.m3HNgNGJ017826@31-mo5-4.acn.waw.pl>
	<659DE3DB-2450-4813-A466-039863B8C1D4@syenar.hu>
Message-ID: <20080420112523.GA27066@34-mo7-2.acn.waw.pl>

On Sat, 19 Apr 2008, Szak?ts Viktor wrote:

Hi Vikotr,

> > * harbour/source/rtl/tobject.prg
> I think cMsg="_" is not as safe as SubStr( cMsg, 1, 1 ) == "_",
> because it makes it depend on SET EXACT setting. Left( cMsg, 1 ) == "_"
> could be the best here.
> Unless it was intentional, I have a fix ready in the queue for this.

It wasn't intentional. I even missed that I committed it. I thought
that I only commit some formatting and reverted it. Many thanks for
your verification.

best regards,
Przemek
From lorenzo.fiorini at gmail.com  Sun Apr 20 14:34:22 2008
From: lorenzo.fiorini at gmail.com (Lorenzo Fiorini)
Date: Mon Apr 21 01:14:50 2008
Subject: [Harbour] gcc 4.3.0 warnings
Message-ID: <9257026e0804201134h7880654bp3d20ad8374674deb@mail.gmail.com>

Here are the "few" warnings I get building harbour under Fedora 9
preview with gcc (GCC) 4.3.0 20080416 (Red Hat 4.3.0-7)

../../hbstr.c: In function 'hb_numRound':
../../hbstr.c:340: warning: array subscript is below array bounds
../../hbstr.c: In function 'hb_numDecConv':
../../hbstr.c:340: warning: array subscript is below array bounds

best regards,
Lorenzo
From harbour.01 at syenar.hu  Mon Apr 21 08:54:28 2008
From: harbour.01 at syenar.hu (=?iso-8859-2?Q?Szak=E1ts_Viktor?=)
Date: Tue Apr 22 01:25:21 2008
Subject: [Harbour] CHANGELOG: 2008-04-21 14:48 UTC+0100 Viktor Szakats
 (harbour.01 syenar hu)
Message-ID: <01c8a3ae$Blat.v2.6.2$d5a7797e$10caa059f8a@127.0.0.1>

2008-04-21 14:48 UTC+0100 Viktor Szakats (harbour.01 syenar hu)
   * tests/rto_get.prg
   * tests/rto_tb.prg
     + Added more tests.
     + Enabled object as array results by default.
     + More details for TGet test results.

   * bin/bld_os2.cmd
     ! Fixed lib names. Thanks David.

   * source/rtl/tobject.prg
     * Formatting.

   * source/rtl/tget.prg
     ! Delimiter colors in C5.3 mode made compatible.
     ! ::colorSpec handling in C5.3 mode made compatible 
       for some invalid parameter types.
     ! Fixed handling decimals in :row, :col, :pos 
       methods.
     ! Fixed to compile in C5.2 mode without warning
       (introduced in recent commit).

   * source/rtl/tbrowse.prg
     ! Fixed handling decimals in :nTop, :nBottom, :nLeft, :nRight.
     + Added unfinished XPP method :viewArea()
     + Added untested XPP method :firstScrCol()
     ; Few minor formatting.

   * include/hbextern.ch
   * source/rtl/einstvar.prg
     + Added _eInstVar52() which is the C5.2 compatible version 
       of this function. It also replicates a bug.
     * _eInstVar() renamed to _eInstVar53().
     * _eInstVar() made a stub to call _eInstVar53().

   * source/rtl/checkbox.prg
   * source/rtl/listbox.prg
   * source/rtl/pushbtn.prg
   * source/rtl/radiobtn.prg
   * source/rtl/radiogrp.prg
   * source/rtl/scrollbr.prg
   * source/rtl/symbol.prg
   * source/rtl/teditor.prg
   * source/rtl/tget.prg
   * source/rtl/tget1.prg
   * source/rtl/tgetlist.prg
   * source/rtl/tmenuitm.prg
   * source/rtl/tmenusys.prg
   * source/rtl/tpopup.prg
   * source/rtl/ttopbar.prg
     * Formatting (EXPORT: -> EXPORTED:)

   * contrib/hbtip/thtml.prg
   * contrib/hbtip/ftpcln.prg
     ! Fixed to work regardless of SET EXACT setting.
     ; NOTE: I'd suggest an optional compiler warning 
             to detect plain "=" usage. It's bad practice 
             in most cases.

   TODO: make_os2_gcc.cmd -> make_gcc_os2.cmd
   TODO: TGET test case for my vtgetlst problem.
   TODO: TGET fix for the above.
   TODO: _eInstVar() -> _eInstVar53()
--
Brgds,
Viktor

From rafa at tesipro.com  Mon Apr 21 11:56:50 2008
From: rafa at tesipro.com (rafa)
Date: Tue Apr 22 11:44:01 2008
Subject: [Harbour] Support XML Library ?
Message-ID: <480CB942.2030706@tesipro.com>

Please, Its possible using txml.prg and hbxml.c into Harbour ?

It is very interesant and important this files about manager XML.

It have Harbour manager XML ?

I view this source and have functions about tables hash;

 hb_hashNew, etc...

Have Harbour equal API Hash xHarbour ?

Regards
Rafa Carmona
From harbour.01 at syenar.hu  Mon Apr 21 09:54:58 2008
From: harbour.01 at syenar.hu (=?iso-8859-2?Q?Szak=E1ts_Viktor?=)
Date: Tue Apr 22 12:38:25 2008
Subject: [Harbour] CHANGELOG: 2008-04-21 15:54 UTC+0100 Viktor Szakats
 (harbour.01 syenar hu)
Message-ID: <01c8a3b7$Blat.v2.6.2$497147c4$15ec9e7ff3a2@127.0.0.1>

2008-04-21 15:54 UTC+0100 Viktor Szakats (harbour.01 syenar hu)
   * source/rtl/tbrowse.prg
     ! Added some new lines to XPP methods.

   * contrib/hbtip/thtml.prg
   * contrib/hbtip/popcln.prg
   * contrib/hbtip/sendmail.prg
   * contrib/hbtip/cgi.prg
   * contrib/hbtip/url.prg
   * contrib/hbtip/mail.prg
   * contrib/hbtip/ftpcln.prg
     ! Fixed ambigous "=" and "!=" to "==" or ":=" 
       or "!( == )" contructs.
       Someone pls verify if these fixes are right in 
       the broader context.
--
Brgds,
Viktor

From harbour.01 at syenar.hu  Mon Apr 21 09:13:55 2008
From: harbour.01 at syenar.hu (=?iso-8859-2?Q?Szak=E1ts_Viktor?=)
Date: Tue Apr 22 13:15:27 2008
Subject: [Harbour] CHANGELOG: 2008-04-21 15:02 UTC+0100 Viktor Szakats
 (harbour.01 syenar hu)
Message-ID: <01c8a3b1$Blat.v2.6.2$8d85118a$108c9625ee34@127.0.0.1>

2008-04-21 15:02 UTC+0100 Viktor Szakats (harbour.01 syenar hu)
   * common.mak
   * include/hbextern.ch
   * source/rtl/Makefile
   * source/rtl/checkbox.prg
   * source/rtl/einstvar.prg
   + source/rtl/einstv52.prg
   * source/rtl/listbox.prg
   * source/rtl/pushbtn.prg
   * source/rtl/radiobtn.prg
   * source/rtl/radiogrp.prg
   * source/rtl/tbcolumn.prg
   * source/rtl/tbrowse.prg
   * source/rtl/tget.prg
   * source/rtl/tmenuitm.prg
   * source/rtl/tpopup.prg
   * source/rtl/ttopbar.prg
     ! _eInstVar() made compatible with C5.2 in C5.2 mode.
     * Renamed _eInstVar52() -> __eInstVar52()
       (Harbour internal function namespace)
     * Renamed _eInstVar53() -> __eInstVar53()
       (Harbour internal function namespace)
     * __eInstVar52() moved to a separate file.
     * Harbour now uses __eInstVar53() internally.

   - make_os2_gcc.cmd
   + make_gnu_os2.cmd
     * Renamed to align the filename with the rest of the 
       GNU make command files. Content unchanged.
--
Brgds,
Viktor

From druzus at acn.waw.pl  Tue Apr 22 14:42:42 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Tue Apr 22 16:03:32 2008
Subject: [Harbour] 2008-04-22 20:41 UTC+0200 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <200804221842.m3MIgg8c007238@31-mo5-4.acn.waw.pl>

2008-04-22 20:41 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbclass.ch
  * harbour/include/hbcomp.h
  * harbour/source/compiler/hbmain.c
  * harbour/source/compiler/harbour.yyc
  * harbour/source/compiler/harbour.y
    ! fixed -w3 warnings when class name is different then function name
    * allow to overwrite predefined classes definitions
      it's a dirty hack but current implementation of predefined
      function and class declarations has to be rewritten from scratch
      in the future so I make it intentionally - at least it resolves
      some memory leaks like: harbour -n -w3 tbcolumn.prg

  * harbour/config/rules.cf
  * harbour/make_b32.mak
  * harbour/make_gcc.mak
  * harbour/make_vc.mak
  * harbour/make_vcce.mak
  * harbour/contrib/mtpl_b32.mak
  * harbour/contrib/mtpl_gcc.mak
  * harbour/contrib/mtpl_vc.mak
    * changed default Harbour compiler switch -w2 to -w3

  * harbour/contrib/xhb/xhbcomp.prg
    * replaced repeated declarations by small hack

  * harbour/utils/hbmake/tmake.prg
    ! fixed reported by -w3 repeated aDir declaration

  * harbour/source/rtl/tbrowse.prg
    * calculate frozen area size for 5-th element of array returned
      by xbase++ compatible method :viewArea(). Viktor please check me.
      If you can also describe what exactly TOFIX in :firstScrCol()
      and :viewArea() means then maybe I can help - I do not have
      xbase++ so I do not know what should be fixed.

best regards
Przemek
From mbelgrano at deltain.it  Tue Apr 22 13:59:11 2008
From: mbelgrano at deltain.it (Massimo Belgrano)
Date: Tue Apr 22 16:10:03 2008
Subject: [Harbour] servoj is a front end client development tools
Message-ID: <AFB948164110ED43B5EB849E8DEEF03815EB78@SRV02.deltain.net>


http://www.servoy.com/generic.jsp?mt=393&taxonomy_id=734&pageid=hlfoxpro

Servoy is a cross-platform application development and deployment environment. Servoy consists of a GUI designer, is event-driven and runs scripts through JavaScript. Servoy allows applications to be deployed to both a native Smart client / Rich client and to a pure html Web client from the same codebase and user interface.

Developers can build front-ends to databases -- without having to write any SQL code, even when combining data from multiple sources.

Massimo Belgrano
?


From mbelgrano at deltain.it  Tue Apr 22 06:10:48 2008
From: mbelgrano at deltain.it (Massimo Belgrano)
Date: Tue Apr 22 16:27:31 2008
Subject: [Harbour] Harbour web site
Message-ID: <AFB948164110ED43B5EB849E8DEEF03815EB66@SRV02.deltain.net>

Is possible a revised version of http://www.harbour-project.org/?
Some part seem obsolete http://culikr.sites.uol.com.br/functions.htm
Look and feel a little outdated
Is possible a cooperation for having better website?
I can give my support


Best regards
Massimo Belgrano

From druzus at acn.waw.pl  Mon Apr 21 22:51:20 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Tue Apr 22 16:28:30 2008
Subject: [Harbour] 2008-04-22 04:50 UTC+0200 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <200804220251.m3M2pKkN011319@31-mo5-4.acn.waw.pl>

2008-04-22 04:50 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbapicls.h
  * harbour/source/vm/classes.c
    + added new function hb_dbgObjSendMessage() which allows to
      call messages with given given execution context for proper
      scope checking

  * harbour/source/debug/dbgentry.c
    + added HB_DBG_SENDMSG() for calling messages with given execution
      context

  * harbour/source/debug/dbgtobj.prg
    * removed all __obj*() function calls
    * use HB_DBG_SENDMSG() to access/assign object variables
    ! fixed default value in GET operation called from object
      inspector to always show current object variable value
    ! fixed set for object variables which hold value: "Method"
      they were recognized as method
      Now object variables can be inspected by debugger.
      If object has multiple private messages with the same name
      inherited from parent classes then their context will be
      dynamically changed depending on position in currently
      debugged code.

best regards
Przemek
From druzus at acn.waw.pl  Tue Apr 22 08:35:52 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Tue Apr 22 16:28:33 2008
Subject: [Harbour] 2008-04-22 14:35 UTC+0200 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <200804221235.m3MCZq2o014701@31-mo5-4.acn.waw.pl>

2008-04-22 14:35 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/tbrowse.prg
    * updated mouse positioning for non integer coordinates

best regards
Przemek
From mbelgrano at deltain.com  Tue Apr 22 06:28:10 2008
From: mbelgrano at deltain.com (Massimo Belgrano)
Date: Tue Apr 22 17:22:46 2008
Subject: [Harbour] A visual fox alternative
Message-ID: <loom.20080422T102325-800@post.gmane.org>

servoy is Cross platform, corss database, WYSIWYG  report
http://www.servoy.com/generic.jsp?mt=393&taxonomy_id=734&pageid=glfoxpro

Anyone have other info regargind servoy?


From druzus at acn.waw.pl  Tue Apr 22 18:33:26 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Tue Apr 22 19:36:55 2008
Subject: [Harbour] Debugger and class hidden scope
In-Reply-To: <9257026e0804170855r1d56466je766522820d11908@mail.gmail.com>
References: <9257026e0804170855r1d56466je766522820d11908@mail.gmail.com>
Message-ID: <20080422223326.GB14070@34-mo7-2.acn.waw.pl>

On Thu, 17 Apr 2008, Lorenzo Fiorini wrote:

Hi Lorenzo,

> We told about this time ago.
> This is what we get inspecting a tbrowse object:
> Error BASE/41  Scope violation (hidden): TBROWSE:ACELLCOLORS
> Called from TBROWSE:ACELLCOLORS(0)
> Called from __OBJSENDMSG(0)
> Called from __OBJGETVALUELIST(170)
> Called from HBDBOBJECT:NEW(84)
> ...
> Any workaround?

Try after:
   2008-04-22 04:50 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)

It will work. Please remember that if you have classes with multiple
private messages with the same name then object inspector will show
the result valid for current executions context. When non of messages
with given name is accessible in current execution context due to scope
restriction then the last defined message in child class will be used.
Though maybe for debugging it will be better to not remove original
restrictions because you do not see current scope values. Probably
adding to object inspector information about current scope can help
users.
Below I'm attaching code which shows class with multiple hidden
messages. Execute it step by step and see in object inspector what
happens with o:v instance variable depending on the current execution
context.

Please also remember that I haven't disabled scopes in debugger.
Such tricks are IMO wrong because they causes that you cannot debug
some code or some code can work in different way in debugger then
without debugger. F.e. you have function INC_O() which increments
passed object variables V1 and if it's READONLY then increments V2.
This function can be used for different objects.

   FUNCTION INC_O( o )
      BEGIN SEQUENCE WITH {|| break() }
         o:v1++
      RECOVER
         o:v2++
      END SEQUENCE
   RETURN NIL

Inside xHarbour debugger only and always V1 will be incremented
and the exception will never appear because debugger disables
scoping so such code will give different results inside debugger
then executed without it.
In Harbour scopes are still active and you do not have to worry
about some unexpected behavior which will be different then in
normal execution process.

best regards,
Przemek




#include "hbclass.ch"
memvar o
proc main()
public o:=cls3():new()
altd()
o:m1()
o:m2()
o:m3()
inkey(0)
return

create class cls1
   var v init "v1" hidden
   method m1
endclass

method m1 class cls1
   f(::v)
return self

create class cls2 from cls1
   var v init "v2" hidden
   method m2
endclass

method m2 class cls2
   f(::v)
return self

create class cls3 from cls2
   var v init "v3" hidden
   method m3
endclass

method m3 class cls3
   f(::v)
return self

function f(v)
? v
return nil
From druzus at acn.waw.pl  Tue Apr 22 18:06:44 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Tue Apr 22 19:39:49 2008
Subject: [Harbour] gcc 4.3.0 warnings
In-Reply-To: <9257026e0804201134h7880654bp3d20ad8374674deb@mail.gmail.com>
References: <9257026e0804201134h7880654bp3d20ad8374674deb@mail.gmail.com>
Message-ID: <20080422220644.GA14070@34-mo7-2.acn.waw.pl>

On Sun, 20 Apr 2008, Lorenzo Fiorini wrote:
> Here are the "few" warnings I get building harbour under Fedora 9
> preview with gcc (GCC) 4.3.0 20080416 (Red Hat 4.3.0-7)
> ../../hbstr.c: In function 'hb_numRound':
> ../../hbstr.c:340: warning: array subscript is below array bounds
> ../../hbstr.c: In function 'hb_numDecConv':
> ../../hbstr.c:340: warning: array subscript is below array bounds

It's a wrong compiler warning messages. I hope that it generates
valid machine code.
The warning comes from code:

   if( nPrecision < 16 )
   {
      if( nPrecision >= 0 )
      {
         return s_dPow10[ nPrecision ];
      }
      else if( nPrecision > -16 )
      {
         return 1.0 / s_dPow10[ -nPrecision ];  // line 340
      }
   }

and s_dPow10 has 16 elements (indexed from 0 to 15). So as you can see
array bounds cannot be exceed.
I do not have GCC 4.3 so I cannot check what is the exact source of
this message but if you have a while then you can try to pacify this
warning.
First you can try to change:
   nPrecision < 16
to:
   nPrecision <= 15
and:
   nPrecision > -16
to:
   nPrecision >= -15
but I do not expect it will help.
Probably explicit casting in line 340 should help:
   return 1.0 / s_dPow10[ ( unsigned int ) -nPrecision ];

best regards,
Przemek
From philb at philb.us  Tue Apr 22 18:35:28 2008
From: philb at philb.us (Phil Barnett)
Date: Tue Apr 22 19:55:16 2008
Subject: [Harbour] Harbour web site
In-Reply-To: <AFB948164110ED43B5EB849E8DEEF03815EB66@SRV02.deltain.net>
References: <AFB948164110ED43B5EB849E8DEEF03815EB66@SRV02.deltain.net>
Message-ID: <200804221835.28315.philb@philb.us>

On Tuesday 22 April 2008 06:10:48 am Massimo Belgrano wrote:
> Is possible a revised version of http://www.harbour-project.org/?
> Some part seem obsolete http://culikr.sites.uol.com.br/functions.htm
> Look and feel a little outdated
> Is possible a cooperation for having better website?
> I can give my support

I don't have a problem with rebuilding the site.

Anyone object?

-- 
In order to ensure a safe police state; the right of the people to keep and 
bear arms must be infringed.
From druzus at acn.waw.pl  Tue Apr 22 20:15:04 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Tue Apr 22 22:01:23 2008
Subject: [Harbour] 2008-04-23 02:14 UTC+0200 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <200804230015.m3N0F4gi022595@31-mo5-4.acn.waw.pl>

2008-04-23 02:14 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/debug/dbgbrwsr.prg
    * respect oCol:colorBlock() used by debugger code in few places

  * harbour/source/debug/dbgtobj.prg
    * sort messages and show methods in lower letters just like Clipper

  * harbour/source/debug/dbgtobj.prg
  * harbour/source/debug/dbgthsh.prg
  * harbour/source/debug/dbgtarr.prg
    ! added protection against RT error when user type wrong expression 
      in OBJECT, ARRAY and HASH inspectors

best regards
Przemek
From gvarona at ec-red.com  Tue Apr 22 21:08:40 2008
From: gvarona at ec-red.com (=?ISO-8859-1?Q?Guillermo_Varona_Silup=FA?=)
Date: Tue Apr 22 22:06:43 2008
Subject: [Harbour] How do I use GTWVG (\harbour\contrib\gtwvg)?
Message-ID: <480E8C18.5040600@ec-red.com>

[SPA]
Hola:
?C?mo se usa GTWVG (\harbour\contrib\gtwvg)?
?C?mo construyo el demowvg (\harbour\contrib\gtwvg\tests)?
?Existe alguna documentaci?n?

[ENG]
Hello:
How do I use GTWVG (\harbour\contrib\gtwvg)?
How do I build the demowvg (\harbour\contrib\gtwvg\tests)?
Is there any documentation?

TIA,
Best Regards.
GVS


From lorenzo.fiorini at gmail.com  Wed Apr 23 01:50:01 2008
From: lorenzo.fiorini at gmail.com (Lorenzo Fiorini)
Date: Wed Apr 23 01:50:07 2008
Subject: [Harbour] CHANGELOG: 2008-04-21 15:54 UTC+0100 Viktor Szakats
	(harbour.01 syenar hu)
In-Reply-To: <01c8a3b7$Blat.v2.6.2$497147c4$15ec9e7ff3a2@127.0.0.1>
References: <01c8a3b7$Blat.v2.6.2$497147c4$15ec9e7ff3a2@127.0.0.1>
Message-ID: <9257026e0804222250q7b96f1b7wda93282a26687108@mail.gmail.com>

On Mon, Apr 21, 2008 at 3:54 PM, Szak?ts Viktor <harbour.01@syenar.hu> wrote:

>    * contrib/hbtip/thtml.prg
>    * contrib/hbtip/popcln.prg
>    * contrib/hbtip/sendmail.prg
>    * contrib/hbtip/cgi.prg
>    * contrib/hbtip/url.prg
>    * contrib/hbtip/mail.prg
>    * contrib/hbtip/ftpcln.prg
>      ! Fixed ambigous "=" and "!=" to "==" or ":="
>        or "!( == )" contructs.
>        Someone pls verify if these fixes are right in
>        the broader context.

My apps heavily depends on contrib/hbtip and I don't have any problem
with the actual code.

Testing things like cgi,ftp,mail takes a lot of time since it depends
on different clients and servers often on different OSes.

May I ask to revert these changes and move them to the next release?

best regards,
Lorenzo
From lorenzo.fiorini at gmail.com  Wed Apr 23 03:07:42 2008
From: lorenzo.fiorini at gmail.com (Lorenzo Fiorini)
Date: Wed Apr 23 03:07:49 2008
Subject: [Harbour] Support XML Library ?
In-Reply-To: <480CB942.2030706@tesipro.com>
References: <480CB942.2030706@tesipro.com>
Message-ID: <9257026e0804230007y5e9bce25xa2a583b3193758a2@mail.gmail.com>

On Mon, Apr 21, 2008 at 5:56 PM, rafa <rafa@tesipro.com> wrote:

> Please, Its possible using txml.prg and hbxml.c into Harbour ?

Yes.

>  Have Harbour equal API Hash xHarbour ?

Harbour has hashes.

best regards,
Lorenzo
From teo at windtelsoft.com  Wed Apr 23 03:34:12 2008
From: teo at windtelsoft.com (Teo Fonrouge)
Date: Wed Apr 23 03:34:20 2008
Subject: [Harbour] 2008-04-22 20:41 UTC+0200 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <200804221842.m3MIgg8c007238@31-mo5-4.acn.waw.pl>
References: <200804221842.m3MIgg8c007238@31-mo5-4.acn.waw.pl>
Message-ID: <200804230234.12582.teo@windtelsoft.com>

On Tuesday 22 April 2008 01:42:42 pm Przemyslaw Czerpak wrote:
> 2008-04-22 20:41 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
>   * harbour/include/hbclass.ch
>   * harbour/include/hbcomp.h
>   * harbour/source/compiler/hbmain.c
>   * harbour/source/compiler/harbour.yyc
>   * harbour/source/compiler/harbour.y
>     ! fixed -w3 warnings when class name is different then function name
>     * allow to overwrite predefined classes definitions
>       it's a dirty hack but current implementation of predefined
>       function and class declarations has to be rewritten from scratch
>       in the future so I make it intentionally - at least it resolves
>       some memory leaks like: harbour -n -w3 tbcolumn.prg
>
>   * harbour/config/rules.cf
>   * harbour/make_b32.mak
>   * harbour/make_gcc.mak
>   * harbour/make_vc.mak
>   * harbour/make_vcce.mak
>   * harbour/contrib/mtpl_b32.mak
>   * harbour/contrib/mtpl_gcc.mak
>   * harbour/contrib/mtpl_vc.mak
>     * changed default Harbour compiler switch -w2 to -w3
>
>   * harbour/contrib/xhb/xhbcomp.prg
>     * replaced repeated declarations by small hack
>
>   * harbour/utils/hbmake/tmake.prg
>     ! fixed reported by -w3 repeated aDir declaration
>
>   * harbour/source/rtl/tbrowse.prg
>     * calculate frozen area size for 5-th element of array returned
>       by xbase++ compatible method :viewArea(). Viktor please check me.
>       If you can also describe what exactly TOFIX in :firstScrCol()
>       and :viewArea() means then maybe I can help - I do not have
>       xbase++ so I do not know what should be fixed.

2008-04-23 02:20 UTC-0500 Teo Fonrouge (teo/at/windtelsoft/dot/com)
  * contrib/hbgd/gdimage.prg
    ! Fixed warning at gdimage.prg(271):
      "Warning W0019  Duplicate declaration of Method 'GETTRUECOLOR'"
      the method was having a INLINE to the gdImageTrueColorPixel() function
      and the fix simply renamed the method name from 'GetTrueColor' to
      'GetTrueColorPixel'. Please, someone used to the hbgd lib check if the
      new method name is correct.


best regards

Teo Fonrouge
From lorenzo.fiorini at gmail.com  Wed Apr 23 03:36:04 2008
From: lorenzo.fiorini at gmail.com (Lorenzo Fiorini)
Date: Wed Apr 23 03:36:15 2008
Subject: [Harbour] Debugger and class hidden scope
In-Reply-To: <20080422223326.GB14070@34-mo7-2.acn.waw.pl>
References: <9257026e0804170855r1d56466je766522820d11908@mail.gmail.com>
	<20080422223326.GB14070@34-mo7-2.acn.waw.pl>
Message-ID: <9257026e0804230036w6bb093ci6652b10672ac6d4c@mail.gmail.com>

On Wed, Apr 23, 2008 at 12:33 AM, Przemyslaw Czerpak <druzus@acn.waw.pl> wrote:

>  Try after:
>    2008-04-22 04:50 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
>
>  It will work. Please remember that if you have classes with multiple
> ...
>  In Harbour scopes are still active and you do not have to worry
>  about some unexpected behavior which will be different then in
>  normal execution process.

Many thanks it seems "perfect" now.

best regards,
Lorenzo
From druzus at acn.waw.pl  Wed Apr 23 03:47:03 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Wed Apr 23 03:47:09 2008
Subject: [Harbour] 2008-04-23 09:46 UTC+0200 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <200804230747.m3N7l3ah008832@31-mo5-4.acn.waw.pl>

2008-04-23 09:46 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/pp/ppcore.c
    ! fixed some combinations of user functions in stream pragmas, f.e.:
         #pragma __cstream|f1(%s)|f2()
      or:
         #pragma __cstream||f2(%s)
    + added support for:
         #pragma __[c]streaminclude "fileName"|<code with %s result marker>
      f.e.:
         #pragma __streaminclude "foo1.html"|cHtml:=%s
      __cstreaminclude decode C like escape sequences, __streaminclude
      doesn't do that and takes file body in raw form. Maximum file size
      is arbitrary set to 65520.

best regards
Przemek
From harbour.01 at syenar.hu  Wed Apr 23 03:52:38 2008
From: harbour.01 at syenar.hu (=?ISO-8859-1?Q?Szak=E1ts_Viktor?=)
Date: Wed Apr 23 03:54:07 2008
Subject: [Harbour] CHANGELOG: 2008-04-21 15:54 UTC+0100 Viktor Szakats
	(harbour.01 syenar hu)
In-Reply-To: <9257026e0804222250q7b96f1b7wda93282a26687108@mail.gmail.com>
References: <01c8a3b7$Blat.v2.6.2$497147c4$15ec9e7ff3a2@127.0.0.1>
	<9257026e0804222250q7b96f1b7wda93282a26687108@mail.gmail.com>
Message-ID: <5B602011-0355-48BD-884E-884930A1E7CB@syenar.hu>

Hi Lorenzo,

If you look at the changes, it's just 3 changes where the
actual logic was modified, so in my opinion they were pretty
straightforward and easy to test.

Change #1 mail.prg: Handling of mail headers. (accepting "from*:"  
instead of "from:" for example)
Change #2 popcln.prg: Handling of end-of-message in POP protocol.  
(which was accepting ".*" rather than plain ".")
Change #3 thtml.prg: Finding tags now accepts only the tagname,  
instead of "tagname*"

I'd vote to stay on SVN otherwise these changes will
never get tested (or be forgotten by me). If someone
feels them too dangerous it's not a problem for me if
they are being removed, but it would still be more
useful to actually test them and fix it if needed.

Brgds,
Viktor

On 2008.04.23., at 7:50, Lorenzo Fiorini wrote:

> On Mon, Apr 21, 2008 at 3:54 PM, Szak?ts Viktor <harbour. 
> 01@syenar.hu> wrote:
>
>>   * contrib/hbtip/thtml.prg
>>   * contrib/hbtip/popcln.prg
>>   * contrib/hbtip/sendmail.prg
>>   * contrib/hbtip/cgi.prg
>>   * contrib/hbtip/url.prg
>>   * contrib/hbtip/mail.prg
>>   * contrib/hbtip/ftpcln.prg
>>     ! Fixed ambigous "=" and "!=" to "==" or ":="
>>       or "!( == )" contructs.
>>       Someone pls verify if these fixes are right in
>>       the broader context.
>
> My apps heavily depends on contrib/hbtip and I don't have any problem
> with the actual code.
>
> Testing things like cgi,ftp,mail takes a lot of time since it depends
> on different clients and servers often on different OSes.
>
> May I ask to revert these changes and move them to the next release?
>
> best regards,
> Lorenzo

From lorenzo.fiorini at gmail.com  Wed Apr 23 03:56:28 2008
From: lorenzo.fiorini at gmail.com (Lorenzo Fiorini)
Date: Wed Apr 23 03:56:32 2008
Subject: [Harbour] About HB_NO_READDBG
Message-ID: <9257026e0804230056h602bfeaaj875e9b3f37714151@mail.gmail.com>

I've introduced HB_NO_READDBG many years ago since I use a custom
getsys.prg to manage UI things like windows, tabs and so on.

The problem was that since debugger use get ... read than the
"standard getsys" was linked before my custom one.

Now I wonder if there is a better way to manage this situation.

best regards,
Lorenzo
From rafa at tesipro.com  Wed Apr 23 04:34:41 2008
From: rafa at tesipro.com (rafa)
Date: Wed Apr 23 04:34:55 2008
Subject: [Harbour] Support XML Library ?
In-Reply-To: <9257026e0804230007y5e9bce25xa2a583b3193758a2@mail.gmail.com>
References: <480CB942.2030706@tesipro.com>
	<9257026e0804230007y5e9bce25xa2a583b3193758a2@mail.gmail.com>
Message-ID: <480EF4A1.80800@tesipro.com>

Lorenzo Fiorini escribi?:
> On Mon, Apr 21, 2008 at 5:56 PM, rafa <rafa@tesipro.com> wrote:
>
>   
>> Please, Its possible using txml.prg and hbxml.c into Harbour ?
>>     
>
> Yes.
>
>   
Are you test  in Harbour of XML support ?

>>  Have Harbour equal API Hash xHarbour ?
>>     
>
> Harbour has hashes.
>
>   
If this files are compatibility with Harbour i think that
put this files in RTL of Harbour, then Harbour the best! ;-)

I waiting ONLY this files , support of XML for change Harbour by xHarbour,
and this moment i stop this change by this motive.

Regards
Rafa Carmona
From lorenzo.fiorini at gmail.com  Wed Apr 23 07:02:19 2008
From: lorenzo.fiorini at gmail.com (Lorenzo Fiorini)
Date: Wed Apr 23 07:02:47 2008
Subject: [Harbour] 2008-04-23 09:46 UTC+0200 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <200804230747.m3N7l3ah008832@31-mo5-4.acn.waw.pl>
References: <200804230747.m3N7l3ah008832@31-mo5-4.acn.waw.pl>
Message-ID: <9257026e0804230402k32538859udfb4b642275ed2f7@mail.gmail.com>

On Wed, Apr 23, 2008 at 9:47 AM, Przemyslaw Czerpak <druzus@acn.waw.pl> wrote:

>   * harbour/source/pp/ppcore.c
>     ! fixed some combinations of user functions in stream pragmas, f.e.:
>          #pragma __cstream|f1(%s)|f2()
>       or:
>          #pragma __cstream||f2(%s)
>     + added support for:
>          #pragma __[c]streaminclude "fileName"|<code with %s result marker>
>       f.e.:
>          #pragma __streaminclude "foo1.html"|cHtml:=%s
>       __cstreaminclude decode C like escape sequences, __streaminclude
>       doesn't do that and takes file body in raw form. Maximum file size
>       is arbitrary set to 65520.

Many thanks, this greatly simplify ajax apps.

best regards,
Lorenzo
From lorenzo.fiorini at gmail.com  Wed Apr 23 07:00:11 2008
From: lorenzo.fiorini at gmail.com (Lorenzo Fiorini)
Date: Wed Apr 23 07:08:03 2008
Subject: [Harbour] 2008-04-22 20:41 UTC+0200 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <200804230234.12582.teo@windtelsoft.com>
References: <200804221842.m3MIgg8c007238@31-mo5-4.acn.waw.pl>
	<200804230234.12582.teo@windtelsoft.com>
Message-ID: <9257026e0804230400t580b1a8fx71e5f8115dcc486c@mail.gmail.com>

On Wed, Apr 23, 2008 at 9:34 AM, Teo Fonrouge <teo@windtelsoft.com> wrote:

>  2008-04-23 02:20 UTC-0500 Teo Fonrouge (teo/at/windtelsoft/dot/com)
>   * contrib/hbgd/gdimage.prg
>     ! Fixed warning at gdimage.prg(271):
>       "Warning W0019  Duplicate declaration of Method 'GETTRUECOLOR'"
>       the method was having a INLINE to the gdImageTrueColorPixel() function
>       and the fix simply renamed the method name from 'GetTrueColor' to
>       'GetTrueColorPixel'. Please, someone used to the hbgd lib check if the
>       new method name is correct.

To fix it I've removed:

   METHOD GetTrueColor( r, g, b )          INLINE gdTrueColor( r, g, b )
   METHOD GetTrueColorAlpha( r, g, b, a )  INLINE gdTrueColorAlpha( r, g, b, a )

they simply "rename" generic gd functions not related to the object
itself while

   METHOD GetTrueColor( x, y )             INLINE
gdImageTrueColorPixel( ::pImage, x, y )

it's related to the object.

best regards,
Lorenzo
From devlist.harbour at gmail.com  Wed Apr 23 07:34:00 2008
From: devlist.harbour at gmail.com (Patrick Mast)
Date: Wed Apr 23 07:34:07 2008
Subject: [Harbour] 2008-04-23 09:46 UTC+0200 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <9257026e0804230402k32538859udfb4b642275ed2f7@mail.gmail.com>
References: <200804230747.m3N7l3ah008832@31-mo5-4.acn.waw.pl>
	<9257026e0804230402k32538859udfb4b642275ed2f7@mail.gmail.com>
Message-ID: <15c075f70804230434t1becdbafn9c02fa9ca6357c58@mail.gmail.com>

Hey guys,
I don't fully understand this. Can you explain by example?

Thanks!

Patrick


On Wed, Apr 23, 2008 at 1:02 PM, Lorenzo Fiorini <lorenzo.fiorini@gmail.com>
wrote:

> On Wed, Apr 23, 2008 at 9:47 AM, Przemyslaw Czerpak <druzus@acn.waw.pl>
> wrote:
>
> >   * harbour/source/pp/ppcore.c
> >     ! fixed some combinations of user functions in stream pragmas, f.e.:
> >          #pragma __cstream|f1(%s)|f2()
> >       or:
> >          #pragma __cstream||f2(%s)
> >     + added support for:
> >          #pragma __[c]streaminclude "fileName"|<code with %s result
> marker>
> >       f.e.:
> >          #pragma __streaminclude "foo1.html"|cHtml:=%s
> >       __cstreaminclude decode C like escape sequences, __streaminclude
> >       doesn't do that and takes file body in raw form. Maximum file size
> >       is arbitrary set to 65520.
>
> Many thanks, this greatly simplify ajax apps.
>
> best regards,
> Lorenzo
> _______________________________________________
> Harbour mailing list
> Harbour@harbour-project.org
> http://lists.harbour-project.org/mailman/listinfo/harbour
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.harbour-project.org/pipermail/harbour/attachments/20080423/962b2111/attachment.html
From lorenzo.fiorini at gmail.com  Wed Apr 23 06:50:10 2008
From: lorenzo.fiorini at gmail.com (Lorenzo Fiorini)
Date: Wed Apr 23 07:54:08 2008
Subject: [Harbour] Support XML Library ?
In-Reply-To: <480EF4A1.80800@tesipro.com>
References: <480CB942.2030706@tesipro.com>
	<9257026e0804230007y5e9bce25xa2a583b3193758a2@mail.gmail.com>
	<480EF4A1.80800@tesipro.com>
Message-ID: <9257026e0804230350w615d43c9g9b0f85848c2969c6@mail.gmail.com>

On Wed, Apr 23, 2008 at 10:34 AM, rafa <rafa@tesipro.com> wrote:

>  Are you test  in Harbour of XML support ?

>  If this files are compatibility with Harbour i think that
>  put this files in RTL of Harbour, then Harbour the best! ;-)

>  I waiting ONLY this files , support of XML for change Harbour by xHarbour,
>  and this moment i stop this change by this motive.

I'm not sure I understood what you mean ( are you using a translation
software? )

AFAIK XML support is the same, the only difference is that xHarbour
has it in the RTL while Harbour has it in a xhb lib.

best regards,
Lorenzo
From harbour.01 at syenar.hu  Wed Apr 23 08:22:57 2008
From: harbour.01 at syenar.hu (=?iso-8859-2?Q?Szak=E1ts_Viktor?=)
Date: Wed Apr 23 08:23:02 2008
Subject: [Harbour] CHANGELOG: 2008-04-23 14:03 UTC+0100 Viktor Szakats
 (harbour.01 syenar hu)
Message-ID: <01c8a53c$Blat.v2.6.2$c33d89b0$51047139432@127.0.0.1>

2008-04-23 14:03 UTC+0100 Viktor Szakats (harbour.01 syenar hu)
   * source/rtl/tget.prg
     ! Fixed o[13] and o[14] content (they were swapped) in C5.3 mode.
     ! Fixed ::varPut() to not have the extra Harbour parameter.
     ! Fixed ::picture to not mess with ::nDispLen when @S is used.
       Now solved with new internal var ::nPicLen.
     % ::ResetPar() internal method moved inside ::display()
     ! Fixed ::updateBuffer() to set ::xVarGet (o[19] in C5.3 mode 
       and o[11] in C5.2 mode when ::hasFocus) to ::original.
     ! Fixed ::display() behavior when not in focus.
     ! Fixed ::reset() to be more compatible by setting ::xVarGet.
     ! Fixed ::undo() for non-gettable variable types.
     ! Fixed ::killFocus() to never call ::assign().
     ! Fixed ::varPut() to never touch internal vars (old 'lReFormat' mode).
     ! Fixed ::varGet() to not touch ::xVarGet internal var.
     ! Fixed ::insert()/::overStrike() to call ::display() in 
       out of bound and rejected cases.
     ! Fixed ::insert()/::overStrike() to not set ::Rejected 
       when position is out of bound.
     ! Fixed internal ::PutMask() to never initiate a ::block 
       evaluation.
     ; NOTE: Since Get() object is a highly complicated beast, 
             bumps are expected. Pls test this code with your 
             applications and report any problems with reduced 
             code snippet. I'll include those tests in the 
             regression test suite.
             Notice that after these changes, the number of 
             differences between C5.x and Harbour are further 
             reduced, especially regarding the "object as array" 
             kind of access and regarding block evaluation.
             Currently, differences are mostly present in o[16] 
             in C5.3 mode, plus some odd cases testing 
             mostly invalid picture values, and a few other minor 
             differences here and there. Plus of course further 
             differences may happen to exist in cases not covered 
             by rto_get.prg.

   * source/rtl/einstvar.prg
     ! Fixed to only include _eInstVar() if HB_C52_UNDOC is 
       #defined (it is by default).

   * source/rtl/tbrowse.prg
     + Added missing XPP methods (three synomyms to 
       existing methods).

   * tests/rto_get.prg
     + Added even more tests.
     + Added some additional info about errors.
     ! Fixed ::block SETGET tracing.
--
Brgds,
Viktor

From lorenzo.fiorini at gmail.com  Wed Apr 23 08:23:29 2008
From: lorenzo.fiorini at gmail.com (Lorenzo Fiorini)
Date: Wed Apr 23 08:31:11 2008
Subject: [Harbour] 2008-04-23 09:46 UTC+0200 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <15c075f70804230434t1becdbafn9c02fa9ca6357c58@mail.gmail.com>
References: <200804230747.m3N7l3ah008832@31-mo5-4.acn.waw.pl>
	<9257026e0804230402k32538859udfb4b642275ed2f7@mail.gmail.com>
	<15c075f70804230434t1becdbafn9c02fa9ca6357c58@mail.gmail.com>
Message-ID: <9257026e0804230523u170a02f6se737bbf36ae00dc5@mail.gmail.com>

On Wed, Apr 23, 2008 at 1:34 PM, Patrick Mast <devlist.harbour@gmail.com> wrote:

> I don't fully understand this. Can you explain by example?

Patrick, you can look at the thread "preprocessor question" that I March 12.

best regards,
Lorenzo
From mbelgrano at deltain.it  Wed Apr 23 08:46:05 2008
From: mbelgrano at deltain.it (Massimo Belgrano)
Date: Wed Apr 23 08:46:17 2008
Subject: [Harbour] can anybody help me in harbour definition with
	comment/correction
Message-ID: <AFB948164110ED43B5EB849E8DEEF03815EB7B@SRV02.deltain.net>

I have also post on Wikipedia http://en.wikipedia.org/wiki/Harbour_compiler
Please help to modify

Harbour is a open source clipper compiler which runs on many operating systems. (DOS, Microsoft Windows, Linux (32,64), Unix (32,64), Mac OS X,Windows Ce,Pocket PC)
Harbour licenze is GPL with an exception supporting commercial applications, so you can distribuite commercail application made with harbour
It is designed to use and compile?Clipper source code, with Classy OOP extession 
Unlike Java which is intended to be write once, run anywhere, harbour aim to be write once, compile anywhere. As the same compiler is available for all of the above operating systems, there is no need for recoding to produce identical products for different platforms, except when operating-system-dependent features are used. Cross-compiling is supported with MiniGW32.
Under Microsoft Windows?harbour is more stable and less well-documented than Clipper, but has multi-platform capability and is more transparent, customizable and can run from a USB flash drive. 
Under Linux, Clipper source code can be compiled with?harbour ?with a little adaptation.
Clipper source code can be adapted to compile under?Window Mobile?
Harbour use c compiler Borland C++,Microsoft Visual C++ (6,7,8 ), Minigw32, watcom c
Xharbour comparison

Both the projects to set their standards and to choose what implement and how but we could have a "standard"
[x]Harbour syntax.
C compilers are often very different but there sth we call C language.
Everyone will choose if writing standard code or use extensions.
Clearly what today an "extension" tomorrow can be standard
?
Harbour want replicate exact Clipper behavior.
Harbour document all hidden behavior making many tests with Clipper to imagine general rules used in the original code. Then I'm coding and for this I usually need much less time then for tests. The final results should be very simple because I do not believe that in Clipper someone intentionally hard coded exceptions. 
The exceptions are results of some design decisions. 
If later I have to explicitly hard code some chosen behavior in code I created instead of making some small modification in the algorithm then it means that the testing process was not enough precis and I took wrong decisions so I should repeat the tests. I very seldom decide to fix one special case without trying to understand why it exists in Clipper. Code which have a lot of exceptions is very hard to understand and later update.

Harbour project don't want unusable extension if it break Clipper compatibility. 
In xharbour the Clipper behavior was mixed with some xHarbour extensions and the debug process is much harder then it should be...
Harbour want made a clear separation and keeping the code clean is important 

Finally harbour have made most of important modifi decision  to rewrite  gt and multithread for cover foundation need



Harbour offering multiple GT (Graphic Terminals), including console drivers, and Hybrid Console/GUIs, such as GTWvt, and GTWvw. 
?
Harbour support external GUIs (free such as HWGui, MiniGUI and commercial, such as FiveWin, Xailer ), 
Harbour is 100% Clipper backward compatible and supports many language syntax extensions, greatly extended run-time libraries such as OLE, ODBC, MySQL, PostgreSQL, TIpt, TXml, RegEx, HbZip, xbScript and extensive third party support
?
Harbour extends the Clipper Replaceable Database Drivers (RDD) approach. It offers multiple RDDs such as DBF, DBFNTX, DBFCDX, DBFDBT, and DBFFPT. In xHarbour multiple RDDs can be used in a single application, and new logical RDDs can be defined from combination of other RDD. The RDD architecture allows for inheritance, so that a given RDD may extend the functionality of other existing RDD(s). 3rd party RDDs, like RDDSQL, RDDSIX, RMDBFCDX, Advantage Database Server, and Mediator exemplify some of the RDD architecture features.
Harbour also offers ODBC support be means of an OOP syntax, and ADO support by means of OLE.
Macro Operator (runtime compiler)
One of the most powerful features of the xBase languages is the MACRO Operator '&'. xHarbour's implementation of the Macro Operator allows for runtime compilation of any valid xHarbour expression. Such compiled expression may be used as a VALUE, i.e. the right side of an Assignment, but more interestingly, such compiled expression may be used to resolve the LEFT side of an assignment, i.e. PRIVATE, or PUBLIC variables, or Database FIELD.
Additionally the Macro Operator may compile and execute function calls, complete assignments, or even list of arguments, and the result of the macro may be used to resolve any of the above contexts in the compiled application. IOW, any xHarbour application may be extended, and/or modified in runtime, to compile and execute additional code on demand.

Object Oriented Programming. Programming in an OOP style is a broader issue than a specific library or a specific interface. But OOP programming is something many Clipper programmers have come to expect. CA-Clipper 5.2 and especially 5.3 added a number of base classes, and a matching OOP syntax. Libraries such as CLASSy, Fivewin, Clip4Win, and TopClass provide 
Harbour have OOP extensions with full inheritance and class declaration. based on?Classy syntax ?, Harbour follows suit in providing a full collection of commands for declaration of classes, inheritance, and so on. The syntax may not wind up being identical with that in the tool you previously used, but it should be possible to maintain your old Clipper class hierarchy with minimal changes to source code. 
?


Massimo Belgrano
?

From lorenzo.fiorini at gmail.com  Wed Apr 23 08:51:15 2008
From: lorenzo.fiorini at gmail.com (Lorenzo Fiorini)
Date: Wed Apr 23 08:51:19 2008
Subject: [Harbour] tbrowse ::forcestable() never ending loop
Message-ID: <9257026e0804230551oa1a6a4fr4e9c0e4e77898384@mail.gmail.com>

A user has reported ( and I've verified ) that there is a condition
where oBrw:forcestable() goes to a never ending loop.
Replacing only tbrowse.prg with a previous one ( not Harbour code )
"solves" the problem.

Now I'm trying to create a self contained test but in tbrowse.prg I've found:

   /* TODO: CA-Cl*pper does not call ::stabilize() if TBrowse object
    *       is stable and does not need screen update. It may be important
    *       for applications which do not expect that cursor position may
    *       be changed. I'll change it in the future but first I will have
    *       to revert my stupid modifications in Harbour core code. Looking
    *       at old TBrowse implementation I replaced some:
    *             WHILE !oBrw:stabilize(); END
    *       with:
    *             oBrw:forceStable()
    *       In Clipper it's not the same because oBrw:forceStable()
    *       may not set cursor position and only ::stabilize() does it.
    *       [druzus]
    */

should I wait for the fix?

best regards,
Lorenzo
From druzus at acn.waw.pl  Wed Apr 23 09:32:34 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Wed Apr 23 09:32:40 2008
Subject: [Harbour] tbrowse ::forcestable() never ending loop
In-Reply-To: <9257026e0804230551oa1a6a4fr4e9c0e4e77898384@mail.gmail.com>
References: <9257026e0804230551oa1a6a4fr4e9c0e4e77898384@mail.gmail.com>
Message-ID: <20080423133234.GA2772@34-mo7-2.acn.waw.pl>

On Wed, 23 Apr 2008, Lorenzo Fiorini wrote:
> A user has reported ( and I've verified ) that there is a condition
> where oBrw:forcestable() goes to a never ending loop.
> Replacing only tbrowse.prg with a previous one ( not Harbour code )
> "solves" the problem.

I will need your help to locate it. In theory it's possible but it
will need some interaction from user codeblocks, f.e. skipBlock can
call some methods which will force tbrowse reconfiguration. In other
situation it hsould not happen.

> Now I'm trying to create a self contained test

If you can then it will greatly help to find and fix the problem.

> but in tbrowse.prg I've found:
>    /* TODO: CA-Cl*pper does not call ::stabilize() if TBrowse object
>     *       is stable and does not need screen update. It may be important
>     *       for applications which do not expect that cursor position may
>     *       be changed. I'll change it in the future but first I will have
>     *       to revert my stupid modifications in Harbour core code. Looking
>     *       at old TBrowse implementation I replaced some:
>     *             WHILE !oBrw:stabilize(); END
>     *       with:
>     *             oBrw:forceStable()
>     *       In Clipper it's not the same because oBrw:forceStable()
>     *       may not set cursor position and only ::stabilize() does it.
>     *       [druzus]
>     */
> should I wait for the fix?

It will rather not help. The old code also makes the same.
Of course probably it's possible to hack forceStable to resolve
the exact problem you have but it's not a serious solution and
problem may return in the future. For real fix I need to exactly
know what is wrong and compare it with Clipper. BTW have you tested
this code with Clipper?

best regards,
Przemek
From mbelgrano at deltain.it  Wed Apr 23 11:18:06 2008
From: mbelgrano at deltain.it (Massimo Belgrano)
Date: Wed Apr 23 11:18:16 2008
Subject: [Harbour] What about creating a harbour user group on usenet?
In-Reply-To: <200803262054.27718.philb@philb.us>
References: <AFB948164110ED43B5EB849E8DEEF03815EA9A@SRV02.deltain.net><AFB948164110ED43B5EB849E8DEEF03815EA9F@SRV02.deltain.net><80b05d460803261147h980b702wde819b237aa714ea@mail.gmail.com>
	<200803262054.27718.philb@philb.us>
Message-ID: <AFB948164110ED43B5EB849E8DEEF03815EB7F@SRV02.deltain.net>

Can you start with harbour user list on usenet?
And rebuilding harbour web site?

Very good!

-----Original Message-----
From: harbour-bounces@harbour-project.org [mailto:harbour-bounces@harbour-project.org] On Behalf Of Phil Barnett
Sent: Thursday, March 27, 2008 1:54 AM
To: harbour@harbour-project.org
Subject: Re: [Harbour] What about creating a harbour user group on usenet?

On Wednesday 26 March 2008 02:47:13 pm Rodrigo Miguel wrote:

> I've to agree, the developer mailing list is not the most easy thing in the
> world for a new user or normal developer to get in contact with harbour dev
> team. Usenet is more democratic way to do that, but I don't know if get a
> new user in usenet will be a easy task as well.

We used to have a Harbour-User list, but it was seldom used. Now that we are 
creating version 1.0, it is time to have that list again.

I can handle that. There's nothing special about a usenet group, other than 
spam. After using both kinds for decades, I feel that a self controlled 
mailing list is the best.

-- 
In order to ensure a safe police state; the right of the people to keep and 
bear arms must be infringed.
_______________________________________________
Harbour mailing list
Harbour@harbour-project.org
http://lists.harbour-project.org/mailman/listinfo/harbour
From harbour.01 at syenar.hu  Wed Apr 23 12:05:34 2008
From: harbour.01 at syenar.hu (=?iso-8859-2?Q?Szak=E1ts_Viktor?=)
Date: Wed Apr 23 12:05:41 2008
Subject: [Harbour] CHANGELOG: 2008-04-23 18:03 UTC+0100 Viktor Szakats
 (harbour.01 syenar hu)
Message-ID: <01c8a55b$Blat.v2.6.2$dcf30e24$e88a23c1e2a@127.0.0.1>

2008-04-23 18:03 UTC+0100 Viktor Szakats (harbour.01 syenar hu)
   * source/rtl/achoice.prg
   * source/rtl/alert.prg
   * source/rtl/browse.prg
   * source/rtl/einstv52.prg
   * source/rtl/einstvar.prg
   * source/rtl/persist.prg
   * source/rtl/tclass.prg
   * source/rtl/teditor.prg
   * source/rtl/typefile.prg
   * source/rtl/wait.prg
     * Formatting.
     * != -> !( == ) for strings.
--
Brgds,
Viktor

From teo at windtelsoft.com  Wed Apr 23 13:27:35 2008
From: teo at windtelsoft.com (Teo Fonrouge)
Date: Wed Apr 23 13:27:42 2008
Subject: [Harbour] 2008-04-22 20:41 UTC+0200 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <9257026e0804230400t580b1a8fx71e5f8115dcc486c@mail.gmail.com>
References: <200804221842.m3MIgg8c007238@31-mo5-4.acn.waw.pl>
	<200804230234.12582.teo@windtelsoft.com>
	<9257026e0804230400t580b1a8fx71e5f8115dcc486c@mail.gmail.com>
Message-ID: <200804231227.36583.teo@windtelsoft.com>

On Wednesday 23 April 2008 06:00:11 am Lorenzo Fiorini wrote:
> On Wed, Apr 23, 2008 at 9:34 AM, Teo Fonrouge <teo@windtelsoft.com> wrote:
> >  2008-04-23 02:20 UTC-0500 Teo Fonrouge (teo/at/windtelsoft/dot/com)
> >   * contrib/hbgd/gdimage.prg
> >     ! Fixed warning at gdimage.prg(271):
> >       "Warning W0019  Duplicate declaration of Method 'GETTRUECOLOR'"
> >       the method was having a INLINE to the gdImageTrueColorPixel()
> > function and the fix simply renamed the method name from 'GetTrueColor'
> > to 'GetTrueColorPixel'. Please, someone used to the hbgd lib check if the
> > new method name is correct.
>
> To fix it I've removed:
>
>    METHOD GetTrueColor( r, g, b )          INLINE gdTrueColor( r, g, b )
>    METHOD GetTrueColorAlpha( r, g, b, a )  INLINE gdTrueColorAlpha( r, g,
> b, a )
>
> they simply "rename" generic gd functions not related to the object
> itself while
>
>    METHOD GetTrueColor( x, y )             INLINE
> gdImageTrueColorPixel( ::pImage, x, y )
>
> it's related to the object.

Thanks Lorenzo


best regards

Teo
From lorenzo.fiorini at gmail.com  Wed Apr 23 13:18:47 2008
From: lorenzo.fiorini at gmail.com (Lorenzo Fiorini)
Date: Wed Apr 23 13:30:11 2008
Subject: [Harbour] tbrowse ::forcestable() never ending loop
In-Reply-To: <20080423133234.GA2772@34-mo7-2.acn.waw.pl>
References: <9257026e0804230551oa1a6a4fr4e9c0e4e77898384@mail.gmail.com>
	<20080423133234.GA2772@34-mo7-2.acn.waw.pl>
Message-ID: <9257026e0804231018o316e1d4age8fdff9c9a9db70e@mail.gmail.com>

On Wed, Apr 23, 2008 at 3:32 PM, Przemyslaw Czerpak <druzus@acn.waw.pl> wrote:

>  BTW have you tested this code with Clipper?

Yes it is old C5x code. What I've found so far is that ::stabilize()
never return .T. when that condition is met but it doesn't call my
skipblock code. It happens IF a ::down() is done when ::RowPos is at
the last row of the tbrowse.

What I mean is that in this case I never reach alert( "here1" )

...
      nPos := AScan( ::aCellStatus, _TBR_UNDEF )
      alert( "here0" )

      IF nPos == 0
         ::setPosition( ::nRowPos )
         ::nRowPos := ::nBufferPos
         ::lStable := .T.
         ::lInvalid := .F.
         alert( "here1" )
         DispBegin()
         FOR EACH lDisp IN ::aDispStatus
            IF lDisp
               ::dispRow( lDisp:__enumIndex() )
            ENDIF
         NEXT
         DispEnd()

      ELSE
         /* TODO: CA-Clipper displays all valid records in the buffer when
          *       they should be drawn on the screen f.e. after horizontal
          *       scrolling in each stabilize call not only at the end of
          *       stabilization process. [druzus]
          */
         RETURN .F.
      ENDIF
...

Any suggestion is welcome.

best regards,
Lorenzo
From harbour.01 at syenar.hu  Wed Apr 23 14:14:59 2008
From: harbour.01 at syenar.hu (=?iso-8859-2?Q?Szak=E1ts_Viktor?=)
Date: Wed Apr 23 14:15:13 2008
Subject: [Harbour] CHANGELOG: 2008-04-23 20:11 UTC+0100 Viktor Szakats
 (harbour.01 syenar hu)
Message-ID: <01c8a56d$Blat.v2.6.2$f0cd95c4$1f6cbc5420a0@127.0.0.1>

2008-04-23 20:11 UTC+0100 Viktor Szakats (harbour.01 syenar hu)
   * source/rtl/tget.prg
     + Some protected object vars renamed to better show their roles.
     ! Fixed ::setFocus() to not mess with width related vars.
     ! Fixed ::PutMask() to not mess with display width.
     ! Fixed ::varPut() to only accept certain var types.
     ! Fixed ::picture() to more consistently reset picture related vars.
     ! Hack added to ::Reform() to try to set ::nDispLen like CA-Cl*pper.
     ! Fixed ::posInBuffer() to only work when in focus.
       (I didn't test if this is XPP compatible, but it surely avoids 
       a possible RTE now.)
     ! Removed ::display() non-compatible 'lForce' parameter.
     ! Minor cleanups.
     ; NOTE: Now o[16] (aka ::nDispLen) is almost totally CA-Cl*pper 
             compatible.

   * tests/rto_get.prg
     + Added some more tests.
--
Brgds,
Viktor

From druzus at acn.waw.pl  Wed Apr 23 14:38:09 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Wed Apr 23 14:38:15 2008
Subject: [Harbour] tbrowse ::forcestable() never ending loop
In-Reply-To: <9257026e0804231018o316e1d4age8fdff9c9a9db70e@mail.gmail.com>
References: <9257026e0804230551oa1a6a4fr4e9c0e4e77898384@mail.gmail.com>
	<20080423133234.GA2772@34-mo7-2.acn.waw.pl>
	<9257026e0804231018o316e1d4age8fdff9c9a9db70e@mail.gmail.com>
Message-ID: <20080423183809.GA3773@34-mo7-2.acn.waw.pl>

On Wed, 23 Apr 2008, Lorenzo Fiorini wrote:
> >  BTW have you tested this code with Clipper?
> Yes it is old C5x code.

That's what I'm afraid ;-)
Have you tested _exactly_ this (current) code in Clipper?
But before you will waste time for such tests please read below.

> What I've found so far is that ::stabilize()
> never return .T. when that condition is met but it doesn't call my
> skipblock code. It happens IF a ::down() is done when ::RowPos is at
> the last row of the tbrowse.

Try to compile tbrowse.prg with -b and see in debugger where it stops
to execute or enter the loop have loop.

> What I mean is that in this case I never reach alert( "here1" )
> 
> ...
>       nPos := AScan( ::aCellStatus, _TBR_UNDEF )
>       alert( "here0" )

If tbrowse is unstable then this code have to be executed
if program wasn't stopped inside skipblock().
I've found one mistake (missing: + 1) in line 724 which should look like:

   WHILE ( nPos := AScan( ::aCellStatus, _TBR_NONE, nPos + 1, ::nBufferPos - nPos ) ) != 0

but it should not cause any of such effect for single record skip
anyhow please test with fixed version.
I think that debugger should give the best answer if it's hard to isolate
the problem.

best regards,
Przemek
From lorenzo.fiorini at gmail.com  Wed Apr 23 14:49:33 2008
From: lorenzo.fiorini at gmail.com (Lorenzo Fiorini)
Date: Wed Apr 23 14:49:36 2008
Subject: [Harbour] tbrowse ::forcestable() never ending loop
In-Reply-To: <20080423183809.GA3773@34-mo7-2.acn.waw.pl>
References: <9257026e0804230551oa1a6a4fr4e9c0e4e77898384@mail.gmail.com>
	<20080423133234.GA2772@34-mo7-2.acn.waw.pl>
	<9257026e0804231018o316e1d4age8fdff9c9a9db70e@mail.gmail.com>
	<20080423183809.GA3773@34-mo7-2.acn.waw.pl>
Message-ID: <9257026e0804231149i1f21539fl93452d1ebc76eee7@mail.gmail.com>

On Wed, Apr 23, 2008 at 8:38 PM, Przemyslaw Czerpak <druzus@acn.waw.pl> wrote:

>  If tbrowse is unstable then this code have to be executed
>  if program wasn't stopped inside skipblock().
>  I've found one mistake (missing: + 1) in line 724 which should look like:
>
>    WHILE ( nPos := AScan( ::aCellStatus, _TBR_NONE, nPos + 1, ::nBufferPos - nPos ) ) != 0
>
>  but it should not cause any of such effect for single record skip
>  anyhow please test with fixed version.
>  I think that debugger should give the best answer if it's hard to isolate
>  the problem.

BINGO, after the change no more never ending loop.

The visual result is still different from C53b one but the real
problem was the app freeze.

best regards,
Lorenzo
From druzus at acn.waw.pl  Wed Apr 23 15:12:24 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Wed Apr 23 15:12:31 2008
Subject: [Harbour] tbrowse ::forcestable() never ending loop
In-Reply-To: <9257026e0804231149i1f21539fl93452d1ebc76eee7@mail.gmail.com>
References: <9257026e0804230551oa1a6a4fr4e9c0e4e77898384@mail.gmail.com>
	<20080423133234.GA2772@34-mo7-2.acn.waw.pl>
	<9257026e0804231018o316e1d4age8fdff9c9a9db70e@mail.gmail.com>
	<20080423183809.GA3773@34-mo7-2.acn.waw.pl>
	<9257026e0804231149i1f21539fl93452d1ebc76eee7@mail.gmail.com>
Message-ID: <20080423191224.GA6331@34-mo7-2.acn.waw.pl>

On Wed, 23 Apr 2008, Lorenzo Fiorini wrote:
> BINGO, after the change no more never ending loop.

Fine and thank you very much for your help.

> The visual result is still different from C53b one but the real
> problem was the app freeze.

Can you describe with more details the difference?

best regards,
Przemek
From lorenzo.fiorini at gmail.com  Wed Apr 23 15:40:58 2008
From: lorenzo.fiorini at gmail.com (Lorenzo Fiorini)
Date: Wed Apr 23 15:41:05 2008
Subject: [Harbour] tbrowse ::forcestable() never ending loop
In-Reply-To: <20080423191224.GA6331@34-mo7-2.acn.waw.pl>
References: <9257026e0804230551oa1a6a4fr4e9c0e4e77898384@mail.gmail.com>
	<20080423133234.GA2772@34-mo7-2.acn.waw.pl>
	<9257026e0804231018o316e1d4age8fdff9c9a9db70e@mail.gmail.com>
	<20080423183809.GA3773@34-mo7-2.acn.waw.pl>
	<9257026e0804231149i1f21539fl93452d1ebc76eee7@mail.gmail.com>
	<20080423191224.GA6331@34-mo7-2.acn.waw.pl>
Message-ID: <9257026e0804231240y1fc9b009o9ef141f66dcb42a8@mail.gmail.com>

On Wed, Apr 23, 2008 at 9:12 PM, Przemyslaw Czerpak <druzus@acn.waw.pl> wrote:

>  Can you describe with more details the difference?

I've attached a test that simulate the real code ( not exactly since
it didn't catch the previous error ).

If you press K_CTRL_INS when the cursor is on the last row ( the
second ) C53B "opens" the rows to make room for a new one while
Harbour's tbrowse shows the first row duplicated.

best regards,
Lorenzo
-------------- next part --------------
#include "inkey.ch"

procedure Main()

local oBrowse, lEnd := .f., nKey

cls

use test alias test
set filter to recno() < 3

oBrowse := TBrowseDB( 2, 30, 12, 70 )

oBrowse:AddColumn(tbColumnNew("Last Name",{||test->first}))
oBrowse:AddColumn(tbColumnNew("First Name",{||test->last}))
oBrowse:AddColumn(tbColumnNew("Street",{||test->street}))

oBrowse:Freeze := 1

While !lEnd

      dispbegin()

      oBrowse:ForceStable()

      dispend()

      nKey = InKey( 0 )

      do case
         case nKey == K_ESC
              lEnd = .t.

         case nKey == K_DOWN
              oBrowse:Down()

         case nKey == K_UP
              oBrowse:Up()

         case nKey == K_LEFT
              oBrowse:colpos--

         case nKey == K_RIGHT
              oBrowse:colpos++

         case nKey = K_PGDN
              oBrowse:pageDown()

         case nKey = K_PGUP
              oBrowse:pageUp()

         case nKey = K_CTRL_PGUP
              oBrowse:goTop()

         case nKey = K_CTRL_PGDN
              oBrowse:goBottom()

         case nKey = K_HOME
              oBrowse:home()

         case nKey = K_END
              oBrowse:end()

         case nKey = K_CTRL_LEFT
              oBrowse:panLeft()

         case nKey = K_CTRL_RIGHT
              oBrowse:panRight()

         case nKey = K_CTRL_HOME
              oBrowse:panHome()

         case nKey = K_CTRL_END
              oBrowse:panEnd()

         case nKey = K_CTRL_INS
              oBrowse:RefreshCurrent()
              oBrowse:down()
              dbgoto( 1 )
              TAB_INS( oBrowse )
              inkey( 2 )
              oBrowse:RefreshAll()

      endcase

      oBrowse:refreshCurrent()

   end

return

//********************************************************************
//
//     TAB_INS()
//
//********************************************************************
//
function TAB_INS( oTBrowse )

   local nScrTop
   local nScrLeft
   local nScrRight
   local nScrBottom

   oTBrowse:deHilite()

   if ( oTBrowse:RowPos == oTBrowse:RowCount )

      nScrTop  = 3
      nScrLeft = oTBrowse:nLeft

      nScrBottom = 3 + oTBrowse:RowPos - 1
      nScrRight = oTBrowse:nRight

      scroll( nScrTop, ;
              nScrLeft, ;
              nScrBottom, ;
              nScrRight, 1 ) // Scroll up

   else

      oTBrowse:Down()

      nScrTop  = 3 + oTBrowse:RowPos
      nScrLeft = oTBrowse:nLeft

      nScrBottom = 3 + oTBrowse:RowCount - 1
      nScrRight = oTBrowse:nRight

      scroll( nScrTop, ;
              nScrLeft, ;
              nScrBottom, ;
              nScrRight, -1 ) // Scroll down

   endif

   oTBrowse:colpos := 1

   dispbegin()

   // This runs ok. Leave it in this way 31-Oct-1993

   oTBrowse:RefreshCurrent()

   oTBrowse:ForceStable()

   dbgoto( lastrec() + 1 )

   oTBrowse:RefreshCurrent()

   oTBrowse:ForceStable()

   dispend()

   return .t.

From harbour.01 at syenar.hu  Wed Apr 23 16:43:47 2008
From: harbour.01 at syenar.hu (=?iso-8859-2?Q?Szak=E1ts_Viktor?=)
Date: Wed Apr 23 16:43:54 2008
Subject: [Harbour] CHANGELOG: 2008-04-23 22:31 UTC+0100 Viktor Szakats
 (harbour.01 syenar hu)
Message-ID: <01c8a582$Blat.v2.6.2$ba687fa2$14209f89af30@127.0.0.1>

2008-04-23 22:31 UTC+0100 Viktor Szakats (harbour.01 syenar hu)
   * contrib/rddads/adsfunc.c
     + Added these functions:
       ADSCREATESAVEPOINT() (for ADS 8 and above)
       ADSROLLBACKSAVEPOINT() (for ADS 8 and above)
       ADSDDCREATELINK() (for ADS 9 and above)
       ADSDDMODIFYLINK() (for ADS 9 and above)
       ADSDDDROPLINK() (for ADS 9 and above)
     + Extended AdsMgGetUserNames() to return aucAuthUserName,
       aucOSUserLoginName and aucTSAddress from ADS_MGMT_USER_INFO
       structure. Only available for ADS >= 8.
     ; Borrowed from xhb / Luiz Rafael Culik.

   * contrib/rddads/ads1.c
     + Made it compile with ADS 9.

   * contrib/rddads/adsmgmnt.c
     ! Fixed ADS_VER -> ADS_REQUIRE_VERSION
--
Brgds,
Viktor

From esgici at gmail.com  Wed Apr 23 19:20:25 2008
From: esgici at gmail.com (Bicahi Esgici)
Date: Wed Apr 23 19:20:27 2008
Subject: [Harbour] quiet abend
Message-ID: <d4ce00e70804231620q3dcf29c0ic766bd8fcc94ce63@mail.gmail.com>

Hi to all

  subs('123',4)

Although memory violation is a big programing error, abending without
any error message is a programer's chaos!

Best regards
-- 
esgici
From esgici at gmail.com  Wed Apr 23 23:00:20 2008
From: esgici at gmail.com (Bicahi Esgici)
Date: Wed Apr 23 23:00:24 2008
Subject: [Harbour] re: quiet abend
Message-ID: <d4ce00e70804232000x6b6ca549w1904de43b876e5e1@mail.gmail.com>

Hi to all

  sorry, wrong diagnose.

Best regards
--
esgici

-- 
esgici
From wangshuming01 at gmail.com  Thu Apr 24 01:46:35 2008
From: wangshuming01 at gmail.com (wang shuming)
Date: Thu Apr 24 01:46:43 2008
Subject: [Harbour] Are there hb_fuse(),hb_fclose(),hb_fskip() in Harbour ?
Message-ID: <c26b21640804232246p296a5c7dt22d9b7a201f4dbd2@mail.gmail.com>

Hi,
   These hb_fuse(),hb_fclose(),hb_fskip() ,will be easily to deal with txt
files .
 Regards !
Shuming Wang
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.harbour-project.org/pipermail/harbour/attachments/20080424/e9ed8a14/attachment.html
From harbour.01 at syenar.hu  Thu Apr 24 02:48:11 2008
From: harbour.01 at syenar.hu (=?ISO-8859-1?Q?Szak=E1ts_Viktor?=)
Date: Thu Apr 24 02:49:38 2008
Subject: [Harbour] Are there hb_fuse(), hb_fclose(),
	hb_fskip() in Harbour ?
In-Reply-To: <c26b21640804232246p296a5c7dt22d9b7a201f4dbd2@mail.gmail.com>
References: <c26b21640804232246p296a5c7dt22d9b7a201f4dbd2@mail.gmail.com>
Message-ID: <A9C35170-61B7-4077-BC65-6BDE855C2E4F@syenar.hu>

Hi,

Yes. You can find them in the hbmisc contrib.
They are the same as the xhb versions.

You can also find a similar, but wider set of
functions - actually the original of the above
functions - in contrib/hbnf (Nanfor Library - ft_F*()).

Brgds,
Viktor

On 2008.04.24., at 7:46, wang shuming wrote:

> Hi,
>    These hb_fuse(),hb_fclose(),hb_fskip() ,will be easily to deal  
> with txt files .
>  Regards !
> Shuming Wang
>
> _______________________________________________
> Harbour mailing list
> Harbour@harbour-project.org
> http://lists.harbour-project.org/mailman/listinfo/harbour

From rafa at tesipro.com  Thu Apr 24 03:51:44 2008
From: rafa at tesipro.com (rafa)
Date: Thu Apr 24 03:51:50 2008
Subject: [Harbour] Support XML Library ?
In-Reply-To: <9257026e0804230350w615d43c9g9b0f85848c2969c6@mail.gmail.com>
References: <480CB942.2030706@tesipro.com>	<9257026e0804230007y5e9bce25xa2a583b3193758a2@mail.gmail.com>	<480EF4A1.80800@tesipro.com>
	<9257026e0804230350w615d43c9g9b0f85848c2969c6@mail.gmail.com>
Message-ID: <48103C10.7030407@tesipro.com>

Lorenzo Fiorini escribi?:
> On Wed, Apr 23, 2008 at 10:34 AM, rafa <rafa@tesipro.com> wrote:
>
>   
>>  Are you test  in Harbour of XML support ?
>>     
>
>   
>>  If this files are compatibility with Harbour i think that
>>  put this files in RTL of Harbour, then Harbour the best! ;-)
>>     
>
>   
>>  I waiting ONLY this files , support of XML for change Harbour by xHarbour,
>>  and this moment i stop this change by this motive.
>>     
>
> I'm not sure I understood what you mean ( are you using a translation
> software? )
>
> AFAIK XML support is the same, the only difference is that xHarbour
> has it in the RTL while Harbour has it in a xhb lib.
>
>   
Lorenzo, please, Can you send me your library txml ?
The files txml.prg and hbxml.c NOT COMPILER in Harbour,
many errrors ;-(

Example;
1.- METHOD GetAttribute( cAttrib )         INLINE IIF ( cAttrib IN 
::aAttributes, ::aAttributes[ cAttrib ], NIL )
2.- ( oFound:cName == NIL .or. .not. oFound:cName LIKE ::cName )
3.- ( oFound:cData == NIL .or. .not. oFound:cData HAS ::cData )

Exist clausule IN, LIKE, HAS in Harbour ?

Questions ;
It's possible portable a Harbour this two files ?

Only this files for total change at Harbour.

( Sorry my bad english )
Regards
Rafa Carmona
From harbour.01 at syenar.hu  Thu Apr 24 04:29:27 2008
From: harbour.01 at syenar.hu (=?iso-8859-2?Q?Szak=E1ts_Viktor?=)
Date: Thu Apr 24 04:29:32 2008
Subject: [Harbour] CHANGELOG: 2008-04-24 10:24 UTC+0100 Viktor Szakats
 (harbour.01 syenar hu)
Message-ID: <01c8a5e5$Blat.v2.6.2$4f54d996$1df427b6874@127.0.0.1>

2008-04-24 10:24 UTC+0100 Viktor Szakats (harbour.01 syenar hu)
   * contrib/xhb/xhb.ch
   * contrib/xhb/xhbfunc.c
     ! xhb flavour of __KEYBOARD() synced with current xhb code.

   * contrib/hbmisc/hb_f.c
     ! Swapped C file seek constants to Harbour ones.
     * Minor cleanups and formatting.

   * source/rtl/tbrowse.prg
     ! Committed patch to ::setPosition() 
       submitted by Prezemek on the devl list.

   * source/rtl/tget.prg
     * Minor changes. Copyright updated.
--
Brgds,
Viktor

From wangshuming01 at gmail.com  Thu Apr 24 04:52:02 2008
From: wangshuming01 at gmail.com (wang shuming)
Date: Thu Apr 24 04:52:05 2008
Subject: [Harbour] Are there hb_fuse(), hb_fclose(), hb_fskip() in Harbour ?
Message-ID: <c26b21640804240152r4f0e8a43h6c954dda7afa94c6@mail.gmail.com>

Szak?ts Viktor,*
  *Thanks !*
*Shuming Wang
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.harbour-project.org/pipermail/harbour/attachments/20080424/4eb12781/attachment.html
From harbour.01 at syenar.hu  Thu Apr 24 04:53:01 2008
From: harbour.01 at syenar.hu (=?iso-8859-2?Q?Szak=E1ts_Viktor?=)
Date: Thu Apr 24 04:53:05 2008
Subject: [Harbour] CHANGELOG: 2008-04-24 10:51 UTC+0100 Viktor Szakats
 (harbour.01 syenar hu)
Message-ID: <01c8a5e8$Blat.v2.6.2$9a15d27a$1c18bca8a12a@127.0.0.1>

2008-04-24 10:51 UTC+0100 Viktor Szakats (harbour.01 syenar hu)
   * include/memoedit.ch
   * source/rtl/memoedit.prg
     ! XPP feature marked with HB_COMPAT_XPP.
     ! Fixed to not crash if user callback function 
       returns non-numeric type.
--
Brgds,
Viktor

From harbour.01 at syenar.hu  Thu Apr 24 05:16:06 2008
From: harbour.01 at syenar.hu (=?iso-8859-2?Q?Szak=E1ts_Viktor?=)
Date: Thu Apr 24 05:16:09 2008
Subject: [Harbour] CHANGELOG: 2008-04-24 11:03 UTC+0100 Viktor Szakats
 (harbour.01 syenar hu)
Message-ID: <01c8a5eb$Blat.v2.6.2$d3a59662$1bc4c4deb98@127.0.0.1>

2008-04-24 11:03 UTC+0100 Viktor Szakats (harbour.01 syenar hu)
   * source/rtl/achoice.prg
     ! Fixed to abort (rather than crash), when user callback 
       function returns a non-numeric type. This is CA-Cl*pper 
       compatible behaviour.

   * source/rtl/dbedit.prg
     + Documented CA-Cl*pper behaviour when it crashes if 
       a non-numeric (and non-NIL) var is returned from 
       the user callback function.
--
Brgds,
Viktor

From druzus at acn.waw.pl  Thu Apr 24 05:51:52 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Thu Apr 24 05:51:57 2008
Subject: [Harbour] tbrowse ::forcestable() never ending loop
In-Reply-To: <9257026e0804231240y1fc9b009o9ef141f66dcb42a8@mail.gmail.com>
References: <9257026e0804230551oa1a6a4fr4e9c0e4e77898384@mail.gmail.com>
	<20080423133234.GA2772@34-mo7-2.acn.waw.pl>
	<9257026e0804231018o316e1d4age8fdff9c9a9db70e@mail.gmail.com>
	<20080423183809.GA3773@34-mo7-2.acn.waw.pl>
	<9257026e0804231149i1f21539fl93452d1ebc76eee7@mail.gmail.com>
	<20080423191224.GA6331@34-mo7-2.acn.waw.pl>
	<9257026e0804231240y1fc9b009o9ef141f66dcb42a8@mail.gmail.com>
Message-ID: <20080424095152.GA13937@34-mo7-2.acn.waw.pl>

On Wed, 23 Apr 2008, Lorenzo Fiorini wrote:
> >  Can you describe with more details the difference?
> I've attached a test that simulate the real code ( not exactly since
> it didn't catch the previous error ).
> If you press K_CTRL_INS when the cursor is on the last row ( the
> second ) C53B "opens" the rows to make room for a new one while
> Harbour's tbrowse shows the first row duplicated.

Many thanks. I've got it. I'll commit fix ASAP.

best regards,
Przemek
From druzus at acn.waw.pl  Thu Apr 24 05:54:30 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Thu Apr 24 05:54:34 2008
Subject: [Harbour] Support XML Library ?
In-Reply-To: <48103C10.7030407@tesipro.com>
References: <480CB942.2030706@tesipro.com>
	<9257026e0804230007y5e9bce25xa2a583b3193758a2@mail.gmail.com>
	<480EF4A1.80800@tesipro.com>
	<9257026e0804230350w615d43c9g9b0f85848c2969c6@mail.gmail.com>
	<48103C10.7030407@tesipro.com>
Message-ID: <20080424095430.GB13937@34-mo7-2.acn.waw.pl>

On Thu, 24 Apr 2008, rafa wrote:
> Lorenzo, please, Can you send me your library txml ?
> The files txml.prg and hbxml.c NOT COMPILER in Harbour,
> many errrors ;-(

They are in Harbour sven in contrib/xhb.
It's enough to add xhb lib to your linked library list.

> Example;
> 1.- METHOD GetAttribute( cAttrib )         INLINE IIF ( cAttrib IN 
> ::aAttributes, ::aAttributes[ cAttrib ], NIL )
> 2.- ( oFound:cName == NIL .or. .not. oFound:cName LIKE ::cName )
> 3.- ( oFound:cData == NIL .or. .not. oFound:cData HAS ::cData )
> Exist clausule IN, LIKE, HAS in Harbour ?

See contrib/xhb/hbcompat.ch

> Questions ;
> It's possible portable a Harbour this two files ?
> Only this files for total change at Harbour.

It was done in last year.

best regards,
Przemek
From miguelangel at marchuet.net  Thu Apr 24 06:56:54 2008
From: miguelangel at marchuet.net (Miguel Angel Marchuet)
Date: Thu Apr 24 06:54:52 2008
Subject: [Harbour] SETGET METHOD is a DATA :(
Message-ID: <48106776.9040100@marchuet.net>

__objHasData( oObject, cSymbol ) returns .T. for SETGET METHOD
and returns .F. for __objHasMethod( oObject, cSymbol )

And other functions as follows, has the same problem:
__objGetMsgList( oObject, lDataMethod, nClassType )
__objGetMethodList( oObject )
__objGetMsgFullList( oObject, lData, nRange, nScope, nNoScope )


We are trying to create a destroyer method how initializes
all used data, recovering its memory. for example an application
which consumes 20Mg of memory has been reduced to 4Mg only

Interesting, or not?

But we need that SETGET METHOD will be a METHOD not a DATA.

Any body can change this ?

An make this functions at c level ?

Best regards,
Miguel Angel marchuet
From lorenzo.fiorini at gmail.com  Thu Apr 24 07:00:01 2008
From: lorenzo.fiorini at gmail.com (Lorenzo Fiorini)
Date: Thu Apr 24 07:00:05 2008
Subject: [Harbour] ChangeLog 2008-04-24 13:00 UTC+0100 Lorenzo Fiorini
Message-ID: <9257026e0804240400tb952f7cjff0e0e200cb23831@mail.gmail.com>

2008-04-24 13:00 UTC+0100 Lorenzo Fiorini (lorenzo.fiorini/at/gmail.com)
  * contrib/hbgd/gdimage.prg
    * removed two method that simply call public function
    * renamed GetTrueColorPixel back to GetTrueColor
  * contrib/hbtip/sendmail.prg
  * contrib/hbtip/smtpcln.prg
    * added support for smtp with authentication
	 * added timeout parameter
	 * borrowed from xHarbour
From rafa at tesipro.com  Thu Apr 24 07:49:02 2008
From: rafa at tesipro.com (rafa)
Date: Thu Apr 24 07:49:11 2008
Subject: [Harbour] Support XML Library ?
In-Reply-To: <20080424095430.GB13937@34-mo7-2.acn.waw.pl>
References: <480CB942.2030706@tesipro.com>	<9257026e0804230007y5e9bce25xa2a583b3193758a2@mail.gmail.com>	<480EF4A1.80800@tesipro.com>	<9257026e0804230350w615d43c9g9b0f85848c2969c6@mail.gmail.com>	<48103C10.7030407@tesipro.com>
	<20080424095430.GB13937@34-mo7-2.acn.waw.pl>
Message-ID: <481073AE.5010705@tesipro.com>

Many Thanks!
I view/make this library.

Regards
Rafa Carmona


From rafa at tesipro.com  Thu Apr 24 11:22:07 2008
From: rafa at tesipro.com (rafa)
Date: Thu Apr 24 11:22:17 2008
Subject: [Harbour] Support XML Library ?
In-Reply-To: <20080424095430.GB13937@34-mo7-2.acn.waw.pl>
References: <480CB942.2030706@tesipro.com>	<9257026e0804230007y5e9bce25xa2a583b3193758a2@mail.gmail.com>	<480EF4A1.80800@tesipro.com>	<9257026e0804230350w615d43c9g9b0f85848c2969c6@mail.gmail.com>	<48103C10.7030407@tesipro.com>
	<20080424095430.GB13937@34-mo7-2.acn.waw.pl>
Message-ID: <4810A59F.6010305@tesipro.com>

I have problem with link xhb.lib, not show program. ( under fivewin ).
I link with xHarbour, no problem.
I link with Harbour , no problem. ( without xhb.lib and not include code 
source use txml )
I link with Harbour and xhb.lib, nothing, return direct at the console.

Were is the problem ?

Thank you!
Rafa Carmona
From lorenzo.fiorini at gmail.com  Thu Apr 24 11:47:11 2008
From: lorenzo.fiorini at gmail.com (Lorenzo Fiorini)
Date: Thu Apr 24 11:58:00 2008
Subject: [Harbour] Support XML Library ?
In-Reply-To: <4810A59F.6010305@tesipro.com>
References: <480CB942.2030706@tesipro.com>
	<9257026e0804230007y5e9bce25xa2a583b3193758a2@mail.gmail.com>
	<480EF4A1.80800@tesipro.com>
	<9257026e0804230350w615d43c9g9b0f85848c2969c6@mail.gmail.com>
	<48103C10.7030407@tesipro.com>
	<20080424095430.GB13937@34-mo7-2.acn.waw.pl>
	<4810A59F.6010305@tesipro.com>
Message-ID: <9257026e0804240847j267fa212j30c7ea8e15d07fff@mail.gmail.com>

On Thu, Apr 24, 2008 at 5:22 PM, rafa <rafa@tesipro.com> wrote:

>  I link with Harbour and xhb.lib, nothing, return direct at the console.
>
>  Were is the problem ?

It's difficult to help you with such few informations.
I've just checked my xml functions and they work as expected with actual svn.
Put some debug messages here and there and try to narrow the problem.
It would be even better to have self contained ( no fivewin code ) test code.

best regards,
Lorenzo
From rafa at tesipro.com  Thu Apr 24 12:54:16 2008
From: rafa at tesipro.com (rafa)
Date: Thu Apr 24 12:54:20 2008
Subject: [Harbour] Support XML Library ?
In-Reply-To: <9257026e0804240847j267fa212j30c7ea8e15d07fff@mail.gmail.com>
References: <480CB942.2030706@tesipro.com>	<9257026e0804230007y5e9bce25xa2a583b3193758a2@mail.gmail.com>	<480EF4A1.80800@tesipro.com>	<9257026e0804230350w615d43c9g9b0f85848c2969c6@mail.gmail.com>	<48103C10.7030407@tesipro.com>	<20080424095430.GB13937@34-mo7-2.acn.waw.pl>	<4810A59F.6010305@tesipro.com>
	<9257026e0804240847j267fa212j30c7ea8e15d07fff@mail.gmail.com>
Message-ID: <4810BB38.6030402@tesipro.com>

Oh! It is problem from file /contrib/mtpl_b32.mak
   
$(CC) $(CLIBFLAGS) -P -o$@ $(OBJ_DIR)\$&.c

This is -P not is correct!

Thank you at M.Marchuet for your help!

Another i have diferents problems with TXML and i report
as soon as possible.

Regards
Rafa Carmona
From teo at windtelsoft.com  Thu Apr 24 15:31:25 2008
From: teo at windtelsoft.com (Teo Fonrouge)
Date: Thu Apr 24 15:31:31 2008
Subject: [Harbour] SETGET METHOD is a DATA :(
In-Reply-To: <48106776.9040100@marchuet.net>
References: <48106776.9040100@marchuet.net>
Message-ID: <200804241431.25252.teo@windtelsoft.com>

On Thursday 24 April 2008 05:56:54 am Miguel Angel Marchuet wrote:
> __objHasData( oObject, cSymbol ) returns .T. for SETGET METHOD
> and returns .F. for __objHasMethod( oObject, cSymbol )
>
> And other functions as follows, has the same problem:
> __objGetMsgList( oObject, lDataMethod, nClassType )
> __objGetMethodList( oObject )
> __objGetMsgFullList( oObject, lData, nRange, nScope, nNoScope )
>
>
> We are trying to create a destroyer method how initializes
> all used data, recovering its memory. for example an application
> which consumes 20Mg of memory has been reduced to 4Mg only

Can you provide a small code snippet to show us the problem and how the 
solution works ?

>
> Interesting, or not?
>
> But we need that SETGET METHOD will be a METHOD not a DATA.
>
> Any body can change this ?
>
> An make this functions at c level ?

I've found some situations where inside a loop which executes several times 
(thousands), and several classes are created & destroyed inside, then 
effectively the application starts to eat lots of memory whitout realease it. 
The solution was simply to put somewhere inside the loop the hb_gcAll() 
function and the memory consumption never grows up.


best regards

Teo
From harbour.01 at syenar.hu  Thu Apr 24 15:27:01 2008
From: harbour.01 at syenar.hu (=?iso-8859-2?Q?Szak=E1ts_Viktor?=)
Date: Thu Apr 24 15:35:13 2008
Subject: [Harbour] CHANGELOG: 2008-04-24 21:23 UTC+0100 Viktor Szakats
 (harbour.01 syenar hu)
Message-ID: <01c8a641$Blat.v2.6.2$2bb390d4$c20ba6d9d5c@127.0.0.1>

2008-04-24 21:23 UTC+0100 Viktor Szakats (harbour.01 syenar hu)
   * common.mak
   * make_vcce.mak
   * make_b32.mak
   * make_gcc.mak
   * make_vc.mak
   * utils/hbdoc/Makefile
   * utils/hbdoc/hbdoc.prg
   * utils/hbdoc/genpdf1.prg
     - Removed pdflib references from make file, since the 
       contrib was not working and got removed.
     + PDF enabling logic in HBDOC made local to HBDOC.
       Now HBDOC_PDF should be #defined in HARBOURFLAGS 
       (or PRG_USR) envvar, proper pdf library should be 
       specified using LDFLAGS envvar.

   * contrib/mtpl_b32.mak
     ! Removed permanent '-P' C compiler switch 
       from .prg -> .c rule. Thanks Rafa.
       Marek pls check me.
--
Brgds,
Viktor

From druzus at acn.waw.pl  Fri Apr 25 06:01:20 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Fri Apr 25 06:01:29 2008
Subject: [Harbour] 2008-04-25 12:01 UTC+0200 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <200804251001.m3PA1Kgu015160@31-mo5-4.acn.waw.pl>

2008-04-25 12:01 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/tbrowse.prg
    * changed internal logic used for vertical movements. Now it should
      be much closer to Clipper though it also replicates some wrong
      Clipper behaviors due to removed protection against some concurrent
      modifications in browsed object. I left two TOFIX notes and I'll
      reimplement them later. Please test. Lorenzo it should resolve
      the problem you reported.

best regards
Przemek
From harbour.01 at syenar.hu  Fri Apr 25 07:06:47 2008
From: harbour.01 at syenar.hu (=?ISO-8859-1?Q?Szak=E1ts_Viktor?=)
Date: Fri Apr 25 07:08:40 2008
Subject: [Harbour] 2008-04-25 12:01 UTC+0200 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <200804251001.m3PA1Kgu015160@31-mo5-4.acn.waw.pl>
References: <200804251001.m3PA1Kgu015160@31-mo5-4.acn.waw.pl>
Message-ID: <F445A149-4B57-4573-9D42-A5AB6C7F7201@syenar.hu>

Hi Przemek,

In real world test it looks good after this modification.

I'm attaching a small test program which traces the way
callbacks are called and status (:rowPos, RecNo()) changes.

The output looks much different from Clipper. (Being exactly
Clipper compatible on this level is certainly a plus, but
maybe isn't worth the extra effort.)

Brgds,
Viktor

-------------- next part --------------
A non-text attachment was scrubbed...
Name: br.prg
Type: application/octet-stream
Size: 7351 bytes
Desc: not available
Url : http://lists.harbour-project.org/pipermail/harbour/attachments/20080425/84f72bac/br.obj
-------------- next part --------------


On 2008.04.25., at 12:01, Przemyslaw Czerpak wrote:

> 2008-04-25 12:01 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
>  * harbour/source/rtl/tbrowse.prg
>    * changed internal logic used for vertical movements. Now it should
>      be much closer to Clipper though it also replicates some wrong
>      Clipper behaviors due to removed protection against some  
> concurrent
>      modifications in browsed object. I left two TOFIX notes and I'll
>      reimplement them later. Please test. Lorenzo it should resolve
>      the problem you reported.
>
> best regards
> Przemek
> _______________________________________________
> Harbour mailing list
> Harbour@harbour-project.org
> http://lists.harbour-project.org/mailman/listinfo/harbour

From druzus at acn.waw.pl  Fri Apr 25 07:37:29 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Fri Apr 25 07:37:36 2008
Subject: [Harbour] 2008-04-25 12:01 UTC+0200 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <F445A149-4B57-4573-9D42-A5AB6C7F7201@syenar.hu>
References: <200804251001.m3PA1Kgu015160@31-mo5-4.acn.waw.pl>
	<F445A149-4B57-4573-9D42-A5AB6C7F7201@syenar.hu>
Message-ID: <20080425113729.GA18486@34-mo7-2.acn.waw.pl>

On Fri, 25 Apr 2008, Szak?ts Viktor wrote:
> Hi Przemek,
> In real world test it looks good after this modification.
> I'm attaching a small test program which traces the way
> callbacks are called and status (:rowPos, RecNo()) changes.
> The output looks much different from Clipper. (Being exactly
> Clipper compatible on this level is certainly a plus, but
> maybe isn't worth the extra effort.)

Thank you very much, I'll make test in a weekend.
BTW which Clipper version did you use for tests?
I know about some small differences to CL52 but the general
rules are very similar. CL53 TBrowse is a different story.
All forward skips inside for cursor movements (not the skips
for update) are replicate twice. Such effect can be easy
reached in :setPosition() by moving back to previous position
or top row. Unlike the problem with record refreshing
I described few days ago it looks for me like a protection
to detect network updates. It was probably necessary
because Clipper does not properly respect value returned 
from skip block during buffer updating (:readRecord() and
:stabilize()). But it's also quite expensive for strongly
filtered tables. Without bitmap filters it's real performance
killer. Instead of replicating it I'd prefer to add full
support for values returned from skip block in all places
with automatic buffer updating and scrolling just like it
is done in :setPosition() now. It means that user skip code
blocks will fully control the TBrowse behavior. From the
user point of view in Clipper some states are undefined.

best regards,
Przemek
From gabor.salai at euroherc.hr  Fri Apr 25 08:28:49 2008
From: gabor.salai at euroherc.hr (gabor salai [intranet242])
Date: Fri Apr 25 08:02:16 2008
Subject: [Harbour] 2008-04-25 12:01 UTC+0200 Przemyslaw
	Czerpak(druzus/at/priv.onet.pl)
References: <200804251001.m3PA1Kgu015160@31-mo5-4.acn.waw.pl><F445A149-4B57-4573-9D42-A5AB6C7F7201@syenar.hu>
	<20080425113729.GA18486@34-mo7-2.acn.waw.pl>
Message-ID: <006101c8a6cf$ef60d1c0$7e00520a@euroherc.ba>

----- Original Message -----
From: "Przemyslaw Czerpak" <druzus@acn.waw.pl>
To: "Harbour Project Main Developer List." <harbour@harbour-project.org>
Sent: Friday, April 25, 2008 1:37 PM
Subject: Re: [Harbour] 2008-04-25 12:01 UTC+0200 Przemyslaw
Czerpak(druzus/at/priv.onet.pl)


> :stabilize()). But it's also quite expensive for strongly
> filtered tables. Without bitmap filters it's real performance
> killer.

tbrowse story, being a low level stuff for dbu.exe is very interesting story

c52 dbu is almost completely unusable with longer [100k records] tables when
being filtered. the worst thing is that horizontal movement, even without
scroll, just from column to column, is awfully slow.

on contrary, the old c87 dbu has no problem in horizontal moving, no matter
how large the table is or how strongly is filtered. even, we have built
advices when is the usage of old c87 dbu mandatory.

looking forward for this new tbrowse/dbu


From harbour.01 at syenar.hu  Fri Apr 25 08:21:18 2008
From: harbour.01 at syenar.hu (=?ISO-8859-2?Q?Szak=E1ts_Viktor?=)
Date: Fri Apr 25 08:22:47 2008
Subject: [Harbour] 2008-04-25 12:01 UTC+0200 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <20080425113729.GA18486@34-mo7-2.acn.waw.pl>
References: <200804251001.m3PA1Kgu015160@31-mo5-4.acn.waw.pl>
	<F445A149-4B57-4573-9D42-A5AB6C7F7201@syenar.hu>
	<20080425113729.GA18486@34-mo7-2.acn.waw.pl>
Message-ID: <8824DFE0-25BD-45F3-8D18-E470A8ACC1E2@syenar.hu>

> On Fri, 25 Apr 2008, Szak?ts Viktor wrote:
>> Hi Przemek,
>> In real world test it looks good after this modification.
>> I'm attaching a small test program which traces the way
>> callbacks are called and status (:rowPos, RecNo()) changes.
>> The output looks much different from Clipper. (Being exactly
>> Clipper compatible on this level is certainly a plus, but
>> maybe isn't worth the extra effort.)
>
> Thank you very much, I'll make test in a weekend.
> BTW which Clipper version did you use for tests?
> I know about some small differences to CL52 but the general
> rules are very similar. CL53 TBrowse is a different story.

I used 5.2 for this comparison.

I've now tried with 5.3 which behaves differently
in a few places, but overall I cannot easily see
improvements over 5.2, at least not in these tests.

> All forward skips inside for cursor movements (not the skips
> for update) are replicate twice. Such effect can be easy
> reached in :setPosition() by moving back to previous position
> or top row. Unlike the problem with record refreshing
> I described few days ago it looks for me like a protection
> to detect network updates. It was probably necessary
> because Clipper does not properly respect value returned
> from skip block during buffer updating (:readRecord() and
> :stabilize()). But it's also quite expensive for strongly
> filtered tables. Without bitmap filters it's real performance
> killer. Instead of replicating it I'd prefer to add full
> support for values returned from skip block in all places
> with automatic buffer updating and scrolling just like it
> is done in :setPosition() now. It means that user skip code
> blocks will fully control the TBrowse behavior. From the
> user point of view in Clipper some states are undefined.

Yes, that's right. I'd also rather concentrate on replicating
the _documented_ behavior (which look pretty complete now)
and to avoid those performance problems you describe. Filtered
tables can indeed kill a TB.

Brgds,
Viktor

From druzus at acn.waw.pl  Fri Apr 25 09:46:27 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Fri Apr 25 09:46:42 2008
Subject: [Harbour] 2008-04-25 12:01 UTC+0200 Przemyslaw
	Czerpak(druzus/at/priv.onet.pl)
In-Reply-To: <006101c8a6cf$ef60d1c0$7e00520a@euroherc.ba>
References: <20080425113729.GA18486@34-mo7-2.acn.waw.pl>
	<006101c8a6cf$ef60d1c0$7e00520a@euroherc.ba>
Message-ID: <20080425134627.GA19725@34-mo7-2.acn.waw.pl>

On Fri, 25 Apr 2008, gabor salai [intranet242] wrote:
> tbrowse story, being a low level stuff for dbu.exe is very interesting story
> c52 dbu is almost completely unusable with longer [100k records] tables when
> being filtered. the worst thing is that horizontal movement, even without
> scroll, just from column to column, is awfully slow.
> on contrary, the old c87 dbu has no problem in horizontal moving, no matter
> how large the table is or how strongly is filtered. even, we have built
> advices when is the usage of old c87 dbu mandatory.

This is side effect of intentional feature in DBU code. If you do not
like it then please look at dbuedit.prg. At the beginning you will find:

   #define TB_REFRESH_RATE   5  // Wait 5 seconds between tbrowse refreshes

To disable it change it to some really big value, f.e.:

   #define TB_REFRESH_RATE   3600  // Wait 1 hour between tbrowse refreshes

and recompile DBU. It will work without the delay in horizontal movements.


best regards,
Przemek
From druzus at acn.waw.pl  Fri Apr 25 10:20:12 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Fri Apr 25 10:20:19 2008
Subject: [Harbour] 2008-04-25 12:01 UTC+0200 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <8824DFE0-25BD-45F3-8D18-E470A8ACC1E2@syenar.hu>
References: <200804251001.m3PA1Kgu015160@31-mo5-4.acn.waw.pl>
	<F445A149-4B57-4573-9D42-A5AB6C7F7201@syenar.hu>
	<20080425113729.GA18486@34-mo7-2.acn.waw.pl>
	<8824DFE0-25BD-45F3-8D18-E470A8ACC1E2@syenar.hu>
Message-ID: <20080425142012.GA19780@34-mo7-2.acn.waw.pl>

On Fri, 25 Apr 2008, Szak?ts Viktor wrote:
> I used 5.2 for this comparison.
> I've now tried with 5.3 which behaves differently
> in a few places, but overall I cannot easily see
> improvements over 5.2, at least not in these tests.

If you want to see the difference add few additional rows
two the table and test sth like:

   TEST_CALL( o:goTop() )
   TEST_CALL( o:forceStable() )
   TEST_CALL( o:down() )
   TEST_CALL( o:forceStable() )
   TEST_CALL( o:down() )
   TEST_CALL( o:down() )
   TEST_CALL( o:forceStable() )
   TEST_CALL( o:down() )
   TEST_CALL( o:down() )
   TEST_CALL( o:down() )
   TEST_CALL( o:forceStable() )
   TEST_CALL( o:pageDown() )
   TEST_CALL( o:forceStable() )

BTW I changed a little bit your code for easier comparison the results
with diff. I'm attaching it.
As I can see the differences are not such huge. There are in fact
three differences:
1. dividing :stable() steps
   I decided that only one position repositioning is allowed in one
   step and looks like Clipper makes some screen/internal parameters
   updates in separated steps. It probably can be tuned to make it
   similar to Clipper though it's not very important.
2. after :goTop() and :goBottom Clipper repeats the forward skipping
   test in the 1-st call to :stablize(). In this test internal :rosPos
   is not yet update and it later causes some small differences in
   repositioning. It's exactly the same what CL5.3 makes for _ALL_
   forward repositioning I was writing about.
   It can be replicated but with the cost of performance and in fact
   it does not guaranties that it will be good protection for concurrent
   access. It's a race condition which cannot be resolved. It can be
   reduced later inside record movement for update but this part seems
   to be missing in Clipper so I guess it was rather workaround for
   concurrent access added to already existed code which probably comes
   from S87 or even earlier Clipper versions. In CL52 it was added only
   in few places but in CL53 in practice to all forward skips. Probably
   it was easier to add such hack instead of updating repositioning code
   and make it safe for concurrent modifications in source data. These
   forward skip tests only reduce the time when sth wrong may happen
   but they not eliminate the race condition. I strongly prefer to update
   repositioning code and fully respect value returned from user skip
   block in all places.
3. Mixed direct (:rowPos:=<x>/:goTop()/:goBottom()) and relative
   (:up()/:down()/:pageUp()/...) repositioning. In such case the
   results can be really strange. It was not easy to detect the
   exact rule when I was checking it few days ago but I haven't made
   careful and deep tests. I do not know if it worth to invest time
   for sth what probably will not effect 99.9% of code.

best regards,
Przemek
-------------- next part --------------

STATIC s_nCount := 0
STATIC s_cCurrBlock := ""
STATIC s_cResult1
STATIC s_cResult2

#translate TEST_CALL( <x> ) => TEST_C_CALL( o, #<x>, {|| <x> } )

FUNCTION Main()
   LOCAL o
   LOCAL nOldRecNo
   LOCAL tmp

// AltD()

   dbCreate( "_test", {{ "ID", "C", 10, 0 }} )

   USE _test NEW EXCLUSIVE ALIAS w_TEST

   dbAppend() ; w_TEST->ID := "01"
   dbAppend() ; w_TEST->ID := "02"
   dbAppend() ; w_TEST->ID := "03"
   dbAppend() ; w_TEST->ID := "04"

   o := TBrowseNew( 0, 0, 6, 8 )
   o:GoTopBlock    := { || nOldRecNo := RecNo(), dbGoTop(), my_QOut( o, { "TOP", RecNo(), nOldRecNo } ) }
   o:GoBottomBlock := { || nOldRecNo := RecNo(), dbGoBottom(), my_QOut( o, { "BOT", RecNo(), nOldRecNo } ) }
   o:SkipBlock     := { | nRecs | nOldRecNo := RecNo(), tmp := Skipped( nRecs ), my_QOut( o, { "SKP", RecNo(), nOldRecNo, nRecs, tmp } ), tmp }
   o:AddColumn( TBColumnNew( "#", {|| my_QOut( NIL, { "BLK", RecNo() } ), StrZero( RecNo(), 3 ) } ) )

   #define Inkey(x)

   CLS
   TEST_CALL( o:leftVisible )
   TEST_CALL( o:goTop() )
   TEST_CALL( ForceStable( o ) )
   TEST_CALL( o:goTop() )
   TEST_CALL( o:pageUp() )
   TEST_CALL( ForceStable( o ) )
   TEST_CALL( o:goTop() )
   TEST_CALL( o:pageDown() )
   TEST_CALL( ForceStable( o ) )
   TEST_CALL( o:goBottom() )
   TEST_CALL( ForceStable( o ) )

   TEST_CALL( o:goBottom() )
   TEST_CALL( o:pageUp() )
   TEST_CALL( ForceStable( o ) )
   TEST_CALL( o:goBottom() )
   TEST_CALL( o:pageDown() )
   TEST_CALL( ForceStable( o ) )
   TEST_CALL( o:leftVisible )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:rowPos )
   TEST_CALL( o:rowPos )

   TEST_CALL( dbGoTop() )
   TEST_CALL( ForceStable( o ) )
   TEST_CALL( o:goTop() )
   TEST_CALL( o:goBottom() )
   TEST_CALL( ForceStable( o ) )
   TEST_CALL( o:up() )
   TEST_CALL( o:up() )
   TEST_CALL( o:down() )
// dbGoTop()
   TEST_CALL( ForceStable( o ) )
   TEST_CALL( o:PageUp() )
   TEST_CALL( ForceStable( o ) )
   o:goTop()
   o:forceStable()
   TEST_CALL( o:down() )
   TEST_CALL( o:down() )
   TEST_CALL( o:PageDown() )
   TEST_CALL( o:PageDown() )
   TEST_CALL( o:PageUp() )
   TEST_CALL( ForceStable( o ) )
   Inkey(0)
   TEST_CALL( o:goTop() )
   TEST_CALL( o:PageDown() )
   TEST_CALL( ForceStable( o ) )
   Inkey(0)
   TEST_CALL( o:goTop() )
   TEST_CALL( o:down() )
   TEST_CALL( ForceStable( o ) )
   Inkey(0)
   TEST_CALL( o:goTop() )
   TEST_CALL( o:down() )
   TEST_CALL( o:down() )
   TEST_CALL( o:down() )
   TEST_CALL( o:down() )
   TEST_CALL( o:down() )
   TEST_CALL( o:down() )
   TEST_CALL( ForceStable( o ) )
   Inkey(0)
   TEST_CALL( o:goBottom() )
   TEST_CALL( ForceStable( o ) )
   Inkey(0)
   TEST_CALL( o:goBottom() )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   Inkey(0)
   TEST_CALL( o:goBottom() )
   TEST_CALL( o:pageDown() )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   Inkey(0)
   TEST_CALL( o:goTop() )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   Inkey(0)
   TEST_CALL( o:goTop() )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:down() )
   TEST_CALL( o:stabilize )
   Inkey(0)
   TEST_CALL( o:goTop() )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:down() )
   TEST_CALL( o:down() )
   TEST_CALL( o:down() )
   TEST_CALL( o:down() )
   TEST_CALL( o:down() )
   TEST_CALL( o:down() )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   Inkey(0)

/*
   o:Stabilize()
   o:Up()
   o:Down()
   o:PageUp()
   o:PageDown()
   o:GoTop()
   o:GoBottom()
*/

   RETURN NIL

STATIC FUNCTION Skipped( nRecs )

   LOCAL nSkipped := 0

   IF LastRec() != 0
      IF nRecs == 0
         dbSkip( 0 )
      ELSEIF nRecs > 0 .AND. RecNo() != LastRec() + 1
         DO WHILE nSkipped < nRecs
            dbSkip()
            IF Eof()
               dbSkip( -1 )
               EXIT
            ENDIF
            nSkipped++
         ENDDO
      ELSEIF nRecs < 0
         DO WHILE nSkipped > nRecs
            dbSkip( -1 )
            IF Bof()
               EXIT
            ENDIF
            nSkipped--
         ENDDO
      ENDIF
   ENDIF

   RETURN nSkipped

FUNCTION XToStrE( xValue )
   LOCAL cType := ValType( xValue )

   DO CASE
   CASE cType == "C"

      xValue := StrTran( xValue, Chr(0), '"+Chr(0)+"' )
      xValue := StrTran( xValue, Chr(9), '"+Chr(9)+"' )
      xValue := StrTran( xValue, Chr(10), '"+Chr(10)+"' )
      xValue := StrTran( xValue, Chr(13), '"+Chr(13)+"' )
      xValue := StrTran( xValue, Chr(26), '"+Chr(26)+"' )

      RETURN xValue

   CASE cType == "N" ; RETURN LTrim( Str( xValue ) )
   CASE cType == "D" ; RETURN DToS( xValue )
   CASE cType == "L" ; RETURN iif( xValue, ".T.", ".F." )
   CASE cType == "O" ; RETURN xValue:className() + " Object"
   CASE cType == "U" ; RETURN "NIL"
   CASE cType == "B" ; RETURN '{||...} -> ' + XToStrE( Eval( xValue ) )
   CASE cType == "A" ; RETURN '{ ' + ArrayToEList( xValue ) + ' }'
   CASE cType == "M" ; RETURN 'M:' + xValue
   ENDCASE

   RETURN ""

FUNCTION ArrayToEList( a )
   LOCAL tmp
   LOCAL cString := ""

   FOR tmp := 1 TO Len( a )
      cString += XToStrE( a[ tmp ] )
      IF tmp < Len( a )
         cString += ", "
      ENDIF
   NEXT

   RETURN cString

FUNCTION ForceStable( o )

   DO WHILE !TEST_CALL( o:stabilize )
   ENDDO

   RETURN NIL

FUNCTION TEST_C_CALL( o, cBlock, bBlock )
   LOCAL xRetVal
   LOCAL cOldBlock := s_cCurrBlock

   s_cCurrBlock := cBlock

   LOGSTUFF( o, .T., "BEGIN" )
   xRetVal := Eval( bBlock )
   LOGSTUFF( o, .T., "END" )

   s_cCurrBlock := cOldBlock

   RETURN xRetVal

FUNCTION LOGSTUFF( o, l, cText )

   STATIC s_nRow := 0

   IF s_nRow == MaxRow()
      Scroll( 0, 16, MaxRow(), MaxCol(), 1, 0 )
      DispOutAt( MaxRow(), 0, Space( MaxCol() + 1 ) )
   ELSE
      s_nRow++
   ENDIF

   #define DispOut( x ) OutStd( x )

   SetPos( s_nRow, 16 + iif( l, 0, 3 ) )
   DispOut( ++s_nCount ) ; DispOut( " " )
   DispOut( PadR( iif( l, s_cCurrBlock, "" ), 11 ) ) ; DispOut( " " )
   DispOut( iif( o != NIL, o:rowPos, PadL( "", 10 ) ) ) ; DispOut( " " )
   DispOut( cText ) ; DispOut( " " )
   DispOut( Chr( 13 ) + Chr( 10 ) )

   RETURN NIL

FUNCTION my_QOut( o, a )

   LOGSTUFF( o, .F., ArrayToEList( a ) )

   RETURN NIL
From harbour.01 at syenar.hu  Fri Apr 25 11:15:44 2008
From: harbour.01 at syenar.hu (=?ISO-8859-2?Q?Szak=E1ts_Viktor?=)
Date: Fri Apr 25 11:30:53 2008
Subject: [Harbour] 2008-04-25 12:01 UTC+0200 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <20080425142012.GA19780@34-mo7-2.acn.waw.pl>
References: <200804251001.m3PA1Kgu015160@31-mo5-4.acn.waw.pl>
	<F445A149-4B57-4573-9D42-A5AB6C7F7201@syenar.hu>
	<20080425113729.GA18486@34-mo7-2.acn.waw.pl>
	<8824DFE0-25BD-45F3-8D18-E470A8ACC1E2@syenar.hu>
	<20080425142012.GA19780@34-mo7-2.acn.waw.pl>
Message-ID: <CB2532EA-BF6B-4B90-9B36-57F14D7AD90B@syenar.hu>

Hi Przemek,

Interesting read! I agree on point 3., point 1.
is up to you, I also think current Harbour TB
works good for the majority cases, so unless we can
improve something valuable, there is no point to
struggle on these details.

Could you pls reattach the modified br.prg? It looks
this one was the original file.

Do you think there is any reasonable way to avoid
to infamous "roll up" problem in any ways?

This might have something to do with your point 2.

See below the conversation about the "roll up"
problem. It basically means that in "certain" situations
the user will experience the browse to start going
up one by one until it reaches the beginning of the
table.

Brgds,
Viktor

Begin forwarded message:

> From: Szak?ts Viktor <harbour.01@syenar.hu>
> Date: 2007. ?prilis 21. 10:05:16 GMT+02:00
> To: "Bill Smith" <hbco2@sbcglobal.net>
> Subject: Re: [Harbour] CHANGELOG: 2007-04-20 21:46 UTC+0100 Viktor  
> Szakats(harbour.01 syenar.hu)
>
> Hi Bill,
>
> I guess you mean the long-time problem  
> in ::forceStable()/::stabilize()/::skipBlock(),
> where after a ::refreshAll():forceStable() sometimes RecNo() changes.
> (this happens in Clipper the same way, but occurs less frequently  
> due to
> some speed differences, which in turn causes less :forceStable()  
> calls.)
>
> Not much advance in this area since last years conversation :(
>
> I plan to grab some time to streamline TBrowse, as I have several  
> smaller
> problems with it, and we also miss caching (already implemented in xhb
> AFAIK), which could help in this problem too.
>
> I have to tell though that this above mentioned bug looks pretty much
> a design problem with how TBrowse() works (and interacts with the db),
> so it might not be possible to fix it completely without drastic  
> changes in
> behaviour.
>
> Brgds,
> Viktor
>
> On 2007.04.20., at 22:36, Bill Smith wrote:
>
>> Hi Victor,
>>
>> Many thanks for your work.  There has been a long standing bug in  
>> dbedit()
>> (and by extension tbrowse()) where if the keyboard buffer is full  
>> when a
>> "browse up" command is executed, the current record number is set  
>> to eof().
>> In practice it means that if a database is browsed, if keyboard  
>> keys are
>> used to rapidly navigate the database, it is possible to  
>> unexpectedly find
>> the browse function displaying records beginning from the end of  
>> the file.
>> This used to be an intermittent problem, but with improvements in  
>> Harbour
>> has become quite predictable.
>>
>> Is there any way to correct it?
>>
>> Bill
>>
>> ----- Original Message -----
>> From: "Szak?ts Viktor" <harbour.01@syenar.hu>
>> To: <harbour@harbour-project.org>
>> Sent: Friday, April 20, 2007 12:47 PM
>> Subject: [Harbour] CHANGELOG: 2007-04-20 21:46 UTC+0100 Viktor
>> Szakats(harbour.01 syenar.hu)
>>
>>
>>> 2007-04-20 21:46 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
>>>   * harbour/source/rtl/tbcolumn.prg
>>>   * harbour/source/rtl/tbrowse.prg
>>>   * harbour/source/rtl/teditor.prg
>>>   * harbour/source/rtl/tget.prg
>>>   * harbour/source/rtl/tgetlist.prg
>>>     % Avoiding INLINE for speed.
>>>     % Using INIT for quicker object initialization.
>>>     + Added TGet() NOTEs, TOFIX.
>>>     ! Fixed some problems in TGetList. (Two GetApplyKey()
>>>       potential RTEs.)
>>>     ! Fixed a few missing "CLASS TBrowse"-es.
>>>     ; Some formatting, code cleaning.
>>>
>>> _______________________________________________
>>> Harbour mailing list
>>> Harbour@harbour-project.org
>>> http://lists.harbour-project.org/mailman/listinfo/harbour
>>
>

From lorenzo.fiorini at gmail.com  Fri Apr 25 13:44:08 2008
From: lorenzo.fiorini at gmail.com (Lorenzo Fiorini)
Date: Fri Apr 25 13:44:12 2008
Subject: [Harbour] 2008-04-25 12:01 UTC+0200 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <200804251001.m3PA1Kgu015160@31-mo5-4.acn.waw.pl>
References: <200804251001.m3PA1Kgu015160@31-mo5-4.acn.waw.pl>
Message-ID: <9257026e0804251044m3a4e19c9x3ffd859c93bd5129@mail.gmail.com>

On Fri, Apr 25, 2008 at 12:01 PM, Przemyslaw Czerpak <druzus@acn.waw.pl> wrote:
> 2008-04-25 12:01 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
>   * harbour/source/rtl/tbrowse.prg
>     * changed internal logic used for vertical movements. Now it should
>       be much closer to Clipper though it also replicates some wrong
>       Clipper behaviors due to removed protection against some concurrent
>       modifications in browsed object. I left two TOFIX notes and I'll
>       reimplement them later. Please test. Lorenzo it should resolve
>       the problem you reported.

Many thanks it works very well.

I agree that try to mimic exactly all the Clipper tbrowse "bugs" is a
waste of time.
My old tbrowse code has several comments like "leave it as it is",
"don't touch these lines".
I think performance and code reliability are much more important than
saving old "strange" code.

best regards,
Lorenzo
From harbour.01 at syenar.hu  Sat Apr 26 02:39:45 2008
From: harbour.01 at syenar.hu (=?iso-8859-2?Q?Szak=E1ts_Viktor?=)
Date: Sat Apr 26 02:39:45 2008
Subject: [Harbour] CHANGELOG: 2008-04-26 07:53 UTC+0100 Viktor Szakats
 (harbour.01 syenar hu)
Message-ID: <01c8a768$Blat.v2.6.2$50fbfaac$2a015ea36c2@127.0.0.1>

2008-04-26 07:53 UTC+0100 Viktor Szakats (harbour.01 syenar hu)
   * source/rtl/tget.prg
     ! Fixed to not extend ::left(), ::right(), ::backspace(), 
       ::delete() with an internally used (but also externally 
       accessible) extra parameter. This is interface is now 
       made fully C5x compatible.

   * tests/rto_tb.prg
     ! Fixed to override __eInstVar53() (instead of _eInstVar())

   * include/hbextern.ch
   * common.mak
   * source/rdd/Makefile
   + source/rdd/dbcmdhb.c
     + Added non-internal versions of __dbPack() and __dbZap(), 
       named: hb_dbPack() and hb_dbZap(). If group needs it I 
       can add dbPack() and dbZap() too in separate files to 
       lessen the problem of name collision with app code.

   * source/rtl/inkey.c
     * Formatting.
     + HB_KEYPUT(): Now possible to pass an array with string elements.
       (see feature in xhb/__KEYBOARD())
     * HB_KEYPUT(): For string parameter it now uses hb_inkeySetText()
       API, rather than a loop of hb_inkeyPut()s.

   * contrib/xhb/xhbfunc.c
     ! xhb flavour of __KEYBOARD() sync fixed. (hb_inkeySetText() got 
       extended in xhb, so here we're using hb_inkeyPut() for single 
       numeric key codes).
     ; Now same code is used as in HB_KEYPUT().

   * source/vm/memvars.c
   * source/vm/hvm.c
   * source/vm/arrayshb.c
     + Added HB_C52_STRICT branches for the remaining RTEs 
       which produced different results in hbtest.
     ! Fixed HB_C52_STRICT RTE for AFill().
     ; NOTE: It's not possible to build Harbour currently when 
             HB_C52_STRICT, so it's not easy to test these.

   * include/hbclass.ch
     ! Typos.

   * source/rtl/memoedit.prg
   * source/rtl/achoice.prg
   * source/rtl/treport.prg
     * Formatting.

   * source/rtl/tobject.prg
     * Formatting.
     % Minor opt.
--
Brgds,
Viktor

From gvarona at ec-red.com  Sun Apr 27 14:50:41 2008
From: gvarona at ec-red.com (=?ISO-8859-1?Q?Guillermo_Varona_Silup=FA?=)
Date: Sun Apr 27 14:50:49 2008
Subject: [Harbour] New TBROWSE
In-Reply-To: <7BA43AFA-926C-4B8F-B845-F17D96E3AF1B@syenar.hu>
References: <20080416234102.GA24695@localhost.localdomain>	<60984D87-7443-4C26-BD31-EE3281C134FE@syenar.hu>	<20080417120836.GA25922@localhost.localdomain>	<20080417132212.GA26957@localhost.localdomain>
	<7BA43AFA-926C-4B8F-B845-F17D96E3AF1B@syenar.hu>
Message-ID: <4814CB01.6020302@ec-red.com>

Hi:

[SPA]
He actualizado al ultimo  SVN, donde se incluye el nuevo TBROWSE y he 
recompilado una aplicaci?n y ahora ya no funciona el Scroll del mouse :-(

[ENG]
I upgraded to last SVN, which includes the new TBROWSE and he recompiled 
an application and now no longer works Scroll mouse :-(

Any hint.

Best Regards
GVS

From harbour.01 at syenar.hu  Sun Apr 27 16:45:32 2008
From: harbour.01 at syenar.hu (=?iso-8859-2?Q?Szak=E1ts_Viktor?=)
Date: Sun Apr 27 16:45:27 2008
Subject: [Harbour] CHANGELOG: 2008-04-27 22:42 UTC+0100 Viktor Szakats
 (harbour.01 syenar hu)
Message-ID: <01c8a8a7$Blat.v2.6.2$a295a9c2$c44759d74d4@127.0.0.1>

2008-04-27 22:42 UTC+0100 Viktor Szakats (harbour.01 syenar hu)
   * source/common/hbver.c
     + OS(), hb_verPlatform(): Added detection of Windows Server 2008.

   * source/rtl/tobject.prg
     ! XPP feature guarded with HB_COMPAT_XPP
--
Brgds,
Viktor

From harbour.01 at syenar.hu  Sun Apr 27 19:40:46 2008
From: harbour.01 at syenar.hu (=?iso-8859-2?Q?Szak=E1ts_Viktor?=)
Date: Sun Apr 27 19:40:43 2008
Subject: [Harbour] CHANGELOG: 2008-04-28 01:00 UTC+0100 Viktor Szakats
 (harbour.01 syenar hu)
Message-ID: <01c8a8c0$Blat.v2.6.2$1d76aa84$9a8316733c4@127.0.0.1>

2008-04-28 01:00 UTC+0100 Viktor Szakats (harbour.01 syenar hu)
   * contrib/rdd_ads/adsfunc.c
     ! Fixed warning in ADSDIRECTORY() for ADS >= 9.00.

   * contrib/rdd_ads/adsfunc.c
   * contrib/rdd_ads/adsmgmnt.c
     + Added AdsIsEmpty( <cFieldName | nFieldPos> ) -> <lValue>
       With .adt tables will return .T. if value of the field is NULL.
       With .dbf it's just equivalent to Empty().
       (by Luis Krause Mantilla)
     + Added ADSMGGetOpenTables( nMaxNumberOfFilesToReturn, cUserName, nConnection )
     + Added ADSMGGetOpenIndexes( nMaxNumberOfFilesToReturn, cTableName, cUserName, nConnection )
       (by Antonio Carlos Pantaglione & Brian Hays)
     ; Changes borrowed from xhb, added minor optimization, formatting and warning fix.

   * include/hbclass.ch
     ! Comment typos.
--
Brgds,
Viktor

From peter.sulyok at creditexpress.hu  Mon Apr 28 01:45:48 2008
From: peter.sulyok at creditexpress.hu (=?iso-8859-2?Q?Sulyok_P=E9ter?=)
Date: Mon Apr 28 01:45:47 2008
Subject: [Harbour] question about dbfntx and memo fields
Message-ID: <004801c8a8f3$1c7afa80$eb01000a@CE0021>

Hy all!

Can somebody help me?
I use a dbfntx engine and use memo fields.
If i rewrite an record, then the memo space cannot rewriting, the new memo data written after the .dbt file.
Also the .dbt file will bi biger and biger, but the .dbf size cannot change.
I think if i rewrite a record, then the memo field rewrite too.
Any idea or help?

Brgds,

            Peti

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.harbour-project.org/pipermail/harbour/attachments/20080428/c716320a/attachment.html
From e.m.giordano at emagsoftware.it  Mon Apr 28 03:19:01 2008
From: e.m.giordano at emagsoftware.it (Enrico Maria Giordano)
Date: Mon Apr 28 03:19:05 2008
Subject: [Harbour] Warning
Message-ID: <001701c8a900$21df5e00$ca64fea9@emag>

Warning W8075 source\common\hbver.c 230: Suspicious pointer conversion in 
function hb_verPlatform

EMG

--
EMAG Software Homepage:     http://www.emagsoftware.it
The EMG's ZX-Spectrum Page: http://www.emagsoftware.it/spectrum
The Best of Spectrum Games: http://www.emagsoftware.it/tbosg
The EMG Music page:         http://www.emagsoftware.it/emgmusic 

From harbour.01 at syenar.hu  Mon Apr 28 03:30:40 2008
From: harbour.01 at syenar.hu (=?iso-8859-2?Q?Szak=E1ts_Viktor?=)
Date: Mon Apr 28 03:30:35 2008
Subject: [Harbour] CHANGELOG: 2008-04-28 09:28 UTC+0100 Viktor Szakats
 (harbour.01 syenar hu)
Message-ID: <01c8a901$Blat.v2.6.2$c27d7f08$1360f5c737c8@127.0.0.1>

2008-04-28 09:28 UTC+0100 Viktor Szakats (harbour.01 syenar hu)
   * common.mak
   * source/rtl/Makefile
   * source/rtl/einstvar.prg
   + source/rtl/einstvau.prg
     * Undoc function moved to separate file.
--
Brgds,
Viktor

From harbour.01 at syenar.hu  Mon Apr 28 03:41:55 2008
From: harbour.01 at syenar.hu (=?iso-8859-2?Q?Szak=E1ts_Viktor?=)
Date: Mon Apr 28 03:41:51 2008
Subject: [Harbour] CHANGELOG: 2008-04-28 09:38 UTC+0100 Viktor Szakats
 (harbour.01 syenar hu)
Message-ID: <01c8a903$Blat.v2.6.2$54ae8f42$176061eb841a@127.0.0.1>

2008-04-28 09:38 UTC+0100 Viktor Szakats (harbour.01 syenar hu)
   * source/common/hbver.c
     ! Fixed warning in recent change.
     * Minor adjustment to Vista/Server 2008 detection to be 
       exactly along MS recommendation.
--
Brgds,
Viktor

From e.m.giordano at emagsoftware.it  Mon Apr 28 03:50:17 2008
From: e.m.giordano at emagsoftware.it (Enrico Maria Giordano)
Date: Mon Apr 28 03:50:22 2008
Subject: [Harbour] CHANGELOG: 2008-04-28 09:38 UTC+0100 Viktor Szakats
	(harbour.01 syenar hu)
References: <01c8a903$Blat.v2.6.2$54ae8f42$176061eb841a@127.0.0.1>
Message-ID: <010201c8a904$80d8e300$ca64fea9@emag>


-----Messaggio Originale----- 
Da: "Szak?ts Viktor" <harbour.01@syenar.hu>
A: <harbour@harbour-project.org>
Data invio: luned? 28 aprile 2008 9.41
Oggetto: [Harbour] CHANGELOG: 2008-04-28 09:38 UTC+0100 Viktor Szakats 
(harbour.01 syenar hu)


> 2008-04-28 09:38 UTC+0100 Viktor Szakats (harbour.01 syenar hu)
>   * source/common/hbver.c
>     ! Fixed warning in recent change.
>     * Minor adjustment to Vista/Server 2008 detection to be
>       exactly along MS recommendation.

Thank you.

EMG

--
EMAG Software Homepage:     http://www.emagsoftware.it
The EMG's ZX-Spectrum Page: http://www.emagsoftware.it/spectrum
The Best of Spectrum Games: http://www.emagsoftware.it/tbosg
The EMG Music page:         http://www.emagsoftware.it/emgmusic 

From miguelangel at marchuet.net  Mon Apr 28 04:19:39 2008
From: miguelangel at marchuet.net (Miguel Angel Marchuet)
Date: Mon Apr 28 04:17:34 2008
Subject: [Harbour] Example selfcontained that shows how we lose memory
Message-ID: <4815889B.6020904@marchuet.net>

#include "hbmemory.ch"
#include "hbclass.ch"

#ifndef __XHARBOUR__
#xtranslate Str( <x>, <y>, <z>, .F. ) => Str( <x>, <y>, <z> )
#xtranslate Str( <x>, <y>, <z>, .T. ) => LTrim( Str( <x>, <y>, <z> ) )
#xtranslate Str( <x>, <y>, <z>, <k> ) => If( <k>, LTrim( Str( <x>, <y>, <z> ) ), Str( <x>, <y>, <z> ) )
#include "xhb.ch"
#endif

#ifdef DEFAULT
#UNDEF DEFAULT
#endif
#xcommand DEFAULT <v1> := <x1> [, <vn> := <xn> ] => ;
           If( <v1> == nil, <v1> := <x1>, ) ;
           [; If( <vn> == nil, <vn> := <xn>, ) ]

#define MAXTEST 1500


PROCEDURE MAIN()
    LOCAL n, ao := {}, nMem

    REQUEST HB_GT_WIN

    FOR n := 1 TO MAXTEST

       // here loose Harbour
       aAdd( ao, PROBLEM() )
       // ------------------

       ao[-1] := 0
       hb_gcAll( .T. )

       // Here loose xHarbour
       DEFAULT nMem := Memory( HB_MEM_USED )
       //--------------------

       #ifdef __XHARBOUR__
          ? 'Mem used -> ' + AllTrim( Str( Memory( HB_MEM_USED ) ) ) + " on " + AllTrim( Transform( Memory( HB_MEM_BLOCKS ), '@E 
999,999,999' ) ) + " bloqs"
       #else
          ? 'Mem used -> ' + AllTrim( Str( Memory( HB_MEM_USED ) ) )
       #endif

       IF n == MAXTEST
          ? "We lost " + AllTrim( Str( Memory( HB_MEM_USED ) - nMem ) ) + " Bytes"
       ENDIF

    NEXT

RETURN

FUNCTION PROBLEM()
    LOCAL cValue := {'   '}
    LOCAL oMem1 := Mem():New()
RETURN Ctl():New( oMem1, bSetGet( cValue, 1 ), 'XXXX' )

CLASS Mem
    DATA aValues INIT {}
    DATA oFriend
    METHOD New( oFriend ) CONSTRUCTOR
    METHOD AddItem( oItem ) INLINE AAdd( ::aValues, oItem )
ENDCLASS

METHOD New( oFriend ) CLASS Mem
    //::aValues := { 1, "TEST", Date(), {}, {=>} }

    IF ! Empty( oFriend )
       ::oFriend := oFriend
       oFriend:AddItem( Self )
    ENDIF

RETURN Self

CLASS Ctl
    DATA oFriend
    DATA oGet
    METHOD New( oFriend, bSetGet, cPict ) CONSTRUCTOR
ENDCLASS

METHOD New( oFriend, bSetGet, cPict ) CLASS Ctl
    oFriend:AddItem( Self )
    ::oFriend := oFriend
    ::oGet    := GetNew( 20, 20, bSetGet,, cPict )
RETURN Self

FUNCTION bSetGet( uVar, nVal )
RETURN {|u| If( PCount() > 1, uVar[nVal] := u, uVar[nVal] ) }
From harbour.01 at syenar.hu  Mon Apr 28 04:50:39 2008
From: harbour.01 at syenar.hu (=?ISO-8859-1?Q?Szak=E1ts_Viktor?=)
Date: Mon Apr 28 04:52:04 2008
Subject: [Harbour] Example selfcontained that shows how we lose memory
In-Reply-To: <4815889B.6020904@marchuet.net>
References: <4815889B.6020904@marchuet.net>
Message-ID: <60C45714-421B-4CF6-A0C3-85180DE4D53D@syenar.hu>

Miguel,

You're adding a new element to the 'ao' array in each
loop, and you're not removing these array elements later
(just assigning 0 to them). So you end up with an array
of 1500 zero values, each zero is one item, that's where
memory is 'lost'.

Brgds,
Viktor

On 2008.04.28., at 10:19, Miguel Angel Marchuet wrote:

> #include "hbmemory.ch"
> #include "hbclass.ch"
>
> #ifndef __XHARBOUR__
> #xtranslate Str( <x>, <y>, <z>, .F. ) => Str( <x>, <y>, <z> )
> #xtranslate Str( <x>, <y>, <z>, .T. ) => LTrim( Str( <x>, <y>, <z> ) )
> #xtranslate Str( <x>, <y>, <z>, <k> ) => If( <k>, LTrim( Str( <x>,  
> <y>, <z> ) ), Str( <x>, <y>, <z> ) )
> #include "xhb.ch"
> #endif
>
> #ifdef DEFAULT
> #UNDEF DEFAULT
> #endif
> #xcommand DEFAULT <v1> := <x1> [, <vn> := <xn> ] => ;
>          If( <v1> == nil, <v1> := <x1>, ) ;
>          [; If( <vn> == nil, <vn> := <xn>, ) ]
>
> #define MAXTEST 1500
>
>
> PROCEDURE MAIN()
>   LOCAL n, ao := {}, nMem
>
>   REQUEST HB_GT_WIN
>
>   FOR n := 1 TO MAXTEST
>
>      // here loose Harbour
>      aAdd( ao, PROBLEM() )
>      // ------------------
>
>      ao[-1] := 0
>      hb_gcAll( .T. )
>
>      // Here loose xHarbour
>      DEFAULT nMem := Memory( HB_MEM_USED )
>      //--------------------
>
>      #ifdef __XHARBOUR__
>         ? 'Mem used -> ' + AllTrim( Str( Memory( HB_MEM_USED ) ) ) +  
> " on " + AllTrim( Transform( Memory( HB_MEM_BLOCKS ), '@E  
> 999,999,999' ) ) + " bloqs"
>      #else
>         ? 'Mem used -> ' + AllTrim( Str( Memory( HB_MEM_USED ) ) )
>      #endif
>
>      IF n == MAXTEST
>         ? "We lost " + AllTrim( Str( Memory( HB_MEM_USED ) -  
> nMem ) ) + " Bytes"
>      ENDIF
>
>   NEXT
>
> RETURN
>
> FUNCTION PROBLEM()
>   LOCAL cValue := {'   '}
>   LOCAL oMem1 := Mem():New()
> RETURN Ctl():New( oMem1, bSetGet( cValue, 1 ), 'XXXX' )
>
> CLASS Mem
>   DATA aValues INIT {}
>   DATA oFriend
>   METHOD New( oFriend ) CONSTRUCTOR
>   METHOD AddItem( oItem ) INLINE AAdd( ::aValues, oItem )
> ENDCLASS
>
> METHOD New( oFriend ) CLASS Mem
>   //::aValues := { 1, "TEST", Date(), {}, {=>} }
>
>   IF ! Empty( oFriend )
>      ::oFriend := oFriend
>      oFriend:AddItem( Self )
>   ENDIF
>
> RETURN Self
>
> CLASS Ctl
>   DATA oFriend
>   DATA oGet
>   METHOD New( oFriend, bSetGet, cPict ) CONSTRUCTOR
> ENDCLASS
>
> METHOD New( oFriend, bSetGet, cPict ) CLASS Ctl
>   oFriend:AddItem( Self )
>   ::oFriend := oFriend
>   ::oGet    := GetNew( 20, 20, bSetGet,, cPict )
> RETURN Self
>
> FUNCTION bSetGet( uVar, nVal )
> RETURN {|u| If( PCount() > 1, uVar[nVal] := u, uVar[nVal] ) }
> _______________________________________________
> Harbour mailing list
> Harbour@harbour-project.org
> http://lists.harbour-project.org/mailman/listinfo/harbour

From miguelangel at marchuet.net  Mon Apr 28 05:22:08 2008
From: miguelangel at marchuet.net (Miguel Angel Marchuet)
Date: Mon Apr 28 05:19:55 2008
Subject: [Harbour] Example selfcontained that shows how we lose memory
In-Reply-To: <4815889B.6020904@marchuet.net>
References: <4815889B.6020904@marchuet.net>
Message-ID: <48159740.7090602@marchuet.net>

Sorry for the previous post, this is the correct test:

Harbour  looses 38.571 Bytes in 9.25 seconds
xHarbour looses 56.956 Bytes in 4.83 seconds

Why Harbour is more slow ?
Why xHarbour loose more memory ?

Why 2 compilers loose memory ?

Best regards,
Miguel Angel Marchuet


#include "hbmemory.ch"
#include "hbclass.ch"

#define MAXTEST 10000

PROCEDURE MAIN()
    LOCAL n, ao := {}, nMem, nTime

    REQUEST HB_GT_WIN

    nTime := Seconds()
    nMem := Memory( HB_MEM_USED )

    FOR n := 1 TO MAXTEST

       aAdd( ao, PROBLEM() )

       // Here harbour have a loose of performance. ????
       ao[n] := Nil

       hb_gcAll( .T. )
       ? 'Mem used -> ' + AllTrim( Str( Memory( HB_MEM_USED ) ) )

    NEXT

    ao := {}
    hb_gcAll( .T. )

    ? "We lost " + AllTrim( Str( Memory( HB_MEM_USED ) - nMem ) ) + " Bytes"
    ? "Elapsed time " + AllTrim( Str( Seconds() - nTime ) )

RETURN

FUNCTION PROBLEM()
    LOCAL cValue := {'   '}
    LOCAL oMem1 := Mem():New()
RETURN Ctl():New( oMem1, bSetGet( cValue, 1 ), 'XXXX' )

CLASS Mem
    DATA aValues INIT {}
    DATA oFriend
    METHOD New( oFriend ) CONSTRUCTOR
    METHOD AddItem( oItem ) INLINE AAdd( ::aValues, oItem )
ENDCLASS

METHOD New( oFriend ) CLASS Mem

    IF ! Empty( oFriend )
       ::oFriend := oFriend
       oFriend:AddItem( Self )
    ENDIF

RETURN Self

CLASS Ctl
    DATA oFriend
    DATA oGet
    METHOD New( oFriend, bSetGet, cPict ) CONSTRUCTOR
ENDCLASS

METHOD New( oFriend, bSetGet, cPict ) CLASS Ctl
    oFriend:AddItem( Self )
    ::oFriend := oFriend
    ::oGet    := GetNew( 20, 20, bSetGet,, cPict )
RETURN Self

FUNCTION bSetGet( uVar, nVal )
RETURN {|u| If( PCount() > 1, uVar[nVal] := u, uVar[nVal] ) }

From miguelangel at marchuet.net  Mon Apr 28 05:41:16 2008
From: miguelangel at marchuet.net (Miguel Angel Marchuet)
Date: Mon Apr 28 05:39:01 2008
Subject: [Harbour] Example more simple that shows how we lose memory and
	speed
In-Reply-To: <4815889B.6020904@marchuet.net>
References: <4815889B.6020904@marchuet.net>
Message-ID: <48159BBC.4030201@marchuet.net>

more simple test to see the problem:

Harbour  looses 38.571 Bytes in 9.25 seconds
xHarbour looses 56.956 Bytes in 4.83 seconds

Why Harbour is more slow ?
Why xHarbour loose more memory ?

Why 2 compilers loose memory ?

Best regards,
Miguel Angel Marchuet



#include "hbmemory.ch"
#include "hbclass.ch"

#define MAXTEST 10000

PROCEDURE MAIN()
    LOCAL n, ao, nMem, nTime

    REQUEST HB_GT_WIN

    nTime := Seconds()
    nMem := Memory( HB_MEM_USED )
    ao := {}

    FOR n := 1 TO MAXTEST

       aAdd( ao, GetNew( 20, 20 ) )

       // Here harbour have a loose of performance. ????
       ao[n] := Nil

       hb_gcAll( .T. )
       ? 'Mem used -> ' + AllTrim( Str( Memory( HB_MEM_USED ) ) )

    NEXT

    ao := nil
    hb_gcAll( .T. )

    ? "We lost " + AllTrim( Str( Memory( HB_MEM_USED ) - nMem ) ) + " Bytes"
    ? "Elapsed time " + AllTrim( Str( Seconds() - nTime ) )

RETURN
From miguelangel at marchuet.net  Mon Apr 28 05:59:45 2008
From: miguelangel at marchuet.net (Miguel Angel Marchuet)
Date: Mon Apr 28 05:57:31 2008
Subject: [xHarbour-developers] [Harbour] Example more simple that shows
	how we lose memory and speed
In-Reply-To: <15c075f70804280245l41e195c0h69a351cac11616cd@mail.gmail.com>
References: <4815889B.6020904@marchuet.net> <48159BBC.4030201@marchuet.net>
	<15c075f70804280245l41e195c0h69a351cac11616cd@mail.gmail.com>
Message-ID: <4815A011.6050601@marchuet.net>

please add fmstat as first library to
activate memory function

;)



Patrick Mast, xHarbour.com escribi?:
> Hey Miguel,
> 
>> more simple test to see the problem:
> 
> I ran your test with xHarbour Builder compiled with latest xH.org CVS
> code and got this result:
> 
> We lost 0 Bytes
> Elapsed time 6.27
> 
> Patrick
> 
> -------------------------------------------------------------------------
> This SF.net email is sponsored by the 2008 JavaOne(SM) Conference 
> Don't miss this year's exciting event. There's still time to save $100. 
> Use priority code J8TL2D2. 
> http://ad.doubleclick.net/clk;198757673;13503038;p?http://java.sun.com/javaone
> _______________________________________________
> xHarbour-developers mailing list
> xHarbour-developers@lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/xharbour-developers
> 

From lorenzo.fiorini at gmail.com  Mon Apr 28 06:04:01 2008
From: lorenzo.fiorini at gmail.com (Lorenzo Fiorini)
Date: Mon Apr 28 06:04:07 2008
Subject: [Harbour] Example more simple that shows how we lose memory and
	speed
In-Reply-To: <48159BBC.4030201@marchuet.net>
References: <4815889B.6020904@marchuet.net> <48159BBC.4030201@marchuet.net>
Message-ID: <9257026e0804280304h11616c14q21191a5061ac87af@mail.gmail.com>

On Mon, Apr 28, 2008 at 11:41 AM, Miguel Angel Marchuet
<miguelangel@marchuet.net> wrote:
> more simple test to see the problem:
>
>  Harbour  looses 38.571 Bytes in 9.25 seconds
>  xHarbour looses 56.956 Bytes in 4.83 seconds
>
>  Why Harbour is more slow ?
>  Why xHarbour loose more memory ?
>
>  Why 2 compilers loose memory ?

This test reports more the speed of the GT and video susbsys than the
compilers runtime speed. F.e. on Linux and Harbour ( latest svn )
using gtstd I got:

...
Mem used -> 266072
We lost 29998 Bytes
Elapsed time 0.93

Under valgrind I got:

We lost 29998 Bytes
Elapsed time 28.01
==8873==
==8873== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 19 from 1)
==8873== malloc/free: in use at exit: 0 bytes in 0 blocks.
==8873== malloc/free: 602,386 allocs, 602,386 frees, 876,873,754 bytes
allocated.
==8873== For counts of detected errors, rerun with: -v
==8873== All heap blocks were freed -- no leaks are possible.

best regards,
Lorenzo
From miguelangel at marchuet.net  Mon Apr 28 06:30:52 2008
From: miguelangel at marchuet.net (Miguel Angel Marchuet)
Date: Mon Apr 28 06:28:38 2008
Subject: [Harbour] Example more simple that shows how we lose memory and
	speed
In-Reply-To: <9257026e0804280304h11616c14q21191a5061ac87af@mail.gmail.com>
References: <4815889B.6020904@marchuet.net> <48159BBC.4030201@marchuet.net>
	<9257026e0804280304h11616c14q21191a5061ac87af@mail.gmail.com>
Message-ID: <4815A75C.9050602@marchuet.net>

Lorenzo, is not a problem of GT question.

we lost speed here, comparing with xharbour

    ao[n] := Nil

And too is a lost memory (and strange) here

    ao := nil
    hb_gcAll( .T. )


at the end of the test.

the results of the test was made for

#define MAXTEST 10000
using OS W2000

Best regards,
Miguel Angel Marchuet



Lorenzo Fiorini escribi?:
> On Mon, Apr 28, 2008 at 11:41 AM, Miguel Angel Marchuet
> <miguelangel@marchuet.net> wrote:
>> more simple test to see the problem:
>>
>>  Harbour  looses 38.571 Bytes in 9.25 seconds
>>  xHarbour looses 56.956 Bytes in 4.83 seconds
>>
>>  Why Harbour is more slow ?
>>  Why xHarbour loose more memory ?
>>
>>  Why 2 compilers loose memory ?
> 
> This test reports more the speed of the GT and video susbsys than the
> compilers runtime speed. F.e. on Linux and Harbour ( latest svn )
> using gtstd I got:
> 
> ...
> Mem used -> 266072
> We lost 29998 Bytes
> Elapsed time 0.93
> 
> Under valgrind I got:
> 
> We lost 29998 Bytes
> Elapsed time 28.01
> ==8873==
> ==8873== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 19 from 1)
> ==8873== malloc/free: in use at exit: 0 bytes in 0 blocks.
> ==8873== malloc/free: 602,386 allocs, 602,386 frees, 876,873,754 bytes
> allocated.
> ==8873== For counts of detected errors, rerun with: -v
> ==8873== All heap blocks were freed -- no leaks are possible.
> 
> best regards,
> Lorenzo
> _______________________________________________
> Harbour mailing list
> Harbour@harbour-project.org
> http://lists.harbour-project.org/mailman/listinfo/harbour
> 

From harbour.01 at syenar.hu  Mon Apr 28 07:57:58 2008
From: harbour.01 at syenar.hu (=?ISO-8859-1?Q?Szak=E1ts_Viktor?=)
Date: Mon Apr 28 07:59:20 2008
Subject: [Harbour] Example more simple that shows how we lose memory and
	speed
In-Reply-To: <48159BBC.4030201@marchuet.net>
References: <4815889B.6020904@marchuet.net> <48159BBC.4030201@marchuet.net>
Message-ID: <94AC1575-591F-410E-A0A5-C860BA872FDD@syenar.hu>

Miguel,

You swapped ':= 0' with ':= NIL', and NIL consumes
the same memory as zero, so you didn't change the
problem. You'd need ASize( ao, Len( ao ) - 1 )
(or ASize( ao, 1 ), or a simple ao var)

Brgds,
Viktor

On 2008.04.28., at 11:41, Miguel Angel Marchuet wrote:

> more simple test to see the problem:
>
> Harbour  looses 38.571 Bytes in 9.25 seconds
> xHarbour looses 56.956 Bytes in 4.83 seconds
>
> Why Harbour is more slow ?
> Why xHarbour loose more memory ?
>
> Why 2 compilers loose memory ?
>
> Best regards,
> Miguel Angel Marchuet
>
>
>
> #include "hbmemory.ch"
> #include "hbclass.ch"
>
> #define MAXTEST 10000
>
> PROCEDURE MAIN()
>   LOCAL n, ao, nMem, nTime
>
>   REQUEST HB_GT_WIN
>
>   nTime := Seconds()
>   nMem := Memory( HB_MEM_USED )
>   ao := {}
>
>   FOR n := 1 TO MAXTEST
>
>      aAdd( ao, GetNew( 20, 20 ) )
>
>      // Here harbour have a loose of performance. ????
>      ao[n] := Nil
>
>      hb_gcAll( .T. )
>      ? 'Mem used -> ' + AllTrim( Str( Memory( HB_MEM_USED ) ) )
>
>   NEXT
>
>   ao := nil
>   hb_gcAll( .T. )
>
>   ? "We lost " + AllTrim( Str( Memory( HB_MEM_USED ) - nMem ) ) + "  
> Bytes"
>   ? "Elapsed time " + AllTrim( Str( Seconds() - nTime ) )
>
> RETURN
> _______________________________________________
> Harbour mailing list
> Harbour@harbour-project.org
> http://lists.harbour-project.org/mailman/listinfo/harbour

From gvarona at ec-red.com  Mon Apr 28 09:07:02 2008
From: gvarona at ec-red.com (=?ISO-8859-1?Q?Guillermo_Varona_Silup=FA?=)
Date: Mon Apr 28 09:04:46 2008
Subject: [Harbour] New TBROWSE
In-Reply-To: <4814CB01.6020302@ec-red.com>
References: <20080416234102.GA24695@localhost.localdomain>	<60984D87-7443-4C26-BD31-EE3281C134FE@syenar.hu>	<20080417120836.GA25922@localhost.localdomain>	<20080417132212.GA26957@localhost.localdomain>	<7BA43AFA-926C-4B8F-B845-F17D96E3AF1B@syenar.hu>
	<4814CB01.6020302@ec-red.com>
Message-ID: <4815CBF6.6060403@ec-red.com>

Guillermo Varona Silup? escribi?:
> [SPA]
> He actualizado al ultimo  SVN, donde se incluye el nuevo TBROWSE y he 
> recompilado una aplicaci?n y ahora ya no funciona el Scroll del mouse :-(
. . . o fue con xharbour, ?alguien sabe si esta funcionalidad (moverse 
en el TBROWSE con el Scroll), esta soportada en harbour?

> [ENG]
> I upgraded to last SVN, which includes the new TBROWSE and he 
> recompiled an application and now no longer works Scroll mouse :-(
. . . or was with xHarbour, does anyone know if this feature (TBROWSE 
move in with the Scroll), supported in this harbour?

TIA
Best Regards
GVS
From druzus at acn.waw.pl  Mon Apr 28 09:28:14 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Mon Apr 28 09:28:19 2008
Subject: [Harbour] Example more simple that shows how we lose memory and
	speed
In-Reply-To: <48159BBC.4030201@marchuet.net>
References: <4815889B.6020904@marchuet.net> <48159BBC.4030201@marchuet.net>
Message-ID: <20080428132814.GA1177@34-mo7-2.acn.waw.pl>

On Mon, 28 Apr 2008, Miguel Angel Marchuet wrote:
> more simple test to see the problem:
> Harbour  looses 38.571 Bytes in 9.25 seconds
> xHarbour looses 56.956 Bytes in 4.83 seconds

Miguel there is no memory leak at all in this test.
Your program reports memory difference because you
forgot to count the size of TGET class object and
TGET class definition which is allocated at first
call to GetNew(). If you want to fix it then add:
     GetNew()
before:
>    nTime := Seconds()
>    nMem := Memory( HB_MEM_USED )
>    ao := {}

> Why Harbour is more slow ?

1. These test uses expensively GT output and this is
   the biggest source of delay.
2. It will depend on memory manger used by CRTL and how efficently
   it can detect memory reallocation and enable build in preallocation
   code - of ourse if it has sth like that.
   xHarbour uses it's own prealocation code for arrays and when you
   make aadd() then it increase internally the array size more then
   requested 1 item and on next AADD() calla it resuses it. You can
   see it in your test that the allocated memory size is not increased
   in each loop. It can greatly increase the speed of aadd() operation
   if CRTL compiler does not have it's own optimizations. Though in
   thise case in my Linux box GLIBC works better then xHarbour prealocated
   code so Harbour without its own prealocation code is faster (3.13 sec.)
   then xHarbour (3.64). I guess you are using BCC. Anyhow it will be
   good to add array preallocation to Harbour in the future. In the way
   like it was done in xHarbour it's only few lines but I'd like to
   join this modification with some others so I'm leaving it for the
   future.

> Why xHarbour loose more memory ?
> Why 2 compilers loose memory ?

Neither Harbour nor xHarbour lose memory in this test and only
you forgot to calculate the size necessary to store TGET class
definition in [x]Harbour internals in your test.

best regards,
Przemek
From druzus at acn.waw.pl  Mon Apr 28 09:38:50 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Mon Apr 28 09:38:55 2008
Subject: [Harbour] 2008-04-25 12:01 UTC+0200 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <CB2532EA-BF6B-4B90-9B36-57F14D7AD90B@syenar.hu>
References: <200804251001.m3PA1Kgu015160@31-mo5-4.acn.waw.pl>
	<F445A149-4B57-4573-9D42-A5AB6C7F7201@syenar.hu>
	<20080425113729.GA18486@34-mo7-2.acn.waw.pl>
	<8824DFE0-25BD-45F3-8D18-E470A8ACC1E2@syenar.hu>
	<20080425142012.GA19780@34-mo7-2.acn.waw.pl>
	<CB2532EA-BF6B-4B90-9B36-57F14D7AD90B@syenar.hu>
Message-ID: <20080428133850.GB1177@34-mo7-2.acn.waw.pl>

On Fri, 25 Apr 2008, Szak?ts Viktor wrote:

Hi Viktor,
sorry for the delay.

> Could you pls reattach the modified br.prg? It looks
> this one was the original file.

Ups, my fault. I'm attaching modified version.

> Do you think there is any reasonable way to avoid
> to infamous "roll up" problem in any ways?
> This might have something to do with your point 2.
> See below the conversation about the "roll up"
> problem. It basically means that in "certain" situations
> the user will experience the browse to start going
> up one by one until it reaches the beginning of the
> table.

It will happen when some filtered records will disappear
due to concurent access. TBrowse does not know anything
about data source. It means it's possible to desynchronize
the data in the cache with real data. Each tbrowse implementation
will have such problem until it will not be extended with
additional data attribute which will have unique record ID
(RecNo() is good enough) to detect it. Additionaly it should
have an mechanism for scope checking and automatic refreshing
when it will detect out of scope positioning. In summary it's
not sth what can be easy added though it should be possible
to add some smaller modifications to TBrowse and it will be
possible for user to implement such functionality in child
class. I'll think about it.

best regards,
Przemek
-------------- next part --------------

STATIC s_nCount := 0
STATIC s_cCurrBlock := ""
STATIC s_cResult1
STATIC s_cResult2

#translate TEST_CALL( <x> ) => TEST_C_CALL( o, #<x>, {|| <x> } )

FUNCTION Main()
   LOCAL o
   LOCAL nOldRecNo
   LOCAL tmp

// AltD()

   dbCreate( "_test", {{ "ID", "C", 10, 0 }} )

   USE _test NEW EXCLUSIVE ALIAS w_TEST

   dbAppend() ; w_TEST->ID := "01"
   dbAppend() ; w_TEST->ID := "02"
   dbAppend() ; w_TEST->ID := "03"
   dbAppend() ; w_TEST->ID := "04"

   o := TBrowseNew( 0, 0, 6, 8 )
   o:GoTopBlock    := { || nOldRecNo := RecNo(), dbGoTop(), my_QOut( o, { "TOP", RecNo(), nOldRecNo } ) }
   o:GoBottomBlock := { || nOldRecNo := RecNo(), dbGoBottom(), my_QOut( o, { "BOT", RecNo(), nOldRecNo } ) }
   o:SkipBlock     := { | nRecs | nOldRecNo := RecNo(), tmp := Skipped( nRecs ), my_QOut( o, { "SKP", RecNo(), nOldRecNo, nRecs, tmp } ), tmp }
   o:AddColumn( TBColumnNew( "#", {|| my_QOut( NIL, { "BLK", RecNo() } ), StrZero( RecNo(), 3 ) } ) )

   #define Inkey(x)

   CLS
   TEST_CALL( o:leftVisible )
   TEST_CALL( o:goTop() )
   TEST_CALL( ForceStable( o ) )
   TEST_CALL( o:goTop() )
   TEST_CALL( o:pageUp() )
   TEST_CALL( ForceStable( o ) )
   TEST_CALL( o:goTop() )
   TEST_CALL( o:pageDown() )
   TEST_CALL( ForceStable( o ) )
   TEST_CALL( o:goBottom() )
   TEST_CALL( ForceStable( o ) )

   TEST_CALL( o:goBottom() )
   TEST_CALL( o:pageUp() )
   TEST_CALL( ForceStable( o ) )
   TEST_CALL( o:goBottom() )
   TEST_CALL( o:pageDown() )
   TEST_CALL( ForceStable( o ) )
   TEST_CALL( o:leftVisible )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:rowPos )
   TEST_CALL( o:rowPos )

   TEST_CALL( dbGoTop() )
   TEST_CALL( ForceStable( o ) )
   TEST_CALL( o:goTop() )
   TEST_CALL( o:goBottom() )
   TEST_CALL( ForceStable( o ) )
   TEST_CALL( o:up() )
   TEST_CALL( o:up() )
   TEST_CALL( o:down() )
// dbGoTop()
   TEST_CALL( ForceStable( o ) )
   TEST_CALL( o:PageUp() )
   TEST_CALL( ForceStable( o ) )
   o:goTop()
   o:forceStable()
   TEST_CALL( o:down() )
   TEST_CALL( o:down() )
   TEST_CALL( o:PageDown() )
   TEST_CALL( o:PageDown() )
   TEST_CALL( o:PageUp() )
   TEST_CALL( ForceStable( o ) )
   Inkey(0)
   TEST_CALL( o:goTop() )
   TEST_CALL( o:PageDown() )
   TEST_CALL( ForceStable( o ) )
   Inkey(0)
   TEST_CALL( o:goTop() )
   TEST_CALL( o:down() )
   TEST_CALL( ForceStable( o ) )
   Inkey(0)
   TEST_CALL( o:goTop() )
   TEST_CALL( o:down() )
   TEST_CALL( o:down() )
   TEST_CALL( o:down() )
   TEST_CALL( o:down() )
   TEST_CALL( o:down() )
   TEST_CALL( o:down() )
   TEST_CALL( ForceStable( o ) )
   Inkey(0)
   TEST_CALL( o:goBottom() )
   TEST_CALL( ForceStable( o ) )
   Inkey(0)
   TEST_CALL( o:goBottom() )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   Inkey(0)
   TEST_CALL( o:goBottom() )
   TEST_CALL( o:pageDown() )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   Inkey(0)
   TEST_CALL( o:goTop() )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   Inkey(0)
   TEST_CALL( o:goTop() )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:down() )
   TEST_CALL( o:stabilize )
   Inkey(0)
   TEST_CALL( o:goTop() )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:down() )
   TEST_CALL( o:down() )
   TEST_CALL( o:down() )
   TEST_CALL( o:down() )
   TEST_CALL( o:down() )
   TEST_CALL( o:down() )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   TEST_CALL( o:stabilize )
   Inkey(0)

/*
   o:Stabilize()
   o:Up()
   o:Down()
   o:PageUp()
   o:PageDown()
   o:GoTop()
   o:GoBottom()
*/

   RETURN NIL

STATIC FUNCTION Skipped( nRecs )

   LOCAL nSkipped := 0

   IF LastRec() != 0
      IF nRecs == 0
         dbSkip( 0 )
      ELSEIF nRecs > 0 .AND. RecNo() != LastRec() + 1
         DO WHILE nSkipped < nRecs
            dbSkip()
            IF Eof()
               dbSkip( -1 )
               EXIT
            ENDIF
            nSkipped++
         ENDDO
      ELSEIF nRecs < 0
         DO WHILE nSkipped > nRecs
            dbSkip( -1 )
            IF Bof()
               EXIT
            ENDIF
            nSkipped--
         ENDDO
      ENDIF
   ENDIF

   RETURN nSkipped

FUNCTION XToStrE( xValue )
   LOCAL cType := ValType( xValue )

   DO CASE
   CASE cType == "C"

      xValue := StrTran( xValue, Chr(0), '"+Chr(0)+"' )
      xValue := StrTran( xValue, Chr(9), '"+Chr(9)+"' )
      xValue := StrTran( xValue, Chr(10), '"+Chr(10)+"' )
      xValue := StrTran( xValue, Chr(13), '"+Chr(13)+"' )
      xValue := StrTran( xValue, Chr(26), '"+Chr(26)+"' )

      RETURN xValue

   CASE cType == "N" ; RETURN LTrim( Str( xValue ) )
   CASE cType == "D" ; RETURN DToS( xValue )
   CASE cType == "L" ; RETURN iif( xValue, ".T.", ".F." )
   CASE cType == "O" ; RETURN xValue:className() + " Object"
   CASE cType == "U" ; RETURN "NIL"
   CASE cType == "B" ; RETURN '{||...} -> ' + XToStrE( Eval( xValue ) )
   CASE cType == "A" ; RETURN '{ ' + ArrayToEList( xValue ) + ' }'
   CASE cType == "M" ; RETURN 'M:' + xValue
   ENDCASE

   RETURN ""

FUNCTION ArrayToEList( a )
   LOCAL tmp
   LOCAL cString := ""

   FOR tmp := 1 TO Len( a )
      cString += XToStrE( a[ tmp ] )
      IF tmp < Len( a )
         cString += ", "
      ENDIF
   NEXT

   RETURN cString

FUNCTION ForceStable( o )

   DO WHILE !TEST_CALL( o:stabilize )
   ENDDO

   RETURN NIL

FUNCTION TEST_C_CALL( o, cBlock, bBlock )
   LOCAL xRetVal
   LOCAL cOldBlock := s_cCurrBlock

   s_cCurrBlock := cBlock

   LOGSTUFF( o, .T., "BEGIN" )
   xRetVal := Eval( bBlock )
   LOGSTUFF( o, .T., "END" )

   s_cCurrBlock := cOldBlock

   RETURN xRetVal

FUNCTION LOGSTUFF( o, l, cText )

   STATIC s_nRow := 0
   LOCAL nLevel := 16

   IF s_nRow == MaxRow()
      Scroll( 0, 16, MaxRow(), MaxCol(), 1, 0 )
      DispOutAt( MaxRow(), 0, Space( MaxCol() + 1 ) )
   ELSE
      s_nRow++
   ENDIF

   #define DispOut( x ) OutStd( x )

   WHILE procline(--nLevel)==0
   ENDDO
   //nLevel:=2

   SetPos( s_nRow, 16 + iif( l, 0, 3 ) )
   ++s_nCount
   DispOut( padr(procname(nLevel),10)+":"+strzero(procline(nLevel),3) )
   //DispOut( s_nCount )
   DispOut( "    " )
   DispOut( PadR( iif( l, s_cCurrBlock, "" ), 11 ) ) ; DispOut( " " )
   DispOut( iif( o != NIL, o:rowPos, PadL( "", 10 ) ) ) ; DispOut( " " )
   DispOut( cText ) ; DispOut( " " )
   DispOut( /* Chr( 13 ) + */ Chr( 10 ) )

   RETURN NIL

FUNCTION my_QOut( o, a )

   LOGSTUFF( o, .F., ArrayToEList( a ) )

   RETURN NIL
From miguelangel at marchuet.net  Mon Apr 28 10:28:41 2008
From: miguelangel at marchuet.net (Miguel Angel Marchuet)
Date: Mon Apr 28 10:26:31 2008
Subject: [Harbour] Example more simple that shows how we lose memory and
	speed
In-Reply-To: <20080428132814.GA1177@34-mo7-2.acn.waw.pl>
References: <4815889B.6020904@marchuet.net> <48159BBC.4030201@marchuet.net>
	<20080428132814.GA1177@34-mo7-2.acn.waw.pl>
Message-ID: <4815DF19.4020808@marchuet.net>

And With this test ?


#include "hbmemory.ch"
#include "hbclass.ch"

#define MAXTEST 10

PROCEDURE MAIN()
    LOCAL n, ao, nMem, nTime

    REQUEST HB_GT_WIN

    // To load the class
    GetNew( 20, 20 )

    nTime := Seconds()
    nMem := Memory( HB_MEM_USED )
    ao := {}

    FOR n := 1 TO MAXTEST

       // Here we lost memory
       aAdd( ao, Problem() )
       ao[n] := Nil

       hb_gcAll( .T. )
       ? 'Mem used <- ' + AllTrim( Str( Memory( HB_MEM_USED ) ) )

    NEXT

    ao := nil
    hb_gcAll( .T. )

    ? "We lost " + AllTrim( Str( Memory( HB_MEM_USED ) - nMem ) ) + " Bytes"
    ? "Elapsed time " + AllTrim( Str( Seconds() - nTime ) )

RETURN

FUNCTION PROBLEM()
    LOCAL cValue := {'   '}
    LOCAL oMem1 := Mem():New()
RETURN Ctl():New( oMem1, cValue, 1, 'XXXX' )

CLASS Mem
    DATA aValues INIT {}
    DATA oFriend
    METHOD New( oFriend ) CONSTRUCTOR
    METHOD AddItem( oItem ) INLINE AAdd( ::aValues, oItem )
ENDCLASS

METHOD New( oFriend ) CLASS Mem

    IF ! Empty( oFriend )
       ::oFriend := oFriend
       oFriend:AddItem( Self )
    ENDIF

RETURN Self

CLASS Ctl
    DATA oFriend
    DATA oGet
    DATA uVal
    METHOD uValue( nVal ) BLOCK {|u| If( PCount() > 1, ::uVar[nVal] := u, ::uVar[nVal] ) }
    METHOD New( oFriend, uVal, nPos, cPict ) CONSTRUCTOR
ENDCLASS

METHOD New( oFriend, uVal, nPos, cPict ) CLASS Ctl
    oFriend:AddItem( Self )
    ::oFriend := oFriend
    ::oGet    := GetNew( 20, 20, bSetGet( uVal, nPos ),, cPict )
RETURN Self

FUNCTION bSetGet( uVar, nVal )
RETURN {|u| If( PCount() > 1, uVar[nVal] := u, uVar[nVal] ) }




From miguelangel at marchuet.net  Mon Apr 28 10:30:18 2008
From: miguelangel at marchuet.net (Miguel Angel Marchuet)
Date: Mon Apr 28 10:28:04 2008
Subject: [Harbour] Example more simple that shows how we lose memory and
	speed
In-Reply-To: <20080428132814.GA1177@34-mo7-2.acn.waw.pl>
References: <4815889B.6020904@marchuet.net> <48159BBC.4030201@marchuet.net>
	<20080428132814.GA1177@34-mo7-2.acn.waw.pl>
Message-ID: <4815DF7A.4070100@marchuet.net>

Sorry with this, I recover more than I spend.

What is the error ?

#include "hbmemory.ch"
#include "hbclass.ch"

#define MAXTEST 10

PROCEDURE MAIN()
    LOCAL n, ao, nMem, nTime

    REQUEST HB_GT_WIN

    // To load the class
    Problem()

    nTime := Seconds()
    nMem := Memory( HB_MEM_USED )
    ao := {}

    FOR n := 1 TO MAXTEST

       // Here we lost memory
       aAdd( ao, Problem() )

       // Here harbour have a loose of performance. ????
       ao[n] := Nil

       hb_gcAll( .T. )
       ? 'Mem used <- ' + AllTrim( Str( Memory( HB_MEM_USED ) ) )

    NEXT

    ao := nil
    hb_gcAll( .T. )

    ? "We lost " + AllTrim( Str( Memory( HB_MEM_USED ) - nMem ) ) + " Bytes"
    ? "Elapsed time " + AllTrim( Str( Seconds() - nTime ) )

RETURN

FUNCTION PROBLEM()
    LOCAL cValue := {'   '}
    LOCAL oMem1 := Mem():New()
RETURN Ctl():New( oMem1, cValue, 1, 'XXXX' )

CLASS Mem
    DATA aValues INIT {}
    DATA oFriend
    METHOD New( oFriend ) CONSTRUCTOR
    METHOD AddItem( oItem ) INLINE AAdd( ::aValues, oItem )
ENDCLASS

METHOD New( oFriend ) CLASS Mem

    IF ! Empty( oFriend )
       ::oFriend := oFriend
       oFriend:AddItem( Self )
    ENDIF

RETURN Self

CLASS Ctl
    DATA oFriend
    DATA oGet
    DATA uVal
    METHOD uValue( nVal ) BLOCK {|u| If( PCount() > 1, ::uVar[nVal] := u, ::uVar[nVal] ) }
    METHOD New( oFriend, uVal, nPos, cPict ) CONSTRUCTOR
ENDCLASS

METHOD New( oFriend, uVal, nPos, cPict ) CLASS Ctl
    oFriend:AddItem( Self )
    ::oFriend := oFriend
    ::oGet    := GetNew( 20, 20, bSetGet( uVal, nPos ),, cPict )
RETURN Self

FUNCTION bSetGet( uVar, nVal )
RETURN {|u| If( PCount() > 1, uVar[nVal] := u, uVar[nVal] ) }

From druzus at acn.waw.pl  Mon Apr 28 10:56:03 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Mon Apr 28 10:56:09 2008
Subject: [Harbour] Example more simple that shows how we lose memory and
	speed
In-Reply-To: <4815DF7A.4070100@marchuet.net>
References: <4815889B.6020904@marchuet.net> <48159BBC.4030201@marchuet.net>
	<20080428132814.GA1177@34-mo7-2.acn.waw.pl>
	<4815DF7A.4070100@marchuet.net>
Message-ID: <20080428145602.GA5830@34-mo7-2.acn.waw.pl>

On Mon, 28 Apr 2008, Miguel Angel Marchuet wrote:
> Sorry with this, I recover more than I spend.
> What is the error ?

This test reports:

druzus:/tmp/4# hbmk -n -w t2.prg -fmstat && ./t2
Harbour devel build 1.1-1 Intl. (Rev. 8378)
Copyright (c) 1999-2008, http://www.harbour-project.org/
Compiling 't2.prg'...
t2.prg(65) Warning W0001  Ambiguous reference: 'SELF'
t2.prg(65) Warning W0001  Ambiguous reference: 'NVAL'
t2.prg(65) Warning W0001  Ambiguous reference: 'SELF'
t2.prg(65) Warning W0001  Ambiguous reference: 'NVAL'
Lines 888, Functions/Procedures 7
Generating C source output to 't2.c'... Done.

Mem used <- 186487
Mem used <- 186503
Mem used <- 186519
Mem used <- 186535
Mem used <- 186551
Mem used <- 186567
Mem used <- 186583
Mem used <- 186599
Mem used <- 186615
Mem used <- 186631
We lost -1233 Bytes
Elapsed time 0.00
druzus:/tmp/4#

The result -1233 is caused by the fact that after:
    // To load the class
    Problem()

You have value in return stack item which can be deallocated
only by GC because it has cross references and you do not call
hb_gcAll(.t.) before:
    nMem := Memory( HB_MEM_USED )

So this time you haven't freed all memory before getting the
initial amount of allocated memory and finally you have negative
results.
Just add:
    hb_gcAll(.t.)
before:
    nMem := Memory( HB_MEM_USED )
and you will have:
We lost 0 Bytes

No memory leak and no any other problems in this test except
the wrong line:
    METHOD uValue( nVal ) BLOCK {|u| If( PCount() > 1, ::uVar[nVal] := u, ::uVar[nVal] ) }
which is the source of compile time warnings about and will cause RT
error if you will want to call ctl:uValue method. But it's programmer
problem in this code only.

best regards,
Przemek
From randy at palmasdev.com  Mon Apr 28 12:20:19 2008
From: randy at palmasdev.com (Randy Portnoff)
Date: Mon Apr 28 12:19:20 2008
Subject: [Harbour] Status of next release
In-Reply-To: <4815DF19.4020808@marchuet.net>
References: <4815889B.6020904@marchuet.net> <48159BBC.4030201@marchuet.net>
	<20080428132814.GA1177@34-mo7-2.acn.waw.pl>
	<4815DF19.4020808@marchuet.net>
Message-ID: <20080428161915.0B663F466@smtp.tor.pathcom.com>

Hi all,

What is the status of the next release? Also, will it be B4 or R1?

Regards,
Randy.

From mbelgrano at deltain.it  Mon Apr 28 13:03:04 2008
From: mbelgrano at deltain.it (Massimo Belgrano)
Date: Mon Apr 28 13:03:19 2008
Subject: [Harbour] Last bcc32 release better for harbour
Message-ID: <AFB948164110ED43B5EB849E8DEEF03815EB88@SRV02.deltain.net>

With c++ builder 2007 is included CodeGear C++ Compiler 5.9 (bcc32)
http://www.codegear.com/products/cppbuilder/feature-matrix/

with free Turbo C++ Explorer is included BCC32 5.82
http://cc.codegear.com/free/turbo

with Free Borland C++ Compiler is included version 5.5
http://www.codegear.com/downloads/free/cppbuilder

have somebody speed test with harbour all bcc32?

Massimo Belgrano

From philb at philb.us  Mon Apr 28 20:12:06 2008
From: philb at philb.us (Phil Barnett)
Date: Mon Apr 28 20:12:12 2008
Subject: [Harbour] Status of next release
In-Reply-To: <20080428161915.0B663F466@smtp.tor.pathcom.com>
References: <4815889B.6020904@marchuet.net> <4815DF19.4020808@marchuet.net>
	<20080428161915.0B663F466@smtp.tor.pathcom.com>
Message-ID: <200804282012.07014.philb@philb.us>

On Monday 28 April 2008 12:20:19 pm Randy Portnoff wrote:
> Hi all,
>
> What is the status of the next release? Also, will it be B4 or R1?

RC1, and we are needing the whatsnew.txt file before we mark the repository.

-- 
In order to ensure a safe police state; the right of the people to keep and 
bear arms must be infringed.
From harbour.01 at syenar.hu  Tue Apr 29 02:26:40 2008
From: harbour.01 at syenar.hu (=?ISO-8859-1?Q?Szak=E1ts_Viktor?=)
Date: Tue Apr 29 02:28:03 2008
Subject: [Harbour] PCRE update 6.3 -> 7.6
Message-ID: <66E1DAF3-1235-4ACA-AB27-6927B5F0A24B@syenar.hu>

Hi all,

We've PCRE version 6.3 (from 2005) in Harbour repo right now,
latest is 7.6 (2008). Shouldn't we update?

I have a port ready (except extra source modifications)
to test:

http://www.syenar.hu/harbour/hbpcre76.zip
http://www.syenar.hu/harbour/common.mak

Brgds,
Viktor

From lorenzo.fiorini at gmail.com  Tue Apr 29 02:35:12 2008
From: lorenzo.fiorini at gmail.com (Lorenzo Fiorini)
Date: Tue Apr 29 02:35:17 2008
Subject: [Harbour] Sun Netbeans and Harbour syntax module
Message-ID: <9257026e0804282335vd25dd31n459282eabe61196b@mail.gmail.com>

Vim is my standard editor, and ever will be, since I need a tool that
works on Linux, MacOsx, Windows and I find it everywhere.
But today half of my apps are made of xhtmls, javascripts, xmls, zips,
jpgs and managing all that stuffs is getting harder mainly for junior
developers that are "IDE minded".

I'm looking for a multiplatform IDE that has support for javascript
and xml and can run external tools like harbour and make and I'm
evaluating latest Netbeans 6.1. The C/C++ build is less than 20MB and
installs in seconds under Fedora 9 and it seems fast and clean.

Any experience or opinion?

If the test would be positive, It would be great to have Netbean's
syntax module for Harbour's prg.
Is there anybody who has already done it?
If no, Is there anybody interested to collaborate to create it?

best regards,
Lorenzo
From niki at synel.co.il  Tue Apr 29 04:30:34 2008
From: niki at synel.co.il (Chen Kedem)
Date: Tue Apr 29 04:29:18 2008
Subject: [Harbour] SF bugtracker#1934698: Fail in "confirmation request"
	sendmail.prg
Message-ID: <4816DCA9.4A15@synel.co.il>

http://sourceforge.net/tracker/index.php?func=detail&aid=1934698&group_id=681&atid=100681

What I can understand from the very short user report is this
(I just report it from the bugtracker, I don't know if this is
actually a needed fix):

in contrib/hbtip/sendmail.prg line#376 :
---------------------------
IF lRead
   oMail:hHeaders[ "Disposition-Notification-To" ] := cUser
ENDIF
---------------------------

Should be changed into:
---------------------------
IF lRead
   oMail:hHeaders[ "Disposition-Notification-To" ] := cFrom
ENDIF
---------------------------


  Chen.
From harbour.01 at syenar.hu  Tue Apr 29 04:36:35 2008
From: harbour.01 at syenar.hu (=?ISO-8859-1?Q?Szak=E1ts_Viktor?=)
Date: Tue Apr 29 04:37:59 2008
Subject: [Harbour] SF bugtracker#1934698: Fail in "confirmation request"
	sendmail.prg
In-Reply-To: <4816DCA9.4A15@synel.co.il>
References: <4816DCA9.4A15@synel.co.il>
Message-ID: <CFC149C7-3C53-48FC-9F09-90E675C3AF2C@syenar.hu>

Hi Chen,

Thanks, this looks valid, I'll commit in my next session.

If anyone has to add something to this, please do.

Brgds,
Viktor

On 2008.04.29., at 10:30, Chen Kedem wrote:

> http://sourceforge.net/tracker/index.php?func=detail&aid=1934698&group_id=681&atid=100681
>
> What I can understand from the very short user report is this
> (I just report it from the bugtracker, I don't know if this is
> actually a needed fix):
>
> in contrib/hbtip/sendmail.prg line#376 :
> ---------------------------
> IF lRead
>   oMail:hHeaders[ "Disposition-Notification-To" ] := cUser
> ENDIF
> ---------------------------
>
> Should be changed into:
> ---------------------------
> IF lRead
>   oMail:hHeaders[ "Disposition-Notification-To" ] := cFrom
> ENDIF
> ---------------------------
>
>
>  Chen.
> _______________________________________________
> Harbour mailing list
> Harbour@harbour-project.org
> http://lists.harbour-project.org/mailman/listinfo/harbour

From niki at synel.co.il  Tue Apr 29 04:45:10 2008
From: niki at synel.co.il (Chen Kedem)
Date: Tue Apr 29 04:43:51 2008
Subject: [Harbour] Just noticed that ChangeLog is part of the source now
Message-ID: <4816E016.CFE@synel.co.il>

Hi,

Its been a while since I built Harbour (about a month). My build
environment (Win32/BCC) is not the same directory as the SVN
repository. Yesterday, when I rebuilt Harbour, it failed because
the ChangeLog file was missing. It was added to the source list
as part of "2008-04-09 20:42 UTC+0200 Przemyslaw Czerpak". After
copying the file, the build went just fine (no errors or warnings
by the way) and HBTest results are a bit faster in spite of more
tests added - GREAT WORK!!

Oh, the point of this mail is to remind people when packaging source
not to forget to include the ChangeLog beast too as part of it.


  Chen.
From mbelgrano at deltain.it  Tue Apr 29 05:49:59 2008
From: mbelgrano at deltain.it (Massimo Belgrano)
Date: Tue Apr 29 05:50:08 2008
Subject: [Harbour] How Hbmk, hblnk, hbcc with bcc
In-Reply-To: <20080410005603.GA19638@localhost.localdomain>
References: <AFB948164110ED43B5EB849E8DEEF03815EB0D@SRV02.deltain.net>
	<20080410005603.GA19638@localhost.localdomain>
Message-ID: <AFB948164110ED43B5EB849E8DEEF03815EB90@SRV02.deltain.net>

Where is source of hb* tools?

-----Original Message-----
From: harbour-bounces@harbour-project.org
[mailto:harbour-bounces@harbour-project.org] On Behalf Of Przemyslaw
Czerpak
Sent: Thursday, April 10, 2008 2:56 AM
To: Harbour Project Main Developer List.
Subject: Re: [Harbour] How Hbmk, hblnk, hbcc with bcc

On Wed, 09 Apr 2008, Massimo Belgrano wrote:
> How can I make Hbmk.exe, hblnk.exe, hbcc.exe with harbour/bcc?

hb* tools are BASH scripts and are supported only on platforms
where bash is available and now they can work only with GCC based
compilers.
For BCC you will need new tool. But it should not be hard to write
sth like using pure .prg code. For sure not now (I'm sorry but I'm
too busy with my business jobs) but maybe in the future I'll write
sth what will work with other compilers.

best regards,
Przemek
_______________________________________________
Harbour mailing list
Harbour@harbour-project.org
http://lists.harbour-project.org/mailman/listinfo/harbour
From mbelgrano at deltain.it  Tue Apr 29 06:35:39 2008
From: mbelgrano at deltain.it (Massimo Belgrano)
Date: Tue Apr 29 06:35:46 2008
Subject: [Harbour] How do I use GTWVG (\harbour\contrib\gtwvg)?
In-Reply-To: <480E8C18.5040600@ec-red.com>
References: <480E8C18.5040600@ec-red.com>
Message-ID: <AFB948164110ED43B5EB849E8DEEF03815EB91@SRV02.deltain.net>

I have same problem of build the demowvg
Is possible made something to make easy in Harbour compiling a sample also for win32/bcc user?



-----Original Message-----
From: harbour-bounces@harbour-project.org [mailto:harbour-bounces@harbour-project.org] On Behalf Of Guillermo Varona Silup?
Sent: Wednesday, April 23, 2008 3:09 AM
To: Harbour Project Main Developer List.
Subject: [Harbour] How do I use GTWVG (\harbour\contrib\gtwvg)?

[SPA]
Hola:
?C?mo se usa GTWVG (\harbour\contrib\gtwvg)?
?C?mo construyo el demowvg (\harbour\contrib\gtwvg\tests)?
?Existe alguna documentaci?n?

[ENG]
Hello:
How do I use GTWVG (\harbour\contrib\gtwvg)?
How do I build the demowvg (\harbour\contrib\gtwvg\tests)?
Is there any documentation?

TIA,
Best Regards.
GVS


_______________________________________________
Harbour mailing list
Harbour@harbour-project.org
http://lists.harbour-project.org/mailman/listinfo/harbour
> 
From harbour.01 at syenar.hu  Tue Apr 29 07:08:32 2008
From: harbour.01 at syenar.hu (=?iso-8859-2?Q?Szak=E1ts_Viktor?=)
Date: Tue Apr 29 07:08:23 2008
Subject: [Harbour] CHANGELOG: 2008-04-29 13:05 UTC+0100 Viktor Szakats
 (harbour.01 syenar hu)
Message-ID: <01c8a9e9$Blat.v2.6.2$5cb3ad94$17203efae244@127.0.0.1>

2008-04-29 13:05 UTC+0100 Viktor Szakats (harbour.01 syenar hu)
   * common.mak
   * source/rdd/Makefile
   * source/rdd/dbstrux.prg
   * source/rdd/rddord.prg
   + source/rdd/rddordu.prg
   + source/rdd/dbstruxu.prg
     + Moved some UNDOC functions to separate files.
     * Removed STRICT guard from _dtxCondSet().

   * include/hbextern.ch
     ! Added missing _dtxCondSet().

   * source/rtl/colorind.c
   * source/rtl/direct.c
     * Minor formatting.

   * source/vm/asort.c
     ! Changed one direct item access to item API call.

   * contrib/rddads/ads.ch
   * contrib/rddads/adsfunc.c
   * contrib/rddads/ads1.c
     ! Added support for ADS9 VFP file type and fields.
     ; Borrowed from xhb / Luiz Rafael Culik.
       (changed to compile using original - older - ADS headers)
     ; Please review & test.

   * source/vm/pcount.c
     % Minor opt.

   * contrib/hbtip/sendmail.prg
     ! SF bugtracker#1934698 fix applied. Thanks Chen.

   - contrib/hbapollo/tests/bld.bat
   * contrib/hbapollo/tests/bld_b32.bat
     % Using central bld.bat instead of modified local copy.

   + contrib/gtwvg/tests/bld_b32.bat
     + Added BCC32 build batch file for GTWVG tests.
     ; NOTE: demowvg still doesn't seem to work.
--
Brgds,
Viktor

From miguelangel at marchuet.net  Tue Apr 29 07:36:30 2008
From: miguelangel at marchuet.net (Miguel Angel Marchuet)
Date: Tue Apr 29 07:34:14 2008
Subject: [Harbour] Example more simple that shows how we lose memory and
	speed
In-Reply-To: <20080428145602.GA5830@34-mo7-2.acn.waw.pl>
References: <4815889B.6020904@marchuet.net> <48159BBC.4030201@marchuet.net>
	<20080428132814.GA1177@34-mo7-2.acn.waw.pl>
	<4815DF7A.4070100@marchuet.net>
	<20080428145602.GA5830@34-mo7-2.acn.waw.pl>
Message-ID: <4817083E.3010605@marchuet.net>

Many thks Przemek for all.

:(
  	
but our problem persists and is not located, could be related to FiveWin, but the drip of lost memory
is constant, to the point where we have come to lose and 350Mg here to test.
And that we release all possible cross-references. initialize all data member of all classes have been
taken any value.

There any way of knowing who is a reference to the items not released ?

Best regards,
Miguel Angel Marchuet


From sscc at mweb.co.za  Tue Apr 29 08:24:40 2008
From: sscc at mweb.co.za (Alex Strickland)
Date: Tue Apr 29 08:24:46 2008
Subject: [Harbour] How Hbmk, hblnk, hbcc with bcc
In-Reply-To: <AFB948164110ED43B5EB849E8DEEF03815EB90@SRV02.deltain.net>
References: <AFB948164110ED43B5EB849E8DEEF03815EB0D@SRV02.deltain.net>	<20080410005603.GA19638@localhost.localdomain>
	<AFB948164110ED43B5EB849E8DEEF03815EB90@SRV02.deltain.net>
Message-ID: <48171388.7020608@mweb.co.za>

Massimo Belgrano wrote:

> Where is source of hb* tools?

They are script files, they are not compiled, so you must look inside 
them to see the source. They are not hard to understand, but you may 
need a bash reference:

http://www.gnu.org/software/bash/manual/bashref.html.

They will not run under Windows without installing something like 
MinGW or CygWin.

There is no "Hbmk.exe, hblnk.exe, hbcc.exe".

These would have to be written for Windows use.

Regards
Alex

From mbelgrano at deltain.it  Tue Apr 29 08:28:16 2008
From: mbelgrano at deltain.it (Massimo Belgrano)
Date: Tue Apr 29 08:28:23 2008
Subject: [Harbour] How Hbmk, hblnk, hbcc with bcc
In-Reply-To: <48171388.7020608@mweb.co.za>
References: <AFB948164110ED43B5EB849E8DEEF03815EB0D@SRV02.deltain.net>	<20080410005603.GA19638@localhost.localdomain><AFB948164110ED43B5EB849E8DEEF03815EB90@SRV02.deltain.net>
	<48171388.7020608@mweb.co.za>
Message-ID: <AFB948164110ED43B5EB849E8DEEF03815EB92@SRV02.deltain.net>

Can i use http://win-bash.sourceforge.net/ ?

-----Original Message-----
From: harbour-bounces@harbour-project.org
[mailto:harbour-bounces@harbour-project.org] On Behalf Of Alex
Strickland
Sent: Tuesday, April 29, 2008 2:25 PM
To: Harbour Project Main Developer List.
Subject: Re: [Harbour] How Hbmk, hblnk, hbcc with bcc

Massimo Belgrano wrote:

> Where is source of hb* tools?

They are script files, they are not compiled, so you must look inside
them to see the source. They are not hard to understand, but you may
need a bash reference:

http://www.gnu.org/software/bash/manual/bashref.html.

They will not run under Windows without installing something like MinGW
or CygWin.

There is no "Hbmk.exe, hblnk.exe, hbcc.exe".

These would have to be written for Windows use.

Regards
Alex

_______________________________________________
Harbour mailing list
Harbour@harbour-project.org
http://lists.harbour-project.org/mailman/listinfo/harbour
> 
From sscc at mweb.co.za  Tue Apr 29 08:37:29 2008
From: sscc at mweb.co.za (Alex Strickland)
Date: Tue Apr 29 08:37:47 2008
Subject: [Harbour] How Hbmk, hblnk, hbcc with bcc
In-Reply-To: <AFB948164110ED43B5EB849E8DEEF03815EB92@SRV02.deltain.net>
References: <AFB948164110ED43B5EB849E8DEEF03815EB0D@SRV02.deltain.net>	<20080410005603.GA19638@localhost.localdomain><AFB948164110ED43B5EB849E8DEEF03815EB90@SRV02.deltain.net>	<48171388.7020608@mweb.co.za>
	<AFB948164110ED43B5EB849E8DEEF03815EB92@SRV02.deltain.net>
Message-ID: <48171689.6020702@mweb.co.za>

Massimo Belgrano wrote:

> Can i use http://win-bash.sourceforge.net/ ?

I am no expert in this area, although I built a MinGW version of 
Harbour for myself a couple of years ago. So, IMHO, you must rather 
install MinGW which includes other tools that you will need - such as 
make and gcc, and including bash.

However, I do not think that any of this will help you compile with 
Borland C.

I am not sure what your end goal is, but I do not think these scripts 
are the way forward.

Regards
Alex
From mbelgrano at deltain.it  Tue Apr 29 08:54:39 2008
From: mbelgrano at deltain.it (Massimo Belgrano)
Date: Tue Apr 29 08:54:47 2008
Subject: [Harbour] How Hbmk, hblnk, hbcc with bcc
In-Reply-To: <48171689.6020702@mweb.co.za>
References: <AFB948164110ED43B5EB849E8DEEF03815EB0D@SRV02.deltain.net>	<20080410005603.GA19638@localhost.localdomain><AFB948164110ED43B5EB849E8DEEF03815EB90@SRV02.deltain.net>	<48171388.7020608@mweb.co.za><AFB948164110ED43B5EB849E8DEEF03815EB92@SRV02.deltain.net>
	<48171689.6020702@mweb.co.za>
Message-ID: <AFB948164110ED43B5EB849E8DEEF03815EB93@SRV02.deltain.net>

The way will be Convert in c and add Borland , Microsoft support?
Shc can be a usefull tool for this way?
http://directory.fsf.org/project/shc/
Shc is a generic shell script compiler. It takes a script which is
specified on the command line and produces C source code.
http://forums11.itrc.hp.com/service/forums/questionanswer.do?admit=10944
7626+1209472804777+28353475&threadId=1192978


-----Original Message-----
From: harbour-bounces@harbour-project.org
[mailto:harbour-bounces@harbour-project.org] On Behalf Of Alex
Strickland
Sent: Tuesday, April 29, 2008 2:37 PM
To: Harbour Project Main Developer List.
Subject: Re: [Harbour] How Hbmk, hblnk, hbcc with bcc

Massimo Belgrano wrote:

> Can i use http://win-bash.sourceforge.net/ ?

I am no expert in this area, although I built a MinGW version of 
Harbour for myself a couple of years ago. So, IMHO, you must rather 
install MinGW which includes other tools that you will need - such as 
make and gcc, and including bash.

However, I do not think that any of this will help you compile with 
Borland C.

I am not sure what your end goal is, but I do not think these scripts 
are the way forward.

Regards
Alex
_______________________________________________
Harbour mailing list
Harbour@harbour-project.org
http://lists.harbour-project.org/mailman/listinfo/harbour
From mbelgrano at deltain.it  Tue Apr 29 08:58:54 2008
From: mbelgrano at deltain.it (Massimo Belgrano)
Date: Tue Apr 29 08:59:06 2008
Subject: [Harbour] How Hbmk, hblnk, hbcc with bcc
In-Reply-To: <48171689.6020702@mweb.co.za>
References: <AFB948164110ED43B5EB849E8DEEF03815EB0D@SRV02.deltain.net>	<20080410005603.GA19638@localhost.localdomain><AFB948164110ED43B5EB849E8DEEF03815EB90@SRV02.deltain.net>	<48171388.7020608@mweb.co.za><AFB948164110ED43B5EB849E8DEEF03815EB92@SRV02.deltain.net>
	<48171689.6020702@mweb.co.za>
Message-ID: <AFB948164110ED43B5EB849E8DEEF03815EB94@SRV02.deltain.net>

Is source of hb* tools located  in \harbour\bin\hb-func.sh and
\harbour\bin\hb-mkslib.sh

-----Original Message-----
From: harbour-bounces@harbour-project.org
[mailto:harbour-bounces@harbour-project.org] On Behalf Of Alex
Strickland
Sent: Tuesday, April 29, 2008 2:37 PM
To: Harbour Project Main Developer List.
Subject: Re: [Harbour] How Hbmk, hblnk, hbcc with bcc

Massimo Belgrano wrote:

> Can i use http://win-bash.sourceforge.net/ ?

I am no expert in this area, although I built a MinGW version of 
Harbour for myself a couple of years ago. So, IMHO, you must rather 
install MinGW which includes other tools that you will need - such as 
make and gcc, and including bash.

However, I do not think that any of this will help you compile with 
Borland C.

I am not sure what your end goal is, but I do not think these scripts 
are the way forward.

Regards
Alex
_______________________________________________
Harbour mailing list
Harbour@harbour-project.org
http://lists.harbour-project.org/mailman/listinfo/harbour
From mbelgrano at deltain.it  Tue Apr 29 09:30:28 2008
From: mbelgrano at deltain.it (Massimo Belgrano)
Date: Tue Apr 29 09:30:41 2008
Subject: [Harbour] Hoe use ADSCHECKEXISTENCE for check the existence of a
	file by server side
Message-ID: <AFB948164110ED43B5EB849E8DEEF03815EB95@SRV02.deltain.net>

How is possible use ADSCHECKEXISTENCE function from ads?

Is correct think that function like ADSCHECKEXISTENCE (ads) or sr_file
(sqlrdd) must be replaceable via rdd?
ADSCHECKEXISTENCE 
Probably also letodb need a function for check for existence of a file
by server side

Massimo Belgrano

From sscc at mweb.co.za  Tue Apr 29 10:20:33 2008
From: sscc at mweb.co.za (Alex Strickland)
Date: Tue Apr 29 10:20:37 2008
Subject: [Harbour] How Hbmk, hblnk, hbcc with bcc
In-Reply-To: <AFB948164110ED43B5EB849E8DEEF03815EB94@SRV02.deltain.net>
References: <AFB948164110ED43B5EB849E8DEEF03815EB0D@SRV02.deltain.net>	<20080410005603.GA19638@localhost.localdomain><AFB948164110ED43B5EB849E8DEEF03815EB90@SRV02.deltain.net>	<48171388.7020608@mweb.co.za><AFB948164110ED43B5EB849E8DEEF03815EB92@SRV02.deltain.net>	<48171689.6020702@mweb.co.za>
	<AFB948164110ED43B5EB849E8DEEF03815EB94@SRV02.deltain.net>
Message-ID: <48172EB1.2090407@mweb.co.za>

Massimo Belgrano wrote:
> Is source of hb* tools located  in \harbour\bin\hb-func.sh and
> \harbour\bin\hb-mkslib.sh

I also cannot find the scripts in my local SVN repository, perhaps 
they have been accidentally removed.

Regards
Alex

From druzus at acn.waw.pl  Tue Apr 29 10:36:50 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Tue Apr 29 10:36:57 2008
Subject: [Harbour] Hoe use ADSCHECKEXISTENCE for check the existence of a
	file by server side
In-Reply-To: <AFB948164110ED43B5EB849E8DEEF03815EB95@SRV02.deltain.net>
References: <AFB948164110ED43B5EB849E8DEEF03815EB95@SRV02.deltain.net>
Message-ID: <20080429143650.GA13289@34-mo7-2.acn.waw.pl>

On Tue, 29 Apr 2008, Massimo Belgrano wrote:
> How is possible use ADSCHECKEXISTENCE function from ads?
> Is correct think that function like ADSCHECKEXISTENCE (ads) or sr_file
> (sqlrdd) must be replaceable via rdd?
> ADSCHECKEXISTENCE 
> Probably also letodb need a function for check for existence of a file
> by server side

We already have such functionality:
   dbExists( <cTable>, [<cIndex>], [<ulConnction>] ) -> <lExists>

It checks if table or index to given table exists.
F.e.:
   dbExists( "test" )
returns true if table "test" exists. It's not necessary to add
file name extension. It will be done automatically by RDD.
And
   dbExists( "test", "fisrt" )
checks if table "test" has index "first". Some RDDs like DBF*
may ignore table name during index checking.

We have also
   dbDrop( <cTable>, [<cIndex>], [<ulConnction>] ) -> <lRemoved>
which can remove table with all related files (indexs and memos)
f.e.:
   dbDrop( "test" )
or only given index, f.e.
   dbDrop( "test", "fisrt" )

AFAIK SQLRDD does not support them at all. In ADS they are supported
but only using standard file API and it should be fixed to use ACE
functions. Though I do not know if it can be implemented using documented
ACE API.

best regards,
Przemek
From druzus at acn.waw.pl  Tue Apr 29 10:45:34 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Tue Apr 29 10:45:39 2008
Subject: [Harbour] question about dbfntx and memo fields
In-Reply-To: <004801c8a8f3$1c7afa80$eb01000a@CE0021>
References: <004801c8a8f3$1c7afa80$eb01000a@CE0021>
Message-ID: <20080429144534.GB13289@34-mo7-2.acn.waw.pl>

On Mon, 28 Apr 2008, Sulyok P?ter wrote:
> Hy all!
> Can somebody help me?
> I use a dbfntx engine and use memo fields.
> If i rewrite an record, then the memo space cannot rewriting, the new memo data written after the .dbt file.
> Also the .dbt file will bi biger and biger, but the .dbf size cannot change.
> I think if i rewrite a record, then the memo field rewrite too.
> Any idea or help?

It's standard DBT behavior the same as in Clipper. New and replaced
data is always added at the end of memo file and old data is still
available for other stations which can use old memoblock number from
their DBF record cache. If you need automatic garbage collector for
old memo data then you will have to use different memo format, f.e.:
   rddInfo( RDDI_MEMOTYPE, DB_MEMO_FPT, "DBFNTX" )
Otherwise you will have to use PACK command or sx_memoPack() function.

best regards,
Przemek
From druzus at acn.waw.pl  Tue Apr 29 10:55:12 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Tue Apr 29 10:55:18 2008
Subject: [Harbour] How Hbmk, hblnk, hbcc with bcc
In-Reply-To: <48172EB1.2090407@mweb.co.za>
References: <AFB948164110ED43B5EB849E8DEEF03815EB0D@SRV02.deltain.net>
	<48171689.6020702@mweb.co.za>
	<AFB948164110ED43B5EB849E8DEEF03815EB94@SRV02.deltain.net>
	<48172EB1.2090407@mweb.co.za>
Message-ID: <20080429145512.GC13289@34-mo7-2.acn.waw.pl>

On Tue, 29 Apr 2008, Alex Strickland wrote:
> Massimo Belgrano wrote:
> >Is source of hb* tools located  in \harbour\bin\hb-func.sh and
> >\harbour\bin\hb-mkslib.sh
> I also cannot find the scripts in my local SVN repository, perhaps 
> they have been accidentally removed.

They are created automatically in
   make install
phase by code in harbour/bin/hb-func.sh
Anyhow for real multiplatform support I suggest to rewrite
them from scratch in C. I think that it will be good to add
to linker wrapper also support RTLINK, BLINKER and EXOSPACE
.lnk files so it will be possible to use original Clipper
link files. Of course most of commands necessary for DOS Clipper
builds will be simply ignored.
In first stage I suggest to write them as .prg code. Massimo,
I guess that it will be easier for you and it's highly possible
that it will not be necessary to rewrite them in C at all.

best regards,
Przemek
From mbelgrano at deltain.it  Tue Apr 29 11:42:37 2008
From: mbelgrano at deltain.it (Massimo Belgrano)
Date: Tue Apr 29 11:42:47 2008
Subject: [Harbour] How Hbmk, hblnk, hbcc with bcc
In-Reply-To: <20080429145512.GC13289@34-mo7-2.acn.waw.pl>
References: <AFB948164110ED43B5EB849E8DEEF03815EB0D@SRV02.deltain.net><48171689.6020702@mweb.co.za><AFB948164110ED43B5EB849E8DEEF03815EB94@SRV02.deltain.net><48172EB1.2090407@mweb.co.za>
	<20080429145512.GC13289@34-mo7-2.acn.waw.pl>
Message-ID: <AFB948164110ED43B5EB849E8DEEF03815EB96@SRV02.deltain.net>

Thanks!
 
Can you give me suggestion for converting hb-func.sh in prg?


-----Original Message-----
From: harbour-bounces@harbour-project.org
[mailto:harbour-bounces@harbour-project.org] On Behalf Of Przemyslaw
Czerpak
Sent: Tuesday, April 29, 2008 4:55 PM
To: Harbour Project Main Developer List.
Subject: Re: [Harbour] How Hbmk, hblnk, hbcc with bcc

On Tue, 29 Apr 2008, Alex Strickland wrote:
> Massimo Belgrano wrote:
> >Is source of hb* tools located  in \harbour\bin\hb-func.sh and
> >\harbour\bin\hb-mkslib.sh
> I also cannot find the scripts in my local SVN repository, perhaps 
> they have been accidentally removed.

They are created automatically in
   make install
phase by code in harbour/bin/hb-func.sh
Anyhow for real multiplatform support I suggest to rewrite
them from scratch in C. I think that it will be good to add
to linker wrapper also support RTLINK, BLINKER and EXOSPACE
.lnk files so it will be possible to use original Clipper
link files. Of course most of commands necessary for DOS Clipper
builds will be simply ignored.
In first stage I suggest to write them as .prg code. Massimo,
I guess that it will be easier for you and it's highly possible
that it will not be necessary to rewrite them in C at all.

best regards,
Przemek
_______________________________________________
Harbour mailing list
Harbour@harbour-project.org
http://lists.harbour-project.org/mailman/listinfo/harbour
From druzus at acn.waw.pl  Wed Apr 30 06:16:22 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Wed Apr 30 06:16:29 2008
Subject: [Harbour] PCRE update 6.3 -> 7.6
In-Reply-To: <66E1DAF3-1235-4ACA-AB27-6927B5F0A24B@syenar.hu>
References: <66E1DAF3-1235-4ACA-AB27-6927B5F0A24B@syenar.hu>
Message-ID: <20080430101622.GA19790@34-mo7-2.acn.waw.pl>

On Tue, 29 Apr 2008, Szak?ts Viktor wrote:
> Hi all,
> We've PCRE version 6.3 (from 2005) in Harbour repo right now,
> latest is 7.6 (2008). Shouldn't we update?

Yes, sure.

> I have a port ready (except extra source modifications)
> to test:
> http://www.syenar.hu/harbour/hbpcre76.zip
> http://www.syenar.hu/harbour/common.mak

Fine, but please look at some BCC warnings which should be cleaned
and also try to compile it with C++ compiler (OpenWatcom/g++/MSVC).
Some code needs cleanup.

best regards,
Przemek
From harbour.01 at syenar.hu  Wed Apr 30 06:40:31 2008
From: harbour.01 at syenar.hu (=?ISO-8859-2?Q?Szak=E1ts_Viktor?=)
Date: Wed Apr 30 06:41:55 2008
Subject: [Harbour] PCRE update 6.3 -> 7.6
In-Reply-To: <20080430101622.GA19790@34-mo7-2.acn.waw.pl>
References: <66E1DAF3-1235-4ACA-AB27-6927B5F0A24B@syenar.hu>
	<20080430101622.GA19790@34-mo7-2.acn.waw.pl>
Message-ID: <56493748-5056-491C-84C1-18B680E088FA@syenar.hu>

Hi Przemek,

What is your opinion to use the same filenames
as in the original package?

This would help updating a great deal, since now
it takes two renaming sessions, and several other
modification and diffing passes.

I guess it comes down to how important is it to
support this library for DOS builds..

Brgds,
Viktor

On 2008.04.30., at 12:16, Przemyslaw Czerpak wrote:

> On Tue, 29 Apr 2008, Szak?ts Viktor wrote:
>> Hi all,
>> We've PCRE version 6.3 (from 2005) in Harbour repo right now,
>> latest is 7.6 (2008). Shouldn't we update?
>
> Yes, sure.
>
>> I have a port ready (except extra source modifications)
>> to test:
>> http://www.syenar.hu/harbour/hbpcre76.zip
>> http://www.syenar.hu/harbour/common.mak
>
> Fine, but please look at some BCC warnings which should be cleaned
> and also try to compile it with C++ compiler (OpenWatcom/g++/MSVC).
> Some code needs cleanup.
>
> best regards,
> Przemek
> _______________________________________________
> Harbour mailing list
> Harbour@harbour-project.org
> http://lists.harbour-project.org/mailman/listinfo/harbour

From druzus at acn.waw.pl  Wed Apr 30 07:23:10 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Wed Apr 30 07:23:17 2008
Subject: [Harbour] Re: question about dbfntx and memo fields
In-Reply-To: <018a01c8aaae$ad39d8e0$eb01000a@CE0021>
References: <018a01c8aaae$ad39d8e0$eb01000a@CE0021>
Message-ID: <20080430112310.GA19906@34-mo7-2.acn.waw.pl>

On Wed, 30 Apr 2008, Sulyok P?ter wrote:
> I tested the fpt memofile, but the problem doesn't will be correct.
> If i used an memo width fpt format, and modify a record, or delete, then the size of .fpt file didn't change.

Yes it is. When you change the memo FPT or SMT field putting smaller value
then the previous one the FPT and SMT size is not reduced but the used area
is marked as free inside memo file and will be reused on next update.
Deleting record does not change anything. Deleted DBF records still
accessible and all fields have to be valid so area allocated by memo
fields cannot be freed. If you want to mark it as free then you will
have to assign "" to each memo field in deleted record.

> This is a program, witch become more record, and gives to operators, after that updating in the base.
> One timer makes the corrections in a base, but the memo file doesn't will be more litle.

And it won't be but it will also not grow if inside memo file is free
continuous area long enough to store new value. If not then new value
will be added at the end of memo file. It's expected and documented behavior
compatible with other languages which uses memo files with garbage collectors,
f.e. Flex3 (CL53 CDX RDD), SIX3 FPT and SIX3 SMT.
Only PACK and/or MEMOPACK reduce the memo size but such operations are
time expensive. It's also the reason why they are not done automatically
during each memo field update. MEMOPACK after each update will cause huge
speed overhead for big files because all data in memo file located after
removed block will have to be moved and all corresponding DBF records
holding memo block address updated. Only last memo block (it does not have
to be bound with last DBF record) can be easy removed by simple memo files
cutting and our FPT and SMT memo drivers does it.

> I made a module, witch can handling this problem, but i hopped, it is implemented in compiler.
> If you can use it, than i send to you.

I do not think it will be necessary. I know how it works (it was implemented
by me) and it cannot be changed without rather unacceptable speed overhead.

> Thanks for the help, and sorry my bad english!

Don't worry. It's not worser then mine.

best regards,
Przemek
From druzus at acn.waw.pl  Wed Apr 30 12:06:10 2008
From: druzus at acn.waw.pl (Przemyslaw Czerpak)
Date: Wed Apr 30 12:06:16 2008
Subject: [Harbour] PCRE update 6.3 -> 7.6
In-Reply-To: <56493748-5056-491C-84C1-18B680E088FA@syenar.hu>
References: <66E1DAF3-1235-4ACA-AB27-6927B5F0A24B@syenar.hu>
	<20080430101622.GA19790@34-mo7-2.acn.waw.pl>
	<56493748-5056-491C-84C1-18B680E088FA@syenar.hu>
Message-ID: <20080430160610.GA20651@34-mo7-2.acn.waw.pl>

On Wed, 30 Apr 2008, Szak?ts Viktor wrote:

Hi Viktor,

> What is your opinion to use the same filenames
> as in the original package?
> This would help updating a great deal, since now
> it takes two renaming sessions, and several other
> modification and diffing passes.
> I guess it comes down to how important is it to
> support this library for DOS builds..

Yes, it's for DOS builds. For some compilers which can support
long filenames like DJGPP as workaround it will be possible
to create binaries on platforms which supports long filenames
but it will not work for all compilers.
Anyhow if it will reduce modifications in PCRE then I think
it will be reasonable. But now I'm afraid that PCRE still needs
additional modification for C++ compilers and some warnings cleanups
so this seems to be minor part of job.

best regards,
Przemek

ps. I'll be offline until Sunday.
From mbelgrano at deltain.it  Wed Apr 30 11:40:41 2008
From: mbelgrano at deltain.it (Massimo Belgrano)
Date: Wed Apr 30 12:40:55 2008
Subject: [Harbour] "Server Controlled GUI" (SCGUI) - A language-independent
	GUI protocol. Latency-friendly,
	easy-to-learn replacement for X-Windows. HTML forms have reached
	their end
Message-ID: <AFB948164110ED43B5EB849E8DEEF03815EB9D@SRV02.deltain.net>

Is possible a in harbour a Server-Controlled XML GUI - GUI's over HTTP
and more 
http://www.geocities.com/tablizer/


Massimo Belgrano

From f.eichelhardt at web.de  Wed Apr 30 16:46:19 2008
From: f.eichelhardt at web.de (Fritz Eichelhardt)
Date: Wed Apr 30 15:42:48 2008
Subject: [Harbour] handbook
Message-ID: <200804302246.19235.f.eichelhardt@web.de>

hi all of you,

i'm new to the list.
i used to program in clipper and i'm just a user.

question:
where can i get a printed handbook/reference guide?
i'm prepared to pay for it.

-- 
Mit freundlichen Gr??en

Fritz Eichelhardt
Br?ckenstr. 1
53545 Linz
Tel.: 02644 - 3784
Fax/UMS: 01212 - 517045068
