From harbour@lists.harbour-project.org  Mon Jan  1 19:22:01 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Mon Jan  1 19:22:01 2001
Subject: [Harbour] Changelog 2001-01-01 22:15 MT -3
Message-ID: <001e01c07452$01f2bf00$0100007f@sl.conex.net>

   *utils/hbdoc/genpdf.prg
   *contrib/pdflib/pdfhbdoc.c
     *Fixed handling of 4 column table items

Ron/Ryszard.

After this change i´m recieving GPF on the second parse of the source files.
with the follow error messages
"Non Exported Method: TRIM"
"Non exported Method: FWRITE"
"Error recovery failure"

The library  to build hbdoc with pdf generation was send to you by private
mail

Regards From Brazil

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Tue Jan  2 01:59:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Jan  2 01:59:02 2001
Subject: [Harbour] ChangeLog 2000-01-01 22:40 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <001e01c07452$01f2bf00$0100007f@sl.conex.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKKEEKDIAA.ron@profit-master.com>

2000-01-01 22:40 UTC-0800 Ron Pinkas <ron@profit-master.com>

   * include/hberrors.h
   * source/compiler/hbgenerr.c
     + Added: "Unterminated inline block in function: \'%s\'" and "Too many
inline blocks"

   * include/hbcomp.h
   * source/compiler/harbour.c
     + Added hb_compInlineNew(), hb_compInlineAdd(), and hb_compInlineFind()

   * source/pp/ppcomp.c
   * source/compiler/harbour.slx
   * source/compiler/genc.c
     + Added support for inline C code blocks.

   + tests/inline_c.prg
     + Added new test to demonstrate new inline C support.

/* If no issues are raised I'll try to add same to Flex build in few days.
*/


From harbour@lists.harbour-project.org  Tue Jan  2 02:07:02 2001
From: harbour@lists.harbour-project.org (Patrick Mast)
Date: Tue Jan  2 02:07:02 2001
Subject: [Harbour] ChangeLog 2000-01-01 22:40 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKKEEKDIAA.ron@profit-master.com>
Message-ID: <NCBBJKNMIDPJNLJCHCHIGENLFLAA.harbour@winfakt.com>

Rond,

>+ Added support for inline C code blocks.

Does this mean we can mix PRG code and C code in one file?

regards,

Patrick Mast
www.Patrick.Be.kz



From harbour@lists.harbour-project.org  Tue Jan  2 02:25:04 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Jan  2 02:25:04 2001
Subject: [Harbour] ChangeLog 2000-01-01 22:40 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <NCBBJKNMIDPJNLJCHCHIGENLFLAA.harbour@winfakt.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEELDIAA.ron@profit-master.com>

Yes! Look at tests/inline_c.prg

Ron

> Rond,
> 
> >+ Added support for inline C code blocks.
> 
> Does this mean we can mix PRG code and C code in one file?
> 
> regards,
> 
> Patrick Mast
> www.Patrick.Be.kz


From harbour@lists.harbour-project.org  Tue Jan  2 02:37:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Jan  2 02:37:02 2001
Subject: [Harbour] ChangeLog 2000-01-01 23:35 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEELDIAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKIEELDIAA.ron@profit-master.com>

2000-01-01 23:35 UTC+0800 Ron Pinkas <ron@profit-master.com>

   * source/compiler/harbour.c
     * Minor correction in hb_compInlineAdd()

From harbour@lists.harbour-project.org  Tue Jan  2 02:44:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Jan  2 02:44:02 2001
Subject: [Harbour] ChangeLog 2000-01-01 23:45 UTC+0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKIEELDIAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOEELDIAA.ron@profit-master.com>

* ChangeLog
  * Changed time zone for Ron Pinkas from +0800 to -0800


From harbour@lists.harbour-project.org  Tue Jan  2 02:49:02 2001
From: harbour@lists.harbour-project.org (Patrick Mast)
Date: Tue Jan  2 02:49:02 2001
Subject: [Harbour] ChangeLog 2000-01-01 22:40 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEELDIAA.ron@profit-master.com>
Message-ID: <NCBBJKNMIDPJNLJCHCHIIENMFLAA.harbour@winfakt.com>

Ron,

> Yes! Look at tests/inline_c.prg
Is this ok?


Function Main()
   LOCAL cVar := "Hello"
   ? Test(cVar)
   ? Inline(cVar)
RETURN NIL


Function Test(cVar)
LOCAL cRetu
cRetu := HB_INLINE( cVar )
   {
      if( ISCHAR(1) )
      {
         char *szPar1 = hb_parc(1);
         if( strcmp( szPar1, "Hello") == 0 )
         {
            hb_retc( "It was Hello" );
         }
         else
         {
            hb_retc( "No, it was not Hello" );
         }
      }
      else
      {
         hb_retc( "No Param passed" );
      }
   }
RETURN cRetu

----------

Is there a Funtion Inline() now??

regards,

Patrick Mast
www.Patrick.Be.kz


From harbour@lists.harbour-project.org  Tue Jan  2 03:19:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Jan  2 03:19:02 2001
Subject: [Harbour] ChangeLog 2000-01-01 22:40 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <NCBBJKNMIDPJNLJCHCHIIENMFLAA.harbour@winfakt.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKKEEMDIAA.ron@profit-master.com>

Patrick,

> Is this ok?

No. The inline C code is not callable by means of inline(), it is
automatically inserted into its parent PRG function.

To be 100% accurate you could call it (within the same PRG) by means of
HB_INLINE_N() where N is 0-9 and A-Z based on its sequential ID (look at
tests/inline_c.c). But this is not a recommended practice. Instead you could
easily call the PRG FUNCTION that includes the C code as a wrapper.

Example:

// ---------------------- //
Function Main()

   LOCAL cVar := "Hello"

   cVar := My_Inline_C_Wrapper( cVar )

RETURN NIL

My_Inline_C_Wrapper( cParam )

   HB_INLINE( )
   {
      /* My C Code */
   }

// Or:

   HB_INLINE( cParam )
   {
      /* My C Code */
   }

// Or:

   HB_INLINE( @cParam )
   {
      /* My C Code */
   }

// Or:

   cParam := HB_INLINE( cParam )
   {
      /* My C Code */
   }

//Etc. Etc.

RETURN cParam
// ---------------------- //

In summary the syntax is:

 [ lValue := ] HB_INLINE( [ [@]Pram1 [, [@]ParamN ] ]
 {
   ... /* C Code */
 }

The Open Bracelet '{' must be on a subsequent line *below* the
HB_INLINE(...) and can be preceded by white space. The Close Bracelet '}'
must be on a subsequent line, *below* the last line of C Code, and can be
preceded by white space. Any number of bracelets may appear in between, as
allowed by the C language

Ron


From harbour@lists.harbour-project.org  Tue Jan  2 03:27:05 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Jan  2 03:27:05 2001
Subject: [Harbour] ChangeLog 2000-01-01 22:40 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKKEEMDIAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKAEENDIAA.ron@profit-master.com>

> To be 100% accurate you could call it (within the same PRG) by means of
> HB_INLINE_N() where N is 0-9 and A-Z based on its sequential ID (look at
> tests/inline_c.c).

This explains the limit of 36 inline c blocks per PRG file.

> In summary the syntax is:
> 
>  [ lValue := ] HB_INLINE( [ [@]Pram1 [, [@]ParamN ] ]
>  {
>    ... /* C Code */
>  }

Should be:

  [ lValue := ] HB_INLINE( [ [@]Pram1 [, [@]ParamN ] ] )
  {
    ... /* C Code */
  }

Ron

From harbour@lists.harbour-project.org  Tue Jan  2 03:29:16 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Tue Jan  2 03:29:16 2001
Subject: [Harbour] inline C codeblocks
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEELDIAA.ron@profit-master.com>
Message-ID: <000701c07494$62e17b20$0f2aa8c0@antonio>

Ron,

I do believe that new feature should have been
discussed before CVS it.

I don't doubt about its quality, but it is a 
language extension and everybody should agree
before.

Antonio



From harbour@lists.harbour-project.org  Tue Jan  2 03:51:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Jan  2 03:51:02 2001
Subject: [Harbour] inline C codeblocks
In-Reply-To: <000701c07494$62e17b20$0f2aa8c0@antonio>
Message-ID: <LOBBKAFMMFGJIKLMEPAKMEENDIAA.ron@profit-master.com>

Antonio,

I'll revert this change, if requested.

It does work perfectly, and is a very local addition, which does not change
the compiler at all, infect, there was no change to the parser source file.

It was suggested few time before, including [I believe] you yourself.

Do you have any specific input/concerns/suggestions?

Ron

> Ron,
>
> I do believe that new feature should have been
> discussed before CVS it.
>
> I don't doubt about its quality, but it is a
> language extension and everybody should agree
> before.
>
> Antonio


From harbour@lists.harbour-project.org  Tue Jan  2 03:59:02 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Tue Jan  2 03:59:02 2001
Subject: [Harbour] inline C codeblocks
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKMEENDIAA.ron@profit-master.com>
Message-ID: <000b01c07498$c9ca4020$0f2aa8c0@antonio>

Ron,

> It was suggested few time before, including [I believe] you yourself.

Yes. But we are a team, and this is why we may share our points
of view before adding _new_ features.
 
> Do you have any specific input/concerns/suggestions ?

Not yet! :-)

Antonio




From harbour@lists.harbour-project.org  Tue Jan  2 04:12:02 2001
From: harbour@lists.harbour-project.org (Patrick Mast)
Date: Tue Jan  2 04:12:02 2001
Subject: [Harbour] inline C codeblocks
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKMEENDIAA.ron@profit-master.com>
Message-ID: <NCBBJKNMIDPJNLJCHCHIIENPFLAA.harbour@winfakt.com>

Ron, Antonio,

I'm not the C guru, but I see advantages in this approach.
It's a GOGO for me! ;-))

regards,

Patrick Mast
www.Patrick.Be.kz


From harbour@lists.harbour-project.org  Tue Jan  2 12:08:03 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Tue Jan  2 12:08:03 2001
Subject: [Harbour] CHANGELOG: 2000-12-29 01:30 UTC-0800
In-Reply-To: <002501c07292$b99deba0$921a5e18@bh>
References: <200012291959.eBTJxC222703@thor.parrett.net>
Message-ID: <200101021707.f02H7g204339@thor.parrett.net>

** Reply to message from "Brian Hays" <bhays@abacuslaw.com> on Sat, 30
Dec 2000 11:00:06 -0800

> Can we move this constant to hbsetup.h?

I can't think of any reason not to do it.

> I would propose creating one there called OS_EOL_LEN, and have console.c use
>    #define CRLF_BUFFER_LEN   OS_EOL_LEN + 1

Sounds good to me.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Tue Jan  2 12:15:03 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Tue Jan  2 12:15:03 2001
Subject: [Harbour] inline C codeblocks
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKMEENDIAA.ron@profit-master.com>
Message-ID: <000f01c074dd$bb2f2f40$0f2aa8c0@antonio>

Ron,

This is what I get trying to compile your sample.

Doesn't work with Flex ?

Antonio

Harbour Compiler 0.35j (Build 35) (2000.11.30) (Flex)
Copyright 1999-2000, http://www.harbour-project.org
Compiling 'inline_c.prg'...
inline_c.prg(6) Error E0030  Syntax error: "parse error at '<eol>'"
inline_c.prg(8) Error E0030  Syntax error: "parse error at '<eol>'"
inline_c.prg(12) Error E0030  Syntax error: "parse error at '<eol>'"
inline_c.prg(14) Error E0030  Syntax error: "parse error at '}'"
inline_c.prg(18) Error E0030  Syntax error: "parse error at '}'"
inline_c.prg(23) Error E0030  Syntax error: "parse error at '}'"
6 errors

No code generated
Borland C++ 5.5 for Win32 Copyright (c) 1993, 2000 Borland
Error E2194: Could not find file 'inline_c.c'



From harbour@lists.harbour-project.org  Tue Jan  2 12:23:02 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Tue Jan  2 12:23:02 2001
Subject: [Harbour] inline C codeblocks
In-Reply-To: <000f01c074dd$bb2f2f40$0f2aa8c0@antonio>
References: <LOBBKAFMMFGJIKLMEPAKMEENDIAA.ron@profit-master.com>
Message-ID: <200101021722.f02HM9205476@thor.parrett.net>

** Reply to message from "Antonio Linares" <alinares@fivetech.com> on
Tue, 2 Jan 2001 18:02:04 +0100

> Doesn't work with Flex ?

Yes, it doesn't work with Flex. I guess you missed this part of his
announcement:

> /* If no issues are raised I'll try to add same to Flex build in few days.
> */
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Tue Jan  2 13:13:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Jan  2 13:13:02 2001
Subject: [Harbour] ChangeLog 2000-01-02 10:00 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <200101021722.f02HM9205476@thor.parrett.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEFBDIAA.ron@profit-master.com>

2000-01-02 10:00 UTC-0800 Ron Pinkas <ron@profit-master.com>

   * source/compiler/harbour.l
     + Added support for inline C code.


From harbour@lists.harbour-project.org  Tue Jan  2 13:14:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Jan  2 13:14:02 2001
Subject: [Harbour] inline C codeblocks
In-Reply-To: <000f01c074dd$bb2f2f40$0f2aa8c0@antonio>
Message-ID: <LOBBKAFMMFGJIKLMEPAKGEFBDIAA.ron@profit-master.com>

Antonio,

I just posted the support for Flex version :-)

Try it now...

Ron

> Ron,
> 
> This is what I get trying to compile your sample.
> 
> Doesn't work with Flex ?
> 
> Antonio
> 
> Harbour Compiler 0.35j (Build 35) (2000.11.30) (Flex)
> Copyright 1999-2000, http://www.harbour-project.org
> Compiling 'inline_c.prg'...
> inline_c.prg(6) Error E0030  Syntax error: "parse error at '<eol>'"
> inline_c.prg(8) Error E0030  Syntax error: "parse error at '<eol>'"
> inline_c.prg(12) Error E0030  Syntax error: "parse error at '<eol>'"
> inline_c.prg(14) Error E0030  Syntax error: "parse error at '}'"
> inline_c.prg(18) Error E0030  Syntax error: "parse error at '}'"
> inline_c.prg(23) Error E0030  Syntax error: "parse error at '}'"
> 6 errors
> 
> No code generated
> Borland C++ 5.5 for Win32 Copyright (c) 1993, 2000 Borland
> Error E2194: Could not find file 'inline_c.c'


From harbour@lists.harbour-project.org  Tue Jan  2 13:31:02 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Tue Jan  2 13:31:02 2001
Subject: [Harbour] inline C codeblocks
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKGEFBDIAA.ron@profit-master.com>
Message-ID: <000101c074e8$85808140$0f2aa8c0@antonio>

Ron,

> I just posted the support for Flex version :-)

Ok, thanks. I just tested it, now I am reviewing the output C
and trying to understand your idea... 

As I see it you do all the magic from the lexer only.
Do you store somewhere the C code to later on output it ?

I am sure we all really appreciate just a little explanation 
on your side :-)


Antonio


From harbour@lists.harbour-project.org  Tue Jan  2 13:39:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Jan  2 13:39:02 2001
Subject: [Harbour] inline C codeblocks
In-Reply-To: <000101c074e8$85808140$0f2aa8c0@antonio>
Message-ID: <LOBBKAFMMFGJIKLMEPAKGEFCDIAA.ron@profit-master.com>

Antonio,

Here is a brief description of the inline C support:

Once the lexer encounters the token HB_INLINE it sets a flag so that the PP
will not combines lines that end with ';'

It than calls hb_compInlineAdd() which adds a new pInline structure to a
linked list of all INLINE structures in hb_comp_inlines, much like
hb_comp_functions.

Then it requests the next input lines, until a balanced '}' is found. Each C
code line is added to a buffer that holds the code in a pInline->pCode
buffer.

It than forward to the parser and IDENTIFIER token with a value of
HB_INLINE_N where N is 0-9 and A-Z based on the block sequential ID.

So the parser just sees the all C block as a simple Harbour Function Call
with the name HB_INLINE_0(...), next one as HB_INLINE_1(...) etc. etc.

Later in the code generation, after all normal Harbour functions are
generated. if there are any INLINE structures an #include \"hbapi.h" is
generated followed by a dump of the C code as accumulated in the pCode
buffer, for each function.

The symbols for the INLINE HB_INLINE_0-9|A-Z are marked as HB_FS_STATIC, the
declaration for the INLINE functions as well as the functions themselves are
prefixed with static. So that no conflict will arise between multiple PRGs.

I hope this explains hot it works.

Ron

> Ron,
>
> > I just posted the support for Flex version :-)
>
> Ok, thanks. I just tested it, now I am reviewing the output C
> and trying to understand your idea...
>
> As I see it you do all the magic from the lexer only.
> Do you store somewhere the C code to later on output it ?
>
> I am sure we all really appreciate just a little explanation
> on your side :-)
>
>
> Antonio


From harbour@lists.harbour-project.org  Tue Jan  2 13:54:01 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Tue Jan  2 13:54:01 2001
Subject: [Harbour] inline C codeblocks
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKGEFCDIAA.ron@profit-master.com>
Message-ID: <000201c074eb$c0a131e0$0f2aa8c0@antonio>

Ron,

Many thanks for the explanation. I like very much the concept.

Do you think we could place the C code on an external function,
So we get a better structurated code ? i.e.:

   function Main()

     Test( "hello world" )

   return nil

   c_function Test()
   {
      MessageBox( 0, hb_parc( 1 ), "ok", 0 );
   }


Antonio




From harbour@lists.harbour-project.org  Tue Jan  2 14:00:04 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Jan  2 14:00:04 2001
Subject: [Harbour] inline C codeblocks
In-Reply-To: <000201c074eb$c0a131e0$0f2aa8c0@antonio>
Message-ID: <LOBBKAFMMFGJIKLMEPAKAEFDDIAA.ron@profit-master.com>

Yes, that is the natural next extension, and an easy next step (the
infrastructure is already done) :-)

Let's wait few days, and I'll try...

Ron

> Ron,
>
> Many thanks for the explanation. I like very much the concept.
>
> Do you think we could place the C code on an external function,
> So we get a better structurated code ? i.e.:
>
>    function Main()
>
>      Test( "hello world" )
>
>    return nil
>
>    c_function Test()
>    {
>       MessageBox( 0, hb_parc( 1 ), "ok", 0 );
>    }
>
>
> Antonio


From harbour@lists.harbour-project.org  Tue Jan  2 20:10:03 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Jan  2 20:10:03 2001
Subject: [Harbour] ChangeLog 2000-01-02 17:10 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKAEFDDIAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKGEFEDIAA.ron@profit-master.com>

2000-01-02 17:10 UTC-0800 Ron Pinkas <ron@profit-master.com>

   * source/compiler/genc.c
     * Minor correction.

From harbour@lists.harbour-project.org  Tue Jan  2 23:24:02 2001
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Tue Jan  2 23:24:02 2001
Subject: [Harbour] ChangeLog 2000-01-01 22:40 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKKEEKDIAA.ron@profit-master.com>
References: <001e01c07452$01f2bf00$0100007f@sl.conex.net>
Message-ID: <3A5262E2.11932.1E7799A9@localhost>

On 1 Jan 2001, at 22:59, Ron Pinkas wrote:

> 2000-01-01 22:40 UTC-0800 Ron Pinkas <ron@profit-master.com>
> 
>    * include/hberrors.h
>    * source/compiler/hbgenerr.c
>      + Added: "Unterminated inline block in function: \'%s\'" and "Too many
> inline blocks"
> 
>    * include/hbcomp.h
>    * source/compiler/harbour.c
>      + Added hb_compInlineNew(), hb_compInlineAdd(), and hb_compInlineFind()
> 
>    * source/pp/ppcomp.c
>    * source/compiler/harbour.slx
>    * source/compiler/genc.c
>      + Added support for inline C code blocks.
> 
>    + tests/inline_c.prg
>      + Added new test to demonstrate new inline C support.

Very impressive, Ron, very impressive!

This answers a long time desire of mine (and I'm sure many others) 
for Harbour Project.

Bravo!


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Wed Jan  3 00:54:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Jan  3 00:54:02 2001
Subject: [Harbour] New Build 0.36
In-Reply-To: <3A5262E2.11932.1E7799A9@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKGEFFDIAA.ron@profit-master.com>

Hi All,

I think this might be a good time, for small cleanup and release of new
build.

Ryszard, any chance you can review my posts regarding the Array by Ref
problem? I hope we can resolve this in the next few days.

Alexander, there are still 2 outstanding PP issues:

1. Order of sub optional clauses:

   #COMMAND A [B [C] [D]] <x> => Test(<x>)
   A B C "Ok"
   A B D C "Not Processed"

2. Optional secondary last clause to function:

#TRANSLATE Fun( <x> [,<y>] ) => OtherFun( <x> )
   Fun( "Ok", "optional provided" )
   Fun( "Not Processed" )

Ron


From harbour@lists.harbour-project.org  Wed Jan  3 00:55:03 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Jan  3 00:55:03 2001
Subject: [Harbour] ChangeLog 2000-01-01 22:40 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <3A5262E2.11932.1E7799A9@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKKEFFDIAA.ron@profit-master.com>

Phil,

Thanks for the kind words. My pleasure.

> Very impressive, Ron, very impressive!
> 
> This answers a long time desire of mine (and I'm sure many others) 
> for Harbour Project.
> 
> Bravo!
> 
> 
> -- 
>               Phil Barnett  mailto:midnight@the-oasis.net
>                        WWW  http://www.the-oasis.net/
>                   FTP Site  ftp://ftp.the-oasis.net


From harbour@lists.harbour-project.org  Wed Jan  3 01:08:02 2001
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Wed Jan  3 01:08:02 2001
Subject: [Harbour] New Build 0.36
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKGEFFDIAA.ron@profit-master.com>
References: <3A5262E2.11932.1E7799A9@localhost>
Message-ID: <3A527B5E.20974.1ED73D76@localhost>

On 2 Jan 2001, at 21:54, Ron Pinkas wrote:

> I think this might be a good time, for small cleanup and release of new
> build.

I was waiting on the .CDX support to be fleshed out for a release.


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Wed Jan  3 03:24:02 2001
From: harbour@lists.harbour-project.org (harbour@lists.harbour-project.org)
Date: Wed Jan  3 03:24:02 2001
Subject: [Harbour] New Build 0.36
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKGEFFDIAA.ron@profit-master.com>
References: <3A5262E2.11932.1E7799A9@localhost>
Message-ID: <3A52EF61.5818.1288F8@localhost>

Hi Ron,

I reviewed your last baby ( c inline) and I must say, I like it. Great 
Job.

About the release of a new build, I would like to correct a small 
error with Hidden method this WE. If I find the time <g> I could try 
to work on it before but I'm really 200% busy :-( 

Happy new year to everyone on this list.

On 2 Jan 2001, at 21:54, Ron Pinkas wrote:

> Hi All,
> 
> I think this might be a good time, for small cleanup and release of
> new build.
> 
...

Best regards,

J. Lefebvre <jflefebv@mafact.com>
Mafact SA/NV
Belgium
(See us at http://www.mafact.com)
jflefebv@mafact.com


From harbour@lists.harbour-project.org  Wed Jan  3 05:13:02 2001
From: harbour@lists.harbour-project.org (Harbour)
Date: Wed Jan  3 05:13:02 2001
Subject: [Harbour] test .. sorry
Message-ID: <3A52F85D38E.ECF1HARBOUR@127.0.0.1>

test



From harbour@lists.harbour-project.org  Wed Jan  3 09:32:02 2001
From: harbour@lists.harbour-project.org (Guy Roussin)
Date: Wed Jan  3 09:32:02 2001
Subject: [Harbour] Error when compiling DBU
Message-ID: <3A53376D.AB05234D@teledetection.fr>

Hello,

I try to compile dbu and i get this error, where is the mistake ? 
--
harbour DBUVIEW.PRG /a /w /m /n /dCLIP52E /dBLINKER /ES1
Harbour Compiler 0.35j (Build 35) (2000.11.30) (SimpLex)
Copyright 1999-2000, http://www.harbour-project.org
Compiling 'DBUVIEW.PRG'...
DBUVIEW.PRG(1698) Error E0030  Syntax error: "parse error at '&A_TEMP'"
DBUVIEW.PRG(1702) Error E0030  Syntax error: "parse error at 'ELSE'"
DBUVIEW.PRG(1712) Error E0030  Syntax error: "parse error at 'ENDIF'"
DBUVIEW.PRG(1715) Error E0030  Syntax error: "parse error at 'ENDIF'"
DBUVIEW.PRG(1724) Error E0030  Syntax error: "parse error at '&A_TEMP'"
DBUVIEW.PRG(1727) Error E0030  Syntax error: "parse error at 'ELSE'"
DBUVIEW.PRG(1737) Error E0030  Syntax error: "parse error at 'ENDIF'"
DBUVIEW.PRG(1741) Error E0030  Syntax error: "parse error at 'ENDIF'"
DBUVIEW.PRG(1753) Error E0030  Syntax error: "parse error at '&A_TEMP'"
DBUVIEW.PRG(1756) Error E0030  Syntax error: "parse error at 'ELSE'"
DBUVIEW.PRG(1766) Error E0030  Syntax error: "parse error at 'ENDIF'"
DBUVIEW.PRG(1770) Error E0030  Syntax error: "parse error at 'ENDIF'"
DBUVIEW.PRG(1785) Error E0030  Syntax error: "parse error at 'ENDCASE'"
13 errors

No code generated

-- 

Happy new year !
Guy Roussin

From harbour@lists.harbour-project.org  Wed Jan  3 11:10:03 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Jan  3 11:10:03 2001
Subject: [Harbour] Error when compiling DBU
In-Reply-To: <3A53376D.AB05234D@teledetection.fr>
Message-ID: <LOBBKAFMMFGJIKLMEPAKGEFHDIAA.ron@profit-master.com>

Guy,

I am compiling dbuview without a problem, here, using 0.35j both (SimpLex)
and (Flex).

Ron

> Hello,
>
> I try to compile dbu and i get this error, where is the mistake ?
> --
> harbour DBUVIEW.PRG /a /w /m /n /dCLIP52E /dBLINKER /ES1
> Harbour Compiler 0.35j (Build 35) (2000.11.30) (SimpLex)
> Copyright 1999-2000, http://www.harbour-project.org
> Compiling 'DBUVIEW.PRG'...
> DBUVIEW.PRG(1698) Error E0030  Syntax error: "parse error at '&A_TEMP'"
> DBUVIEW.PRG(1702) Error E0030  Syntax error: "parse error at 'ELSE'"
> DBUVIEW.PRG(1712) Error E0030  Syntax error: "parse error at 'ENDIF'"
> DBUVIEW.PRG(1715) Error E0030  Syntax error: "parse error at 'ENDIF'"
> DBUVIEW.PRG(1724) Error E0030  Syntax error: "parse error at '&A_TEMP'"
> DBUVIEW.PRG(1727) Error E0030  Syntax error: "parse error at 'ELSE'"
> DBUVIEW.PRG(1737) Error E0030  Syntax error: "parse error at 'ENDIF'"
> DBUVIEW.PRG(1741) Error E0030  Syntax error: "parse error at 'ENDIF'"
> DBUVIEW.PRG(1753) Error E0030  Syntax error: "parse error at '&A_TEMP'"
> DBUVIEW.PRG(1756) Error E0030  Syntax error: "parse error at 'ELSE'"
> DBUVIEW.PRG(1766) Error E0030  Syntax error: "parse error at 'ENDIF'"
> DBUVIEW.PRG(1770) Error E0030  Syntax error: "parse error at 'ENDIF'"
> DBUVIEW.PRG(1785) Error E0030  Syntax error: "parse error at 'ENDCASE'"
> 13 errors
>
> No code generated
>
> --
>
> Happy new year !
> Guy Roussin


From harbour@lists.harbour-project.org  Wed Jan  3 11:20:03 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Jan  3 11:20:03 2001
Subject: [Harbour] Error when compiling DBU
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKGEFHDIAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOEFHDIAA.ron@profit-master.com>

Guy,

BTW, last instance of &A_TEMP in dbuview.prg is on line 1169!!! Is it
possible you have a modified version?

Ron

> Guy,
>
> I am compiling dbuview without a problem, here, using 0.35j both (SimpLex)
> and (Flex).
>
> Ron
>
> > Hello,
> >
> > I try to compile dbu and i get this error, where is the mistake ?
> > --
> > harbour DBUVIEW.PRG /a /w /m /n /dCLIP52E /dBLINKER /ES1
> > Harbour Compiler 0.35j (Build 35) (2000.11.30) (SimpLex)
> > Copyright 1999-2000, http://www.harbour-project.org
> > Compiling 'DBUVIEW.PRG'...
> > DBUVIEW.PRG(1698) Error E0030  Syntax error: "parse error at '&A_TEMP'"
> > DBUVIEW.PRG(1702) Error E0030  Syntax error: "parse error at 'ELSE'"
> > DBUVIEW.PRG(1712) Error E0030  Syntax error: "parse error at 'ENDIF'"
> > DBUVIEW.PRG(1715) Error E0030  Syntax error: "parse error at 'ENDIF'"
> > DBUVIEW.PRG(1724) Error E0030  Syntax error: "parse error at '&A_TEMP'"
> > DBUVIEW.PRG(1727) Error E0030  Syntax error: "parse error at 'ELSE'"
> > DBUVIEW.PRG(1737) Error E0030  Syntax error: "parse error at 'ENDIF'"
> > DBUVIEW.PRG(1741) Error E0030  Syntax error: "parse error at 'ENDIF'"
> > DBUVIEW.PRG(1753) Error E0030  Syntax error: "parse error at '&A_TEMP'"
> > DBUVIEW.PRG(1756) Error E0030  Syntax error: "parse error at 'ELSE'"
> > DBUVIEW.PRG(1766) Error E0030  Syntax error: "parse error at 'ENDIF'"
> > DBUVIEW.PRG(1770) Error E0030  Syntax error: "parse error at 'ENDIF'"
> > DBUVIEW.PRG(1785) Error E0030  Syntax error: "parse error at 'ENDCASE'"
> > 13 errors
> >
> > No code generated
> >
> > --
> >
> > Happy new year !
> > Guy Roussin


From harbour@lists.harbour-project.org  Wed Jan  3 11:56:02 2001
From: harbour@lists.harbour-project.org (Guy Roussin)
Date: Wed Jan  3 11:56:02 2001
Subject: [Harbour] Error when compiling DBU
References: <LOBBKAFMMFGJIKLMEPAKOEFHDIAA.ron@profit-master.com>
Message-ID: <3A535932.1BDE5871@teledetection.fr>

Ron,

You are right this is a modified version, but i suspect a pp problem
the line 1698 is :
 &a_temp.[nSub]:=SubStr(M->filename,1,RAt(".", M->filename)-1)+OrdBagExt()
and in the ppo :
 &a_temp."nSub":=SubStr(M->filename,1,RAt(".",M->filename)-1)+OrdBagExt()

Thanks,
Guy Roussin

Ron Pinkas wrote:
> 
> Guy,
> 
> BTW, last instance of &A_TEMP in dbuview.prg is on line 1169!!! Is it
> possible you have a modified version?
> 
> Ron
> 
> > Guy,
> >
> > I am compiling dbuview without a problem, here, using 0.35j both (SimpLex)
> > and (Flex).
> >
> > Ron
> >
> > > Hello,
> > >
> > > I try to compile dbu and i get this error, where is the mistake ?
> > > --
> > > harbour DBUVIEW.PRG /a /w /m /n /dCLIP52E /dBLINKER /ES1
> > > Harbour Compiler 0.35j (Build 35) (2000.11.30) (SimpLex)
> > > Copyright 1999-2000, http://www.harbour-project.org
> > > Compiling 'DBUVIEW.PRG'...
> > > DBUVIEW.PRG(1698) Error E0030  Syntax error: "parse error at '&A_TEMP'"
> > > DBUVIEW.PRG(1702) Error E0030  Syntax error: "parse error at 'ELSE'"
> > > DBUVIEW.PRG(1712) Error E0030  Syntax error: "parse error at 'ENDIF'"
> > > DBUVIEW.PRG(1715) Error E0030  Syntax error: "parse error at 'ENDIF'"
> > > DBUVIEW.PRG(1724) Error E0030  Syntax error: "parse error at '&A_TEMP'"
> > > DBUVIEW.PRG(1727) Error E0030  Syntax error: "parse error at 'ELSE'"
> > > DBUVIEW.PRG(1737) Error E0030  Syntax error: "parse error at 'ENDIF'"
> > > DBUVIEW.PRG(1741) Error E0030  Syntax error: "parse error at 'ENDIF'"
> > > DBUVIEW.PRG(1753) Error E0030  Syntax error: "parse error at '&A_TEMP'"
> > > DBUVIEW.PRG(1756) Error E0030  Syntax error: "parse error at 'ELSE'"
> > > DBUVIEW.PRG(1766) Error E0030  Syntax error: "parse error at 'ENDIF'"
> > > DBUVIEW.PRG(1770) Error E0030  Syntax error: "parse error at 'ENDIF'"
> > > DBUVIEW.PRG(1785) Error E0030  Syntax error: "parse error at 'ENDCASE'"
> > > 13 errors
> > >
> > > No code generated
> > >
> > > --
> > >
> > > Happy new year !
> > > Guy Roussin
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

From harbour@lists.harbour-project.org  Wed Jan  3 12:36:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Jan  3 12:36:02 2001
Subject: [Harbour] ChangeLog 2001-01-03 09:35 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <3A535932.1BDE5871@teledetection.fr>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOEFIDIAA.ron@profit-master.com>

2001-01-03 09:35 UTC-0800 Ron Pinkas <ron@profit-master.com>
   * contrib/dot/pp.prg
   * source/pp/ppcore.c
     ! Fixed Array Index support after '.' (Macro Terminator).

From harbour@lists.harbour-project.org  Wed Jan  3 12:37:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Jan  3 12:37:02 2001
Subject: [Harbour] Error when compiling DBU
In-Reply-To: <3A535932.1BDE5871@teledetection.fr>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEFJDIAA.ron@profit-master.com>

Fixed.

> Ron,
>
> You are right this is a modified version, but i suspect a pp problem
> the line 1698 is :
>  &a_temp.[nSub]:=SubStr(M->filename,1,RAt(".", M->filename)-1)+OrdBagExt()
> and in the ppo :
>  &a_temp."nSub":=SubStr(M->filename,1,RAt(".",M->filename)-1)+OrdBagExt()
>
> Thanks,
> Guy Roussin


From harbour@lists.harbour-project.org  Wed Jan  3 13:01:02 2001
From: harbour@lists.harbour-project.org (Torsten Steuernagel)
Date: Wed Jan  3 13:01:02 2001
Subject: [Harbour] ChangeLog 2000-01-01 22:40 UTC-0800 Ron Pinkas
 <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKKEEMDIAA.ron@profit-master.com>
Message-ID: <3A5368BF.1A217384@T-Online.de>

Hello Ron,

so I guess that will also work fine within a METHOD since a method is nothing
else than an ordinary function ? I think this will ease the writing of wrapper
classes for some C++ stuff a lot.

BFN,

Torsten

Ron Pinkas schrieb:

> Patrick,
>
> > Is this ok?
>
> No. The inline C code is not callable by means of inline(), it is
> automatically inserted into its parent PRG function.
>
> To be 100% accurate you could call it (within the same PRG) by means of
> HB_INLINE_N() where N is 0-9 and A-Z based on its sequential ID (look at
> tests/inline_c.c). But this is not a recommended practice. Instead you could
> easily call the PRG FUNCTION that includes the C code as a wrapper.
>
> Example:
>
> // ---------------------- //
> Function Main()
>
>    LOCAL cVar := "Hello"
>
>    cVar := My_Inline_C_Wrapper( cVar )
>
> RETURN NIL
>
> My_Inline_C_Wrapper( cParam )
>
>    HB_INLINE( )
>    {
>       /* My C Code */
>    }
>
> // Or:
>
>    HB_INLINE( cParam )
>    {
>       /* My C Code */
>    }
>
> // Or:
>
>    HB_INLINE( @cParam )
>    {
>       /* My C Code */
>    }
>
> // Or:
>
>    cParam := HB_INLINE( cParam )
>    {
>       /* My C Code */
>    }
>
> //Etc. Etc.
>
> RETURN cParam
> // ---------------------- //
>
> In summary the syntax is:
>
>  [ lValue := ] HB_INLINE( [ [@]Pram1 [, [@]ParamN ] ]
>  {
>    ... /* C Code */
>  }
>
> The Open Bracelet '{' must be on a subsequent line *below* the
> HB_INLINE(...) and can be preceded by white space. The Close Bracelet '}'
> must be on a subsequent line, *below* the last line of C Code, and can be
> preceded by white space. Any number of bracelets may appear in between, as
> allowed by the C language
>
> Ron
>
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org


From harbour@lists.harbour-project.org  Wed Jan  3 13:12:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Jan  3 13:12:02 2001
Subject: [Harbour] ChangeLog 2000-01-01 22:40 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <3A5368BF.1A217384@T-Online.de>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEFKDIAA.ron@profit-master.com>

Torsten,

Yes, you can use it anywhere.

Ron
 
> Hello Ron,
> 
> so I guess that will also work fine within a METHOD since a 
> method is nothing
> else than an ordinary function ? I think this will ease the 
> writing of wrapper
> classes for some C++ stuff a lot.
> 
> BFN,
> 
> Torsten


From harbour@lists.harbour-project.org  Wed Jan  3 15:51:02 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Wed Jan  3 15:51:02 2001
Subject: [Harbour] Bugs
Message-ID: <002901c075c6$dc6ed7c0$0100007f@sl.conex.net>

Ron 

Has you give an look on the bug that I reported on my last changelog


Regards From Brazil

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Wed Jan  3 16:07:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Jan  3 16:07:02 2001
Subject: [Harbour] Bugs
In-Reply-To: <002901c075c6$dc6ed7c0$0100007f@sl.conex.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKAEFNDIAA.ron@profit-master.com>

Luiz,

No, it was hard to understand, what was the problem. You should give more
specific details. It is very difficult to review it this way.

Can you please isolate the problem, and submit just a small sample that
demonstrate the problem?

Did you check which line of code triggers the Error?

Ron

> Ron
>
> Has you give an look on the bug that I reported on my last changelog
>
>
> Regards From Brazil
>
> Luiz Rafael Culik


From harbour@lists.harbour-project.org  Wed Jan  3 16:22:02 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Wed Jan  3 16:22:02 2001
Subject: [Harbour] Bugs
References: <LOBBKAFMMFGJIKLMEPAKAEFNDIAA.ron@profit-master.com>
Message-ID: <003501c075cb$38f89540$0100007f@sl.conex.net>

Ron
> Luiz,
>
> No, it was hard to understand, what was the problem. You should give more
> specific details. It is very difficult to review it this way.
That why i send you the pdflib.lib library. I´ve tried also by recreating
all binaries and libraries.
The program allways fail on the doc/en/misc.txt . and give me the same
error. The strange, since the PDF generation file is an two pass , on the
first one doc/en/misc.txt is proprery processed, the bug occurrs on the
second parse of the generation process
> Can you please isolate the problem, and submit just a small sample that
> demonstrate the problem?
This is difficult.

> Did you check which line of code triggers the Error?

Sure, I´ve tried to also remove the TRIM() function call. is removed i got
errors like "Error recovery failure"

Regards

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Wed Jan  3 19:19:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Jan  3 19:19:02 2001
Subject: [Harbour] Bugs
In-Reply-To: <003501c075cb$38f89540$0100007f@sl.conex.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKKEFODIAA.ron@profit-master.com>

Luiz,

When trying:

hbdoc /pdf harbour.lnk genhtm.rsp

I get: "Link file Not Found: harbour.lnk"

When I use hbdoc /pdf genhtm.lnk genhtm.rsp I get: "Execute ASSEMBL.BAT to
compile and link Guides".

Ron

> Ryszard,Ron
>
> Attached is the library to create hbdoc with pdf generation enable.
>
> Save to you lib\b32 directory.
> also use make -fhb_slex.bc -DPDF or make -fmakefile.bc -DPDF
>
> the go to the /doc dir and use.
> hbdoc /pdf harbour.lnk genhtm.rsp
>
>
> Please note i´m also get the same error with an clean build
>
> Regards From Brazil
>
> Luiz Rafael Culik


From harbour@lists.harbour-project.org  Wed Jan  3 19:30:04 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Jan  3 19:30:04 2001
Subject: [Harbour] Bugs
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKKEFODIAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKAEFPDIAA.ron@profit-master.com>

Luiz,

I don't get any error message. The program creates a pdf directory, but it
is empty. Sorry, but I don't know what else to look at...

Ron

> Luiz,
>
> When trying:
>
> hbdoc /pdf harbour.lnk genhtm.rsp
>
> I get: "Link file Not Found: harbour.lnk"
>
> When I use hbdoc /pdf genhtm.lnk genhtm.rsp I get: "Execute ASSEMBL.BAT to
> compile and link Guides".
>
> Ron
>
> > Ryszard,Ron
> >
> > Attached is the library to create hbdoc with pdf generation enable.
> >
> > Save to you lib\b32 directory.
> > also use make -fhb_slex.bc -DPDF or make -fmakefile.bc -DPDF
> >
> > the go to the /doc dir and use.
> > hbdoc /pdf harbour.lnk genhtm.rsp
> >
> >
> > Please note i´m also get the same error with an clean build
> >
> > Regards From Brazil
> >
> > Luiz Rafael Culik


From harbour@lists.harbour-project.org  Wed Jan  3 19:34:02 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Wed Jan  3 19:34:02 2001
Subject: [Harbour] Bugs
References: <LOBBKAFMMFGJIKLMEPAKKEFODIAA.ron@profit-master.com>
Message-ID: <002e01c075e6$0bb1bf60$0100007f@sl.conex.net>

This is a multi-part message in MIME format.

------=_NextPart_000_0027_01C075D5.067CCD20
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit

Ron .
>
> When trying:
>
> hbdoc /pdf harbour.lnk genhtm.rsp
>
> I get: "Link file Not Found: harbour.lnk"
I sending the files to you . harbour.lnk genhtm.lnk and genhtm.rsp.

also. has you recompiled hbdoc and linked with the librart that i send. (try
deleting  hbdoc.c and hbdoc.obj)

Regards

Luiz Rafael Culik



------=_NextPart_000_0027_01C075D5.067CCD20
Content-Type: application/octet-stream;
	name="genhtm.lnk"
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment;
	filename="genhtm.lnk"

!name: Harbour Version %HB_VERSION% (c) reference Guide
!credits: Harbour Version %HB_VERSION% (c) http://www.harbour-project.org
        %HB_BLDDATE% build By Luiz Rafael Culik
        Functions Documented by:
        Chen Kedem, Luiz Rafael Culik,Brian Hays

!menu: Reference
Functions         funcam.ngo
Command           comm.ngo
Tools             Tools.ngo
OOP Commands      oopcom.ngo
!menu: Harbour
Information       informat.ngo
Runtime Error     Error.ngo

------=_NextPart_000_0027_01C075D5.067CCD20
Content-Type: application/octet-stream;
	name="harbour.lnk"
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment;
	filename="harbour.lnk"

!name: Harbour Version 0.35 (c) reference Guide
!credits: Harbour Version 0.35 (c) http://www.harbour-project.org
        10/27/2000 build By Luiz Rafael Culik
        Functions Documented by:
        Chen Kedem, Luiz Rafael Culik,Brian Hays

!menu: Reference
Functions         funcam.ngo
Command           comm.ngo
Tools             Tools.ngo
OOP Commands      oopcom.ngo
!menu: Harbour
Information       informat.ngo
Runtime Error     Error.ngo

------=_NextPart_000_0027_01C075D5.067CCD20
Content-Type: application/octet-stream;
	name="genhtm.rsp"
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment;
	filename="genhtm.rsp"

en\misc.txt
en\array.txt
en\binnum.txt
en\browse.txt
en\command.txt
en\datetime.txt
en\dbstrux.txt
en\diskspac.txt
en\dir.txt
en\error.txt
en\file.txt
en\hvm.txt
en\input.txt
en\license.txt
en\math.txt
en\memo.txt
en\menu.txt
en\nation.txt
en\objfunc.txt
en\rdd.txt
en\rdddb.txt
en\rddord.txt
en\rddmisc.txt
en\readme.txt
en\set.txt
en\string.txt
en\tclass.txt
en\terminal.txt
en\tgetlist.txt
en\tlabel.txt
en\treport.txt
en\var.txt
en\subcodes.txt
en\harbext.txt
en\gnulice.txt
en\compiler.txt
en\lang.txt
en\setmode.txt
en\eval.txt
en\sayget.txt
en\strotype.txt
en\garbage.txt
en\idle.txt
en\cmdline.txt
en\tbrowse.txt

------=_NextPart_000_0027_01C075D5.067CCD20--


From harbour@lists.harbour-project.org  Wed Jan  3 20:45:04 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Jan  3 20:45:04 2001
Subject: [Harbour] Bugs
In-Reply-To: <002e01c075e6$0bb1bf60$0100007f@sl.conex.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKIEFPDIAA.ron@profit-master.com>

Luiz,

The problem is with processing of en/misc.txt. If you modify this file by
erasing from Vesion() to EOF, it will process correctly!!!

Luiz, please note, that no Harbour knowledge was necessary to find this.
Just looking at the screen, noticing when the error happens, then trying
this file in itself, and again noticing which function was processed, and
then removing that function, and the next one, until the file processed.

If you did this it would make it much easier to find the problem. Now, can
you please process just en/misc.txt and trace your logic to see which
processing happens *last* just before the error. I believe that we have some
buffer overrun. Once you find it, we can isolate just the segment causing
the error, and easily fix it.

Ron

> Ron .
> >
> > When trying:
> >
> > hbdoc /pdf harbour.lnk genhtm.rsp
> >
> > I get: "Link file Not Found: harbour.lnk"
> I sending the files to you . harbour.lnk genhtm.lnk and genhtm.rsp.
>
> also. has you recompiled hbdoc and linked with the librart that i
> send. (try
> deleting  hbdoc.c and hbdoc.obj)
>
> Regards
>
> Luiz Rafael Culik
>
>
>


From harbour@lists.harbour-project.org  Wed Jan  3 21:05:03 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Jan  3 21:05:03 2001
Subject: [Harbour] Bugs
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKIEFPDIAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOEFPDIAA.ron@profit-master.com>

Luiz,

If you just change the $EXAMPLES$ line: 59 in misc.txt from ?
QOUT(VERSION()) to just ? VERSION() this problem will go away! Instead
you'll get an "Error BASE/1102  Argument error: UPPER" called from
ProcessPDF(274) which appears to be real bug of processing See Also.

So now please try to find what happens when you process that $EXAMPLES$
line.

BTW, why "? QOUT(...) on all examples??? Just ? *or* QOut() should be used,
no?

Ron

> Luiz,
>
> The problem is with processing of en/misc.txt. If you modify this file by
> erasing from Vesion() to EOF, it will process correctly!!!
>
> Luiz, please note, that no Harbour knowledge was necessary to find this.
> Just looking at the screen, noticing when the error happens, then trying
> this file in itself, and again noticing which function was processed, and
> then removing that function, and the next one, until the file processed.
>
> If you did this it would make it much easier to find the problem. Now, can
> you please process just en/misc.txt and trace your logic to see which
> processing happens *last* just before the error. I believe that
> we have some
> buffer overrun. Once you find it, we can isolate just the segment causing
> the error, and easily fix it.
>
> Ron
>
> > Ron .
> > >
> > > When trying:
> > >
> > > hbdoc /pdf harbour.lnk genhtm.rsp
> > >
> > > I get: "Link file Not Found: harbour.lnk"
> > I sending the files to you . harbour.lnk genhtm.lnk and genhtm.rsp.
> >
> > also. has you recompiled hbdoc and linked with the librart that i
> > send. (try
> > deleting  hbdoc.c and hbdoc.obj)
> >
> > Regards
> >
> > Luiz Rafael Culik
> >
> >
> >
>
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Wed Jan  3 23:48:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Jan  3 23:48:02 2001
Subject: [Harbour] Bugs
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKOEFPDIAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKKEGADIAA.ron@profit-master.com>

Luiz,

Where is source of: HB_PDFBOOKMARK()?

There are many, many things I don't like in genpdf1.prg, i.e. why don't you
check if cBuffer needs to be processed like:

   IF Len( cBuffer ) < nCommentLen
      LOOP
   ENDIF

Or at least:

         IF Len( cBuffer ) < nCommentLen
            cBuffer := ""
         Else
            if !lmemory
               cBuffer := TRIM( SUBSTR( cBuffer, nCommentLen ) )
            else
               cBuffer :=  SUBSTR( cBuffer, nCommentLen )
            endif
            cBuffer := STRTRAN( cBuffer, CHR( 10 ), "" )
         Endif

This result in much faster processing and seems to circumvent the GPF, and
reveals what appear to be a real bug with this line:

   HB_PDFBOOKMARK(  cCategory,cFuncName,{|x|
UPPER(x[1])==UPPER(cCategory )} )

When processing line 18 of misc.txt:

$ONELINER$

Now, commenting the HB_PDFBOOKMARK() function call, completely fixes the
problem!!!

BTW, it is much slower to do:

IF ! X
   ...
ELSE
   ...
ENDIF

Instead you should do:

IF X
   ...
ELSE
   ...
ENDIF

It saves a completely unnecessary processing of .NOT.

Ron


From harbour@lists.harbour-project.org  Thu Jan  4 00:21:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan  4 00:21:02 2001
Subject: [Harbour] Bugs
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKKEGADIAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKIEGBDIAA.ron@profit-master.com>

Luiz,

In conclusion the problem appears to be inside HB_PDFBOOKMARK(). Just
comment this function call and the problem goes away.

I don't have its source, so I can't debug any further!

I think you could have found this yourself.

BTW, why pass the block to HB_PDFBOOKMARK(), if the block could have easily
be created inside HB_PDFBOOKMARK() (cCtegory is passed as parameter)?

I think this code can/should be seriously cleaned and optimized.

Ron


From harbour@lists.harbour-project.org  Thu Jan  4 02:32:02 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Thu Jan  4 02:32:02 2001
Subject: [Harbour] Bugs
References: <LOBBKAFMMFGJIKLMEPAKAEFPDIAA.ron@profit-master.com>
Message-ID: <000501c07620$6c904880$0100007f@sl.conex.net>

Ron

Are you calling hbdoc from the /doc Dir. if hbdoc.prg is nor compiled
with -DPDF it willl generate an empty pdf file

Regards

Luiz Rafael Culik



From harbour@lists.harbour-project.org  Thu Jan  4 02:37:02 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Thu Jan  4 02:37:02 2001
Subject: [Harbour] Bugs
References: <LOBBKAFMMFGJIKLMEPAKIEGBDIAA.ron@profit-master.com>
Message-ID: <001301c07621$09bdb5c0$0100007f@sl.conex.net>

Ron

See Contrib/pdflib/pdfhbdoc.c for the source of hb_pdfbookmark()

Regards

Luiz Rafael Culik



From harbour@lists.harbour-project.org  Thu Jan  4 06:06:02 2001
From: harbour@lists.harbour-project.org (Guy Roussin)
Date: Thu Jan  4 06:06:02 2001
Subject: [Harbour] behavior of the BOX command
Message-ID: <3A545879.D3CB0BE9@teledetection.fr>

Hello,
I notice a difference between clipper and harbour with this line :
@ 1,60,10,80 BOX B_SINGLE
harbour display nothing but clipper display a box without the right side 
(because 80 > 79). 
Note: I use bcc55 and gtwin 
-- 
Guy Roussin

From harbour@lists.harbour-project.org  Thu Jan  4 23:42:02 2001
From: harbour@lists.harbour-project.org (Shashkov)
Date: Thu Jan  4 23:42:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <E14D8K2-0006VE-00@tts.orel.ru>
References: <E14D8K2-0006VE-00@tts.orel.ru>
Message-ID: <3120030273.20010104233133@orel.ru>

Hello!
About a month ago I came across this project and I became very much
interested in it. But unfortunately, when I started considering this
project in detail, I found many errors and I understood that there is
still much to be carried out.
At first I faced the errors in the tests from \test: memfile.prg and
memvar.prg. Then I tried to link util known from Clipper-DBU. And
again I found several errors. More than that, it is next to impossible
to work with the inner debugger. And now RDD(DBFCDX) is not yet fully
realized. I wonder how many surprises are awaiting me as I'm going
further?
I used Watcom C++ 11.0 for DOS.
I will give some of the errors which I have found below with my
comments. I have also realized the functions ORDSETFOCUS() and
ORDKEY() for DBFCDX. I will send the file dbfcdx1.c to some members of
the mail-list in order not to overload this message. I haven't changed
the number and the date of the version in the header of the file.



Module \source\vm\memvars.c

void hb_memvarsIsMemvarRef( void )
{
   HB_TRACE(HB_TR_DEBUG, ("hb_memvarsIsMemvarRef()"));

   if( s_globalTable )
   {
//      ULONG ulCnt = s_globalLastFree;
// s_globalLastFree points to element array s_globalTable, which has
// never been initialized.
      ULONG ulCnt = s_globalLastFree - 1;

      while( ulCnt )
      {
 .......



void hb_memvarSetPrivatesBase( ULONG ulBase )
{
   HB_HANDLE hVar, hOldValue;

   HB_TRACE(HB_TR_DEBUG, ("hb_memvarSetPrivatesBase(%lu)", ulBase));

   while( s_privateStackCnt > s_privateStackBase )
   {
      --s_privateStackCnt;
      hVar = s_privateStack[ s_privateStackCnt ]->hMemvar;
//      hOldValue = s_globalTable[ hVar ].hPrevMemvar;
//      hb_memvarValueDecRef( hVar );
//      /*
//      * Restore previous value for variables that were overridden
//      */
//      s_privateStack[ s_privateStackCnt ]->hMemvar = hOldValue;
// The element s_globalTable[ 0 ] is reserved and that is why it is
// necessary to add the following conditions:
      if( hVar )
      {
         hOldValue = s_globalTable[ hVar ].hPrevMemvar;
         hb_memvarValueDecRef( hVar );
         /*
         * Restore previous value for variables that were overridden
         */
         s_privateStack[ s_privateStackCnt ]->hMemvar = hOldValue;
      }
   }
   s_privateStackBase = ulBase;
}


See my comments to the following function given in the right-hand
column. This error has been corrected in 1.27, but I think that it was
not done properly enough.
HB_HANDLE hb_memvarValueNew( HB_ITEM_PTR pSource, BOOL bTrueMemvar )
{
   HB_VALUE_PTR pValue;
   HB_HANDLE hValue;   /* handle 0 is reserved */
                       /* = 1 removed, since it's initialized in all branches. Caused a warning with Borland C++ */

   HB_TRACE(HB_TR_DEBUG, ("hb_memvarValueNew(%p, %d)", pSource, (int) bTrueMemvar));

   if( s_globalFreeCnt )
   {
      /* There are holes in the table
         * Get a first available hole
         */
      hValue = s_globalFirstFree;
      --s_globalFreeCnt;

      /* Now find the next hole
         */
      if( s_globalFreeCnt )
      {
         ++s_globalFirstFree;
         while( s_globalTable[ s_globalFirstFree ].counter )
            ++s_globalFirstFree;
      }
      else
         /* No more holes
            */
         s_globalFirstFree = s_globalLastFree;

      pValue = s_globalTable + hValue;        // A new added line
   }
   else
   {
      /* Allocate the value from the end of table
         */
      if( s_globalFirstFree < s_globalTableSize )
      {
         hValue = s_globalFirstFree;
         s_globalFirstFree = ++s_globalLastFree;
      }
      else
      {
         /* No more free values in the table - expand the table
            */
         hValue = s_globalTableSize;
         s_globalFirstFree = s_globalLastFree = s_globalTableSize + 1;
         s_globalTableSize += TABLE_EXPANDHB_VALUE;
         s_globalTable = ( HB_VALUE_PTR ) hb_xrealloc( s_globalTable, sizeof( HB_VALUE ) * s_globalTableSize );
      }

      pValue = s_globalTable + hValue;        // A new added line
      pValue->item.type = HB_IT_NIL;          // A new added line

   }

//   pValue = s_globalTable + hValue;         // Removed line

   pValue->counter = 1;

//   pValue->item.type = HB_IT_NIL;           // This is line was
                                              // added at 1.27
                                              // 2000/11/29, but this
                                              // does not prevent the
                                              // loss of the point of
                                              // the allocated memory
                                              // when s_globalFreeCnt
                                              // does not equal to 0,
                                              // that is, pValue is
                                              // already an
                                              // initialized element.
   if( pSource )
   {
      if( bTrueMemvar )
         hb_itemCopy( &pValue->item, pSource );
      else
         memcpy( &pValue->item, pSource, sizeof( HB_ITEM ) );
   }
   else
//      pValue->item.type = HB_IT_NIL;        // Removed line
      hb_itemClear( &pValue->item );          // This line goes
                                              // instead of the
                                              // previous one.

   if( bTrueMemvar )
       pValue->hPrevMemvar = 0;
   else
       pValue->hPrevMemvar = ( HB_HANDLE )-1;    /* detached variable */

   HB_TRACE(HB_TR_INFO, ("hb_memvarValueNew: memvar item created with handle %i", hValue));

   return hValue;
}


Module \source\vm\dynsym.c
Let us consider the following situation:
in a module private variable is defined and named "not_empty", and in
another module there will be a function named in the same way. In the
structure SYMBOL for private variable pFunPtr == NULL. Let us suppose
that while making the table of dynsym, SYMBOL for variable will be
used in the first turn, then the structure DYNSYM for name "not_empty"
will contain the pointer to the SYMBOL for the variable. By processing
SYMBOL for function, the pFunPtr in the structure DYNSYM is given
correct value, but pDynSym->pSymbol remains the same. Then, attempting
to call this function out of the macroexpression, an error arise:
BASE/1001 Undefined function .
Since it depends on the ordering of modules by linking, I give
the SYMBOL which has the correct pFunPtr to pDynSym->pSymbol.

PHB_DYNS hb_dynsymNew( PHB_SYMB pSymbol )    /* creates a new dynamic symbol */
{
   PHB_DYNS pDynSym;

   HB_TRACE(HB_TR_DEBUG, ("hb_dynsymNew(%p)", pSymbol));

   pDynSym = hb_dynsymFind( pSymbol->szName ); /* Find position */
   if( pDynSym )            /* If name exists */
   {
      if( ! ( pSymbol->cScope & ( HB_FS_STATIC | HB_FS_INIT | HB_FS_EXIT ) ) ) /* only for HB_FS_PUBLIC */
      {
         if( ( ! pDynSym->pFunPtr ) && pSymbol->pFunPtr ) /* The DynSym existed */
            pDynSym->pFunPtr = pSymbol->pFunPtr;  /* but had no function ptr assigned */


            // New added line !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
            pDynSym->pSymbol = pSymbol;
            // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
      }
      pSymbol->pDynSym = pDynSym;    /* place a pointer to DynSym */
      return pDynSym;                /* Return pointer to DynSym */
   }
..............


Module \source\vm\macro.c
Function hb_xrealloc() may return another pointer than the argument
and that is why the expression ulCharsLeft = ulResStrLen - ( pHead - szResult )
is incorrect, because  pHead contains the pointer related to the
initial meaning of szRezult !!!!!!

char * hb_macroTextSubst( char * szString, ULONG *pulStringLen )
{
   char * szResult;
   ULONG ulResStrLen;
   ULONG ulResBufLen;
   ULONG ulCharsLeft;
   char * pHead;
   char * pTail;

   HB_TRACE(HB_TR_DEBUG, ("hb_macroTextSubst(%s, %li)", szString, *pulStringLen));

   pHead = (char *)memchr( (void *)szString, '&', *pulStringLen );
   if( pHead == NULL )
      return szString;  /* no more processing is required */

   /* initial length of the string and the result buffer (it can contain null bytes) */
   ulResBufLen = ulResStrLen = *pulStringLen;
   /* initial buffer for return value */
   szResult = (char *) hb_xgrab( ulResBufLen + 1 );

   /* copy the input string with trailing zero byte
    */
   memcpy( szResult, szString, ulResStrLen + 1 );
   /* switch the pointer so it will point into the result buffer
    */
   pHead = szResult + ( pHead - szString );

   do
   {
      ULONG ulPosFromStart;                   // New added line
      
      /* store the position where '&' was found so we can restart scanning
       * from this point after macro expansion
       */
      pTail = pHead;

      ulPosFromStart = pHead - szResult;      // New added line
      
      /* check if the next character can start a valid identifier
      * (only _a-zA-Z are allowed)
      */
      ++pHead;    /* skip '&' character */
      if( *pHead == '_' || (*pHead >= 'A' && *pHead <= 'Z') || (*pHead >= 'a' && *pHead <= 'z') )
      {
         /* extract a variable name */
         /* NOTE: the extracted name can be longer then supported maximal
          * length of identifiers (HB_SYMBOL_NAME_LEN) - only the max allowed
          * are used for name lookup however the whole string is replaced
          */
         ULONG ulNameLen = 0;
         char * pName = pHead;

         while( *pHead && (*pHead == '_' || (*pHead >= 'A' && *pHead <= 'Z') || (*pHead >= 'a' && *pHead <= 'z') || (*pHead >= '0' && *pHead <= '9')) )
         {
            ++pHead;
            ++ulNameLen;
         }
         /* pHead points now at the character that terminated a variable name */

         /* NOTE: '_' is invalid variable name
          */
         if( ! ( *pName == '_' && ulNameLen == 1 ) )
         {
            /* this is not the "&_" string */
            char * szValPtr;
            ULONG ulValLen;

            /* Get a pointer to the string value stored in this variable
             * or NULL if variable doesn't exist or doesn't contain a string
             * value.
             * NOTE: This doesn't create a copy of the value then it
             * shouldn't be released here.
             */
            ulValLen = ulNameLen;   /* the length of name */
            szValPtr = hb_memvarGetStrValuePtr( pName, &ulValLen );
            if( szValPtr )
            {
               if( *pHead == '.' )
               {
                  /* we have stopped at the macro terminator '.' - skip it */
                  ++pHead;
                  ++ulNameLen;
               }
               ++ulNameLen;   /* count also the '&' character */

               /* number of characters left on the right side of a variable name */
               ulCharsLeft = ulResStrLen - ( pHead - szResult );

               /* NOTE:
                * if a replacement string is shorter then the variable
                * name then we don't have to reallocate the result buffer:
                * 'ulResStrLen' stores the current length of a string in the buffer
                * 'ulResBufLen' stores the length of the buffer
                */
               if( ulValLen > ulNameLen )
               {
                  ulResStrLen += ( ulValLen - ulNameLen );
                  if( ulResStrLen > ulResBufLen )
                  {
                     ulResBufLen = ulResStrLen;
                     szResult = ( char * ) hb_xrealloc( szResult, ulResBufLen + 1 );

                     pTail = szResult + ulPosFromStart;           // New Added line
                     
                  }
               }
               else
                  ulResStrLen -= ( ulNameLen - ulValLen );

               /* move bytes located on the right side of a variable name */
               memmove( pTail + ulValLen, pHead, ulCharsLeft + 1 );
               /* copy substituted value */
               memcpy( pTail, szValPtr, ulValLen );
               /* restart scanning from the beginning of replaced string */
               /* NOTE: This causes that the following code:
                *    a := '&a'
                *    var := '&a.b'
                * is the same as:
                *    var := '&ab'
                */
               pHead = pTail;
            }
         }
      }
      ulCharsLeft = ulResStrLen - ( pHead - szResult );
   }
   while( ulCharsLeft && ( pHead = (char *) memchr( (void *)pHead, '&', ulCharsLeft ) ) != NULL );

   if( ulResStrLen < ulResBufLen )
   {
      /* result string is shorter then allocated buffer -
       * cut it to a required length
       */
      szResult = ( char * ) hb_xrealloc( szResult, ulResStrLen + 1 );
   }
   szResult[ ulResStrLen ] = 0;  /* place terminating null character */
   /* return a length of result string */
   *pulStringLen = ulResStrLen;

   return szResult;   /* a new memory buffer was allocated */
}


Module \source\rdd\workarea.c

ERRCODE hb_waClearLocate( AREAP pArea )
{
   HB_TRACE(HB_TR_DEBUG, ("hb_waClearLocate(%p)", pArea));

   /* Free all items */
   if( pArea->dbsi.itmCobFor )
   {
      hb_gcUnlockItem(pArea->dbsi.itmCobFor );    // New added line
      hb_itemRelease( pArea->dbsi.itmCobFor );
      pArea->dbsi.itmCobFor = NULL;
   }
   if( pArea->dbsi.lpstrFor )
   {
      hb_itemRelease( pArea->dbsi.lpstrFor );
      pArea->dbsi.lpstrFor = NULL;
   }
   if( pArea->dbsi.itmCobWhile )
   {
      hb_gcUnlockItem(pArea->dbsi.itmCobWhile );  // New added line
      hb_itemRelease( pArea->dbsi.itmCobWhile );
      pArea->dbsi.itmCobWhile = NULL;
   }
.............

ERRCODE hb_waSetLocate( AREAP pArea, LPDBSCOPEINFO pScopeInfo )
{
   HB_TRACE(HB_TR_DEBUG, ("hb_waSetLocate(%p, %p)", pArea, pScopeInfo));

   /* Clear the active locate expression */
   SELF_CLEARLOCATE( pArea );

   if( pScopeInfo->itmCobFor )
   {                                          // New added line
      pArea->dbsi.itmCobFor = hb_itemNew( pScopeInfo->itmCobFor );
      hb_gcLockItem(pArea->dbfi.itmCobFor);   // New added line
   }                                          // New added line
   
   if( pScopeInfo->lpstrFor )
      pArea->dbsi.lpstrFor = hb_itemNew( pScopeInfo->lpstrFor );

   if( pScopeInfo->itmCobWhile )
   {                                          // New added line
      pArea->dbsi.itmCobWhile = hb_itemNew( pScopeInfo->itmCobWhile );
      hb_gcLockItem(pArea->dbfi.itmCobWhile); // New added line
   }                                          // New added line

   if( pScopeInfo->lpstrWhile )
      pArea->dbsi.lpstrWhile = hb_itemNew( pScopeInfo->lpstrWhile );
.............

pReturnItem = hb_itemPutxxx( pItem, ... )

In such functions pReturnItem is not always equal to pItem (pItem may
be equal to NULL), and that is why it is necessary to indicate the
following thing:
pItem = hb_itemPutxxx( pItem, ... ).
Because of the error given below, GPF appeared when opening second tag
in .cdx file.


ERRCODE hb_waCompile( AREAP pArea, BYTE * pExpr )
{
   HB_MACRO_PTR pMacro;

   HB_TRACE(HB_TR_DEBUG, ("hb_waCompile(%p, %p)", pArea, pExpr));

   pMacro = hb_macroCompile( ( char * ) pExpr );
   if( pMacro )
   {

//      hb_itemPutPtr( pArea->valResult, ( void * ) pMacro );   old line
// New line:
      pArea->valResult = hb_itemPutPtr( pArea->valResult, ( void * ) pMacro );

      return SUCCESS;
   }
   else
      return FAILURE;
}

The peculiarities of the compiler Watcom C++ I will send you later,
since this letter is already too long.



From harbour@lists.harbour-project.org  Fri Jan  5 00:11:01 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Fri Jan  5 00:11:01 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <3120030273.20010104233133@orel.ru>
Message-ID: <LOBBKAFMMFGJIKLMEPAKIEGGDIAA.ron@profit-master.com>

Hello Shashkov,

Welcome aboard.

I am not familiar with the areas you commented about, but my guess is you
seem to know what you are talking about.

Harbour has progressed a lot in its short life span, and appears fairly
stable, for its alpha stage, yet any problems, and or lacking at this stage,
shouldn't be perceived as "surprises".

This is an open source project, and as such, would clearly benefit from
contributors like yourself.

I hope those of us, who are more familiar with the issues you brought will
quickly respond. Until then, please keep up your efforts, and thanks for the
input.

Ron

> Hello!
> About a month ago I came across this project and I became very much
> interested in it. But unfortunately, when I started considering this
> project in detail, I found many errors and I understood that there is
> still much to be carried out.
> At first I faced the errors in the tests from \test: memfile.prg and
> memvar.prg. Then I tried to link util known from Clipper-DBU. And
> again I found several errors. More than that, it is next to impossible
> to work with the inner debugger. And now RDD(DBFCDX) is not yet fully
> realized. I wonder how many surprises are awaiting me as I'm going
> further?
> I used Watcom C++ 11.0 for DOS.
> I will give some of the errors which I have found below with my
> comments. I have also realized the functions ORDSETFOCUS() and
> ORDKEY() for DBFCDX. I will send the file dbfcdx1.c to some members of
> the mail-list in order not to overload this message. I haven't changed
> the number and the date of the version in the header of the file.


From harbour@lists.harbour-project.org  Fri Jan  5 00:44:01 2001
From: harbour@lists.harbour-project.org (Paul Tucker)
Date: Fri Jan  5 00:44:01 2001
Subject: [Harbour] My opinion about the Harbour project.
References: <E14D8K2-0006VE-00@tts.orel.ru> <3120030273.20010104233133@orel.ru>
Message-ID: <000b01c076da$35551390$b671fea9@QUARRY>

Shashkow,

<< all good stuff deleted>>

At a quick glance, the changes seem reasonable - I'll leave final word to
whoever is working on the code.  For now though, one comment on something I
saw in the post (Probably not your doing, but for the benefit of whoever
wrote it...)


         /* NOTE: '_' is invalid variable name
          */

Not true.  I'm quite certain Cl*pper  allows
  A := 5
  _ := "A"

? &_  // 5

Paul


From harbour@lists.harbour-project.org  Fri Jan  5 07:20:04 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Fri Jan  5 07:20:04 2001
Subject: [Harbour] Incompatability with CA-Clipper regarding allowable source names
Message-ID: <20010105121645.M15915@hagbard.davep.org>

I don't know which C compiler/platform combinations this affects but it's a
problem with GCC on my Linux box and, I guess, GCC on any platform. It might
also be a problem with other compilers too as it's a C symbol name thing.

Take the following fully correct Clipper program:

,----[ foo-bar.prg ]
| ? "Hello, World!"
`----

Note the name, that's the important bit. This compiles, links and runs just
fine with CA-Clipper.

However, with harbour/gcc/Linux it chokes at the C compilation stage, the
reason should be fairly obvious:

,----
| davep@hagbard:~/temp$ gharbour foo-bar
| Harbour Compiler 0.35j (Build 35) (2000.11.30) (Flex)
| Copyright 1999-2000, http://www.harbour-project.org
| Compiling 'foo-bar.prg'...
| Lines 3, Functions/Procedures 1
| Generating C source output to 'foo-bar.c'... Done.
| foo-bar.c:11: parse error before `-'
| foo-bar.c:16: `HB_FUN_FOO' undeclared here (not in a function)
| foo-bar.c:16: `BAR' undeclared here (not in a function)
| foo-bar.c:16: initializer element for `symbols[0].pFunPtr' is not constant
| foo-bar.c:18: parse error before `-'
| foo-bar.c:32: parse error before `-'
| foo-bar.c:46: warning: parameter names (without types) in function declaration
| foo-bar.c:46: conflicting types for `hb_vmExecute'
| /usr/local/include/harbour/hbvmpub.h:85: previous declaration of `hb_vmExecute'
| foo-bar.c:46: warning: data definition has no type or storage class
| foo-bar.c:47: parse error before `}'
`----

the reason being:

,----
| davep@hagbard:~/temp$ grep FOO-BAR foo-bar.c
|        HB_FUNC( FOO-BAR );
| HB_INIT_SYMBOLS_BEGIN( hb_vm_SymbolInit_FOO-BAR )
| { "FOO-BAR", HB_FS_PUBLIC | HB_FS_FIRST, HB_FUNCNAME( FOO-BAR ), NULL },
| HB_INIT_SYMBOLS_END( hb_vm_SymbolInit_FOO-BAR )
|    static HB_$INITSYM hb_vm_auto_SymbolInit_FOO-BAR = hb_vm_SymbolInit_FOO-BAR;
|    #pragma startup hb_vm_SymbolInit_FOO-BAR
| HB_FUNC( FOO-BAR )
`----

You can't have a "-" in a symbol name in C.

-- 
Dave Pearson                        |   w3ng - The WWW Norton Guide reader.
http://www.davep.org/               |     eg - Norton Guide reader for Linux.
http://www.davep.org/clipper/       |    weg - Norton Guide reader for Windows.
http://www.davep.org/norton-guides/ | dgscan - DGROUP scanner for Clipper.

From harbour@lists.harbour-project.org  Fri Jan  5 10:31:00 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Fri Jan  5 10:31:00 2001
Subject: [Harbour] Ron the time traveller
Message-ID: <20010105151122.U15915@hagbard.davep.org>

So, Ron, tell us, what's February like?

,----
| davep@hagbard:/usr/local/src/harbour$ head -1 ChangeLog
| 2001-02-03 09:35 UTC-0800 Ron Pinkas <ron@profit-master.com>
`----

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Fri Jan  5 10:33:02 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Fri Jan  5 10:33:02 2001
Subject: [Harbour] Small patch for pp.prg
Message-ID: <20010105153243.W15915@hagbard.davep.org>

contrib/do/pp.prg seems to forget that case sensitive filesystems exist.
This patch:

-- cut here ----------------------------------------------------------------
--- pp.old.prg	Fri Jan  5 15:29:11 2001
+++ pp.prg	Fri Jan  5 15:29:28 2001
@@ -225,7 +225,7 @@
 
    bCount := .F.
 
-   ProcessFile( "RP_Dot.ch" )
+   ProcessFile( "rp_dot.ch" )
 
    ErrorBlock( {|| RP_Dot_Err() } )
 
-- cut here ----------------------------------------------------------------

cures that problem.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Fri Jan  5 11:33:01 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Fri Jan  5 11:33:01 2001
Subject: [Harbour] Small patch for pp.prg
In-Reply-To: <20010105153243.W15915@hagbard.davep.org>; from davep@davep.org on Fri, Jan 05, 2001 at 03:32:43PM +0000
References: <20010105153243.W15915@hagbard.davep.org>
Message-ID: <20010105161830.Y15915@hagbard.davep.org>

On Fri, Jan 05, 2001 at 03:32:43PM +0000, Dave Pearson wrote:

> contrib/dot/pp.prg seems to forget that case sensitive filesystems exist.

It also seems to insist on a specific screen size:

-- cut here ----------------------------------------------------------------
--- pp.old.prg	Fri Jan  5 16:14:21 2001
+++ pp.prg	Fri Jan  5 16:15:10 2001
@@ -236,8 +236,8 @@
    @ 0,4 SAY Space( 76 ) COLOR "N/R"
 
    DO WHILE .T.
-      @ 24,00 SAY '.'
-      @ 24,01 GET sLine PICTURE '@KS79'
+      @ MAXROW(),00 SAY '.'
+      @ MAXROW(),01 GET sLine PICTURE '@KS' + ALLTRIM( STR( MAXCOL() ) )
       SET CURSOR ON
       READ
 
-- cut here ----------------------------------------------------------------

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Fri Jan  5 12:44:01 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Fri Jan  5 12:44:01 2001
Subject: [Harbour] Ron the time traveller
In-Reply-To: <20010105151122.U15915@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEGLDIAA.ron@profit-master.com>

Dave,

This was a simple and known effect of switching Time Zones. Instant shift of
16 hours is known to throw one into the future. It was so quick I have no
recollection what [will] have happened in February 2001, but I'm sure it
will be great :-)

I've lived in different Time Zones [at the same time], I've even visited the
future. Now, that I've finally found my Time Zone, I intend to stay put.

Ron

> So, Ron, tell us, what's February like?
>
> ,----
> | davep@hagbard:/usr/local/src/harbour$ head -1 ChangeLog
> | 2001-02-03 09:35 UTC-0800 Ron Pinkas <ron@profit-master.com>
> `----
>
> --
> The Harbour Project: A free software Clipper compatible compiler
> Home Page..........: http://www.harbour-project.org/
> FAQ................: http://www.harbour-project.org/faq/harbour.html
> My harbour page....: http://www.davep.org/harbour/


From harbour@lists.harbour-project.org  Fri Jan  5 13:01:01 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Fri Jan  5 13:01:01 2001
Subject: [Harbour] ChangeLog 2001-01-05 09:57 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEGLDIAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKIEGLDIAA.ron@profit-master.com>

2001-01-05 09:57 UTC-0800 Ron Pinkas <ron@profit-master.com>
   * contrib/dot/pp.prg
     * Corrected possible case sensitive issue RP_Dot.ch -> rp_dot.ch (Thanx
to Dave Pearson)
     * Corrected @ 24, ... -> @ MaxRow(), ...                         (Thanx
to Dave Pearson)


From harbour@lists.harbour-project.org  Fri Jan  5 13:04:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Fri Jan  5 13:04:02 2001
Subject: [Harbour] Small patch for pp.prg
In-Reply-To: <20010105161830.Y15915@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOEGLDIAA.ron@profit-master.com>

Dave,

Thanx for the fixes!

Did you get a chance to play with it a bit?

Ron

> > contrib/dot/pp.prg seems to forget that case sensitive 
> filesystems exist.
> 
> It also seems to insist on a specific screen size:
> ...

From harbour@lists.harbour-project.org  Fri Jan  5 17:16:02 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Fri Jan  5 17:16:02 2001
Subject: [Harbour] Small patch for pp.prg
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKOEGLDIAA.ron@profit-master.com>; from ron@profit-master.com on Fri, Jan 05, 2001 at 10:04:49AM -0800
References: <20010105161830.Y15915@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKOEGLDIAA.ron@profit-master.com>
Message-ID: <20010105182630.C15915@hagbard.davep.org>

On Fri, Jan 05, 2001 at 10:04:49AM -0800, Ron Pinkas wrote:
> Dave,
> 
> Thanx for the fixes!

Pleasure.

> Did you get a chance to play with it a bit?

"Play" and a "bit" are probably the operative words. Today is the first time
in ages that I've updated harbour from CVS so I was looking for something
non-trivial to compile and play with and pp.prg looked like a likely
candidate.

It compiled fine and, module the case issue, ran up just fine. I've banged a
few commands into it and it's not barfed yet. I did manage to get it to kick
in a memory warning on exit once but I've yet to reproduce that to see what
the problem was.

You might or might not want to know that some trivial playing with the
inline C stuff confirms that there are no real issues on RedHat GNU/Linux
with GCC.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Fri Jan  5 19:35:03 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Fri Jan  5 19:35:03 2001
Subject: [Harbour] Small patch for pp.prg
In-Reply-To: <20010105182630.C15915@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKEEGODIAA.ron@profit-master.com>

Dave,

> "Play" and a "bit" are probably the operative words. Today is the 
> first time
> in ages that I've updated harbour from CVS so I was looking for something
> non-trivial to compile and play with and pp.prg looked like a likely
> candidate.
> 
> It compiled fine and, module the case issue, ran up just fine. 
> I've banged a
> few commands into it and it's not barfed yet. I did manage to get 
> it to kick
> in a memory warning on exit once but I've yet to reproduce that 
> to see what
> the problem was.

Great.
 
> You might or might not want to know that some trivial playing with the
> inline C stuff confirms that there are no real issues on RedHat GNU/Linux
> with GCC.

Sure I want to know. Thanks for the info.

Ron



From harbour@lists.harbour-project.org  Sat Jan  6 00:35:03 2001
From: harbour@lists.harbour-project.org (Shashkov)
Date: Sat Jan  6 00:35:03 2001
Subject: [Harbour] My opinion about the Harbour project.
Message-ID: <3715047454.20010105213216@orel.ru>

Shashkow,

<< all good stuff deleted>>

>>At a quick glance, the changes seem reasonable - I'll leave final word to
>>whoever is working on the code.  For now though, one comment on something I
>>saw in the post (Probably not your doing, but for the benefit of whoever
>>wrote it...)


>>         /* NOTE: '_' is invalid variable name
>>          */

>>Not true.  I'm quite certain Cl*pper  allows
>>  A := 5
>>  _ := "A"

>>? &_  // 5

>>Paul


These are not my comments !!!
This is the fragment of the source text \source\vm\macro.c 1.27 2000/12/12

I faced the described error in this module when by macrosubstitution
the substituted text was much longer than the name of the variable.


Alex Shashkov                     mailto:shashkov@orel.ru



From harbour@lists.harbour-project.org  Sat Jan  6 04:17:02 2001
From: harbour@lists.harbour-project.org (Alexander S.Kresin)
Date: Sat Jan  6 04:17:02 2001
Subject: [Harbour] Re: New Build 0.36
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKGEFFDIAA.ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKGEFFDIAA.ron@profit-master.com>
Message-ID: <1357823540.20010106120619@belacy.belgorod.su>

On  Wednesday, January 03, 2001, 8:54 Ron Pinkas <ron@profit-master.com> wrote:

RP> Alexander, there are still 2 outstanding PP issues:

RP> 1. Order of sub optional clauses:

RP>    #COMMAND A [B [C] [D]] <x> => Test(<x>)
RP>    A B C "Ok"
RP>    A B D C "Not Processed"

 I remember about it. I need to think, how to do it in a best way,
 without significant perplexing of a code.

RP> 2. Optional secondary last clause to function:

RP> #TRANSLATE Fun( <x> [,<y>] ) => OtherFun( <x> )
RP>    Fun( "Ok", "optional provided" )
RP>    Fun( "Not Processed" )

 I'll review it.

Best regards,
 Alexander
http://members.xoom.com/alkresin/



From harbour@lists.harbour-project.org  Sat Jan  6 04:17:11 2001
From: harbour@lists.harbour-project.org (Alexander S.Kresin)
Date: Sat Jan  6 04:17:11 2001
Subject: [Harbour] Re: My opinion about the Harbour project.
In-Reply-To: <3120030273.20010104233133@orel.ru>
References: <E14D8K2-0006VE-00@tts.orel.ru> <3120030273.20010104233133@orel.ru>
Message-ID: <257510790.20010106120106@belacy.belgorod.su>

On  Thursday, January 04, 2001, 23:31 Shashkov <shashkov@orel.ru> wrote:

S> Hello!
S> About a month ago I came across this project and I became very much
S> interested in it. But unfortunately, when I started considering this
S> project in detail, I found many errors and I understood that there is
S> still much to be carried out.

 Yes, there is a lot of work to do yet, so new participants are very
 appreciated !
 
S> At first I faced the errors in the tests from \test: memfile.prg and
S> memvar.prg.

 What errors ? I just compiled and run them and hadn't problems (
 BC 5.5 ) .
 
S>  Then I tried to link util known from Clipper-DBU. And
S> again I found several errors. More than that, it is next to impossible
S> to work with the inner debugger. And now RDD(DBFCDX) is not yet fully
S> realized. I wonder how many surprises are awaiting me as I'm going
S> further?

 These two - debugger and RDD functionality ( both DBFCDX and
 DBFNTX ) are the main what we need to have for Harbour 1.0 .
 
S> I used Watcom C++ 11.0 for DOS.

 Is it 32-bit ? I ask this because 16-bit Harbour isn't functional now.
 
S> I will give some of the errors which I have found below with my
S> comments. I have also realized the functions ORDSETFOCUS() and
S> ORDKEY() for DBFCDX.
S>  I will send the file dbfcdx1.c to some members of
S> the mail-list in order not to overload this message. I haven't changed
S> the number and the date of the version in the header of the file.

 You can send it to me. The information in the header is changed
 automatically by CVS software.

 What about you fixes, I'll review it, though the best persons to do
 it are that modules authors ( Ryszard, Antonio ? ).



Best regards,
 Alexander
http://members.xoom.com/alkresin/



From harbour@lists.harbour-project.org  Sat Jan  6 04:44:02 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Sat Jan  6 04:44:02 2001
Subject: [Harbour] Re: My opinion about the Harbour project.
In-Reply-To: <257510790.20010106120106@belacy.belgorod.su>
Message-ID: <000701c077c3$b15c05e0$0f2aa8c0@antonio>

>  What about you fixes, I'll review it, though the best persons to do
>  it are that modules authors ( Ryszard, Antonio ? ).

I fully agree. I originally wrote dynsym.c and the proposed
fix seems very logical and easy to implement.

Regarding the other changes, we do need Ryszard opinion! 

And, something quite obvious, is Shashkov quality as beeing so
new to the project he has been able to understand and fix many
complex parts if it.

I do wish that Shashkov join the Harbour team, but that is
something that just Shashkov can do. He is really welcome.

Antonio


From harbour@lists.harbour-project.org  Sat Jan  6 05:01:03 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Sat Jan  6 05:01:03 2001
Subject: [Harbour] big thank you (Shashkov)
In-Reply-To: <000701c077c3$b15c05e0$0f2aa8c0@antonio>
Message-ID: <000a01c077c5$fd990320$0f2aa8c0@antonio>

Shashkov,

Thanks so much for your comments and fixes.

I am really impressed with them, as you are new to the
project but you have shown a great understanding of it.

I do wish you join the Harbour team.

BTW, let me know if you want to receive a free FiveWin
for Harbour. I am happy to send it to you. 

best regards,

Antonio


From harbour@lists.harbour-project.org  Sat Jan  6 05:59:02 2001
From: harbour@lists.harbour-project.org (Alexander S.Kresin)
Date: Sat Jan  6 05:59:02 2001
Subject: [Harbour] Re: My opinion about the Harbour project.
In-Reply-To: <3120030273.20010104233133@orel.ru>
References: <E14D8K2-0006VE-00@tts.orel.ru> <3120030273.20010104233133@orel.ru>
Message-ID: <15014381855.20010106135536@belacy.belgorod.su>

On  Thursday, January 04, 2001, 23:31 Shashkov <shashkov@orel.ru> wrote:

S> Module \source\vm\memvars.c

S> void hb_memvarsIsMemvarRef( void )
S> {
S>    HB_TRACE(HB_TR_DEBUG, ("hb_memvarsIsMemvarRef()"));

S>    if( s_globalTable )
S>    {
S> //      ULONG ulCnt = s_globalLastFree;
S> // s_globalLastFree points to element array s_globalTable, which has
S> // never been initialized.
S>       ULONG ulCnt = s_globalLastFree - 1;

 This seems reasonable, and the same in hb_memvarsRelease().

S> void hb_memvarSetPrivatesBase( ULONG ulBase )
 [ skipped ]
S> // The element s_globalTable[ 0 ] is reserved and that is why it is
S> // necessary to add the following conditions:
S>       if( hVar )
S>       {
S>          hOldValue = s_globalTable[ hVar ].hPrevMemvar;
 
 I think, that's Ok too, but don't sure for what purposes
 s_globalTable[ 0 ] is reserved ( Ryszard ? ).


S> HB_HANDLE hb_memvarValueNew( HB_ITEM_PTR pSource, BOOL bTrueMemvar )
  [ skipped ]
//      pValue->>item.type = HB_IT_NIL;        // Removed line
S>       hb_itemClear( &pValue->item );          // This line goes
S>                                               // instead of the
S>                                               // previous one.

 Agree.

 If nobody will have objections, I'll upload it.


Best regards,
 Alexander
http://members.xoom.com/alkresin/



From harbour@lists.harbour-project.org  Sat Jan  6 06:04:02 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Sat Jan  6 06:04:02 2001
Subject: [Harbour] Re: My opinion about the Harbour project.
In-Reply-To: <15014381855.20010106135536@belacy.belgorod.su>
Message-ID: <000e01c077ce$d3f83000$0f2aa8c0@antonio>

Alexander,

Please upload his proposed dynsym.c change if you don't mind it.

I believe it is ok.

Thanks!

Antonio



From harbour@lists.harbour-project.org  Sat Jan  6 08:10:03 2001
From: harbour@lists.harbour-project.org (Alexander S.Kresin)
Date: Sat Jan  6 08:10:03 2001
Subject: [Harbour] Re: My opinion about the Harbour project.
In-Reply-To: <000e01c077ce$d3f83000$0f2aa8c0@antonio>
References: <000e01c077ce$d3f83000$0f2aa8c0@antonio>
Message-ID: <10022199737.20010106160553@belacy.belgorod.su>

On  Saturday, January 06, 2001, 13:52 Antonio Linares <alinares@fivetech.com> wrote:

AL> Please upload his proposed dynsym.c change if you don't mind it.

 Ok, done:

2001-01-06 9:18 GMT+3 Alexander Kresin <alex@belacy.belgorod.su>
   * source/vm/dynsym.c
     Fix, posted by shashkov@orel.ru 


Best regards,
 Alexander
http://members.xoom.com/alkresin/



From harbour@lists.harbour-project.org  Sat Jan  6 08:10:12 2001
From: harbour@lists.harbour-project.org (Alexander S.Kresin)
Date: Sat Jan  6 08:10:12 2001
Subject: [Harbour] Re: big thank you (Shashkov)
In-Reply-To: <000a01c077c5$fd990320$0f2aa8c0@antonio>
References: <000a01c077c5$fd990320$0f2aa8c0@antonio>
Message-ID: <12422345857.20010106160819@belacy.belgorod.su>

On  Saturday, January 06, 2001, 12:49 Antonio Linares <alinares@fivetech.com> wrote:

AL> BTW, let me know if you want to receive a free FiveWin
AL> for Harbour. I am happy to send it to you. 

 To me too, if it possible .

Best regards,
 Alexander
http://members.xoom.com/alkresin/



From harbour@lists.harbour-project.org  Sat Jan  6 12:17:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sat Jan  6 12:17:02 2001
Subject: [Harbour] big thank you (Shashkov)
In-Reply-To: <000a01c077c5$fd990320$0f2aa8c0@antonio>
Message-ID: <LOBBKAFMMFGJIKLMEPAKMEHDDIAA.ron@profit-master.com>

Antonio

[From his second message, his name appear to be Alex Shashkov.]

Now we are talking. I was afraid his message will go un-noticed!!! Good to
know, I was not the only one to recognize the potential of Alex as an
additional great Harbour Captain.

I second the invitation, let's give him a CVS write access.

Ron

> Shashkov,
>
> Thanks so much for your comments and fixes.
>
> I am really impressed with them, as you are new to the
> project but you have shown a great understanding of it.
>
> I do wish you join the Harbour team.
>
> BTW, let me know if you want to receive a free FiveWin
> for Harbour. I am happy to send it to you.
>
> best regards,
>
> Antonio


From harbour@lists.harbour-project.org  Sat Jan  6 13:35:04 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Sat Jan  6 13:35:04 2001
Subject: [Harbour] dynsym.c
Message-ID: <008001c07810$23348bf0$921a5e18@bh>

Antonio and Alexander:
Since we are looking at dynsym, perhaps we can fix the bugs I reported last
month ;-)

Symbols that are space-padded are OK in clipper, but fail in Harbour.
select("LAST   ") is one instance.  At first it seemed that a local fix in
select() might be OK, but other instances of the same thing have appeared
elsewhere (field references, I believe).

When aliases are stored in dbf fields, they come out space-padded.  I
modified my own code to trim these, but this is still an incompatibility
with Clipper.

Brian Hays
Abacus Data Systems, Inc.



From harbour@lists.harbour-project.org  Sat Jan  6 15:28:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sat Jan  6 15:28:02 2001
Subject: [Harbour] Re: New Build 0.36
In-Reply-To: <1357823540.20010106120619@belacy.belgorod.su>
Message-ID: <LOBBKAFMMFGJIKLMEPAKMEHEDIAA.ron@profit-master.com>

Alexander,

> RP> 1. Order of sub optional clauses:
>
> RP>    #COMMAND A [B [C] [D]] <x> => Test(<x>)
> RP>    A B C "Ok"
> RP>    A B D C "Not Processed"
>
>  I remember about it. I need to think, how to do it in a best way,
>  without significant perplexing of a code.

Great.

> RP> 2. Optional secondary last clause to function:
>
> RP> #TRANSLATE Fun( <x> [,<y>] ) => OtherFun( <x> )
> RP>    Fun( "Ok", "optional provided" )
> RP>    Fun( "Not Processed" )
>
>  I'll review it.

Thanks.

I also remember there's 1 more issue:

Nested #[x]translae/[x]command should have \ preceding < of new Match
Pattern:

  #command TEST <x> => MyTest(<x>); #translate NESTED \<NewMP> =>
MyNested(\<NewMP>)

Ron


From harbour@lists.harbour-project.org  Sat Jan  6 20:48:02 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Sat Jan  6 20:48:02 2001
Subject: [Harbour] Re: big thank you (Shashkov)
References: <000a01c077c5$fd990320$0f2aa8c0@antonio> <12422345857.20010106160819@belacy.belgorod.su>
Message-ID: <003901c0784b$cb072fa0$0100007f@sl.conex.net>

> 
> AL> BTW, let me know if you want to receive a free FiveWin
> AL> for Harbour. I am happy to send it to you. 
> 
>  To me too, if it possible .
To me also,if possible, then i can handle some hbmake+fwh issues

Regards

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Sun Jan  7 03:03:05 2001
From: harbour@lists.harbour-project.org (Alexander S.Kresin)
Date: Sun Jan  7 03:03:05 2001
Subject: [Harbour] Re: dynsym.c
In-Reply-To: <008001c07810$23348bf0$921a5e18@bh>
References: <008001c07810$23348bf0$921a5e18@bh>
Message-ID: <1951612939.20010107105908@belacy.belgorod.su>

On  Saturday, January 06, 2001, 21:40 Brian Hays <bhays@abacuslaw.com> wrote:

BH> Antonio and Alexander:
BH> Since we are looking at dynsym, perhaps we can fix the bugs I reported last
BH> month ;-)

BH> Symbols that are space-padded are OK in clipper, but fail in Harbour.
BH> select("LAST   ") is one instance.  At first it seemed that a local fix in
BH> select() might be OK, but other instances of the same thing have appeared
BH> elsewhere (field references, I believe).

BH> When aliases are stored in dbf fields, they come out space-padded.  I
BH> modified my own code to trim these, but this is still an incompatibility
BH> with Clipper.

  I think, we can add to hb_symbolNew() something like:

   int iLen;
   iLen = strlen( szName ) - 1;
   while( *( szName + iLen ) == ' ' )
      iLen--;
   iLen++;
   *( szName + iLen ) = 0;
   pSymbol->szName = ( char * ) hb_xgrab( iLen + 1 );

   Brian, could you try it, testing for side effects ?



Best regards,
 Alexander
http://members.xoom.com/alkresin/



From harbour@lists.harbour-project.org  Sun Jan  7 04:18:01 2001
From: harbour@lists.harbour-project.org (Shashkov)
Date: Sun Jan  7 04:18:01 2001
Subject: [Harbour] The peculiarities of Watcom C for Harbour
Message-ID: <1057164567.20010107002225@orel.ru>

I use 32-bit Watcom C because I would like to be connected to Sybase SQL
Anywhere. Sybase SQL Anywhere 5.5 has 32-bit library for DOS only for
Watcom C.


Function log( 0 ) in Watcom C++ return 0.

\source\vm\itemapi.c

char * hb_itemStr( PHB_ITEM pNumber, PHB_ITEM pWidth, PHB_ITEM pDec )
{
   char * szResult = NULL;
...........................
         if( HB_IS_DOUBLE( pNumber ) || iDec != 0 )
         {
            double dNumber = hb_itemGetND( pNumber );

            #if defined(__BORLANDC__) || defined(__WATCOMC__)  // the corrected line
            #else                                              // New line
            static double s_dInfinity = 0;
            static double s_bInfinityInit = FALSE;

            if( ! s_bInfinityInit )
            {
               s_dInfinity = -log( 0 );
               s_bInfinityInit = TRUE;
            }
            #endif

            if( pNumber->item.asDouble.length == 99
            #if defined(__BORLANDC__) || defined(__WATCOMC__) // the corrected line
               /* No more checks for Borland C, which returns 0 for log( 0 ),
                  and is therefore unable to test for infinity */
            #else
               || dNumber == s_dInfinity || dNumber == -s_dInfinity
            #endif
            )
               /* Numeric overflow */
               iBytes = iSize + 1;
            else
....................

\source\rtl\filesys.c

The added condition for WATCOM C++
....................
#if defined(_MSC_VER) || defined(__MINGW32__) || defined(__IBMCPP__) || defined(__WATCOMC__)
/* These compilers use sopen() rather than open(), because their
   versions of open() do not support combined O_ and SH_ flags */
   #define HB_FS_SOPEN
#endif
....................


\source\rtl\math.c

#include <math.h>

#include "hbapi.h"
#include "hbapiitm.h"
#include "hbapierr.h"

#if defined(__WATCOMC__)
   #define HB_MATH_HANDLER
   #if (__WATCOMC__ >= 1100)         // I don't know about the
      #define exception _exception   // preceding version.
   #endif
#elif defined(__BORLANDC__)
................................


\source\rdd\dbfcdx\dbfcdx1.h
..............................
#if (__BORLANDC__ > 1040) /* Use this only above Borland C++ 3.1 */
   #pragma option -a1 /* byte alignment */
#endif
#if defined(__GNUC__)
   #pragma pack(1)
#endif
#if defined(__WATCOMC__)      // added line
   #pragma pack(push, 1);     // added line
#endif                        // added line

typedef struct
{
   USHORT FreeSpace;
   LONG   RecNumMask;
   BYTE   DupCntMask;
   BYTE   TrlCntMask;
   BYTE   RecNumBits;
   BYTE   DupCntBits;
   BYTE   TrlCntBits;
   BYTE   ShortBytes;
   BYTE   ExtData[ CDX_EXTERNAL_SPACE ];
} CDXEXTERNAL;
typedef struct
{
   BYTE   IntData[ CDX_INTERNAL_SPACE ];
} CDXINTERNAL;
typedef struct _CDXDATA
{
   USHORT Node_Atr;
   USHORT Entry_Ct;
   LONG   Left_Ptr;
   LONG   Rght_Ptr;
   union
   {
      CDXEXTERNAL External;
      CDXINTERNAL Internal;
   } cdxu;
} CDXDATA;
#if (__BORLANDC__ > 1040) /* Use this only above Borland C++ 3.1 */
   #pragma option -a /* default alignment */
#endif
#if defined(__GNUC__)
   #pragma pack()
#endif
#if defined(__WATCOMC__)        // added line
   #pragma pack(pop);           // added line
#endif                          // added line
typedef CDXDATA * LPCDXDATA;
....................................



Alex Shashkov                          mailto:shashkov@orel.ru



From harbour@lists.harbour-project.org  Sun Jan  7 04:37:02 2001
From: harbour@lists.harbour-project.org (Patrick Mast)
Date: Sun Jan  7 04:37:02 2001
Subject: [Harbour] The peculiarities of Watcom C for Harbour
In-Reply-To: <1057164567.20010107002225@orel.ru>
Message-ID: <NCBBJKNMIDPJNLJCHCHIIECCFMAA.harbour@winfakt.com>

Antonio,

Can you give Alex write access on CVS?

regards,

Patrick Mast
www.Patrick.Be.kz

From harbour@lists.harbour-project.org  Sun Jan  7 06:20:03 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Sun Jan  7 06:20:03 2001
Subject: [Harbour] Re: big thank you (Shashkov)
In-Reply-To: <003901c0784b$cb072fa0$0100007f@sl.conex.net>
Message-ID: <000901c0789a$3b4be460$0f2aa8c0@antonio>

Luiz,

> To me also,if possible, then i can handle some hbmake+fwh issues

Both Alexander and you -and many others- are on the FWH distribution
list. Strange... haven't you received FWH latest versions ?

Antonio


From harbour@lists.harbour-project.org  Sun Jan  7 06:25:04 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Sun Jan  7 06:25:04 2001
Subject: [Harbour] The peculiarities of Watcom C for Harbour
In-Reply-To: <NCBBJKNMIDPJNLJCHCHIIECCFMAA.harbour@winfakt.com>
Message-ID: <000a01c0789a$e86b0b80$0f2aa8c0@antonio>

Alex has to go first to http://www.sourceforge.net and log in
as a new user. Once we know his nickname, then we can give him
write access.

> Can you give Alex write access on CVS?

Antonio



From harbour@lists.harbour-project.org  Sun Jan  7 06:49:02 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Sun Jan  7 06:49:02 2001
Subject: [Harbour] The peculiarities of Watcom C for Harbour
References: <NCBBJKNMIDPJNLJCHCHIIECCFMAA.harbour@winfakt.com>
Message-ID: <000b01c0789f$a2c7a520$0100007f@sl.conex.net>

Patrick

> Can you give Alex write access on CVS?

Any any the Harbour admins can give him write access if he send his loging
name

Regards

Luiz Rafael Culik



From harbour@lists.harbour-project.org  Sun Jan  7 10:16:01 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Sun Jan  7 10:16:01 2001
Subject: [Harbour] Re: big thank you (Shashkov)
References: <000901c0789a$3b4be460$0f2aa8c0@antonio>
Message-ID: <000b01c078bc$c515d120$0100007f@sl.conex.net>

Antonio

>
> > To me also,if possible, then i can handle some hbmake+fwh issues
>
> Both Alexander and you -and many others- are on the FWH distribution
> list. Strange... haven't you received FWH latest versions ?

No. the last mail I recieved to download the latest FWH was 4 months ago.
upon them i didn´t recieve any more

Regards

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Sun Jan  7 11:12:01 2001
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Sun Jan  7 11:12:01 2001
Subject: [Harbour] Re: big thank you (Shashkov)
In-Reply-To: <000901c0789a$3b4be460$0f2aa8c0@antonio>
References: <003901c0784b$cb072fa0$0100007f@sl.conex.net>
Message-ID: <3A584ED8.1962.3BB9A9E@localhost>

On 7 Jan 2001, at 12:08, Antonio Linares wrote:

> Luiz,
> 
> > To me also,if possible, then i can handle some hbmake+fwh issues
> 
> Both Alexander and you -and many others- are on the FWH distribution
> list. Strange... haven't you received FWH latest versions ?
> 
> Antonio

I haven't for some time.


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Sun Jan  7 11:59:01 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Sun Jan  7 11:59:01 2001
Subject: [Harbour] Watcom C(Shashkov)
References: <1057164567.20010107002225@orel.ru>
Message-ID: <000701c078cb$0cfd6080$0100007f@sl.conex.net>

Dear Friend.

Welcome to our group. You knowloge of Watcom C , will make Harbour
compatible with this C compiler.

As soon you port the make files to be used with Watcom C, I´d like your help
to make hbmake compatible with the compiler

Best Regards

Luiz Rafael  Culik


From harbour@lists.harbour-project.org  Sun Jan  7 16:09:02 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Sun Jan  7 16:09:02 2001
Subject: [Harbour] Re: dynsym.c
References: <008001c07810$23348bf0$921a5e18@bh> <1951612939.20010107105908@belacy.belgorod.su>
Message-ID: <002101c078ee$d2b4fcc0$921a5e18@bh>

Alexander:
I'll try it. But Ryszard was concerned that there would be too big a
performance hit.  Also, it would need to be in ...Find instead of
hb_symbolNew() since it's looking up an existing symbol by name, right?

Brian

----- Original Message -----
From: "Alexander S.Kresin" <alex@belacy.belgorod.su>
To: <harbour@lists.harbour-project.org>
Sent: Saturday, January 06, 2001 11:59 PM
Subject: [Harbour] Re: dynsym.c


> On  Saturday, January 06, 2001, 21:40 Brian Hays <bhays@abacuslaw.com>
wrote:
>
> BH> Antonio and Alexander:
> BH> Since we are looking at dynsym, perhaps we can fix the bugs I reported
last
> BH> month ;-)
>
> BH> Symbols that are space-padded are OK in clipper, but fail in Harbour.
> BH> select("LAST   ") is one instance.  At first it seemed that a local
fix in
> BH> select() might be OK, but other instances of the same thing have
appeared
> BH> elsewhere (field references, I believe).
>
> BH> When aliases are stored in dbf fields, they come out space-padded.  I
> BH> modified my own code to trim these, but this is still an
incompatibility
> BH> with Clipper.
>
>   I think, we can add to hb_symbolNew() something like:
>
>    int iLen;
>    iLen = strlen( szName ) - 1;
>    while( *( szName + iLen ) == ' ' )
>       iLen--;
>    iLen++;
>    *( szName + iLen ) = 0;
>    pSymbol->szName = ( char * ) hb_xgrab( iLen + 1 );
>
>    Brian, could you try it, testing for side effects ?
>
>
>
> Best regards,
>  Alexander
> http://members.xoom.com/alkresin/
>
>
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Sun Jan  7 16:14:02 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Sun Jan  7 16:14:02 2001
Subject: [Harbour] Welcome Shashkov!
In-Reply-To: <000701c078cb$0cfd6080$0100007f@sl.conex.net>
Message-ID: <001701c078ec$e0296c80$0f2aa8c0@antonio>

Alex,

>>
My nickname on http://www.sourceforge.net is alex_shashkov.
I would appreciate if you could show me how to upload files on CVS or
tell me the reference to the instruction.
>>

Ok. Already added! Thanks so much for joining us!

I believe we do have a FAQ for managing CVS. Dave ???

>>
Thank you very much for your offer of FWH. I'd be happy to get it if
possible.
>>

Already sent. Have fun! :-)

Antonio


From harbour@lists.harbour-project.org  Sun Jan  7 17:02:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sun Jan  7 17:02:02 2001
Subject: [Harbour] ChangeLog 2001-01-07 13:40 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <002101c078ee$d2b4fcc0$921a5e18@bh>
Message-ID: <LOBBKAFMMFGJIKLMEPAKEEHHDIAA.ron@profit-master.com>

2001-01-07 13:40 UTC-0800 Ron Pinkas <ron@profit-master.com>
   * contrib/dot/pp.prg
     * Optimized cyclic detection logic.

From harbour@lists.harbour-project.org  Mon Jan  8 01:32:02 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Mon Jan  8 01:32:02 2001
Subject: [Harbour] preprocessor bug ?
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKEEHHDIAA.ron@profit-master.com>
Message-ID: <002401c0793a$9aa2d2c0$0f2aa8c0@antonio>

This was working fine, but now is not:

#translate DRIVERS(<x,...>)  => {<(x)>}
#define ID_DRIVERS DbfNtx, DbfCdx

function main()

   local aDrivers := Drivers( ID_DRIVERS )

return nil

Thanks!

Antonio


From harbour@lists.harbour-project.org  Mon Jan  8 03:27:03 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Mon Jan  8 03:27:03 2001
Subject: [Harbour] Welcome Shashkov!
In-Reply-To: <001701c078ec$e0296c80$0f2aa8c0@antonio>; from alinares@fivetech.com on Sun, Jan 07, 2001 at 10:00:33PM +0100
References: <000701c078cb$0cfd6080$0100007f@sl.conex.net> <001701c078ec$e0296c80$0f2aa8c0@antonio>
Message-ID: <20010108081659.A15915@hagbard.davep.org>

On Sun, Jan 07, 2001 at 10:00:33PM +0100, Antonio Linares wrote:

> I believe we do have a FAQ for managing CVS. Dave ???

See HOWTOCVS.TXT in the harbour documentation directory. I also believe that
SourceForge, the people who provide our CVS server, also provide developer
instructions for using their CVS server.

The CVS content of the FAQ is for anonymous access.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Mon Jan  8 04:51:08 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Mon Jan  8 04:51:08 2001
Subject: [Harbour] preprocessor bug ?
In-Reply-To: <002401c0793a$9aa2d2c0$0f2aa8c0@antonio>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEHIDIAA.ron@profit-master.com>

Antonio,

When was the last time you *know* it was working?

I can't recall any recent change that might have caused such new problem! 

Ron

> This was working fine, but now is not:
> 
> #translate DRIVERS(<x,...>)  => {<(x)>}
> #define ID_DRIVERS DbfNtx, DbfCdx
> 
> function main()
> 
>    local aDrivers := Drivers( ID_DRIVERS )
> 
> return nil
> 
> Thanks!
> 
> Antonio


From harbour@lists.harbour-project.org  Mon Jan  8 05:16:01 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Mon Jan  8 05:16:01 2001
Subject: [Harbour] ChangeLog 2001-01-08 02:10 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEHIDIAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKIEHIDIAA.ron@profit-master.com>

2001-01-08 02:10 UTC-0800 Ron Pinkas <ron@profit-master.com>
   * contrib/dot/pp.prg
     * Few corrections in NextExp() and MatchRule().

From harbour@lists.harbour-project.org  Mon Jan  8 15:04:02 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Mon Jan  8 15:04:02 2001
Subject: [Harbour] preprocessor bug ?
References: <LOBBKAFMMFGJIKLMEPAKCEHIDIAA.ron@profit-master.com>
Message-ID: <001d01c079af$cf9e4e30$59f6fbce@local>

Ron:
This is looks similar to my bug that was fixed back probably before November
where I had a #define for array subscripts
    #define ArraySUBS  5, 5
...
   ? a[ArraySUBS ]

Perhaps that fix affected Antonio's xtranslate....

Brian

----- Original Message -----
From: Ron Pinkas <ron@profit-master.com>
To: <harbour@lists.harbour-project.org>
Sent: Monday, January 08, 2001 1:51 AM
Subject: RE: [Harbour] preprocessor bug ?


> Antonio,
>
> When was the last time you *know* it was working?
>
> I can't recall any recent change that might have caused such new problem!
>
> Ron
>
> > This was working fine, but now is not:
> >
> > #translate DRIVERS(<x,...>)  => {<(x)>}
> > #define ID_DRIVERS DbfNtx, DbfCdx
> >
> > function main()
> >
> >    local aDrivers := Drivers( ID_DRIVERS )
> >
> > return nil
> >
> > Thanks!
> >
> > Antonio
>
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>



From harbour@lists.harbour-project.org  Mon Jan  8 15:10:04 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Mon Jan  8 15:10:04 2001
Subject: [Harbour] preprocessor bug ?
In-Reply-To: <001d01c079af$cf9e4e30$59f6fbce@local>
Message-ID: <LOBBKAFMMFGJIKLMEPAKMEHKDIAA.ron@profit-master.com>

Antonio's problem, is not related to define, you can get it even with this:

// --------------  //
#translate DRIVERS(<x,...>)  => {<(x)>}

Function Main()

   local aDrivers := Drivers( A, B )

return NIL
// --------------  //

So, I'm puzzled: when did it stop working? I can't think of any related
change in months.

Ron

> Ron:
> This is looks similar to my bug that was fixed back probably
> before November
> where I had a #define for array subscripts
>     #define ArraySUBS  5, 5
> ...
>    ? a[ArraySUBS ]
>
> Perhaps that fix affected Antonio's xtranslate....
>
> Brian


From harbour@lists.harbour-project.org  Mon Jan  8 15:11:03 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Mon Jan  8 15:11:03 2001
Subject: [Harbour] preprocessor bug ?
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEHIDIAA.ron@profit-master.com>
Message-ID: <000001c079ad$8e2275a0$0f2aa8c0@antonio>

Ron,

> When was the last time you *know* it was working?

I don't remember it exactly. 

one month and a half or so.

Antonio



From harbour@lists.harbour-project.org  Mon Jan  8 15:43:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Mon Jan  8 15:43:02 2001
Subject: [Harbour] ChangeLog 2001-01-08 12:35 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <000001c079ad$8e2275a0$0f2aa8c0@antonio>
Message-ID: <LOBBKAFMMFGJIKLMEPAKEEHLDIAA.ron@profit-master.com>

2001-01-08 12:35 UTC-0800 Ron Pinkas <ron@profit-master.com>
   * contrib/dot/pp.prg
     * Added support for leading and trailing WS before/after #.
     * Extra logic for [...] within # directives in ProcessFile()
     * Fixed logic of // and && terminating at EOF.

From harbour@lists.harbour-project.org  Mon Jan  8 16:28:02 2001
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Mon Jan  8 16:28:02 2001
Subject: [Harbour] 2001-01-08 22:18 GMT+0100 JFL (mafact) <jfl@mafact.com>
Message-ID: <200101082111.f08LBmn19789@ev6.be.wanadoo.com>

2001-01-08 22:18 GMT+0100 JFL (mafact) <jfl@mafact.com>
      * harbour/makefile.vc        Added estack.obj
      * harbour/source/compiler/harbour.l
        Added Type Casting needed by VC++
      * harbour/source/vm/estack.c
        Added Type Casting needed by VC++
      * harbour/source/vm/hvm.c
        Added Type Casting needed by VC++
      * harbour/source/vm/classes.c
        Temporary released the HIDDEN Check on scooping


Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Mon Jan  8 16:37:02 2001
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Mon Jan  8 16:37:02 2001
Subject: [Harbour] subclassing and hidden methods (JF?)
In-Reply-To: <3A353B88.44847510@libero.it>
Message-ID: <200101082120.f08LKLn21928@ev6.be.wanadoo.com>

Hi Maurillio,

First of all, I wish you a happy new year.

I just CVSed some modification where I temporary released the 
HIDDEN scoping check to allow a Build 0.36 to be done. I also 
added all needed type castings and file reference to the VC++ 
support. I continue to investigate for a full ::Class message but I'm 
100 % busy at this time so ... (same for a real full trace between 
class to class)


From:           	Maurilio Longo <maurilio.longo@libero.it>
Organization:   	Team OS/2 Italia
To:             	harbour@lists.harbour-project.org
Subject:        	[Harbour] subclassing and hidden methods (JF?)
Send reply to:  	harbour@lists.harbour-project.org
	<mailto:harbour-request@lists.harbour-project.org?subject=subscribe>
	<mailto:harbour-request@lists.harbour-project.org?subject=unsubscribe>
Date sent:      	Mon, 11 Dec 2000 21:39:36 +0100

> Hi,
> 
> after my latest changes TBrowse class has a few hidden methods and
> properties. I have a class which is derived from TBrowse.
> 
> When I try to create an instance of this class I get this error if I
> don't remove HIDDEN: clause inside class definition (lHitTop is a hidden
> property).
> 
> 
> Error BASE/1005  Message not found: TSCEGLIQUERY:_LHITTOP
> Called from __ERRRT_SBASE(0)
> Called from TSCEGLIQUERY:ERROR(155)
> Called from __EVAL(84)
> Called from TSCEGLIQUERY:MSGNOTFOUND(0)
> Called from TSCEGLIQUERY:_LHITTOP(148)
> Called from TSCEGLIQUERY:NEW(193)
> Called from TSCEGLIQUERY:NEW(146)
> Called from TSCEGLIQUERY:NEW(24)
> Called from TSQLEDITOR:SELEZIONAQUERY(145)
> Called from TSQLEDITOR:KEYBOARDHOOK(114)
> Called from TSQLEDITOR:EDIT(922)
> Called from MAIN(64)
> 
> 
> PS. To see this error I had to comment out line 255 of tclass.prg (as
> suggested here by JF) or I get an endless loop inside tclass.prg.
> 
> Is this a problem due to this change to tclass.prg or a problem on its
> own?
> 
> Note also that call stack sees three TSCEGLIQUERY:NEW() calls but at
> least one of them should be TBROWSE:NEW().
> 
> 
> regards.
> 
> 
> -- 
> 
>  __________                   
> |  |  | |__| md2520@mclink.it 
> |_|_|_|____| Team OS/2 Italia
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Mon Jan  8 17:13:02 2001
From: harbour@lists.harbour-project.org (Harbour)
Date: Mon Jan  8 17:13:02 2001
Subject: [Harbour] 2001-01-08 22:18 GMT+0100 JFL (mafact) <jfl@mafact.com>
In-Reply-To: <200101082111.f08LBmn19789@ev6.be.wanadoo.com>
References: <200101082111.f08LBmn19789@ev6.be.wanadoo.com>
Message-ID: <3A5A3B85294.C1D1HARBOUR@smtp.link.net.id>

JF Lefebvre,

After:

>2001-01-08 22:18 GMT+0100 JFL (mafact) <jfl@mafact.com>
>      * harbour/source/vm/estack.c
>        Added Type Casting needed by VC++

Borland C++ 5.5.1 for Win32 Copyright (c) 1993, 2000 Borland
source\vm\estack.c:
Error E2451 source\vm\estack.c 107: Undefined symbol '_HB_ITEM' in function hb_stackPush
Error E2188 source\vm\estack.c 107: Expression syntax in function hb_stackPush
Error E2451 source\vm\estack.c 128: Undefined symbol '_HB_ITEM' in function hb_stackInit
Error E2188 source\vm\estack.c 128: Expression syntax in function hb_stackInit
*** 4 errors in Compile ***

** error 1 ** deleting OBJ\BCC55\estack.obj

Thanks


From harbour@lists.harbour-project.org  Mon Jan  8 17:30:04 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Mon Jan  8 17:30:04 2001
Subject: [Harbour] ChangeLog 2001-01-08 14:35 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <3A5A3B85294.C1D1HARBOUR@smtp.link.net.id>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEHMDIAA.ron@profit-master.com>

2001-01-08 14:35 UTC-0800 Ron Pinkas <ron@profit-master.com>
   * harbour/source/vm/estack.c
     * Corrected typo _HB_ITEM => HB_ITEM in type casting.

From harbour@lists.harbour-project.org  Mon Jan  8 17:39:02 2001
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Mon Jan  8 17:39:02 2001
Subject: [Harbour] subclassing and hidden methods (JF?)
References: <200101082120.f08LKLn21928@ev6.be.wanadoo.com>
Message-ID: <3A5A4164.A43B4BB1@libero.it>

Thank you very much and best wishes to you as well.

regards.


JF Lefebvre ha scritto:
> 
> Hi Maurillio,
> 
> First of all, I wish you a happy new year.
> 
> I just CVSed some modification where I temporary released the
> HIDDEN scoping check to allow a Build 0.36 to be done. I also
> added all needed type castings and file reference to the VC++
> support. I continue to investigate for a full ::Class message but I'm
> 100 % busy at this time so ... (same for a real full trace between
> class to class)
> 
> From:                   Maurilio Longo <maurilio.longo@libero.it>
> Organization:           Team OS/2 Italia
> To:                     harbour@lists.harbour-project.org
> Subject:                [Harbour] subclassing and hidden methods (JF?)
> Send reply to:          harbour@lists.harbour-project.org
>         <mailto:harbour-request@lists.harbour-project.org?subject=subscribe>
>         <mailto:harbour-request@lists.harbour-project.org?subject=unsubscribe>
> Date sent:              Mon, 11 Dec 2000 21:39:36 +0100
> 
> > Hi,
> >
> > after my latest changes TBrowse class has a few hidden methods and
> > properties. I have a class which is derived from TBrowse.
> >
> > When I try to create an instance of this class I get this error if I
> > don't remove HIDDEN: clause inside class definition (lHitTop is a hidden
> > property).
> >
> >
> > Error BASE/1005  Message not found: TSCEGLIQUERY:_LHITTOP
> > Called from __ERRRT_SBASE(0)
> > Called from TSCEGLIQUERY:ERROR(155)
> > Called from __EVAL(84)
> > Called from TSCEGLIQUERY:MSGNOTFOUND(0)
> > Called from TSCEGLIQUERY:_LHITTOP(148)
> > Called from TSCEGLIQUERY:NEW(193)
> > Called from TSCEGLIQUERY:NEW(146)
> > Called from TSCEGLIQUERY:NEW(24)
> > Called from TSQLEDITOR:SELEZIONAQUERY(145)
> > Called from TSQLEDITOR:KEYBOARDHOOK(114)
> > Called from TSQLEDITOR:EDIT(922)
> > Called from MAIN(64)
> >
> >
> > PS. To see this error I had to comment out line 255 of tclass.prg (as
> > suggested here by JF) or I get an endless loop inside tclass.prg.
> >
> > Is this a problem due to this change to tclass.prg or a problem on its
> > own?
> >
> > Note also that call stack sees three TSCEGLIQUERY:NEW() calls but at
> > least one of them should be TBROWSE:NEW().
> >
> >
> > regards.
> >
> >
> > --
> >
> >  __________
> > |  |  | |__| md2520@mclink.it
> > |_|_|_|____| Team OS/2 Italia
> > _______________________________________________
> > Harbour mailing list
> > Harbour@lists.harbour-project.org
> > http://www.matrixlist.com/mailman/listinfo/harbour
> >
> > Thank you for participating in The Harbour Project.  Be sure to check
> > http://www.Harbour-Project.org
> >
> >
> 
> Best regards,
> 
> J. Lefebvre,
> Bruxelles,
> Belgium
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Mon Jan  8 20:38:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Mon Jan  8 20:38:02 2001
Subject: [Harbour] preprocessor bug ?
In-Reply-To: <002401c0793a$9aa2d2c0$0f2aa8c0@antonio>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEHNDIAA.ron@profit-master.com>

Antonio,

Fixed! Uploading in few minutes.

I don't think it *ever* worked like your sample. It was/is working OK if
*no* space before ')' like:

   local aDrivers := Drivers( ID_DRIVERS)
                                        ^
IAE, now it is fixed.

Ron

> This was working fine, but now is not:
>
> #translate DRIVERS(<x,...>)  => {<(x)>}
> #define ID_DRIVERS DbfNtx, DbfCdx
>
> function main()
>
>    local aDrivers := Drivers( ID_DRIVERS )
>
> return nil
>
> Thanks!
>
> Antonio


From harbour@lists.harbour-project.org  Mon Jan  8 20:47:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Mon Jan  8 20:47:02 2001
Subject: [Harbour] ChangeLog 2001-01-08 17:45 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEHNDIAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKIEHNDIAA.ron@profit-master.com>

2001-01-08 17:45 UTC-0800 Ron Pinkas <ron@profit-master.com>
   * source/pp/ppcore.c
     ! Fixed ')' as expression terminator in state STATE_ID_END


From harbour@lists.harbour-project.org  Mon Jan  8 20:49:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Mon Jan  8 20:49:02 2001
Subject: [Harbour] Re: New Build 0.36
In-Reply-To: <1357823540.20010106120619@belacy.belgorod.su>
Message-ID: <LOBBKAFMMFGJIKLMEPAKMEHNDIAA.ron@profit-master.com>

Alexander,

> RP> 2. Optional secondary last clause to function:
> 
> RP> #TRANSLATE Fun( <x> [,<y>] ) => OtherFun( <x> )
> RP>    Fun( "Ok", "optional provided" )
> RP>    Fun( "Not Processed" )
> 
>  I'll review it.

See: 2001-01-08 17:45 UTC-0800 Ron Pinkas <ron@profit-master.com> 

It fixed this bug too :-)

Ron


From harbour@lists.harbour-project.org  Mon Jan  8 20:52:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Mon Jan  8 20:52:02 2001
Subject: [Harbour] Bug in Harbour Pre-Processor
In-Reply-To: <001e01c05fc2$c0f74aa0$08f4c4a1@gustavo>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEHODIAA.ron@profit-master.com>

Gustavo,

Fixed.

Ron

> I am testing harbour and find this bug in the pre-processor
> (well,comparated
> with clipper).
>
> //
> // Test harbour 010.1
> //
> #xcommand Test( <Par1> [,<ParN>] ) => QQOut( <Par1> )[;QQOut(<ParN>)]
> Test( Var1 ) // Line 1
> Test( Var1, Var2 ) // Line 2
> // eof
>
> Run...
>
> In clipper i have it:
>
> QQOut( Var1 )
> QQOut( Var1 );QQOut(Var2)
>
> In harbour i have it:
>
> Test(Var1 ) // <- Note
> QQOut(Var1 );QQOut(Var2)
> ****
> To fix it, i need to create a new command without the use of optional
> parameters.
>
> Regards,
> --
> Gustavo A. González M.
> gonzalezgustavo@cantv.net
> Caracas - Venezuela


From harbour@lists.harbour-project.org  Tue Jan  9 00:31:02 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Tue Jan  9 00:31:02 2001
Subject: [Harbour] preprocessor bug ?
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEHNDIAA.ron@profit-master.com>
Message-ID: <000501c079fb$daa87840$0f2aa8c0@antonio>

Ron,

> Fixed! Uploading in few minutes.

Thanks a lot!

Antonio



From harbour@lists.harbour-project.org  Tue Jan  9 02:34:02 2001
From: harbour@lists.harbour-project.org (Patrick Mast)
Date: Tue Jan  9 02:34:02 2001
Subject: [Harbour] preprocessor bug ?
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEHNDIAA.ron@profit-master.com>
Message-ID: <NCBBJKNMIDPJNLJCHCHIMEDNFMAA.harbour@winfakt.com>

Thanks Ron, for again a great job!!

regards,

Patrick Mast
www.Patrick.Be.kz


> -----Oorspronkelijk bericht-----
> Van: harbour-admin@lists.harbour-project.org
> [mailto:harbour-admin@lists.harbour-project.org]Namens Ron Pinkas
> Verzonden: dinsdag 9 januari 2001 2:39
> Aan: harbour@lists.harbour-project.org
> Onderwerp: RE: [Harbour] preprocessor bug ?
> 
> 
> Antonio,
> 
> Fixed! Uploading in few minutes.
> 
> I don't think it *ever* worked like your sample. It was/is working OK if
> *no* space before ')' like:
> 
>    local aDrivers := Drivers( ID_DRIVERS)
>                                         ^
> IAE, now it is fixed.
> 
> Ron
> 
> > This was working fine, but now is not:
> >
> > #translate DRIVERS(<x,...>)  => {<(x)>}
> > #define ID_DRIVERS DbfNtx, DbfCdx
> >
> > function main()
> >
> >    local aDrivers := Drivers( ID_DRIVERS )
> >
> > return nil
> >
> > Thanks!
> >
> > Antonio
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 

From harbour@lists.harbour-project.org  Tue Jan  9 08:43:02 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Tue Jan  9 08:43:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <3120030273.20010104233133@orel.ru>
References: <E14D8K2-0006VE-00@tts.orel.ru>
Message-ID: <3A5B2470.2819.3A816FF@localhost>

On 4 Jan 2001, at 23:31, Shashkov wrote:

> About a month ago I came across this project and I became very much
> interested in it. But unfortunately, when I started considering this
> project in detail, I found many errors and I understood that there is
> still much to be carried out.

  Yes, Harbour is not finished yet. I am working on DBFCDX support - I 
think I will be ready at the beginning of February with it.

> //      ULONG ulCnt = s_globalLastFree;
> // s_globalLastFree points to element array s_globalTable, which has
> // never been initialized.

  OK.

> // The element s_globalTable[ 0 ] is reserved and that is why it is
> // necessary to add the following conditions:
>       if( hVar )

  OK.

> //   pValue = s_globalTable + hValue;         // Removed line
> 
>    pValue->counter = 1;
> 
> //   pValue->item.type = HB_IT_NIL;           // This is line was
>                                               // added at 1.27
>                                               // 2000/11/29, but this
>                                               // does not prevent the
>                                               // loss of the point of
>                                               // the allocated memory
>                                               // when s_globalFreeCnt
>                                               // does not equal to 0,
>                                               // that is, pValue is
>                                               // already an
>                                               // initialized element.
>    if( pSource )
>    {
>       if( bTrueMemvar )
>          hb_itemCopy( &pValue->item, pSource );
>       else
>          memcpy( &pValue->item, pSource, sizeof( HB_ITEM ) );
>    }
>    else
> //      pValue->item.type = HB_IT_NIL;        // Removed line
>       hb_itemClear( &pValue->item );          // This line goes

  I disagree here. The current code in the CVS is a little different 
(there is no 'else' part in the last quoted lines) and it is the correct 
one. pValue->item.type has to be set to NIL always - pValue cannot be an 
initialized value because it will cause that a single value will be 
shared by more then one variable. pValue must always point into a free 
memvar value. This means that pValue must point into a value that was 
just allocated or into a value that will be reused. The value can be 
reused only in a case when no memvar variable uses it (counter is equal 
to 0).

>             // New added line !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
>             pDynSym->pSymbol = pSymbol;
>             // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

  Great! This will finally cure Brian's problems with LOOKUP function 
called from macro :)

> Module \source\vm\macro.c
> Function hb_xrealloc() may return another pointer than the argument
> and that is why the expression ulCharsLeft = ulResStrLen - ( pHead - szResult )
> is incorrect, because  pHead contains the pointer related to the
> initial meaning of szRezult !!!!!!

  OK.

> ERRCODE hb_waClearLocate( AREAP pArea )
> ERRCODE hb_waSetLocate( AREAP pArea, LPDBSCOPEINFO pScopeInfo )

  OK.

> //      hb_itemPutPtr( pArea->valResult, ( void * ) pMacro );   old line
> // New line:
>       pArea->valResult = hb_itemPutPtr( pArea->valResult, ( void * ) pMacro );

  OK.

  Thanks for your contribution I will commit fixes, I hope we will meet 
here more often :)

Regards, Ryszard

From harbour@lists.harbour-project.org  Tue Jan  9 09:56:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Jan  9 09:56:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <3A5B2470.2819.3A816FF@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKIEHPDIAA.ron@profit-master.com>

Ryszard,

>   Yes, Harbour is not finished yet. I am working on DBFCDX support - I
> think I will be ready at the beginning of February with it.

Great News!!!

>   Thanks for your contribution I will commit fixes, I hope we will meet
> here more often :)

I think it was already posted by Alexander (so please check the CVS for the
point you didn't agree with).

Happy New Year,

Ron



From harbour@lists.harbour-project.org  Tue Jan  9 10:17:01 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Tue Jan  9 10:17:01 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <3A5B2470.2819.3A816FF@localhost>
References: <3120030273.20010104233133@orel.ru>
Message-ID: <3A5B3A11.17902.3FC9501@localhost>

On 9 Jan 2001, at 14:47, Ryszard Glab wrote:

>   Thanks for your contribution I will commit fixes, I hope we will meet 
> here more often :)

Fixed. See Changelog 2001-01-09 16;15 UTC+0100

Regards, Ryszard

From harbour@lists.harbour-project.org  Tue Jan  9 13:16:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Jan  9 13:16:02 2001
Subject: [Harbour] ChangeLog 2001-01-09 10:00 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <3A5B3A11.17902.3FC9501@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKAEIADIAA.ron@profit-master.com>

2001-01-09 10:00 UTC-0800 Ron Pinkas <ron@profit-master.com>
   * contrib/dot/pp.prg
     * Fixed bug with #include and INCLUDE Env Var processing.
     % Removed some unused vars.

From harbour@lists.harbour-project.org  Tue Jan  9 13:48:01 2001
From: harbour@lists.harbour-project.org (Sid Saylors)
Date: Tue Jan  9 13:48:01 2001
Subject: [Harbour] ChangeLog 2001-01-09 10:00 UTC-0800 Ron Pinkas <ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKAEIADIAA.ron@profit-master.com>
Message-ID: <000701c07a6c$af101fa0$aa4c0418@elcjn1.sdca.home.com>

source\vm\estack.c:
Error E2141 source\vm\estack.c 347: Declaration syntax error
*** 1 errors in Compile ***

** error 1 ** deleting obj\b32\estack.obj

Sid........



----- Original Message -----
From: "Ron Pinkas" <ron@profit-master.com>
To: <harbour@lists.harbour-project.org>
Sent: Tuesday, January 09, 2001 10:16 AM
Subject: [Harbour] ChangeLog 2001-01-09 10:00 UTC-0800 Ron Pinkas
<ron@profit-master.com>


> 2001-01-09 10:00 UTC-0800 Ron Pinkas <ron@profit-master.com>
>    * contrib/dot/pp.prg
>      * Fixed bug with #include and INCLUDE Env Var processing.
>      % Removed some unused vars.
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Tue Jan  9 14:20:04 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Tue Jan  9 14:20:04 2001
Subject: [Harbour] Re: My opinion about the Harbour project.
In-Reply-To: <15014381855.20010106135536@belacy.belgorod.su>
References: <3120030273.20010104233133@orel.ru>
Message-ID: <3A5B732E.23293.4DBAB18@localhost>

On 6 Jan 2001, at 13:55, Alexander S.Kresin wrote:

>  I think, that's Ok too, but don't sure for what purposes
>  s_globalTable[ 0 ] is reserved ( Ryszard ? ).

  Memvar handle equal to 0 is used to distinguish uninitialized memvars. 
Only variables created with PRIVATE statement or created with the 
assignment have handle > 0.
  s_globalTable[ hMemvarHandle ] is used quite often then we are not 
decreasing a handle during table access hence s_globalTable[ 0 ] cannot 
be used.

Regards, Ryszard


From harbour@lists.harbour-project.org  Tue Jan  9 23:54:02 2001
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Tue Jan  9 23:54:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <3A5B2470.2819.3A816FF@localhost>
References: <3120030273.20010104233133@orel.ru>
Message-ID: <3A5BA46E.29.10C1F9E7@localhost>

On 9 Jan 2001, at 14:47, Ryszard Glab wrote:

> On 4 Jan 2001, at 23:31, Shashkov wrote:
> 
> > About a month ago I came across this project and I became very much
> > interested in it. But unfortunately, when I started considering this
> > project in detail, I found many errors and I understood that there is
> > still much to be carried out.
> 
>   Yes, Harbour is not finished yet. I am working on DBFCDX support - I 
> think I will be ready at the beginning of February with it.

Hi, Ryszard.

We are thinking about a new code release. We could do a release 
now and another when you feel CDX support is solid, or we can 
wait for CDX for a release.

I'm thinking that two releases is ok. What do you feel?


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Wed Jan 10 02:13:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Jan 10 02:13:02 2001
Subject: [Harbour] ChangeLog 2001-01-09 23:10 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <3A5BA46E.29.10C1F9E7@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKKEICDIAA.ron@profit-master.com>

2001-01-09 23:10 UTC-0800 Ron Pinkas <ron@profit-master.com>
   * source/pp/ppcomp.c
   * source/pp/ppcore.c
     * Disabled all processing other than \n when processing HB_INLINE.

From harbour@lists.harbour-project.org  Wed Jan 10 02:24:02 2001
From: harbour@lists.harbour-project.org (Patrick Mast)
Date: Wed Jan 10 02:24:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <3A5BA46E.29.10C1F9E7@localhost>
Message-ID: <NCBBJKNMIDPJNLJCHCHIIEFEFMAA.harbour@winfakt.com>

Phil,

Can we make a short list of WhatsNew?

regards,

Patrick Mast
www.Patrick.Be.kz



> We are thinking about a new code release. We could do a release 
> now and another when you feel CDX support is solid, or we can 
> wait for CDX for a release.
> I'm thinking that two releases is ok. What do you feel?

From harbour@lists.harbour-project.org  Wed Jan 10 02:31:02 2001
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Wed Jan 10 02:31:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <NCBBJKNMIDPJNLJCHCHIIEFEFMAA.harbour@winfakt.com>
References: <3A5BA46E.29.10C1F9E7@localhost>
Message-ID: <3A5BC946.9230.1151EBA5@localhost>

On 10 Jan 2001, at 8:23, Patrick Mast wrote:

> Phil,
> 
> Can we make a short list of WhatsNew?

The individual contributors should chip in, but I'd think inline C code 
and a dot prompt should be right up there...


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Wed Jan 10 02:42:02 2001
From: harbour@lists.harbour-project.org (Patrick Mast)
Date: Wed Jan 10 02:42:02 2001
Subject: [Harbour] To the Captains:
In-Reply-To: <3A5BC946.9230.1151EBA5@localhost>
Message-ID: <NCBBJKNMIDPJNLJCHCHIIEFFFMAA.harbour@winfakt.com>

Hi,

We need a list for the new upcoming 0.36 release. Please comlete this list:

WhatsNew in 0.36:
- Inline C code
- Dot prompt
- More support for ADS databases

regards,

Patrick Mast
www.Patrick.Be.kz


From harbour@lists.harbour-project.org  Wed Jan 10 04:05:04 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Wed Jan 10 04:05:04 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <3A5BA46E.29.10C1F9E7@localhost>
References: <3A5B2470.2819.3A816FF@localhost>
Message-ID: <3A5C347F.9930.2BB810A@localhost>

On 9 Jan 2001, at 23:53, Phil Barnett wrote:

> We are thinking about a new code release. We could do a release 
> now and another when you feel CDX support is solid, or we can 
> wait for CDX for a release.

  I think we can release a new build without waiting for a new CDX code. 
My code is currently in 'chaotic' state so it shouldn't be released now. 
Anyway I plan to release it in a separate 'hrdd' subdirectory because it 
breaks some Clipper compatibility issues (see my next message).

> 
> I'm thinking that two releases is ok. What do you feel?

  Yes, I agree although I think we should clarify the latest Ron's 
HB_INLINE addition before a new release.

Regards, Ryszard

From harbour@lists.harbour-project.org  Wed Jan 10 04:53:03 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Wed Jan 10 04:53:03 2001
Subject: [Harbour] To the Captains:
In-Reply-To: <NCBBJKNMIDPJNLJCHCHIIEFFFMAA.harbour@winfakt.com>
Message-ID: <000401c07aea$f5982a20$0f2aa8c0@antonio>

Patrick,

- The stack new architecture

> We need a list for the new upcoming 0.36 release. Please comlete 
> this list:
> 
> WhatsNew in 0.36:
> - Inline C code
> - Dot prompt
> - More support for ADS databases



From harbour@lists.harbour-project.org  Wed Jan 10 05:00:03 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Wed Jan 10 05:00:03 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <3A5C347F.9930.2BB810A@localhost>
Message-ID: <000501c07aeb$f6d17800$0f2aa8c0@antonio>

Ryszard,

> Yes, I agree although I think we should clarify the latest Ron's 
> HB_INLINE addition before a new release.

I have proposed a different approach, because the actual one
is not a 'structured programming' language implementation.

I mean, the HB_INLINE() way, basically defines a function 
inside another function. Many people won't understand that.
Very confusing if you have to call it from different places
in the same PRG (besides this, you don't know its 'automatic'
name). 

Ron has implemented a very good infrastructure, but we should
go for a c_function or so declaration, so each function has
its own code and are separate in the PRG.

Just my opinion.

Antonio


From harbour@lists.harbour-project.org  Wed Jan 10 05:37:02 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Wed Jan 10 05:37:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <000501c07aeb$f6d17800$0f2aa8c0@antonio>
References: <3A5C347F.9930.2BB810A@localhost>
Message-ID: <3A5C4A6D.8926.3112BE9@localhost>

On 10 Jan 2001, at 10:59, Antonio Linares wrote:

> I have proposed a different approach, because the actual one
> is not a 'structured programming' language implementation.

  Yes, additionally it is not a language feature - it is a compiler 
feature rather. For this reason I think that some kind of #pragma should 
be used, something like:

#pragma INLINE C {
....C code here...
#pragma INLINE C }

  This will allow to add inline code for other supported backend 
languages (although it seems that there will be no support for other 
languages then C)

> I mean, the HB_INLINE() way, basically defines a function 
> inside another function. Many people won't understand that.
> Very confusing if you have to call it from different places
> in the same PRG (besides this, you don't know its 'automatic'
> name). 
> 
> Ron has implemented a very good infrastructure, but we should
> go for a c_function or so declaration, so each function has
> its own code and are separate in the PRG.

  I agree here.

Reagrds, Ryszard

From harbour@lists.harbour-project.org  Wed Jan 10 05:48:01 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Wed Jan 10 05:48:01 2001
Subject: [Harbour] To the Captains:
Message-ID: <200101100547_MC2-C12D-B253@compuserve.com>

Hi,

Two releases would be fine IMO.  I'm hoping I can offer at least some
demos of C4W32 and having something frozen to target them at would be
nice. :-)

"WhatsNew in 0.36:"

- improved (fixed) stack handling

(a better phrase would be good but the point is that the previous
stack was a problem and the new one is a major step forward)

- improved OOP

I'm not sure SUPER works quite right in all cases yet, though.  Or
PROCNAME (for the same underlying reason).  (Yes, Jean knows :-)

Thanks to all. :-)

John.

From harbour@lists.harbour-project.org  Wed Jan 10 06:08:02 2001
From: harbour@lists.harbour-project.org (harbour@lists.harbour-project.org)
Date: Wed Jan 10 06:08:02 2001
Subject: [Harbour] My opinion about the Harbour project.
Message-ID: <OFFDBD83AC.BC00377D-ONCA2569D0.003D3990@dingoblue.net.au>

Why not go with C++'s solution:

extern "C" {
   /* c code here */
}

This allows other-language extensions in this form:

extern "pascal" {
  { pascal code here }
}

of course, "extern" probably isn't the right word. Perhaps "inline".

Mab





"Ryszard Glab" <rglab@imid.med.pl>
Sent by: harbour-admin@lists.harbour-project.org
10/01/01 09:41 PM
Please respond to harbour

 
        To:     harbour@lists.harbour-project.org
        cc: 
        Subject:        RE: [Harbour] My opinion about the Harbour project.

On 10 Jan 2001, at 10:59, Antonio Linares wrote:

> I have proposed a different approach, because the actual one
> is not a 'structured programming' language implementation.

  Yes, additionally it is not a language feature - it is a compiler 
feature rather. For this reason I think that some kind of #pragma should 
be used, something like:

#pragma INLINE C {
....C code here...
#pragma INLINE C }

  This will allow to add inline code for other supported backend 
languages (although it seems that there will be no support for other 
languages then C)

> I mean, the HB_INLINE() way, basically defines a function 
> inside another function. Many people won't understand that.
> Very confusing if you have to call it from different places
> in the same PRG (besides this, you don't know its 'automatic'
> name). 
> 
> Ron has implemented a very good infrastructure, but we should
> go for a c_function or so declaration, so each function has
> its own code and are separate in the PRG.

  I agree here.

Reagrds, Ryszard
_______________________________________________
Harbour mailing list
Harbour@lists.harbour-project.org
http://www.matrixlist.com/mailman/listinfo/harbour

Thank you for participating in The Harbour Project.  Be sure to check
http://www.Harbour-Project.org





From harbour@lists.harbour-project.org  Wed Jan 10 06:31:03 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Wed Jan 10 06:31:03 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <000501c07aeb$f6d17800$0f2aa8c0@antonio>; from alinares@fivetech.com on Wed, Jan 10, 2001 at 10:59:04AM +0100
References: <3A5C347F.9930.2BB810A@localhost> <000501c07aeb$f6d17800$0f2aa8c0@antonio>
Message-ID: <20010110102656.D9113@hagbard.davep.org>

On Wed, Jan 10, 2001 at 10:59:04AM +0100, Antonio Linares wrote:

> Ron has implemented a very good infrastructure, but we should go for a
> c_function or so declaration, so each function has its own code and are
> separate in the PRG.

I must admit that I half agree with you in that I almost fail to see the
advantage of being able to declare an anonymous function within the body of
another function (with recognition that I've just, almost, described
codeblocks but they do have utility beyond being used in place) when the
only reason for doing this is that it's written in C.

*However*, that said, there is some use to being able to declare a function
that doesn't pollute the global namespace and I'm guessing that Ron's
current method seeks to allow for that. Your suggestion of only allowing for
separate function declaration would obviously cater for this if:

,----
| CFUNCTION <name>
`----

and 

,----
| STATIC CFUNCTION <name>
`----

were catered for (yeah, I don't like underscores in keywords, it looks
messy).

I'd also add that I think calling any of this "inline C" is slightly
misleading. I don't know what a better term is but inline C would suggest to
people that you can do stuff like:

,----
| Function Foo()
| Local cVar := "This is a test"
| 
|   #inline C
|   some_C_function_that_works_on_a_var( cVar );
|   #end
| 
| Return( cVar )
`----

IOW, this isn't really inline C, it's just a method of having C functions
and Clipper functions declared in the same source. That's not to say that
this approach doesn't have utility (it does), I'm only pointing out that it
isn't as inline as some people might expect given inline ASM in some C
compilers and inline C in FlagShip (which, IIRC, does do something much
closer to the example I give above).

-- 
Dave Pearson                        |   w3ng - The WWW Norton Guide reader.
http://www.davep.org/               |     eg - Norton Guide reader for Linux.
http://www.davep.org/clipper/       |    weg - Norton Guide reader for Windows.
http://www.davep.org/norton-guides/ | dgscan - DGROUP scanner for Clipper.

From harbour@lists.harbour-project.org  Wed Jan 10 08:37:02 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Wed Jan 10 08:37:02 2001
Subject: [Harbour] C functions inside a PRG
In-Reply-To: <20010110102656.D9113@hagbard.davep.org>
Message-ID: <001401c07b0a$2c949bc0$0f2aa8c0@antonio>

Dave,

> IOW, this isn't really inline C, it's just a method of having C functions
> and Clipper functions declared in the same source. 

I fully agree with you. This is not INLINE C.

And, more over, if we allow to declare C functions inside
a PRG module, those functions _must_ have a known name, 
and based on structured programming, we may be able to call
the same C function from different places as many times
as we may need.

Structured programming: building blocks, not spagetthi code.

Antonio


From harbour@lists.harbour-project.org  Wed Jan 10 10:08:03 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Wed Jan 10 10:08:03 2001
Subject: [Harbour] C functions inside a PRG
In-Reply-To: <001401c07b0a$2c949bc0$0f2aa8c0@antonio>; from alinares@fivetech.com on Wed, Jan 10, 2001 at 02:35:19PM +0100
References: <20010110102656.D9113@hagbard.davep.org> <001401c07b0a$2c949bc0$0f2aa8c0@antonio>
Message-ID: <20010110150502.J9113@hagbard.davep.org>

On Wed, Jan 10, 2001 at 02:35:19PM +0100, Antonio Linares wrote:

> And, more over, if we allow to declare C functions inside a PRG module,
> those functions _must_ have a known name, and based on structured
> programming, we may be able to call the same C function from different
> places as many times as we may need.

Well, I wouldn't quite put it in these terms but, yes, given that this is
really a "stick this C in the resulting C file" solution it makes sense that
people should be able to actually give the functions names.

One other thing that doesn't appear to have been touched on here is how all
of this sits with different output formats. I mean, doesn't this "inline C"
only really work if you're generating C code? If so, shouldn't the compiler
generate an error when I try and do:

,----
| davep@hagbard:~/temp$ harbour inline_c.prg -go
| Harbour Compiler 0.35j (Build 35) (2000.11.30) (Flex)
| Copyright 1999-2000, http://www.harbour-project.org
| Compiling 'inline_c.prg'...
| Lines 30, Functions/Procedures 2
| Generating Windows/DOS OBJ32 output to 'inline_c.obj'... Done.
`----

silently ignoring the code seems like a really bad idea. This, BTW, is
another reason why I think calling this "inline C" and making a big feature
out of it is a really bad idea.

The more I think about it the more I think this should be held back for at
least one release because I'm not sure it actually solves a known problem
(or caters for an obvious requirement) and the obvious requirements that it
might cater for can't be solved in a portable way.

I must admit, personally, I'm starting to think this isn't really a good
thing to have in harbour at all, at least, not in this form. I'm starting to
fail to see what utility it provides other than to save a .c file in some
situations depending on how people might compile the code and what target
format they might be using.

At the very least it should be disabled unless your target format is a C
file and it should be made very clear that it's really a compiler output
hack, not an actual implementation of something cat could reasonably be
called inline C.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Wed Jan 10 10:37:02 2001
From: harbour@lists.harbour-project.org (Juan Agustin Barriga)
Date: Wed Jan 10 10:37:02 2001
Subject: [Harbour] C functions inside a PRG
References: <20010110102656.D9113@hagbard.davep.org> <001401c07b0a$2c949bc0$0f2aa8c0@antonio> <20010110150502.J9113@hagbard.davep.org>
Message-ID: <006601c07b23$62598680$456410ac@jharrier>

At last I hear something reasonable about this "inline C" stuff! As bad as
"inline assembler" was in it's days (cutted off ALL inter-CPU portability)
it's this new one. If someone wants to put some C code into it's Harbour
app, why not just a .C that gets compiled with all the other (generated)
code? Can you access something inlining that you cannot otherwise? Else it's
no use. Anybody using it will be locked on the "C" output (which,
gratefully, doesn't mean it will not compile on many platforms). Or so I
think.

Harrier

----- Original Message -----
From: "Dave Pearson" <davep@davep.org>
To: <harbour@lists.harbour-project.org>
Sent: Wednesday, January 10, 2001 11:05 AM
Subject: Re: [Harbour] C functions inside a PRG
>
.... (deleted)
>
> I must admit, personally, I'm starting to think this isn't really a good
> thing to have in harbour at all, at least, not in this form. I'm starting
to
> fail to see what utility it provides other than to save a .c file in some
> situations depending on how people might compile the code and what target
> format they might be using.
>
> At the very least it should be disabled unless your target format is a C
> file and it should be made very clear that it's really a compiler output
> hack, not an actual implementation of something cat could reasonably be
> called inline C.
>



From harbour@lists.harbour-project.org  Wed Jan 10 11:37:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Jan 10 11:37:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <20010110102656.D9113@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEIGDIAA.ron@profit-master.com>

Dave, Antonio, All,

Apparently, there is some confusion regarding the INLINE C.

1. I do believe it is an INLINE C, because that's exactly what it is. The
inline block is not just declared within its parent PRG Function, it is also
executed IN-PLACE.

2. I absolutely agree with Antonio, that we should add 'C' Functions. Such C
IN-FILE functions, should have support for an optional qualifier STATIC. As
I said previously, this can very easily be added now, and was my next
natural extension.

3. IMO, the 2 forms, are *not* mutually exclusive. Both should be supported
as they serve different functionality! IOW, there maybe numerous situations,
where developer wants C manipulation, which is *only* executed in the
context of a specific function, and will *never* be needed/called from
elsewhere. I fail to see what qualify this as "spaghetti code".

4. I also agree with Ryszard, that this can be a #pragma. I don't have any
preference on this issue, and thus no objection to Ryszard's suggestion.

5. I was considering the issue of the different output generation, and
decided not to take any explicit action, for 2 reasons:

   a. As it stands now, when using *non* C output, there *will* be a LINK
TIME Error:

      Missing HB_INLINE_N() (where N is 0-9,A-Z).

      This should provide sufficient warning, and allows the developer to
resolve the issue,   by adding such function, in a manner supported by the
output format.

   b. I was about to suggest, that the more complete solution, should have a
PRE DEFINED #define like __OUTPUT__ (where OUTPUT is 1 of supported forms),
so that a PRG developer can do something like this:

#ifdef __C__
  ...
#else
  #ifdef __HRB__
    ...
  #else
    #error This program requires compilation to C or HRB. Please use /gc[n]
or /gh!
  #endif
#endif

Ron

> > Ron has implemented a very good infrastructure, but we should go for a
> > c_function or so declaration, so each function has its own code and are
> > separate in the PRG.
>
> I must admit that I half agree with you in that I almost fail to see the
> advantage of being able to declare an anonymous function within
> the body of
> another function (with recognition that I've just, almost, described
> codeblocks but they do have utility beyond being used in place) when the
> only reason for doing this is that it's written in C.
>
> *However*, that said, there is some use to being able to declare
> a function
> that doesn't pollute the global namespace and I'm guessing that Ron's
> current method seeks to allow for that. Your suggestion of only
> allowing for
> separate function declaration would obviously cater for this if:
>
> ,----
> | CFUNCTION <name>
> `----
>
> and
>
> ,----
> | STATIC CFUNCTION <name>
> `----
>
> were catered for (yeah, I don't like underscores in keywords, it looks
> messy).
>
> I'd also add that I think calling any of this "inline C" is slightly
> misleading. I don't know what a better term is but inline C would
> suggest to
> people that you can do stuff like:
>
> ,----
> | Function Foo()
> | Local cVar := "This is a test"
> |
> |   #inline C
> |   some_C_function_that_works_on_a_var( cVar );
> |   #end
> |
> | Return( cVar )
> `----
>
> IOW, this isn't really inline C, it's just a method of having C functions
> and Clipper functions declared in the same source. That's not to say that
> this approach doesn't have utility (it does), I'm only pointing
> out that it
> isn't as inline as some people might expect given inline ASM in some C
> compilers and inline C in FlagShip (which, IIRC, does do something much
> closer to the example I give above).
>
> --
> Dave Pearson                        |   w3ng - The WWW Norton
> Guide reader.
> http://www.davep.org/               |     eg - Norton Guide
> reader for Linux.
> http://www.davep.org/clipper/       |    weg - Norton Guide
> reader for Windows.
> http://www.davep.org/norton-guides/ | dgscan - DGROUP scanner for Clipper.


From harbour@lists.harbour-project.org  Wed Jan 10 11:58:02 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Wed Jan 10 11:58:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEIGDIAA.ron@profit-master.com>; from ron@profit-master.com on Wed, Jan 10, 2001 at 08:37:32AM -0800
References: <20010110102656.D9113@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKCEIGDIAA.ron@profit-master.com>
Message-ID: <20010110165732.L9113@hagbard.davep.org>

On Wed, Jan 10, 2001 at 08:37:32AM -0800, Ron Pinkas wrote:

> Apparently, there is some confusion regarding the INLINE C.
> 
> 1. I do believe it is an INLINE C, because that's exactly what it is. The
> inline block is not just declared within its parent PRG Function, it is also
> executed IN-PLACE.

But not in the way that most people would expect "inline C" to work, that's
what I'm getting at. What you've got here is simply an ability to have the
text of an "external" C function embedded within a PRG, at the moment within
other code. As I've documented elsewhere, this is different from what most
other examples of "inline" mean.

> 5. I was considering the issue of the different output generation, and
> decided not to take any explicit action, for 2 reasons:
> 
>    a. As it stands now, when using *non* C output, there *will* be a LINK
> TIME Error:
> 
>       Missing HB_INLINE_N() (where N is 0-9,A-Z).
> 
>       This should provide sufficient warning, and allows the developer to
> resolve the issue, by adding such function, in a manner supported by the
> output format.

I think leaving this until linktime it wrong. I'd strongly lobby for this to
be a compile time error because that's where the error is, at compile time.
Someone is attempting to compile code that can't be compiled.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Wed Jan 10 12:06:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Jan 10 12:06:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <3A5C4A6D.8926.3112BE9@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKEEIHDIAA.ron@profit-master.com>

> #pragma INLINE C {
> ....C code here...
> #pragma INLINE C }
>
>   This will allow to add inline code for other supported backend
> languages (although it seems that there will be no support for other
> languages then C)

If there are no objections, I'll change the INLINE syntax as per above, and
move related code from lexers to PP.

> > I mean, the HB_INLINE() way, basically defines a function
> > inside another function. Many people won't understand that.
> > Very confusing if you have to call it from different places
> > in the same PRG (besides this, you don't know its 'automatic'
> > name).
> >
> > Ron has implemented a very good infrastructure, but we should
> > go for a c_function or so declaration, so each function has
> > its own code and are separate in the PRG.
>
>   I agree here.

Clarification: The INLINE feature was *never* intended to be called from
"different places". Or else it wouldn't be called INLINE!!!

If there are no objections, I'll add:

#pragma INFILE C
...
#pragma INFILE C

Ron


From harbour@lists.harbour-project.org  Wed Jan 10 12:17:02 2001
From: harbour@lists.harbour-project.org (Shashkov)
Date: Wed Jan 10 12:17:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <E14G28k-00058W-00@tts.orel.ru>
References: <E14G28k-00058W-00@tts.orel.ru>
Message-ID: <2041021439.20010110201636@orel.ru>

Ryszard,

>  I disagree here. The current code in the CVS is a little different
>(there is no 'else' part in the last quoted lines) and it is the correct
>one. pValue->item.type has to be set to NIL always - pValue cannot be an
>initialized value because it will cause that a single value will be
>shared by more then one variable. pValue must always point into a free
>memvar value. This means that pValue must point into a value that was
>just allocated or into a value that will be reused. The value can be
>reused only in a case when no memvar variable uses it (counter is equal
>to 0).

I agree. However, here are my comments, though I don't insist on
them.
Increasing counter appears only in the function
hb_memvarValueDecRef(). And before that the call of the following
function hb_itemClear( &pValue->item ) makes pValue->item->type equal
to NULL. Your suggestions do work, but when the algorithm is changed,
what I have described above may appear to be improper.


>  Yes, Harbour is not finished yet. I am working on DBFCDX support - I
>think I will be ready at the beginning of February with it.

I'm also trying to write DBFCDX support. ORDSETFOCUS(), ORDKEY(),
ORDNAME(), additions of the new records and the changed variants of
the initial ones are already written. But FOR condition and not-string
keys are not realized yet. Maybe what I'm doing is all in vain???


-- 
Best regards,
Alex Shashkov                            mailto:shashkov@orel.ru



From harbour@lists.harbour-project.org  Wed Jan 10 12:18:01 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Wed Jan 10 12:18:01 2001
Subject: [Harbour] in-file C
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKEEIHDIAA.ron@profit-master.com>
Message-ID: <000001c07b29$219a2680$0f2aa8c0@antonio>

Ron,

I do believe that talking about inline C is something
really confusing for a Clipper programmer.

It is not inline, as in fact you are building a function
and you supply parameters and receive a return value 
from it.

I propose to focus on a:

cfunction <name>()

and

static cfunction <name>()

I don't see any advantage in placing the C code inside
a PRG function, because it is not true, I mean, we are
running a virtual machine and there is no way to place
"inline C" there.

You have designed a very nice infrastructure. Simply
and bright. Now lets complete it.

Antonio


From harbour@lists.harbour-project.org  Wed Jan 10 12:19:03 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Jan 10 12:19:03 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <20010110165732.L9113@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKMEIHDIAA.ron@profit-master.com>

Dave,

> But not in the way that most people would expect "inline C" to
> work, that's
> what I'm getting at. What you've got here is simply an ability to have the
> text of an "external" C function embedded within a PRG, at the
> moment within
> other code. As I've documented elsewhere, this is different from what most
> other examples of "inline" mean.

I'm sorry, I don't get that!. I don't think the low level implementation
details are relevant. To me, it appears, and works, just as I would expect.
That is, the supplied C block will be executed at that point within the PRG.

Please explain, how is it different from what would be expected?

> > 5. I was considering the issue of the different output generation, and
> > decided not to take any explicit action, for 2 reasons:
> >
> >    a. As it stands now, when using *non* C output, there *will*
> be a LINK
> > TIME Error:
> >
> >       Missing HB_INLINE_N() (where N is 0-9,A-Z).
> >
> >       This should provide sufficient warning, and allows the
> developer to
> > resolve the issue, by adding such function, in a manner supported by the
> > output format.
>
> I think leaving this until linktime it wrong. I'd strongly lobby
> for this to
> be a compile time error because that's where the error is, at
> compile time.
> Someone is attempting to compile code that can't be compiled.

I believe the decision of Compile or Link Error, should be left to the
programmer, as per my 2nd [non quoted] point. The developer may have chosen
to provide the functionality as an INLINE block, in one kind of build, and
by means of a LIB Symbol, for another. It is *not* an error until the
symbol, will be determined ultimately missing.

Ron


From harbour@lists.harbour-project.org  Wed Jan 10 12:40:03 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Wed Jan 10 12:40:03 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKMEIHDIAA.ron@profit-master.com>; from ron@profit-master.com on Wed, Jan 10, 2001 at 09:20:19AM -0800
References: <20010110165732.L9113@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKMEIHDIAA.ron@profit-master.com>
Message-ID: <20010110173917.R9113@hagbard.davep.org>

On Wed, Jan 10, 2001 at 09:20:19AM -0800, Ron Pinkas wrote:
> Dave,
> 
> > But not in the way that most people would expect "inline C" to work,
> > that's what I'm getting at. What you've got here is simply an ability to
> > have the text of an "external" C function embedded within a PRG, at the
> > moment within other code. As I've documented elsewhere, this is
> > different from what most other examples of "inline" mean.
> 
> I'm sorry, I don't get that!. I don't think the low level implementation
> details are relevant. 

Who said anything about low level implementation details? Have a look again
at what I actually wrote about possible expectations arising from the choice
of name for this feature and get back to me.

>                       To me, it appears, and works, just as I would
> expect. That is, the supplied C block will be executed at that point
> within the PRG.

<sigh> Of course it works as *you* expect, you designed it.

> Please explain, how is it different from what would be expected?

See message <20010110102656.D9113@hagbard.davep.org>, you actually replied
(and quoted every single line of it) to it.

> > I think leaving this until linktime it wrong. I'd strongly lobby for
> > this to be a compile time error because that's where the error is, at
> > compile time. Someone is attempting to compile code that can't be
> > compiled.
> 
> I believe the decision of Compile or Link Error, should be left to the
> programmer, as per my 2nd [non quoted] point. The developer may have
> chosen to provide the functionality as an INLINE block, in one kind of
> build, and by means of a LIB Symbol, for another. It is *not* an error
> until the symbol, will be determined ultimately missing.

I think this is a really bad decision. If source code contains code that
can't be compiled by the compiler it should at the very least issue a
warning if not an error. How, exactly, is someone going to provide the code
via a library such that it satisfies the requirement at link time?

That is, take inline_c.prg from the tests directory, what would the library
that resolves the "inline" when I've built a HRB look like?

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Wed Jan 10 12:44:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Jan 10 12:44:02 2001
Subject: [Harbour] in-file C
In-Reply-To: <000001c07b29$219a2680$0f2aa8c0@antonio>
Message-ID: <LOBBKAFMMFGJIKLMEPAKAEIJDIAA.ron@profit-master.com>

Antonio,

> I do believe that talking about inline C is something
> really confusing for a Clipper programmer.

Let's not be prejudiced! I'm a Clipper programmer, and I'm certainly not
confused by this feature. I believe the input from other "Clipper
programmers" clearly indicates, they were not confused either, and thought
this feature was desirable.

> It is not inline, as in fact you are building a function
> and you supply parameters and receive a return value
> from it.

Not accurate. There is no need to receive a return value, it is an extended
*optional* feature of the implementation. I don't believe the low level
details of the implementation have any bearing, on the functionality. The
bottom line is, you, me, and anyone else, can include a C block within a PRG
function, and have this block execute IN-PLACE just as one would expect.

1. If I didn't provide the explanation of how it works, would it then be
INLINE?

2. Does the Clipper programmer really cares how is that C block integrated
into his PRG code?

> I propose to focus on a:
>
> cfunction <name>()
>
> and
>
> static cfunction <name>()
>
> I don't see any advantage in placing the C code inside
> a PRG function, because it is not true, I mean, we are
> running a virtual machine and there is no way to place
> "inline C" there.

Antonio, those that are confused or not interested, don't have to use it! I
obviously do see an advantage, and so indicated few others.

We definitely can/should provide support for callable C functions. Please
read proposals regarding #pragma INFILE C, or #pragma NATIVE, etc.

> You have designed a very nice infrastructure. Simply
> and bright. Now lets complete it.

We [very] soon will :-)

Ron


From harbour@lists.harbour-project.org  Wed Jan 10 12:52:01 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Wed Jan 10 12:52:01 2001
Subject: [Harbour] in-file C
In-Reply-To: <000001c07b29$219a2680$0f2aa8c0@antonio>
Message-ID: <000101c07b2d$cb7ebf40$0f2aa8c0@antonio>

Ron,

If Harbour users believe they have "inline C" soon they
will ask about how to turn a for...next into its inline C
equivalent, and all kind of crazy -but seeming logical- ideas.

Just look at the inline_c.prg sample you have provided.
What is it usefull for ?

The only advantage I see for it (but using functions, not
inline portions of C) is that you can avoid writting separate
C modules.

Of course people will be impressed by "Harbour can mix PRG and
C from the same PRG module!!!" concept, but I see more troubles
than advantages in a near future...

Antonio


From harbour@lists.harbour-project.org  Wed Jan 10 12:52:13 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Jan 10 12:52:13 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKEEIHDIAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKIEIJDIAA.ron@profit-master.com>

> > #pragma INLINE C {
> > ....C code here...
> > #pragma INLINE C }
> >
> >   This will allow to add inline code for other supported backend
> > languages (although it seems that there will be no support for other
> > languages then C)
>
> If there are no objections, I'll change the INLINE syntax as per
> above, and
> move related code from lexers to PP.

One observation, the "return value" of the block will no longer be
assignable.

> If there are no objections, I'll add:
>
> #pragma INFILE C
> ...
> #pragma INFILE C

Come to think about it some more, I realized the above can be changed to:

#pragma NATIVE
...
#pragma NATIVE

That is because it will be a simple "dump", we don't need to know, nor do we
care, what language is used. Especially, if we do provide a __OUTPUT__
predefined #define.

Ron


From harbour@lists.harbour-project.org  Wed Jan 10 13:04:02 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Wed Jan 10 13:04:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKIEIJDIAA.ron@profit-master.com>
Message-ID: <000201c07b2f$80d81ca0$0f2aa8c0@antonio>

Ron,

> One observation, the "return value" of the block will no longer be
> assignable.

You see, you have started talking about "blocks". 

Harbour users may think they are similar to codeblocks
-and the concept is really far from that!!!-

Please, lets vote.

My vote is NO for HB_INLINE or similar implementation. 

My vote is YES for cfunction ...() or similar implementation.

Antonio


From harbour@lists.harbour-project.org  Wed Jan 10 13:19:03 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Jan 10 13:19:03 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <20010110173917.R9113@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKKEIKDIAA.ron@profit-master.com>

Dave,

> But not in the way that most people would expect "inline C" to work,
> that's what I'm getting at. What you've got here is simply an
> ability to have the text of an "external" C function embedded within a
> PRG, at the moment within other code. As I've documented elsewhere, this
is
> different from what most other examples of "inline" mean.
>
> > I'm sorry, I don't get that!. I don't think the low level implementation
> > details are relevant.
>
> Who said anything about low level implementation details? Have a
> look again at what I actually wrote about possible expectations arising
from
> the choice of name for this feature and get back to me.

I thought, since you *did* mention:

What you've got here is simply an ability to have the text of an "external"
C function embedded within a PRG...

That you were discussing implementation details. This is not what happens at
the logical/syntax level. I did re-read your original message, and still
don't understand, what "possible expectations" are justified and can't be
met. Can you please explain, what exactly are the expectations, current
implementation won't meet. Was it the access to parent variables you were
concerned with?

> > > I think leaving this until linktime it wrong. I'd strongly lobby for
> > > this to be a compile time error because that's where the error is, at
> > > compile time. Someone is attempting to compile code that can't be
> > > compiled.

I have no objections to providing a compile error/warning.

Ron


From harbour@lists.harbour-project.org  Wed Jan 10 13:38:02 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Wed Jan 10 13:38:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <000201c07b2f$80d81ca0$0f2aa8c0@antonio>; from alinares@fivetech.com on Wed, Jan 10, 2001 at 07:02:32PM +0100
References: <LOBBKAFMMFGJIKLMEPAKIEIJDIAA.ron@profit-master.com> <000201c07b2f$80d81ca0$0f2aa8c0@antonio>
Message-ID: <20010110181935.V9113@hagbard.davep.org>

On Wed, Jan 10, 2001 at 07:02:32PM +0100, Antonio Linares wrote:

> My vote is NO for HB_INLINE or similar implementation. 
> 
> My vote is YES for cfunction ...() or similar implementation.

This does kind of bring the whole thing full circle. If your YES vote were
the chosen path doesn't it make more sense to simple use a .C file as you
would anyway? What's the point in having the C code in a PRG when you can
only benefit from it if you're using a certain mode of compilation?

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Wed Jan 10 13:38:15 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Wed Jan 10 13:38:15 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKIEIJDIAA.ron@profit-master.com>; from ron@profit-master.com on Wed, Jan 10, 2001 at 09:53:11AM -0800
References: <LOBBKAFMMFGJIKLMEPAKEEIHDIAA.ron@profit-master.com> <LOBBKAFMMFGJIKLMEPAKIEIJDIAA.ron@profit-master.com>
Message-ID: <20010110182120.W9113@hagbard.davep.org>

On Wed, Jan 10, 2001 at 09:53:11AM -0800, Ron Pinkas wrote:

> > If there are no objections, I'll change the INLINE syntax as per above,
> > and move related code from lexers to PP.
> 
> One observation, the "return value" of the block will no longer be
> assignable.

Doesn't that further reduce the minor utility that this provides? I also
can't see how you'd provide access to passed-in values either.

> #pragma NATIVE
> ...
> #pragma NATIVE
> 
> That is because it will be a simple "dump", we don't need to know, nor do
> we care, what language is used. Especially, if we do provide a __OUTPUT__
> predefined #define.

Actually, it's not quite a single dump is it? Correct me if I'm wrong but
doesn't it also require the generation of identifiers?

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Wed Jan 10 13:38:28 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Wed Jan 10 13:38:28 2001
Subject: [Harbour] Inline C, knowledge of its implementation and how this might affect usage
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEIGDIAA.ron@profit-master.com>; from ron@profit-master.com on Wed, Jan 10, 2001 at 08:37:32AM -0800
References: <20010110102656.D9113@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKCEIGDIAA.ron@profit-master.com>
Message-ID: <20010110183704.X9113@hagbard.davep.org>

On Wed, Jan 10, 2001 at 08:37:32AM -0800, Ron Pinkas wrote:

>    a. As it stands now, when using *non* C output, there *will* be a LINK
> TIME Error:
> 
>       Missing HB_INLINE_N() (where N is 0-9,A-Z).
> 
>       This should provide sufficient warning, and allows the developer to
> resolve the issue, by adding such function, in a manner supported by the
> output format.

One other thought springs to mind here. You've said a couple of times that
people who make use of this don't need to worry about the implementation
details. Looking at the above it would appear that they'd need intimate
knowledge of the implementation details to be able to know what the problem
is.

They'd need to know that "inline C" can only be used if the output from the
compile is C code, they'd also need to know that what it really does is
create functions behind the scenes, they'd also need to know what the naming
scheme is for those functions.

It seems to me that saying that an unresolved symbol is a good enough error
*and* that people don't need to worry about how it's implemented are two
contradictory stances.

There's also the small problem that they'll possibility they'll get multiple
errors for the same or similar symbols. That again requires knowledge of the
implementation before they can diagnose the problem.

It also strikes me that your "it's a feature this way because it allows a
library solution too" suggestion requires knowledge of the implementation as
well.

One other question about the inline stuff. Is there a reason why this
shouldn't compile:

,----
| Function FooInline()
| Return( HB_INLINE() { hb_retc( "Hello, World from Foo" ); } )
`----

The fact that a HB_INLINE() can and does yield a return value suggests that
it should be possible to use it this way. The goes for something like:

,----
| Function FooInline()
| Local cRet := HB_INLINE() { hb_retc( "Hello, World from Foo" ); }
| Return( cRet )
`----

or any other method of assigning the value of an expression.

I notice, however, that this:

,----
| Function FooInline()
| Local cRet := HB_INLINE()
|    { 
|       hb_retc( "Hello, World from Foo" );
|    }
| Return( cRet )
`----

does compile without incident.

In essence, it would appear that the "inlineability" of this solution
doesn't allow you to inline the C code in the way that people might expect
based on how other functions and blocks of code can be used.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Wed Jan 10 13:44:02 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Wed Jan 10 13:44:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKKEIKDIAA.ron@profit-master.com>; from ron@profit-master.com on Wed, Jan 10, 2001 at 10:19:31AM -0800
References: <20010110173917.R9113@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKKEIKDIAA.ron@profit-master.com>
Message-ID: <20010110184306.Y9113@hagbard.davep.org>

On Wed, Jan 10, 2001 at 10:19:31AM -0800, Ron Pinkas wrote:
> Dave,
> 
> > Who said anything about low level implementation details? Have a look
> > again at what I actually wrote about possible expectations arising from
> > the choice of name for this feature and get back to me.
> 
> I thought, since you *did* mention:
> 
> What you've got here is simply an ability to have the text of an
> "external" C function embedded within a PRG...
> 
> That you were discussing implementation details. 

At a design level, yes. It's hard not to talk about implementation when
talking about design.

>                                                  This is not what happens
> at the logical/syntax level. 

But it does heavily affect what happens at that level, see my other email
regarding your suggestions for allowing the linker to report compilation
choice problems.

>                              I did re-read your original message, and
> still don't understand, what "possible expectations" are justified and
> can't be met. 

Try direct in-line access to variables in the current functions environment
as an example. This is something that people will be used to from inline
ASM. I pointed this out in the email whose ID I gave.

>               Can you please explain, what exactly are the expectations,
> current implementation won't meet. Was it the access to parent variables
> you were concerned with?

That's a prime example of an expectation based on what people will know of
as "inline".

> I have no objections to providing a compile error/warning.

Point 5 in <LOBBKAFMMFGJIKLMEPAKCEIGDIAA.ron@profit-master.com> suggests
otherwise. Are you saying you're reconsidered this?

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Wed Jan 10 13:56:01 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Wed Jan 10 13:56:01 2001
Subject: [Harbour] My opinion about the Harbour project.
Message-ID: <200101101355_MC2-C11F-C9FB@compuserve.com>

Hi,

Based on my occasional usage of inline ASM with C, inline C with PRG
would probably occasionally be useful.  However, I agree the current
syntax and semantics look less than ideal.  Trying to rush to decide
them looks unwise.

One more vote to leave it for a later release. :-)

John.

From harbour@lists.harbour-project.org  Wed Jan 10 15:04:02 2001
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Wed Jan 10 15:04:02 2001
Subject: [Harbour] To the Captains:
In-Reply-To: <NCBBJKNMIDPJNLJCHCHIIEFFFMAA.harbour@winfakt.com>
References: <3A5BC946.9230.1151EBA5@localhost>
Message-ID: <200101101946.f0AJkpn10056@ev6.be.wanadoo.com>

Hi Patrick

OO improvement
* Some minor bugs corrected
* Better Classy and topClass compatibility
 


> 
> We need a list for the new upcoming 0.36 release. Please comlete this
> list:
> 
> WhatsNew in 0.36:
> - Inline C code
> - Dot prompt
> - More support for ADS databases
> 
> regards,
> 
> Patrick Mast
> www.Patrick.Be.kz
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Wed Jan 10 15:29:03 2001
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Wed Jan 10 15:29:03 2001
Subject: [Harbour] To the Captains:
References: <3A5BC946.9230.1151EBA5@localhost> <200101101946.f0AJkpn10056@ev6.be.wanadoo.com>
Message-ID: <3A5CC5EA.7DE54D0A@libero.it>

.36:

MemoEdit() - 95% complete :-)
TBrowse class - rewritten movement keys handling and stabilization logic
(was broken) now is _a lot_ more clipper compatible.

regards.

JF Lefebvre ha scritto:
> 
> Hi Patrick
> 
> OO improvement
> * Some minor bugs corrected
> * Better Classy and topClass compatibility
> 
> 
> >
> > We need a list for the new upcoming 0.36 release. Please comlete this
> > list:
> >
> > WhatsNew in 0.36:
> > - Inline C code
> > - Dot prompt
> > - More support for ADS databases
> >
> > regards,
> >
> > Patrick Mast
> > www.Patrick.Be.kz
> >
> > _______________________________________________
> > Harbour mailing list
> > Harbour@lists.harbour-project.org
> > http://www.matrixlist.com/mailman/listinfo/harbour
> >
> > Thank you for participating in The Harbour Project.  Be sure to check
> > http://www.Harbour-Project.org
> >
> >
> 
> Best regards,
> 
> J. Lefebvre,
> Bruxelles,
> Belgium
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Wed Jan 10 16:35:04 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Wed Jan 10 16:35:04 2001
Subject: [Harbour] To the Captains:
References: <NCBBJKNMIDPJNLJCHCHIIEFFFMAA.harbour@winfakt.com>
Message-ID: <005b01c07b4d$308cb580$0100007f@sl.conex.net>

Patrick

Here is mine

Hbmake
Hbdoc and PDF output enhacements

Regards

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Wed Jan 10 17:03:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Jan 10 17:03:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <000201c07b2f$80d81ca0$0f2aa8c0@antonio>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOEINDIAA.ron@profit-master.com>

Antonio,

> You see, you have started talking about "blocks".
>
> Harbour users may think they are similar to codeblocks
> -and the concept is really far from that!!!-
>
> Please, lets vote.
>
> My vote is NO for HB_INLINE or similar implementation.
>
> My vote is YES for cfunction ...() or similar implementation.

First, I hope you know how much I respect your logic.

Now, Can you please tell me what makes this a NON desirable feature?

Consider the following Clipper/Harbour function aTokens(). Assume it is
extensively used in my application, and I would like it to be as fast as
possible.

Please explain why should we not allow this code:

// --- This currently works --- //

FUNCTION aTokens( cLine, cDelimiter )

   LOCAL aTokens := {}

   #ifdef __HARBOUR__

      IF cDelimiter == NIL
         cDelimiter := ' '
      ENDIF

      HB_INLINE( aTokens, cLine, Asc( cDelimiter ) )
      {
         PHB_ITEM pArray = hb_param( 1, HB_IT_ARRAY );
         PHB_ITEM pLine  = hb_param( 2, HB_IT_STRING );
         char cDelimiter = (char) hb_parni(3);
         size_t i, iOffset = 0, iIndex = 1;

         for( i = 0; i < pLine->item.asString.length; i++ )
         {
            if( pLine->item.asString.value[i] == cDelimiter )
            {
               hb_arraySize( pArray, iIndex );
               hb_storclen( pLine->item.asString.value + iOffset, i -
iOffset, 1, iIndex );
               iOffset = i + 1;
               iIndex++;
            }
         }
         if( iOffset < pLine->item.asString.length - 1 )
         {
            hb_arraySize( pArray, iIndex );
            hb_storclen( pLine->item.asString.value + iOffset,
pLine->item.asString.length - iOffset, 1, iIndex );
         }
      }

   #else

      LOCAL nLen := Len( cLine ), i, nOffset := 1

      IF cDelimiter == NIL
         cDelimiter := ' '
      ENDIF

      FOR i := 1 to nLen
         IF SubStr( cLine, i, 1 ) == cDelimiter
            aAdd( aTokens, SubStr( cLine, nOffset, i - nOffset ) )
            nOffset := i + 1
         ENDIF
      NEXT
      IF nOffset < nLen - 1
         aAdd( aTokens, SubStr( cLine, nOffset ) )
      ENDIF

   #endif

RETURN aTokens

// --- This really works --- //

I do agree we'll also benefit from C function, but why insisting on removing
this? It's for the benefit of those which have use for, and it will never
bother anyone else.

Ron


From harbour@lists.harbour-project.org  Wed Jan 10 17:23:04 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Jan 10 17:23:04 2001
Subject: [Harbour] Inline C, knowledge of its implementation and how this might affect usage
In-Reply-To: <20010110183704.X9113@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKKEIODIAA.ron@profit-master.com>

Dave,

> One other thought springs to mind here. You've said a couple of times that
> people who make use of this don't need to worry about the implementation
> details. Looking at the above it would appear that they'd need intimate
> knowledge of the implementation details to be able to know what
> the problem
> is.
>
> They'd need to know that "inline C" can only be used if the
> output from the
> compile is C code, they'd also need to know that what it really does is
> create functions behind the scenes, they'd also need to know what
> the naming
> scheme is for those functions.

1. My original explanation for not providing explicit warnings was 2 folds.
You can re-read my original reply, and find explanation #2.

2. This is really rhetoric, since I never disagreed to provide a warning.

Let's move on...

> One other question about the inline stuff. Is there a reason why this
> shouldn't compile:
>
> ,----
> | Function FooInline()
> | Return( HB_INLINE() { hb_retc( "Hello, World from Foo" ); } )
> `----

None! The currently supported syntax, expects the source to start at the
immediate next line, but that can be, fairly easily, changed.

> The fact that a HB_INLINE() can and does yield a return value
> suggests that
> it should be possible to use it this way. The goes for something like:
>
> ,----
> | Function FooInline()
> | Local cRet := HB_INLINE() { hb_retc( "Hello, World from Foo" ); }
> | Return( cRet )
> `----
>
> or any other method of assigning the value of an expression.

Same explanation.

> I notice, however, that this:
>
> ,----
> | Function FooInline()
> | Local cRet := HB_INLINE()
> |

> |       hb_retc( "Hello, World from Foo" );
> |    }
> | Return( cRet )
> `----
>
> does compile without incident.
>
> In essence, it would appear that the "inlineability" of this solution
> doesn't allow you to inline the C code in the way that people might expect
> based on how other functions and blocks of code can be used.

We could either document existing syntax, and/or enhance it to allow the
block to begin on the same line with its declaration.

Ron


From harbour@lists.harbour-project.org  Wed Jan 10 17:37:02 2001
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Wed Jan 10 17:37:02 2001
Subject: [Harbour] My opinion about the Harbour project.
References: <LOBBKAFMMFGJIKLMEPAKOEINDIAA.ron@profit-master.com>
Message-ID: <3A5CE3D6.47CCB61E@libero.it>

Ron,

while I don't think I'll use your inline C facility and given that I'm
not asking that you remove it, I have to admit that I cant grasp its
logic since you can simply add a .C file to your project and have it
compiled.

And I don't like to mix things, if it's a .PRG file while add some C
code _inside_ it? 
Simply put all your C code on a different file given also that this
inline C doesn't save you from using a C compiler. (I've used inline ASM
inside some pascal code but it was different, inside pascal it is a lot
easier to add a few asm statements to a pascal file than to add a .ASM
file (which requires an assembler and is tedious to write)).

And if you don't produce C code but a win32 obj (or a .HRB) it won't
work. 

regards.


Ron Pinkas ha scritto:
> 
> Antonio,
> 
> > You see, you have started talking about "blocks".
> >
> > Harbour users may think they are similar to codeblocks
> > -and the concept is really far from that!!!-
> >
> > Please, lets vote.
> >
> > My vote is NO for HB_INLINE or similar implementation.
> >
> > My vote is YES for cfunction ...() or similar implementation.
> 
> First, I hope you know how much I respect your logic.
> 
> Now, Can you please tell me what makes this a NON desirable feature?
> 
> Consider the following Clipper/Harbour function aTokens(). Assume it is
> extensively used in my application, and I would like it to be as fast as
> possible.
> 
> Please explain why should we not allow this code:
> 
> // --- This currently works --- //
> 
> FUNCTION aTokens( cLine, cDelimiter )
> 
>    LOCAL aTokens := {}
> 
>    #ifdef __HARBOUR__
> 
>       IF cDelimiter == NIL
>          cDelimiter := ' '
>       ENDIF
> 
>       HB_INLINE( aTokens, cLine, Asc( cDelimiter ) )
>       {
>          PHB_ITEM pArray = hb_param( 1, HB_IT_ARRAY );
>          PHB_ITEM pLine  = hb_param( 2, HB_IT_STRING );
>          char cDelimiter = (char) hb_parni(3);
>          size_t i, iOffset = 0, iIndex = 1;
> 
>          for( i = 0; i < pLine->item.asString.length; i++ )
>          {
>             if( pLine->item.asString.value[i] == cDelimiter )
>             {
>                hb_arraySize( pArray, iIndex );
>                hb_storclen( pLine->item.asString.value + iOffset, i -
> iOffset, 1, iIndex );
>                iOffset = i + 1;
>                iIndex++;
>             }
>          }
>          if( iOffset < pLine->item.asString.length - 1 )
>          {
>             hb_arraySize( pArray, iIndex );
>             hb_storclen( pLine->item.asString.value + iOffset,
> pLine->item.asString.length - iOffset, 1, iIndex );
>          }
>       }
> 
>    #else
> 
>       LOCAL nLen := Len( cLine ), i, nOffset := 1
> 
>       IF cDelimiter == NIL
>          cDelimiter := ' '
>       ENDIF
> 
>       FOR i := 1 to nLen
>          IF SubStr( cLine, i, 1 ) == cDelimiter
>             aAdd( aTokens, SubStr( cLine, nOffset, i - nOffset ) )
>             nOffset := i + 1
>          ENDIF
>       NEXT
>       IF nOffset < nLen - 1
>          aAdd( aTokens, SubStr( cLine, nOffset ) )
>       ENDIF
> 
>    #endif
> 
> RETURN aTokens
> 
> // --- This really works --- //
> 
> I do agree we'll also benefit from C function, but why insisting on removing
> this? It's for the benefit of those which have use for, and it will never
> bother anyone else.
> 
> Ron
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Wed Jan 10 17:42:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Jan 10 17:42:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <20010110182120.W9113@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKEEIPDIAA.ron@profit-master.com>

Dave,

> > One observation, the "return value" of the block will no longer be
> > assignable.
>
> Doesn't that further reduce the minor utility that this provides? I also
> can't see how you'd provide access to passed-in values either.

I 100% agree with both your points. I guess I rushed to agree with the
proposal, that I failed to notice the problem with parameters and return
value!!! I have to withdraw my agreement, to the #pragme INLINE :-(.

> > #pragma NATIVE
> > ...
> > #pragma NATIVE
> >
> > That is because it will be a simple "dump", we don't need to
> know, nor do
> > we care, what language is used. Especially, if we do provide a
> __OUTPUT__
> > predefined #define.
>
> Actually, it's not quite a single dump is it? Correct me if I'm wrong but
> doesn't it also require the generation of identifiers?

Right again.

Which suggests, it will have to be some syntax convention, like:

  [STATIC] CFUNCTION Identifier()
  {
    ...
  }

I'm afraid, that again #pragma will simply not be appropriate.

Ron


From harbour@lists.harbour-project.org  Wed Jan 10 18:19:02 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Wed Jan 10 18:19:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <3A5CE3D6.47CCB61E@libero.it>
References: <LOBBKAFMMFGJIKLMEPAKOEINDIAA.ron@profit-master.com>
Message-ID: <200101102318.f0ANIpY22598@thor.parrett.net>

** Reply to message from Maurilio Longo <maurilio.longo@libero.it> on
Wed, 10 Jan 2001 23:36:06 +0100

> And I don't like to mix things, if it's a .PRG file while add some C
> code _inside_ it?

I don't see it as being much different from having inline ASM code in a
.PAS or .C file.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Wed Jan 10 18:54:01 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Jan 10 18:54:01 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <3A5CE3D6.47CCB61E@libero.it>
Message-ID: <LOBBKAFMMFGJIKLMEPAKMEJADIAA.ron@profit-master.com>

Maurilio,

> while I don't think I'll use your inline C facility and given that I'm
> not asking that you remove it, I have to admit that I cant grasp its
> logic since you can simply add a .C file to your project and have it
> compiled.

One word, convenience!


> And I don't like to mix things, if it's a .PRG file while add some C
> code _inside_ it?
> Simply put all your C code on a different file given also that this
> inline C doesn't save you from using a C compiler. (I've used inline ASM
> inside some pascal code but it was different, inside pascal it is a lot
> easier to add a few asm statements to a pascal file than to add a .ASM
> file (which requires an assembler and is tedious to write)).

Then don't! I'll, because it simplify a task, that otherwise, I might find
to cumbersome to worth the hassle. I don't like having to mass with multiple
sources, make files, etc., unless providing very clear benefits that
outweigh the hassle.

Soon, I'll upload new PP.prg with few critical parts INLINED for
performance. Hopefully, you'll then get the point.

> And if you don't produce C code but a win32 obj (or a .HRB) it won't
> work.

Every choice we make carry cost/benefit baggage. That's the beauty of
options. The availability of this feature, to those using C output, will
*not* change what is available in the other output options.

If anyone is capable of providing this feature, in any other output format,
I'm all for it.

Ron


From harbour@lists.harbour-project.org  Wed Jan 10 19:16:02 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Wed Jan 10 19:16:02 2001
Subject: [Harbour] New build 0.36
Message-ID: <000901c07b63$b64aad60$0100007f@sl.conex.net>

Dear friends

As an Captain, I´d like to suggest that the new build should be release in
the weekend.This can make all Captains finish their work and upload to the
CVS tree.
and I can finish the hbmake dinamic makefile.
Btw , can some one using MSVC update the makefile to add hbmake dependencies

Regards From Brazil

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Wed Jan 10 19:44:02 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Wed Jan 10 19:44:02 2001
Subject: [Harbour] Changelog 2001 -01-10 22:30 GMT -3
Message-ID: <001c01c07b67$98284dc0$0100007f@sl.conex.net>

*utils/hbmake/hbmake.prg
   *Fixed an typo on an fwh lib name
   +Added dinamic make file support


Regards From Brazil

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Wed Jan 10 19:51:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Jan 10 19:51:02 2001
Subject: [Harbour] Changelog 2001 -01-10 22:30 GMT -3
In-Reply-To: <001c01c07b67$98284dc0$0100007f@sl.conex.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOEJBDIAA.ron@profit-master.com>

Luiz,

What is Dynamic Make File?

Ron

> *utils/hbmake/hbmake.prg
>    *Fixed an typo on an fwh lib name
>    +Added dinamic make file support
> 
> 
> Regards From Brazil
> 
> Luiz Rafael Culik


From harbour@lists.harbour-project.org  Wed Jan 10 20:16:01 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Wed Jan 10 20:16:01 2001
Subject: [Harbour] Changelog 2001 -01-10 22:30 GMT -3
References: <LOBBKAFMMFGJIKLMEPAKOEJBDIAA.ron@profit-master.com>
Message-ID: <007001c07b6b$fc06e000$0100007f@sl.conex.net>

Ron

> Luiz,
>
> What is Dynamic Make File?
>

I´d know that some one would ask this.

This is what hbmake do

Normaly when an makefile is created by hbmake test.mak -e , the internal
makevars is set to the name of files that you are trying to build. Example.
Lets say that you are build an app called hello.exe.
Lets say that hello.exe depends from hello.prg.
then the make file is created . the internal envars is set to
PROJECT = hello.exe $(PR)
OBJFILES = hello.obj  $(OB)
CFILES = hello.c $(CF)
hbmake will compile hello.c to create the hello.obj .

Now dinamic make files works on the follow way
if no file is selected on the edit mode. the PROJECT , OBJFILES and CFILES
macros is set to the $(PR),$(OB) and $(CF)
this means that this make file wont build noting.
by using the dinamic make file, you pass this envars to the make file by
using the -D parameter from hbmake.
so to build hello.exe in the dinamic make file you would use
hbmake test.mak -DPR=hello.exe;OB=hello.obj;CF=hello.c this will supply the
envars to the PROJECT,OBJFILES and CFILES to the project , and the result
program is build

Regards

Luiz Rafael Culik



From harbour@lists.harbour-project.org  Wed Jan 10 20:35:03 2001
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Wed Jan 10 20:35:03 2001
Subject: [Harbour] New build 0.36
In-Reply-To: <000901c07b63$b64aad60$0100007f@sl.conex.net>
Message-ID: <3A5CC75A.5301.1532702E@localhost>

On 10 Jan 2001, at 22:15, Luiz Rafael Culik Guimaraes wrote:

> Dear friends
> 
> As an Captain, I=B4d like to suggest that the new build should be releas=
e in
> the weekend

I'd like to suggest that we have decided for a .36 release and that 
we should work towards it and release it when it's ready. That 
doesn't mean on a certain day, but when we agree that it's right.

There is no hurry.


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Wed Jan 10 21:35:03 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Jan 10 21:35:03 2001
Subject: [Harbour] ChangeLog 2001-01-10 18:20 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <3A5CC75A.5301.1532702E@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKEEJDDIAA.ron@profit-master.com>

2001-01-10 18:20 UTC-0800 Ron Pinkas <ron@profit-master.com>
   * include/hbcomp.h
   * source/compiler/harbour.c
     + Added members szFileName and iLine to structure INLINE, set to
originating PRG name and line number.

   * source/compiler/genc.c
     + Added #line directive to INLINE generations, so C compile
warnings/errors will report source file and line number in PRG.

   * source/compiler/harbour.l
   * source/compiler/harbour.slx
     + Added Error message if inline C is used with non C output.
     + Added support for {} on same line
     * Minor optimization

   * include/hberrors.h
   * source/compiler/hbgenerr.c
     + Added: "Inline C requires C output generation, use -gc[n]"


From harbour@lists.harbour-project.org  Wed Jan 10 23:10:04 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Jan 10 23:10:04 2001
Subject: [Harbour] INLINE C Synopsis
In-Reply-To: <3A5CC75A.5301.1532702E@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEJEDIAA.ron@profit-master.com>

Here is a summary of findings, limitations, and specifications with regard
to inline C support:

Overview:
---------

  PP -> Lexer - Integration.

In order to fully appreciate the scope of what can be achieved, it is
important to understand, the relationship between the above components, and
their respective responsibilities.

PP Starts with trying to get a full line of code (look for next NewLine). In
that process it does the following (partial non sorted list):

   1. Ignore all other characters, while reading strings.
   2. Strip Multi-Line Comments (/**/).
   3. Strip full line Comments (*).
   4. Strip inline comments (//) and (&&) (note && is a C token!!!)
   5. Combines lines that end with semi-colon (;) with the immediate next
line (note (;) is a C line terminator.
   6. Parses result line for #PRAGMAs, #INCLUDEs, #DEFINEs, #[x]TRANSLATEs,
and #[x]COMMANDS.
   7. Converts [] strings to "" or '' strings if possible, and '' strings to
"" strings if possible (note in C [], '', and "" have different meanings).
   8. Finally it transfers a *complete* [processed], line at a time, to the
Lexer.

Limitations:
------------

In order to allow inline C support, all PP logic must be suspended, other
than looking for next NewLine character.

*** Since inline C, requires that PP logic is suspended, and since PP
transfers full line at a time, we are restricted of using C syntax and
Harbour syntax, on the *same* source line. ***

While technically possible, to move HB_INLINE token recognition to PP, to
allow *midline* suspension of PP logic, I can't recommend it because:

The HB_INLINE is followed by ( [...] ) which may include complex Harbour
expressions, before finally, optionally, reaching the beginning of the
inline block ({). This type of parsing is traditionally reserved for the
Lexer and Parser. But it is technically feasible.

Now, if we keep HB_INLINE token recognition at the Lexer, here is the most
compact supported syntax:

Syntax:
-------

[lValue := ] HB_INLINE( [[@]xPar1 [, [@]xParN] ] )
             { /* Any C code */ }

or

RETURN HB_INLINE( [[@]xPar1 [, [@]xParN] ] )
       { /* Any C code */ }

There may be any number of lines between the block beginning ({) and the
block end (}). Any legal C syntax, including any number of additional
balanced ({}) is allowed in between.

We can *not* include an inline block within Harbour Level Parenthesis.

Can/Can not:
------------

In summary, the result of an inline C block:

1. Can utilize PRG Variables passed as parameters, using standard Harbour
Extend and API systems.
1. Can manipulate PRG Variables passed by reference, using standard Harbour
Extend and API systems.
1. Can be directly assigned to any Harbour variable.
2. Can be directly returned as the return value of a Harbour level function.
3. Can *not* be directly passed as a parameter to another function.
4. Can *not* be directly involved in any expression operators manipulation.

Misc:
-----

C Syntax errors and warnings, are reported with the correct PRG source file
name, and line number.

Conclusion:
-----------

1. I recommend, we keep current specifications for INLINE c support.

2. I recommend we add C FUNCTION support. I suggest the syntax should be:

[STATIC] C FUNCTION Identifier()
{...}

If the above is accepted, I believe I can complete it by this weekend.

Ron


From harbour@lists.harbour-project.org  Thu Jan 11 00:23:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 11 00:23:02 2001
Subject: [Harbour] INLINE C Synopsis
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEJEDIAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKMEJEDIAA.ron@profit-master.com>

> Syntax:
> -------
>
> [lValue := ] HB_INLINE( [[@]xPar1 [, [@]xParN] ] )
>              { /* Any C code */ }
>
> or
>
> RETURN HB_INLINE( [[@]xPar1 [, [@]xParN] ] )
>        { /* Any C code */ }

First syntax should read:

  [lValue := [HarbourExp HarbourOp]...] HB_INLINE( [[@]xPar1 [,
[@]xParN] ] )
                                        { /* Any C code */ }

> Can/Can not:
> ------------
>
> In summary, the result of an inline C block:
>
> 1. Can utilize PRG Variables passed as parameters, using standard Harbour
> Extend and API systems.
> 1. Can manipulate PRG Variables passed by reference, using
> standard Harbour
> Extend and API systems.
> 1. Can be directly assigned to any Harbour variable.
> 2. Can be directly returned as the return value of a Harbour
> level function.
> 3. Can *not* be directly passed as a parameter to another function.
> 4. Can *not* be directly involved in any expression operators
> manipulation.

Has to read 1. 2. 3. 4. 5. 6.

6. Needs to read: Can *not* be directly involved on the *left* side of any
expression operators, but *can* be on the right side of any valid Harbour
Expression.

Ron


From harbour@lists.harbour-project.org  Thu Jan 11 01:16:02 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 01:16:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKOEINDIAA.ron@profit-master.com>; from ron@profit-master.com on Wed, Jan 10, 2001 at 02:04:10PM -0800
References: <000201c07b2f$80d81ca0$0f2aa8c0@antonio> <LOBBKAFMMFGJIKLMEPAKOEINDIAA.ron@profit-master.com>
Message-ID: <20010110224222.G9113@hagbard.davep.org>

On Wed, Jan 10, 2001 at 02:04:10PM -0800, Ron Pinkas wrote:

> I do agree we'll also benefit from C function, but why insisting on
> removing this? It's for the benefit of those which have use for, and it
> will never bother anyone else.

Because the "feature" as presented has significant problems? That is of use
to someone and can be ignored by others isn't reason alone for keeping it.
That's not a call to remove it, but it is a heads-up that more thought and
documentation might need to go into it before it's included into a release.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 11 01:47:02 2001
From: harbour@lists.harbour-project.org (Patrick Mast)
Date: Thu Jan 11 01:47:02 2001
Subject: [Harbour] INLINE C Synopsis
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEJEDIAA.ron@profit-master.com>
Message-ID: <NCBBJKNMIDPJNLJCHCHIGEGEFMAA.harbour@winfakt.com>

Ron,

I'm not the C Guru, but from what I see I agree with you.
Your example with aTokens() is great!

Thanks!

regards,

Patrick Mast
www.Patrick.Be.kz


> -----Oorspronkelijk bericht-----
> Van: harbour-admin@lists.harbour-project.org
> [mailto:harbour-admin@lists.harbour-project.org]Namens Ron Pinkas
> Verzonden: donderdag 11 januari 2001 5:11
> Aan: harbour@lists.harbour-project.org
> Onderwerp: [Harbour] INLINE C Synopsis
>
>
> Here is a summary of findings, limitations, and specifications with regard
> to inline C support:
>
> Overview:
> ---------
>
>   PP -> Lexer - Integration.
>
> In order to fully appreciate the scope of what can be achieved, it is
> important to understand, the relationship between the above
> components, and
> their respective responsibilities.
>
> PP Starts with trying to get a full line of code (look for next
> NewLine). In
> that process it does the following (partial non sorted list):
>
>    1. Ignore all other characters, while reading strings.
>    2. Strip Multi-Line Comments (/**/).
>    3. Strip full line Comments (*).
>    4. Strip inline comments (//) and (&&) (note && is a C token!!!)
>    5. Combines lines that end with semi-colon (;) with the immediate next
> line (note (;) is a C line terminator.
>    6. Parses result line for #PRAGMAs, #INCLUDEs, #DEFINEs,
> #[x]TRANSLATEs,
> and #[x]COMMANDS.
>    7. Converts [] strings to "" or '' strings if possible, and ''
> strings to
> "" strings if possible (note in C [], '', and "" have different meanings).
>    8. Finally it transfers a *complete* [processed], line at a
> time, to the
> Lexer.
>
> Limitations:
> ------------
>
> In order to allow inline C support, all PP logic must be suspended, other
> than looking for next NewLine character.
>
> *** Since inline C, requires that PP logic is suspended, and since PP
> transfers full line at a time, we are restricted of using C syntax and
> Harbour syntax, on the *same* source line. ***
>
> While technically possible, to move HB_INLINE token recognition to PP, to
> allow *midline* suspension of PP logic, I can't recommend it because:
>
> The HB_INLINE is followed by ( [...] ) which may include complex Harbour
> expressions, before finally, optionally, reaching the beginning of the
> inline block ({). This type of parsing is traditionally reserved for the
> Lexer and Parser. But it is technically feasible.
>
> Now, if we keep HB_INLINE token recognition at the Lexer, here is the most
> compact supported syntax:
>
> Syntax:
> -------
>
> [lValue := ] HB_INLINE( [[@]xPar1 [, [@]xParN] ] )
>              { /* Any C code */ }
>
> or
>
> RETURN HB_INLINE( [[@]xPar1 [, [@]xParN] ] )
>        { /* Any C code */ }
>
> There may be any number of lines between the block beginning ({) and the
> block end (}). Any legal C syntax, including any number of additional
> balanced ({}) is allowed in between.
>
> We can *not* include an inline block within Harbour Level Parenthesis.
>
> Can/Can not:
> ------------
>
> In summary, the result of an inline C block:
>
> 1. Can utilize PRG Variables passed as parameters, using standard Harbour
> Extend and API systems.
> 1. Can manipulate PRG Variables passed by reference, using
> standard Harbour
> Extend and API systems.
> 1. Can be directly assigned to any Harbour variable.
> 2. Can be directly returned as the return value of a Harbour
> level function.
> 3. Can *not* be directly passed as a parameter to another function.
> 4. Can *not* be directly involved in any expression operators
> manipulation.
>
> Misc:
> -----
>
> C Syntax errors and warnings, are reported with the correct PRG
> source file
> name, and line number.
>
> Conclusion:
> -----------
>
> 1. I recommend, we keep current specifications for INLINE c support.
>
> 2. I recommend we add C FUNCTION support. I suggest the syntax should be:
>
> [STATIC] C FUNCTION Identifier()
> {...}
>
> If the above is accepted, I believe I can complete it by this weekend.
>
> Ron
>
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>
>


From harbour@lists.harbour-project.org  Thu Jan 11 03:40:05 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 03:40:05 2001
Subject: [Harbour] Inline C, knowledge of its implementation and how this might affect usage
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKKEIODIAA.ron@profit-master.com>; from ron@profit-master.com on Wed, Jan 10, 2001 at 02:24:12PM -0800
References: <20010110183704.X9113@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKKEIODIAA.ron@profit-master.com>
Message-ID: <20010111081936.I9113@hagbard.davep.org>

On Wed, Jan 10, 2001 at 02:24:12PM -0800, Ron Pinkas wrote:
> Dave,
> 
> > They'd need to know that "inline C" can only be used if the output from
> > the compile is C code, they'd also need to know that what it really does
> > is create functions behind the scenes, they'd also need to know what the
> > naming scheme is for those functions.
> 
> 1. My original explanation for not providing explicit warnings was 2 folds.
> You can re-read my original reply, and find explanation #2.

You mean explanation `b'? That still requires a know of implementation. It
would still require errors to be raised by the compiler. What you suggested
there was that they could work around the error using the pre-processor.

> 2. This is really rhetoric, since I never disagreed to provide a warning.

Rhetoric? Huh? As for not providing a warning (I think it really needs to be
an error) you said you'd "decided not to take any explicit action". I was
followup up that decision.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 11 03:40:30 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 03:40:30 2001
Subject: [Harbour] INLINE C Synopsis
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEJEDIAA.ron@profit-master.com>; from ron@profit-master.com on Wed, Jan 10, 2001 at 08:10:58PM -0800
References: <3A5CC75A.5301.1532702E@localhost> <LOBBKAFMMFGJIKLMEPAKCEJEDIAA.ron@profit-master.com>
Message-ID: <20010111083736.K9113@hagbard.davep.org>

On Wed, Jan 10, 2001 at 08:10:58PM -0800, Ron Pinkas wrote:

> Limitations:
> ------------
> 
> In order to allow inline C support, all PP logic must be suspended, other
> than looking for next NewLine character.

The inline C code can't make use of any manifest constants available in the
environment? That's a bit of a limitation isn't it? Is there any way round
this? This is one thing I would have expected to be able to do.

> In summary, the result of an inline C block:
> 
> 1. Can utilize PRG Variables passed as parameters, using standard Harbour
> Extend and API systems.
> 1. Can manipulate PRG Variables passed by reference, using standard Harbour
> Extend and API systems.

Shouldn't the above two points be in a section regarding how you can call an
inline block? I don't see how they relate to the result.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 11 03:41:01 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 03:41:01 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKMEJADIAA.ron@profit-master.com>; from ron@profit-master.com on Wed, Jan 10, 2001 at 03:54:34PM -0800
References: <3A5CE3D6.47CCB61E@libero.it> <LOBBKAFMMFGJIKLMEPAKMEJADIAA.ron@profit-master.com>
Message-ID: <20010111083154.J9113@hagbard.davep.org>

On Wed, Jan 10, 2001 at 03:54:34PM -0800, Ron Pinkas wrote:

> > And if you don't produce C code but a win32 obj (or a .HRB) it won't
> > work.
> 
> Every choice we make carry cost/benefit baggage. That's the beauty of
> options. The availability of this feature, to those using C output, will
> *not* change what is available in the other output options.

The thing with "inline C" is that it presents a problem that no other
"option" seems to have presented so far. I can now write code that I can
compile with harbour that someone else can't compile. That's not a judgement
about "inline C", simply an observation that from now on the "-g" switch has
acquired a far greater importance than it had before.

> If anyone is capable of providing this feature, in any other output
> format, I'm all for it.

This is why I think playing it up as "inline C" misses the point and edges
towards bad language design and adding chrome for the sake of adding chrome.
There's no doubt that this adds some utility to the language (although, it
has to be said, the token-splitting example you quoted is probably better
done in C no matter the compiler, IOW, use the extend system and be done
with it), the only problem is that it's only what it claims to be if you're
using the "-g" switch with the right setting and if your environment is
capable of supporting that switch decision.

This isn't so much a suggestion to remove it as it is a suggestion to give
it a name that says what it really is, more of an "inline output format
dumper". I think I'll also be happier about it's inclusion when the compiler
acquires the right kind of errors to cope with incompatible compilation
choices.

I'd also make one more suggestion. I'll use all caps for this because it
needs to be shouted so everyone can hear. INLINE C SHOULD *NEVER* BE USED IN
ANY CODE THAT IMPLEMENTS CORE HARBOUR LIBRARIES. It should be possible for
harbour to build itself no matter anyone's harbour environment and use if
"inline C" will break this ability. We should never actively seek to stop
anyone compiling harbour itself.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 11 04:28:02 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Thu Jan 11 04:28:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKEEIPDIAA.ron@profit-master.com>
Message-ID: <000d01c07bb0$a765c8a0$0f2aa8c0@antonio>

Ron,

> Which suggests, it will have to be some syntax convention, like:
> 
>   [STATIC] CFUNCTION Identifier()
>   {
>     ...
>   }


Thanks God!!!!!!!!!        :-)

Antonio


From harbour@lists.harbour-project.org  Thu Jan 11 04:31:02 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Thu Jan 11 04:31:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <2041021439.20010110201636@orel.ru>
Message-ID: <000e01c07bb1$0bff9160$0f2aa8c0@antonio>

Shashkov, Ryszard

Why don't you join your efforts ?

> I'm also trying to write DBFCDX support. ORDSETFOCUS(), ORDKEY(),
> ORDNAME(), additions of the new records and the changed variants of
> the initial ones are already written. But FOR condition and not-string
> keys are not realized yet. Maybe what I'm doing is all in vain???

Antonio


From harbour@lists.harbour-project.org  Thu Jan 11 04:41:02 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 04:41:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <000d01c07bb0$a765c8a0$0f2aa8c0@antonio>; from alinares@fivetech.com on Thu, Jan 11, 2001 at 10:27:01AM +0100
References: <LOBBKAFMMFGJIKLMEPAKEEIPDIAA.ron@profit-master.com> <000d01c07bb0$a765c8a0$0f2aa8c0@antonio>
Message-ID: <20010111093355.Q9113@hagbard.davep.org>

On Thu, Jan 11, 2001 at 10:27:01AM +0100, Antonio Linares wrote:
> Ron,
> 
> > Which suggests, it will have to be some syntax convention, like:
> > 
> >   [STATIC] CFUNCTION Identifier()
> >   {
> >     ...
> >   }
> 
> Thanks God!!!!!!!!!        :-)

Now now, don't go calling Ron and I Gods, we'll start to get ideas above our
station.

. o O ( Ron, I'll take the underworld, you take the rest, deal? )

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 11 05:18:03 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Thu Jan 11 05:18:03 2001
Subject: [Harbour] My opinion about the Harbour project.
Message-ID: <200101110516_MC2-C131-9D7@compuserve.com>

Ron,

"Can you please tell me what makes this a NON desirable feature?"

Yes.  See below.

"Please explain why should we not allow this code:"

1. The syntax needs improving.  HB_INLINE and its params is nothing
like as good as the inline ASM as often provided.  E.g. HB_INLINE
doesn't provide the access to PRG variables the way inline ASM does.

2. There's weird pollution of the name space - the function naming is
a kludge

3. Mixing ASM in C often means you no longer need an assembler,
whereas the C in PRG has no such benefit.

4. [STATIC] CFUNCTION needs adding, and your FUNCTION aTokens() would
be much clearer using it.

John.

From harbour@lists.harbour-project.org  Thu Jan 11 05:18:17 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Thu Jan 11 05:18:17 2001
Subject: [Harbour] My opinion about the Harbour project.
Message-ID: <200101110516_MC2-C131-9D3@compuserve.com>

Dave,

"The thing with "inline C" is that it presents a problem that no other
"option" seems to have presented so far. I can now write code that I can
compile with harbour that someone else can't compile."

This already can happen with any C.  It's "just" blurred the boundary
such that a PRG can really be C.  The exact meaning of "just" is a bit
scary here.

"needs to be shouted so everyone can hear"

Fair enough.

"INLINE C SHOULD *NEVER* BE USED IN ANY CODE THAT IMPLEMENTS CORE
HARBOUR LIBRARIES"

I'd like to go further: THERE SHOULD BE A MEANS TO ENFORCE THAT.

E.g. all core PRG files to #include something with a #pragma "core"
or to be built with -DHB_CORE (#undef HB_CORE to be prevented!) or
whatever, and Harbour then refuses to compile them at all if they
contain any C.

As more people contribute, it would be too easy for inline C to creep
in. :-(

The above can make it seem like I'm not in favour of any C-in-PRG
feature, but actually I _am_ in favour.  It needs to be done better,
be controlled, etc, that's "all".

John.

From harbour@lists.harbour-project.org  Thu Jan 11 05:18:41 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Thu Jan 11 05:18:41 2001
Subject: [Harbour] INLINE C Synopsis
Message-ID: <200101110516_MC2-C131-9D6@compuserve.com>

Ron,

"1. I recommend, we keep current specifications for INLINE c support."

My vote: No.

"2. I recommend we add C FUNCTION support. I suggest the syntax should be=
:
[STATIC] C FUNCTION Identifier()
{...}"

Maybe.  Needs more discussion, I feel.

John.

From harbour@lists.harbour-project.org  Thu Jan 11 05:18:57 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Thu Jan 11 05:18:57 2001
Subject: [Harbour] Changelog 2001 -01-10 22:30 GMT -3
Message-ID: <200101110516_MC2-C131-9D8@compuserve.com>

Luiz,

"hbmake test.mak -DPR=3Dhello.exe;OB=3Dhello.obj;CF=3Dhello.c"

Please use the same syntax as is standard with (UNIX/GNU/etc) make.

The last thing we need is yet another make with different syntax
and/or semantics.  Sadly RMAKE does not follow the standard.

If you're unsure what the standard is, please get hold of as many as
you can. :-)  E.g. Linux is free. :-)  The docs are also free. :-)

There's almost certainly a good O'Reilly book, too, but it probably
isn't free.  [Knowing Dave he'll now post ISBN and approx price!!]

John.

From harbour@lists.harbour-project.org  Thu Jan 11 05:19:13 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Thu Jan 11 05:19:13 2001
Subject: [Harbour] New build 0.36
Message-ID: <200101110517_MC2-C131-9DA@compuserve.com>

Luiz,

"I=B4d like to suggest that the new build should be release in the
weekend."

Please: NO.  Surely the INLINE C on its own is enough to rule that out.

"Btw , can some one using MSVC update the makefile to add hbmake
dependencies"

I'm unable to build the current files (without hbmake) and haven't
yet found enough time to find why.  Sorry.  But please see my other
msg about hbmake.

John.

From harbour@lists.harbour-project.org  Thu Jan 11 05:20:04 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Thu Jan 11 05:20:04 2001
Subject: [Harbour] My opinion about the Harbour project.
Message-ID: <200101110517_MC2-C131-9D9@compuserve.com>

David,

"I don't see it as being much different from having inline ASM code in a
.PAS or .C file."

1. It's very restricted compared to what I'm used to with ASM in C:
(a) can't use variables in the same easy ways
(b) weird pollution of the name space - the function naming is a
kludge
(c) the syntax needs major changes

2. Mixing ASM in C often means you no longer need an assembler,
whereas the C in PRG has no such benefit.

So, it's a lot different.

John.

From harbour@lists.harbour-project.org  Thu Jan 11 05:25:04 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 05:25:04 2001
Subject: [Harbour] INLINE C Synopsis
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEJEDIAA.ron@profit-master.com>; from ron@profit-master.com on Wed, Jan 10, 2001 at 08:10:58PM -0800
References: <3A5CC75A.5301.1532702E@localhost> <LOBBKAFMMFGJIKLMEPAKCEJEDIAA.ron@profit-master.com>
Message-ID: <20010111100825.V9113@hagbard.davep.org>

On Wed, Jan 10, 2001 at 08:10:58PM -0800, Ron Pinkas wrote:

> Here is a summary of findings, limitations, and specifications with regard
> to inline C support:

Thinking about it, you might also want to document the behind-the-scenes
inclusion of hbapi.h in the output C code.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 11 05:25:17 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 05:25:17 2001
Subject: [Harbour] ChangeLog 2001-01-10 18:20 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKEEJDDIAA.ron@profit-master.com>; from ron@profit-master.com on Wed, Jan 10, 2001 at 06:35:41PM -0800
References: <3A5CC75A.5301.1532702E@localhost> <LOBBKAFMMFGJIKLMEPAKEEJDDIAA.ron@profit-master.com>
Message-ID: <20010111100308.U9113@hagbard.davep.org>

On Wed, Jan 10, 2001 at 06:35:41PM -0800, Ron Pinkas wrote:

>    * source/compiler/harbour.slx
>      + Added support for {} on same line

Does that mean that this:

,----
| HB_INLINE() { printf( "Hello, World! From C." ); }
`----

should now work or just that this:

,----
| HB_INLINE() 
| { printf( "Hello, World! From C." ); }
`----

should work? The latter does but the former doesn't.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 11 05:25:30 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 05:25:30 2001
Subject: [Harbour] Inline C seems to cause double line spacing in PPO output
Message-ID: <20010111095830.T9113@hagbard.davep.org>

Inline C code seems to acquire extra spacing between each line in PPO files:

,----
| davep@hagbard:~/temp$ cat foo.prg
| Function Main()
| 
|    ? "Hello, World!"
|    ? "Hello, again!"
| 
|    HB_INLINE()
|    {
|       printf( "Hello, World! From C." );
|    }
| 
| Return( NIL )
|
| davep@hagbard:~/temp$ harbour foo -p
| Harbour Compiler 0.35j (Build 35) (2000.11.30) (Flex)
| Copyright 1999-2000, http://www.harbour-project.org
| Compiling 'foo.prg' and generating preprocessed output to 'foo.ppo'...
| Lines 13, Functions/Procedures 2
| Generating C source output to 'foo.c'... Done.
|
| davep@hagbard:~/temp$ cat foo.ppo
| Function Main()
| 
|    QOut("Hello, World!" )
|    QOut("Hello, again!" )
| 
|    HB_INLINE()
| 
|    {
| 
|       printf( "Hello, World! From C." );
| 
|    }
| 
| Return(NIL )
`----

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 11 05:25:44 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 05:25:44 2001
Subject: [Harbour] INLINE C Synopsis
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEJEDIAA.ron@profit-master.com>; from ron@profit-master.com on Wed, Jan 10, 2001 at 08:10:58PM -0800
References: <3A5CC75A.5301.1532702E@localhost> <LOBBKAFMMFGJIKLMEPAKCEJEDIAA.ron@profit-master.com>
Message-ID: <20010111102402.W9113@hagbard.davep.org>

On Wed, Jan 10, 2001 at 08:10:58PM -0800, Ron Pinkas wrote:

> RETURN HB_INLINE( [[@]xPar1 [, [@]xParN] ] )
>        { /* Any C code */ }

It strikes me that special casing stuff like this might well cause
confusion. Inline code, like this, should either be usable in *any* way that
any expression can be used or it should have just one form of use.

For example, I've *always* coded such that I place parens around the return
value of a return (I guess, for some odd reason I've never quite figured
out, that I've coded RETURN as if it's a function). What this does mean is
that I see the above and think I can do this:

,----
| Function Main()
| Return( HB_INLINE()
|         { hb_retni( hb_pcount() ); } )
`----

This is further reinforced by the fact that this:

,----
| Function Main()
| 
|    ? Foo()
| 
| Return( NIL )
| 
| Function Foo()
| Local n
| Return n :=  HB_INLINE()
|              { hb_retni( hb_pcount() ); }
`----

actually does work. I can see confusion arising here because we've got
something that sort of acts like an blocked expression but can't actually be
used in all the places you'd use a blocked expression.

> We can *not* include an inline block within Harbour Level Parenthesis.

Out of interest, why isn't this possible?

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 11 05:54:02 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Thu Jan 11 05:54:02 2001
Subject: [Harbour] infile C use
In-Reply-To: <20010111100308.U9113@hagbard.davep.org>
Message-ID: <001501c07bbc$7291cdc0$0f2aa8c0@antonio>

Dave,

After all the GT madness analysis and coding,
now you come with a printf!!!!!! ouchhhhh!!!! :-)

Antonio

> ,----
> | HB_INLINE() { printf( "Hello, World! From C." ); }
> `----


From harbour@lists.harbour-project.org  Thu Jan 11 07:06:01 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 07:06:01 2001
Subject: [Harbour] infile C use
In-Reply-To: <001501c07bbc$7291cdc0$0f2aa8c0@antonio>; from alinares@fivetech.com on Thu, Jan 11, 2001 at 11:51:27AM +0100
References: <20010111100308.U9113@hagbard.davep.org> <001501c07bbc$7291cdc0$0f2aa8c0@antonio>
Message-ID: <20010111113343.C9113@hagbard.davep.org>

On Thu, Jan 11, 2001 at 11:51:27AM +0100, Antonio Linares wrote:

> After all the GT madness analysis and coding, now you come with a
> printf!!!!!! ouchhhhh!!!! :-)

How would you write to stdout from C code?

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 11 07:06:16 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 07:06:16 2001
Subject: [Harbour] Changelog 2001 -01-10 22:30 GMT -3
In-Reply-To: <200101110516_MC2-C131-9D8@compuserve.com>; from John_Skelton@compuserve.com on Thu, Jan 11, 2001 at 05:16:42AM -0500
References: <200101110516_MC2-C131-9D8@compuserve.com>
Message-ID: <20010111114257.D9113@hagbard.davep.org>

On Thu, Jan 11, 2001 at 05:16:42AM -0500, John Skelton wrote:

> If you're unsure what the standard is, please get hold of as many as you
> can. :-) E.g. Linux is free. :-) The docs are also free. :-)

GNU make is free and is available for pretty much every platform I'd care to
use.

> There's almost certainly a good O'Reilly book, too, but it probably isn't
> free. [Knowing Dave he'll now post ISBN and approx price!!]

Title....: Managing Projects with make 
Publisher: O'Reilly & Associates, Inc.
ISBN.....: 0-937175-90-0
Authors..: Andrew Oram and Steve Talbott
Prices...: US$17.95 CAN$25.95 (I paid £14.99 in Dillons)

Also of possible interest:

Title....: Programming with GNU Software
Publisher: O'Reilly & Associates, Inc.
ISBN.....: 1-56592-112-7
Authors..: Mike Loukides and Andy Oram
Prices...: US$39.95 CAN$56.95 (I paid £30.02)

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 11 07:16:01 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Thu Jan 11 07:16:01 2001
Subject: [Harbour] infile C use
In-Reply-To: <20010111113343.C9113@hagbard.davep.org>
Message-ID: <001b01c07bc8$00870c20$0f2aa8c0@antonio>

Dave,

> How would you write to stdout from C code?

Using the GT api services.

Antonio



From harbour@lists.harbour-project.org  Thu Jan 11 08:02:02 2001
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Thu Jan 11 08:02:02 2001
Subject: [Harbour] My opinion about the Harbour project.
References: <LOBBKAFMMFGJIKLMEPAKOEINDIAA.ron@profit-master.com> <200101102318.f0ANIpY22598@thor.parrett.net>
Message-ID: <3A5DAEA5.40D8840F@libero.it>

David,

it is a lot less usefull than inline asm inside C or Pascal since with
inline ASM I can directly access C or Pascal level variables (here I
still need extended api) and frees me from using an assembler (here I
have to use a C compiler, not only, but this is now a requirement if I
am on win32 where I can ask harbour to output obj files directly).

regards.


"David G. Holm" ha scritto:
> 
> ** Reply to message from Maurilio Longo <maurilio.longo@libero.it> on
> Wed, 10 Jan 2001 23:36:06 +0100
> 
> > And I don't like to mix things, if it's a .PRG file while add some C
> > code _inside_ it?
> 
> I don't see it as being much different from having inline ASM code in a
> .PAS or .C file.
> --
> David G. Holm, Set Captain and all around
> Harbour Project Clipper Compatibility fanatic.
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia


From harbour@lists.harbour-project.org  Thu Jan 11 08:06:06 2001
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Thu Jan 11 08:06:06 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <200101110516_MC2-C131-9D7@compuserve.com>
Message-ID: <3A5D692D.28531.17AA9390@localhost>

On 11 Jan 2001, at 5:16, John Skelton wrote:

> 3. Mixing ASM in C often means you no longer need an assembler,
> whereas the C in PRG has no such benefit.

But, wouldn't this open the door for inline ASM if your C compiler 
supported it?


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Thu Jan 11 08:19:02 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 08:19:02 2001
Subject: [Harbour] infile C use
In-Reply-To: <001b01c07bc8$00870c20$0f2aa8c0@antonio>; from alinares@fivetech.com on Thu, Jan 11, 2001 at 01:14:09PM +0100
References: <20010111113343.C9113@hagbard.davep.org> <001b01c07bc8$00870c20$0f2aa8c0@antonio>
Message-ID: <20010111131833.E9113@hagbard.davep.org>

On Thu, Jan 11, 2001 at 01:14:09PM +0100, Antonio Linares wrote:
> Dave,
> 
> > How would you write to stdout from C code?
> 
> Using the GT api services.

Why go via the GT layer if all you want to do is write something to stdout?

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 11 10:05:03 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 11 10:05:03 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <200101110517_MC2-C131-9D9@compuserve.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKIEJIDIAA.ron@profit-master.com>

John, and rest,

> "I don't see it as being much different from having inline ASM code in a
> .PAS or .C file."
>
> 1. It's very restricted compared to what I'm used to with ASM in C:
> (a) can't use variables in the same easy ways

Clipper variables can never be accesses by C directly.

> (b) weird pollution of the name space - the function naming is a
> kludge

There is no pollution of the name space. Functions starts with HB_ prefix
(which is a Harbour name space prefix, is it not?), and are STATIC. I guess
I shouldn't even try to address the "kludge", I'm just too damn opinionated,
let's not go there.

> (c) the syntax needs major changes

Like?

> 2. Mixing ASM in C often means you no longer need an assembler,
> whereas the C in PRG has no such benefit.

Oh yes it does [have such benefit], I don't have a clue, (though I can
learn, but why?) how to compile a C file, and how to link such compiled
file, with my Harbour PRG file. I'd like to keep it that way please.

> So, it's a lot different.

I could care less, if it is similar or different. This was not designed to
replace inline ASM!!! It was designed to simplify inclusion of C code within
a Harbour application. It was designed to allow something, not feasible
before, the inclusion of a C code, within a Harbour PRG. It was designed to
allow the inclusion of a C execution unit, inside any given Harbour
function.

Please let's back off, few steps. This does get tiring. I did provide
detailed technical review of this feature. You are welcome to post detailed
suggestions for improvements.

Ron


From harbour@lists.harbour-project.org  Thu Jan 11 10:13:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 11 10:13:02 2001
Subject: [Harbour] ChangeLog 2001-01-10 18:20 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <20010111100308.U9113@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEJJDIAA.ron@profit-master.com>

Dave,

> >    * source/compiler/harbour.slx
> >      + Added support for {} on same line
>
> Does that mean that this:
>
> ,----
> | HB_INLINE() { printf( "Hello, World! From C." ); }
> `----
>
> should now work or just that this:
>
> ,----
> | HB_INLINE()
> | { printf( "Hello, World! From C." ); }
> `----
>
> should work? The latter does but the former doesn't.

Only the later, for the clear reason (described in details, in my synopsis),
that Harbour and C syntaxes, can't be mixed on the *same* source line.

Ron


From harbour@lists.harbour-project.org  Thu Jan 11 10:19:03 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 11 10:19:03 2001
Subject: [Harbour] INLINE C Synopsis
In-Reply-To: <20010111102402.W9113@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKKEJJDIAA.ron@profit-master.com>

> > We can *not* include an inline block within Harbour Level Parenthesis.
>
> Out of interest, why isn't this possible?

Because it requires mixing of Harbour and C syntaxes on the same source
line. Please re-read my synopsis for explanation about PP -> Lexer
integration, and its impact on this issue, for the technical reasons.

Ron


From harbour@lists.harbour-project.org  Thu Jan 11 10:20:04 2001
From: harbour@lists.harbour-project.org (Mark W. Schumann)
Date: Thu Jan 11 10:20:04 2001
Subject: [Harbour] Inline C, how it might work
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKIEJIDIAA.ron@profit-master.com>; from ron@profit-master.com on Thu, Jan 11, 2001 at 07:05:47AM -0800
References: <200101110517_MC2-C131-9D9@compuserve.com> <LOBBKAFMMFGJIKLMEPAKIEJIDIAA.ron@profit-master.com>
Message-ID: <20010111101839.C360@columbus.private.underflap.com>

Lurker catfood emerges.

On Thu, Jan 11, 2001 at 07:05:47AM -0800, Ron Pinkas wrote:
> John, and rest,
> 
> > "I don't see it as being much different from having inline ASM code in a
> > .PAS or .C file."
> >
> > 1. It's very restricted compared to what I'm used to with ASM in C:
> > (a) can't use variables in the same easy ways
> 
> Clipper variables can never be accesses by C directly.

FlagShip has an interesting way of dealing with this.

I seem to recall there's a C macro that you use in FlagShip's inline
C to access Clipper variables.  It's used something like this, from
memory:

function foo (bar, baz)
local abc
#Cinline
   GET_CLIPPER_INT_VAL(abc) = 42;
#endCinline
return nil

That GET_CLIPPER_INT_VAL is translated as something like (__bb_abc)
which is how FlagShip's intermediate-C code referenced the (abc)
variable to begin with.

I know this is a bit fuzzy but maybe there's a hint in there somewhere!

I agree with __DavePearson() that the inline C feature as described
seems to work only if you choose to compile to intermediate-C.  I don't
know that this is such a bad thing though.

-- 
"English is much easier to learn poorly and to communicate in poorly
 than any other language." --M.H.Heim quoted by Barbara Wallraff
          http://www.theatlantic.com/issues/2000/11/wallraff2.htm
Software Under Flap     http://www.underflap.com
Mark W. Schumann        http://schumann.cleveland.oh.us
The Cleveland Pages     http://re.cleveland.oh.us

From harbour@lists.harbour-project.org  Thu Jan 11 10:32:02 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 10:32:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKIEJIDIAA.ron@profit-master.com>; from ron@profit-master.com on Thu, Jan 11, 2001 at 07:05:47AM -0800
References: <200101110517_MC2-C131-9D9@compuserve.com> <LOBBKAFMMFGJIKLMEPAKIEJIDIAA.ron@profit-master.com>
Message-ID: <20010111153102.G9113@hagbard.davep.org>

On Thu, Jan 11, 2001 at 07:05:47AM -0800, Ron Pinkas wrote:

> Oh yes it does [have such benefit], I don't have a clue, (though I can
> learn, but why?) how to compile a C file, and how to link such compiled
> file, with my Harbour PRG file. I'd like to keep it that way please.

<*boggle*> This from someone who writes C code for harbour? Seriously Ron,
that's the worst reason I've seen yet for inline C code. Make no mistake,
learning how to compile C code is *way* easier than learning how to program
in C, let alone how to write C code that can work with harbour or
CA-Clipper. That's a pretty lame reason.

> Please let's back off, few steps. This does get tiring. I did provide
> detailed technical review of this feature.

Here's the thing Ron. Here's the problem with folding code into the CVS and
then soliciting ideas and opinions instead of floating the idea first and
asking people what they think. Once again you've placed yourself in a
position where you seem to feel the need to defend code that you've already
put out there. This is compounded by a "it might not be perfect but I've got
a use for it" attitude towards any critical review of the idea or the code
itself.

A number of people, myself included, have raised broad concerns and detailed
problems and, once again, you're getting all defensive about it. Ask
yourself, when you're asking people who've provided the opinions you
solicited (remember, nobody forced you to open your code and ideas to peer
review) to "back off" are you really interested in what they've got to say?
Are you really open to the feedback you actually requested?

Perhaps, instead of asking people to "back off", you might consider taking
stock of the input you've received. Perhaps soliciting opinion about a
design *before* you stick it into CVS might also be a good idea in future.
Other people have done that in the history of the development of harbour and
it seems to have worked well.

I can confirm that the same approach works in other free software projects
too.

Just a thought.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 11 10:33:03 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 10:33:03 2001
Subject: [Harbour] ChangeLog 2001-01-10 18:20 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEJJDIAA.ron@profit-master.com>; from ron@profit-master.com on Thu, Jan 11, 2001 at 07:13:54AM -0800
References: <20010111100308.U9113@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKCEJJDIAA.ron@profit-master.com>
Message-ID: <20010111153234.H9113@hagbard.davep.org>

On Thu, Jan 11, 2001 at 07:13:54AM -0800, Ron Pinkas wrote:

> > should work? The latter does but the former doesn't.
> 
> Only the later, for the clear reason (described in details, in my
> synopsis), that Harbour and C syntaxes, can't be mixed on the *same*
> source line.

That's a little misleading isn't it? The inline assignment operator and the
RETURN statement are both "clipper syntax".

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 11 10:37:01 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 11 10:37:01 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <20010111083154.J9113@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKKEJKDIAA.ron@profit-master.com>

Dave,

> This isn't so much a suggestion to remove it as it is a suggestion to give
> it a name that says what it really is, more of an "inline output format
> dumper". I think I'll also be happier about it's inclusion when
> the compiler
> acquires the right kind of errors to cope with incompatible compilation
> choices.

1. I could care less, how we refer to it, feel free to name it anything you
like, in FAQ, and documentation.

2. You must have missed ChangeLog:

   2001-01-10 18:20 UTC-0800 Ron Pinkas <ron@profit-master.com>.

Harbour already reports error, when using this feature without -gc[n].

> I'd also make one more suggestion. I'll use all caps for this because it
> needs to be shouted so everyone can hear. INLINE C SHOULD *NEVER*
> BE USED IN
> ANY CODE THAT IMPLEMENTS CORE HARBOUR LIBRARIES. It should be possible for
> harbour to build itself no matter anyone's harbour environment and use if
> "inline C" will break this ability. We should never actively seek to stop
> anyone compiling harbour itself.

Harbour LIBs are a compiled form. The only form of LIBs we have is compiled
with C. Until if and when, we have full support for any other language, and
until the FULL RTL is re-written, in a language OTHER than C. This seems
like a mute point.

Ron


From harbour@lists.harbour-project.org  Thu Jan 11 10:44:01 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 10:44:01 2001
Subject: [Harbour] INLINE C Synopsis
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKKEJJDIAA.ron@profit-master.com>; from ron@profit-master.com on Thu, Jan 11, 2001 at 07:20:08AM -0800
References: <20010111102402.W9113@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKKEJJDIAA.ron@profit-master.com>
Message-ID: <20010111154123.I9113@hagbard.davep.org>

On Thu, Jan 11, 2001 at 07:20:08AM -0800, Ron Pinkas wrote:

> > > We can *not* include an inline block within Harbour Level Parenthesis.
> >
> > Out of interest, why isn't this possible?
> 
> Because it requires mixing of Harbour and C syntaxes on the same source
> line. Please re-read my synopsis for explanation about PP -> Lexer
> integration, and its impact on this issue, for the technical reasons.

I'll be the first to admit that I don't know the first thing about harbour's
lexer so the explanation didn't help me too much. I guess what I'm looking
for is a layman's explanation (because I'm probably not going to be the last
to ask this question) of why I can't use inline C in the way the current
implementation suggests I should be able to. See my other email about the
ambiguity regarding what can and can't be done and how that might cause
confusion.

In essence, what I'm interested in, is why it's not possible to separate out
the C code from the Clipper code and replace that block with a call to the
function that gets generated. For example:

,----
| SomeFunction( HB_InLine() { hb_retni( 42 ); } )
`----

would, to this layman, easily become:

,----
| SomeFunction( HB_INLINE_0() )
`----

What I'm looking for (and, don't forget, I've got one eye on future FAQs
here as well) is a sound layman's explanation as to why something this
"obvious" can't actually be done.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 11 10:48:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 11 10:48:02 2001
Subject: [Harbour] ChangeLog 2001-01-10 18:20 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <20010111153234.H9113@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKGEJLDIAA.ron@profit-master.com>

Dave,

> > Only the later, for the clear reason (described in details, in my
> > synopsis), that Harbour and C syntaxes, can't be mixed on the *same*
> > source line.
>
> That's a little misleading isn't it? The inline assignment
> operator and the
> RETURN statement are both "clipper syntax".

Not at all, the HB_INLINE() *is* Harbour syntax. The problem is with putting
C code on the same line. That's the part that starts with the {.

You can have any legal pre expression harbour code to the left of the
HB_INLINE, but you can have any on the right.

Ron


From harbour@lists.harbour-project.org  Thu Jan 11 10:50:05 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 10:50:05 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKKEJKDIAA.ron@profit-master.com>; from ron@profit-master.com on Thu, Jan 11, 2001 at 07:37:35AM -0800
References: <20010111083154.J9113@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKKEJKDIAA.ron@profit-master.com>
Message-ID: <20010111154953.J9113@hagbard.davep.org>

On Thu, Jan 11, 2001 at 07:37:35AM -0800, Ron Pinkas wrote:
> Dave,
> 
> > This isn't so much a suggestion to remove it as it is a suggestion to
> > give it a name that says what it really is, more of an "inline output
> > format dumper". I think I'll also be happier about it's inclusion when
> > the compiler acquires the right kind of errors to cope with incompatible
> > compilation choices.
> 
> 1. I could care less, how we refer to it, feel free to name it anything
> you like, in FAQ, and documentation.

Considering you'll be writing the documentation for your new feature of the
compiler I'm guessing it's only fair that it's finally your call.

> > I'd also make one more suggestion. I'll use all caps for this because it
> > needs to be shouted so everyone can hear. INLINE C SHOULD *NEVER* BE
> > USED IN ANY CODE THAT IMPLEMENTS CORE HARBOUR LIBRARIES. It should be
> > possible for harbour to build itself no matter anyone's harbour
> > environment and use if "inline C" will break this ability. We should
> > never actively seek to stop anyone compiling harbour itself.
> 
> Harbour LIBs are a compiled form. 

Really? What's all this source code I've got kicking around then?

>                                   The only form of LIBs we have is
> compiled with C. Until if and when, we have full support for any other
> language, and until the FULL RTL is re-written, in a language OTHER than
> C. This seems like a mute point.

It's not a moot point at all. Are you suggesting that someone might not want
to modify some core behaviour that's written in a PRG (the get system, to
take a classic Clipper example) and rebuild it? That someone might be using
a binary distribution of harbour that is producing OBJ files without the aid
of a C compiler. Using inline C in core PRG code will stop them from being
able to recompile harbour source.

It's far from moot, it's actually quite important.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 11 11:14:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 11 11:14:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <20010111153102.G9113@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKGEJMDIAA.ron@profit-master.com>

Dave,

> > Please let's back off, few steps. This does get tiring. I did provide
> > detailed technical review of this feature.
>
> Here's the thing Ron. Here's the problem with folding code into
> the CVS and
> then soliciting ideas and opinions instead of floating the idea first and
> asking people what they think. Once again you've placed yourself in a
> position where you seem to feel the need to defend code that
> you've already
> put out there. This is compounded by a "it might not be perfect
> but I've got
> a use for it" attitude towards any critical review of the idea or the code
> itself.

I absolutely have no need to defend my code. There was not a single concern
about the quality of the code, was there? Everyone that cared to review and
comment on the code, had positive things to say. Everyone agreed it was a
great foundation. That's exactly why I felt confident about uploading it.
The syntax is minor aspect of this work.

I'm very open to suggestions, which [technical] suggestion, you feel I
ignored, or didn't like hearing?

> A number of people, myself included, have raised broad concerns
> and detailed
> problems and, once again, you're getting all defensive about it. Ask
> yourself, when you're asking people who've provided the opinions you
> solicited (remember, nobody forced you to open your code and ideas to peer
> review) to "back off" are you really interested in what they've
> got to say?
> Are you really open to the feedback you actually requested?

That's selective reading is it not?

1. I said "Let's back off, few steps", I 'm confident "Let's" read as "we"
or "us" but never as "you", as you seem to suggest.

2. Backing off, *few* *steps*, is not at all like a back off request. It is
a subtle suggestion, we might got to involved in, and need to step back, and
see from a different angle.

3. You didn't describe problems. You described expectations. I tried my best
come as close  to your expectation as possible, and when not possible, I
tried explaining why.

> Perhaps, instead of asking people to "back off", you might consider taking
> stock of the input you've received. Perhaps soliciting opinion about a
> design *before* you stick it into CVS might also be a good idea in future.
> Other people have done that in the history of the development of
> harbour and
> it seems to have worked well.

Dave, I think I responded with great detail, and full attention, to all
input raised.

Please don't get defensive yourself, if I simply suggest that I'm getting
tired of the discussion, because of it value, or lack of. I'm eager and
willing to discuss, technical suggestions.

Ron



From harbour@lists.harbour-project.org  Thu Jan 11 11:34:02 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 11:34:02 2001
Subject: [Harbour] ChangeLog 2001-01-10 18:20 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKGEJLDIAA.ron@profit-master.com>; from ron@profit-master.com on Thu, Jan 11, 2001 at 07:48:47AM -0800
References: <20010111153234.H9113@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKGEJLDIAA.ron@profit-master.com>
Message-ID: <20010111161510.K9113@hagbard.davep.org>

On Thu, Jan 11, 2001 at 07:48:47AM -0800, Ron Pinkas wrote:

> > That's a little misleading isn't it? The inline assignment operator and
> > the RETURN statement are both "clipper syntax".
> 
> Not at all, the HB_INLINE() *is* Harbour syntax. The problem is with
> putting C code on the same line. That's the part that starts with the {.

Ok, right, I see that.

> You can have any legal pre expression harbour code to the left of the
> HB_INLINE, but you can have any on the right.

I take it that should read "*can't* have any on the right"? Ok, so there
isn't really a "syntax" as such to the user of HB_INLINE(), at least, not in
the way you suggested in Synopsis? The synopsis seemed to suggest that the
inline assignment operator and RETURN were the only ways you could use the
return value of a HB_INLINE().

Hmm. Is it at all possible that there is a way around this limitation? I
guess I'm looking at this and thinking that the bounding of C code for
inline C really isn't all that different from the bounding of Clipper code
in codeblocks (or, more to the point, it seems like an obvious question
people might ask). I can sort of see some merit to being able to actually
use inline C code inside code blocks (but currently we can't, right?).

Another question springs to mind too. What would be the recommended method
of including a header file for use with the C code such that it isn't
visible to the PRG code?

-- 
Dave Pearson                        |   w3ng - The WWW Norton Guide reader.
http://www.davep.org/               |     eg - Norton Guide reader for Linux.
http://www.davep.org/clipper/       |    weg - Norton Guide reader for Windows.
http://www.davep.org/norton-guides/ | dgscan - DGROUP scanner for Clipper.

From harbour@lists.harbour-project.org  Thu Jan 11 11:34:18 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 11:34:18 2001
Subject: [Harbour] ChangeLog 2001-01-10 18:20 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKGEJLDIAA.ron@profit-master.com>; from ron@profit-master.com on Thu, Jan 11, 2001 at 07:48:47AM -0800
References: <20010111153234.H9113@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKGEJLDIAA.ron@profit-master.com>
Message-ID: <20010111163335.L9113@hagbard.davep.org>

On Thu, Jan 11, 2001 at 07:48:47AM -0800, Ron Pinkas wrote:

> You can have any legal pre expression harbour code to the left of the
> HB_INLINE, but you can have any on the right.

Further to what I just wrote, taking the above rule I decided to test that
this would fail:

,----
| davep@hagbard:~/temp$ cat foo.prg
| Function Main()
| Local n := 0
| 
|    ? HB_INLINE()
|      { hb_retni( 42 ); }
| 
| Return( NIL )
|
| davep@hagbard:~/temp$ harbour foo -np
| Harbour Compiler 0.35j (Build 35) (2000.11.30) (Flex)
| Copyright 1999-2000, http://www.harbour-project.org
| Compiling 'foo.prg' and generating preprocessed output to 'foo.ppo'...
| Lines 9, Functions/Procedures 1
| Generating C source output to 'foo.c'... Done.
`----

but, as you can see, it compiles without incident. Now, obviously, I
expected this to fail because "?" becomes a QOUT() and so there'd be
something to the right side of the inline code.

Looking at the PPO I see:

,----
| davep@hagbard:~/temp$ cat foo.ppo
| Function Main()
| Local n := 0
| 
|    QOut(HB_INLINE() )
| 
|      { hb_retni( 42 ); }
| 
| Return(NIL )
`----

so it seems that the call to the inline code and the body of the inline code
can actually be separate. Taking this on a stage we promote this idea to the
level of PRG file:

,----[ foo.prg ]
| Function Main()
| Local a := { 0 }
| 
|    a[ HB_INLINE() ]++
|    { hb_retni( 1 ); }
| 
|    ? a[ 1 ]
|    
| Return( NIL )
`----

which actually works. Then it starts to get really strange:

,----[ foo.prg ]
| Function Main()
| Local a := { 0 }
| 
|    a[ HB_INLINE() ] += HB_INLINE()
|    { hb_retni( 1 ); }
|    { hb_retni( 42 ); }
| 
|    ? a[ 1 ]
|    
| Return( NIL )
`----

That actually works too. So I try to take it to it's extreme conclusion:

,----[ foo.prg ]
| Function Main()
| Local a := { 0 }
| 
|    a[ HB_INLINE() ] += HB_INLINE()
| 
|    ? a[ 1 ]
|    
| Return( NIL )
| 
| { hb_retni( 1 ); }
| 
| { hb_retni( 42 ); }
`----

this actually makes it thru harbour but results in:

,----
| davep@hagbard:~/temp$ tail -n 14 foo.c
| 
| #include "hbapi.h"
| #line 4 "foo.prg"
| static HB_FUNC( HB_INLINE_0 )
| 
|    ? a[ 1 ]
| 
| Return( NIL )
| 
| { hb_retni( 1 ); }
| #line 10 "foo.prg"
| static HB_FUNC( HB_INLINE_1 )
| 
| { hb_retni( 42 ); }
`----

the one that did catch my eye (me having mentioned code blocks) was:

,----[ foo.prg ]
| Function Main()
| 
|    eval( {|| qout( HB_INLINE() ) } )
|    
|    {
|       hb_retni( 23 );
|    }
|    
| Return( NIL )
`----

which, as you'd expect by now, compiled and ran just fine.

Still, at least I can have my method of writing RETURNs back:

,----[ foo.prg ]
| Function Main()
| 
|    ? Foo()
|    
| Return( NIL )
| 
| Function Foo()
| Return( HB_INLINE() )
|         { hb_retni( 23 ); }
`----

Anyone for an obfuscated harbour code contest? ;-)

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 11 11:36:03 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Thu Jan 11 11:36:03 2001
Subject: [Harbour] INLINE C Synopsis
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEJEDIAA.ron@profit-master.com>
References: <3A5CC75A.5301.1532702E@localhost>
Message-ID: <3A5DF00D.6368.190A4E7@localhost>

On 10 Jan 2001, at 20:10, Ron Pinkas wrote:

>    1. Ignore all other characters, while reading strings.
>    2. Strip Multi-Line Comments (/**/).
>    3. Strip full line Comments (*).
>    4. Strip inline comments (//) and (&&) (note && is a C token!!!)
>    5. Combines lines that end with semi-colon (;) with the immediate next
> line (note (;) is a C line terminator.
>    6. Parses result line for #PRAGMAs, #INCLUDEs, #DEFINEs, #[x]TRANSLATEs,
> and #[x]COMMANDS.

  Please notice that all these tasks should be suspended during 
processing of inlined code. However this is not true currently - the 
harbour preprocessor strips /* */ comments and is processing #define, 
#pragma - it even is trying to include any header files used in inlined 
#include statement.
  This leads however another problem: it is possible that there will be 
conflicts in some #define'ed names, for example, code in PRG can define 
some constant that can be redefined in silently included hbapi.h file.


> In order to allow inline C support, all PP logic must be suspended, other
> than looking for next NewLine character.

  See above.

> While technically possible, to move HB_INLINE token recognition to PP, to
> allow *midline* suspension of PP logic, I can't recommend it because:
> 
> The HB_INLINE is followed by ( [...] ) which may include complex Harbour
> expressions, before finally, optionally, reaching the beginning of the
> inline block ({). This type of parsing is traditionally reserved for the
> Lexer and Parser. But it is technically feasible.

   IMHO, this is rather a limitation of chosen design. In current code 
HB_INLINE is basically a call to a hidden function with an automatically 
generated name. If someone has decided that he/she needs a C code then 
there is no difference in speed if it is an automatically generated 
function or a user defined function. However if there is a task that 
needs an implementation in C then there is a big chance that this piece 
of code will be used in a different places. In other words it is more 
convenient and more readable if we define an explicit function instead of 
a hidden one. This implies that HB_INLINE and its syntax is not needed at 
all because a regular function call syntax can be used here.

  In order to provide a required functionality (easier mixing of PRG and 
C code - with all its benefits and drawbacks) we should support a 
different syntax based, IMHO, on #pragma support. Only #pragma will give 
the preprocessor all information for correct code processing and will 
minimize an interactions between PP, lexer and pcode generator.

So instead of:
cVar := HB_INLINE( cVar )
{
  //do something 
}

we should use something like:

cVar := MyCfunction( cVar )

#pragma C start
#include "hbapi.h"
HB_FUN( MyCFunction )
{
  //do something
}
#pragma C end


> 1. Can utilize PRG Variables passed as parameters, using standard Harbour
> Extend and API systems.
> 1. Can manipulate PRG Variables passed by reference, using standard Harbour
> Extend and API systems.
> 1. Can be directly assigned to any Harbour variable.
> 2. Can be directly returned as the return value of a Harbour level function.
> 3. Can *not* be directly passed as a parameter to another function.
> 4. Can *not* be directly involved in any expression operators manipulation.

   Notice that all these points are the best suited with a normal C 
function that is using the Extend API.

Regards, Ryszard

From harbour@lists.harbour-project.org  Thu Jan 11 11:42:03 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 11 11:42:03 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <20010111154953.J9113@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKIEJNDIAA.ron@profit-master.com>

Dave,

> > > needs to be shouted so everyone can hear. INLINE C SHOULD *NEVER* BE
> > > USED IN ANY CODE THAT IMPLEMENTS CORE HARBOUR LIBRARIES. It should be
> > > possible for harbour to build itself no matter anyone's harbour
> > > environment and use if "inline C" will break this ability. We should
> > > never actively seek to stop anyone compiling harbour itself.
> >
> > Harbour LIBs are a compiled form.
>
> Really? What's all this source code I've got kicking around then?

Source of these LIBs. LIBs by definition are compiled form.


> >                                   The only form of LIBs we have is
> > compiled with C. Until if and when, we have full support for any other
> > language, and until the FULL RTL is re-written, in a language OTHER than
> > C. This seems like a mute point.
>
> It's not a moot point at all. Are you suggesting that someone
> might not want
> to modify some core behaviour that's written in a PRG (the get system, to
> take a classic Clipper example) and rebuild it? That someone
> might be using
> a binary distribution of harbour that is producing OBJ files
> without the aid
> of a C compiler. Using inline C in core PRG code will stop them from being
> able to recompile harbour source.

Can you build usable Harbour without C?
Can you build the Harbour RTL, without C?

Harbour source is *mostly* C. Not being able to compile C, means not being
able to compile the bulk of the RTL anyway!!!

Anyone can rewrite a PRG code. Anyone can even rewrite a C RTL function in
PRG. Inclusion of inline C will not change any of that. Some (most) of the
RTL is written in C, some in PRG, and some could be in an inline C. This
should be a design decision, of whom ever is writing the code. Just like,
currently, it could be written as either C or PRG.

No one can build any Harbour Application, without linking the *compiled*
form of the HVM, and RTL. The compiled form of the HVM & RTL, *is* the
output of a C compiler. The bulk of the RTL, is written in C, the rest is a
PRG code, compiled by Harbour to C code, which is then compiled by the C
compiler.

> It's far from moot, it's actually quite important.

In conclusion, there is no way to produce the RTL, which you were concerned
with, *without* using a C compiler. Thus, such concern *is* MUTE.


From harbour@lists.harbour-project.org  Thu Jan 11 11:55:03 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 11 11:55:03 2001
Subject: [Harbour] INLINE C Synopsis
In-Reply-To: <3A5DF00D.6368.190A4E7@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEJODIAA.ron@profit-master.com>

Ryszard,

>   Please notice that all these tasks should be suspended during
> processing of inlined code. However this is not true currently - the
> harbour preprocessor strips /* */ comments and is processing #define,
> #pragma - it even is trying to include any header files used in inlined
> #include statement.
>   This leads however another problem: it is possible that there will be
> conflicts in some #define'ed names, for example, code in PRG can define
> some constant that can be redefined in silently included hbapi.h file.

ALL PP processing *is* currently suspended. Please update your source. There
can be no conflict. The C code is protected from any PRG level #defines etc.

>   In order to provide a required functionality (easier mixing of PRG and
> C code - with all its benefits and drawbacks) we should support a
> different syntax based, IMHO, on #pragma support. Only #pragma will give
> the preprocessor all information for correct code processing and will
> minimize an interactions between PP, lexer and pcode generator.
>
> So instead of:
> cVar := HB_INLINE( cVar )
> {
>   //do something
> }
>
> we should use something like:
>
> cVar := MyCfunction( cVar )
>
> #pragma C start
> #include "hbapi.h"
> HB_FUN( MyCFunction )
> {
>   //do something
> }
> #pragma C end

This leaves a problem with creating the Symbol Table. We have to have the
function name declared. Thus, the syntax should be something like:

[STATIC] C FUNCTION Identifier()
{...}

Ron


From harbour@lists.harbour-project.org  Thu Jan 11 12:10:04 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 12:10:04 2001
Subject: [Harbour] INLINE C Synopsis
In-Reply-To: <3A5DF00D.6368.190A4E7@localhost>; from rglab@imid.med.pl on Thu, Jan 11, 2001 at 05:40:29PM +0100
References: <3A5CC75A.5301.1532702E@localhost> <LOBBKAFMMFGJIKLMEPAKCEJEDIAA.ron@profit-master.com> <3A5DF00D.6368.190A4E7@localhost>
Message-ID: <20010111170931.R9113@hagbard.davep.org>

On Thu, Jan 11, 2001 at 05:40:29PM +0100, Ryszard Glab wrote:

> So instead of:
> cVar := HB_INLINE( cVar )
> {
>   //do something 
> }
> 
> we should use something like:
> 
> cVar := MyCfunction( cVar )
> 
> #pragma C start
> #include "hbapi.h"
> HB_FUN( MyCFunction )
> {
>   //do something
> }
> #pragma C end

I must admit, the more I toy with this the less I like the "inline" aspect
of this and the more I find myself wondering if something like the above
makes more sense. The above is, however, only really one step away from "why
bother at all, use a .C file".

I do keep getting this feeling that what we're looking at right now falls
short of a correct implementation (no offence to Ron), neither do I believe
that a lack of alternative code is argument enough for keeping what has been
presented so far.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 11 12:10:21 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 12:10:21 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKIEJNDIAA.ron@profit-master.com>; from ron@profit-master.com on Thu, Jan 11, 2001 at 08:42:46AM -0800
References: <20010111154953.J9113@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKIEJNDIAA.ron@profit-master.com>
Message-ID: <20010111170327.Q9113@hagbard.davep.org>

On Thu, Jan 11, 2001 at 08:42:46AM -0800, Ron Pinkas wrote:
> Dave,
> 
> > > Harbour LIBs are a compiled form.
> >
> > Really? What's all this source code I've got kicking around then?
> 
> Source of these LIBs. LIBs by definition are compiled form.

I know what a .LIB file is, I also know what a .a file and a .so file is. A
*library*, however, is a collection of code. I'm talking about the harbour
runtime library, I'm not talking about any given platform's or any given
tool's specific binary archive of object code.

Can you see that I'm talking about the harbour runtime library as an entity
separate from an actual binary file?

> > It's not a moot point at all. Are you suggesting that someone might not
> > want to modify some core behaviour that's written in a PRG (the get
> > system, to take a classic Clipper example) and rebuild it? That someone
> > might be using a binary distribution of harbour that is producing OBJ
> > files without the aid of a C compiler. Using inline C in core PRG code
> > will stop them from being able to recompile harbour source.
> 
> Can you build usable Harbour without C?

No, but that's beside the point. I'm not talking about building the whole of
harbour. Did you see what I write above about someone using a binary
distribution of harbour? Do you understand that people can and will also
have access to the source code for the RTL? Do you understand and appreciate
that people have the source for key parts of CA-Cipper and that hacking and
rebuilding those things found in SOURCE\SYSTEM is part of the culture of
Clipper programming?

> Can you build the Harbour RTL, without C?

No, but that's beside the point too. See above.

> Harbour source is *mostly* C. Not being able to compile C, means not being
> able to compile the bulk of the RTL anyway!!!

Again, beside the point. I'm talking about the parts of the harbour RTL that
are written in harbour. You must see this.

> No one can build any Harbour Application, without linking the *compiled*
> form of the HVM, and RTL. 

True, but immaterial. This has nothing to do with my warning.

>                           The compiled form of the HVM & RTL, *is* the
> output of a C compiler. 

True, but immaterial. This also has nothing to do with my warning.

>                         The bulk of the RTL, is written in C, the rest is
> a PRG code, compiled by Harbour to C code, which is then compiled by the C
> compiler.

Also true, but immaterial. This also has nothing to do with my warning.

> > It's far from moot, it's actually quite important.
> 
> In conclusion, there is no way to produce the RTL, which you were
> concerned with, *without* using a C compiler. Thus, such concern *is*
> MUTE.

Why this obsession about rebuilding the whole of the RTL? I'm not talking
about people trying to build the whole of harbour without a C compiler. Of
course that isn't possible. Why are you responding to something I'm not
actually suggesting?

Lets try a different approach:

Do you understand the nature and significance of SOURCE\SYSTEM in CA-Clipper
and friends? Do you understand that the fact that harbour is free software
means that this significance is extend to every single part of the RTL that
is written in Clipper?

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 11 12:11:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 11 12:11:02 2001
Subject: [Harbour] ChangeLog 2001-01-10 18:20 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <20010111163335.L9113@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKKEJODIAA.ron@profit-master.com>

Dave,

> > You can have any legal pre expression harbour code to the left of the
> > HB_INLINE, but you can have any on the right.
>
> Further to what I just wrote, taking the above rule I decided to test that
> this would fail:
>
> ,----
> | davep@hagbard:~/temp$ cat foo.prg
> | Function Main()
> | Local n := 0
> |
> |    ? HB_INLINE()
> |      { hb_retni( 42 ); }
> |
> | Return( NIL )
> |
> | davep@hagbard:~/temp$ harbour foo -np
> | Harbour Compiler 0.35j (Build 35) (2000.11.30) (Flex)
> | Copyright 1999-2000, http://www.harbour-project.org
> | Compiling 'foo.prg' and generating preprocessed output to 'foo.ppo'...
> | Lines 9, Functions/Procedures 1
> | Generating C source output to 'foo.c'... Done.
> `----
>
> but, as you can see, it compiles without incident. Now, obviously, I
> expected this to fail because "?" becomes a QOUT() and so there'd be
> something to the right side of the inline code.
>
> Looking at the PPO I see:
>
> ,----
> | davep@hagbard:~/temp$ cat foo.ppo
> | Function Main()
> | Local n := 0
> |
> |    QOut(HB_INLINE() )
> |
> |      { hb_retni( 42 ); }
> |
> | Return(NIL )
> `----
>
> so it seems that the call to the inline code and the body of the
> inline code
> can actually be separate. Taking this on a stage we promote this
> idea to the
> level of PRG file:
>
> ,----[ foo.prg ]
> | Function Main()
> | Local a := { 0 }
> |
> |    a[ HB_INLINE() ]++
> |    { hb_retni( 1 ); }
> |
> |    ? a[ 1 ]
> |
> | Return( NIL )
> `----
>
> which actually works. Then it starts to get really strange:
>
> ,----[ foo.prg ]
> | Function Main()
> | Local a := { 0 }
> |
> |    a[ HB_INLINE() ] += HB_INLINE()
> |    { hb_retni( 1 ); }
> |    { hb_retni( 42 ); }
> |
> |    ? a[ 1 ]
> |
> | Return( NIL )
> `----
>
> That actually works too. So I try to take it to it's extreme conclusion:
>
> ,----[ foo.prg ]
> | Function Main()
> | Local a := { 0 }
> |
> |    a[ HB_INLINE() ] += HB_INLINE()
> |
> |    ? a[ 1 ]
> |
> | Return( NIL )
> |
> | { hb_retni( 1 ); }
> |
> | { hb_retni( 42 ); }
> `----
>
> this actually makes it thru harbour but results in:
>
> ,----
> | davep@hagbard:~/temp$ tail -n 14 foo.c
> |
> | #include "hbapi.h"
> | #line 4 "foo.prg"
> | static HB_FUNC( HB_INLINE_0 )
> |
> |    ? a[ 1 ]
> |
> | Return( NIL )
> |
> | { hb_retni( 1 ); }
> | #line 10 "foo.prg"
> | static HB_FUNC( HB_INLINE_1 )
> |
> | { hb_retni( 42 ); }
> `----
>
> the one that did catch my eye (me having mentioned code blocks) was:
>
> ,----[ foo.prg ]
> | Function Main()
> |
> |    eval( {|| qout( HB_INLINE() ) } )
> |
> |    {
> |       hb_retni( 23 );
> |    }
> |
> | Return( NIL )
> `----
>
> which, as you'd expect by now, compiled and ran just fine.
>
> Still, at least I can have my method of writing RETURNs back:
>
> ,----[ foo.prg ]
> | Function Main()
> |
> |    ? Foo()
> |
> | Return( NIL )
> |
> | Function Foo()
> | Return( HB_INLINE() )
> |         { hb_retni( 23 ); }
> `----
>
> Anyone for an obfuscated harbour code contest? ;-)

Ok, let's clarify, the {} body can *not* be on the same line with Harbour
code, but the HB_INLINE([...]) which is Harbour syntax, *can* be used as any
other Harbour Expression. With one restriction, there can *not* be more then
ONE HB_INLINE() declarations per Harbour source line, unless when referring
the same single C block to follow that line.

This results, in the interesting ability to include inline C anywhere. I
admit I didn't try that, but this is clearly correct, when you read the
implementation. In essence when the Lexer encounters the HB_INLINE token, it
stores the pure unprocessed {} block starting with the immediate next line,
and then proceeds with the current line, having just changed the HB_INLINE
to an identifier HB_INLINE_N. So processing of the rest of the line is
capable of anything legal in Harbour. Harbour processing will then skip over
the "consumed" C {} block, and resumes at the next line immediately, after
such block.

Ron


From harbour@lists.harbour-project.org  Thu Jan 11 12:14:05 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Thu Jan 11 12:14:05 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <200101110517_MC2-C131-9D9@compuserve.com>
Message-ID: <200101111713.f0BHDkv19738@thor.parrett.net>

** Reply to message from John Skelton <John_Skelton@compuserve.com> on
Thu, 11 Jan 2001 05:16:43 -0500


> So, it's a lot different.

Yes, I finally saw that after Ron posted the documentation for how the
inline C works. I was expecting something a lot more like the way inline
ASM works in Borland C.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Thu Jan 11 12:15:06 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 11 12:15:06 2001
Subject: [Harbour] ChangeLog 2001-01-10 18:20 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <20010111161510.K9113@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOEJODIAA.ron@profit-master.com>

Dave,

> Another question springs to mind too. What would be the recommended method
> of including a header file for use with the C code such that it isn't
> visible to the PRG code?

Any #include directive within the {} block will not be visible/processed by
the PRG code. It will be included as expected, and fully available to its C
code block. Same goes for #defines. Once inside the {} block you are in
effect in C world. It is perfectly valid, to have #defines inside the {}
block, they will not affect the PRG code, but will have their normal effect
on the C code.

Ron


From harbour@lists.harbour-project.org  Thu Jan 11 12:16:01 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Thu Jan 11 12:16:01 2001
Subject: [Harbour] infile C use
In-Reply-To: <20010111131833.E9113@hagbard.davep.org>
References: <20010111113343.C9113@hagbard.davep.org> <001b01c07bc8$00870c20$0f2aa8c0@antonio>
 <001b01c07bc8$00870c20$0f2aa8c0@antonio> ; from alinares@fivetech.com on Thu, Jan 11, 2001 at 01:14:09PM +0100
Message-ID: <200101111715.f0BHFBv19893@thor.parrett.net>

** Reply to message from Dave Pearson <davep@davep.org> on Thu, 11 Jan
2001 13:18:33 +0000

> Why go via the GT layer if all you want to do is write something to stdout?

So that your stdout and console output remains synchronized!
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Thu Jan 11 12:21:02 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 12:21:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKGEJMDIAA.ron@profit-master.com>; from ron@profit-master.com on Thu, Jan 11, 2001 at 08:14:26AM -0800
References: <20010111153102.G9113@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKGEJMDIAA.ron@profit-master.com>
Message-ID: <20010111164922.O9113@hagbard.davep.org>

On Thu, Jan 11, 2001 at 08:14:26AM -0800, Ron Pinkas wrote:

> 3. You didn't describe problems. You described expectations. I tried my
> best come as close to your expectation as possible, and when not possible,
> I tried explaining why.

Not all problems are of a technical nature. There's more to language design
than actual code. You yourself have documented that you're quite fond of the
marketing angle. I've been trying to help debug the marketing side of your
proposed addition to the language.

Besides, I *have* described problems. The lack of any kind of error when
compiling with a non-C target is one obvious example (now fixed). The
possible problems of using inline C code in core harbour functions is
another (classed as "mute"). The problems with taking the #pragma approach
(dropped as a possible route) another. The double spacing of the PPO output
is another. I've just sent off another example of a technical hitch (the
ability to use inline C as part of an expression despite what the design
document says).

I was also kind enough to point out a couple of issues with the synopsis
itself (working on the assumption that it's going to act as some form of
short term documentation).

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 11 12:31:02 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 12:31:02 2001
Subject: [Harbour] INLINE C Synopsis
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEJODIAA.ron@profit-master.com>; from ron@profit-master.com on Thu, Jan 11, 2001 at 08:55:47AM -0800
References: <3A5DF00D.6368.190A4E7@localhost> <LOBBKAFMMFGJIKLMEPAKCEJODIAA.ron@profit-master.com>
Message-ID: <20010111173030.S9113@hagbard.davep.org>

On Thu, Jan 11, 2001 at 08:55:47AM -0800, Ron Pinkas wrote:

> > #pragma C start
> > #include "hbapi.h"
> > HB_FUN( MyCFunction )
> > {
> >   //do something
> > }
> > #pragma C end
> 
> This leaves a problem with creating the Symbol Table. We have to have the
> function name declared. Thus, the syntax should be something like:
> 
> [STATIC] C FUNCTION Identifier()
> {...}

What's the problem here exactly? If I hack/kludge/mock up an example of what
Ryszard suggests it seems to work fine.

First I compile a PRG file that calls my C code:

,----
| davep@hagbard:~/temp$ cat foo.prg
| Function Main()
| 
|    ? MyCFunction( 23 )
| 
| Return( NIL )
|
| davep@hagbard:~/temp$ harbour foo -n
| Harbour Compiler 0.35j (Build 35) (2000.11.30) (Flex)
| Copyright 1999-2000, http://www.harbour-project.org
| Compiling 'foo.prg'...
| Lines 7, Functions/Procedures 1
| Generating C source output to 'foo.c'... Done.
`----

then I add my C function to the end of the resulting C file, by way of
mocking up the result of the #pragma that Ryszard suggests:

,----
| davep@hagbard:~/temp$ cat mockup.c
| #include "hbapi.h"
| 
| HB_FUNC( MYCFUNCTION )
| {
|     hb_retni( hb_parni( 1 ) * hb_parni( 1 ) );
| }
|
| davep@hagbard:~/temp$ cat mockup.c >> foo.c
`----

so I've not got a foo.c that looks like:

,----[ foo.c ]
| /*
|  * Harbour Compiler, 0.35j (Build 35) (2000.11.30) (Flex)
|  * Generated C source code
|  */
| 
| #include "hbvmpub.h"
| #include "hbpcode.h"
| #include "hbinit.h"
| 
| 
|        HB_FUNC( MAIN );
| extern HB_FUNC( QOUT );
| extern HB_FUNC( MYCFUNCTION );
| 
| 
| HB_INIT_SYMBOLS_BEGIN( hb_vm_SymbolInit_FOO )
| { "MAIN", HB_FS_PUBLIC | HB_FS_FIRST, HB_FUNCNAME( MAIN ), NULL },
| { "QOUT", HB_FS_PUBLIC, HB_FUNCNAME( QOUT ), NULL },
| { "MYCFUNCTION", HB_FS_PUBLIC, HB_FUNCNAME( MYCFUNCTION ), NULL }
| HB_INIT_SYMBOLS_END( hb_vm_SymbolInit_FOO )
| #if defined(_MSC_VER)
|    #if _MSC_VER >= 1010
|       #pragma data_seg( ".CRT$XIY" )
|       #pragma comment( linker, "/Merge:.CRT=.data" )
|    #else
|       #pragma data_seg( "XIY" )
|    #endif
|    static HB_$INITSYM hb_vm_auto_SymbolInit_FOO = hb_vm_SymbolInit_FOO;
|    #pragma data_seg()
| #elif ! defined(__GNUC__)
|    #pragma startup hb_vm_SymbolInit_FOO
| #endif
| 
| HB_FUNC( MAIN )
| {
|    static const BYTE pcode[] =
|    {
| /* 00000 */ HB_P_LINE, 3, 0,	/* 3 */
| 	HB_P_PUSHSYMNEAR, 1,	/* QOUT */
| 	HB_P_PUSHNIL,
| 	HB_P_PUSHSYMNEAR, 2,	/* MYCFUNCTION */
| 	HB_P_PUSHNIL,
| 	HB_P_PUSHBYTE, 23,	/* 23 */
| 	HB_P_FUNCTIONSHORT, 1,
| 	HB_P_DOSHORT, 1,
| /* 00015 */ HB_P_LINE, 5, 0,	/* 5 */
| 	HB_P_PUSHNIL,
| 	HB_P_RETVALUE,
| 	HB_P_ENDPROC
| /* 00021 */
|    };
| 
|    hb_vmExecute( pcode, symbols );
| }
| 
| #include "hbapi.h"
| 
| HB_FUNC( MYCFUNCTION )
| {
|     hb_retni( hb_parni( 1 ) * hb_parni( 1 ) );
| }
`----

That's pretty much how it would look as a result of the pragma business,
right?

Now compile it with the C compiler (hcc is simply a wrapper around gcc that
sets up some harbour paths and the like);

,----
| davep@hagbard:~/temp$ hcc foo
| davep@hagbard:~/temp$ ls -l foo.o
| -rw-rw-r--    1 davep    davep        1616 Jan 11 17:25 foo.o
`----

and then I link it:

,----
| davep@hagbard:~/temp$ hbl foo.o
| davep@hagbard:~/temp$ ls -l foo
| -rwxrwxr-x    1 davep    davep     1130501 Jan 11 17:28 foo*
`----

as you can see, it's linked without a problem. If I run it I get the
behaviour I expected.

What's the symbol table problem you refer to and why would it require the
syntax you suggest?

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 11 12:33:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 11 12:33:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <20010111170327.Q9113@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEKADIAA.ron@profit-master.com>

> Lets try a different approach:
>
> Do you understand the nature and significance of SOURCE\SYSTEM in
> CA-Clipper
> and friends? Do you understand that the fact that harbour is free software
> means that this significance is extend to every single part of
> the RTL that
> is written in Clipper?

Let's try a different approach:

Do you understand that some of Harbour RTL is written in C, and some in PRG?

Wasn't it the respective developer's decision to use either? If one wanted
to make sure that the whole of Harbour RTL, has to be available in PRG form,
one must start a new project.

Is it not possible that another developer would have developed any RTL
module currently written in PRG, in C instead? If he did, would it be
dangerous?

One could possibly argue that the only modules that have to remain in a PRG
form, and thus *pure* PRG, are those provided by Clipper in PRG form. I
don't necessarily think this is indeed a *must*, but I could at least
understand this set of mind. The reason I would not necessarily think, even
this is a must, is because any user, could still decide to use an alternate
form if these modules in PRG form, if so desired.

Ron


From harbour@lists.harbour-project.org  Thu Jan 11 12:33:21 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 12:33:21 2001
Subject: [Harbour] infile C use
In-Reply-To: <200101111715.f0BHFBv19893@thor.parrett.net>; from dholm@jsd-llc.com on Thu, Jan 11, 2001 at 12:15:03PM -0500
References: <20010111113343.C9113@hagbard.davep.org> <001b01c07bc8$00870c20$0f2aa8c0@antonio> <001b01c07bc8$00870c20$0f2aa8c0@antonio> <20010111131833.E9113@hagbard.davep.org> <200101111715.f0BHFBv19893@thor.parrett.net>
Message-ID: <20010111173252.T9113@hagbard.davep.org>

On Thu, Jan 11, 2001 at 12:15:03PM -0500, David G. Holm wrote:
> ** Reply to message from Dave Pearson <davep@davep.org> on Thu, 11 Jan
> 2001 13:18:33 +0000
> 
> > Why go via the GT layer if all you want to do is write something to stdout?
> 
> So that your stdout and console output remains synchronized!

stdout doesn't have to go to the console.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 11 13:04:02 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 13:04:02 2001
Subject: [Harbour] ChangeLog 2001-01-10 18:20 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKOEJODIAA.ron@profit-master.com>; from ron@profit-master.com on Thu, Jan 11, 2001 at 09:15:31AM -0800
References: <20010111161510.K9113@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKOEJODIAA.ron@profit-master.com>
Message-ID: <20010111180035.V9113@hagbard.davep.org>

On Thu, Jan 11, 2001 at 09:15:31AM -0800, Ron Pinkas wrote:

> Any #include directive within the {} block will not be visible/processed
> by the PRG code. It will be included as expected, and fully available to
> its C code block. Same goes for #defines. Once inside the {} block you are
> in effect in C world. It is perfectly valid, to have #defines inside the
> {} block, they will not affect the PRG code, but will have their normal
> effect on the C code.

Keep in mind, however, that it could be possible that a header file included
*inside* a function might have a different effect than one included outside
of a function (IOW in the "top level" of some source).

A good example doesn't spring to mind right now but it's something to
consider.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 11 13:04:19 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 13:04:19 2001
Subject: [Harbour] ChangeLog 2001-01-10 18:20 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKKEJODIAA.ron@profit-master.com>; from ron@profit-master.com on Thu, Jan 11, 2001 at 09:11:33AM -0800
References: <20010111163335.L9113@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKKEJODIAA.ron@profit-master.com>
Message-ID: <20010111175211.U9113@hagbard.davep.org>

On Thu, Jan 11, 2001 at 09:11:33AM -0800, Ron Pinkas wrote:

> This results, in the interesting ability to include inline C anywhere. I
> admit I didn't try that, but this is clearly correct, when you read the
> implementation. 

It does beg the question that, although it does do what the implementation
is coded to do (I'd hope that is the case <g>), should the implementation be
doing this? The syntax, as given in the synopsis, suggests that this:

,----
| Function Main()
| 
|   ? HB_INLINE(), HB_INLINE(), HB_INLINE()
|   
|   { hb_retc( "Foo" ); }
|   { hb_retc( "Bar" ); }
|   { hb_retc( "Baz" ); }
|   
| Return( NIL )
`----

isn't possible, but it actually works.

I also think that "include inline C anywhere" might also want qualifying
because this:

,----
| Function Main()
| 
|   ? HB_INLINE(), HB_INLINE(), HB_INLINE()
|   ? "Just a boring old bit of text"
|   
|   { hb_retc( "Foo" ); }
|   { hb_retc( "Bar" ); }
|   { hb_retc( "Baz" ); }
|   
| Return( NIL )
`----

doesn't compile.

>                 In essence when the Lexer encounters the HB_INLINE token,
> it stores the pure unprocessed {} block starting with the immediate next
> line, and then proceeds with the current line, 

I guess "immediate next line" above suggests a reason for the difference I
see in the examples I give above, right? This also doesn't quite make sense
to me then because, in theory, there's three HB_INLINE() calls all after the
"immediate next line".

Do the searches for their bodies get placed in a queue or something?

I also note the interesting side effect of all of this in that you can place
C stuff outside of the blocks such that it gets included in the resulting C
file:

,----
| Function Main()
| 
|   ? HB_INLINE(), HB_INLINE(), HB_INLINE()
| 
|   #define TEXT "Foo"
|   { hb_retc( TEXT ); }
|   
|   #define MORE_TEXT "Bar"
|   { hb_retc( MORE_TEXT ); }
|   
|   #define EVEN_MORE_TEXT "Baz"
|   { hb_retc( EVEN_MORE_TEXT ); }
| 
| Return( NIL )
`----

so, although the documented idea is that the content of the braces is what
gets passed to the C code the actual rules and results can be slightly more
complex.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 11 13:04:38 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 11 13:04:38 2001
Subject: [Harbour] INLINE C Synopsis (version 1.1)
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEJEDIAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEKBDIAA.ron@profit-master.com>

Here is a summary of findings, limitations, and specifications with regard
to inline C support:

Overview:
---------

  PP -> Lexer - Integration.

In order to fully appreciate the scope of what can be achieved, it is
important to understand, the relationship between the above components, and
their respective responsibilities.

PP Starts with trying to get a full line of code (look for next NewLine). In
that process it does the following (partial non sorted list):

   1. Ignore all other characters, while reading strings.
   2. Strip Multi-Line Comments (/**/).
   3. Strip full line Comments (*).
   4. Strip inline comments (//) and (&&) (note && is a C token!!!)
   5. Combines lines that end with semi-colon (;) with the immediate next
line (note (;) is a C line terminator.
   6. Parses result line for #PRAGMAs, #INCLUDEs, #DEFINEs, #[x]TRANSLATEs,
and #[x]COMMANDS.
   7. Converts [] strings to "" or '' strings if possible, and '' strings to
"" strings if possible (note in C [], '', and "" have different meanings).
   8. Finally it transfers a *complete* [processed], line at a time, to the
Lexer.

Limitations:
------------

In order to allow inline C support, all PP logic must be suspended, other
than looking for next NewLine character.

*** Since inline C, requires that PP logic is suspended, and since PP
transfers full line at a time, we are restricted of using C syntax and
Harbour syntax, on the *same* source line. ***

Please note the HB_INLINE([...]) component of the inline syntax is
considered Harbour syntax, in effect a Harbour expression, and can be used
as any other Expression.

The {...} component of the syntax falls under C syntax, and thus can *not*
be placed on the same line with the HB_INLINE(), nor can it share the same
source line, with any other Harbour syntax.

While technically possible, to move HB_INLINE token recognition to PP, to
allow *midline* suspension of PP logic, I can't recommend it because:

The HB_INLINE is followed by ( [...] ) which may include complex Harbour
expressions, before finally, optionally, reaching the beginning of the
inline block ({). This type of parsing is traditionally reserved for the
Lexer and Parser. But it is technically feasible.

Now, if we keep HB_INLINE token recognition at the Lexer, here is the most
compact supported syntax:

Usage of this feature is restricted to using Harbour with the
[default]-gc[n] compiler switch. Compiling such code, with any other output
option, will be reported as a Compilation Error.

Syntax:
-------

... HB_INLINE( [[@]xPar1 [, [@]xParN] ] ) ...
{ /* Any C code */ }


The ... ... represents any valid Harbour syntax where the HB_INLINE(...) is
a valid expression.

There may be any number of lines between the block beginning ({) and the
block end (}). Any legal C syntax including #directives, and any number of
additional
balanced ({}) is allowed in between.

We *can* include the HB_INLINE(...) declaration, within Harbour Level
Parenthesis, but can *not* include the {} body inside Harbour Level
Parenthesis.

Can/Can not:
------------

1. Inline C block, can utilize PRG Variables passed as parameters, using
standard Harbour
Extend and API systems.

2. Inline C block, can manipulate PRG Variables passed by reference, using
standard Harbour
Extend and API systems.

3. The return value of an inline C block ,is represented by its
HB_INLINE(...) declaration, and can be directly assigned to any Harbour
variable.

4. The return value of an inline C block , represented by its HB_INLINE(...)
declaration, can be directly returned as the return value of a Harbour level
function.

5. The return value of an inline C block , represented by its HB_INLINE(...)
declaration, can be directly passed as a parameter to another function.

6. The return value of an inline C block , represented by its HB_INLINE(...)
declaration, can be directly involved in any valid Harbour expression
manipulation.

Misc:
-----

C Syntax errors and warnings, are reported with the correct PRG source file
name, and line number.

Conclusion:
-----------

1. I recommend, we keep current specifications for INLINE c support.

2. I recommend we add C FUNCTION support. I suggest the syntax should be:

[STATIC] C FUNCTION Identifier()
{...}

If the above is accepted, I believe I can [still] complete it by this
weekend.

Ron


From harbour@lists.harbour-project.org  Thu Jan 11 13:10:04 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 13:10:04 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEKADIAA.ron@profit-master.com>; from ron@profit-master.com on Thu, Jan 11, 2001 at 09:33:55AM -0800
References: <20010111170327.Q9113@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKCEKADIAA.ron@profit-master.com>
Message-ID: <20010111180856.W9113@hagbard.davep.org>

On Thu, Jan 11, 2001 at 09:33:55AM -0800, Ron Pinkas wrote:
> > Lets try a different approach:
> >
> > Do you understand the nature and significance of SOURCE\SYSTEM in
> > CA-Clipper and friends? Do you understand that the fact that harbour is
> > free software means that this significance is extend to every single
> > part of the RTL that is written in Clipper?
> 
> Let's try a different approach:

IOW lets ignore my questions. I'll be polite enough to answer yours though.

> Do you understand that some of Harbour RTL is written in C, and some in
> PRG?

Err, yes!

> Wasn't it the respective developer's decision to use either? If one wanted
> to make sure that the whole of Harbour RTL, has to be available in PRG
> form, one must start a new project.

What? I'm not suggesting such a thing. Ron, please concentrate on what I've
said, not what you've invented for me.

> Is it not possible that another developer would have developed any RTL
> module currently written in PRG, in C instead? If he did, would it be
> dangerous?

Depends on which module it is.

> One could possibly argue that the only modules that have to remain in a
> PRG form, and thus *pure* PRG, are those provided by Clipper in PRG form.

That would be a fair argument.

> I don't necessarily think this is indeed a *must*, but I could at least
> understand this set of mind. The reason I would not necessarily think,
> even this is a must, is because any user, could still decide to use an
> alternate form if these modules in PRG form, if so desired.

But, in the mean time, using inline C in PRG code for the RTL reduces it's
utility as free software. Harbour is, first and foremost, free software.

I can see your intent on not getting my point. <sigh>

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 11 13:11:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 11 13:11:02 2001
Subject: [Harbour] INLINE C Synopsis
In-Reply-To: <20010111173030.S9113@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKMEKBDIAA.ron@profit-master.com>

Dave,

1. The symbol is declared "extern", when it is not.
2. I'm not sure if it will work correctly, if your prg only exports this
function, but not uses it itself.

Ron

> > > #pragma C start
> > > #include "hbapi.h"
> > > HB_FUN( MyCFunction )
> > > {
> > >   //do something
> > > }
> > > #pragma C end
> >
> > This leaves a problem with creating the Symbol Table. We have
> to have the
> > function name declared. Thus, the syntax should be something like:
> >
> > [STATIC] C FUNCTION Identifier()
> > {...}
>
> What's the problem here exactly? If I hack/kludge/mock up an
> example of what
> Ryszard suggests it seems to work fine.
>
> First I compile a PRG file that calls my C code:
>
> ,----
> | davep@hagbard:~/temp$ cat foo.prg
> | Function Main()
> |
> |    ? MyCFunction( 23 )
> |
> | Return( NIL )
> |
> | davep@hagbard:~/temp$ harbour foo -n
> | Harbour Compiler 0.35j (Build 35) (2000.11.30) (Flex)
> | Copyright 1999-2000, http://www.harbour-project.org
> | Compiling 'foo.prg'...
> | Lines 7, Functions/Procedures 1
> | Generating C source output to 'foo.c'... Done.
> `----
>
> then I add my C function to the end of the resulting C file, by way of
> mocking up the result of the #pragma that Ryszard suggests:
>
> ,----
> | davep@hagbard:~/temp$ cat mockup.c
> | #include "hbapi.h"
> |
> | HB_FUNC( MYCFUNCTION )
> | {
> |     hb_retni( hb_parni( 1 ) * hb_parni( 1 ) );
> | }
> |
> | davep@hagbard:~/temp$ cat mockup.c >> foo.c
> `----
>
> so I've not got a foo.c that looks like:
>
> ,----[ foo.c ]
> | /*
> |  * Harbour Compiler, 0.35j (Build 35) (2000.11.30) (Flex)
> |  * Generated C source code
> |  */
> |
> | #include "hbvmpub.h"
> | #include "hbpcode.h"
> | #include "hbinit.h"
> |
> |
> |        HB_FUNC( MAIN );
> | extern HB_FUNC( QOUT );
> | extern HB_FUNC( MYCFUNCTION );
> |
> |
> | HB_INIT_SYMBOLS_BEGIN( hb_vm_SymbolInit_FOO )
> | { "MAIN", HB_FS_PUBLIC | HB_FS_FIRST, HB_FUNCNAME( MAIN ), NULL },
> | { "QOUT", HB_FS_PUBLIC, HB_FUNCNAME( QOUT ), NULL },
> | { "MYCFUNCTION", HB_FS_PUBLIC, HB_FUNCNAME( MYCFUNCTION ), NULL }
> | HB_INIT_SYMBOLS_END( hb_vm_SymbolInit_FOO )
> | #if defined(_MSC_VER)
> |    #if _MSC_VER >= 1010
> |       #pragma data_seg( ".CRT$XIY" )
> |       #pragma comment( linker, "/Merge:.CRT=.data" )
> |    #else
> |       #pragma data_seg( "XIY" )
> |    #endif
> |    static HB_$INITSYM hb_vm_auto_SymbolInit_FOO = hb_vm_SymbolInit_FOO;
> |    #pragma data_seg()
> | #elif ! defined(__GNUC__)
> |    #pragma startup hb_vm_SymbolInit_FOO
> | #endif
> |
> | HB_FUNC( MAIN )
> | {
> |    static const BYTE pcode[] =
> |    {
> | /* 00000 */ HB_P_LINE, 3, 0,	/* 3 */
> | 	HB_P_PUSHSYMNEAR, 1,	/* QOUT */
> | 	HB_P_PUSHNIL,
> | 	HB_P_PUSHSYMNEAR, 2,	/* MYCFUNCTION */
> | 	HB_P_PUSHNIL,
> | 	HB_P_PUSHBYTE, 23,	/* 23 */
> | 	HB_P_FUNCTIONSHORT, 1,
> | 	HB_P_DOSHORT, 1,
> | /* 00015 */ HB_P_LINE, 5, 0,	/* 5 */
> | 	HB_P_PUSHNIL,
> | 	HB_P_RETVALUE,
> | 	HB_P_ENDPROC
> | /* 00021 */
> |    };
> |
> |    hb_vmExecute( pcode, symbols );
> | }
> |
> | #include "hbapi.h"
> |
> | HB_FUNC( MYCFUNCTION )
> | {
> |     hb_retni( hb_parni( 1 ) * hb_parni( 1 ) );
> | }
> `----
>
> That's pretty much how it would look as a result of the pragma business,
> right?
>
> Now compile it with the C compiler (hcc is simply a wrapper
> around gcc that
> sets up some harbour paths and the like);
>
> ,----
> | davep@hagbard:~/temp$ hcc foo
> | davep@hagbard:~/temp$ ls -l foo.o
> | -rw-rw-r--    1 davep    davep        1616 Jan 11 17:25 foo.o
> `----
>
> and then I link it:
>
> ,----
> | davep@hagbard:~/temp$ hbl foo.o
> | davep@hagbard:~/temp$ ls -l foo
> | -rwxrwxr-x    1 davep    davep     1130501 Jan 11 17:28 foo*
> `----
>
> as you can see, it's linked without a problem. If I run it I get the
> behaviour I expected.
>
> What's the symbol table problem you refer to and why would it require the
> syntax you suggest?


From harbour@lists.harbour-project.org  Thu Jan 11 13:15:05 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Thu Jan 11 13:15:05 2001
Subject: [Harbour] Changelog 2001 -01-10 22:30 GMT -3
Message-ID: <200101111313_MC2-C177-6280@compuserve.com>

Dave,

JS> [Knowing Dave he'll now post ISBN and approx price!!]

"Title..."

:-) :-)

John.

From harbour@lists.harbour-project.org  Thu Jan 11 13:15:21 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Thu Jan 11 13:15:21 2001
Subject: [Harbour] My opinion about the Harbour project.
Message-ID: <200101111313_MC2-C177-627F@compuserve.com>

Phil,

"wouldn't this open the door for inline ASM if your C compiler =

supported it?"

Yes.  That'll _really_ cause portability troubles!  And -gc will be
misleading. :-(

John.

From harbour@lists.harbour-project.org  Thu Jan 11 13:20:04 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 11 13:20:04 2001
Subject: [Harbour] ChangeLog 2001-01-10 18:20 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <20010111175211.U9113@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOEKCDIAA.ron@profit-master.com>

Dave,

> It does beg the question that, although it does do what the implementation
> is coded to do (I'd hope that is the case <g>), should the
> implementation be
> doing this? The syntax, as given in the synopsis, suggests that this:

Please read updated synopsis.

> ,----
> | Function Main()
> |
> |   ? HB_INLINE(), HB_INLINE(), HB_INLINE()
> |
> |   { hb_retc( "Foo" ); }
> |   { hb_retc( "Bar" ); }
> |   { hb_retc( "Baz" ); }
> |
> | Return( NIL )
> `----
>
> isn't possible, but it actually works.

Each reference to HB_INLINE() "consumes" all subsequent lines, unto, and
including, the first line which has a terminating brace (}). All such
consumed lines will be generated as part of the inline "dump". This makes
the above valid.

> I also think that "include inline C anywhere" might also want qualifying
> because this:
>
> ,----
> | Function Main()
> |
> |   ? HB_INLINE(), HB_INLINE(), HB_INLINE()
> |   ? "Just a boring old bit of text"
> |
> |   { hb_retc( "Foo" ); }
> |   { hb_retc( "Bar" ); }
> |   { hb_retc( "Baz" ); }
> |
> | Return( NIL )
> `----
>
> doesn't compile.
>
> >                 In essence when the Lexer encounters the
> HB_INLINE token,
> > it stores the pure unprocessed {} block starting with the immediate next
> > line, and then proceeds with the current line,
>
> I guess "immediate next line" above suggests a reason for the difference I
> see in the examples I give above, right? This also doesn't quite
> make sense
> to me then because, in theory, there's three HB_INLINE() calls
> all after the
> "immediate next line".
>
> Do the searches for their bodies get placed in a queue or something?

See above.

> I also note the interesting side effect of all of this in that
> you can place
> C stuff outside of the blocks such that it gets included in the
> resulting C
> file:

See above.

> ,----
> | Function Main()
> |
> |   ? HB_INLINE(), HB_INLINE(), HB_INLINE()
> |
> |   #define TEXT "Foo"
> |   { hb_retc( TEXT ); }
> |
> |   #define MORE_TEXT "Bar"
> |   { hb_retc( MORE_TEXT ); }
> |
> |   #define EVEN_MORE_TEXT "Baz"
> |   { hb_retc( EVEN_MORE_TEXT ); }
> |
> | Return( NIL )
> `----
>
> so, although the documented idea is that the content of the braces is what
> gets passed to the C code the actual rules and results can be
> slightly more
> complex.

See above.

Ron


From harbour@lists.harbour-project.org  Thu Jan 11 13:34:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 11 13:34:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <20010111180856.W9113@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKIEKDDIAA.ron@profit-master.com>

Dave,

> > > Do you understand the nature and significance of SOURCE\SYSTEM in
> > > CA-Clipper and friends? Do you understand that the fact that
> harbour is
> > > free software means that this significance is extend to every single
> > > part of the RTL that is written in Clipper?
> >
> > Let's try a different approach:
>
> IOW lets ignore my questions. I'll be polite enough to answer
> yours though.

Ok, here is the answer: Err, of course I do.

> > Wasn't it the respective developer's decision to use either? If
> one wanted
> > to make sure that the whole of Harbour RTL, has to be available in PRG
> > form, one must start a new project.
>
> What? I'm not suggesting such a thing. Ron, please concentrate on
> what I've
> said, not what you've invented for me.

I did not invent for you anything. You suggested, that all modules currently
written in PRG *must* stay that way. Since there are no documented
specifications, as to what portions of Harbour RTL *have* to be written as
prg, I suggested, that he who wants to invent such specifications, might
consider a new project for such.

> > Is it not possible that another developer would have developed any RTL
> > module currently written in PRG, in C instead? If he did, would it be
> > dangerous?
>
> Depends on which module it is.

Depends on what?

> > One could possibly argue that the only modules that have to remain in a
> > PRG form, and thus *pure* PRG, are those provided by Clipper in
> PRG form.
>
> That would be a fair argument.

Good.

> > I don't necessarily think this is indeed a *must*, but I could at least
> > understand this set of mind. The reason I would not necessarily think,
> > even this is a must, is because any user, could still decide to use an
> > alternate form if these modules in PRG form, if so desired.
>
> But, in the mean time, using inline C in PRG code for the RTL reduces it's
> utility as free software. Harbour is, first and foremost, free software.

Hua??? How does it restrict its use. If the user received a BIN
distribution, than that PRG with its INLINE have been compiled already. If
he gets it in source mode, he has to compile other C RTL anyway! Please
explain...

> I can see your intent on not getting my point. <sigh>

Try to re-read my arguments, you might find, the reverse to be true.

Ron


From harbour@lists.harbour-project.org  Thu Jan 11 14:10:04 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 14:10:04 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKIEKDDIAA.ron@profit-master.com>; from ron@profit-master.com on Thu, Jan 11, 2001 at 10:34:16AM -0800
References: <20010111180856.W9113@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKIEKDDIAA.ron@profit-master.com>
Message-ID: <20010111190942.X9113@hagbard.davep.org>

On Thu, Jan 11, 2001 at 10:34:16AM -0800, Ron Pinkas wrote:

> I did not invent for you anything. You suggested, that all modules
> currently written in PRG *must* stay that way.

No I didn't. That's your invention. What I suggested is that PRG files
should not make use of inline C. I've also documented the reasons for my
suggestion. If you have proof otherwise feel free to quote it along with the
message ID.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 11 14:21:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 11 14:21:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <20010111190942.X9113@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKIEKEDIAA.ron@profit-master.com>

> > I did not invent for you anything. You suggested, that all modules
> > currently written in PRG *must* stay that way.
>
> No I didn't. That's your invention. What I suggested is that PRG files
> should not make use of inline C. I've also documented the reasons for my
> suggestion. If you have proof otherwise feel free to quote it
> along with the
> message ID.

Ok, if you don't insist they must stay in PRG form, i.e. can be re-written
in C. Why couldn't we use a "mix"?

Not being able to compile without a C compiler is *not* a valid argument,
because same is true for a module written all in C!!!

Say we do have the C FUNCTION support, you suggest we can't use it in RTL,
because it will require C compiler?

I think you didn't fully analyze this, before making your original
statement, and now finding, it's hard to get off the tree.

We don't have to discuss it any further, if this is the case. Otherwise, I
believe you failed to demonstrate any problem with using C and Harbor
mixture, in any given RTL module. The whole, RTL is exactly such mixture.

Ron


From harbour@lists.harbour-project.org  Thu Jan 11 14:36:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 11 14:36:02 2001
Subject: [Harbour] C Function syntax
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKIEKDDIAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOEKEDIAA.ron@profit-master.com>

Hi all,

Can we agree, on the syntax for a C Function?

Few have agreed to:

[STATIC] C FUNCTION Identifier()
{...}

Another suggestion was:

#pragma ...
{...}
#pragme ...

The #pragma approach has few disadvantages:

1. The extend system calling conventions, have to be manually coded.
2. Symbols are not declared to the harbour layer, and thus Symbol Table
generation is inaccurate, or even incomplete.
3. If symbol entry was created (prg calls the symbol), the symbol, can not
be determined to be "static" or public (without parsing the C code).

I therefore suggest and vote we use the first syntax.

Ron


From harbour@lists.harbour-project.org  Thu Jan 11 14:48:02 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 14:48:02 2001
Subject: [Harbour] INLINE C Synopsis (version 1.1)
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEKBDIAA.ron@profit-master.com>; from ron@profit-master.com on Thu, Jan 11, 2001 at 10:05:02AM -0800
References: <LOBBKAFMMFGJIKLMEPAKCEJEDIAA.ron@profit-master.com> <LOBBKAFMMFGJIKLMEPAKCEKBDIAA.ron@profit-master.com>
Message-ID: <20010111193110.Z9113@hagbard.davep.org>

On Thu, Jan 11, 2001 at 10:05:02AM -0800, Ron Pinkas wrote:

> Syntax:
> -------
> 
> ... HB_INLINE( [[@]xPar1 [, [@]xParN] ] ) ...
> { /* Any C code */ }

The current syntax would appear to be:

,----
| ... HB_INLINE( [[@]xPar1 [, [@]xParN] ] ) ...
| /* Zero or more bits of C source that doesn't have to be in a block */ }
| { /* Zero or more blocks of C code not associated with the above/* }
| { /* Any C code */ }
`----

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 11 14:48:19 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 14:48:19 2001
Subject: [Harbour] INLINE C Synopsis
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKMEKBDIAA.ron@profit-master.com>; from ron@profit-master.com on Thu, Jan 11, 2001 at 10:11:34AM -0800
References: <20010111173030.S9113@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKMEKBDIAA.ron@profit-master.com>
Message-ID: <20010111192622.Y9113@hagbard.davep.org>

On Thu, Jan 11, 2001 at 10:11:34AM -0800, Ron Pinkas wrote:

> 1. The symbol is declared "extern", when it is not.

Is that not allowed by ANSI C? Is that actually a problem? What is the
problem?

> 2. I'm not sure if it will work correctly, if your prg only exports this
> function, but not uses it itself.

Seems to work fine here:

,----
| davep@hagbard:~/temp$ cat foo.prg
| Function Main()
| 
|    ? Bar()
| 
| Return( NIL )
|
| davep@hagbard:~/temp$ cat bar.prg
| Function Bar()
| Return( CFunctionThatLivesInFoo() )
|
| davep@hagbard:~/temp$ cat mockup.c
| #include <hbapi.h>
| 
| HB_FUNC( CFUNCTIONTHATLIVESINFOO )
| {
|     hb_retc( "What problem would that be?" );
| }
|
| davep@hagbard:~/temp$ gharbour bar -n
| Harbour Compiler 0.35j (Build 35) (2000.11.30) (Flex)
| Copyright 1999-2000, http://www.harbour-project.org
| Compiling 'bar.prg'...
| Lines 4, Functions/Procedures 1
| Generating C source output to 'bar.c'... Done.
|
| davep@hagbard:~/temp$ harbour foo -n
| Harbour Compiler 0.35j (Build 35) (2000.11.30) (Flex)
| Copyright 1999-2000, http://www.harbour-project.org
| Compiling 'foo.prg'...
| Lines 7, Functions/Procedures 1
| Generating C source output to 'foo.c'... Done.
|
| davep@hagbard:~/temp$ cat mockup.c >> foo.c
|
| davep@hagbard:~/temp$ hcc foo
|
| davep@hagbard:~/temp$ hbl foo.o bar.o
|
| davep@hagbard:~/temp$ ls -l foo
| -rwxrwxr-x    1 davep    davep     1133591 Jan 11 19:16 foo*
`----

Running the resulting executable gets you the output you'd expect. What
problem did you expect to encounter?

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 11 14:48:53 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 14:48:53 2001
Subject: [Harbour] ChangeLog 2001-01-10 18:20 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKOEKCDIAA.ron@profit-master.com>; from ron@profit-master.com on Thu, Jan 11, 2001 at 10:21:07AM -0800
References: <20010111175211.U9113@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKOEKCDIAA.ron@profit-master.com>
Message-ID: <20010111194638.A9113@hagbard.davep.org>

On Thu, Jan 11, 2001 at 10:21:07AM -0800, Ron Pinkas wrote:

> > ,----
> > | Function Main()
> > |
> > |   ? HB_INLINE(), HB_INLINE(), HB_INLINE()
> > |
> > |   { hb_retc( "Foo" ); }
> > |   { hb_retc( "Bar" ); }
> > |   { hb_retc( "Baz" ); }
> > |
> > | Return( NIL )
> > `----
> >
> > isn't possible, but it actually works.
> 
> Each reference to HB_INLINE() "consumes" all subsequent lines, unto, and
> including, the first line which has a terminating brace (}). All such
> consumed lines will be generated as part of the inline "dump". This makes
> the above valid.

That's not quite true is it? A HB_INLINE() doesn't consume all subsequent
lines. Where it starts consuming lines depends on how many instances of
HB_INLINE() appear on the same physical line before it.

> > ,----
> > | Function Main()
> > |
> > |   ? HB_INLINE(), HB_INLINE(), HB_INLINE()
> > |
> > |   #define TEXT "Foo"
> > |   { hb_retc( TEXT ); }
> > |
> > |   #define MORE_TEXT "Bar"
> > |   { hb_retc( MORE_TEXT ); }
> > |
> > |   #define EVEN_MORE_TEXT "Baz"
> > |   { hb_retc( EVEN_MORE_TEXT ); }
> > |
> > | Return( NIL )
> > `----
> >
> > so, although the documented idea is that the content of the braces is
> > what gets passed to the C code the actual rules and results can be
> > slightly more complex.
> 
> See above.

The updated synopsis says that the C text should come between the braces,
the above is an example of C text outside of the braces.

I'd also note at this point that the updates synopsis suggests that the C
text must directly follow the line in which the HB_INLINE() exists, the
above examples (and others) demonstrate that this isn't the case.

I might be alone in this but I find this degree of "flexibility" to be quite
(and I choose the word carefully) messy. I strikes me that this is even less
and less "inline". "Inline" would suggest, and you yourself have said (point
1 in <LOBBKAFMMFGJIKLMEPAKCEIGDIAA.ron@profit-master.com>), that the code is
executed where it is defined. The examples I've given show that this isn't
actually the case.

What we seem to have here is a version of having C functions written in PRG
files but with the added twist that you can have some form of
behind-the-scenes identifier generation so you can keep calling a function
using he exact same symbol name.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 11 14:56:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 11 14:56:02 2001
Subject: [Harbour] INLINE C Synopsis
In-Reply-To: <20010111192622.Y9113@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKKEKFDIAA.ron@profit-master.com>

Dave,

Try calling the C function using the macro operator.

Ron

> > 1. The symbol is declared "extern", when it is not.
>
> Is that not allowed by ANSI C? Is that actually a problem? What is the
> problem?
>
> > 2. I'm not sure if it will work correctly, if your prg only exports this
> > function, but not uses it itself.
>
> Seems to work fine here:
>
> ,----
> | davep@hagbard:~/temp$ cat foo.prg
> | Function Main()
> |
> |    ? Bar()
> |
> | Return( NIL )
> |
> | davep@hagbard:~/temp$ cat bar.prg
> | Function Bar()
> | Return( CFunctionThatLivesInFoo() )
> |
> | davep@hagbard:~/temp$ cat mockup.c
> | #include <hbapi.h>
> |
> | HB_FUNC( CFUNCTIONTHATLIVESINFOO )
> | {
> |     hb_retc( "What problem would that be?" );
> | }
> |
> | davep@hagbard:~/temp$ gharbour bar -n
> | Harbour Compiler 0.35j (Build 35) (2000.11.30) (Flex)
> | Copyright 1999-2000, http://www.harbour-project.org
> | Compiling 'bar.prg'...
> | Lines 4, Functions/Procedures 1
> | Generating C source output to 'bar.c'... Done.
> |
> | davep@hagbard:~/temp$ harbour foo -n
> | Harbour Compiler 0.35j (Build 35) (2000.11.30) (Flex)
> | Copyright 1999-2000, http://www.harbour-project.org
> | Compiling 'foo.prg'...
> | Lines 7, Functions/Procedures 1
> | Generating C source output to 'foo.c'... Done.
> |
> | davep@hagbard:~/temp$ cat mockup.c >> foo.c
> |
> | davep@hagbard:~/temp$ hcc foo
> |
> | davep@hagbard:~/temp$ hbl foo.o bar.o
> |
> | davep@hagbard:~/temp$ ls -l foo
> | -rwxrwxr-x    1 davep    davep     1133591 Jan 11 19:16 foo*
> `----
>
> Running the resulting executable gets you the output you'd expect. What
> problem did you expect to encounter?


From harbour@lists.harbour-project.org  Thu Jan 11 14:57:02 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Thu Jan 11 14:57:02 2001
Subject: [Harbour] C Function syntax
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKOEKEDIAA.ron@profit-master.com>
Message-ID: <000101c07c08$8cf198c0$0f2aa8c0@antonio>

Ron,

> Can we agree, on the syntax for a C Function?
> [STATIC] C FUNCTION Identifier()
> {...}

I fully agree on this syntax.

Thanks a lot for your effort to implement it.

Antonio


From harbour@lists.harbour-project.org  Thu Jan 11 15:09:01 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 15:09:01 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKIEKEDIAA.ron@profit-master.com>; from ron@profit-master.com on Thu, Jan 11, 2001 at 11:21:23AM -0800
References: <20010111190942.X9113@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKIEKEDIAA.ron@profit-master.com>
Message-ID: <20010111200623.B9113@hagbard.davep.org>

On Thu, Jan 11, 2001 at 11:21:23AM -0800, Ron Pinkas wrote:

> > No I didn't. That's your invention. What I suggested is that PRG files
> > should not make use of inline C. I've also documented the reasons for my
> > suggestion. If you have proof otherwise feel free to quote it along with
> > the message ID.
> 
> Ok, if you don't insist they must stay in PRG form, i.e. can be re-written
> in C. Why couldn't we use a "mix"?

If something in the RTL is written as a PRG file then it only seems polite
and sensible to make sure that it can be compiled by anyone, C compiler or
no C compiler.

If someone has harbour it only seems fair that we should ensure that all the
PRG files in harbour can be compiled by someone using a build of harbour
that doesn't require a C compiler. It's polite, it's clean and it's in the
spirit of free software. It allows the maximum number of people the ability
to tinker with the harbour source.

Anyone wanting to tinker with C source will obviously have to acquire a C
compiler, that's a given.

> Not being able to compile without a C compiler is *not* a valid argument,
> because same is true for a module written all in C!!!

Once again, I am *not* talking about C source. Will you please stop being so
obsessed with C source? Of course you need a C compiler to compile C source,
there's no getting away from that.

I'm talking about PRG files.

> Say we do have the C FUNCTION support, you suggest we can't use it in RTL,
> because it will require C compiler?

Yes, that is exactly what I'm suggesting. Use of that will render any PRG
file unbuildable by anyone who doesn't have a C compiler. It will also
render that PRG unbuildable by someone wanting to build with a compiler
other than harbour.

> I think you didn't fully analyze this, before making your original
> statement, and now finding, it's hard to get off the tree.

I think you're fantasising again Ron Pinkas. I, on the other hand, *know*
that I thought about this recommendation for quite some time before I posted
it. What are you most interested in Ron Pinkas, your fantasies or the truth?

> We don't have to discuss it any further, if this is the case. 

I take it then that now I've exposed your fantasy we can continue with the
discussion and you'll be willing to ponder the problem I'm talking about and
that you'll entertain the idea that keeping RTL PRG files as pure harbour
isn't some half-arsed idea I spewed into my keyboard with the intention of
winding up Ron Pinkas?

Also, in this spirit of learning, are you saying that it will never be
possible to build the whole of the harbour RTL using "/go"?

>                                                               Otherwise, I
> believe you failed to demonstrate any problem with using C and Harbor
> mixture, in any given RTL module. The whole, RTL is exactly such mixture.

For fsck's sake Ron, will you *please* try and understand that it's a
*given* that the RTL contains C code. I knew this last week, I knew this
last month, I *obviously* knew this at the time I started thinking about the
freedom to build and play with the PRG parts of the harbour RTL.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 11 15:18:02 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Thu Jan 11 15:18:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKOEINDIAA.ron@profit-master.com>
References: <000201c07b2f$80d81ca0$0f2aa8c0@antonio>
Message-ID: <200101112017.f0BKHAe04184@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Wed,
10 Jan 2001 14:04:10 -0800

> // --- This really works --- //

I think that a program built around this function would make for a
*much* better tests/inline_c.prg file than what is currently in said
file. Just stick the following ahead of the function (just be sure to
put quote marks around your first command line argument when you test
it):

PROCEDURE MAIN( cLine, cDelim )
LOCAL a, i

   IF EMPTY( cLine )
      cLine := "This is a test"
   END IF
   IF EMPTY( cDelim )
      cDelim := " "
   END IF
   a := aTokens( cLine, cDelim )
   FOR i := 1 TO LEN( a )
      ? a[ i ]
   NEXT i

QUIT

My test results after adding a "FOR i := 1 TO 10000" loop around the
call to aTokens and taking the SECONDS() value before and after the loop
(and before displaying the tokens) are as follows:

Clipper 5.2e: 2 seconds.
Harbour w/o inline C: 5-1/2 seconds.
Harbour with inline C: 1 second.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Thu Jan 11 15:18:23 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Thu Jan 11 15:18:23 2001
Subject: [Harbour] INLINE C Synopsis
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEJODIAA.ron@profit-master.com>
References: <3A5DF00D.6368.190A4E7@localhost>
Message-ID: <3A5E243C.10738.25C7F77@localhost>

On 11 Jan 2001, at 8:55, Ron Pinkas wrote:

> ALL PP processing *is* currently suspended. Please update your source. There
> can be no conflict. The C code is protected from any PRG level #defines etc.

  OK, I missed your last changes. However the new problem has appeared: 
You will have to add a C language parser to find correctly the end of C 
code. At this moment any C code that uses '}' or '{' inside a string or 
even in comments is not compiled correctly by the harbour compiler. This 
is the reason why I insist on #pragma solution since this don't require 
any complicated code parsing.

> This leaves a problem with creating the Symbol Table. We have to have the
> function name declared. Thus, the syntax should be something like:

  There is no problem with symbols table. If a function is not called in 
a module where it is defined then it is not placed in the symbols table 
(like normal functions defined in C modules). Its name will be placed in 
the symbols table in all other modules that calls the function. The macro 
compiler is not a issue since it always required to place EXTERNAl or 
REQUEST statement for functions declared in C modules.

> [STATIC] C FUNCTION Identifier()
> {...}

  This will define a single function only while with #pragma you can 
define a helper static C functions inside a single block.

Regards, Ryszard

From harbour@lists.harbour-project.org  Thu Jan 11 15:23:02 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 15:23:02 2001
Subject: [Harbour] INLINE C Synopsis
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKKEKFDIAA.ron@profit-master.com>; from ron@profit-master.com on Thu, Jan 11, 2001 at 11:57:17AM -0800
References: <20010111192622.Y9113@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKKEKFDIAA.ron@profit-master.com>
Message-ID: <20010111202039.C9113@hagbard.davep.org>

On Thu, Jan 11, 2001 at 11:57:17AM -0800, Ron Pinkas wrote:

> Try calling the C function using the macro operator.

Good point. I changed BAR.PRG to:

,----[ bar.prg ]
| Request CFunctionThatLivesInFoo
| 
| Function Bar()
| Return( &( "CFunctionThatLivesInFoo()" ) )
`----

and it still worked a treat. I can see that not doing a REQUEST might be a
bit of a problem but then that's a danger with macro compilation in
CA-Clipper too.

-- 
Dave Pearson                        |   w3ng - The WWW Norton Guide reader.
http://www.davep.org/               |     eg - Norton Guide reader for Linux.
http://www.davep.org/clipper/       |    weg - Norton Guide reader for Windows.
http://www.davep.org/norton-guides/ | dgscan - DGROUP scanner for Clipper.

From harbour@lists.harbour-project.org  Thu Jan 11 16:01:04 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 11 16:01:04 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <200101112017.f0BKHAe04184@thor.parrett.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEKHDIAA.ron@profit-master.com>

David,

Thanks for the input. I'm not surprised, that's exactly why I wrote it.

Feel free to post such change, I'm not sure when I'll get to it. I leave
Saturday on a 3 day vacation. I still hope to implement the C FUNCTION,
before I leave, if we reach an agreement...

On a similar note, I would like to propose a new RTL function
B_Loop( nStart, nEnd, nStep, bBlock )

As you might guess, this will be a C function to execute speed sensitive
loops. In essence it will provide a C loop which executes the provided
Harbour CodeBlock from ulStart, to ulEnd in ulSteps increments, passing
ulCounter as parameter.

Ron

> ** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Wed,
> 10 Jan 2001 14:04:10 -0800
>
> > // --- This really works --- //
>
> I think that a program built around this function would make for a
> *much* better tests/inline_c.prg file than what is currently in said
> file. Just stick the following ahead of the function (just be sure to
> put quote marks around your first command line argument when you test
> it):
>
> PROCEDURE MAIN( cLine, cDelim )
> LOCAL a, i
>
>    IF EMPTY( cLine )
>       cLine := "This is a test"
>    END IF
>    IF EMPTY( cDelim )
>       cDelim := " "
>    END IF
>    a := aTokens( cLine, cDelim )
>    FOR i := 1 TO LEN( a )
>       ? a[ i ]
>    NEXT i
>
> QUIT
>
> My test results after adding a "FOR i := 1 TO 10000" loop around the
> call to aTokens and taking the SECONDS() value before and after the loop
> (and before displaying the tokens) are as follows:
>
> Clipper 5.2e: 2 seconds.
> Harbour w/o inline C: 5-1/2 seconds.
> Harbour with inline C: 1 second.
> --
> David G. Holm, Set Captain and all around
> Harbour Project Clipper Compatibility fanatic.


From harbour@lists.harbour-project.org  Thu Jan 11 16:02:02 2001
From: harbour@lists.harbour-project.org (Eduardo Rizzolo)
Date: Thu Jan 11 16:02:02 2001
Subject: [Harbour] unsuscribe
Message-ID: <000f01c07bf9$ba479360$0b00a8c0@eduardo>

This is a multi-part message in MIME format.

------=_NextPart_000_000B_01C07BF9.B9750120
Content-Type: multipart/alternative;
	boundary="----=_NextPart_001_000C_01C07BF9.B97E28E0"


------=_NextPart_001_000C_01C07BF9.B97E28E0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

unsuscribe
Eduardo Rizzolo
Posadas Misiones Argentina
fullpaint@arnet.com.ar
fullpaint@flashmail.com
icq 39280741
=20

------=_NextPart_001_000C_01C07BF9.B97E28E0
Content-Type: text/html;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD>
<META content=3D"text/html; charset=3Diso-8859-1" =
http-equiv=3DContent-Type>
<META content=3D"MSHTML 5.00.2314.1000" name=3DGENERATOR>
<STYLE></STYLE>
</HEAD>
<BODY bgColor=3D#ffffff>
<DIV>unsuscribe</DIV>
<DIV>Eduardo Rizzolo<BR>Posadas Misiones Argentina<BR><A=20
href=3D"mailto:fullpaint@arnet.com.ar">fullpaint@arnet.com.ar</A><BR><A=20
href=3D"mailto:fullpaint@flashmail.com">fullpaint@flashmail.com</A><BR>ic=
q=20
39280741<BR>&nbsp;</DIV></BODY></HTML>

------=_NextPart_001_000C_01C07BF9.B97E28E0--

------=_NextPart_000_000B_01C07BF9.B9750120
Content-Type: text/x-vcard;
	name="Eduardo Rizzolo.vcf"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: attachment;
	filename="Eduardo Rizzolo.vcf"

BEGIN:VCARD
VERSION:2.1
N:Rizzolo;Eduardo
FN:Eduardo Rizzolo
ORG:Pinturas Misioneras
TEL;WORK;VOICE:03752-454420
TEL;CELL;VOICE:icq 39280741
TEL;WORK;FAX:03752-454420
ADR;WORK:;;Av. Uruguay 4421;Posadas;Misiones;N3300MOF;Argentina
LABEL;WORK;ENCODING=3DQUOTED-PRINTABLE:Av. Uruguay =
4421=3D0D=3D0APosadas, Misiones N3300MOF=3D0D=3D0AArgentina
ADR;HOME:;;;Posadas;Misiones;3300;Argentina
LABEL;HOME;ENCODING=3DQUOTED-PRINTABLE:Posadas, Misiones =
3300=3D0D=3D0AArgentina
EMAIL;PREF;INTERNET:fullpaint@arnet.com.ar
REV:20010111T181005Z
END:VCARD

------=_NextPart_000_000B_01C07BF9.B9750120--


From harbour@lists.harbour-project.org  Thu Jan 11 16:14:02 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Thu Jan 11 16:14:02 2001
Subject: [Harbour] Fw: GPF in hb_gcall()
Message-ID: <002201c07c13$6bea1660$0100007f@sl.conex.net>



 Hi,

 since the last build (fwh010) i often get an gpf in hb_gcall() when closing
 a dialogbox with odlg:end().
 After making a dummyfunction of hb_gcall() everything works.

 Regards,
 Juergen




From harbour@lists.harbour-project.org  Thu Jan 11 16:24:01 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Thu Jan 11 16:24:01 2001
Subject: [Harbour] New build 0.36
References: <200101110517_MC2-C131-9DA@compuserve.com>
Message-ID: <007501c07c14$bf2f1d60$0100007f@sl.conex.net>

John



> Luiz,
>
> "I´d like to suggest that the new build should be release in the
> weekend."
>
> Please: NO.  Surely the INLINE C on its own is enough to rule that out.

What I mean, it not to release the new build on this week end. but on
weekends days(saturday or Sunday) . this will help all captains to build the
release binaries.

Regards

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Thu Jan 11 16:25:03 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 11 16:25:03 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <20010111200623.B9113@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKAEKIDIAA.ron@profit-master.com>

Dave,

> If something in the RTL is written as a PRG file then it only seems polite
> and sensible to make sure that it can be compiled by anyone, C compiler or
> no C compiler.

But in our example, the developer chose a prg supplemented with inline C,
how is that less polite than if he chose to code in C exclusively?

> If someone has harbour it only seems fair that we should ensure
> that all the
> PRG files in harbour can be compiled by someone using a build of harbour
> that doesn't require a C compiler. It's polite, it's clean and it's in the
> spirit of free software. It allows the maximum number of people
> the ability
> to tinker with the harbour source.

It never was possible to change *any* portion of the RTL, without a C
compiler. One can at most override a RTL module, by possibly running a prg
function with the same name within HBRUN! That's all. There is no guarantee,
that one can modify any given RTL module, without rewriting it completely in
PRG form, if not already available in PRG form, how is that any different
here?

> > Say we do have the C FUNCTION support, you suggest we can't use
> it in RTL,
> > because it will require C compiler?
>
> Yes, that is exactly what I'm suggesting. Use of that will render any PRG
> file unbuildable by anyone who doesn't have a C compiler. It will also
> render that PRG unbuildable by someone wanting to build with a compiler
> other than harbour.

It never was "buildable" without a C compiler to begin with! As I previously
said, one could only run such prg with HBRUN at best. He could not make it
available as part of a "revised" RTL, in any form other than when using a C
compiler.

> > I think you didn't fully analyze this, before making your original
> > statement, and now finding, it's hard to get off the tree.
>
> I think you're fantasising again Ron Pinkas. I, on the other hand, *know*
> that I thought about this recommendation for quite some time
> before I posted
> it. What are you most interested in Ron Pinkas, your fantasies or
> the truth?

Don't blame me, if it doesn't look that way. As I said, you have not
demonstrated any problem with usage of inline C within a RTL module, written
in PRG form. Now you reduce your concern to manners - I'm still not
impressed, and certainly not convinced.

> > We don't have to discuss it any further, if this is the case.
>
> I take it then that now I've exposed your fantasy we can continue with the
> discussion and you'll be willing to ponder the problem I'm
> talking about and
> that you'll entertain the idea that keeping RTL PRG files as pure harbour
> isn't some half-arsed idea I spewed into my keyboard with the intention of
> winding up Ron Pinkas?

I'll just have to conclude, that it is either too difficult for you to admit
a mistake, or that  you still don't respect the right of a given RTL
developer, to choose between C, PRG or both.

> Also, in this spirit of learning, are you saying that it will never be
> possible to build the whole of the harbour RTL using "/go"?

You could have never built any portion of the RTL with /go, certainty not
the whole of it.  If and when we can compile some of it with /go, our make
system, already has many different options, when compiling different
modules, and will certainly address it if needed.

Ron


From harbour@lists.harbour-project.org  Thu Jan 11 16:42:02 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Thu Jan 11 16:42:02 2001
Subject: [Harbour] Hbmake and -D switch with multiple macros (was Changelog 2001 -01-10 22:30 GMT -3)
References: <200101110516_MC2-C131-9D8@compuserve.com>
Message-ID: <008c01c07c17$5df36c60$0100007f@sl.conex.net>

John,Captains

>
> "hbmake test.mak -DPR=hello.exe;OB=hello.obj;CF=hello.c"
>
> Please use the same syntax as is standard with (UNIX/GNU/etc) make.

Sorry, Hbmake use the same switch style as Borland make utility.

If you are against that hbmake use multiple macros with the -D switch let
vote.

The multiple macro used with the -D switch is a behavior that i was dreaming
to make utilities to have.

Comments are Welcome

Regards

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Thu Jan 11 16:57:01 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 11 16:57:01 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <200101112017.f0BKHAe04184@thor.parrett.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKAEKJDIAA.ron@profit-master.com>

David,

I did modify and post (sorry no ChangeLog entry) inline_c.prg to use aTokens
as per your suggestion.

Thanks,

Ron

> ** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Wed,
> 10 Jan 2001 14:04:10 -0800
>
> > // --- This really works --- //
>
> I think that a program built around this function would make for a
> *much* better tests/inline_c.prg file than what is currently in said
> file. Just stick the following ahead of the function (just be sure to
> put quote marks around your first command line argument when you test
> it):
>
> PROCEDURE MAIN( cLine, cDelim )
> LOCAL a, i
>
>    IF EMPTY( cLine )
>       cLine := "This is a test"
>    END IF
>    IF EMPTY( cDelim )
>       cDelim := " "
>    END IF
>    a := aTokens( cLine, cDelim )
>    FOR i := 1 TO LEN( a )
>       ? a[ i ]
>    NEXT i
>
> QUIT
>
> My test results after adding a "FOR i := 1 TO 10000" loop around the
> call to aTokens and taking the SECONDS() value before and after the loop
> (and before displaying the tokens) are as follows:
>
> Clipper 5.2e: 2 seconds.
> Harbour w/o inline C: 5-1/2 seconds.
> Harbour with inline C: 1 second.
> --
> David G. Holm, Set Captain and all around
> Harbour Project Clipper Compatibility fanatic.


From harbour@lists.harbour-project.org  Thu Jan 11 17:01:01 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Thu Jan 11 17:01:01 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKAEKJDIAA.ron@profit-master.com>
References: <200101112017.f0BKHAe04184@thor.parrett.net>
Message-ID: <200101112200.f0BM0Le12604@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Thu,
11 Jan 2001 13:58:03 -0800

> I did modify and post (sorry no ChangeLog entry) inline_c.prg to use aTokens
> as per your suggestion.

That would explain why my CVS update failed after commiting my
ChangeLog entry...
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Thu Jan 11 17:05:03 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Thu Jan 11 17:05:03 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKAEKJDIAA.ron@profit-master.com>
References: <200101112017.f0BKHAe04184@thor.parrett.net>
Message-ID: <200101112204.f0BM4ve13009@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Thu,
11 Jan 2001 13:58:03 -0800

> I did modify and post (sorry no ChangeLog entry) inline_c.prg to use aTokens
> as per your suggestion.

(Let's try that again...)

That would explain why my cvs commit failed after the ChangeLog file.
And this is one of the reasons why you MUST ALWAYS update the ChangeLog
file. So that a conflicting commit will fail as soon as it encounters
the modified ChangeLog file instead of much later in the commit process.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Thu Jan 11 17:09:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 11 17:09:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <200101112200.f0BM0Le12604@thor.parrett.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOEKJDIAA.ron@profit-master.com>

Oops sorry! I tought if I do it quick enough, (and let you know), I might
save you the trouble. Sorry.

Ron

> ** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Thu,
> 11 Jan 2001 13:58:03 -0800
>
> > I did modify and post (sorry no ChangeLog entry) inline_c.prg
> to use aTokens
> > as per your suggestion.
>
> That would explain why my CVS update failed after commiting my
> ChangeLog entry...
> --
> David G. Holm, Set Captain and all around
> Harbour Project Clipper Compatibility fanatic.


From harbour@lists.harbour-project.org  Thu Jan 11 17:12:02 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Thu Jan 11 17:12:02 2001
Subject: [Harbour] ChangeLog 2001-01-11 17:00 UTC-0500
Message-ID: <200101112211.f0BMBqe13684@thor.parrett.net>

2001-01-11 17:00 UTC-0500 David G. Holm <dholm@jsd-llc.com>
   * test/inline_c.prg
     + Added missing CVS ID line!

> Checking in ChangeLog;
> /cvsroot/Harbour-project/harbour/ChangeLog,v  <--  ChangeLog
> new revision: 1.2833; previous revision: 1.2832
> done
> chgrp: invalid group name `Harbour-project'
> Checking in tests/inline_c.prg;
> /cvsroot/Harbour-project/harbour/tests/inline_c.prg,v  <--  inline_c.prg
> new revision: 1.3; previous revision: 1.2
> done
> chgrp: invalid group name `Harbour-project'

What is that last quoted line trying to tell me?
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Thu Jan 11 17:39:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 11 17:39:02 2001
Subject: [Harbour] INLINE C Synopsis
In-Reply-To: <3A5E243C.10738.25C7F77@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKIEKKDIAA.ron@profit-master.com>

Ryszard,

> > ALL PP processing *is* currently suspended. Please update your
> source. There
> > can be no conflict. The C code is protected from any PRG level
> #defines etc.
>
>   OK, I missed your last changes. However the new problem has appeared:
> You will have to add a C language parser to find correctly the end of C
> code. At this moment any C code that uses '}' or '{' inside a string or
> even in comments is not compiled correctly by the harbour compiler. This
> is the reason why I insist on #pragma solution since this don't require
> any complicated code parsing.

I can fairly simply ignore strings and comments, will upload fix soon.

> > This leaves a problem with creating the Symbol Table. We have
> to have the
> > function name declared. Thus, the syntax should be something like:
>
>   There is no problem with symbols table. If a function is not called in
> a module where it is defined then it is not placed in the symbols table
> (like normal functions defined in C modules). Its name will be placed in
> the symbols table in all other modules that calls the function. The macro
> compiler is not a issue since it always required to place EXTERNAl or
> REQUEST statement for functions declared in C modules.

If you are confident there aren't any problems with the Symbol Table,
Forward Declarations, and static/public issue, than I have no objections to
the #pragma approach.

> > [STATIC] C FUNCTION Identifier()
> > {...}
>
>   This will define a single function only while with #pragma you can
> define a helper static C functions inside a single block.

Both have advantages and disadvantages, I still prefer the C FUNCTION
syntax, but will proceed as the group decides, and will be happy to have
this feature either way.

Ron


From harbour@lists.harbour-project.org  Thu Jan 11 17:41:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 11 17:41:02 2001
Subject: [Harbour] ChangeLog 2001-01-11 17:00 UTC-0500
In-Reply-To: <200101112211.f0BMBqe13684@thor.parrett.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKMEKKDIAA.ron@profit-master.com>

> > Checking in ChangeLog;
> > /cvsroot/Harbour-project/harbour/ChangeLog,v  <--  ChangeLog
> > new revision: 1.2833; previous revision: 1.2832
> > done
> > chgrp: invalid group name `Harbour-project'
> > Checking in tests/inline_c.prg;
> > /cvsroot/Harbour-project/harbour/tests/inline_c.prg,v  <--  inline_c.prg
> > new revision: 1.3; previous revision: 1.2
> > done
> > chgrp: invalid group name `Harbour-project'
>
> What is that last quoted line trying to tell me?

I have no clue, I get that too, for each posted file.


From harbour@lists.harbour-project.org  Thu Jan 11 17:47:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 11 17:47:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <200101112204.f0BM4ve13009@thor.parrett.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKEEKLDIAA.ron@profit-master.com>

David,

Sorry again, I practically always do. In this case I didn't perform global
update, for other considerations, and committed explicitly just that one
file in the tests directory. I took a calculated risk, that we aren't likely
to collide at such short interval (less than 1 minute including the time it
took to get my email back.) but...

Please accept my apologies,

Ron

> > I did modify and post (sorry no ChangeLog entry) inline_c.prg
> to use aTokens
> > as per your suggestion.
>
> (Let's try that again...)
>
> That would explain why my cvs commit failed after the ChangeLog file.
> And this is one of the reasons why you MUST ALWAYS update the ChangeLog
> file. So that a conflicting commit will fail as soon as it encounters
> the modified ChangeLog file instead of much later in the commit process.
> --
> David G. Holm, Set Captain and all around
> Harbour Project Clipper Compatibility fanatic.


From harbour@lists.harbour-project.org  Thu Jan 11 18:09:02 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Thu Jan 11 18:09:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKEEKLDIAA.ron@profit-master.com>
References: <200101112204.f0BM4ve13009@thor.parrett.net>
Message-ID: <200101112308.f0BN8oe18098@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Thu,
11 Jan 2001 14:47:38 -0800

> Please accept my apologies,

Sure.

But the next time you update just one file, please create a ChangeLog
entry and then run the cvs commit command from the harbour directory and
specify both the ChangeLog file and the full path of the program file
that you changed. (You can actually list as many individual files as
your command line length allows.)
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Thu Jan 11 18:25:04 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 18:25:04 2001
Subject: [Harbour] ChangeLog 2001-01-11 17:00 UTC-0500
In-Reply-To: <200101112211.f0BMBqe13684@thor.parrett.net>; from dholm@jsd-llc.com on Thu, Jan 11, 2001 at 05:11:42PM -0500
References: <200101112211.f0BMBqe13684@thor.parrett.net>
Message-ID: <20010111232425.F9113@hagbard.davep.org>

On Thu, Jan 11, 2001 at 05:11:42PM -0500, David G. Holm wrote:

> > chgrp: invalid group name `Harbour-project'
> 
> What is that last quoted line trying to tell me?

In theory it's telling you that there is no group (as in Unix group) called
Harbour-project on the machine in question. For example, there is no group
called "dholm" on hagbard:

,----
| davep@hagbard:~/temp$ chgrp dholm foo
| chgrp: invalid group name `dholm'
`----

Quite why the SourceForge CVS server would complain in this way I don't know
because "Harbour-project" is the right group name, right?

Perhaps someone nuked /etc/group on that machine? (Ouch!).

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 11 18:25:21 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 18:25:21 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKAEKIDIAA.ron@profit-master.com>; from ron@profit-master.com on Thu, Jan 11, 2001 at 01:26:11PM -0800
References: <20010111200623.B9113@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKAEKIDIAA.ron@profit-master.com>
Message-ID: <20010111232043.E9113@hagbard.davep.org>

On Thu, Jan 11, 2001 at 01:26:11PM -0800, Ron Pinkas wrote:

> > If someone has harbour it only seems fair that we should ensure that all
> > the PRG files in harbour can be compiled by someone using a build of
> > harbour that doesn't require a C compiler. It's polite, it's clean and
> > it's in the spirit of free software. It allows the maximum number of
> > people the ability to tinker with the harbour source.
> 
> It never was possible to change *any* portion of the RTL, without a C
> compiler. 

Are you suggesting that it isn't possible to rebuild a PRG file without the
aid of a C compiler? What's the intention of OBJ output then?

> [SNIP yet more stuff obsessed with C files in the RTL]
>
> > I think you're fantasising again Ron Pinkas. I, on the other hand,
> > *know* that I thought about this recommendation for quite some time
> > before I posted it. What are you most interested in Ron Pinkas, your
> > fantasies or the truth?
> 
> Don't blame me, if it doesn't look that way. 

Sorry Ron, I assumed that you were in a position to take responsibility for
your own beliefs.

>                                              As I said, you have not
> demonstrated any problem with usage of inline C within a RTL module,
> written in PRG form. 

Yes I have, you simply keep ignoring them by blathering on about the C code
in the RTL and by calling into question my motives and reasons.

>                      Now you reduce your concern to manners - I'm still
> not impressed, and certainly not convinced.

Now you're simply being dishonest Ron. What purpose does that serve? Please
can you concern yourself with what I'm writing about instead of trying to
call my motives into question.

> I'll just have to conclude, that it is either too difficult for you to
> admit a mistake, or that you still don't respect the right of a given RTL
> developer, to choose between C, PRG or both.

Or, here's an idea, you could actually read what I've written without
inventing stances for me and trying to publish motives that aren't actually
mine. This isn't about respecting rights and you know it. It's about
suggesting coding standards, it's no different than the when standards were
suggested that said only ANSI C should be used and that certain comment
styles would be used and stuff like that.

But, instead of seeing what I'm suggesting as the reasonable suggestion it
is you seem to have invented this fantasy that I don't like C in the RTL or
that people shouldn't write C for it or that I don't respect people
"rights". Could you be any more dishonest Ron Pinkas?

It's interesting to note that you've blathered on about rights and stuff and
how I've not actually said anything yet you've totally glossed over the
issue of free software and how it's useful to keep PRG files as pure PRG
files because of this. Do you not understand that PRG files can be portable
and C files can be portable but that this hybrid we've faced with isn't?

Are you going to gloss over this again and instead portray me as the enemy
of those who write code for the RTL? What are you *really* hiding here Ron
Pinkas? What purpose is *really* served by painting this picture of me
instead of reading what I've actually written and considering the concerns
I've raised?

> > Also, in this spirit of learning, are you saying that it will never be
> > possible to build the whole of the harbour RTL using "/go"?
> 
> You could have never built any portion of the RTL with /go, certainty not
> the whole of it. If and when we can compile some of it with /go, our make
> system, already has many different options, when compiling different
> modules, and will certainly address it if needed.

That doesn't really answer the question. Is there a technical reason why the
PRG parts of harbour can't be built with "/go"? Do you recognise that inline
C could present problems if that were to happen? Do you also recognise the
problems inline C could cause should harbour ever be ported to an
environment that doesn't use C? Can you not see that having inline C in the
PRG files looses you a useful level of abstraction?

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 11 18:46:02 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Thu Jan 11 18:46:02 2001
Subject: [Harbour] Fw: GPF in hb_gcall()
References: <002201c07c13$6bea1660$0100007f@sl.conex.net>
Message-ID: <007c01c07c29$57f792c0$921a5e18@bh>

Luiz / Juergen:

In FWH's TDialog:End() there is a call to hb_gcall().  You can also just
remove it and recompile to avoid this.

What's interesting (hopefully to someone who knows the exception trapping
code?) is it doesn't seem to truly be a gpf.  The gpf handler has been
invoked and pops up the msg (and kills the app if you click OK),
but if you reach around behind the msg box and click on the app it still
runs fine!

We get this behavior on some dialogs (not all) after getting fairly deep
into the app--it may be related to depth of the stack, or perhaps amount of
garbage to be collected.

Brian



----- Original Message -----
From: "Luiz Rafael Culik Guimaraes" <culik@nh.conex.com.br>
To: <harbour@lists.harbour-project.org>
Sent: Thursday, January 11, 2001 1:10 PM
Subject: [Harbour] Fw: GPF in hb_gcall()


>
>
>
>  Hi,
>
>  since the last build (fwh010) i often get an gpf in hb_gcall() when
closing
>  a dialogbox with odlg:end().
>  After making a dummyfunction of hb_gcall() everything works.
>
>  Regards,
>  Juergen
>
>
>
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Thu Jan 11 18:51:02 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Thu Jan 11 18:51:02 2001
Subject: [Harbour] Fw: GPF in hb_gcall()
In-Reply-To: <007c01c07c29$57f792c0$921a5e18@bh>
Message-ID: <000201c07c29$28ae7880$0f2aa8c0@antonio>

Brian,

We have just distributed a new FWH and Harbour binaries build.
Have you tested your app with them ?

Thanks for your feedback,

Antonio



From harbour@lists.harbour-project.org  Thu Jan 11 18:57:02 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Thu Jan 11 18:57:02 2001
Subject: [Harbour] SET OPTIMIZE enhancement
Message-ID: <00e401c07c2a$ea126a80$921a5e18@bh>

When SET OPTIMIZE is ON...

There's a new setting that we should add that is related to the Clipmore
cmDoLinear() -- whether or not to immediately resolve partially-  or
non-optimized filters (this can take a lot of time when the SET FILTER is
executed).  The alternative is to dynamically resolve records as you move
through the database.

Should we add a new SET OPT_RESOLVE_IMMEDIATE ON/OFF to set()?
As an alternative, dbOrderInfo() has been used for some settings, but it
doesn't seem to be logically correct either as it usually handles a specific
order.

I need to add support for this to RDDADS, but since it also applies to
dbfcdx I would rather do it through the RDD...

P.S.
I believe Ryszard suggested once that we add an extension to optionally make
SET DELETED specific to a workarea; if so we should do this for SET OPTIMIZE
too.


Brian Hays



From harbour@lists.harbour-project.org  Thu Jan 11 19:06:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 11 19:06:02 2001
Subject: [Harbour] Fw: GPF in hb_gcall()
In-Reply-To: <000201c07c29$28ae7880$0f2aa8c0@antonio>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOEKNDIAA.ron@profit-master.com>

Antonio,

Am I no longer on the distribution list? Sid received few versions, that I
did not.

Ron

> Brian,
>
> We have just distributed a new FWH and Harbour binaries build.
> Have you tested your app with them ?
>
> Thanks for your feedback,
>
> Antonio


From harbour@lists.harbour-project.org  Thu Jan 11 19:27:02 2001
From: harbour@lists.harbour-project.org (Sid Saylors)
Date: Thu Jan 11 19:27:02 2001
Subject: [Harbour] Fw: GPF in hb_gcall()
References: <000201c07c29$28ae7880$0f2aa8c0@antonio>
Message-ID: <000901c07c2e$4fbb7900$aa4c0418@elcjn1.sdca.home.com>

Antonio ,

when did you distributed it?
i didn't get it yet.....

Best regards.

Sid.......


----- Original Message ----- 
From: "Antonio Linares" <alinares@fivetech.com>
To: <harbour@lists.harbour-project.org>
Sent: Thursday, January 11, 2001 3:49 PM
Subject: RE: [Harbour] Fw: GPF in hb_gcall()


> Brian,
> 
> We have just distributed a new FWH and Harbour binaries build.
> Have you tested your app with them ?
> 
> Thanks for your feedback,
> 
> Antonio
> 
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 


From harbour@lists.harbour-project.org  Thu Jan 11 19:30:05 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 11 19:30:05 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <20010111232043.E9113@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKGEKODIAA.ron@profit-master.com>

Dave,

> > It never was possible to change *any* portion of the RTL, without a C
> > compiler.
>
> Are you suggesting that it isn't possible to rebuild a PRG file
> without the
> aid of a C compiler? What's the intention of OBJ output then?

1. I'm not suggesting, I'm stating, that there never was, and still isn't,
any way, to compile  any of the RTL PRG files into a linkable functional
OBJ->LIB file.

2. The intention of OBJ output, was to allow such feature. But, it was a
work in progress, and it faced some technical issues, that were never
resolved. Later, when the BCC 5.5 became free, the motivation, of the
contributor, to resolve these issues, was to my understanding reduced, to
the point of not being a priority any longer.

> >                                              As I said, you have not
> > demonstrated any problem with usage of inline C within a RTL module,
> > written in PRG form.
>
> Yes I have, you simply keep ignoring them by blathering on about
> the C code
> in the RTL and by calling into question my motives and reasons.

Let's cut the bull, what problem have you demonstrated?

> >                      Now you reduce your concern to manners - I'm still
> > not impressed, and certainly not convinced.
>
> Now you're simply being dishonest Ron. What purpose does that
> serve? Please
> can you concern yourself with what I'm writing about instead of trying to
> call my motives into question.

I'm lost Dave, what motives have I called into question. When did I ever
once mentioned your motives? I simply said, that now your concern appear to
involve the "politeness" or lack of, when including C code in a prg file.


> > I'll just have to conclude, that it is either too difficult for you to
> > admit a mistake, or that you still don't respect the right of a
> given RTL
> > developer, to choose between C, PRG or both.
>
> Or, here's an idea, you could actually read what I've written without
> inventing stances for me and trying to publish motives that
> aren't actually
> mine. This isn't about respecting rights and you know it. It's about
> suggesting coding standards, it's no different than the when
> standards were
> suggested that said only ANSI C should be used and that certain comment
> styles would be used and stuff like that.

Still not sure which motives have I ever mentioned. Please explain which
coding standard, dictates which language has to be used in the development
of Harbour RTL?

As we both know, there is no such standard. Why then, do you think, that
deciding to develop a certain function in C (which requires C compiler and
knowledge to "tinker with"), is polite, OK, and opposing no threat to free
software, while, if same developer chose to code such function in PRG,
enhanced with some C code, it is impolite, not ok, or otherwise in conflict
with the best interest of free software?

> But, instead of seeing what I'm suggesting as the reasonable suggestion it
> is you seem to have invented this fantasy that I don't like C in
> the RTL or
> that people shouldn't write C for it or that I don't respect people
> "rights". Could you be any more dishonest Ron Pinkas?

Dave, when did I suggest, that you don't like C in the RTL?

I never did. I did suggest, that you don't seem to realize, that just as any
developer has every right to code a contributed RTL function, in either C or
PRG. That same individual has every right to choose a hybrid PRG, when
appropriate. I did say, that it introduces no *additional* burden, to any
one involved with "tinkering" with the RTL, because any such tinkering,
requires a C compiler to begin with.

> It's interesting to note that you've blathered on about rights
> and stuff and
> how I've not actually said anything yet you've totally glossed over the
> issue of free software and how it's useful to keep PRG files as pure PRG
> files because of this. Do you not understand that PRG files can
> be portable
> and C files can be portable but that this hybrid we've faced with isn't?

I did specifically respond in previous message
http://www.matrixlist.com/pipermail/harbour/2001-January/002255.html (hint:
functional link):

---------------- Extract ---------------
> But, in the mean time, using inline C in PRG code for the RTL reduces it's
> utility as free software. Harbour is, first and foremost, free software.

Hua??? How does it restrict its use. If the user received a BIN
distribution, than that PRG with its INLINE have been compiled already. If
he gets it in source mode, he has to compile other C RTL anyway! Please
explain...
----------------- Extract ---------------

But you never bothered explaining how such coding decision will "reduces
it's utility as free software"! May be now, you care to explain what
specific impact such coding decision, has on free software?

I can not respond to a complaint that I didn't get to understand.

> Are you going to gloss over this again and instead portray me as the enemy
> of those who write code for the RTL? What are you *really* hiding here Ron
> Pinkas? What purpose is *really* served by painting this picture of me
> instead of reading what I've actually written and considering the concerns
> I've raised?

1. Dave, please try to find when/where did I portray you as the enemy of
anyone?
2. I have *nothing* to hide from you, or the Harbour community Dave (unless
we discuss my sex life :-)).
3. I wouldn't know what purpose it would serve, because I never tried it.

> > > Also, in this spirit of learning, are you saying that it will never be
> > > possible to build the whole of the harbour RTL using "/go"?
> >
> > You could have never built any portion of the RTL with /go,
> certainty not
> > the whole of it. If and when we can compile some of it with
> /go, our make
> > system, already has many different options, when compiling different
> > modules, and will certainly address it if needed.
>
> That doesn't really answer the question. Is there a technical
> reason why the
> PRG parts of harbour can't be built with "/go"?

Yes, there is a reason. It simply is not working, with or without inline
C!!!

> Do you recognise that inline
> C could present problems if that were to happen? Do you also recognise the
> problems inline C could cause should harbour ever be ported to an
> environment that doesn't use C? Can you not see that having
> inline C in the
> PRG files looses you a useful level of abstraction?

1. No I don't.
2. You must be joking right? He/She/Them, who will port Harbour to an
environment that doesn't support C, will have to rewrite 100% of the PP,
Lexer, Parser, HVM, and more than 90% of the Harbour RTL (currently written
in C). You really think that the few lines of inline C, he might encounter
in some PRG RTL modules, would be any hurdle???
3. No I don't. Not when we are talking about a PRG file making a small
percentage of a RTL library written mostly in C. In this context this
abstraction level is negligent.

Ron


From harbour@lists.harbour-project.org  Thu Jan 11 19:46:02 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Thu Jan 11 19:46:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKGEKODIAA.ron@profit-master.com>
References: <20010111232043.E9113@hagbard.davep.org>
Message-ID: <200101120045.f0C0jke24494@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Thu,
11 Jan 2001 16:30:14 -0800

> 1. I'm not suggesting, I'm stating, that there never was, and still isn't,
> any way, to compile  any of the RTL PRG files into a linkable functional
> OBJ->LIB file.

But it is still possible to add object generation at this point, but if
inline C code gets added to RTL .PRG files, then it will never be
possible to use -go. This is why Dave is emphasizing that inline C code
should not be placed into RTL .PRG files. We don't want to lock Harbour
out of pure object generation tomorrow, just because it isn't possible
today.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Thu Jan 11 20:02:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 11 20:02:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <200101120045.f0C0jke24494@thor.parrett.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKKEKPDIAA.ron@profit-master.com>

David,

I understand the concern, but:

1. Object generation is not functional, and there is no published commitment
it will ever  be.

2. Most importantly, obj generation is platform dependant, and thus should
never be counted on, for creating the RTL libs, to begin with!!!

3. The PRG modules in RTL are very few. This means that creating the RTL
*has* to involve different compiler (C), different command line switches
etc.. In this context, compiling PRG files with /gc doesn't seem like a
heavy price, compared with the possible design reasons, to utilize such
feature.

4. If I had Dave concerns, I would instead suggest a new conventional
extension for such hybrid source like .PRX (.prx).

Ron

> > 1. I'm not suggesting, I'm stating, that there never was, and
> still isn't,
> > any way, to compile  any of the RTL PRG files into a linkable functional
> > OBJ->LIB file.
>
> But it is still possible to add object generation at this point, but if
> inline C code gets added to RTL .PRG files, then it will never be
> possible to use -go. This is why Dave is emphasizing that inline C code
> should not be placed into RTL .PRG files. We don't want to lock Harbour
> out of pure object generation tomorrow, just because it isn't possible
> today.
> --
> David G. Holm, Set Captain and all around
> Harbour Project Clipper Compatibility fanatic.


From harbour@lists.harbour-project.org  Thu Jan 11 20:05:04 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 11 20:05:04 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKGEKODIAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOEKPDIAA.ron@profit-master.com>

> Do you also recognise the problems inline C could cause
> should harbour ever be ported to an environment that
> doesn't use C?

BTW, it will have nothing to do with Harbour. Harbour is an open source
project, aiming at creating a Clipper language compatible compiler,
developed in ANSI C.

This will have to be a new project, different name, completely new source...

Ron


From harbour@lists.harbour-project.org  Thu Jan 11 20:12:02 2001
From: harbour@lists.harbour-project.org (Hadi Hermawan)
Date: Thu Jan 11 20:12:02 2001
Subject: [Harbour] unsuscribe
Message-ID: <002701c07c34$54431540$0322a90a@sentral.divnet.telkom.co.id>

This is a multi-part message in MIME format.

------=_NextPart_000_0024_01C07C6E.FFADC940
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

unsuscribe
hadiher@divnet.telkom.co.id


------=_NextPart_000_0024_01C07C6E.FFADC940
Content-Type: text/html;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

<!DOCTYPE HTML PUBLIC "-//W3C//DTD W3 HTML//EN">
<HTML>
<HEAD>

<META content=3Dtext/html;charset=3Diso-8859-1 =
http-equiv=3DContent-Type><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 =
Transitional//EN">
<META content=3D'"MSHTML 4.72.3110.7"' name=3DGENERATOR>
<STYLE></STYLE>

</HEAD>
<BODY bgColor=3D#ffffff>
<DIV>
<DIV>unsuscribe</DIV>
<DIV><FONT color=3D#000000 =
size=3D2>hadiher@divnet.telkom.co.id</FONT></DIV></DIV>
<BLOCKQUOTE=20
style=3D"BORDER-LEFT: #000000 solid 2px; MARGIN-LEFT: 5px; PADDING-LEFT: =
5px">
    <DIV>&nbsp;</DIV></BLOCKQUOTE></BODY></HTML>

------=_NextPart_000_0024_01C07C6E.FFADC940--


From harbour@lists.harbour-project.org  Thu Jan 11 20:25:03 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 20:25:03 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKGEKODIAA.ron@profit-master.com>; from ron@profit-master.com on Thu, Jan 11, 2001 at 04:30:14PM -0800
References: <20010111232043.E9113@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKGEKODIAA.ron@profit-master.com>
Message-ID: <20010112012421.P9113@hagbard.davep.org>

On Thu, Jan 11, 2001 at 04:30:14PM -0800, Ron Pinkas wrote:
> Dave,
> 
> > > It never was possible to change *any* portion of the RTL, without a C
> > > compiler.
> >
> > Are you suggesting that it isn't possible to rebuild a PRG file without
> > the aid of a C compiler? What's the intention of OBJ output then?
> 
> 1. I'm not suggesting, I'm stating, that there never was, and still isn't,
> any way, to compile any of the RTL PRG files into a linkable functional
> OBJ->LIB file.

My apologies, I thought that OBJ support was actually working these days.
However, my point still stands in that it's about future proofing too.
Clipper code is a useful abstraction layer above the lower level stuff and
it would be a shame to loose that to some form of hybrid coding. That's the
thrust of what I'm getting at here.

> > Yes I have, you simply keep ignoring them by blathering on about the C
> > code in the RTL and by calling into question my motives and reasons.
> 
> Let's cut the bull, what problem have you demonstrated?

<sigh> Ok, here we go again. Harbour is, first and foremost, free software.
One of the great uses of free software is that the source can be freely
used. The PRG files in harbour will be more free if it's possible for people
to build those PRG files without the use of a C compiler, working OBJ
production or not.

Ideally those PRG files will be usable to people working with other Clipper
compilers too. Keeping the PRG files as clean as possible will allow people
that freedom also.

And, come such as time as OBJ generation is fully working, clean PRG files
will allow people the freedom to compile parts of harbour's distributed
source without the need of a C compiler.

I hope this is clear so far. I've written these observations more than once
already so I hope we won't see any more "bull" (to use your phrase) about C
files and the like creeping in.

> > Now you're simply being dishonest Ron. What purpose does that serve?
> > Please can you concern yourself with what I'm writing about instead of
> > trying to call my motives into question.
> 
> I'm lost Dave, what motives have I called into question. 

My reasons for writing about this subject and for making the observations
I've made:

,----[ <LOBBKAFMMFGJIKLMEPAKIEKEDIAA.ron@profit-master.com> ]
| I think you didn't fully analyze this, before making your original
| statement, and now finding, it's hard to get off the tree.
`----

that my motivation for writing what I'm writing is to try and wriggle out of
some mistake I've made:

,----[ <LOBBKAFMMFGJIKLMEPAKAEKIDIAA.ron@profit-master.com> ]
| I'll just have to conclude, that it is either too difficult for you to
| admit a mistake,
`----

or that I don't respect the "rights" of harbour developer's choices:

,----[ <LOBBKAFMMFGJIKLMEPAKAEKIDIAA.ron@profit-master.com> ]
|            or that you still don't respect the right of a given RTL
| developer, to choose between C, PRG or both.
`----

>                                                          When did I ever
> once mentioned your motives? 

See above.

> > Or, here's an idea, you could actually read what I've written without
> > inventing stances for me and trying to publish motives that aren't
> > actually mine. This isn't about respecting rights and you know it. It's
> > about suggesting coding standards, it's no different than the when
> > standards were suggested that said only ANSI C should be used and that
> > certain comment styles would be used and stuff like that.
> 
> Still not sure which motives have I ever mentioned. Please explain which
> coding standard, dictates which language has to be used in the development
> of Harbour RTL?

Why are you asking me to point to a standard that I've not claimed exists?
Where, exactly, have I said there is a standard that dictates what you claim
here?

As for the mention of ANSI C above, are you really suggesting that there
never was and still isn't an agreement to stick to ANSI C when writing C
code? Do you see this agreement as a failure to respect the rights of
harbour developers?

> As we both know, there is no such standard. 

Strawman Ron, strawman. You've invented this standard and then shown that it
doesn't exist. At no point have I said anything about this mythical
document.

>                                             Why then, do you think, that
> deciding to develop a certain function in C (which requires C compiler and
> knowledge to "tinker with"), is polite, OK, and opposing no threat to free
> software, while, if same developer chose to code such function in PRG,
> enhanced with some C code, it is impolite, not ok, or otherwise in
> conflict with the best interest of free software?

Because the ability to compile it freely in different environments is
reduced and a useful level of abstraction is lost. Quite why you compare
this view with a mythical document of your own invention I don't know.

> > But, instead of seeing what I'm suggesting as the reasonable suggestion
> > it is you seem to have invented this fantasy that I don't like C in the
> > RTL or that people shouldn't write C for it or that I don't respect
> > people "rights". Could you be any more dishonest Ron Pinkas?
> 
> Dave, when did I suggest, that you don't like C in the RTL?

It's a reference to all that blather about rewriting the whole of the RTL in
PRG files.

> I never did. I did suggest, that you don't seem to realize, that just as
> any developer has every right to code a contributed RTL function, in
> either C or PRG. That same individual has every right to choose a hybrid
> PRG, when appropriate. I did say, that it introduces no *additional*
> burden, to any one involved with "tinkering" with the RTL, because any
> such tinkering, requires a C compiler to begin with.

If/when the OBJ generation is fully working there's no reason why people
can't and won't fiddle with and modify parts of the RTL. I've documented
this more than once. GETSYS, TREPORT and TEDITOR are three obvious examples.
There are other .prg files in source/rtl that people might want to enhance
for personal use.

And, as I've documented above, they are also files that might be of utility
to people outside of the harbour sphere. Keeping those prg files "pure"
means that they have more utility as free software. It's more "polite" (to
try and further clarify the issue about being "polite").

> But you never bothered explaining how such coding decision will "reduces
> it's utility as free software"! May be now, you care to explain what
> specific impact such coding decision, has on free software?

<20010111200623.B9113@hagbard.davep.org> talks about using PRG files in
other places than harbour, I'd already mentioned OBJ generation prior to
you. You keep saying that I've not given reasons for my suggestion but they
are there to be read. They're also here to be read too, despite your
incorrect and dishonest claims that I'm simply trying to pull out of a badly
though out idea.

> 1. Dave, please try to find when/where did I portray you as the enemy of
> anyone?

Quote:

,----
| I'll just have to conclude, that it is either too difficult for you to
| admit a mistake, or that you still don't respect the right of a given RTL
| developer, to choose between C, PRG or both.
`----

"*still* don't respect"? Really? It's bad enough that you'd suggest I don't
respect this "right" anyway, it's even worse that you'd suggest it's an
ongoing condition.

> > That doesn't really answer the question. Is there a technical reason why
> > the PRG parts of harbour can't be built with "/go"?
> 
> Yes, there is a reason. It simply is not working, with or without inline
> C!!!

But the goal is that it will work at some point, right? We have to allow for
and design for this, right?

> > Do you recognise that inline C could present problems if that were to
> > happen? Do you also recognise the problems inline C could cause should
> > harbour ever be ported to an environment that doesn't use C? Can you not
> > see that having inline C in the PRG files looses you a useful level of
> > abstraction?
> 
> 1. No I don't.

Can you see it now that I've been kind enough to reiterate the things you
didn't see before?

> 2. You must be joking right? 

Actually, no I'm not joking, I'm talking about useful levels of abstraction.

>                              He/She/Them, who will port Harbour to an
> environment that doesn't support C, will have to rewrite 100% of the PP,
> Lexer, Parser, HVM, and more than 90% of the Harbour RTL (currently
> written in C). You really think that the few lines of inline C, he might
> encounter in some PRG RTL modules, would be any hurdle???

Go and look at cpython and jpython, ponder the code that's written in python
in relation the code that forms the implementation itself and you might get
my point. Python's not the only multi-implementation language that ensures
portability of key parts of it's RTL by upping the abstraction. Harbour is
different that many parts are done at a lower level but that's not an
argument for turning well abstracted code into hybrid C/Clipper combinations
(referring to the source itself, not the ability for one to call the other).

> 3. No I don't. Not when we are talking about a PRG file making a small
> percentage of a RTL library written mostly in C. In this context this
> abstraction level is negligent.

Why does it have to be about ratios? What about the utility and usefulness
of each of the PRG files in their own right?

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 11 20:39:02 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Thu Jan 11 20:39:02 2001
Subject: [Harbour] cvs hangs
Message-ID: <022701c07c39$2104b2b0$921a5e18@bh>

I can't get cvs to run.  It just sits there and never asks for a password,
but I can break out with Ctrl+C.
I did get an update on  my old system after the recent SourceForge changes
(after blowing away the ssh files).

cvs eventually times out saying
    cvs [update aborted]: end of file from server

ssh does the same.

I've just upgraded to Win2000.  Is that the problem?  Or is the server down?
Is there some security issue with Win2000 cmd windows I need to know about?


Brian Hays



From harbour@lists.harbour-project.org  Thu Jan 11 20:39:20 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 20:39:20 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKKEKPDIAA.ron@profit-master.com>; from ron@profit-master.com on Thu, Jan 11, 2001 at 05:03:19PM -0800
References: <200101120045.f0C0jke24494@thor.parrett.net> <LOBBKAFMMFGJIKLMEPAKKEKPDIAA.ron@profit-master.com>
Message-ID: <20010112013231.Q9113@hagbard.davep.org>

On Thu, Jan 11, 2001 at 05:03:19PM -0800, Ron Pinkas wrote:

> 1. Object generation is not functional, and there is no published
> commitment it will ever be.

But there's every chance it could happen. Doesn't it make sense to ensure
that harbour is coded so that we don't lock this out?

> 2. Most importantly, obj generation is platform dependant, and thus should
> never be counted on, for creating the RTL libs, to begin with!!!

Directly writing object files (as opposed to OBJ files) needn't be viewed as
platform dependent, the implementation will be but that's a different
matter.

> 4. If I had Dave concerns, I would instead suggest a new conventional
> extension for such hybrid source like .PRX (.prx).

The issue isn't about filenames.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 11 20:39:48 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 11 20:39:48 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKOEKPDIAA.ron@profit-master.com>; from ron@profit-master.com on Thu, Jan 11, 2001 at 05:05:35PM -0800
References: <LOBBKAFMMFGJIKLMEPAKGEKODIAA.ron@profit-master.com> <LOBBKAFMMFGJIKLMEPAKOEKPDIAA.ron@profit-master.com>
Message-ID: <20010112013618.R9113@hagbard.davep.org>

On Thu, Jan 11, 2001 at 05:05:35PM -0800, Ron Pinkas wrote:

> > Do you also recognise the problems inline C could cause should harbour
> > ever be ported to an environment that doesn't use C?
> 
> BTW, it will have nothing to do with Harbour. Harbour is an open source
> project, aiming at creating a Clipper language compatible compiler,
> developed in ANSI C.

[Developed in ANSI C and itself actually]

So we're totally discounting any possibility that the original parallel JVM
version of the VM won't reappear, or the same thing in pascal? You can't say
that such code would make it "not harbour".

> This will have to be a new project, different name, completely new
> source...

I'm not sure why you insist this but, I'll play along... The reasons we
shouldn't make sure the PRG files are of maximum use to this project are?

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 11 21:03:03 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Thu Jan 11 21:03:03 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKKEKPDIAA.ron@profit-master.com>
References: <200101120045.f0C0jke24494@thor.parrett.net>
Message-ID: <200101120202.f0C22re29521@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Thu,
11 Jan 2001 17:03:19 -0800

> 1. Object generation is not functional, and there is no published commitment
> it will ever  be.

That's still no reason to eliminate the possibility that it could ever
be made functional.

> 2. Most importantly, obj generation is platform dependant, and thus should
> never be counted on, for creating the RTL libs, to begin with!!!

Excuse me? Are you arguing that a platform dependent obj generation
capability can't be used to create a platform dependent RTL library for
the same platform?

> 3. The PRG modules in RTL are very few. This means that creating the RTL
> *has* to involve different compiler (C), different command line switches
> etc.. In this context, compiling PRG files with /gc doesn't seem like a
> heavy price, compared with the possible design reasons, to utilize such
> feature.

The point is that if someone has a complete binary of Harbour for a
platform with object generation and wants to make a change to the GET
system, he can do it without downloading a complete GNU/C development
environment if the module is pure Harbour. All he has to to is get the
Harbour sources and change the GETSYS.PRG file. But if the module is a
mix of Harbour and inline C, you totally remove this option for that
user. With *zero* gain to the Harbour project.

It is not a hardship to require Harbour developers to put their C
sources into separate modules, whereas mixing inline C into Harbour RTL
creates an unneccessary hardship for Harbour users that just want to
deal with PRG code.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Thu Jan 11 21:06:02 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Thu Jan 11 21:06:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKOEKPDIAA.ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKGEKODIAA.ron@profit-master.com>
Message-ID: <200101120205.f0C25te29741@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Thu,
11 Jan 2001 17:05:35 -0800

> BTW, it will have nothing to do with Harbour. Harbour is an open source
> project, aiming at creating a Clipper language compatible compiler,
> developed in ANSI C.

You missed a critical part: With code generation capabilites for a
variety of source and object formats. Just because C code generation is
the only fully realized format at this time, that does not justify
eliminating other code generation capabilites by putting inline C code
into Harbour RTL .PRG sources.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Thu Jan 11 21:10:05 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Thu Jan 11 21:10:05 2001
Subject: [Harbour] cvs hangs
In-Reply-To: <022701c07c39$2104b2b0$921a5e18@bh>
Message-ID: <200101120209.f0C292e30013@thor.parrett.net>

** Reply to message from "Brian Hays" <bhays@abacuslaw.com> on Thu, 11
Jan 2001 17:43:57 -0800

Double check all of your CVS environment variables.

> (after blowing away the ssh files).

You might try doing that again.

> Is there some security issue with Win2000 cmd windows I need to know about?

I can't think of any. (I use CVS with W2K at home on another project
and also access the other project from work on NT - no problems.)
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Thu Jan 11 21:13:04 2001
From: harbour@lists.harbour-project.org (Sid Saylors)
Date: Thu Jan 11 21:13:04 2001
Subject: [Harbour] cvs hangs
References: <200101120209.f0C292e30013@thor.parrett.net>
Message-ID: <000701c07c3d$404532e0$aa4c0418@elcjn1.sdca.home.com>

Dave,

    i'm having the same problem but mine said that
the connection timed out.

Sid.........



----- Original Message -----
From: "David G. Holm" <dholm@jsd-llc.com>
To: <harbour@lists.harbour-project.org>
Sent: Thursday, January 11, 2001 6:08 PM
Subject: Re: [Harbour] cvs hangs


> ** Reply to message from "Brian Hays" <bhays@abacuslaw.com> on Thu, 11
> Jan 2001 17:43:57 -0800
>
> Double check all of your CVS environment variables.
>
> > (after blowing away the ssh files).
>
> You might try doing that again.
>
> > Is there some security issue with Win2000 cmd windows I need to know
about?
>
> I can't think of any. (I use CVS with W2K at home on another project
> and also access the other project from work on NT - no problems.)
> --
> David G. Holm, Set Captain and all around
> Harbour Project Clipper Compatibility fanatic.
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Thu Jan 11 21:37:02 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Thu Jan 11 21:37:02 2001
Subject: [Harbour] cvs hangs
References: <200101120209.f0C292e30013@thor.parrett.net> <000701c07c3d$404532e0$aa4c0418@elcjn1.sdca.home.com>
Message-ID: <000f01c07c41$3688d730$921a5e18@bh>

cvs works now!
Perhaps the server didn't want to talk to San Diego for a while... I was
also unable to log onto Sourceforge.net for about 2 hours, but it's there
now.

Thanks, Dave and Ron...

Brian


From harbour@lists.harbour-project.org  Thu Jan 11 21:52:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 11 21:52:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <20010112012421.P9113@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCELCDIAA.ron@profit-master.com>

Dave,

> My apologies, I thought that OBJ support was actually working these days.
> However, my point still stands in that it's about future proofing too.
> Clipper code is a useful abstraction layer above the lower level stuff and
> it would be a shame to loose that to some form of hybrid coding.
> That's the
> thrust of what I'm getting at here.

But don't you see, that if such file was coded all in C, it would be no
different?

> > Let's cut the bull, what problem have you demonstrated?
>
> <sigh> Ok, here we go again. Harbour is, first and foremost, free
> software.
> One of the great uses of free software is that the source can be freely
> used. The PRG files in harbour will be more free if it's possible
> for people
> to build those PRG files without the use of a C compiler, working OBJ
> production or not.

Is it not true, that coding such file exclusively in C, would have the exact
same impact?
Is it not true, that it is *not* considered a bad practice to code the RTL
in C?

> Ideally those PRG files will be usable to people working with
> other Clipper
> compilers too. Keeping the PRG files as clean as possible will
> allow people
> that freedom also.

Is it not true that one could say the same against any RTL module written in
C?

> And, come such as time as OBJ generation is fully working, clean PRG files
> will allow people the freedom to compile parts of Harbour's distributed
> source without the need of a C compiler.

Again, is it not true, you could say the same against any RTL module written
in C?

> I hope this is clear so far. I've written these observations more
> than once
> already so I hope we won't see any more "bull" (to use your
> phrase) about C
> files and the like creeping in.

No it is not clear at all. As you should clearly see, all your concerns
could be stated word to word against the use of C in all RTL files. These
concerns are simply without merits.

The outmost consideration in writing the Harbour RTL (outside of
compatibility), is not its self compilability, but rather its speed (subject
to all other coding conventions).

> > > Now you're simply being dishonest Ron. What purpose does that serve?
> > > Please can you concern yourself with what I'm writing about instead of
> > > trying to call my motives into question.
> >
> > I'm lost Dave, what motives have I called into question.
>
> My reasons for writing about this subject and for making the observations
> I've made:
>
> ,----[ <LOBBKAFMMFGJIKLMEPAKIEKEDIAA.ron@profit-master.com> ]
> | I think you didn't fully analyze this, before making your original
> | statement, and now finding, it's hard to get off the tree.
> `----

That's not "inventing motives"! If I said, "I know", it could be.

> that my motivation for writing what I'm writing is to try and
> wriggle out of
> some mistake I've made:
>
> ,----[ <LOBBKAFMMFGJIKLMEPAKAEKIDIAA.ron@profit-master.com> ]
> | I'll just have to conclude, that it is either too difficult for you to
> | admit a mistake,
> `----
>
> or that I don't respect the "rights" of harbour developer's choices:
>
> ,----[ <LOBBKAFMMFGJIKLMEPAKAEKIDIAA.ron@profit-master.com> ]
> |            or that you still don't respect the right of a given RTL
> | developer, to choose between C, PRG or both.
> `----

It is a fact, not speculation, that you question (discount) the right of a
Harbour developer to use hybrid prg. Even if it wasn't accurate, since no
intentional harm, is even hinted, I doubt we can speak about "motives" (to
my knowledge the term suggest highly negative context - usually under false
pretence). I don't think I ever suggested, you some hidden agenda, nor
motives, that need to be "exposed").

To make it perfectly clear, I don't suspect you have any undisclosed
motives, that I need to speculate about.

> > > Or, here's an idea, you could actually read what I've written without
> > > inventing stances for me and trying to publish motives that aren't
> > > actually mine. This isn't about respecting rights and you
> know it. It's
> > > about suggesting coding standards, it's no different than the when
> > > standards were suggested that said only ANSI C should be used and that
> > > certain comment styles would be used and stuff like that.
> >
> > Still not sure which motives have I ever mentioned. Please explain which
> > coding standard, dictates which language has to be used in the
> development
> > of Harbour RTL?
>
> Why are you asking me to point to a standard that I've not claimed exists?
> Where, exactly, have I said there is a standard that dictates
> what you claim
> here?

Didn't you say: "It's about suggesting coding standards"? Is it not fair to
ask, which coding standard?

> As for the mention of ANSI C above, are you really suggesting that there
> never was and still isn't an agreement to stick to ANSI C when writing C
> code? Do you see this agreement as a failure to respect the rights of
> harbour developers?

Sorry, but what are you talking about? When did I mention ANSI C?

To your question, no it is not a failure to respect developers rights,
because it was pre-agreed! Can you point us to any agreement, regarding
which portion of the RTL has to be coded as PRG?

> > As we both know, there is no such standard.
>
> Strawman Ron, strawman. You've invented this standard and then
> shown that it
> doesn't exist. At no point have I said anything about this mythical
> document.

Good, then, which coding standard did you refer to when you said: "It's
about suggesting coding standards"?

> >                                             Why then, do you think, that
> > deciding to develop a certain function in C (which requires C
> compiler and
> > knowledge to "tinker with"), is polite, OK, and opposing no
> threat to free
> > software, while, if same developer chose to code such function in PRG,
> > enhanced with some C code, it is impolite, not ok, or otherwise in
> > conflict with the best interest of free software?
>
> Because the ability to compile it freely in different environments is
> reduced and a useful level of abstraction is lost. Quite why you compare
> this view with a mythical document of your own invention I don't know.

But my question was, how is it different than file coded in C? What lesser
impact would a C coded file have? Why not claim the same against any file
coded in C? What qualify any file as OK to require C compiler? What qualify
such file, as Ok to not have the abstraction level?

> > > But, instead of seeing what I'm suggesting as the reasonable
> suggestion
> > > it is you seem to have invented this fantasy that I don't
> like C in the
> > > RTL or that people shouldn't write C for it or that I don't respect
> > > people "rights". Could you be any more dishonest Ron Pinkas?
> >
> > Dave, when did I suggest, that you don't like C in the RTL?
>
> It's a reference to all that blather about rewriting the whole of
> the RTL in
> PRG files.

It is no blather! If your concern was honest, it should have been raised
against all *non* PRG source, in the /source/rtl directory.

> > I never did. I did suggest, that you don't seem to realize, that just as
> > any developer has every right to code a contributed RTL function, in
> > either C or PRG. That same individual has every right to choose a hybrid
> > PRG, when appropriate. I did say, that it introduces no *additional*
> > burden, to any one involved with "tinkering" with the RTL, because any
> > such tinkering, requires a C compiler to begin with.
>
> If/when the OBJ generation is fully working there's no reason why people
> can't and won't fiddle with and modify parts of the RTL. I've documented
> this more than once. GETSYS, TREPORT and TEDITOR are three
> obvious examples.
> There are other .prg files in source/rtl that people might want to enhance
> for personal use.

1. There is no platform independent way, to produce OBJ files. Even on the
same platform, one has to worry about different OBJ formats.

2. The bulk of the RTL has to be compiled with another compiler, and command
switches anyway. How is the requirement to use -gc on some files, any
different?


> And, as I've documented above, they are also files that might be
> of utility
> to people outside of the harbour sphere. Keeping those prg files "pure"
> means that they have more utility as free software. It's more "polite" (to
> try and further clarify the issue about being "polite").

Again, developing *all* RTL files in PRG form, could be "of utility to
people outside the Harbour sphere". Was that ever the standard for deciding
which language to use in the development of the RTL?

> > But you never bothered explaining how such coding decision will "reduces
> > it's utility as free software"! May be now, you care to explain what
> > specific impact such coding decision, has on free software?
>
> <20010111200623.B9113@hagbard.davep.org> talks about using PRG files in
> other places than harbour, I'd already mentioned OBJ generation prior to
> you. You keep saying that I've not given reasons for my
> suggestion but they
> are there to be read. They're also here to be read too, despite your
> incorrect and dishonest claims that I'm simply trying to pull out
> of a badly
> though out idea.

1. You have never provide a single fact, proving reduced utility of Harbour,
due to coding any segment of it, inline or not, in C.

2. If your claim was valid, it could/should have been raised against *all*
non PRG source, in the rtl directory.

3. Any RTL file coded in C, has the same impact on utility, as a file that
is coded partially in C.

4. If your concern is not with all RTL files in general, than please specify
exactly which files require such protection.

5. If its not specific files, but rather some criteria, please let us know
what exactly qualify a file deserving such protection.

> > 1. Dave, please try to find when/where did I portray you as the enemy of
> > anyone?
>
> Quote:
>
> ,----
> | I'll just have to conclude, that it is either too difficult for you to
> | admit a mistake, or that you still don't respect the right of a
> given RTL
> | developer, to choose between C, PRG or both.
> `----
>
> "*still* don't respect"? Really? It's bad enough that you'd
> suggest I don't
> respect this "right" anyway, it's even worse that you'd suggest it's an
> ongoing condition.

We must have very different definitions for "enemy". The "still" term was to
indicate the duration of this argument, as in: ``still, after having read my
replies''.

> > > That doesn't really answer the question. Is there a technical
> reason why
> > > the PRG parts of harbour can't be built with "/go"?
> >
> > Yes, there is a reason. It simply is not working, with or without inline
> > C!!!
>
> But the goal is that it will work at some point, right? We have
> to allow for
> and design for this, right?

1. It can *never* be a globally available option!!!

2. Other RTL files also require "special" attention.

> > > Do you recognise that inline C could present problems if that were to
> > > happen? Do you also recognise the problems inline C could cause should
> > > harbour ever be ported to an environment that doesn't use C?
> Can you not
> > > see that having inline C in the PRG files looses you a useful level of
> > > abstraction?
> >
> > 1. No I don't.
>
> Can you see it now that I've been kind enough to reiterate the things you
> didn't see before?

You have reiterated, but have not shown anything I didn't see before. I am
still left to wonder, what requires any given PRG file in the RTL source to
be/remain in PRG form.

> > 2. You must be joking right?
>
> Actually, no I'm not joking, I'm talking about useful levels of
> abstraction.

Again, what makes some RTL files require such abstraction, while others
don't?

> >                              He/She/Them, who will port Harbour to an
> > environment that doesn't support C, will have to rewrite 100% of the PP,
> > Lexer, Parser, HVM, and more than 90% of the Harbour RTL (currently
> > written in C). You really think that the few lines of inline C, he might
> > encounter in some PRG RTL modules, would be any hurdle???
>
> Go and look at cpython and jpython, ponder the code that's
> written in python
> in relation the code that forms the implementation itself and you
> might get
> my point. Python's not the only multi-implementation language that ensures
> portability of key parts of it's RTL by upping the abstraction. Harbour is
> different that many parts are done at a lower level but that's not an
> argument for turning well abstracted code into hybrid C/Clipper
> combinations
> (referring to the source itself, not the ability for one to call
> the other).

The "well abstracted code" is not more than negligent portion of the RTL. If
you're really that concern with this attribute of the RTL code, why don't
you advocate this abstraction level for *all* RTL source?

If it's not applicable to all RTL source, what is the criteria?

> > 3. No I don't. Not when we are talking about a PRG file making a small
> > percentage of a RTL library written mostly in C. In this context this
> > abstraction level is negligent.
>
> Why does it have to be about ratios? What about the utility and usefulness
> of each of the PRG files in their own right?

And these PRG files are holly, just because, what?

Now that I was kind enough to reiterate the same question, in dozens of
different variations, will you care to share with us, why do some RTL files
require pure clean abstraction level, and others don't?

Ron


From harbour@lists.harbour-project.org  Thu Jan 11 22:00:04 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 11 22:00:04 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <200101120202.f0C22re29521@thor.parrett.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKIELCDIAA.ron@profit-master.com>

David,

Just a simple question: How would that be any different if such file was
coded exclusively in C?

Is it not more appropriate to suggest, that only specific RTL files, based
on some criteria, deserve such PRG protection?

Ron

> The point is that if someone has a complete binary of Harbour for a
> platform with object generation and wants to make a change to the GET
> system, he can do it without downloading a complete GNU/C development
> environment if the module is pure Harbour. All he has to to is get the
> Harbour sources and change the GETSYS.PRG file. But if the module is a
> mix of Harbour and inline C, you totally remove this option for that
> user. With *zero* gain to the Harbour project.
>
> It is not a hardship to require Harbour developers to put their C
> sources into separate modules, whereas mixing inline C into Harbour RTL
> creates an unneccessary hardship for Harbour users that just want to
> deal with PRG code.
> --
> David G. Holm, Set Captain and all around
> Harbour Project Clipper Compatibility fanatic.


From harbour@lists.harbour-project.org  Thu Jan 11 23:17:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 11 23:17:02 2001
Subject: [Harbour] ChangeLog 2001-01-11 20:10 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKIELCDIAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKEELDDIAA.ron@profit-master.com>

2001-01-11 20:10 UTC-0800 Ron Pinkas <ron@profit-master.com>
   * source/compiler/harbour.l
   * source/compiler/harbour.slx
     + Added logic to ignore, rest of line after //
                              content of /**/ comments
                              content of strings and char constants
                              escape codes within strings and char constants
   * tests/inline_c.prg
     + Added sample comments and strings containing { and \".


From harbour@lists.harbour-project.org  Thu Jan 11 23:52:14 2001
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Thu Jan 11 23:52:14 2001
Subject: [Harbour] Inline C
Message-ID: <3A5E4714.26478.1B0D5FA8@localhost>

As Ron suggested, just because it was called 'inline C' doesn't 
mean it couldn't be used for other things. Maybe it's the wrong 
name. Imbedded? It could just as easily output any type of text 
representation, since basically, it bypasses the preprocessor and 
dumps the output into the 'ready to compile' code. Particularly 
easily if the #pragma version is used.

Is it a minefield? Probably.

Can it be useful. Undoubtedly.

To me, it begs a more thought out implementation and 
documentation about it's uses and it's limitations. Maybe this 
documentation should even be carrying a warning label that it 
requires in-depth knowledge to use.

Whether this means it's included in the list of features of .36 is 
moot. If you are a master programmer and you are looking for a 
way to tweak your code in some masterful way, I believe you will 
find this usefull. After all, all tools are not used equally by all 
programmers. When we protect programmers from themselves, we 
may also be limiting them at the same time.

I would like to see it stay in Harbour and be fleshed out completely. 
We currently have no idea how useful it may be. Not being able to 
see the usefulness today is not much of an indication of the future. 
I'm sure that the cavemen didn't comprehend the usefulness of fire, 
but that didn't diminish it's future.

Or, someday, the person that even more fully understands it's 
application fixes it for the rest of us to act as we historically 
understand inlining. 

My feeling: It doesn't break anything and it might be quite useful.

Now, to the second point, polluting the RTL Clipper code with 
inlined C... Suppose we decide that we don't do this. (just a 
supposition) Does that mean I can't use inline C code in my code?

If we determine that certain functionality of the RTL is of benefit to 
leave pure Clipper, let's decide that on a case by case basis, not at 
the wholesale level without looking at the benefits of the alternative.

Either that, or provide an optimized and parallel unoptimized RTL.

We are obviously going to need some optimization capabilities that 
we don't have at this time. What Ron has done is open the door for 
this to occur without having to recode entire .PRG source into C. I 
agree that hybrid code could be messy, but it could also be 
extremely useful.

If hybrid code is the sticking point, then let's establish where it can 
and should not be used instead of removing the capability.


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Fri Jan 12 01:45:03 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Fri Jan 12 01:45:03 2001
Subject: [Harbour] Inline C
References: <3A5E4714.26478.1B0D5FA8@localhost>
Message-ID: <000d01c07c63$effe2270$921a5e18@bh>

Phil:
Thanks for the perspective on InLine C.  I fully agree with your
observations.

And thanks to Dave for raising my consciousness.  I had not taken the time
to try to anticipate the repercussions of Inlining.  In many ways the
hybrids are like genetically engineered animals; we have philosophical as
well as practical decisions to make on whether they should roam free or be
on a leash. I still tend to lean towards full speed and power, but he raised
some very important questions.

And thanks to Ron for the contribution.  The opportunity to optimize
performance conveniently seems to be just one of many significant
applications....

Brian



From harbour@lists.harbour-project.org  Fri Jan 12 02:08:02 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Fri Jan 12 02:08:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKGEKODIAA.ron@profit-master.com>
References: <20010111232043.E9113@hagbard.davep.org>
Message-ID: <3A5EBC92.7684.22D4A3C@localhost>

On 11 Jan 2001, at 16:30, Ron Pinkas wrote:

> Still not sure which motives have I ever mentioned. Please explain which
> coding standard, dictates which language has to be used in the development
> of Harbour RTL?

  Yes, there is no standard for it because it is difficult and 
inappopriate to create such standard. However we have a correct and 
working very well mechanism of linking C code with PRG code. 
  There are no clear benefits and there are some drawbacks expressed by 
Dave (I agree with them) which suggest disallowing of inlining of C code 
in PRG file inside core harbour code.
  I think that suppressing inline C in the core harbour code should be a 
new coding style rule that should be followed by all harbour developers.
Do we need to vote for it?

Regards, Ryszard


From harbour@lists.harbour-project.org  Fri Jan 12 02:50:04 2001
From: harbour@lists.harbour-project.org (Alexander S.Kresin)
Date: Fri Jan 12 02:50:04 2001
Subject: [Harbour] Re: C Function syntax
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKOEKEDIAA.ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKOEKEDIAA.ron@profit-master.com>
Message-ID: <1696822743.20010112104328@belacy.belgorod.su>

On 11.01.2001 22:36, Ron Pinkas <ron@profit-master.com> wrote:

RP> Can we agree, on the syntax for a C Function?

 I vote for #pragma, considering that it's more clean way.
 Harbour shouldn't parse C code, I think.
 
RP> The #pragma approach has few disadvantages:

RP> 1. The extend system calling conventions, have to be manually coded.
RP> 2. Symbols are not declared to the harbour layer, and thus Symbol Table
RP> generation is inaccurate, or even incomplete.
RP> 3. If symbol entry was created (prg calls the symbol), the symbol, can not
RP> be determined to be "static" or public (without parsing the C code).

 I don't think that creating symbol entry on C level is a good
 practice. C code in Clipper/Harbour is intended for other purposes,
 so I don't see a problem here.

Best regards,
 Alexander
http://members.xoom.com/alkresin/



From harbour@lists.harbour-project.org  Fri Jan 12 03:03:02 2001
From: harbour@lists.harbour-project.org (Patrick Mast)
Date: Fri Jan 12 03:03:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <3A5EBC92.7684.22D4A3C@localhost>
Message-ID: <NCBBJKNMIDPJNLJCHCHIOEHLFMAA.harbour@winfakt.com>

Ryszard,

>   I think that suppressing inline C in the core harbour code should be a
> new coding style rule that should be followed by all harbour developers.
> Do we need to vote for it?
If "Inline C" help's a developer making Harbour Core files, why should
he/she NOT do that??

regards,

Patrick Mast
www.Patrick.Be.kz


From harbour@lists.harbour-project.org  Fri Jan 12 03:08:01 2001
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Fri Jan 12 03:08:01 2001
Subject: [Harbour] My opinion about the Harbour project.
References: <20010111232043.E9113@hagbard.davep.org> <3A5EBC92.7684.22D4A3C@localhost>
Message-ID: <3A5EBB2E.23ACDD1B@libero.it>

Ryszard,

I agree with you, NO C inline code inside harbour core libraries.

regards

Ryszard Glab ha scritto:
> 
> On 11 Jan 2001, at 16:30, Ron Pinkas wrote:
> 
> > Still not sure which motives have I ever mentioned. Please explain which
> > coding standard, dictates which language has to be used in the development
> > of Harbour RTL?
> 
>   Yes, there is no standard for it because it is difficult and
> inappopriate to create such standard. However we have a correct and
> working very well mechanism of linking C code with PRG code.
>   There are no clear benefits and there are some drawbacks expressed by
> Dave (I agree with them) which suggest disallowing of inlining of C code
> in PRG file inside core harbour code.
>   I think that suppressing inline C in the core harbour code should be a
> new coding style rule that should be followed by all harbour developers.
> Do we need to vote for it?
> 
> Regards, Ryszard
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Fri Jan 12 03:26:02 2001
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Fri Jan 12 03:26:02 2001
Subject: [Harbour] My opinion about the Harbour project.
References: <NCBBJKNMIDPJNLJCHCHIOEHLFMAA.harbour@winfakt.com>
Message-ID: <3A5EBF74.262FCE26@libero.it>

Patrick,

because of quality of written source code, readability, and maybe even
portability of such code, or else we could have a single file file for
the whole RTL with everything inside it.

regards.

PS. Note that I have pieces of code inside harbour rtl and \contrib
which could make use of this facility. I find it a great tool but on the
other hand I think that core libraries should be as clear and plain as
possible since they need to be ported to other platforms.

Patrick Mast ha scritto:
> 
> Ryszard,
> 
> >   I think that suppressing inline C in the core harbour code should be a
> > new coding style rule that should be followed by all harbour developers.
> > Do we need to vote for it?
> If "Inline C" help's a developer making Harbour Core files, why should
> he/she NOT do that??
> 
> regards,
> 
> Patrick Mast
> www.Patrick.Be.kz
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Fri Jan 12 03:48:02 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Fri Jan 12 03:48:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <NCBBJKNMIDPJNLJCHCHIOEHLFMAA.harbour@winfakt.com>
References: <3A5EBC92.7684.22D4A3C@localhost>
Message-ID: <3A5ED40B.25199.288FBDF@localhost>

On 12 Jan 2001, at 9:02, Patrick Mast wrote:

> If "Inline C" help's a developer making Harbour Core files, why should
> he/she NOT do that??

  Beacause we already have a working solution that is/will cause less 
problems. Simmilar to disallowing any C tricks that also can have some 
value for some developers.

Regards, Ryszard

From harbour@lists.harbour-project.org  Fri Jan 12 04:23:02 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Fri Jan 12 04:23:02 2001
Subject: [Harbour] Inline C
In-Reply-To: <3A5E4714.26478.1B0D5FA8@localhost>; from midnight@the-oasis.net on Thu, Jan 11, 2001 at 11:51:48PM -0500
References: <3A5E4714.26478.1B0D5FA8@localhost>
Message-ID: <20010112091554.V9113@hagbard.davep.org>

On Thu, Jan 11, 2001 at 11:51:48PM -0500, Phil Barnett wrote:

> Now, to the second point, polluting the RTL Clipper code with inlined C...
> Suppose we decide that we don't do this. (just a supposition) Does that
> mean I can't use inline C code in my code?

Code for your own systems? Obviously not, the harbour RTL has nothing to do
with code you write for your own pleasure or profit.

> If we determine that certain functionality of the RTL is of benefit to
> leave pure Clipper, let's decide that on a case by case basis, not at the
> wholesale level without looking at the benefits of the alternative.
> 
> Either that, or provide an optimized and parallel unoptimized RTL.

The third option here is to carry on using the happy mix of Clipper and C,
there is no need to have different branches of library development just to
give "optimized" and "unoptimized" versions.

> We are obviously going to need some optimization capabilities that we
> don't have at this time. What Ron has done is open the door for this to
> occur without having to recode entire .PRG source into C. 

We've never needed to recode entire PRG files into C anyway. It is possible,
right now, to code a key part of a function in C to get the same effect. The
only key difference (and this is one plus point of the idea behind what Ron
has provided) is the ability to hide that code from the rest of a system.

>                                                           I agree that
> hybrid code could be messy, but it could also be extremely useful.

I don't think anyone has suggested that hybrid code would be "messy".

> If hybrid code is the sticking point, then let's establish where it can
> and should not be used instead of removing the capability.

My suggestion is that it shouldn't be used for the RTL. I'm actually of the
opinion that it shouldn't be used as part of any of the contrib stuff but
I'm not actually going to float that as a suggestion that people should
consider because the contrib directory is "take it or leave it".

-- 
Dave Pearson                        |   w3ng - The WWW Norton Guide reader.
http://www.davep.org/               |     eg - Norton Guide reader for Linux.
http://www.davep.org/clipper/       |    weg - Norton Guide reader for Windows.
http://www.davep.org/norton-guides/ | dgscan - DGROUP scanner for Clipper.

From harbour@lists.harbour-project.org  Fri Jan 12 04:23:21 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Fri Jan 12 04:23:21 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCELCDIAA.ron@profit-master.com>; from ron@profit-master.com on Thu, Jan 11, 2001 at 06:53:04PM -0800
References: <20010112012421.P9113@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKCELCDIAA.ron@profit-master.com>
Message-ID: <20010112090821.U9113@hagbard.davep.org>

On Thu, Jan 11, 2001 at 06:53:04PM -0800, Ron Pinkas wrote:
> Dave,
> 
> > My apologies, I thought that OBJ support was actually working these
> > days. However, my point still stands in that it's about future proofing
> > too. Clipper code is a useful abstraction layer above the lower level
> > stuff and it would be a shame to loose that to some form of hybrid
> > coding. That's the thrust of what I'm getting at here.
> 
> But don't you see, that if such file was coded all in C, it would be no
> different?

Ron, how many more times and in how many different ways do I have to say
that I'm not talking about C files before you actually begin to understand
that I'm not talking about C files?

> The outmost consideration in writing the Harbour RTL (outside of
> compatibility), is not its self compilability, but rather its speed
> (subject to all other coding conventions).

Ron, how many more times and in how many different ways do I have to say
that I'm not talking about the overall design of the RTL before you actually
begin to understand that I'm not talking about the overall design of the
RTL?

> > ,----[ <LOBBKAFMMFGJIKLMEPAKIEKEDIAA.ron@profit-master.com> ]
> > | I think you didn't fully analyze this, before making your original
> > | statement, and now finding, it's hard to get off the tree.
> > `----
> 
> That's not "inventing motives"! If I said, "I know", it could be.

You said that that is what you think about me. Your thoughts are your own
Ron Pinkas.

> > Why are you asking me to point to a standard that I've not claimed
> > exists? Where, exactly, have I said there is a standard that dictates
> > what you claim here?
> 
> Didn't you say: "It's about suggesting coding standards"? Is it not fair
> to ask, which coding standard?

Ron, Hello? We're discussing the suggested standard.

> > As for the mention of ANSI C above, are you really suggesting that there
> > never was and still isn't an agreement to stick to ANSI C when writing C
> > code? Do you see this agreement as a failure to respect the rights of
> > harbour developers?
> 
> Sorry, but what are you talking about? When did I mention ANSI C?

You didn't, I did. Please read what I write.

> To your question, no it is not a failure to respect developers rights,
> because it was pre-agreed! Can you point us to any agreement, regarding
> which portion of the RTL has to be coded as PRG?

Ron, how many more times and in how many different ways do I have to say
that I'm not talking about which parts of the RTL can and can't be coded in
C before you actually begin to understand that I'm not talking about which
parts of the RTL can and can't be coded in C?

Why do you persist with this fantasy?

> > Strawman Ron, strawman. You've invented this standard and then shown
> > that it doesn't exist. At no point have I said anything about this
> > mythical document.
> 
> Good, then, which coding standard did you refer to when you said: "It's
> about suggesting coding standards"?

The standard I'm suggesting.

> > Because the ability to compile it freely in different environments is
> > reduced and a useful level of abstraction is lost. Quite why you compare
> > this view with a mythical document of your own invention I don't know.
> 
> But my question was, how is it different than file coded in C? What lesser
> impact would a C coded file have? Why not claim the same against any file
> coded in C? What qualify any file as OK to require C compiler? What
> qualify such file, as Ok to not have the abstraction level?

Because files that are coded in C are obviously coded in C and so require a
C compiler. That's fine. However, if something is coded in Clipper (the
language) then it makes sense to me (and a couple of others too it would
seem) that the source file be kept as pure Clipper code so as to retain it's
utility as an item of free software in it's own right.

Quite why you're failing to see this point I don't know.

> > It's a reference to all that blather about rewriting the whole of the
> > RTL in PRG files.
> 
> It is no blather! If your concern was honest, it should have been raised
> against all *non* PRG source, in the /source/rtl directory.

Oh, right, because my concern isn't the fantasy that you invented my concern
isn't honest? Sure Ron, sure.

> > If/when the OBJ generation is fully working there's no reason why people
> > can't and won't fiddle with and modify parts of the RTL. I've documented
> > this more than once. GETSYS, TREPORT and TEDITOR are three obvious
> > examples. There are other .prg files in source/rtl that people might
> > want to enhance for personal use.
> 
> 1. There is no platform independent way, to produce OBJ files. Even on the
> same platform, one has to worry about different OBJ formats.

Immaterial. When someone is working with an instance of harbour they are
working with an instance of harbour. You can't discount the principle of
object file generation (as opposed to OBJ file generation) because two given
people might be using different platforms or different object file formats.

> 2. The bulk of the RTL has to be compiled with another compiler, and command
> switches anyway. How is the requirement to use -gc on some files, any
> different?

You can't see why -gc is fundamentally different from other compiler
switches?

> > And, as I've documented above, they are also files that might be of
> > utility to people outside of the harbour sphere. Keeping those prg files
> > "pure" means that they have more utility as free software. It's more
> > "polite" (to try and further clarify the issue about being "polite").
> 
> Again, developing *all* RTL files in PRG form, could be "of utility to
> people outside the Harbour sphere". Was that ever the standard for
> deciding which language to use in the development of the RTL?

This is getting absurd now Ron. Stop putting up strawmen and please actually
read what I've written for what I've written.

> > <20010111200623.B9113@hagbard.davep.org> talks about using PRG files in
> > other places than harbour, I'd already mentioned OBJ generation prior to
> > you. You keep saying that I've not given reasons for my suggestion but
> > they are there to be read. They're also here to be read too, despite
> > your incorrect and dishonest claims that I'm simply trying to pull out
> > of a badly though out idea.
> 
> 1. You have never provide a single fact, proving reduced utility of Harbour,
> due to coding any segment of it, inline or not, in C.

What? After all the stuff I wrote in the last email? Proof, if ever any was
needed, that you're reading my emails with your eyes closed.

> 5. If its not specific files, but rather some criteria, please let us know
> what exactly qualify a file deserving such protection.

Ron, I've already written on this subject. Pretending that I've not done so
doesn't invalidate what I've written, neither does it invalidate what David
has written.

> > Can you see it now that I've been kind enough to reiterate the things you
> > didn't see before?
> 
> You have reiterated, but have not shown anything I didn't see before. 

More proof that you're ignoring what I write. You ask for my reasons, I
write them, you then claim that I've not given any reasons and ask that I
write them. When I write them again, at your request, you complain that I've
written them before.

Exactly what is it about my suggestion that makes you act so irrational Ron
Pinkas? Why would you invent things I've not said, why would you engage in
ad hominem attacks? Why would you keep saying I've not given reasons for my
suggestion when I have and then when I re-write them complain that I've done
so before?

>                                                                       I am
> still left to wonder, what requires any given PRG file in the RTL source
> to be/remain in PRG form.

Try reading the reasons I've given, the ones you claim don't exist. David
also shares some of those reasons too.

> > Actually, no I'm not joking, I'm talking about useful levels of
> > abstraction.
> 
> Again, what makes some RTL files require such abstraction, while others
> don't?

I'm not talking about the *requirement* (although it should be obvious that
some portions of harbour are better done in harbour space, GETSYS would be a
prime example here), I'm talking about the abstraction that is gained
because they are coded in Clipper.

> The "well abstracted code" is not more than negligent portion of the RTL.

Negligent portion, can you explain please?

> If you're really that concern with this attribute of the RTL code, why
> don't you advocate this abstraction level for *all* RTL source?

Because I'm not advocating the things you'd like to think I'm advocating.
Because I'm not the owner of the strawmen you keep putting up.

> If it's not applicable to all RTL source, what is the criteria?

Which part of "I'm talking about the PRG files" don't you understand?

> > Why does it have to be about ratios? What about the utility and
> > usefulness of each of the PRG files in their own right?
> 
> And these PRG files are holly, just because, what?

I can't say I think they are an evergreen tree.

> Now that I was kind enough to reiterate the same question, in dozens of
> different variations, will you care to share with us, why do some RTL
> files require pure clean abstraction level, and others don't?

Because those that are PRG files afford greater utility and freedom if they
are not written as hybrid files and those that are in C are obviously
written in C. How many more times and in how many more ways would you like
me to say this before you respond to the fact that this is what I'm saying?

One could almost start to get the wrong impression about this Ron, if I
didn't know you better I'd start to think that the reason for all these
strawmen and ad hominem attacks is that you're reacting to the fact that
someone dare suggest that one of your additions to harbour shouldn't be used
for core development.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Fri Jan 12 04:28:01 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Fri Jan 12 04:28:01 2001
Subject: [Harbour] INLINE C Synopsis (version 1.1)
Message-ID: <200101120427_MC2-C179-2A91@compuserve.com>

Ron,

"1. I recommend, we keep current specifications for INLINE c support."

Vote: No.

"2. I recommend we add C FUNCTION support"

Vote: Maybe.  More discussion needed first.  Suggest it be deferred
until after 0.36.

John.

From harbour@lists.harbour-project.org  Fri Jan 12 04:29:02 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Fri Jan 12 04:29:02 2001
Subject: [Harbour] My opinion about the Harbour project.
Message-ID: <200101120427_MC2-C179-2A92@compuserve.com>

Ron,

JS> 1. It's very restricted compared to what I'm used to with ASM in C:
JS> (a) can't use variables in the same easy ways

"Clipper variables can never be accesses by C directly."

So, as I said, it's not like the ASM-in-C feature. :-(

"There is no pollution of the name space."

OK.

JS> (c) the syntax needs major changes

"Like?"

Either make it more like the ASM in C feature and allow much easier
access to Harbour vars, or remove the current syntax.

In either case, add the syntax for inline C functions along one of
the lines others have suggested.  Preferably also allow much easier
access to Harbour vars with this, too.

> 2. Mixing ASM in C often means you no longer need an assembler,
> whereas the C in PRG has no such benefit.

"Oh yes it does [have such benefit], I don't have a clue, (though I can
learn, but why?) how to compile a C file, and how to link such compiled
file, with my Harbour PRG file. I'd like to keep it that way please."

I'm working on the basis that you're putting forward the idea that
there may be people who "don't have a clue ... how to compile a C
file" [I rather hope _you_ do!].  IAC, someone who doesn't know how
to compile C really should not be _writing_ C.  And we'd be silly to
lull them into any feeling otherwise.

I stand by my statement that the C in PRG does not offer the same
benefits as ASM in C.

JS> So, it's a lot different.

"I could care less, if it is similar or different. This was not designed =
to
replace inline ASM!!!"

I never said it was.  Rather, I compared it to inline ASM in C.  Please
re-read my messages if you really don't understand that.

"Please let's back off, few steps."

By all means.  Let's remove the current inline C and head for 0.36.
Let's then add a better inline C, along the lines many have said (and
I've said above).  Maybe that'll be 0.37.  However, I see no urgent
need for such a feature.  It doesn't need to be in ever.

"This does get tiring."

Yes.  I'm trying to get a better Harbour, as I believe you are.  An
inline C feature, but not the current one, looks attractive.

"I did provide detailed technical review of this feature. You are
welcome to post detailed suggestions for improvements."

See above.

John.

From harbour@lists.harbour-project.org  Fri Jan 12 04:41:01 2001
From: harbour@lists.harbour-project.org (harbour@lists.harbour-project.org)
Date: Fri Jan 12 04:41:01 2001
Subject: Re-2: [Harbour] Fw: GPF in hb_gcall()
Message-ID: <0000263B.3A5EDEDB@mail.dct.de>

Antonio,

i have just downloaded your harbour build (02.01.01), but still the same error.
p.s.Where can I find the fwh build ?

Juergen 

-------- Original Message --------
Subject: RE: [Harbour] Fw: GPF in hb_gcall() (12-Jan-2001 0:52)
From:    alinares@fivetech.com
To:      j.baez@formglas.de

> Brian,
> 
> We have just distributed a new FWH and Harbour binaries build.
> Have you tested your app with them ?
> 
> Thanks for your feedback,
> 
> Antonio
> 
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 


From harbour@lists.harbour-project.org  Fri Jan 12 04:44:02 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Fri Jan 12 04:44:02 2001
Subject: [Harbour] INLINE C Synopsis (version 1.1)
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEKBDIAA.ron@profit-master.com>; from ron@profit-master.com on Thu, Jan 11, 2001 at 10:05:02AM -0800
References: <LOBBKAFMMFGJIKLMEPAKCEJEDIAA.ron@profit-master.com> <LOBBKAFMMFGJIKLMEPAKCEKBDIAA.ron@profit-master.com>
Message-ID: <20010112094154.Y9113@hagbard.davep.org>

On Thu, Jan 11, 2001 at 10:05:02AM -0800, Ron Pinkas wrote:

> Conclusion:
> -----------
> 
> 1. I recommend, we keep current specifications for INLINE c support.

Vote: No.

> 2. I recommend we add C FUNCTION support. I suggest the syntax should be:
> 
> [STATIC] C FUNCTION Identifier()
> {...}

Vote: #pragma approach seems more correct than the above, although I'm torn
between that and the utility of been able to declare the harbour visible C
function as private.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Fri Jan 12 04:44:22 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Fri Jan 12 04:44:22 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <NCBBJKNMIDPJNLJCHCHIOEHLFMAA.harbour@winfakt.com>; from harbour@winfakt.com on Fri, Jan 12, 2001 at 09:02:42AM +0100
References: <3A5EBC92.7684.22D4A3C@localhost> <NCBBJKNMIDPJNLJCHCHIOEHLFMAA.harbour@winfakt.com>
Message-ID: <20010112093711.X9113@hagbard.davep.org>

On Fri, Jan 12, 2001 at 09:02:42AM +0100, Patrick Mast wrote:
> Ryszard,
> 
> >   I think that suppressing inline C in the core harbour code should be a
> > new coding style rule that should be followed by all harbour developers.
> > Do we need to vote for it?
>
> If "Inline C" help's a developer making Harbour Core files, why should
> he/she NOT do that??

"If C++ helps a developer making harbour core files, why should he/she NOT
do that??" The suggestion wouldn't stop people from writing core files for
harbour, it wouldn't even stop them writing them in an "optimised" way. All
I've simply suggested is that the utility of PRG files will be at its
highest if inline C isn't used.

The reasons for me suggesting this, both technical and philosophical, have
been documented more than once in this thread.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Fri Jan 12 04:48:02 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Fri Jan 12 04:48:02 2001
Subject: [Harbour] Fw: GPF in hb_gcall()
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKOEKNDIAA.ron@profit-master.com>
Message-ID: <000801c07c7c$ae3a0200$0f2aa8c0@antonio>

Ron,

> Am I no longer on the distribution list? Sid received few versions, that I
> did not.

Very strange. You should be there.

I am checking it with Ignacio, anyhow I am emailing
it to you right now.

Antonio



From harbour@lists.harbour-project.org  Fri Jan 12 05:21:02 2001
From: harbour@lists.harbour-project.org (Bill Smith)
Date: Fri Jan 12 05:21:02 2001
Subject: [Harbour] My opinion about the Harbour project.
References: <3A5EBC92.7684.22D4A3C@localhost> <NCBBJKNMIDPJNLJCHCHIOEHLFMAA.harbour@winfakt.com> <20010112093711.X9113@hagbard.davep.org>
Message-ID: <001a01c07c7e$45b83ec0$48c6efd1@k6bw>

>From a business perspective:

I have a Harbor codeset I want to maintain.  The code is specified as all
.PRG.  How do I qualify a programmer?

Bill

----- Original Message -----
From: "Dave Pearson" <davep@davep.org>
To: <harbour@lists.harbour-project.org>
Sent: Friday, January 12, 2001 1:37 AM
Subject: Re: [Harbour] My opinion about the Harbour project.


> On Fri, Jan 12, 2001 at 09:02:42AM +0100, Patrick Mast wrote:
> > Ryszard,
> >
> > >   I think that suppressing inline C in the core harbour code should be
a
> > > new coding style rule that should be followed by all harbour
developers.
> > > Do we need to vote for it?
> >
> > If "Inline C" help's a developer making Harbour Core files, why should
> > he/she NOT do that??
>
> "If C++ helps a developer making harbour core files, why should he/she NOT
> do that??" The suggestion wouldn't stop people from writing core files for
> harbour, it wouldn't even stop them writing them in an "optimised" way.
All
> I've simply suggested is that the utility of PRG files will be at its
> highest if inline C isn't used.
>
> The reasons for me suggesting this, both technical and philosophical, have
> been documented more than once in this thread.
>
> --
> The Harbour Project: A free software Clipper compatible compiler
> Home Page..........: http://www.harbour-project.org/
> FAQ................: http://www.harbour-project.org/faq/harbour.html
> My harbour page....: http://www.davep.org/harbour/
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>
>


From harbour@lists.harbour-project.org  Fri Jan 12 05:36:03 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Fri Jan 12 05:36:03 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <001a01c07c7e$45b83ec0$48c6efd1@k6bw>; from billsmith@jps.net on Fri, Jan 12, 2001 at 01:58:52AM -0800
References: <3A5EBC92.7684.22D4A3C@localhost> <NCBBJKNMIDPJNLJCHCHIOEHLFMAA.harbour@winfakt.com> <20010112093711.X9113@hagbard.davep.org> <001a01c07c7e$45b83ec0$48c6efd1@k6bw>
Message-ID: <20010112103529.A9113@hagbard.davep.org>

On Fri, Jan 12, 2001 at 01:58:52AM -0800, Bill Smith wrote:

> From a business perspective:
> 
> I have a Harbor codeset I want to maintain. The code is specified as all
> .PRG. How do I qualify a programmer?

I'm not sure I understand the question, but, perhaps this is something
better asked on the harbourtalk mailing list or even over in the newsgroup
<URL:news:comp.lang.clipper>?

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Fri Jan 12 05:36:28 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Fri Jan 12 05:36:28 2001
Subject: [Harbour] My opinion about the Harbour project.
Message-ID: <200101120535_MC2-C169-2CF3@compuserve.com>

Ron,

"On a similar note, I would like to propose a new RTL function
B_Loop( nStart, nEnd, nStep, bBlock )"

Did you mean HB_Loop()?

Is it premature optimisation?

John.

From harbour@lists.harbour-project.org  Fri Jan 12 05:37:08 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Fri Jan 12 05:37:08 2001
Subject: [Harbour] Hbmake and -D switch with multiple macros (was
 Changelog 2001 -01-10 2
Message-ID: <200101120535_MC2-C169-2CF8@compuserve.com>

Luiz,

"Hbmake use the same switch style as Borland make utility."

It allows multiple -D doesn't it?

"If you are against that hbmake use multiple macros with the -D switch le=
t
vote."

I'm not so much against that as in favour of keeping to what is a
very long-lived and very very heavily used standard.  Its problems
are well known.  Borland's approach may have problems on other
platforms, e.g. where semi-colon (;) is a command separator - such as
Linux & UNIX.

"The multiple macro used with the -D switch is a behavior that i was drea=
ming
to make utilities to have."

I recommend against that.  The existing make-style -D doesn't appear
broken so don't "fix" it.

John.

From harbour@lists.harbour-project.org  Fri Jan 12 05:37:34 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Fri Jan 12 05:37:34 2001
Subject: [Harbour] New build 0.36
Message-ID: <200101120535_MC2-C169-2CF9@compuserve.com>

Luiz,

"What I mean, it not to release the new build on this week end. but on
weekends days(saturday or Sunday) . this will help all captains to build =
the
release binaries."

Thanks for making that clear.  (And it's fine by me.)

John.

From harbour@lists.harbour-project.org  Fri Jan 12 05:37:58 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Fri Jan 12 05:37:58 2001
Subject: [Harbour] C Function syntax
Message-ID: <200101120535_MC2-C169-2CF5@compuserve.com>

Ron,

> Can we agree, on the syntax for a C Function?
> [STATIC] C FUNCTION Identifier()
> {...}

That's all there is?  Nothing about params?  Nothing about semantics?
How would I declare a C file-wide static variable?  How would I
#include a .h file?  Etc, etc.

Please let's _design_ this.  Fully.

Implement in haste, repent at leisure.

John.

From harbour@lists.harbour-project.org  Fri Jan 12 05:38:23 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Fri Jan 12 05:38:23 2001
Subject: [Harbour] My opinion about the Harbour project.
Message-ID: <200101120535_MC2-C169-2CF7@compuserve.com>

Ron,

> > It never was possible to change *any* portion of the RTL, without a C=

> > compiler.
>
> Are you suggesting that it isn't possible to rebuild a PRG file
> without the
> aid of a C compiler? What's the intention of OBJ output then?

"1. I'm not suggesting, I'm stating, that there never was, and still isn'=
t,
any way, to compile  any of the RTL PRG files into a linkable functional
OBJ->LIB file."

:-(

"2. The intention of OBJ output, was to allow such feature. But, it was a=

work in progress, and it faced some technical issues, that were never
resolved. Later, when the BCC 5.5 became free, the motivation, of the
contributor, to resolve these issues, was to my understanding reduced, to=

the point of not being a priority any longer."

:-( :-(

John.

From harbour@lists.harbour-project.org  Fri Jan 12 05:38:51 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Fri Jan 12 05:38:51 2001
Subject: [Harbour] My opinion about the Harbour project.
Message-ID: <200101120535_MC2-C169-2CF2@compuserve.com>

David,

"Clipper 5.2e: 2 seconds.
Harbour w/o inline C: 5-1/2 seconds.
Harbour with inline C: 1 second."

That shows what I already found: Harbour is _much_ slower at CPU-bound
things than Clipper.

But so what?  It makes little sense to do such tests on Harbour yet.
When/if we want to do them and maybe speed Harbour up, I have little
doubt it can be done (tested & made faster).  IAC, most people really
don't have much PRG code that's CPU-bound.  Plus, it can often be
made faster by obvious algorithm changes.

Also, CPUs are now so fast, and still getting faster, that worrying
now about speed doesn't look justified - though I admit to being sort
of uncomfortable with the notion of burning CPU cycles "unnecessarily"
(very much begs the question of what "unnecessarily" actually is).

Please let's not use "premature optimisation" (*) as a reason to keep
the current inline C!

(*) I think it was Jon Bentley who had wise words to say about it.

[the root of all evil, I think it was.  Dave will probably now dig me
out of a hole again! <g>]

John.

From harbour@lists.harbour-project.org  Fri Jan 12 05:39:17 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Fri Jan 12 05:39:17 2001
Subject: [Harbour] Inline C
Message-ID: <200101120535_MC2-C169-2CF6@compuserve.com>

Phil,

"To me, it begs a more thought out implementation and =

documentation about it's uses and it's limitations."

Quite.  The more things are discovered about the current version the
more I think a full re-think is needed.  Not more doc.

"Now, to the second point, polluting the RTL Clipper code with =

inlined C... Suppose we decide that we don't do this. (just a =

supposition)"

I'm in favour.

"Does that mean I can't use inline C code in my code?"

No.  Do as you will in your own code. :-)

"We are obviously going to need some optimization capabilities that =

we don't have at this time."

Yes.  Please see my msg to David.

"If hybrid code is the sticking point, then let's establish where it can =

and should not be used instead of removing the capability."

But let's design (and later implement) the capability in a better way.

John.

From harbour@lists.harbour-project.org  Fri Jan 12 06:31:02 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Fri Jan 12 06:31:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <200101120535_MC2-C169-2CF2@compuserve.com>; from John_Skelton@compuserve.com on Fri, Jan 12, 2001 at 05:34:55AM -0500
References: <200101120535_MC2-C169-2CF2@compuserve.com>
Message-ID: <20010112110103.B9113@hagbard.davep.org>

On Fri, Jan 12, 2001 at 05:34:55AM -0500, John Skelton wrote:

> Please let's not use "premature optimisation" (*) as a reason to keep the
> current inline C!
> 
> (*) I think it was Jon Bentley who had wise words to say about it.
> 
> [the root of all evil, I think it was. Dave will probably now dig me out
> of a hole again! <g>]

As I recall it was Donald Knuth:

,----
| davep@hagbard:~$ fortune -m "Premature optimization"
| (computers)
| %
| Premature optimization is the root of all evil.
|                 -- D.E. Knuth
| %
`----

-- 
It might seem easy enough, but computer language design is just like a
stroll in the park.

Jurassic Park, that is.
    	    	-- Larry Wall in <1994Jun15.074039.2654@netlabs.com>

From harbour@lists.harbour-project.org  Fri Jan 12 06:31:23 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Fri Jan 12 06:31:23 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <200101120535_MC2-C169-2CF3@compuserve.com>; from John_Skelton@compuserve.com on Fri, Jan 12, 2001 at 05:34:56AM -0500
References: <200101120535_MC2-C169-2CF3@compuserve.com>
Message-ID: <20010112110316.C9113@hagbard.davep.org>

On Fri, Jan 12, 2001 at 05:34:56AM -0500, John Skelton wrote:
> Ron,
> 
> "On a similar note, I would like to propose a new RTL function
> B_Loop( nStart, nEnd, nStep, bBlock )"
> 
> Did you mean HB_Loop()?

Even then, it's not really a loop, it's an iterated eval function isn't it?
Perhaps HB_NEVAL() would be a better name?

> Is it premature optimisation?

Or even premature optimism? "All programmers are optimists", Fred Brooks.
I'll bet John's got an ISBN number for that book. ;>

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Fri Jan 12 06:32:08 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Fri Jan 12 06:32:08 2001
Subject: [Harbour] Hbmake and -D switch with multiple macros (was Changelog 2001 -01-10 2
In-Reply-To: <200101120535_MC2-C169-2CF8@compuserve.com>; from John_Skelton@compuserve.com on Fri, Jan 12, 2001 at 05:35:00AM -0500
References: <200101120535_MC2-C169-2CF8@compuserve.com>
Message-ID: <20010112110510.D9113@hagbard.davep.org>

On Fri, Jan 12, 2001 at 05:35:00AM -0500, John Skelton wrote:

> I'm not so much against that as in favour of keeping to what is a very
> long-lived and very very heavily used standard. Its problems are well
> known. Borland's approach may have problems on other platforms, e.g. where
> semi-colon (;) is a command separator - such as Linux & UNIX.

ObNitPick: That's a command processor issue, not an operating system issue
(I've got command processors on my Windows boxen that use semi-colon as a
command separator). Your point, however, still stands.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Fri Jan 12 06:37:02 2001
From: harbour@lists.harbour-project.org (Eduardo Rizzolo)
Date: Fri Jan 12 06:37:02 2001
Subject: [Harbour] unsubcribe
Message-ID: <001e01c07c73$e8ecf320$0b00a8c0@eduardo>

This is a multi-part message in MIME format.

------=_NextPart_000_001A_01C07C73.E82B29C0
Content-Type: multipart/alternative;
	boundary="----=_NextPart_001_001B_01C07C73.E8345180"


------=_NextPart_001_001B_01C07C73.E8345180
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

unsubcribe
Eduardo Rizzolo
Posadas Misiones Argentina
fullpaint@arnet.com.ar
fullpaint@flashmail.com
icq 39280741
=20

------=_NextPart_001_001B_01C07C73.E8345180
Content-Type: text/html;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD>
<META content=3D"text/html; charset=3Diso-8859-1" =
http-equiv=3DContent-Type>
<META content=3D"MSHTML 5.00.2314.1000" name=3DGENERATOR>
<STYLE></STYLE>
</HEAD>
<BODY bgColor=3D#ffffff>
<DIV>unsubcribe</DIV>
<DIV>Eduardo Rizzolo<BR>Posadas Misiones Argentina<BR><A=20
href=3D"mailto:fullpaint@arnet.com.ar">fullpaint@arnet.com.ar</A><BR><A=20
href=3D"mailto:fullpaint@flashmail.com">fullpaint@flashmail.com</A><BR>ic=
q=20
39280741<BR>&nbsp;</DIV></BODY></HTML>

------=_NextPart_001_001B_01C07C73.E8345180--

------=_NextPart_000_001A_01C07C73.E82B29C0
Content-Type: text/x-vcard;
	name="Eduardo Rizzolo.vcf"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: attachment;
	filename="Eduardo Rizzolo.vcf"

BEGIN:VCARD
VERSION:2.1
N:Rizzolo;Eduardo
FN:Eduardo Rizzolo
ORG:Pinturas Misioneras
TEL;WORK;VOICE:03752-454420
TEL;CELL;VOICE:icq 39280741
TEL;WORK;FAX:03752-454420
ADR;WORK:;;Av. Uruguay 4421;Posadas;Misiones;N3300MOF;Argentina
LABEL;WORK;ENCODING=3DQUOTED-PRINTABLE:Av. Uruguay =
4421=3D0D=3D0APosadas, Misiones N3300MOF=3D0D=3D0AArgentina
ADR;HOME:;;;Posadas;Misiones;3300;Argentina
LABEL;HOME;ENCODING=3DQUOTED-PRINTABLE:Posadas, Misiones =
3300=3D0D=3D0AArgentina
EMAIL;PREF;INTERNET:fullpaint@arnet.com.ar
REV:20010112T084442Z
END:VCARD

------=_NextPart_000_001A_01C07C73.E82B29C0--


From harbour@lists.harbour-project.org  Fri Jan 12 07:44:02 2001
From: harbour@lists.harbour-project.org (Marek Horodyski)
Date: Fri Jan 12 07:44:02 2001
Subject: [Harbour] My opinion about the Harbour project.
References: <3A5EBC92.7684.22D4A3C@localhost> <3A5ED40B.25199.288FBDF@localhost>
Message-ID: <026c01c07c96$6317d9e0$1321000a@altkomhomar>

----- Original Message ----- 
From: "Ryszard Glab" <rglab@imid.med.pl>
To: <harbour@lists.harbour-project.org>
Sent: Friday, January 12, 2001 9:53 AM
Subject: RE: [Harbour] My opinion about the Harbour project.


> On 12 Jan 2001, at 9:02, Patrick Mast wrote:
> 
> > If "Inline C" help's a developer making Harbour Core files, why should
> > he/she NOT do that??
> 
>   Beacause we already have a working solution that is/will cause less 
> problems. Simmilar to disallowing any C tricks that also can have some 
> value for some developers.
> 
> Regards, Ryszard

Ryszard
can you write on harbour-pl your opinion about Harbour project in polish ?

Regards, Marek Horodyski


From harbour@lists.harbour-project.org  Fri Jan 12 09:19:04 2001
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Fri Jan 12 09:19:04 2001
Subject: [Harbour] Inline C
In-Reply-To: <200101120535_MC2-C169-2CF6@compuserve.com>
Message-ID: <3A5ECBD9.7800.1D140D90@localhost>

On 12 Jan 2001, at 5:34, John Skelton wrote:

> "Does that mean I can't use inline C code in my code?"
> 
> No.  Do as you will in your own code. :-)

My point being that many of you have voted to remove it from 
Harbour, which will do exactly that.


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Fri Jan 12 09:40:05 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Fri Jan 12 09:40:05 2001
Subject: [Harbour] Hbmake and -D switch with multiple macros (was
 Changelog 2001 -01-
Message-ID: <200101120939_MC2-C17A-DACB@compuserve.com>

Dave,

JS> ... Borland's approach may have problems on other platforms, e.g. whe=
re
JS> semi-colon (;) is a command separator - such as Linux & UNIX.

"ObNitPick: That's a command processor issue, not an operating system iss=
ue"

NitPickToo: I didn't quite say it was an OS issue. :-)  But I'll plead
guilty by carelessness or some such.

"(I've got command processors on my Windows boxen that use semi-colon as =
a
command separator)."

Me too. :-)

"Your point, however, still stands."

Phew!

John.

From harbour@lists.harbour-project.org  Fri Jan 12 09:40:26 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Fri Jan 12 09:40:26 2001
Subject: [Harbour] My opinion about the Harbour project.
Message-ID: <200101120939_MC2-C17A-DACC@compuserve.com>

Dave,

> "All programmers are optimists", Fred Brooks.
> I'll bet John's got an ISBN number for that book. ;>

0-201-00650-2

He's not right, though.  OTOH, he makes a point that applies _so_
often.

John.

From harbour@lists.harbour-project.org  Fri Jan 12 09:41:08 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Fri Jan 12 09:41:08 2001
Subject: [Harbour] My opinion about the Harbour project.
Message-ID: <200101120939_MC2-C17A-DACE@compuserve.com>

Dave,

JS> [... Dave will probably now dig me out of a hole again! <g>]

| Premature optimization is the root of all evil.
|                 -- D.E. Knuth

Thanks. :-)  Don it was.

| It might seem easy enough, but computer language design is just like a
| stroll in the park.
| =

| Jurassic Park, that is.
|     	    	-- Larry Wall

Applies so well to HB_INLINE...

John.

From harbour@lists.harbour-project.org  Fri Jan 12 09:52:02 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Fri Jan 12 09:52:02 2001
Subject: [Harbour] Inline C
Message-ID: <200101120949_MC2-C191-F041@compuserve.com>

Phil,

"My point being that many of you have voted to remove it from Harbour"

Most people's point has been to get a better way to include C.
Wouldn't you rather use that?  Are you in such a hurry to use C in PRG
that you'd rather have the current HB_INLINE than something better
and agreed?

If the current way is to stay, I'd like to see a Harbour project build
option to enable it, default DISABLED.  That'll allow those who like
the current HB_INLINE to use it in their own code, and the rest of us
to be sure such code isn't creeping into Harbour itself.  Then we can
get on with designing a better C feature.

John.

From harbour@lists.harbour-project.org  Fri Jan 12 10:53:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Fri Jan 12 10:53:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <3A5EBF74.262FCE26@libero.it>
Message-ID: <LOBBKAFMMFGJIKLMEPAKAELKDIAA.ron@profit-master.com>

Maurilio,

> Patrick,
>
> because of quality of written source code, readability, and maybe even
> portability of such code, or else we could have a single file file for
> the whole RTL with everything inside it.

I'm surprised, you suggest that quality of inline c code should be deferior?

Using inline is not like putting the whole RTL in one file. It may very well
be appropriate  in the case, where, the bulk of the file will benefit from a
PRG approach, and at the same time, benefit from certain C optimizations,
and when such optimized service is so highly integrated into the task, and
has no stand alone value in itself.

Do you not think there could be such set of circumstances?

If there maybe, such set of circumstances, do you not think the integration
of C into that same PRG file, might be an elegant solution?

> PS. Note that I have pieces of code inside harbour rtl and \contrib
> which could make use of this facility. I find it a great tool but on the
> other hand I think that core libraries should be as clear and plain as
> possible since they need to be ported to other platforms.

BTW, This will not have any impact on porting the RTL into other platforms.

Ron


From harbour@lists.harbour-project.org  Fri Jan 12 10:55:05 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Fri Jan 12 10:55:05 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <3A5ED40B.25199.288FBDF@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKEELKDIAA.ron@profit-master.com>

Ryszard,

Quick question, in your opinion, could we use the #pragma approach on an RTL
PRG?

Ron

> > If "Inline C" help's a developer making Harbour Core files, why should
> > he/she NOT do that??
>
>   Beacause we already have a working solution that is/will cause less
> problems. Simmilar to disallowing any C tricks that also can have some
> value for some developers.
>
> Regards, Ryszard


From harbour@lists.harbour-project.org  Fri Jan 12 10:55:36 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Fri Jan 12 10:55:36 2001
Subject: [Harbour] Inline C
In-Reply-To: <3A5ECBD9.7800.1D140D90@localhost>; from midnight@the-oasis.net on Fri, Jan 12, 2001 at 09:18:17AM -0500
References: <200101120535_MC2-C169-2CF6@compuserve.com> <3A5ECBD9.7800.1D140D90@localhost>
Message-ID: <20010112155341.W9113@hagbard.davep.org>

On Fri, Jan 12, 2001 at 09:18:17AM -0500, Phil Barnett wrote:
> On 12 Jan 2001, at 5:34, John Skelton wrote:
> 
> > "Does that mean I can't use inline C code in my code?"
> > 
> > No.  Do as you will in your own code. :-)
> 
> My point being that many of you have voted to remove it from Harbour,
> which will do exactly that.

Even if the vote was to remove "inline C" from harbour (and I'm not sure
that's actually the current vote "tally" anyway) it wouldn't be doing that
at all because it isn't "part of" harbour. If I'm to understand Ron's method
of floating an idea he commits it to CVS to see what people think. Surely
removal is a valid option if people think it should be removed?

Or, put another way, relying on something that's currently in development
and, by definition, in a constant state of flux is going to bite. An
argument to keep a design seen as bad (that's not to say it is seen as bad,
that's simply an exercise in following your line of thinking) based on "but
it's already in there" is an argument for a compiler/language that's full of
first attempt code.

This is the danger of committing first and then soliciting ideas. There's
less "at stake" if the idea is chewed over before it's placed into the
actual codebase.

I'm quite concerned by the implications of what you seem to be suggesting.
Or am I totally missing the point of your sentence above?

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Fri Jan 12 11:26:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Fri Jan 12 11:26:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <20010112090821.U9113@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKGELLDIAA.ron@profit-master.com>

Dave,

> Ron, how many more times and in how many different ways do I have to say
> that I'm not talking about C files before you actually begin to understand
> that I'm not talking about C files?

You say that you not talking about C files. But, if your claim against the
hybrid, in RTL files is, that it will render such file less usable, and you
explain, less usable, as requiring a C compiler. It makes it absolutely
safe, to deduce, that you consider the requirement of C compiler on an RTL
file, as a hardship on usability.

I *know* that is not the case, but that is what one must conclude, based on
the generalizem of the argument.

I think I might understand the concern, but I don't wish you to think, I am
inventing motives for you. So I'll try to state it in a question:

Is it possible, that the concern is over, user x being misled to believe he
*could* use such file, (it being a .prg file), only to find it out that he
can't, because it requires C compiler?

I can't guess what your answer will be, but in the interest of saving time
I'll ask one more question, (incase you answer is yes):

Would not providing such file in PRG form, i.e. coding it all in C,
circumvent the problem of creating false expectations?

Ron


From harbour@lists.harbour-project.org  Fri Jan 12 12:18:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Fri Jan 12 12:18:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <200101120427_MC2-C179-2A92@compuserve.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCELMDIAA.ron@profit-master.com>

John,

> JS> (c) the syntax needs major changes
>
> "Like?"
>
> Either make it more like the ASM in C feature and allow much easier
> access to Harbour vars, or remove the current syntax.

1. I believe it has a fairly strait forward access to Harbour Vars (please
see tests/inline_c.prg)

2. If we can further simplify access to Harbour Vars, it should be a
suggestion for the extend and api systems, and not this feature, which
merely rely on the existing known such services.

3. Why should we conclude, that, without further(?) simplification of
variable access, we should not take advantage of such feature - especially
since so many believe they have use for it, even without further
simplification (which no one ever outlined)?

> In either case, add the syntax for inline C functions along one of
> the lines others have suggested.  Preferably also allow much easier
> access to Harbour vars with this, too.

1. These are 2 separate features, which are not mutually exclusive. There is
no need to remove one, in favor of the other. Both should be available.

2. Do you have any suggestion for such improvement?

> > 2. Mixing ASM in C often means you no longer need an assembler,
> > whereas the C in PRG has no such benefit.
>
> "Oh yes it does [have such benefit], I don't have a clue, (though I can
> learn, but why?) how to compile a C file, and how to link such compiled
> file, with my Harbour PRG file. I'd like to keep it that way please."
>
> I'm working on the basis that you're putting forward the idea that
> there may be people who "don't have a clue ... how to compile a C
> file" [I rather hope _you_ do!].  IAC, someone who doesn't know how
> to compile C really should not be _writing_ C.  And we'd be silly to
> lull them into any feeling otherwise.

You should not make any such assumption. I'm confident, there are numerous
great Clipper programmers, who never worked with C, that can very easily
start a very effective cut/paste/modify approach from being exposed to C
code. They might do very powerful things, using such feature and never once,
having run C compiler directly.

Until 1-2 years ago, I was in a similar condition, having programming
Clipper for years, but never coded in C. The only reason I now can code in
C, is that I was exposed to it by means of this project.

> "I could care less, if it is similar or different. This was not
> designed to
> replace inline ASM!!!"
>
> I never said it was.  Rather, I compared it to inline ASM in C.  Please
> re-read my messages if you really don't understand that.

Why compare, if it is not to serve some point of reference? You mentioned it
few times, in a context that suggests, it might serve as a model for our
expectations. I don't have any such expectations. I simply want to offer the
ability to have in-place C, capability inside Harbour PRG files.

> "Please let's back off, few steps."
>
> By all means.  Let's remove the current inline C and head for 0.36.
> Let's then add a better inline C, along the lines many have said (and
> I've said above).  Maybe that'll be 0.37.  However, I see no urgent
> need for such a feature.  It doesn't need to be in ever.

1. What to you is "better", to me, is just a natural alternative
complementing feature.
2. Please allow us all to have our own time priorities.

> "This does get tiring."
>
> Yes.  I'm trying to get a better Harbour, as I believe you are.  An
> inline C feature, but not the current one, looks attractive.

You are welcome to offer a better inline implementation. C Function or
#pragme, are not better implementation. They are a complementing feature
addressing a similar yet different issue.

> "I did provide detailed technical review of this feature. You are
> welcome to post detailed suggestions for improvements."
>
> See above.

Again, C FUNCTION and/or #pragma address a different issue. They are not
improvements, they are complements.

Try addressing the issue of in place C, please provide suggestion for
improvements of *this* specific feature, if you have any.

Ron


From harbour@lists.harbour-project.org  Fri Jan 12 13:26:01 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Fri Jan 12 13:26:01 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <3A5EBF74.262FCE26@libero.it>; from maurilio.longo@libero.it on Fri, Jan 12, 2001 at 09:25:24AM +0100
References: <NCBBJKNMIDPJNLJCHCHIOEHLFMAA.harbour@winfakt.com> <3A5EBF74.262FCE26@libero.it>
Message-ID: <20010112182521.H9113@hagbard.davep.org>

On Fri, Jan 12, 2001 at 09:25:24AM +0100, Maurilio Longo wrote:

> because of quality of written source code, readability, and maybe even
> portability of such code, or else we could have a single file file for the
> whole RTL with everything inside it.

Writing C code, inline with a PRG, shouldn't cause readability problems, no
more than having code written in Clipper and in C in separate files (indeed,
there's an argument to suggest that inline means that things are clearer
because related code is together, especially if the C code doesn't need to
be "world visible" at the identifier level).

It also doesn't follow that the whole RTL could be in one file. That's
taking this idea to an absurd conclusion.

Portability might, however, be an issue, that's something that a lot harder
to gauge.

I think the clearest argument for not using inline C for core RTL PRG files
is that using it requires /gc, which then requires a C compiler. Should /go,
or something similar, get to a fully working state (for any platform),
people shouldn't be locked out of being able to build the PRG files found in
the RTL for their own purposes.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Fri Jan 12 13:26:27 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Fri Jan 12 13:26:27 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKGELLDIAA.ron@profit-master.com>; from ron@profit-master.com on Fri, Jan 12, 2001 at 08:27:03AM -0800
References: <20010112090821.U9113@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKGELLDIAA.ron@profit-master.com>
Message-ID: <20010112181832.G9113@hagbard.davep.org>

On Fri, Jan 12, 2001 at 08:27:03AM -0800, Ron Pinkas wrote:
> Dave,
> 
> > Ron, how many more times and in how many different ways do I have to say
> > that I'm not talking about C files before you actually begin to understand
> > that I'm not talking about C files?
> 
> You say that you not talking about C files. But, if your claim against the
> hybrid, in RTL files is, that it will render such file less usable, and
> you explain, less usable, as requiring a C compiler. It makes it
> absolutely safe, to deduce, that you consider the requirement of C
> compiler on an RTL file, as a hardship on usability.

Ok, I can see why you'd see that as a reasonable deduction. Take it from me,
that isn't how I see things and such a deduction is plain wrong. 

> I *know* that is not the case, but that is what one must conclude, based
> on the generalizem of the argument.

"Must" conclude? In spite of the evidence that says otherwise? Please don't
ask me to take responsibility for a position I don't hold. You're comparing
apples with oranges, deciding that you've come to a logical conclusion and
they saying that you're compelled to take that conclusion as my point of
view.

Trust me, it isn't my point of view at all. It has nothing at all to do with
anything I've written or said. Never once have I ever said that the
requirement of a C compiler to build the whole of the RTL is a hardship.
Indeed, I've said time and again that this isn't what I'm saying. Please
stop trying to get me to be responsible for this point of view.

There's a chance you might actually grok what I'm getting at if you stop
concentrating on something that I'm not suggesting and then asking me to
defend that position.

> Is it possible, that the concern is over, user x being misled to believe
> he *could* use such file, (it being a .prg file), only to find it out that
> he can't, because it requires C compiler?

No, the concerns are the ones that I've written time and again. They're also
the concerns that other people have written too.

> Would not providing such file in PRG form, i.e. coding it all in C,
> circumvent the problem of creating false expectations?

Recoding a whole file in C would obviously remove said file from the sphere
of my concern. I believe I've already said this before.

Lets see if I can put this in three simple points:

o The issue is PRG files in the RTL, nothing else.

o There is a technical issue, best expressed in relation the fact that there
  is no good reason why, in future, people will be able to build harbour code
  without the aid of a C compiler.

o There is a philosophical issue, best expressed in relation to the issues
  of free software and ensuring the maximum freedom to build the code,
  either with harbour or with other Clipper-a-like compilers.

The above is not the sum total of what I'm saying but I'm hoping that it's a
reasonable and unambiguous outline of what I've written elsewhere. Hopefully
you won't read anything into the above that isn't actually written above.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Fri Jan 12 13:32:02 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Fri Jan 12 13:32:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKEELKDIAA.ron@profit-master.com>
References: <3A5ED40B.25199.288FBDF@localhost>
Message-ID: <3A5F5CCC.7571.13EC31E@localhost>

On 12 Jan 2001, at 7:55, Ron Pinkas wrote:

> Quick question, in your opinion, could we use the #pragma approach on an RTL
> PRG?

  We shouldn't use inlined C code inside the core harbour (including RTL) 
regardless of the syntax.

Regards, Ryszard

From harbour@lists.harbour-project.org  Fri Jan 12 13:36:02 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Fri Jan 12 13:36:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKIELCDIAA.ron@profit-master.com>
References: <200101120202.f0C22re29521@thor.parrett.net>
Message-ID: <200101121835.f0CIZaN23983@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Thu,
11 Jan 2001 19:00:28 -0800

> Just a simple question: How would that be any different if such file was
> coded exclusively in C?

The difference is that if the file is written as a C source module,
than a Harbour user does not have any expectation that he should be able
to compile the file using just Harbour.

> Is it not more appropriate to suggest, that only specific RTL files, based
> on some criteria, deserve such PRG protection?

No. I think that the RTL both needs and deserves protection from inline
C for those Harbour users who are never, ever going to use a C compiler.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Fri Jan 12 13:53:02 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Fri Jan 12 13:53:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <NCBBJKNMIDPJNLJCHCHIOEHLFMAA.harbour@winfakt.com>
References: <3A5EBC92.7684.22D4A3C@localhost>
Message-ID: <200101121851.f0CIpxN25325@thor.parrett.net>

** Reply to message from "Patrick Mast" <harbour@winfakt.com> on Fri,
12 Jan 2001 09:02:42 +0100

> If "Inline C" help's a developer making Harbour Core files, why should
> he/she NOT do that??

Because it disrupts a Harbour user's expectation that he should be able
to compile any RTL .PRG files using just Harbour. If somebody wants to
write (or rewrite) parts of an RTL .PRG file in C, then that person
should do it the right way and split the C code out into a separate C
file.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Fri Jan 12 13:54:03 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Fri Jan 12 13:54:03 2001
Subject: [Harbour] My opinion about the Harbour project.
Message-ID: <200101121353_MC2-C194-58A5@compuserve.com>

Ron,

JS> Either make it more like the ASM in C feature and allow much easier
JS> access to Harbour vars, or remove the current syntax.

"I believe it has a fairly strait forward access to Harbour Vars (please
see tests/inline_c.prg)"

I disagree.

"If we can further simplify access to Harbour Vars, it should be a
suggestion for the extend and api systems, and not this feature, which
merely rely on the existing known such services."

That does not follow.

"Why should we conclude, that, without further(?) simplification of
variable access, we should not take advantage of such feature"

Because now it's not especially useful yet does have all manner of
strange semantics.

I repeat: we need something better or I think it should be removed by
default and only included if someone specifically builds Harbour with
it in.  That should please nearly everyone.

"especially since so many believe they have use for it, even without
further simplification"

Who are these "so many"?  I see many who think the opposite, but only
few in favour of HB_INLINE.  Mainly you.  Possibly Phil.  That's two,
which is not my idea of "many".

JS> In either case, add the syntax for inline C functions along one of
JS> the lines others have suggested.  Preferably also allow much easier
JS> access to Harbour vars with this, too.

"These are 2 separate features, which are not mutually exclusive. There i=
s
no need to remove one, in favor of the other. Both should be available."

I do not agree that both should be available, but what I've said is
that if inline C is to be available then I think it should be better
than it now is.  And I'd very much like the current one disabled by
default.

"Do you have any suggestion for such improvement?"

I see people still exploring the issues.  It's too soon to make
specific suggestions.

> > 2. Mixing ASM in C often means you no longer need an assembler,
> > whereas the C in PRG has no such benefit.
>
> "Oh yes it does [have such benefit], I don't have a clue, (though I can=

> learn, but why?) how to compile a C file, and how to link such compiled=

> file, with my Harbour PRG file. I'd like to keep it that way please."
>
> I'm working on the basis that you're putting forward the idea that
> there may be people who "don't have a clue ... how to compile a C
> file" [I rather hope _you_ do!].  IAC, someone who doesn't know how
> to compile C really should not be _writing_ C.  And we'd be silly to
> lull them into any feeling otherwise.

"You should not make any such assumption."

It's not an assumption.  It's a recommendation based on long years
of seeing lousy C.  Please let's not make it easy to get lousy C into
Harbour itself.  Disabling HB_INLINE by default should help avoid that.

"I'm confident, there are numerous great Clipper programmers, who
never worked with C, that can very easily start a very effective
cut/paste/modify approach from being exposed to C code."

I'm confident there would be a _few_ and only a few.

"They might do very powerful things, using such feature and never once,
having run C compiler directly."

Might.  Let's worry about the vastly larger number who'll make a
complete mess, i.e. let's have HB_INLINE an option that's out by
default.

"Until 1-2 years ago, I was in a similar condition, having programming
Clipper for years, but never coded in C. The only reason I now can code i=
n
C, is that I was exposed to it by means of this project."

Fine.  One swallow does (doth?) not a summer make.

JS> "I could care less, if it is similar or different. This was not
JS> designed to
JS> replace inline ASM!!!"
JS>
JS> I never said it was.  Rather, I compared it to inline ASM in C.  Plea=
se
JS> re-read my messages if you really don't understand that.

"Why compare, if it is not to serve some point of reference?"

That's what I did.  Note that I did _not_ suggest it was to replace
inline ASM.  That's something only you introduced.

"You mentioned it few times, in a context that suggests, it might serve
as a model for our expectations."

Learning from the implementation ideas of inline ASM in C looks like
a good idea to me.

"I don't have any such expectations. I simply want to offer the
ability to have in-place C, capability inside Harbour PRG files."

Yes, but it looks to me like you're in a small minority as regards
HB_INLINE.

JS> "Please let's back off, few steps."
JS>
JS> By all means.  Let's remove the current inline C and head for 0.36.
JS> Let's then add a better inline C, along the lines many have said (and=

JS> I've said above).  Maybe that'll be 0.37.  However, I see no urgent
JS> need for such a feature.  It doesn't need to be in ever.

"What to you is "better", to me, is just a natural alternative
complementing feature."

OK.

"Please allow us all to have our own time priorities."

I don't see that I said otherwise.  However, _you_ appear to be
virtually forcing HB_INLINE on me and others.  I can't speak for them
but _I_ don't believe it's a good feature as it now is and I've said
what I think should happen.

JS> "This does get tiring."
JS>
JS> Yes.  I'm trying to get a better Harbour, as I believe you are.  An
JS> inline C feature, but not the current one, looks attractive.

"You are welcome to offer a better inline implementation."

I hope I'm welcome to have opinions and a vote about the future of
HB_INLINE.

"C Function or #pragme, are not better implementation."

Without them being properly discussed, you can't justify that.

"They are a complementing feature addressing a similar yet different
issue."

Very possibly.  But possibly not.

JS> "I did provide detailed technical review of this feature. You are
JS> welcome to post detailed suggestions for improvements."
JS>
JS> See above.

"Again, C FUNCTION and/or #pragma address a different issue. They are not=

improvements, they are complements."

Same comments as before.

"Try addressing the issue of in place C"

I have done so extensively.

"please provide suggestion for improvements of *this* specific feature,
if you have any."

See above.

Frankly, this non-essential (for Clipper compatibility) feature has
now caused so much traffic, mostly about its shortcomings, that I
can't see why you persist in being so much in favour of it.

John.

From harbour@lists.harbour-project.org  Fri Jan 12 14:06:01 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Fri Jan 12 14:06:01 2001
Subject: [Harbour] What is the *point* of inline C anyway?
Message-ID: <200101121905.f0CJ53N26456@thor.parrett.net>

Other than circumventing the dictates of proper modular programming? It
sure doesn't lend itself to code resuability or code portability!

With inline assembler in C, there was actually a performance increase
from using inline ASM over using an external .ASM module, because the
overhead of a function call was eliminated. But this is not the case
with inline C as currently implemented for Harbour.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Fri Jan 12 15:54:02 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Fri Jan 12 15:54:02 2001
Subject: [Harbour] My opinion about the Harbour project.
References: <20010111232043.E9113@hagbard.davep.org> <3A5EBC92.7684.22D4A3C@localhost>
Message-ID: <000901c07cd9$bc4415e0$0100007f@sl.conex.net>

Dear Friends

>   There are no clear benefits and there are some drawbacks expressed by
> Dave (I agree with them) which suggest disallowing of inlining of C code
> in PRG file inside core harbour code.
>   I think that suppressing inline C in the core harbour code should be a
> new coding style rule that should be followed by all harbour developers.
> Do we need to vote for it?
I agree with you in this. I think that the core of the RTL , all the INLINE
C code should be disabled

Regards

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Fri Jan 12 16:21:02 2001
From: harbour@lists.harbour-project.org (Patrick Mast)
Date: Fri Jan 12 16:21:02 2001
Subject: [Harbour] INLINE C Synopsis (version 1.1)
In-Reply-To: <20010112094154.Y9113@hagbard.davep.org>
Message-ID: <NCBBJKNMIDPJNLJCHCHIAEIKFMAA.harbour@winfakt.com>

> > Conclusion:
> > -----------
> > 1. I recommend, we keep current specifications for INLINE c support.
Vote: Yes
 
> > 2. I recommend we add C FUNCTION support. I suggest the syntax 
> should be:
> > [STATIC] C FUNCTION Identifier()
> > {...}
Vote: Yes

regards,

Patrick Mast
www.Patrick.Be.kz


From harbour@lists.harbour-project.org  Fri Jan 12 16:30:03 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Fri Jan 12 16:30:03 2001
Subject: [Harbour] INLINE C Synopsis (version 1.1)
In-Reply-To: <NCBBJKNMIDPJNLJCHCHIAEIKFMAA.harbour@winfakt.com>
References: <20010112094154.Y9113@hagbard.davep.org>
Message-ID: <200101122129.f0CLTHN05535@thor.parrett.net>

** Reply to message from "Patrick Mast" <harbour@winfakt.com> on Fri,
12 Jan 2001 22:20:41 +0100

> > > Conclusion:
> > > -----------
> > > 1. I recommend, we keep current specifications for INLINE c support.

Vote: No

>  
> > > 2. I recommend we add C FUNCTION support. I suggest the syntax 
> > should be:
> > > [STATIC] C FUNCTION Identifier()
> > > {...}

Vote: No
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Fri Jan 12 22:11:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Fri Jan 12 22:11:02 2001
Subject: [Harbour] What is the *point* of inline C anyway?
In-Reply-To: <200101121905.f0CJ53N26456@thor.parrett.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEMADIAA.ron@profit-master.com>

David,

> Other than circumventing the dictates of proper modular programming? It
> sure doesn't lend itself to code reusability or code portability!

1. Do you know of any reason why, anyone couldn't reuse a function like the
inlined aTokens()?

2. Do you know of any platform on which Harbour runs, yet an inlined
function like aTokens() will introduce any portability problem?

> With inline assembler in C, there was actually a performance increase
> from using inline ASM over using an external .ASM module, because the
> overhead of a function call was eliminated. But this is not the case
> with inline C as currently implemented for Harbour.

No one ever claimed any performance increase over an external C module.

Ron


From harbour@lists.harbour-project.org  Sat Jan 13 00:51:02 2001
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Sat Jan 13 00:51:02 2001
Subject: [Harbour] Inline C
In-Reply-To: <20010112155341.W9113@hagbard.davep.org>
References: <3A5ECBD9.7800.1D140D90@localhost>; from midnight@the-oasis.net on Fri, Jan 12, 2001 at 09:18:17AM -0500
Message-ID: <3A5FA65E.30171.2069ADD0@localhost>

On 12 Jan 2001, at 15:53, Dave Pearson wrote:

> I'm quite concerned by the implications of what you seem to be suggesting.
> Or am I totally missing the point of your sentence above?

Well, I'm somewhat concerned with some of your arguments as 
well. The entire point of open source and The Cathedral and The 
Bazaar method is that programmers will come and scratch their 
itch. That is how code arrives at our doorstep. Saying that a 
participant can't do that is somewhat unproductive unless you can 
point to some specific reason that it breaks something we have.

What Ron has added doesn't break anything or pollute anything. It 
does nothing at all unless you choose to use it.

Should we make a rule that it isn't to be used on Harbour code 
itself, so be it, but to act in defiance of it is kinda like blaming the 
knife for the murder instead of the perp.

There is not even a good reason to turn it off by default. It does 
nothing unless a programmer uses it. It changes nothing, it 
performs nothing, it effects nothing, defaulted to on or off, unless a 
programmer chooses to use it.


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Sat Jan 13 00:51:24 2001
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Sat Jan 13 00:51:24 2001
Subject: [Harbour] Inline C
In-Reply-To: <200101120949_MC2-C191-F041@compuserve.com>
Message-ID: <3A5FA65E.6203.2069AE0C@localhost>

On 12 Jan 2001, at 9:49, John Skelton wrote:

> Phil,
> 
> "My point being that many of you have voted to remove it from Harbour"
> 
> Most people's point has been to get a better way to include C.
> Wouldn't you rather use that?  Are you in such a hurry to use C in PRG
> that you'd rather have the current HB_INLINE than something better
> and agreed?

Not particularly. But it makes more sense to remove it when there 
is something better. We have no idea what door it might open. We 
can speculate, but that is all. I mean, how many times have you 
looked at code and said to yourself, "Gee, I never thought of using 
it that way."?
 
> If the current way is to stay, I'd like to see a Harbour project build
> option to enable it, default DISABLED.  That'll allow those who like
> the current HB_INLINE to use it in their own code, and the rest of us
> to be sure such code isn't creeping into Harbour itself.  Then we can
> get on with designing a better C feature.

I have no problem with that method. It just seems somewhat 
cavalier to toss it away completely when it has no effect on 
anything unless someone decides to actually use it.

Everything here is experimental. Anything could change very much 
at any time. Anyone commiting permanent code that requires 
things to stay as they are now is making a big mistake. Throwing 
away ideas before we have a chance to know what they really 
mean is also a mistake. Sure, maybe there is something better on 
the horizon. But it's not here now. So, when we speak of a rosy 
future for how Harbour ought to be and sacrifice something that is 
here working now, I feel that is shortsighted in itself.

Open source develops because someone has an itch to scratch. 
Saying Ron doesn't have a right to scratch his itch is 
counterproductive.


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Sat Jan 13 02:30:04 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Sat Jan 13 02:30:04 2001
Subject: [Harbour] Inline C
In-Reply-To: <3A5FA65E.6203.2069AE0C@localhost>; from midnight@the-oasis.net on Sat, Jan 13, 2001 at 12:50:38AM -0500
References: <200101120949_MC2-C191-F041@compuserve.com> <3A5FA65E.6203.2069AE0C@localhost>
Message-ID: <20010113071040.N9113@hagbard.davep.org>

On Sat, Jan 13, 2001 at 12:50:38AM -0500, Phil Barnett wrote:

> Open source develops because someone has an itch to scratch. Saying Ron
> doesn't have a right to scratch his itch is counterproductive.

Portraying feedback that Ron has requested this way is counterproductive and
plain wrong. Show me one instance of someone telling Ron that his right to
scratch an itch has been removed.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Sat Jan 13 02:30:25 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Sat Jan 13 02:30:25 2001
Subject: [Harbour] Inline C
In-Reply-To: <3A5FA65E.30171.2069ADD0@localhost>; from midnight@the-oasis.net on Sat, Jan 13, 2001 at 12:50:38AM -0500
References: <3A5ECBD9.7800.1D140D90@localhost>; <20010112155341.W9113@hagbard.davep.org> <3A5FA65E.30171.2069ADD0@localhost>
Message-ID: <20010113070843.M9113@hagbard.davep.org>

On Sat, Jan 13, 2001 at 12:50:38AM -0500, Phil Barnett wrote:
> On 12 Jan 2001, at 15:53, Dave Pearson wrote:
> 
> > I'm quite concerned by the implications of what you seem to be
> > suggesting. Or am I totally missing the point of your sentence above?
> 
> Well, I'm somewhat concerned with some of your arguments as well. The
> entire point of open source and The Cathedral and The Bazaar method is
> that programmers will come and scratch their itch. That is how code
> arrives at our doorstep. Saying that a participant can't do that is
> somewhat unproductive unless you can point to some specific reason that it
> breaks something we have.

Agreed, this is the process that has been happening, people have been
raising concerns regarding what Ron has offered.

> What Ron has added doesn't break anything or pollute anything. It does
> nothing at all unless you choose to use it.

[That's currently a matter of opinion, I thought we were still in the "test
this idea" phase that Ron requested, but.....] The design leaves something
to be desired compared to the aim, I'm not the only one to point this out.
There are also some technical niggles that need addressing but so far have
gone unanswered. That's obviously going to be a cause for concern.

Invoking CatB to counter the effect that Ron says he actually wants (open
and honest feedback about the ideas and the code) because of the method he
seems to prefer to explain his ideas (drop them into CVS and see what
happens) actually seems to go against Ron's desires. Moreover, CatB isn't a
manifesto for dropping any feature into a community project and having it
stay there just because "it won't affect anyone else if they don't use it".

I was really hoping that the design philosophy of the harbour project wasn't
heading down the route where "my code's in CVS, see what you think" then
translates into "why should it be taken out, do you have better code?" when
the desired and solicited critical feedback turns out to be less than
positive. If nothing else this actually stifles any feedback that suggests
that either a) the current design has flaws but no new design is forthcoming
(a new design needn't be forthcoming because that presupposes that the
feature itself is now required) or b) the whole idea of the feature is
flawed and it shouldn't be part of the project at all.

Stifling such feedback isn't healthy.

Scratching an itch should not and must not translate into a call to allow
anyone to add anything to harbour as long as it doesn't interfere with the
normal operation, no matter the nature of the feedback received. To do
otherwise is the road to chaos, it's the road that leads to the often made
observation that any non-trivial application will grow until it includes an
NNTP client (your turn John, I can't find the actual quote I'm thinking of
<g>). I doubt that the harbour compiler will include an NNTP client, but the
criteria you give for considering a feature suggests it would be fine to add
one.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Sat Jan 13 02:42:02 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Sat Jan 13 02:42:02 2001
Subject: [Harbour] My opinion about the Harbour project.
References: <200101121353_MC2-C194-58A5@compuserve.com>
Message-ID: <00e101c07d35$0547bca0$921a5e18@bh>

John:

You've made many good points, but I don't think this is fair to say:
>>Who are these "so many"?  I see many who think the opposite, but only
>>few in favour of HB_INLINE.  Mainly you.  Possibly Phil.  That's two,
>>which is not my idea of "many".

As carefully as you've read so many of these messages, I find it hard to
believe you didn't notice the several msgs, especially early on, with
positive comments about Ron's innovation.

To All:
I for one would like to see it happen.
And I don't feel the rhetorical label of "premature optimization" is
reasonable at all.  There is a lot of code in Harbour that could be
optimized right now to all our benefit.  Some types of optimization can
create problems down the road, some don't.

Is there a standing rule that no one can yet optimize any loops in Harbour
code?

If the specification is lacking detail, why can't we spend all the energy
constructively refining an acceptable spec?  I think the first vote, to
clear the air, should be real simple:

Should we endorse continued development and refinement of Inline C code in
Harbour ?

I would hope and do expect that a vast majority would say yes.

I, too, have some reservations regarding the current state of things.
Mostly I would rather not have a push toward a true beta release delayed by
this.  But I think the better path is one of evolution rather than
restriction.

Brian




From harbour@lists.harbour-project.org  Sat Jan 13 02:57:02 2001
From: harbour@lists.harbour-project.org (Patrick Mast)
Date: Sat Jan 13 02:57:02 2001
Subject: [Harbour] Inline C
In-Reply-To: <3A5FA65E.30171.2069ADD0@localhost>
Message-ID: <NCBBJKNMIDPJNLJCHCHIKEILFMAA.harbour@winfakt.com>

I agree with Phil.
If you don't want to use it, don't...
It does not polute anything.

If it benefits building Harbour, if it can make a faster, better Harbour,
why not use it???

regards,

Patrick Mast
www.Patrick.Be.kz



> > I'm quite concerned by the implications of what you seem to be
> suggesting.
> > Or am I totally missing the point of your sentence above?
>
> Well, I'm somewhat concerned with some of your arguments as
> well. The entire point of open source and The Cathedral and The
> Bazaar method is that programmers will come and scratch their
> itch. That is how code arrives at our doorstep. Saying that a
> participant can't do that is somewhat unproductive unless you can
> point to some specific reason that it breaks something we have.
>
> What Ron has added doesn't break anything or pollute anything. It
> does nothing at all unless you choose to use it.
>
> Should we make a rule that it isn't to be used on Harbour code
> itself, so be it, but to act in defiance of it is kinda like blaming the
> knife for the murder instead of the perp.
>
> There is not even a good reason to turn it off by default. It does
> nothing unless a programmer uses it. It changes nothing, it
> performs nothing, it effects nothing, defaulted to on or off, unless a
> programmer chooses to use it.
>
>
> --
>               Phil Barnett  mailto:midnight@the-oasis.net
>                        WWW  http://www.the-oasis.net/
>                   FTP Site  ftp://ftp.the-oasis.net
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>
>


From harbour@lists.harbour-project.org  Sat Jan 13 03:18:03 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Sat Jan 13 03:18:03 2001
Subject: [Harbour] Inline C
In-Reply-To: <NCBBJKNMIDPJNLJCHCHIKEILFMAA.harbour@winfakt.com>; from harbour@winfakt.com on Sat, Jan 13, 2001 at 08:56:13AM +0100
References: <3A5FA65E.30171.2069ADD0@localhost> <NCBBJKNMIDPJNLJCHCHIKEILFMAA.harbour@winfakt.com>
Message-ID: <20010113081757.S9113@hagbard.davep.org>

On Sat, Jan 13, 2001 at 08:56:13AM +0100, Patrick Mast wrote:

> I agree with Phil.
> If you don't want to use it, don't...
> It does not polute anything.
> 
> If it benefits building Harbour, if it can make a faster, better Harbour,
> why not use it???

I think you'll find that these are the questions that are in the process of
being asked and answered. The question isn't the answer.

Curiously neither you or Phil seem to agree with Ron as Ron seems very much
of the opinion that the code has been presented for review and feedback, not
as a complete solution whose ongoing existence is a given.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Sat Jan 13 03:32:02 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Sat Jan 13 03:32:02 2001
Subject: [Harbour] Re: My opinion about the Harbour project.
Message-ID: <001901c07d3b$fc97c080$921a5e18@bh>

Ryszard:
You were right, with the latest changes I no longer have a problem calling
ListBox() from a macro.
Unfortunately, I now have another one: GetText() can be called directly, but
not via a macro.  This one is worse because I cannot find a workaround.  For
ListBox, as long as I forced a direct call to it in the main
function/firstPRG it worked right (I no longer need to do that).  But
GetText() won't work from a macro in the big app no matter what I do.
AArrggh!!


>             // New added line !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
>             pDynSym->pSymbol = pSymbol;
>             // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

  Great! This will finally cure Brian's problems with LOOKUP function
called from macro :)


Brian Hays
Abacus Data Systems, Inc.



From harbour@lists.harbour-project.org  Sat Jan 13 03:37:01 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sat Jan 13 03:37:01 2001
Subject: [Harbour] Inline C
In-Reply-To: <20010113081757.S9113@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKKEMBDIAA.ron@profit-master.com>

Dave,

Minor clarification: I'm of the opinion that the *syntax* has been presented
for review and feedback.

The logic of the working code, is very much separated from the syntax, so as
to allow very responsive, and easy changes, at the syntax level.

I'm confident the code (backbone) is ready for beta release. I'm also
confident, the feature is desired by the majority. I personally believe the
syntax itself is ready for beta, but indeed presented it here for review.

Ron

> Curiously neither you or Phil seem to agree with Ron as Ron seems
> very much
> of the opinion that the code has been presented for review and
> feedback, not
> as a complete solution whose ongoing existence is a given.


From harbour@lists.harbour-project.org  Sat Jan 13 04:00:04 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Sat Jan 13 04:00:04 2001
Subject: [Harbour] Inline C
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKKEMBDIAA.ron@profit-master.com>; from ron@profit-master.com on Sat, Jan 13, 2001 at 12:37:33AM -0800
References: <20010113081757.S9113@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKKEMBDIAA.ron@profit-master.com>
Message-ID: <20010113085854.T9113@hagbard.davep.org>

On Sat, Jan 13, 2001 at 12:37:33AM -0800, Ron Pinkas wrote:

> Minor clarification: I'm of the opinion that the *syntax* has been
> presented for review and feedback.

My apologies, I thought it was also floated to see if there was any interest
in the feature at all as well as to get feedback on the method of
implementation. I hadn't realised that it had been submitted with the
intention that it would, without question, become part of harbour.

There was a time in harbour's past where someone with a new idea would float
the idea first and get feedback. I thought that dropping a new feature into
CVS and *then* asking about it was your method of doing this. I guess I'm
used to the idea of people speaking to the community before they erect
something brand new and unexpected in the area.

> I'm confident the code (backbone) is ready for beta release. 

What about some of the technical issues that have been raised? I've still
got a couple of outstanding questions kicking about. See:

<20010111194638.A9113@hagbard.davep.org>
<20010111180035.V9113@hagbard.davep.org>
<20010111095830.T9113@hagbard.davep.org>

and I think the issue that more than one person has raised, that the
"inline" part (as in, C code in a function body) of this doesn't seem to
quite make sense (at least not while the code can be totally detached from
the place it's supposed to be called, recall that you said it is evaluated
"in place" but this isn't actually the case), hasn't been fully addressed.

At the very least I would have thought that you'd summarise the feedback
you'd received so far, both technical and philosophical, document your
current understand of these issues and your POV regarding them, publish this
and allow for any corrections and then decide what state the code is really
in.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Sat Jan 13 05:11:01 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sat Jan 13 05:11:01 2001
Subject: [Harbour] Inline C
In-Reply-To: <20010113085854.T9113@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKIEMCDIAA.ron@profit-master.com>

Dave,

> > Minor clarification: I'm of the opinion that the *syntax* has been
> > presented for review and feedback.
>
> My apologies, I thought it was also floated to see if there was
> any interest
> in the feature at all as well as to get feedback on the method of
> implementation. I hadn't realised that it had been submitted with the
> intention that it would, without question, become part of harbour.

I've never said "it would, without question, become part of harbour". I
could of course ask that you will not invent motives for me (humor), but
seriously, I never said that. I did say "I'm confident the feature is
desired by the majority". I also said that I'll remove it if requested.

> There was a time in harbour's past where someone with a new idea
> would float
> the idea first and get feedback. I thought that dropping a new
> feature into
> CVS and *then* asking about it was your method of doing this. I guess I'm
> used to the idea of people speaking to the community before they erect
> something brand new and unexpected in the area.

Most contributed code is not floated as an idea first, to get feedback. It
seems that such "floating" is highly related to: the scope of the change,
it's possible impact on existing code, its possible impact on stability,
prior Harbour posting experience, etc., etc..

> > I'm confident the code (backbone) is ready for beta release.
>
> What about some of the technical issues that have been raised? I've still
> got a couple of outstanding questions kicking about. See:
>
> <20010111194638.A9113@hagbard.davep.org>
> <20010111180035.V9113@hagbard.davep.org>
> <20010111095830.T9113@hagbard.davep.org>

Dave, please excuse my request, but I don't have a clue as to what would any
of the above references represent. When I point someone to info that might
be of interest to them, I either quote it verbatim, or provide a function
link to such info. Could you kindly point me  to the info about the
technical problems you refer to? The only technical issue I can recall is
with double space in PPO. If this is indeed what you refer to, rest assure
it will be addressed. I hope you don't consider such, a release stopper do
you?

> and I think the issue that more than one person has raised, that the
> "inline" part (as in, C code in a function body) of this doesn't seem to
> quite make sense (at least not while the code can be totally detached from
> the place it's supposed to be called, recall that you said it is evaluated
> "in place" but this isn't actually the case), hasn't been fully addressed.

1. At least as many people found it does make sense.
2. I don't follow your claim. It is evaluated "in place" and the place
holder is the HB_INLINE() declarator.

> At the very least I would have thought that you'd summarise the feedback
> you'd received so far, both technical and philosophical, document your
> current understand of these issues and your POV regarding them,
> publish this
> and allow for any corrections and then decide what state the code
> is really
> in.

I've attempted twice already, and will continue doing so. It will have to
wait to next week, as I'll be out of town the next few days.

Ron


From harbour@lists.harbour-project.org  Sat Jan 13 05:35:03 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sat Jan 13 05:35:03 2001
Subject: [Harbour] Inline C
In-Reply-To: <20010113085854.T9113@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEMDDIAA.ron@profit-master.com>

> and I think the issue that more than one person has raised, that the
> "inline" part (as in, C code in a function body) of this doesn't seem to
> quite make sense (at least not while the code can be totally detached from
> the place it's supposed to be called, recall that you said it is evaluated
> "in place" but this isn't actually the case), hasn't been fully addressed.

BTW, interesting that none of the input, suggested an alternate syntax. I
did (and still do) consider few other alternatives. For example:

cVar := |{ hb_retc( "I'm an inline c Block" ); |} + "Is it inline now"?

The only reason I didn't went with such, is that I didn't want to introduce
new lexical tokens, without prior consideration of the group. It was much
"cleaner", for me to introduce the feature, with the smallest amount of
impact, but it might be of interest...

I mean we could use some other tokens for start and end of C block, like
{ and |}. Assuming I'm not wrong in believing that |} is *not* a valid
syntax in c???

The current backbone can easily cope with such change.

I would like to get some input from those that are interested in the
availability of the feature.

Ron


From harbour@lists.harbour-project.org  Sat Jan 13 05:40:03 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sat Jan 13 05:40:03 2001
Subject: [Harbour] ChangeLog 2001-01-13 02:25 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKIEMCDIAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKKEMDDIAA.ron@profit-master.com>

2001-01-13 02:25 UTC-0800 Ron Pinkas <ron@profit-master.com>
   * source/compiler/genc.c
   * source/compiler/harbour.c
   * source/pp/pragma.c
     + Added support for #pragma BEGINDUMP ... [#pragma STOPDUMP] or EOF.
       /* BEGINDUMP & STOPDUMP are just a suggestion. */

   * utils/hbpp/hbpp.c
   * source/pp/pplib.c
     + Added empty stub hb_compInlineAdd() (needed by pragma.c)

   * tests/inline_c.prg
     + Added code to demonstrate #pragam BEGINDUMP

I didn't take formal count, but it was my impression that more of the input
was leaning toward this syntax. I would like to add, that we do not *have*
to opt for one over the over. If the group sees benefit in having both
approaches, I can also add:

[STATIC] C FUNCTION()

At practically no cost.

Ron



From harbour@lists.harbour-project.org  Sat Jan 13 08:17:02 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Sat Jan 13 08:17:02 2001
Subject: [Harbour] Inline C
Message-ID: <200101130815_MC2-C1A8-1389@compuserve.com>

Ron,

"interesting that none of the input, suggested an alternate syntax"

I'd not even realised that suggesting syntax was an option.  I thought
anyone with suggestions had to implement them, too.

I think a better syntax for what you have now would be:
HB_CALL_C( <PossiblyEmptyParamList> ) { <CStatementList> }

because it's not so much inline as a function call.  Maybe
HB_CALL_INLINE_C would be a better name, but it's getting long.

I'd still like it disabled by default. <g>

> cVar :=3D |{ hb_retc( "I'm an inline c Block" ); |} + "Is it inline now=
"?

Maybe, but I think these are the things that would make embedded C
more usable:
1. a way to pass params in & out (i.e. assuming passed in using @)
2. (highly desired but not essential) easier access to variables
3. a way to declare C file-wide statics (as well as statics within
functions), structs, and typedefs

"Assuming I'm not wrong in believing that |} is *not* a valid
syntax in c???"

I can't think of any way to make it valid even in obfuscated C. :-)

I'm not sure about C++, which is used with at least the VC Harbour
build.  Anyone know ANSI/ISO C++ well?

Er... you may be able to detect ;|} which looks safe(r).  OTOH that
probably causes hassles if there are intervening comments and/or
white space.

I can't say I'm a fan of the |{ ... |} idea, as it looks a bit too
much like a code block.  Finding others double-char (digraph?)
sequences looks tough, though.

John.

From harbour@lists.harbour-project.org  Sat Jan 13 08:17:24 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Sat Jan 13 08:17:24 2001
Subject: [Harbour] Inline C
Message-ID: <200101130815_MC2-C1A8-138B@compuserve.com>

Phil,

"There is not even a good reason to turn it off by default."

If it's on, it increases the chance that someone will use it in the
RTL.  Very possibly without realising they shouldn't and why.

GETSYS, ERRORSYS, etc would "clearly" be more "efficient" in C. :-(

There are rather more PRG files to worry about than were included as
source with Clipper, and I include those, too.  OOP stuff, etc.  Some
of it is not exactly easy to understand now.  In C it would be far
harder (much as I like C).  It would also rule out a lot of developers.

John.

From harbour@lists.harbour-project.org  Sat Jan 13 08:18:08 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Sat Jan 13 08:18:08 2001
Subject: [Harbour] Inline C
Message-ID: <200101130815_MC2-C1A8-138D@compuserve.com>

Dave,

"often made observation that any non-trivial application will grow
until it includes an NNTP client (your turn John, ..."

Sorry.  I've seen (and said) similar things "forever" but can't pin
that one down.

John.

From harbour@lists.harbour-project.org  Sat Jan 13 08:18:48 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Sat Jan 13 08:18:48 2001
Subject: [Harbour] Inline C
Message-ID: <200101130815_MC2-C1A8-138A@compuserve.com>

Ron,

"I'm confident the code (backbone) is ready for beta release. I'm also
confident, the feature is desired by the majority."

I don't share your confidence.

"I personally believe the syntax itself is ready for beta"

By now you know I don't think so.  However, I have no objection to
the syntax etc - no matter what it may be like - provided it's not
on by default, and thus is guaranteed not to be allowed to creep into
the RTL or standard PRG files.

I'll try to clarify.
I'm trying to vote for Harbour's good: I think the syntax and semantics
are poor.  Voting for my personal good: I'll not use it.  I've no wish
at all to prevent others using it (except in the parts mentioned).

John.

From harbour@lists.harbour-project.org  Sat Jan 13 08:19:30 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Sat Jan 13 08:19:30 2001
Subject: [Harbour] My opinion about the Harbour project.
Message-ID: <200101130815_MC2-C1A8-138C@compuserve.com>

Brian,

"I find it hard to believe you didn't notice the several msgs,
especially early on, with positive comments about Ron's innovation."

I do recall some early ones which looked more the knee-jerk "cool
feature" type than reasoned praise or criticism.  I'd be pleased if
those people would now join in with reasoned responses.

"Is there a standing rule that no one can yet optimize any loops in Harbo=
ur
code?"

I don't believe so.  I wouldn't vote for it, either.

"If the specification is lacking detail, why can't we spend all the energ=
y
constructively refining an acceptable spec?"

1. I have other things to do than spend what is already too much time
on a feature that's not needed, let alone needed in this form, let
alone now.
2. There are so many things of more importance.  I don't even have
enough time for them. :-(  NTX, CDX.
3. I'd far rather spend time adapting C4W more to Harbour.  I still
have the new GETSYS to adapt to, for example.  (A joke right now, as
recently I can't get the VC simplex build to compile.  Flex is next
to try.)

"Should we endorse continued development and refinement of Inline C code =
in
Harbour ?"

If it's disabled by default, so it definitely cannot spread to RTL,
I've no objection.  That's a "don't care" vote, rather than "yes".
Change it to "no" if it's going to be enabled by default. :-(

"Mostly I would rather not have a push toward a true beta release delayed=
 by
this."

Wow!  Me too.  But is that even within sight?

"But I think the better path is one of evolution rather than
restriction."

Me too.

John.

From harbour@lists.harbour-project.org  Sat Jan 13 08:25:05 2001
From: harbour@lists.harbour-project.org (Patrick Mast)
Date: Sat Jan 13 08:25:05 2001
Subject: [Harbour] Inline C
In-Reply-To: <200101130815_MC2-C1A8-1389@compuserve.com>
Message-ID: <NCBBJKNMIDPJNLJCHCHIAEJDFMAA.harbour@winfakt.com>

John,

> I'd still like it disabled by default. <g>
But there is nothing to disable.
Not using it, that's disabling it. Not?

regards,

Patrick Mast
www.Patrick.Be.kz


From harbour@lists.harbour-project.org  Sat Jan 13 10:44:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sat Jan 13 10:44:02 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <200101130815_MC2-C1A8-138C@compuserve.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKEEMFDIAA.ron@profit-master.com>

John,

> I do recall some early ones which looked more the knee-jerk "cool
> feature" type than reasoned praise or criticism.  I'd be pleased if
> those people would now join in with reasoned responses.

Wow.

> 1. I have other things to do than spend what is already too much time
> on a feature that's not needed, let alone needed in this form, let
> alone now.

In your [minority] opinion.

> 2. There are so many things of more importance.  I don't even have
> enough time for them. :-(  NTX, CDX.

Right.

> 3. I'd far rather spend time adapting C4W more to Harbour.  I still
> have the new GETSYS to adapt to, for example.  (A joke right now, as
> recently I can't get the VC simplex build to compile.  Flex is next
> to try.)

I tried and tried, to keep silent of this very fact, out of politeness, and
confidence that your input should be heard, addressed, but will still remain
a very minority position (only 2 individulas including you, requested the
feature be removed).

Now, I find it rude, that you seem to talk so arrogantly, about what is
right (in your opinion, but not qualified with any IMO), what is wrong (same
applies), while discussing my contribution to a free software project, where
your stated priority is/was to make your commercial product work with it.

I too have a commercial product, that have received less than 10% of my time
in the last year. Because for me it was/is a priority, to guarantee the
future/functionality of Harbour, in actions, more than words.

Please don't tell us anymore you want the good of Harbour. You clearly
stated your interest, to have your commercial product, generate income from
Harbour, ASAP. Your opinions about Harbour are therefore tainted by short
term greed.

> "Mostly I would rather not have a push toward a true beta release
> delayed by
> this."
>
> Wow!  Me too.  But is that even within sight?

More and more, and even faster if...

Ron


From harbour@lists.harbour-project.org  Sat Jan 13 10:49:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sat Jan 13 10:49:02 2001
Subject: [Harbour] Inline C
In-Reply-To: <200101130815_MC2-C1A8-138A@compuserve.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKKEMFDIAA.ron@profit-master.com>

John,

> "I'm confident the code (backbone) is ready for beta release. I'm also
> confident, the feature is desired by the majority."
>
> I don't share your confidence.

We'll soon *know*, won't we?

> "I personally believe the syntax itself is ready for beta"
>
> By now you know I don't think so.  However, I have no objection to
> the syntax etc - no matter what it may be like - provided it's not
> on by default, and thus is guaranteed not to be allowed to creep into
> the RTL or standard PRG files.
>
> I'll try to clarify.
> I'm trying to vote for Harbour's good: I think the syntax and semantics
> are poor.  Voting for my personal good: I'll not use it.  I've no wish
> at all to prevent others using it (except in the parts mentioned).

I do want the good of Harbour [can't say "too" strait faced], and I was
willing demonstrate it with considerable time contribution, repeatedly, and
consistently over the last 1½ years.

Ron


From harbour@lists.harbour-project.org  Sat Jan 13 11:09:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sat Jan 13 11:09:02 2001
Subject: [Harbour] Inline C
In-Reply-To: <200101130815_MC2-C1A8-1389@compuserve.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKGEMGDIAA.ron@profit-master.com>

John,

> "interesting that none of the input, suggested an alternate syntax"
>
> I'd not even realised that suggesting syntax was an option.  I thought
> anyone with suggestions had to implement them, too.

I don't believe anyone here, ever required such - your constructive input,
(and sincere suggestions, are) is always welcome.

> I think a better syntax for what you have now would be:
> HB_CALL_C( <PossiblyEmptyParamList> ) { <CStatementList> }
>
> because it's not so much inline as a function call.  Maybe
> HB_CALL_INLINE_C would be a better name, but it's getting long.

OK.

> I'd still like it disabled by default. <g>

Still want a vote on this?

> > cVar := |{ hb_retc( "I'm an inline c Block" ); |} + "Is it inline now"?
>
> Maybe, but I think these are the things that would make embedded C
> more usable:
> 1. a way to pass params in & out (i.e. assuming passed in using @)
> 2. (highly desired but not essential) easier access to variables
> 3. a way to declare C file-wide statics (as well as statics within
> functions), structs, and typedefs

I believe all that can be done, with the last addition of #pragma BEGINDUMP.

> Er... you may be able to detect ;|} which looks safe(r).  OTOH that
> probably causes hassles if there are intervening comments and/or
> white space.

The backbone, already have the logic to parse comments, strings, char
constants etc. I believe you should have known that fact (and any other
technical aspect), to be able to discount this feature so vocally.

Ron


From harbour@lists.harbour-project.org  Sat Jan 13 11:20:04 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sat Jan 13 11:20:04 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKEEMFDIAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKAEMHDIAA.ron@profit-master.com>

> > 1. I have other things to do than spend what is already too much time
> > on a feature that's not needed, let alone needed in this form, let
> > alone now.

1. Then, why spend your time, and worse the time of others, arguing the
inclusion of a feature, you *don't* have to use!

2. Others, don't have to agree with *your* assessment of *their* needs.

3. If it is was not for your non constructive, censor approach, this too
much time spent, would not have been wasted at all!!!

Don't get me wrong, this is not in vein, that's a minor cost (from my
perspective) to pay, for the benefit of this great [open source] project.

Ron


From harbour@lists.harbour-project.org  Sat Jan 13 11:25:03 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sat Jan 13 11:25:03 2001
Subject: [Harbour] Notice
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKGEMGDIAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKEEMHDIAA.ron@profit-master.com>

I'll be away for 3 days, leaving in 1 hour or so.

Please forgive the interruption to inline/in-place c discussion. I promise
to answer and later summarize all input, later the coming week.

Ron


From harbour@lists.harbour-project.org  Sat Jan 13 11:46:05 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Sat Jan 13 11:46:05 2001
Subject: [Harbour] Inline C
In-Reply-To: <200101130815_MC2-C1A8-1389@compuserve.com>; from John_Skelton@compuserve.com on Sat, Jan 13, 2001 at 08:15:31AM -0500
References: <200101130815_MC2-C1A8-1389@compuserve.com>
Message-ID: <20010113162323.U9113@hagbard.davep.org>

On Sat, Jan 13, 2001 at 08:15:31AM -0500, John Skelton wrote:

> I can't say I'm a fan of the |{ ... |} idea, as it looks a bit too much
> like a code block. Finding others double-char (digraph?) sequences looks
> tough, though.

I'm glad you mentioned digraphs, I've been meaning to raise that issue too.
I was going to try and find a pointer for Ron in case he wasn't aware of
them.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Sat Jan 13 11:46:29 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Sat Jan 13 11:46:29 2001
Subject: [Harbour] Inline C
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKIEMCDIAA.ron@profit-master.com>; from ron@profit-master.com on Sat, Jan 13, 2001 at 02:11:28AM -0800
References: <20010113085854.T9113@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKIEMCDIAA.ron@profit-master.com>
Message-ID: <20010113163005.V9113@hagbard.davep.org>

On Sat, Jan 13, 2001 at 02:11:28AM -0800, Ron Pinkas wrote:
> Dave,
> 
> > My apologies, I thought it was also floated to see if there was any
> > interest in the feature at all as well as to get feedback on the method
> > of implementation. I hadn't realised that it had been submitted with the
> > intention that it would, without question, become part of harbour.
> 
> I've never said "it would, without question, become part of harbour". I
> could of course ask that you will not invent motives for me (humor), but
> seriously, I never said that. I did say "I'm confident the feature is
> desired by the majority". I also said that I'll remove it if requested.

Good, that means that the point you clarified didn't actually need
clarification because I correctly understand your reason for making the code
available in the first place.

> Most contributed code is not floated as an idea first, to get feedback. It
> seems that such "floating" is highly related to: the scope of the change,
> it's possible impact on existing code, its possible impact on stability,
> prior Harbour posting experience, etc., etc..

Depends what you mean by contributed code. Features that are obviously
required for Clipper compatibility have usually been placed into harbour
without any real need for "floating" first. It's a given that such things
are required because that's the aim of harbour. Ideas that have deviated
from the path of Clipper compatibility have usually been floated first to
get people's feedback. Antonio's ideas about stack management been the most
recent example I can think of.

> > What about some of the technical issues that have been raised? I've
> > still got a couple of outstanding questions kicking about. See:
> >
> > <20010111194638.A9113@hagbard.davep.org>
> > <20010111180035.V9113@hagbard.davep.org>
> > <20010111095830.T9113@hagbard.davep.org>
> 
> Dave, please excuse my request, but I don't have a clue as to what would any
> of the above references represent. 

They are message IDs. Every email has a message ID.

>                                    When I point someone to info that might
> be of interest to them, I either quote it verbatim, or provide a function
> link to such info. 

The above are links to those emails. Follow the links in your mail folder or
look in the mail archives.

> 2. I don't follow your claim. It is evaluated "in place" and the place
> holder is the HB_INLINE() declarator.

It isn't evaluated in place. The C code isn't evaluated where it appears.
I've demonstrated this with examples.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Sat Jan 13 11:48:05 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Sat Jan 13 11:48:05 2001
Subject: [Harbour] Inline C
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEMDDIAA.ron@profit-master.com>; from ron@profit-master.com on Sat, Jan 13, 2001 at 02:35:40AM -0800
References: <20010113085854.T9113@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKCEMDDIAA.ron@profit-master.com>
Message-ID: <20010113164540.W9113@hagbard.davep.org>

On Sat, Jan 13, 2001 at 02:35:40AM -0800, Ron Pinkas wrote:

> > and I think the issue that more than one person has raised, that the
> > "inline" part (as in, C code in a function body) of this doesn't seem to
> > quite make sense (at least not while the code can be totally detached
> > from the place it's supposed to be called, recall that you said it is
> > evaluated "in place" but this isn't actually the case), hasn't been
> > fully addressed.
> 
> BTW, interesting that none of the input, suggested an alternate syntax. 

I can't speak for anyone else but I've been toying with alternative methods
for a couple of days now, the main reason I've not suggested any so far is
that I've been waiting for feedback from you regarding the problem of the
disassociated C blocks (where the C code lives in a different place from
where it's supposed to be "inline").

> cVar := |{ hb_retc( "I'm an inline c Block" ); |} + "Is it inline now"?

I had pretty much the same thing in mind, in my case I was toying with the
idea of {C|<varlist>| body } but I think it's ugly, ambiguous and
misleading. There's also then the problem of how you go about supplying
values to that code (I don't see a method in your example above either).

So far, any syntax I've managed to dream up has always pointed to the fact
that "inline" makes no sense at all (that's not to say that C in PRG
doesn't, that's a different matter).

> I would like to get some input from those that are interested in the
> availability of the feature.

Hopefully the above helps. The main problem with a "mutated code block"
approach is that it isn't obvious how the code gets it's parameters.
Further, the moment the code needs parameters it ceases to be inline and
becomes an anonymous function that's early evaluated (unlike code blocks,
which are evaluated when you want them evaluated).

Put simply, there's no getting away from the fact that because of the way
harbour works, we can't have "true" inline C (in the way that most people
tend to understand inline, it's not inline like the ASM in C and it's not
inline like the C in FlagShip). What it is is automatic function name
generation with a single function name used to call different bits of code.

Put simply, this:

,----
| cVar := HB_INLINE( cVar )
|         { hb_retc( wibble( hb_parc( 1 ) ) ); }
`----

makes much less sense than:

,----
| cVar := Wibble( cVar )
| 
| #pragma raw
| HB_FUNC( WIBBLE )
| {
|    hb_retc( wibble( hb_parc( 1 ) ) )' 
| }
| #pragma endraw
`----

[the pragmas are simply examples, they're not there to serve as an example
of what I think it should actually look like]

because the latter is almost the same as the former and lacks all the
problems of the former. The only problem I perceive with the latter is that
there's no obvious way of encapsulating the C code such that it's not
visible outside of the module that it's defined in.

There are also plus points to the latter, ability to fully write C code
being one obvious one (static helper functions, top level variables, that
sort of thing).

I know it's tempting to see the two examples above as not being mutually
exclusive and, to some degree, they're not. It's just that the former is, in
my opinion, an inelegant shorthand for the latter that raises a number of
issues that simply disappear with the latter.

I'd find lots of utility in something like the latter approach, I'd never
use the former because I find it inelegant. Hell, I might even be tempted to
rework parts of harbour-glibc <URL:http://www.davep.org/harbour/> to both
make use of and provide examples of this approach.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Sat Jan 13 13:01:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sat Jan 13 13:01:02 2001
Subject: [Harbour] Inline C
In-Reply-To: <20010113164540.W9113@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKIEMIDIAA.ron@profit-master.com>

Dave,

> Put simply, this:
>
> ,----
> | cVar := HB_INLINE( cVar )
> |         { hb_retc( wibble( hb_parc( 1 ) ) ); }
> `----
>
> makes much less sense than:
>
> ,----
> | cVar := Wibble( cVar )
> |
> | #pragma raw
> | HB_FUNC( WIBBLE )
> | {
> |    hb_retc( wibble( hb_parc( 1 ) ) )'
> | }
> | #pragma endraw
> `----

Look at your example, it requires a symbol ( Wibble ), the manual typing of
the correct extend interface HB_FUNC( WIBBLE ), the body of the C code, 2
pragmas, and 1 #include "hbapi.h" (which you omitted). All this extra typing
and consideration, without a single extra benefit over:

  cVar := HB_INLINE( cVar )
  {
    hb_retc( hb_parc( 1 ) )
  }

And 1 clear disadvantage of lack of scoping. I do agree with you that the
bulk of c functions called by PRG are very much like that, in that the bulk
are utility isolated functions. Such functions do not require more than the
above.

Ron


From harbour@lists.harbour-project.org  Sat Jan 13 13:10:04 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sat Jan 13 13:10:04 2001
Subject: [Harbour] Inline C
In-Reply-To: <20010113163005.V9113@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEMJDIAA.ron@profit-master.com>

Dave,

> > I've never said "it would, without question, become part of harbour". I
> > could of course ask that you will not invent motives for me (humor), but
> > seriously, I never said that. I did say "I'm confident the feature is
> > desired by the majority". I also said that I'll remove it if requested.
>
> Good, that means that the point you clarified didn't actually need
> clarification because I correctly understand your reason for
> making the code
> available in the first place.

No Dave, it only means, you attributed to me 2 inaccurate ideas. both
warranted the clarifications they received.

> > Most contributed code is not floated as an idea first, to get
> feedback. It
> > seems that such "floating" is highly related to: the scope of
> the change,
> > it's possible impact on existing code, its possible impact on stability,
> > prior Harbour posting experience, etc., etc..
>
> Depends what you mean by contributed code. Features that are obviously
> required for Clipper compatibility have usually been placed into harbour
> without any real need for "floating" first. It's a given that such things
> are required because that's the aim of harbour. Ideas that have deviated
> from the path of Clipper compatibility have usually been floated first to
> get people's feedback. Antonio's ideas about stack management
> been the most
> recent example I can think of.

Antonio's example qualify for at least 2 of the valid reasons I mentioned.
There are numerous other additions, that unlike your example, were very
isolated, with little or no impact, that were contributed, justifiably
without, with any floating.

> ...
> They are message IDs. Every email has a message ID.
>
> >                                    When I point someone to info
> that might
> > be of interest to them, I either quote it verbatim, or provide
> a function
> > link to such info.
>
> The above are links to those emails. Follow the links in your
> mail folder or
> look in the mail archives.

Sorry, can't take this effort, I'll be glad to address it, when you provide
quotes, or functional links, to the Harbour Archive.

> > 2. I don't follow your claim. It is evaluated "in place" and the place
> > holder is the HB_INLINE() declarator.
>
> It isn't evaluated in place. The C code isn't evaluated where it appears.
> I've demonstrated this with examples.

Sorry, I still don't know what you are referring to.

[you got me here literally at the door, bye now, see you in few days...]

Ron


From harbour@lists.harbour-project.org  Sat Jan 13 14:33:02 2001
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Sat Jan 13 14:33:02 2001
Subject: [Harbour] Inline C
In-Reply-To: <200101130815_MC2-C1A8-138B@compuserve.com>
Message-ID: <3A6066E7.25810.2359C311@localhost>

On 13 Jan 2001, at 8:15, John Skelton wrote:

> Phil,
> 
> "There is not even a good reason to turn it off by default."
> 
> If it's on, it increases the chance that someone will use it in the
> RTL.  Very possibly without realising they shouldn't and why.

If it's on, it increases the chance that people will use it and find out 
how to get it evolved to where it belongs. If it's off by default 
chances are good that won't happen.
 
> GETSYS, ERRORSYS, etc would "clearly" be more "efficient" in C. :-(
> 
> There are rather more PRG files to worry about than were included as
> source with Clipper, and I include those, too.  OOP stuff, etc.  Some
> of it is not exactly easy to understand now.  In C it would be far
> harder (much as I like C).  It would also rule out a lot of developers.

And, back to my point. If you are going to blame the knife for the 
murder, then we should ban all knives, shouldn't we? I mean, it 
couldn't be the programmers fault.

If we wish to make a rule that it not be used in Harbour itself in it's 
current state, I have no problem with that, but disabling it is overkill 
and restrictive instead of allowing us to learn from it, enhance it, 
correct it and further it incrementally like so many other new 
features we have.


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Sat Jan 13 14:33:25 2001
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Sat Jan 13 14:33:25 2001
Subject: [Harbour] Inline C
In-Reply-To: <20010113071040.N9113@hagbard.davep.org>
References: <3A5FA65E.6203.2069AE0C@localhost>; from midnight@the-oasis.net on Sat, Jan 13, 2001 at 12:50:38AM -0500
Message-ID: <3A6066E7.22160.2359C343@localhost>

On 13 Jan 2001, at 7:10, Dave Pearson wrote:

> On Sat, Jan 13, 2001 at 12:50:38AM -0500, Phil Barnett wrote:
> 
> > Open source develops because someone has an itch to scratch. Saying Ron
> > doesn't have a right to scratch his itch is counterproductive.
> 
> Portraying feedback that Ron has requested this way is counterproductive and
> plain wrong. Show me one instance of someone telling Ron that his right to
> scratch an itch has been removed.

I saw a vote for removal and several yes votes. I think that suffices.

I'm not against discussing this, modifying it, rolling it around and 
then deciding what to do with it. I'm merely railing against a vote to 
rip it out with so little invested to find out what it gives us.


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Sat Jan 13 15:10:04 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Sat Jan 13 15:10:04 2001
Subject: [Harbour] Hbmake and -D switch with multiple macros(all Captains, I need your opinion on This)
References: <200101120535_MC2-C169-2CF8@compuserve.com>
Message-ID: <001c01c07d9c$c012c680$0100007f@sl.conex.net>

John


> Luiz,
>
> "Hbmake use the same switch style as Borland make utility."
>
> It allows multiple -D doesn't it?
>
> "If you are against that hbmake use multiple macros with the -D switch let
> vote."
>
> I'm not so much against that as in favour of keeping to what is a
> very long-lived and very very heavily used standard.  Its problems
> are well known.  Borland's approach may have problems on other
> platforms, e.g. where semi-colon (;) is a command separator - such as
> Linux & UNIX.
Ok, if the semi-colon(;), is an command separator in Linux, i can change the
separator to an comma(,)

> "The multiple macro used with the -D switch is a behavior that i was
dreaming
> to make utilities to have."

Regards

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Sat Jan 13 15:10:28 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Sat Jan 13 15:10:28 2001
Subject: [Harbour] Harbour and Graphics mode
Message-ID: <001d01c07d9c$c18409c0$0100007f@sl.conex.net>

Dear friends

An Brazilian fellow asked me when we will have harbour full native mode for
GUI applications

Regards From Brazil

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Sat Jan 13 16:12:02 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Sat Jan 13 16:12:02 2001
Subject: [Harbour] Inline C
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEMJDIAA.ron@profit-master.com>; from ron@profit-master.com on Sat, Jan 13, 2001 at 10:11:06AM -0800
References: <20010113163005.V9113@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKCEMJDIAA.ron@profit-master.com>
Message-ID: <20010113210241.Z9113@hagbard.davep.org>

On Sat, Jan 13, 2001 at 10:11:06AM -0800, Ron Pinkas wrote:
> Dave,
> 
> > Good, that means that the point you clarified didn't actually need
> > clarification because I correctly understand your reason for making the
> > code available in the first place.
> 
> No Dave, it only means, you attributed to me 2 inaccurate ideas. both
> warranted the clarifications they received.

Pardon? I said that I was under the impression that you were open to the
idea of removing the feature should such a move be decided. You corrected
that misunderstanding, I apologised for the misunderstanding and then you
corrected the apology by saying that you were open to removal should it be
warranted or desirable.

> Antonio's example qualify for at least 2 of the valid reasons I mentioned.
> There are numerous other additions, that unlike your example, were very
> isolated, with little or no impact, that were contributed, justifiably
> without, with any floating.

You seem to be concentrating on the micro, look at the macro of what I'm
talking about and I think you'll get my point.

> > The above are links to those emails. Follow the links in your mail
> > folder or look in the mail archives.
> 
> Sorry, can't take this effort, I'll be glad to address it, when you
> provide quotes, or functional links, to the Harbour Archive.

I provide you with exact IDs of emails that contain information and feedback
for you and you can't be bothered to read them? Hmm, ok, at least I know how
interested you really are in solicited feedback.

Personally, if I were in your position, and someone use *the* key mechanism
for identifying emails to point me to something that I might have missed
that related to code I was writing I'd use the provided link.

> > It isn't evaluated in place. The C code isn't evaluated where it
> > appears. I've demonstrated this with examples.
> 
> Sorry, I still don't know what you are referring to.

The copious number of examples of code where the body of the C code isn't
directly associated with the place that it is called. Evidence that, despite
the design goal, the code isn't actually evaluated "in place". I did
actually do all of that testing and publish my findings to help you and to
clarify the workings of the feature.

Anyone might think you don't value this kind of help and feedback, what with
turning down pointers to emails and the like.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Sat Jan 13 16:12:25 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Sat Jan 13 16:12:25 2001
Subject: [Harbour] Inline C
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKIEMIDIAA.ron@profit-master.com>; from ron@profit-master.com on Sat, Jan 13, 2001 at 10:01:56AM -0800
References: <20010113164540.W9113@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKIEMIDIAA.ron@profit-master.com>
Message-ID: <20010113210719.A9113@hagbard.davep.org>

On Sat, Jan 13, 2001 at 10:01:56AM -0800, Ron Pinkas wrote:

> Look at your example, it requires a symbol ( Wibble ), the manual typing
> of the correct extend interface HB_FUNC( WIBBLE ), the body of the C code,
> 2 pragmas, and 1 #include "hbapi.h" (which you omitted).

I really hope we're not going to get into a keystroke counting contest here.
As for correctness of typed code, it's a given that programmers have to
correctly type things, compilers are generally forgiving beasts.

If keystroke counting and programmer mollycoddling are the criteria then my
point is never going to make any sense as it doesn't address these issues,
it's not designed to.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Sat Jan 13 16:50:04 2001
From: harbour@lists.harbour-project.org (Patrick Mast)
Date: Sat Jan 13 16:50:04 2001
Subject: [Harbour] Inline C
In-Reply-To: <20010113210241.Z9113@hagbard.davep.org>
Message-ID: <NCBBJKNMIDPJNLJCHCHIAEJKFMAA.harbour@winfakt.com>

Dave,

> I provide you with exact IDs of emails that contain information
> and feedback for you and you can't be bothered to read them?
> Hmm, ok, at least I know how interested you really are in solicited
> feedback.
>
> Personally, if I were in your position, and someone use *the* key
> mechanism for identifying emails to point me to something that I
> might have missed that related to code I was writing I'd use the
> provided link.

Sory, but I also don't know what to do with "*the* key mechanism" of your
links...

regards,

Patrick Mast
www.Patrick.Be.kz


From harbour@lists.harbour-project.org  Sat Jan 13 17:16:01 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Sat Jan 13 17:16:01 2001
Subject: [Harbour] Inline C
In-Reply-To: <3A6066E7.22160.2359C343@localhost>; from midnight@the-oasis.net on Sat, Jan 13, 2001 at 02:32:07PM -0500
References: <3A5FA65E.6203.2069AE0C@localhost>; <20010113071040.N9113@hagbard.davep.org> <3A6066E7.22160.2359C343@localhost>
Message-ID: <20010113212953.C9113@hagbard.davep.org>

On Sat, Jan 13, 2001 at 02:32:07PM -0500, Phil Barnett wrote:
> On 13 Jan 2001, at 7:10, Dave Pearson wrote:
> 
> > On Sat, Jan 13, 2001 at 12:50:38AM -0500, Phil Barnett wrote:
> > 
> > > Open source develops because someone has an itch to scratch. Saying
> > > Ron doesn't have a right to scratch his itch is counterproductive.
> > 
> > Portraying feedback that Ron has requested this way is counterproductive
> > and plain wrong. Show me one instance of someone telling Ron that his
> > right to scratch an itch has been removed.
> 
> I saw a vote for removal and several yes votes. I think that suffices.

I do hope that technical discussion and considered input counts for more
than votes. Votes are easily cast, considered input isn't anywhere near as
easy and requires that the person who writes it really cares about the
project (and, before anyone jumps their gun, consider how I voted too).

No, the vote doesn't suffice, not as an answer to what I've said above, not
in the least.

> I'm not against discussing this, modifying it, rolling it around and then
> deciding what to do with it. I'm merely railing against a vote to rip it
> out with so little invested to find out what it gives us.

In my dictionary railing means "to put up a fence", the idea being to stop
something or draw a line and say "don't step over it". Perhaps it means
something a little different in the colony, in which case I might be missing
a subtle point.

I'm more than a little concerned to see, in one sentence, votes, cast both
ways, to demonstrate a point, only to find a couple of sentences later, that
you wish to bar negative votes. I'm perplexed by this and I can only
conclude that I've failed to comprehend your meaning of "railing".

However, assuming railing does mean what my dictionary and my understanding
says it means, it seems we are actually in agreement. The feedback that Ron
solicited is being made available and it's the considered feedback that
should be listened to, not any sort of "vote". I do find that heartening.

Unsurprisingly it would appear that the considered feedback isn't too
different from the tally of the vote. I think, however, my point stands
about the dangers of simply adding new features to CVS without first talking
to the development group about it. Once code is in CVS it would appear that
people get defensive about it, even to the point of ad-hominem attacks on
those who would seek to provide the requested feedback.

That's not healthy. I'd like to see someone railing against that before
anyone starts railing against negative votes.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Sat Jan 13 19:42:01 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Sat Jan 13 19:42:01 2001
Subject: [Harbour] My opinion about the Harbour project.
References: <200101130815_MC2-C1A8-138C@compuserve.com>
Message-ID: <003b01c07dc3$8b218b60$921a5e18@bh>

John:

>"Mostly I would rather not have a push toward a true beta release delayed
by this."
>>Wow!  Me too.  But is that even within sight?

I have a full-sized FWH app fully functional right now using ADS.  There are
a few remaining core issues (I hope they are in the category of buglets)
that keep it from being reliable commercially, but I am installing it
in-house next week to run an office of 10-15 users for order entry, tech
support call note maintenance, mailmerge management, calendaring, etc.  So
yes, I think it's in sight.  We've done a lot of testing and it runs well
for the most part.
Obviously a _real_ beta needs the native data drivers, but the Harbour core
has been around for quite a while now and the bug list that I'm aware of is
rather short.

I'm sorry I can't help with the MS C issues.  I only use Borland and it's
been working great for months.

Brian




From harbour@lists.harbour-project.org  Sat Jan 13 21:50:04 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Sat Jan 13 21:50:04 2001
Subject: [Harbour] Function addresses
Message-ID: <000901c07dd5$6ff69170$921a5e18@bh>

Does the @FuncName() syntax allow us to pass the function pointer to C and
execute it there as a C function pointer?
Where are examples of the recommended usage of this feature?

I need to set up some callbacks with ADS and will probably post and lock a
codeblock, but this other feature raised my curiosity....


Brian Hays



From harbour@lists.harbour-project.org  Sun Jan 14 01:40:06 2001
From: harbour@lists.harbour-project.org (Patrick Mast)
Date: Sun Jan 14 01:40:06 2001
Subject: [Harbour] My opinion about the Harbour project.
In-Reply-To: <003b01c07dc3$8b218b60$921a5e18@bh>
Message-ID: <NCBBJKNMIDPJNLJCHCHIMEJKFMAA.harbour@winfakt.com>

Brian,

> I have a full-sized FWH app fully functional right now using ADS. 
Congrats Brian! I think you did a wonderfull job for Harbour!

regards,

Patrick Mast
www.Patrick.Be.kz

From harbour@lists.harbour-project.org  Sun Jan 14 03:00:05 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Sun Jan 14 03:00:05 2001
Subject: [Harbour] Inline C
In-Reply-To: <NCBBJKNMIDPJNLJCHCHIAEJKFMAA.harbour@winfakt.com>; from harbour@winfakt.com on Sat, Jan 13, 2001 at 10:49:15PM +0100
References: <20010113210241.Z9113@hagbard.davep.org> <NCBBJKNMIDPJNLJCHCHIAEJKFMAA.harbour@winfakt.com>
Message-ID: <20010114075531.D9113@hagbard.davep.org>

On Sat, Jan 13, 2001 at 10:49:15PM +0100, Patrick Mast wrote:
> Dave,
> 
> > Personally, if I were in your position, and someone use *the* key
> > mechanism for identifying emails to point me to something that I might
> > have missed that related to code I was writing I'd use the provided
> > link.
> 
> Sory, but I also don't know what to do with "*the* key mechanism" of your
> links...

Use them to search your mail folders or your archive of choice, I already
explained that to Ron. Message IDs are *the* unique identifier for an email.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Sun Jan 14 03:45:03 2001
From: harbour@lists.harbour-project.org (Patrick Mast)
Date: Sun Jan 14 03:45:03 2001
Subject: [Harbour] Inline C
In-Reply-To: <20010114075531.D9113@hagbard.davep.org>
Message-ID: <NCBBJKNMIDPJNLJCHCHIEEJLFMAA.harbour@winfakt.com>

Dave,

> > > Personally, if I were in your position, and someone use *the* key
> > > mechanism for identifying emails to point me to something that I might
> > > have missed that related to code I was writing I'd use the provided
> > > link.
> > Sory, but I also don't know what to do with "*the* key
> > mechanism" of your links...
> Use them to search your mail folders or your archive of choice, I already
> explained that to Ron. Message IDs are *the* unique identifier
> for an email.
Those message ID's don't show up in my eMail reader...

regards,

Patrick Mast
www.Patrick.Be.kz


From harbour@lists.harbour-project.org  Sun Jan 14 06:01:04 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Sun Jan 14 06:01:04 2001
Subject: [Harbour] Function addresses
In-Reply-To: <000901c07dd5$6ff69170$921a5e18@bh>
Message-ID: <000001c07e19$127f7900$0f2aa8c0@antonio>

Brian,

> Does the @FuncName() syntax allow us to pass the function pointer to C and
> execute it there as a C function pointer?

No, you can't do that. The HVM (Harbour virtual machine) requires some
sort of stack arrangement before doing that, and besides that, the HVM
must do that call from inside hb_vmDo() where many important saving and
restoring values take place.

> Where are examples of the recommended usage of this feature ?

hvm.c itself uses that technique many places:

      hb_vmPushSymbol( hb_dynsymFind( "YourFunctionName" )->pSymbol );

      hb_vmPushNil();                 /* places NIL at self */

      hb_vmPush...( ... );   /* parameters are placed at the hvm stack */
      ...

      hb_vmDo( iArgCount ); /* invoke it with number of supplied parameters
*/

The same way Clipper works.


Antonio



From harbour@lists.harbour-project.org  Sun Jan 14 07:16:01 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Sun Jan 14 07:16:01 2001
Subject: [Harbour] Inline C
In-Reply-To: <NCBBJKNMIDPJNLJCHCHIEEJLFMAA.harbour@winfakt.com>; from harbour@winfakt.com on Sun, Jan 14, 2001 at 09:44:13AM +0100
References: <20010114075531.D9113@hagbard.davep.org> <NCBBJKNMIDPJNLJCHCHIEEJLFMAA.harbour@winfakt.com>
Message-ID: <20010114100446.I9113@hagbard.davep.org>

On Sun, Jan 14, 2001 at 09:44:13AM +0100, Patrick Mast wrote:
> Dave,
> 
> > Use them to search your mail folders or your archive of choice, I
> > already explained that to Ron. Message IDs are *the* unique identifier
> > for an email.
>
> Those message ID's don't show up in my eMail reader...

I'm not sure I follow this. When you say "*those* message IDs" do you mean
the ones I quoted? In other words are you saying that you never received the
emails I pointed Ron at? The reason I ask is that the mailing list did
deliver them to me.

Or, are you saying that your MUA doesn't give you access to the Message-ID
of the internet emails that you've received and doesn't allow you to search
for those emails using their unique keys? If this is the case your MUA seems
to be very unhelpful, perhaps you should consider letting the author know
about this problem.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Sun Jan 14 07:39:02 2001
From: harbour@lists.harbour-project.org (Patrick Mast)
Date: Sun Jan 14 07:39:02 2001
Subject: [Harbour] Inline C
In-Reply-To: <20010114100446.I9113@hagbard.davep.org>
Message-ID: <NCBBJKNMIDPJNLJCHCHIEEJPFMAA.harbour@winfakt.com>

Dave,

> > > Use them to search your mail folders or your archive of choice, I
> > > already explained that to Ron. Message IDs are *the* unique identifier
> > > for an email.
> > Those message ID's don't show up in my eMail reader...
> I'm not sure I follow this. When you say "*those* message IDs" do you mean
> the ones I quoted? In other words are you saying that you never
> received the
> emails I pointed Ron at? The reason I ask is that the mailing list did
> deliver them to me.
Yes, I saw the messdages to Ron

> Or, are you saying that your MUA doesn't give you access to the Message-ID
> of the internet emails that you've received and doesn't allow you
> to search for those emails using their unique keys? If this is the case
> your MUA seems to be very unhelpful, perhaps you should consider letting
> the author know about this problem.
I don;t see these ID's in Microsoft Outlook.
Ok, maybe I need to call Bill (joke);-))

regards,

Patrick Mast
www.Patrick.Be.kz


From harbour@lists.harbour-project.org  Sun Jan 14 08:17:02 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Sun Jan 14 08:17:02 2001
Subject: [Harbour] Inline C
In-Reply-To: <NCBBJKNMIDPJNLJCHCHIEEJPFMAA.harbour@winfakt.com>; from harbour@winfakt.com on Sun, Jan 14, 2001 at 01:38:47PM +0100
References: <20010114100446.I9113@hagbard.davep.org> <NCBBJKNMIDPJNLJCHCHIEEJPFMAA.harbour@winfakt.com>
Message-ID: <20010114131559.J9113@hagbard.davep.org>

On Sun, Jan 14, 2001 at 01:38:47PM +0100, Patrick Mast wrote:
> Dave,
> 
> > I'm not sure I follow this. When you say "*those* message IDs" do you
> > mean the ones I quoted? In other words are you saying that you never
> > received the emails I pointed Ron at? The reason I ask is that the
> > mailing list did deliver them to me.
>
> Yes, I saw the messdages to Ron

Ok, good.

> > Or, are you saying that your MUA doesn't give you access to the
> > Message-ID of the internet emails that you've received and doesn't allow
> > you to search for those emails using their unique keys? If this is the
> > case your MUA seems to be very unhelpful, perhaps you should consider
> > letting the author know about this problem.
>
> I don;t see these ID's in Microsoft Outlook. Ok, maybe I need to call Bill
> (joke);-))

Why joke? Why not actually complain about unhelpful software?

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Sun Jan 14 09:25:04 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Sun Jan 14 09:25:04 2001
Subject: [Harbour] ChangeLog 2001-01-14 15:15 UTC+0100
Message-ID: <3A61C5D6.26894.905968D@localhost>

    *include/hbapi.h
        *modified union in 'asRefer' structure
        
    *source/vm/codebloc.c
    *source/vm/hvm.c
    *source/vm/itemapi.c
        *fixed support for detached local variables passed by
        the reference

Regards, Ryszard

From harbour@lists.harbour-project.org  Sun Jan 14 11:27:02 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Sun Jan 14 11:27:02 2001
Subject: [Harbour] SET OPTIMIZE enhancement
In-Reply-To: <00e401c07c2a$ea126a80$921a5e18@bh>
Message-ID: <3A61E265.8530.97524BA@localhost>

On 11 Jan 2001, at 16:02, Brian Hays wrote:

> I need to add support for this to RDDADS, but since it also applies to
> dbfcdx I would rather do it through the RDD...
> 
> P.S.
> I believe Ryszard suggested once that we add an extension to optionally make
> SET DELETED specific to a workarea; if so we should do this for SET OPTIMIZE
> too.

  I think that all global settings related to RDD should be set/get with 
SET .... statement. DBINFO() and DBORDERINFO() should be used for a 
single workarea or an order (if it make sense for a setting) only.

Regards, Ryszard

From harbour@lists.harbour-project.org  Sun Jan 14 14:46:02 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Sun Jan 14 14:46:02 2001
Subject: [Harbour] Function addresses
References: <000001c07e19$127f7900$0f2aa8c0@antonio>
Message-ID: <003501c07e63$618b11e0$921a5e18@bh>

Antonio:
Thanks!  I read it over for education, but it seems clear that accepting a
codeblock from the PRG would be a better way to handle progress bar
callbacks from the server...

Brian
----- Original Message -----
From: "Antonio Linares" <alinares@fivetech.com>
To: <harbour@lists.harbour-project.org>
Sent: Sunday, January 14, 2001 2:59 AM
Subject: RE: [Harbour] Function addresses


> Brian,
>
> > Does the @FuncName() syntax allow us to pass the function pointer to C
and
> > execute it there as a C function pointer?
>
> No, you can't do that. The HVM (Harbour virtual machine) requires some
> sort of stack arrangement before doing that, and besides that, the HVM
> must do that call from inside hb_vmDo() where many important saving and
> restoring values take place.
>
> > Where are examples of the recommended usage of this feature ?
>
> hvm.c itself uses that technique many places:
>
>       hb_vmPushSymbol( hb_dynsymFind( "YourFunctionName" )->pSymbol );
>
>       hb_vmPushNil();                 /* places NIL at self */
>
>       hb_vmPush...( ... );   /* parameters are placed at the hvm stack */
>       ...
>
>       hb_vmDo( iArgCount ); /* invoke it with number of supplied
parameters
> */
>
> The same way Clipper works.
>
>
> Antonio
>
>
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Sun Jan 14 14:50:03 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Sun Jan 14 14:50:03 2001
Subject: [Harbour] My opinion about the Harbour project.
References: <NCBBJKNMIDPJNLJCHCHIMEJKFMAA.harbour@winfakt.com>
Message-ID: <004d01c07e63$fcc317c0$921a5e18@bh>

Patrick:
Thanks, and thanks for the holiday card!

> Congrats Brian! I think you did a wonderfull job for Harbour!
> 
> regards,
> 
> Patrick Mast



From harbour@lists.harbour-project.org  Sun Jan 14 15:08:02 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Sun Jan 14 15:08:02 2001
Subject: [Harbour] ChangeLog 2001-01-14 15:15 UTC+0100
References: <3A61C5D6.26894.905968D@localhost>
Message-ID: <006101c07e66$6a2e7f50$921a5e18@bh>

Ryszard:
Thanks so much!  All initial tests indicate the ByRef handling of arrays is
fixed now.  Even the large app passing large arrays through many function
levels and codeblocks is no longer losing the arrays.

Thanks again!
Brian

----- Original Message -----
From: "Ryszard Glab" <rglab@imid.med.pl>
To: <harbour@lists.harbour-project.org>
Sent: Sunday, January 14, 2001 6:29 AM
Subject: [Harbour] ChangeLog 2001-01-14 15:15 UTC+0100


From harbour@lists.harbour-project.org  Sun Jan 14 15:34:02 2001
From: harbour@lists.harbour-project.org (Patrick Mast)
Date: Sun Jan 14 15:34:02 2001
Subject: [Harbour] ChangeLog 2001-01-14 15:15 UTC+0100
In-Reply-To: <006101c07e66$6a2e7f50$921a5e18@bh>
Message-ID: <NCBBJKNMIDPJNLJCHCHIGEKFFMAA.harbour@winfakt.com>

Brian,

> Thanks so much!  All initial tests indicate the ByRef handling of 
> arrays is
> fixed now.  Even the large app passing large arrays through many function
> levels and codeblocks is no longer losing the arrays.

What is you opinion on stability of the Harbour Core Engine now Brian?
What needs to be fixed to get a real stable Harbour Core Engine?

regards,

Patrick Mast
www.Patrick.Be.kz


From harbour@lists.harbour-project.org  Mon Jan 15 05:16:02 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Mon Jan 15 05:16:02 2001
Subject: [Harbour] My opinion about the Harbour project.
Message-ID: <200101150514_MC2-C1BF-85F3@compuserve.com>

Ron,

> I do recall some early ones which looked more the knee-jerk "cool
> feature" type than reasoned praise or criticism.  I'd be pleased if
> those people would now join in with reasoned responses.

"Wow."

What do you mean?  You want them to join in as I do or you don't?

> 1. I have other things to do than spend what is already too much time
> on a feature that's not needed, let alone needed in this form, let
> alone now.

"In your [minority] opinion."

Is it minority?  Not many have actually said either way.

> 3. I'd far rather spend time adapting C4W more to Harbour.  I still
> have the new GETSYS to adapt to, for example.  (A joke right now, as
> recently I can't get the VC simplex build to compile.  Flex is next
> to try.)

"I tried and tried, to keep silent of this very fact, out of politeness, =
and
confidence that your input should be heard, addressed, but will still rem=
ain
a very minority position (only 2 individulas including you, requested the=

feature be removed)."

Whether it's "removed" is not the main issue.  And I quickly found 5
including me who've voted against inline as it is.  Only 3 including
you in favour of it.  Let's have a vote if you're going to say I'm
in a minority!  BTW, isn't OK for a minority to speak up?

"Now, I find it rude, that you seem to talk so arrogantly,"

Arrogantly?  Where?  When?  And of course you're not?

"about what is right (in your opinion, but not qualified with any IMO)"

In a long discussion it's rare to see constant use of IMO.  You don't
do it, I frequently don't.  If you can't figure out a clearly implied
IMO the way I mentally insert them into your messages, I'm disappointed.
I've certainly said "I think" or the like, and quite a number of the
messages have a Subject "My opinion ...", both of which really should
help you insert any IMOs if you need 'em.

"your stated priority is/was to make your commercial product work with
it."

Several people here have encouraged me to make my product work with
Harbour.  If you have a problem with that, I'm again disappointed.
Certainly one of my priorities is (if reasonably possible) to make my
product work with Harbour.  Yes, I said so.  Would you rather I'd
pretended that wasn't the case?  However, are you really incapable of
understanding that I have more than a single priority and that I've
tried to comment on a feature where I do _not_ have any commercial
conflict of interest?

"I too have a commercial product, that have received less than 10% of my =
time
in the last year."

OK.  However, I don't think I have that choice.  Does that mean I
should drop Harbour?  Is that what you're trying to say?  Obviously,
if I do I'll no longer be reporting bugs & bug fixes.  Who wins?

"Because for me it was/is a priority, to guarantee the
future/functionality of Harbour, in actions, more than words."

I've spent a lot of time trying to help Harbour.  Recently I've tried
to get this "inline C" improved.  I've demonstrated it's a priority
to me, too, though not commercially.  Your "actions" and "more than
words" make me wonder why I've bothered.  It's not as if it matters to
me whether inline is a mess or is good.  I've tried to help make it
better, despite having no interest in it myself.  I'm sorry you've
seen that in a different way.

"Please don't tell us anymore you want the good of Harbour. You clearly
stated your interest, to have your commercial product, generate income fr=
om
Harbour, ASAP. Your opinions about Harbour are therefore tainted by short=

term greed."

You have just demonstrated a strange attitude.  Apparently you don't
think I can give time and effort except because of greed, yet _you_
can.  Wrong.

John.

From harbour@lists.harbour-project.org  Mon Jan 15 05:16:28 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Mon Jan 15 05:16:28 2001
Subject: [Harbour] Inline C
Message-ID: <200101150514_MC2-C1BF-85F2@compuserve.com>

Patrick,


> I'd still like it disabled by default. <g>
"But there is nothing to disable."

I've explained multiple times that there is and why.  Please refer
to my previous messages.

"Not using it, that's disabling it. Not?"

No.  Refer to my messages, please.

Or leave it in and enabled.  I've no commercial interest either way,
despite what Ron says.

John.

From harbour@lists.harbour-project.org  Mon Jan 15 05:16:54 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Mon Jan 15 05:16:54 2001
Subject: [Harbour] My opinion about the Harbour project.
Message-ID: <200101150514_MC2-C1BF-85F5@compuserve.com>

Ron,

> > 1. I have other things to do than spend what is already too much time=

> > on a feature that's not needed, let alone needed in this form, let
> > alone now.

"1. Then, why spend your time, and worse the time of others, arguing the
inclusion of a feature, you *don't* have to use!"

Are you really unaware that people are often (or at least sometimes)
willing to help others without having to be rewarded for their help?

Surely you know I cannot be discussing this feature because of any
personal issue about C, as I've written plenty.  So having ruled out
any _personal_ motives, it should be rather clear that when I said I'm
talking from POV of Harbour I really meant it.

"2. Others, don't have to agree with *your* assessment of *their* needs."=


I've tried several times to make it crystal clear that I'm doing no
such thing.  Please review my messages and then post a balanced
demonstration that I've done what you've just said.

"3. If it is was not for your non constructive, censor approach, this too=

much time spent, would not have been wasted at all!!!"

In what sense "no constructive"?  And especially, what "censor"?  Be
sure to at least post where I've tried to censor this!

John.

From harbour@lists.harbour-project.org  Mon Jan 15 05:17:19 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Mon Jan 15 05:17:19 2001
Subject: [Harbour] Inline C
Message-ID: <200101150514_MC2-C1BF-85F4@compuserve.com>

Ron,

> I'd still like it disabled by default. <g>

"Still want a vote on this?"

By all means.  It really doesn't matter to _me_.  I think it matters
to _Harbour_.  Your other message shows you don't believe I can think
from two points of view.  I find your attitude inconsistent, since
you appear to believe others, including yourself, can do that.  And
it beats me how you can think for a moment that I could care
_personally_ as to whether the current HB_INLINE is in or out.  You
surely know I can write C, have C compilers, etc.

> > cVar :=3D |{ hb_retc( "I'm an inline c Block" ); |} + "Is it inline n=
ow"?
>
> Maybe, but I think these are the things that would make embedded C
> more usable:
> 1. a way to pass params in & out (i.e. assuming passed in using @)
> 2. (highly desired but not essential) easier access to variables
> 3. a way to declare C file-wide statics (as well as statics within
> functions), structs, and typedefs

"I believe all that can be done, with the last addition of #pragma BEGIND=
UMP."

Sure, but I was specifically addressing the part I quoted.  That's why
I quoted it immediately before my response.

> Er... you may be able to detect ;|} which looks safe(r).  OTOH that
> probably causes hassles if there are intervening comments and/or
> white space.

"The backbone, already have the logic to parse comments, strings, char
constants etc. I believe you should have known that fact (and any other
technical aspect), to be able to discount this feature so vocally."

1. I've not discounted this feature at all, let alone vocally - you've
only just introduced it (or did I miss stuff on |{ amd |} before?)
2. If people can't comment on a feature without studying the logic
of parser etc please put that fact on the web site and PROMINENTLY.
You're the first person to bring that up despite my reading a very
large number of messages over many months.  I apologise for not
knowing it, but really you have to tell people.

This is not the way I believe open source projects usually work,
particularly when syntax is claimed to be open for discussion.  I must
say I cannot see why one has to read the detailed logic of a specific
implementation in order to be allowed to discuss syntax, but now I
know.  I'm not willing to pay that entry fee so will now try to finish
this thread and let you get on with running your project.

John.

From harbour@lists.harbour-project.org  Mon Jan 15 05:17:45 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Mon Jan 15 05:17:45 2001
Subject: [Harbour] My opinion about the Harbour project.
Message-ID: <200101150514_MC2-C1BF-85F6@compuserve.com>

Brian,

>"Mostly I would rather not have a push toward a true beta release delaye=
d
by this."
>>Wow!  Me too.  But is that even within sight?

"I have a full-sized FWH app fully functional right now using ADS."

I didn't realise that "true beta" meant FWH / ADS.  I thought it would
mean a Harbour with no (known) major missing Clipper features.  That
it would at least have working NTX, CDX, etc.  (And other parts that
maybe I don't even know don't work or aren't there.)

I have a lot of C4W working, so long as I just use ADS and avoid some
other things.  That didn't strike me as "true beta".

"I'm sorry I can't help with the MS C issues."

No problem.  They're usually not MS C so much as sloppy C code which
in turn is often invalid C++.

Ron seems to believe I only work for greed, so why I'm helping to
debug the MS VC build escapes him, I guess.  Maybe I'll drop it and
move to Borland C. :-)

John.

From harbour@lists.harbour-project.org  Mon Jan 15 05:18:09 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Mon Jan 15 05:18:09 2001
Subject: [Harbour] Inline C
Message-ID: <200101150514_MC2-C1BF-85F9@compuserve.com>

Ron,

> "I'm confident the code (backbone) is ready for beta release. I'm also
> confident, the feature is desired by the majority."
>
> I don't share your confidence.

"We'll soon *know*, won't we?"

Will we?  How?  Why?  When?  (Your claim is a mystery.)

John.

From harbour@lists.harbour-project.org  Mon Jan 15 05:19:03 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Mon Jan 15 05:19:03 2001
Subject: [Harbour] Inline C
Message-ID: <200101150514_MC2-C1BF-85F8@compuserve.com>

Dave,

"Message IDs are *the* unique identifier for an email."

True.  I'd no idea people here wouldn't know that.  But then I didn't
know I had to read parser etc before commenting on syntax etc.

John.

From harbour@lists.harbour-project.org  Mon Jan 15 05:19:26 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Mon Jan 15 05:19:26 2001
Subject: [Harbour] Inline C
Message-ID: <200101150514_MC2-C1BF-85F7@compuserve.com>

Phil,

"If it's on, it increases the chance that people will use it and find out=
 =

how to get it evolved to where it belongs. If it's off by default =

chances are good that won't happen."

If it's off by default, those who really want it will enable it and
then use it, thus any evolution should still occur.

If you wanted to use it, wouldn't you enable it?

"If you are going to blame the knife for the =

murder, then we should ban all knives, shouldn't we? I mean, it =

couldn't be the programmers fault."

That analogy is unfortunately past where it's accurate.  If we have to
talk about knives, let's say that disabling this feature by default is
the equivalent of having a knife in a sheath or having a knife with a
blade safely folded away until you need it.

John.

From harbour@lists.harbour-project.org  Mon Jan 15 12:38:02 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Mon Jan 15 12:38:02 2001
Subject: [Harbour] Harbour and Graphics mode
In-Reply-To: <001d01c07d9c$c18409c0$0100007f@sl.conex.net>
Message-ID: <200101151737.f0FHbqN22786@thor.parrett.net>

** Reply to message from "Luiz Rafael Culik Guimaraes"
<culik@nh.conex.com.br> on Sat, 13 Jan 2001 18:08:03 -0200

At the current rate of adding features that do nothing to advance
Harbour towards completion of even console mode, I'd have to estimate
about 20 years...

> An Brazilian fellow asked me when we will have harbour full native mode for
> GUI applications
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Mon Jan 15 12:40:03 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Mon Jan 15 12:40:03 2001
Subject: [Harbour] Inline C
In-Reply-To: <20010113212953.C9113@hagbard.davep.org>
References: <3A5FA65E.6203.2069AE0C@localhost> ; <20010113071040.N9113@hagbard.davep.org>
 <3A6066E7.22160.2359C343@localhost> <3A6066E7.22160.2359C343@localhost>
 ; from midnight@the-oasis.net on Sat, Jan 13, 2001 at 02:32:07PM -0500
Message-ID: <200101151739.f0FHdmN22925@thor.parrett.net>

** Reply to message from Dave Pearson <davep@davep.org> on Sat, 13 Jan
2001 21:29:53 +0000

In the US, "railing" means to argue against something. It is usually
used together with "ranting", as in "He ranted and railed to no avail."

> In my dictionary railing means
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Mon Jan 15 12:42:02 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Mon Jan 15 12:42:02 2001
Subject: [Harbour] Inline C
In-Reply-To: <NCBBJKNMIDPJNLJCHCHIEEJLFMAA.harbour@winfakt.com>
References: <20010114075531.D9113@hagbard.davep.org>
Message-ID: <200101151741.f0FHfkN23116@thor.parrett.net>

** Reply to message from "Patrick Mast" <harbour@winfakt.com> on Sun,
14 Jan 2001 09:44:13 +0100

They do when you choose to display full headers.

> Those message ID's don't show up in my eMail reader...
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Mon Jan 15 13:13:02 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Mon Jan 15 13:13:02 2001
Subject: [Harbour] Inline C
In-Reply-To: <200101151739.f0FHdmN22925@thor.parrett.net>; from dholm@jsd-llc.com on Mon, Jan 15, 2001 at 12:39:35PM -0500
References: <3A5FA65E.6203.2069AE0C@localhost> <20010113071040.N9113@hagbard.davep.org> <3A6066E7.22160.2359C343@localhost> <3A6066E7.22160.2359C343@localhost> <20010113212953.C9113@hagbard.davep.org> <200101151739.f0FHdmN22925@thor.parrett.net>
Message-ID: <20010115180755.J9113@hagbard.davep.org>

On Mon, Jan 15, 2001 at 12:39:35PM -0500, David G. Holm wrote:

> ** Reply to message from Dave Pearson <davep@davep.org> on Sat, 13 Jan
> 2001 21:29:53 +0000
> 
> In the US, "railing" means to argue against something. It is usually used
> together with "ranting", as in "He ranted and railed to no avail."

So it's a sort of "fire and brimstone" kind of argument against something?
Emotional and heated as opposed to dispassionate and reasoned? If that's the
case it would tie in with how I understand how most people use the term.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Mon Jan 15 13:17:02 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Mon Jan 15 13:17:02 2001
Subject: [Harbour] Inline C
In-Reply-To: <20010115180755.J9113@hagbard.davep.org>
References: <3A5FA65E.6203.2069AE0C@localhost> <20010113071040.N9113@hagbard.davep.org>
 <3A6066E7.22160.2359C343@localhost> <3A6066E7.22160.2359C343@localhost>
 <20010113212953.C9113@hagbard.davep.org> <200101151739.f0FHdmN22925@thor.parrett.net>
 <200101151739.f0FHdmN22925@thor.parrett.net> ; from dholm@jsd-llc.com on Mon, Jan 15, 2001 at 12:39:35PM -0500
Message-ID: <200101151816.f0FIGVN26113@thor.parrett.net>

** Reply to message from Dave Pearson <davep@davep.org> on Mon, 15 Jan
2001 18:07:55 +0000

Yes, indeed.

> So it's a sort of "fire and brimstone" kind of argument against something?
> Emotional and heated as opposed to dispassionate and reasoned?
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Mon Jan 15 13:39:02 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Mon Jan 15 13:39:02 2001
Subject: [Harbour] Harbour and Graphics mode
In-Reply-To: <200101151737.f0FHbqN22786@thor.parrett.net>
References: <001d01c07d9c$c18409c0$0100007f@sl.conex.net>
Message-ID: <3A635253.26042.512B31F@localhost>

On 15 Jan 2001, at 12:37, David G. Holm wrote:

> At the current rate of adding features that do nothing to advance
> Harbour towards completion of even console mode, I'd have to estimate
> about 20 years...

  I think that this statement is not fair, at least for the most of 
harbour developers.

  The real question should be: what is or what it should be a native GUI? 
Please notice also that there will be at least two commercial GUIs 
although for Windows only.

Regards, Ryszard

From harbour@lists.harbour-project.org  Mon Jan 15 14:28:02 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Mon Jan 15 14:28:02 2001
Subject: [Harbour] Pointless Harbour Features
In-Reply-To: <3A635253.26042.512B31F@localhost>
References: <001d01c07d9c$c18409c0$0100007f@sl.conex.net> <200101151737.f0FHbqN22786@thor.parrett.net>
Message-ID: <200101151927.f0FJRNN32302@thor.parrett.net>

** Reply to message from "Ryszard Glab" <rglab@imid.med.pl> on Mon, 15
Jan 2001 19:41:07 +0100

>   I think that this statement is not fair, at least for the most of 
> harbour developers.

While it is true that most Harbour developers aren't working on
features that do nothing to advance the development of Harbour's core
features, how can the amount of time spent on disputing the pointless
inline C feature not have delayed the ongoing development of core
features? It certainly does nothing to motivate me to return to Harbour
development.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Mon Jan 15 15:33:05 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Mon Jan 15 15:33:05 2001
Subject: [Harbour] RDD changes
Message-ID: <3A636D8E.3683.57D11E1@localhost>

  During working on DBFCDX support I decided to change some RDD 
architecture to get a better support for future extensions.
  One of the main missing, IMO, of Clipper RDD design was a very tight 
linking between RDD drivers. This caused that for example, DBFCDX had 
hardcoded inheritance from DBF driver. It also contained a code that 
serviced both memo files and indices. To support BLOB files instead of 
FPT the separate driver was used that included repeated code for CDX 
index handling. It was not possible to use additional drivers that can be 
placed between existing drivers, for example, a driver that can handle 
additional types of field or data encryption.
  To ommit these limitations I have splitted a current RDD code into 
smaller pieces placed in a separate directories:
\hrdd
 \dbf
 \ntx
 \dbt
 \cdx
 \fpt
 \blob
   ...etc

  This separation will allow to build a drivers at the compilation phase 
or at the runtime due to a new inheritance design.
For hardcoded drivers linking (the compilation stage) can be created with 
a call to RDDREGISTER function. For example DBFCDX driver can be 
initialized with a file DBFCDX.PRG containing:

ANNOUNCE DBFCDX

INIT PROCEDURE DBFCDXInit

  RDDREGISTER( "DBFCDX", RDT_FULL, @_RDDDBF(), @_RDDFPT(), @_RDDCDX() )
  RDDREGISTER( "SDF", RDT_TRANSFER, @_RDDSDF() )
  RDDREGISTER( "DELIM", RDT_TRANSFER, @_RDDDELIM() )

RETURN

It will be possible to build a complete inheritance tree at runtime 
instead of hardcoding it. For example:

INIT PROCEDURE MYDBFInit

  RDDREGISTER( "DBF", RDT_FULL, @_RDDDBF() )
  RDDINHERIT( "DBF", "DBFMEMO", RDT_FULL, @_MYMEMO() )
  RDDINHERIT( "DBFMEMO", "MYDBFCDX", RDT_FULL, @_RDDCDX() )

RETURN

  However this is occupied with some restrictions in the RDD drivers. The 
biggest changes are:
-no more static tables with the list of super driver virtual functions 
tables
-no more fixed workarea structure (since drivers can be linked in almost 
any order) - every driver will have to define its own structure with no 
including of WORKAREA of DBF structure
-virtual functions are no longer a workarea methods,  they are a rdd 
driver methods
-to support an inheritance an additional parameter have to be passed to 
the virtual functions - a pointer to the rdd driver (structure) that owns 
a function
-to access an workarea belonging to a given driver an additional function 
call (or macro) will be required (the contignous memory block that is a 
sum of all inherited workareas is always passed to a virtual function)
-the calls of SELF_... and SUPER_... functions will be the same although 
they will be translated into a different code.

  To get easier transition from a current code there will be available 
some macros:
To build a virtual table:

In hbrddapi.h:

//------------------------
#if !defined( HB_RDD_AREATYPE )
    #define HB_RDD_AREATYPE HB_AREA_PTR
#endif

#if !defined( HB_RDD_SELFVAR )
    #define HB_RDD_SELFVAR pSelfRdd
#endif
#define HB_RDD_SELFDECL    HB_RDD_PTR HB_RDD_SELFVAR
#define HB_RDD_SELFAREA(wa) \
 ((HB_RDD_AREATYPE) ((BYTE *)wa + HB_RDD_SELFVAR->waOffset))

#if !defined( HB_RDD_PREFIX )
    #define HB_RDD_PREFIX hb_rdd_
ENDIF

#define HB_RDD_VTABLE_NULL( method )    NULL


#define HB_RDD_VTABLE_BOF               (DBENTRYP_BP  ) HB_RDD_PREFIX##bof
#define HB_RDD_VTABLE_EOF               (DBENTRYP_BP  ) HB_RDD_PREFIX##eof
...
/* Virtual table functions default declarations
 */
#define HB_RDD_BOF( wa, lBof )\
 static ERRCODE HB_RDD_PREFIX##bof( HB_RDD_SELFDECL, HB_AREA_PTR wa, BOOL *lBof )
....
/* Movement and positioning methods */

#define HB_RDD_SELF_BOF( wa, lBof )\
  ( *HB_RDD_SELFVAR->pTable->bof.func )( HB_RDD_SELFVAR->pTable->bof.rdd, wa, lBof )
#define HB_RDD_SUPER_BOF( wa, lBof )\
  ( *HB_RDD_SELFVAR->superTable.bof.func )( HB_RDD_SELFVAR->superTable.bof.rdd, wa, 
lBof )
//-------------------

and in a driver code:

#define HB_RDD_PREFIX cdx
#define HB_RDD_AREATYPE CDXAREA
#include "hbrddapi.h"

HB_RDD_BOF( wa, lBof )
{
  CDXAREA_PTR pArea = HB_RDD_SELFAREA( wa )
  SUPER_BOF( wa, lBof );
  *lBof = pArea->cdxBof;
}

static RDDFUNCS cdxTable = {
  HB_RDD_VTABLE_BOF,
  HB_RDD_VTABLE_EOF,
...
  HB_RDD_VTABLE_NULL( HB_RDD_VTABLE_GETVALUE ),
...
}

  Additionally a very few virtual table functions will have to change 
their beahaviour (for example 'structSize' will have to return the sum of 
its own rdd driver structure and the size returned by a super driver).

  These are the outlines of RDD changes. I will continue working on it 
regardless of their acceptance although I will try to include all 
opinions. If this will not gain any acceptance then I will place it in 
the contrib subdirectory.

Regards, Ryszard

From harbour@lists.harbour-project.org  Mon Jan 15 16:37:01 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Mon Jan 15 16:37:01 2001
Subject: [Harbour] RDD changes
References: <3A636D8E.3683.57D11E1@localhost>
Message-ID: <004d01c07f3b$420fbea0$0100007f@sl.conex.net>

Ryszard

Does with the change you are proposing, we will have at least an full
working RDD

Regards

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Mon Jan 15 17:42:02 2001
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Mon Jan 15 17:42:02 2001
Subject: [Harbour] We need a way to escape this mess.
Message-ID: <3A63729E.DD96C0B2@libero.it>

Captains and sailors,

we cannot afford to spend weeks disputing things like inline C. 
We don't have so much resources to waste.

So I think we should agree that from now on and until after Harbour v1.0
is ready:


EVERY ONE WITH WRITE ACCESS TO THE CVS __CAN NOT__ ADD CODE IF THIS
CODE:

1) DOES NOT FIX OUTSTANDING BUGS .OR.
2) DOES NOT COMPLETE AN EXISTING FEATURE .OR.
3) IS NOT NEEDED TO REACH CLIPPER 5.2 COMPATIBILITY.

If someone wants to write something _outside_ of given rules there is a
\contrib tree which is there exactly for this purpose.

I think we all need to agree with such rules or in a few months we will
be without forces to write _needed_ code.



regards.



-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia


From harbour@lists.harbour-project.org  Mon Jan 15 17:45:04 2001
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Mon Jan 15 17:45:04 2001
Subject: [Harbour] RDD changes
References: <3A636D8E.3683.57D11E1@localhost>
Message-ID: <3A637D5B.90E6EAD2@libero.it>

Ryszard,

Alaska has a similar thing, that is its rdd can mix a .dbf reader/writer
with any kind on index reader/writer, or, in other words, you can index
a comma delimited file.

I think we could use your proposed new RDD system (given that, as of
now, we don't have any single rdd working) but I'd like to know whether
your changes make it harder for a developer of clipper RDDs to port
his/her work under Harbour.

regards.


Ryszard Glab ha scritto:
> 
>   During working on DBFCDX support I decided to change some RDD
> architecture to get a better support for future extensions.
>   One of the main missing, IMO, of Clipper RDD design was a very tight
> linking between RDD drivers. This caused that for example, DBFCDX had
> hardcoded inheritance from DBF driver. It also contained a code that
> serviced both memo files and indices. To support BLOB files instead of
> FPT the separate driver was used that included repeated code for CDX
> index handling. It was not possible to use additional drivers that can be
> placed between existing drivers, for example, a driver that can handle
> additional types of field or data encryption.
>   To ommit these limitations I have splitted a current RDD code into
> smaller pieces placed in a separate directories:
> \hrdd
>  \dbf
>  \ntx
>  \dbt
>  \cdx
>  \fpt
>  \blob
>    ...etc
> 
>   This separation will allow to build a drivers at the compilation phase
> or at the runtime due to a new inheritance design.
> For hardcoded drivers linking (the compilation stage) can be created with
> a call to RDDREGISTER function. For example DBFCDX driver can be
> initialized with a file DBFCDX.PRG containing:
> 
> ANNOUNCE DBFCDX
> 
> INIT PROCEDURE DBFCDXInit
> 
>   RDDREGISTER( "DBFCDX", RDT_FULL, @_RDDDBF(), @_RDDFPT(), @_RDDCDX() )
>   RDDREGISTER( "SDF", RDT_TRANSFER, @_RDDSDF() )
>   RDDREGISTER( "DELIM", RDT_TRANSFER, @_RDDDELIM() )
> 
> RETURN
> 
> It will be possible to build a complete inheritance tree at runtime
> instead of hardcoding it. For example:
> 
> INIT PROCEDURE MYDBFInit
> 
>   RDDREGISTER( "DBF", RDT_FULL, @_RDDDBF() )
>   RDDINHERIT( "DBF", "DBFMEMO", RDT_FULL, @_MYMEMO() )
>   RDDINHERIT( "DBFMEMO", "MYDBFCDX", RDT_FULL, @_RDDCDX() )
> 
> RETURN
> 
>   However this is occupied with some restrictions in the RDD drivers. The
> biggest changes are:
> -no more static tables with the list of super driver virtual functions
> tables
> -no more fixed workarea structure (since drivers can be linked in almost
> any order) - every driver will have to define its own structure with no
> including of WORKAREA of DBF structure
> -virtual functions are no longer a workarea methods,  they are a rdd
> driver methods
> -to support an inheritance an additional parameter have to be passed to
> the virtual functions - a pointer to the rdd driver (structure) that owns
> a function
> -to access an workarea belonging to a given driver an additional function
> call (or macro) will be required (the contignous memory block that is a
> sum of all inherited workareas is always passed to a virtual function)
> -the calls of SELF_... and SUPER_... functions will be the same although
> they will be translated into a different code.
> 
>   To get easier transition from a current code there will be available
> some macros:
> To build a virtual table:
> 
> In hbrddapi.h:
> 
> //------------------------
> #if !defined( HB_RDD_AREATYPE )
>     #define HB_RDD_AREATYPE HB_AREA_PTR
> #endif
> 
> #if !defined( HB_RDD_SELFVAR )
>     #define HB_RDD_SELFVAR pSelfRdd
> #endif
> #define HB_RDD_SELFDECL    HB_RDD_PTR HB_RDD_SELFVAR
> #define HB_RDD_SELFAREA(wa) \
>  ((HB_RDD_AREATYPE) ((BYTE *)wa + HB_RDD_SELFVAR->waOffset))
> 
> #if !defined( HB_RDD_PREFIX )
>     #define HB_RDD_PREFIX hb_rdd_
> ENDIF
> 
> #define HB_RDD_VTABLE_NULL( method )    NULL
> 
> #define HB_RDD_VTABLE_BOF               (DBENTRYP_BP  ) HB_RDD_PREFIX##bof
> #define HB_RDD_VTABLE_EOF               (DBENTRYP_BP  ) HB_RDD_PREFIX##eof
> ...
> /* Virtual table functions default declarations
>  */
> #define HB_RDD_BOF( wa, lBof )\
>  static ERRCODE HB_RDD_PREFIX##bof( HB_RDD_SELFDECL, HB_AREA_PTR wa, BOOL *lBof )
> ....
> /* Movement and positioning methods */
> 
> #define HB_RDD_SELF_BOF( wa, lBof )\
>   ( *HB_RDD_SELFVAR->pTable->bof.func )( HB_RDD_SELFVAR->pTable->bof.rdd, wa, lBof )
> #define HB_RDD_SUPER_BOF( wa, lBof )\
>   ( *HB_RDD_SELFVAR->superTable.bof.func )( HB_RDD_SELFVAR->superTable.bof.rdd, wa,
> lBof )
> //-------------------
> 
> and in a driver code:
> 
> #define HB_RDD_PREFIX cdx
> #define HB_RDD_AREATYPE CDXAREA
> #include "hbrddapi.h"
> 
> HB_RDD_BOF( wa, lBof )
> {
>   CDXAREA_PTR pArea = HB_RDD_SELFAREA( wa )
>   SUPER_BOF( wa, lBof );
>   *lBof = pArea->cdxBof;
> }
> 
> static RDDFUNCS cdxTable = {
>   HB_RDD_VTABLE_BOF,
>   HB_RDD_VTABLE_EOF,
> ...
>   HB_RDD_VTABLE_NULL( HB_RDD_VTABLE_GETVALUE ),
> ...
> }
> 
>   Additionally a very few virtual table functions will have to change
> their beahaviour (for example 'structSize' will have to return the sum of
> its own rdd driver structure and the size returned by a super driver).
> 
>   These are the outlines of RDD changes. I will continue working on it
> regardless of their acceptance although I will try to include all
> opinions. If this will not gain any acceptance then I will place it in
> the contrib subdirectory.
> 
> Regards, Ryszard
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Mon Jan 15 17:58:02 2001
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Mon Jan 15 17:58:02 2001
Subject: [Harbour] We need a way to escape this mess.
In-Reply-To: <3A63729E.DD96C0B2@libero.it>
Message-ID: <200101152238.f0FMcZn17978@ev6.be.wanadoo.com>

Maurilio

Yes, I 100 % agree !

I'm so tired of unfinite discussion I even don't read it anymore, just 
shutting down my computer after having deleted all annoying mails 
...

It's really time we _all_ focuse on the next goal, beta 1.0 !

I'm ready for it and I'm sure many other do so. I would propose we 
all create a list of needed or open projects or module so as we can 
split the jobs between each other to reach the goal all together. 

It's time to prove the HARBOUR power really exist !

See you all and thank to you Maurillio to write this message.

> Captains and sailors,
> 
> we cannot afford to spend weeks disputing things like inline C. 
> We don't have so much resources to waste.
> 
> So I think we should agree that from now on and until after Harbour v1.0
> is ready:
> 
> 
> EVERY ONE WITH WRITE ACCESS TO THE CVS __CAN NOT__ ADD CODE IF THIS
> CODE:
> 
> 1) DOES NOT FIX OUTSTANDING BUGS .OR.
> 2) DOES NOT COMPLETE AN EXISTING FEATURE .OR.
> 3) IS NOT NEEDED TO REACH CLIPPER 5.2 COMPATIBILITY.
> 
> If someone wants to write something _outside_ of given rules there is a
> \contrib tree which is there exactly for this purpose.
> 
> I think we all need to agree with such rules or in a few months we will be
> without forces to write _needed_ code.
> 
> 
> 
> regards.
> 
> 
> 
> -- 
> 
>  __________                   
> |  |  | |__| md2520@mclink.it 
> |_|_|_|____| Team OS/2 Italia
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Mon Jan 15 18:54:02 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Mon Jan 15 18:54:02 2001
Subject: [Harbour] We need a way to escape this mess.
References: <200101152238.f0FMcZn17978@ev6.be.wanadoo.com>
Message-ID: <000d01c07f4e$5c9ddc80$0100007f@sl.conex.net>

JF, Maurilio
Subject: Re: [Harbour] We need a way to escape this mess.


> Maurilio
>
> Yes, I 100 % agree !
>
> I'm so tired of unfinite discussion I even don't read it anymore, just
> shutting down my computer after having deleted all annoying mails
> ...
>
> It's really time we _all_ focuse on the next goal, beta 1.0 !
>
> I'm ready for it and I'm sure many other do so. I would propose we
> all create a list of needed or open projects or module so as we can
> split the jobs between each other to reach the goal all together.
>
> It's time to prove the HARBOUR power really exist !
>
> See you all and thank to you Maurillio to write this message.

I also agree with you both. Now is time to Harbour Show its Power. Let show
to all people in world that use or used  Clipper, That Harbour is the
neccessary tool to create his app, not Micro$oft VB

Regards

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Mon Jan 15 19:01:02 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Mon Jan 15 19:01:02 2001
Subject: [Harbour] Opinion Need
Message-ID: <004e01c07f3b$4e70fec0$0100007f@sl.conex.net>

> John
>
>
> > Luiz,
> >
> > "Hbmake use the same switch style as Borland make utility."
> >
> > It allows multiple -D doesn't it?
> >
> > "If you are against that hbmake use multiple macros with the -D switch
let
> > vote."
> >
> > I'm not so much against that as in favour of keeping to what is a
> > very long-lived and very very heavily used standard.  Its problems
> > are well known.  Borland's approach may have problems on other
> > platforms, e.g. where semi-colon (;) is a command separator - such as
> > Linux & UNIX.
> Ok, if the semi-colon(;), is an command separator in Linux, i can change
the
> separator to an comma(,)
>
> > "The multiple macro used with the -D switch is a behavior that i was
> dreaming
> > to make utilities to have."


Need   your opinion on this
 Regards

 Luiz Rafael Culik






From harbour@lists.harbour-project.org  Mon Jan 15 19:39:02 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Mon Jan 15 19:39:02 2001
Subject: [Harbour] We need a way to escape this mess.
In-Reply-To: <3A63729E.DD96C0B2@libero.it>; from maurilio.longo@libero.it on Mon, Jan 15, 2001 at 10:58:54PM +0100
References: <3A63729E.DD96C0B2@libero.it>
Message-ID: <20010115231511.Q9113@hagbard.davep.org>

On Mon, Jan 15, 2001 at 10:58:54PM +0100, Maurilio Longo wrote:

> EVERY ONE WITH WRITE ACCESS TO THE CVS __CAN NOT__ ADD CODE IF THIS
> CODE:
> 
> 1) DOES NOT FIX OUTSTANDING BUGS .OR.
> 2) DOES NOT COMPLETE AN EXISTING FEATURE .OR.
> 3) IS NOT NEEDED TO REACH CLIPPER 5.2 COMPATIBILITY.

Indeed. It's a well documented fact that you need a "feature freeze" if you
ever want to stand a chance of getting out of alpha. And, even then, come
such a time as when harbour is stable and has achieved it's original goal it
should be a given that new ideas are discussed and designed before they are
dropped into CVS.

harbour is the only free software project I've ever seen where new features
are dropped into the core codebase without any prior discussion.

> If someone wants to write something _outside_ of given rules there is a
> \contrib tree which is there exactly for this purpose.

Moreover, this is free software, people with ideas for experimental features
are more then welcome to play with this in another CVS location or to make
patches available.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Mon Jan 15 20:53:01 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Mon Jan 15 20:53:01 2001
Subject: [Harbour] We need a way to escape this mess.
References: <3A63729E.DD96C0B2@libero.it>
Message-ID: <005401c07f5f$c5b1fa10$921a5e18@bh>

Maurilio:
2 months ago we agreed, if I remember correctly, that the rdd would be 5.3
compatible as it was a better interface for 3rd party  RDD development,
better design, and working toward 5.2 internally was probably just as much
work and a step backward.

(I believe Ryszard's proposal is or can be syntactically 5.3 compatible,
with added features.)

So, with the exception of the rdd not being restricted to 5.2, I agree with
your suggestion.

Brian

----- Original Message -----
From: "Maurilio Longo" <maurilio.longo@libero.it>
To: <harbour@lists.harbour-project.org>
Sent: Monday, January 15, 2001 1:58 PM
Subject: [Harbour] We need a way to escape this mess.


> Captains and sailors,
>
> we cannot afford to spend weeks disputing things like inline C.
> We don't have so much resources to waste.
>
> So I think we should agree that from now on and until after Harbour v1.0
> is ready:
>
>
> EVERY ONE WITH WRITE ACCESS TO THE CVS __CAN NOT__ ADD CODE IF THIS
> CODE:
>
> 1) DOES NOT FIX OUTSTANDING BUGS .OR.
> 2) DOES NOT COMPLETE AN EXISTING FEATURE .OR.
> 3) IS NOT NEEDED TO REACH CLIPPER 5.2 COMPATIBILITY.
>
> If someone wants to write something _outside_ of given rules there is a
> \contrib tree which is there exactly for this purpose.
>
> I think we all need to agree with such rules or in a few months we will
> be without forces to write _needed_ code.
>
>
>
> regards.
>
>
>
> --
>
>  __________
> |  |  | |__| md2520@mclink.it
> |_|_|_|____| Team OS/2 Italia
>
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Mon Jan 15 23:11:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Mon Jan 15 23:11:02 2001
Subject: [Harbour] We need a way to escape this mess.
In-Reply-To: <3A63729E.DD96C0B2@libero.it>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOENCDIAA.ron@profit-master.com>

Maurilio,

We can not adopt, this kind of approach. Developers are creative creatures.
We don't get paid for this work, and thus this kind of control is
impossible.

As to the facts, the inline discussion, didn't take weeks, but rather [very
intense] 2-3 days. It was preceded by few weeks of practically no traffic.
As much as I hates these arguments, I can't say, I like the quiet any more.

If we follow your advice, major contributions, like current Ryszard RDD
efforts, can not take place. I'd rather argue such contributions, then
automatically disallow them.

This kind of control, is as counter productive, as demanding that all
developers must contribute at least X fixes per month, dictate tasks list to
developers, etc.

I think I contributed as much as anyone else to core fixes, adding missing
functionality etc., since 0.35. I wouldn't have done any of these fixes, if
I was not allowed to explore other areas, that are not direct fixes.

I can't imagine that Harbour will be completed any sooner, if contributors
like me are not welcomed.

I'll definitely not take any part in this project, if your suggestion is a
majority opinion.

Ron

> Captains and sailors,
>
> we cannot afford to spend weeks disputing things like inline C.
> We don't have so much resources to waste.
>
> So I think we should agree that from now on and until after Harbour v1.0
> is ready:
>
>
> EVERY ONE WITH WRITE ACCESS TO THE CVS __CAN NOT__ ADD CODE IF THIS
> CODE:
>
> 1) DOES NOT FIX OUTSTANDING BUGS .OR.
> 2) DOES NOT COMPLETE AN EXISTING FEATURE .OR.
> 3) IS NOT NEEDED TO REACH CLIPPER 5.2 COMPATIBILITY.
>
> If someone wants to write something _outside_ of given rules there is a
> \contrib tree which is there exactly for this purpose.
>
> I think we all need to agree with such rules or in a few months we will
> be without forces to write _needed_ code.
>
>
>
> regards.


From harbour@lists.harbour-project.org  Mon Jan 15 23:47:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Mon Jan 15 23:47:02 2001
Subject: [Harbour] Inline C
In-Reply-To: <200101150514_MC2-C1BF-85F4@compuserve.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKKENDDIAA.ron@profit-master.com>

John,

You posted few messages that warrant, my reply, sadly, we don't have
infinite time to discuss these in details, at least not in this forum.
Instead I'll try to clarify some of your concerns.

When I suggested you should have known about the parsing capabilities, I
didn't mean you had to read the code, but rather the ChangeLog notices. In
this case I did post:

--------------------------------
2001-01-11 20:10 UTC-0800 Ron Pinkas <ron@profit-master.com>
   * source/compiler/harbour.l
   * source/compiler/harbour.slx
     + Added logic to ignore, rest of line after //
                              content of /**/ comments
                              content of strings and char constants
                              escape codes within strings and char constants
   * tests/inline_c.prg
     + Added sample comments and strings containing { and \".
--------------------------------

I still believe you should have seen/read/considered all ChangeLog notices,
related to a subject you debate so passionately.

As to what is constructive/censorship, and what is not: Suggesting,
alternate syntax *is* constructive. Suggesting a feature is not valuable and
should be removed, is unconstructive and has censorship qualities.

I would never have dared suggesting something you put efforts into
developing, is:

"not needed, let alone needed in this form, let alone now."

*I* instead would have assumed, that if someone I even remotely respect,
took the time to develop such feature, it sure is something he considered
needed and valuable. If I was to take the unlikely route, of debating him,
as the needability of the feature, I would have taken every account, of the
cost of the feature, and only proceeded if I found cost is just too
expensive. If I though the feature can/should be refined, I would have made
sure, my input *is*, and is perceived to be, constructive suggestions for
improvements.

Do you like, people telling you a feature you developed, should be removed,
rather than give clear suggestions, as to how it might be improved?

Either way, I believe we exhausted this medium of communication. In few
days, I'll try to summarize all input, [as of course you can do to], and
I'll ask the group to take a vote.

Ron


From harbour@lists.harbour-project.org  Tue Jan 16 02:13:02 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Tue Jan 16 02:13:02 2001
Subject: [Harbour] New rdd func?
Message-ID: <000901c07f8c$71ac7350$921a5e18@bh>

Ryszard and others:
In working with scrollbar positioning and elsewhere, it is very common to
need to know "Is there a controlling index or am I in Natural order".
Unless I missed something, it is necessary to test something like
    IF empty(ordSetFocus())  .... pick your favorite ord* function

Since all these functions create quite a few calls, and since the info is in
a pArea-> member ripe for testing, I am surfacing a function for ADS to
simply return this value.  Does it make sense to add this as an RDD
extension?

HB_FUNC( ADSISINDEXED )
{
   hb_retl(pArea->hOrdCurrent)
}

Brian Hays
Abacus Data Systems, Inc.



From harbour@lists.harbour-project.org  Tue Jan 16 03:13:02 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Tue Jan 16 03:13:02 2001
Subject: [Harbour] RDD changes
In-Reply-To: <3A636D8E.3683.57D11E1@localhost>
Message-ID: <001201c07f93$dbf720a0$0f2aa8c0@antonio>

Ryszard,

> It will be possible to build a complete inheritance tree at runtime 
> instead of hardcoding it. 

Great!!! Go for it!


Thanks so much for your work and effort

Antonio



From harbour@lists.harbour-project.org  Tue Jan 16 03:30:05 2001
From: harbour@lists.harbour-project.org (Eric Kiernan)
Date: Tue Jan 16 03:30:05 2001
Subject: [Harbour] Inline C
References: <LOBBKAFMMFGJIKLMEPAKKENDDIAA.ron@profit-master.com>
Message-ID: <3A640636.7237332C@home.com>

As a "lurker", I'm going to finally put in my 2 cents worth on whole
in-line c issue.  I'm against it ( for awhile ), but not for the reasons
that y'all might think.  I'm not sure it has been specified as to why
you want to include C code, but as a Clipper programmer, I have had to
include c obj files for certain reasons, and sometimes have written a C
program instead of using Clipper.  Some of those reasons include doing
specific things with hardware devices, and/or parsing very large text
files, etc at much higher rates of speed.  

The reason that I am against inline code is that the developers of
Harbour might code a program in Harbour, and then get frustrated because
they can't do something which they would be able to do in C.  And then
that programmer would think of a generic way to accomplish a certain
thing, and msgs would fly about, and then a nice thing might be added to
the Harbor language.  So i WANT you guys to get frustrated about not
being able to do it in Clipper standard code

From harbour@lists.harbour-project.org  Tue Jan 16 03:46:01 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Tue Jan 16 03:46:01 2001
Subject: [Harbour] We need a way to escape this mess.
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKOENCDIAA.ron@profit-master.com>; from ron@profit-master.com on Mon, Jan 15, 2001 at 08:12:02PM -0800
References: <3A63729E.DD96C0B2@libero.it> <LOBBKAFMMFGJIKLMEPAKOENCDIAA.ron@profit-master.com>
Message-ID: <20010116084346.T9113@hagbard.davep.org>

On Mon, Jan 15, 2001 at 08:12:02PM -0800, Ron Pinkas wrote:

> We can not adopt, this kind of approach. Developers are creative
> creatures. We don't get paid for this work, and thus this kind of control
> is impossible.

Actually, this kind of control is very possible, it happens all the time in
the world of free software. You'll sometimes see it called "self control",
perhaps even "community spirit". There's no sense in saying it can't and
doesn't happen when it can and does.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Tue Jan 16 03:46:22 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Tue Jan 16 03:46:22 2001
Subject: [Harbour] Inline C
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKKENDDIAA.ron@profit-master.com>; from ron@profit-master.com on Mon, Jan 15, 2001 at 08:48:02PM -0800
References: <200101150514_MC2-C1BF-85F4@compuserve.com> <LOBBKAFMMFGJIKLMEPAKKENDDIAA.ron@profit-master.com>
Message-ID: <20010116084116.S9113@hagbard.davep.org>

On Mon, Jan 15, 2001 at 08:48:02PM -0800, Ron Pinkas wrote:

> As to what is constructive/censorship, and what is not: Suggesting,
> alternate syntax *is* constructive. Suggesting a feature is not valuable
> and should be removed, is unconstructive and has censorship qualities.

If someone has a good reason why a feature shouldn't be added to a body of
code then it should be aired without fear of being branded as an attempt at
censorship. Suggesting that someone is a "censor" because they think the
feature is a bad idea much worse than actually saying why you think the
feature is bad IMO.

Why would you seek to brand those who see problems with the inclusion of
inline C as censors?

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Tue Jan 16 06:12:02 2001
From: harbour@lists.harbour-project.org (Juan Agustin Barriga)
Date: Tue Jan 16 06:12:02 2001
Subject: [Harbour] Harbour and Graphics mode
References: <200101151737.f0FHbqN22786@thor.parrett.net>
Message-ID: <000001c07fb4$f32d3180$946410ac@jharrier>

I am beginning to think the SAME!

Harrier

----- Original Message -----
From: "David G. Holm" <dholm@jsd-llc.com>
To: <harbour@lists.harbour-project.org>
Sent: Monday, January 15, 2001 1:37 PM
Subject: Re: [Harbour] Harbour and Graphics mode


> ** Reply to message from "Luiz Rafael Culik Guimaraes"
> <culik@nh.conex.com.br> on Sat, 13 Jan 2001 18:08:03 -0200
>
> At the current rate of adding features that do nothing to advance
> Harbour towards completion of even console mode, I'd have to estimate
> about 20 years...
>
> > An Brazilian fellow asked me when we will have harbour full native mode
for
> > GUI applications
> --
> David G. Holm, Set Captain and all around
> Harbour Project Clipper Compatibility fanatic.
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Tue Jan 16 06:27:02 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Tue Jan 16 06:27:02 2001
Subject: [Harbour] Harbour and Graphics mode
In-Reply-To: <000001c07fb4$f32d3180$946410ac@jharrier>
Message-ID: <000001c07fae$9d937e60$0f2aa8c0@antonio>

I do believe, once Harbour 1.0 is ready, we may
start discussing the foundation for a multiplatform
Class TForm.

> I am beginning to think the SAME!

Antonio


From harbour@lists.harbour-project.org  Tue Jan 16 06:49:02 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Tue Jan 16 06:49:02 2001
Subject: [Harbour] RDD changes
Message-ID: <200101160648_MC2-C1D8-F9DD@compuserve.com>

Ryszard,

I hope those who know lots about RDDs will comment. :-)  I see some
have already; it'd also be nice to hear from Harrier, the Mediator
people, and any others (ADS?).  A more flexible design sounds good
to me, of course. <BG>

John.

From harbour@lists.harbour-project.org  Tue Jan 16 06:49:22 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Tue Jan 16 06:49:22 2001
Subject: [Harbour] Harbour and Graphics mode
Message-ID: <200101160648_MC2-C1D8-F9DF@compuserve.com>

Luiz,

(David's msg reminded me)

"An Brazilian fellow asked me when we will have harbour full native mode =
for
GUI applications"

For which GUI APIs?  Mac?  GTK+?  Qt?  Win32?  (Etc.)

John.

From harbour@lists.harbour-project.org  Tue Jan 16 06:49:54 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Tue Jan 16 06:49:54 2001
Subject: [Harbour] New rdd func?
Message-ID: <200101160648_MC2-C1D8-F9DC@compuserve.com>

Brian,

"Does it make sense to add this as an RDD extension?

Yes, please.  (Providing the RDD gurus agree. :-)

You mentioned scrollbar pos. - did you already hit the next step of
needing at least an approximation of where the current record is in
the natural/controlling order?  And preferably getting a _quick_
answer?  I mention the speed because, as an example, NtxPos() is too
slow on large DBFs to be much use without painful effort.

This could mean either that DBORDERINFO's DBOI_POSITION may need to
be fast or that there's a "good enough" approximation available.  At
least one product provides a percentage, but any reasonable approx.
should be OK.

However, maybe there are RDDs where this would be too hard?  ODBC?

John.

From harbour@lists.harbour-project.org  Tue Jan 16 06:50:17 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Tue Jan 16 06:50:17 2001
Subject: [Harbour] Inline C
Message-ID: <200101160648_MC2-C1D8-F9DB@compuserve.com>

Ron,

"* source/compiler/harbour.slx
     + Added logic to ignore, rest of line after //
                              content of /**/ comments
                              content of strings and char constants
                              escape codes within strings and char consta=
nts"

That didn't (still doesn't) tell me much regarding inline let alone ;|}

"Suggesting a feature is not valuable and
should be removed, is unconstructive and has censorship qualities."

When was it I said it should be removed?  I suggested disabling it
by default, which is not at all the same thing.  IAC, "censor" as
you previously said, has connotations which really don't suit the
situation.

JS> "not needed, let alone needed in this form, let alone now."

In the context of trying to get to 0.36 I still think that.

"*I* instead would have assumed, that if someone I even remotely respect,=

took the time to develop such feature, it sure is something he considered=

needed and valuable."

I'm not saying you don't think it's valuable (nor are you alone).

"If I was to take the unlikely route, of debating him,
as the needability of the feature, I would have taken every account, of t=
he
cost of the feature, and only proceeded if I found cost is just too
expensive. If I though the feature can/should be refined, I would have ma=
de
sure, my input *is*, and is perceived to be, constructive suggestions for=

improvements."

I've suggested improvements.  Writing every message so that it "is
perceived to be, constructive" is hard.  I cannot say all yours come
across that way.  I'm happy (certainly willing) to plead guilty to
that, too.

"Do you like, people telling you a feature you developed, should be remov=
ed,
rather than give clear suggestions, as to how it might be improved?"

I cannot recall that happening.  That may well be because I don't drop
features into any project (except my own) without discussion first.

If I did add features without such discussion, I'd expect at least
heated reactions and very likely far worse.

John.

From harbour@lists.harbour-project.org  Tue Jan 16 06:55:03 2001
From: harbour@lists.harbour-project.org (Juan Agustin Barriga)
Date: Tue Jan 16 06:55:03 2001
Subject: [Harbour] RDD changes
References: <3A636D8E.3683.57D11E1@localhost> <3A637D5B.90E6EAD2@libero.it>
Message-ID: <002901c07fba$c88afb50$946410ac@jharrier>

The changes proposed by Ryszard will undoubtly break my RDD code, which, by
the way, IS FULLY working. Harbour itself cannot say this. Of course, my RDD
is USELESS until Harbour reaches Clipper 5.2 FULL support, which means many
TODOs. No production system can be ported as it is now.

I agree with Maurilio's "We need to escape this mess"

Regards
Harrier

----- Original Message -----
From: "Maurilio Longo" <maurilio.longo@libero.it>
To: <harbour@lists.harbour-project.org>
Sent: Monday, January 15, 2001 6:44 PM
Subject: Re: [Harbour] RDD changes


> Ryszard,
>
> Alaska has a similar thing, that is its rdd can mix a .dbf reader/writer
> with any kind on index reader/writer, or, in other words, you can index
> a comma delimited file.
>
> I think we could use your proposed new RDD system (given that, as of
> now, we don't have any single rdd working) but I'd like to know whether
> your changes make it harder for a developer of clipper RDDs to port
> his/her work under Harbour.
>
> regards.
>
>
> Ryszard Glab ha scritto:
> >
> >   During working on DBFCDX support I decided to change some RDD
> > architecture to get a better support for future extensions.
> >   One of the main missing, IMO, of Clipper RDD design was a very tight
> > linking between RDD drivers. This caused that for example, DBFCDX had
> > hardcoded inheritance from DBF driver. It also contained a code that
> > serviced both memo files and indices. To support BLOB files instead of
> > FPT the separate driver was used that included repeated code for CDX
> > index handling. It was not possible to use additional drivers that can
be
> > placed between existing drivers, for example, a driver that can handle
> > additional types of field or data encryption.
> >   To ommit these limitations I have splitted a current RDD code into
> > smaller pieces placed in a separate directories:
> >
> > ...(stuff deleted here)
> >
> >   These are the outlines of RDD changes. I will continue working on it
> > regardless of their acceptance although I will try to include all
> > opinions. If this will not gain any acceptance then I will place it in
> > the contrib subdirectory.
> >
> > Regards, Ryszard
> > _______________________________________________
> > Harbour mailing list
> > Harbour@lists.harbour-project.org
> > http://www.matrixlist.com/mailman/listinfo/harbour
> >
> > Thank you for participating in The Harbour Project.  Be sure to check
> > http://www.Harbour-Project.org
>
> --
>
>  __________
> |  |  | |__| md2520@mclink.it
> |_|_|_|____| Team OS/2 Italia
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Tue Jan 16 07:08:01 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Tue Jan 16 07:08:01 2001
Subject: [Harbour] RDD changes
In-Reply-To: <002901c07fba$c88afb50$946410ac@jharrier>
Message-ID: <000101c07fb4$bbeebcc0$0f2aa8c0@antonio>

Juan,

We may see Ryszard new code in a few days. I am sure
you may be able to adapt your RDD to it with minor changes.

Ryszard dynamic inheritance proposal is outstanding.

Antonio



From harbour@lists.harbour-project.org  Tue Jan 16 08:04:01 2001
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Tue Jan 16 08:04:01 2001
Subject: [Harbour] We need a way to escape this mess.
References: <LOBBKAFMMFGJIKLMEPAKOENCDIAA.ron@profit-master.com>
Message-ID: <3A64466C.7758BDA4@libero.it>

Ron,

I like your code very much, I'm using simplex since you released it but
I start to feel a little uncomfortable with all the efforts to justify
(or negate) the usefulness of something which _does not improve_ clipper
compatibility or completeness of harbour.

I urgently and strongly need a fully working clipper 5.2 compatible
compiler. I even have pieces of code where your inline C could be handy,
but I can very well live without it until I have a fully working
harbour. 
Then we will start discussing ways to make it faster and to add bells
and whistles to it.

But, first,  we should finish it. 

I see that the rate of growth is slowing down. I spent nearly all my
spare time adding code to harbour but there are tasks I don't have
skills to perform (and I'm using it to write little in house utilities
for my employer).

You have contributed far more code than me, and I'm using a lot of that
code. But I think that now we should enforce unpon ourselves a little
more strict rules to be sure that we will be able to finish it.

There are tens of messages which don't give us nothing but rantings
about inline or pragma or things like "you don't know who I am", "don't
dare speak to me this way" and so on.

I don't think that adding something to \contrib tree makes it less
usefull. Why couldn't you use an "inline C code module" which is in
\contrib\inline_c ??

Why can't you iron it out inside \contrib and then, when harbour 1.0 is
out, move it back to harbour core modules (if the need arises)?

I hope you won't stop adding things to harbour if we agree on proposed
rules.

regards. 


PS. Sorry, I'm not a native english speaker, so, maybe, something is not
so clear in my message or it sounds rude, but I'm not.


Ron Pinkas ha scritto:
> 
> Maurilio,
> 
> We can not adopt, this kind of approach. Developers are creative creatures.
> We don't get paid for this work, and thus this kind of control is
> impossible.
> 
> As to the facts, the inline discussion, didn't take weeks, but rather [very
> intense] 2-3 days. It was preceded by few weeks of practically no traffic.
> As much as I hates these arguments, I can't say, I like the quiet any more.
> 
> If we follow your advice, major contributions, like current Ryszard RDD
> efforts, can not take place. I'd rather argue such contributions, then
> automatically disallow them.
> 
> This kind of control, is as counter productive, as demanding that all
> developers must contribute at least X fixes per month, dictate tasks list to
> developers, etc.
> 
> I think I contributed as much as anyone else to core fixes, adding missing
> functionality etc., since 0.35. I wouldn't have done any of these fixes, if
> I was not allowed to explore other areas, that are not direct fixes.
> 
> I can't imagine that Harbour will be completed any sooner, if contributors
> like me are not welcomed.
> 
> I'll definitely not take any part in this project, if your suggestion is a
> majority opinion.
> 
> Ron
> 
> > Captains and sailors,
> >
> > we cannot afford to spend weeks disputing things like inline C.
> > We don't have so much resources to waste.
> >
> > So I think we should agree that from now on and until after Harbour v1.0
> > is ready:
> >
> >
> > EVERY ONE WITH WRITE ACCESS TO THE CVS __CAN NOT__ ADD CODE IF THIS
> > CODE:
> >
> > 1) DOES NOT FIX OUTSTANDING BUGS .OR.
> > 2) DOES NOT COMPLETE AN EXISTING FEATURE .OR.
> > 3) IS NOT NEEDED TO REACH CLIPPER 5.2 COMPATIBILITY.
> >
> > If someone wants to write something _outside_ of given rules there is a
> > \contrib tree which is there exactly for this purpose.
> >
> > I think we all need to agree with such rules or in a few months we will
> > be without forces to write _needed_ code.
> >
> >
> >
> > regards.
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Tue Jan 16 08:27:01 2001
From: harbour@lists.harbour-project.org (harbour@lists.harbour-project.org)
Date: Tue Jan 16 08:27:01 2001
Subject: [Harbour] RDD changes
In-Reply-To: <000101c07fb4$bbeebcc0$0f2aa8c0@antonio>
References: <002901c07fba$c88afb50$946410ac@jharrier>
Message-ID: <3A64598A.26442.66A053A@localhost>

Ryszard,

I really like your idea about RDD and I hope you could implement it 
without breaking (too much) existing code (ADS and Mediators) 
wich are the only alternative we have up to now. I really recommend 
you speak about it with Brian and Juan.

Huummm, could it be possible we coudl have two RDD 
implementation (or basis) one 5.2/5.3 compatible (based on the 
actual code) and another based on your idea ?


> Antonio Linares wrote:
> Juan,
> 
> We may see Ryszard new code in a few days. I am sure
> you may be able to adapt your RDD to it with minor changes.
> 
> Ryszard dynamic inheritance proposal is outstanding.
> 
> Antonio
> 
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre <jflefebv@mafact.com>
Mafact SA/NV
Belgium
(See us at http://www.mafact.com)
jflefebv@mafact.com


From harbour@lists.harbour-project.org  Tue Jan 16 08:30:03 2001
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Tue Jan 16 08:30:03 2001
Subject: [Harbour] RDD changes
References: <002901c07fba$c88afb50$946410ac@jharrier> <3A64598A.26442.66A053A@localhost>
Message-ID: <3A644CA9.15324132@libero.it>

JF,

I think it would be better not to have two different code bases to
develope _and_ debug :-)

regards.

jflefebv@mafact.com ha scritto:
> 
> Ryszard,
> 
> I really like your idea about RDD and I hope you could implement it
> without breaking (too much) existing code (ADS and Mediators)
> wich are the only alternative we have up to now. I really recommend
> you speak about it with Brian and Juan.
> 
> Huummm, could it be possible we coudl have two RDD
> implementation (or basis) one 5.2/5.3 compatible (based on the
> actual code) and another based on your idea ?
> 
> > Antonio Linares wrote:
> > Juan,
> >
> > We may see Ryszard new code in a few days. I am sure
> > you may be able to adapt your RDD to it with minor changes.
> >
> > Ryszard dynamic inheritance proposal is outstanding.
> >
> > Antonio
> >
> >
> > _______________________________________________
> > Harbour mailing list
> > Harbour@lists.harbour-project.org
> > http://www.matrixlist.com/mailman/listinfo/harbour
> >
> > Thank you for participating in The Harbour Project.  Be sure to check
> > http://www.Harbour-Project.org
> >
> >
> 
> Best regards,
> 
> J. Lefebvre <jflefebv@mafact.com>
> Mafact SA/NV
> Belgium
> (See us at http://www.mafact.com)
> jflefebv@mafact.com
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Tue Jan 16 09:00:03 2001
From: harbour@lists.harbour-project.org (harbour@lists.harbour-project.org)
Date: Tue Jan 16 09:00:03 2001
Subject: [Harbour] RDD changes
In-Reply-To: <3A644CA9.15324132@libero.it>
Message-ID: <3A6461A7.256.689B750@localhost>

Hi Maurilio

> I think it would be better not to have two different code bases to
> develope _and_ debug :-)

I must admit you are rigth :-( ... But on the other hand, we can't 
offord to lose the two actual working RDD so my (bad :) ) idea...

See you,

Best regards,

J. Lefebvre <jflefebv@mafact.com>
Mafact SA/NV
Belgium
(See us at http://www.mafact.com)
jflefebv@mafact.com


From harbour@lists.harbour-project.org  Tue Jan 16 14:19:02 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Tue Jan 16 14:19:02 2001
Subject: [Harbour] stack problem
In-Reply-To: <3A644CA9.15324132@libero.it>
Message-ID: <000701c07ff0$c64baa20$0f2aa8c0@antonio>

It seems still we have a problem with the stack.

This little sample works ok if a number less than 1000
is used. When 1000 is used, it issues a stack related error.

static n := 1

function Main()

   Test()

   Alert( "Test ok" )

return nil

function Test()

   if n++ < 1000
      Test()
   endif

return nil


Antonio


From harbour@lists.harbour-project.org  Tue Jan 16 14:22:01 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Tue Jan 16 14:22:01 2001
Subject: [Harbour] stack problem
In-Reply-To: <3A6461A7.256.689B750@localhost>
Message-ID: <000801c07ff1$5e32b040$0f2aa8c0@antonio>

Curiously enough, it works ok up to 997.


Antonio



From harbour@lists.harbour-project.org  Tue Jan 16 15:57:02 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Tue Jan 16 15:57:02 2001
Subject: [Harbour] Harbour and Graphics mode
References: <200101160648_MC2-C1D8-F9DF@compuserve.com>
Message-ID: <003501c07ffe$e302b4c0$0100007f@sl.conex.net>

John
> For which GUI APIs?  Mac?  GTK+?  Qt?  Win32?  (Etc.)

For all platforms that harbour support(OS/2,Win32,Linux)

Regards

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Tue Jan 16 16:16:02 2001
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Tue Jan 16 16:16:02 2001
Subject: [Harbour] 2001-01-16 22:15 GMT+1 JFL (Mafact) <jfl@mafact.com>
In-Reply-To: <003501c07ffe$e302b4c0$0100007f@sl.conex.net>
Message-ID: <200101162056.f0GKulq08579@ev6.be.wanadoo.com>

2001-01-16 22:15 GMT+1 JFL (Mafact) <jfl@mafact.com>
    *harbour/makefile.vc
    *harbour/source/compiler/genobj32.c
    *harbour/source/compiler/harbour.l
    *harbour/source/compiler/harbour.slx
    *harbour/source/compiler/hbfix.c
    *harbour/source/pp/pragma.c
     *All minor type casting for VC++
    *harbour/source/rtl/tobject.prg
     *code re-aligned (no modif)



Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Tue Jan 16 16:48:01 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Tue Jan 16 16:48:01 2001
Subject: [Harbour] New rdd func?
References: <200101160648_MC2-C1D8-F9DC@compuserve.com>
Message-ID: <002901c08007$b4e1d7c0$59f6fbce@local>

John:

>>You mentioned scrollbar pos. - did you already hit the next step ofneeding
at least an approximation...

Yes, these are the issues  I'm addressing.  ADS has an "approximation" call
that is supposed to be faster.  My impression is that it has some info as to
where a key should be in the overall balancing of the tree structure, and
returns that as a percentage (value between 0 and 1) without having to
actually go count keys.  This is of course what COMIX has to do (load as
much of the index as necessary to literally walk through the keys to count
them).  It does it very fast, but a large index across a network connection
can be a bottleneck, especially when it has to count repeatedly when
updating a scrollbar while searching.

That is of course a function of each rdd itself.  I _would_ also propose
that we add an extension to our rdd to offer a common interface to the
values necessary for scrollbars (Pos--even approximate--and Length) since
this is a fundamental issue in modern data display.  Even the ADS example
isn't quite right because even though it gives a RelativePos it does not
necessarily give the Length/Count/Max value that scroll bars need, so I
multiply it times 1,000 and keep 1,000 as the Max.

I'll keep you posted...

Brian



From harbour@lists.harbour-project.org  Tue Jan 16 16:58:02 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Tue Jan 16 16:58:02 2001
Subject: [Harbour] RDD changes
References: <3A636D8E.3683.57D11E1@localhost> <3A637D5B.90E6EAD2@libero.it> <002901c07fba$c88afb50$946410ac@jharrier>
Message-ID: <004101c08009$22af03d0$59f6fbce@local>

Harrier:

> The changes proposed by Ryszard will undoubtly break my RDD code,

OK, but the real question is, how badly?  If a couple days of recoding would
get it going AND support the new flexibilities, it would be worth it if the
new architecture was a big step forward, right?  I'm not suggesting this,
just asking: how badly?

I don't know yet what the impact would be on the ADS rdd...

Brian




From harbour@lists.harbour-project.org  Tue Jan 16 17:17:02 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Tue Jan 16 17:17:02 2001
Subject: [Harbour] stack problem
References: <000701c07ff0$c64baa20$0f2aa8c0@antonio>
Message-ID: <007b01c0800b$d36151e0$59f6fbce@local>

Ryszard, JF, and all:
There are still some problems after the last posting regarding arrays passed
by reference and detached through a codeblock.
But perhaps the remaining problems are stack related, and I just couldn't
get that far into it before.

In the large app, one scenario (report writer for columnar reports) works
fine.  For another similar but more complex scenario, we get execution
slowdown and eventual random blow up.  The error is always in   __CLSNEW(0).
If we remove whatever class is getting created, it blows up on whatever the
next object is down the road--no matter what class.

Any ideas how to debug this?
This error occurs when we try to run a report from within our editor...
Here is a call stack:

    Called from __CLSNEW(0)
    Called from CREATE(179)
    Called from TMETER(37)
    Called from RUNREP(256)
    Called from __EVAL(156)
    Called from EVAL(0)
    Called from TBTNBMP:CLICK(266)
    Called from TBTNBMP:LBUTTONUP(430)
    Called from TBTNBMP:HANDLEEVENT(0)
    Called from TBTNBMP:HANDLEEVENT(1303)
    Called from _FWH(2904)
    Called from DIALOGBOX(0)
    Called from TDIALOG:ACTIVATE(268)
    Called from PICKREPORT(1256)
    Called from __EVAL(159)
    Called from EVAL(0)
    Called from TBUTTON:CLICK(155)
    Called from TBUTTON:HANDLEEVENT(1278)
    Called from _FWH(2904)
    Called from SENDMESSAGE(0)
    Called from TDIALOG:COMMAND(397)
    Called from TDIALOG:HANDLEEVENT(0)
    Called from TDIALOG:HANDLEEVENT(813)
    Called from DIALOGBOX(0)
    Called from TDIALOG:ACTIVATE(268)
    Called from LAWREPS(230)
    Called from __EVAL(1859)
    Called from EVAL(0)
    Called from TMENU:COMMAND(392)
    Called from TMDIFRAME:COMMAND(911)
    Called from TMDIFRAME:COMMAND(230)
    Called from TMDIFRAME:HANDLEEVENT(0)
    Called from _FWH(2904)
    Called from WINRUN(0)
    Called from TMDIFRAME:ACTIVATE(860)
    Called from MAIN(347)




From harbour@lists.harbour-project.org  Tue Jan 16 17:26:02 2001
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Tue Jan 16 17:26:02 2001
Subject: [Harbour] stack problem
In-Reply-To: <007b01c0800b$d36151e0$59f6fbce@local>
Message-ID: <200101162206.f0GM6bq23682@ev6.be.wanadoo.com>

Hi Brian,

Could you retry but forcing the stack init to a very large value to try 
to avoid a stack re-allocation ?

Antonio, can you do the same with the little sample you gave us 
today ?

I can't do it at this moment, figthing with Simplex implementation 
and  VC++ :-(((. 

> 
> Ryszard, JF, and all:
> There are still some problems after the last posting regarding arrays
> passed by reference and detached through a codeblock. But perhaps the
> remaining problems are stack related, and I just couldn't get that far
> into it before.
> 
> In the large app, one scenario (report writer for columnar reports) works
> fine.  For another similar but more complex scenario, we get execution
> slowdown and eventual random blow up.  The error is always in  
> __CLSNEW(0). If we remove whatever class is getting created, it blows up
> on whatever the next object is down the road--no matter what class.
> 
> Any ideas how to debug this?
> This error occurs when we try to run a report from within our editor...
> Here is a call stack:
> 
>     Called from __CLSNEW(0)
>     Called from CREATE(179)
>     Called from TMETER(37)
>     Called from RUNREP(256)
>     Called from __EVAL(156)
>     Called from EVAL(0)
>     Called from TBTNBMP:CLICK(266)
>     Called from TBTNBMP:LBUTTONUP(430)
>     Called from TBTNBMP:HANDLEEVENT(0)
>     Called from TBTNBMP:HANDLEEVENT(1303)
>     Called from _FWH(2904)
>     Called from DIALOGBOX(0)
>     Called from TDIALOG:ACTIVATE(268)
>     Called from PICKREPORT(1256)
>     Called from __EVAL(159)
>     Called from EVAL(0)
>     Called from TBUTTON:CLICK(155)
>     Called from TBUTTON:HANDLEEVENT(1278)
>     Called from _FWH(2904)
>     Called from SENDMESSAGE(0)
>     Called from TDIALOG:COMMAND(397)
>     Called from TDIALOG:HANDLEEVENT(0)
>     Called from TDIALOG:HANDLEEVENT(813)
>     Called from DIALOGBOX(0)
>     Called from TDIALOG:ACTIVATE(268)
>     Called from LAWREPS(230)
>     Called from __EVAL(1859)
>     Called from EVAL(0)
>     Called from TMENU:COMMAND(392)
>     Called from TMDIFRAME:COMMAND(911)
>     Called from TMDIFRAME:COMMAND(230)
>     Called from TMDIFRAME:HANDLEEVENT(0)
>     Called from _FWH(2904)
>     Called from WINRUN(0)
>     Called from TMDIFRAME:ACTIVATE(860)
>     Called from MAIN(347)
> 
> 
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Tue Jan 16 17:32:02 2001
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Tue Jan 16 17:32:02 2001
Subject: [Harbour] Ron ... Problem with simplex and VC++
In-Reply-To: <007b01c0800b$d36151e0$59f6fbce@local>
Message-ID: <200101162212.f0GMCfq25008@ev6.be.wanadoo.com>

Hi Ron,

I expect the following error when compiling the simplex version of 
HARBOUR with VC++

Compiling 'dbgtmenu.prg'...
dbgtmenu.prg(395) Error E0030  Syntax error: "parse error at '&'"

where the line 395 is the last line + 1 !!! of dbgtmenu.prg (it was 
previously the line 394 and I added one blank line at the end just to 
see ...)

Any Idea ?


Also, It seem I miss an include file needed by macroslx.c. The file 
is macroy.h and seem to be created by flex. I used the flex one 
without problem but if I don't generate first a bison.flex version of 
HARBOUR I miss it !

Another Idea ?

Thanks,


Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Tue Jan 16 17:36:02 2001
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Tue Jan 16 17:36:02 2001
Subject: [Harbour] stack problem
References: <000701c07ff0$c64baa20$0f2aa8c0@antonio>
Message-ID: <3A64CCA1.28090ACC@libero.it>

Antonio,

here (OS/2 GCC SimpLex) I get

Error BASE/1086  Argument error: ++
Called from TEST(13)
Called from TEST(14)
Called from TEST(14)
...
Called from MAIN(5)
----------------------------------------
Total memory allocated: 73979 bytes (2758 blocks)
WARNING! Memory allocated but not released: 16 bytes (1 blocks)
fm.c:425: HB_TR_ERROR Block 1 (size 16) (0)


So it seems that after 997 times the static variable is not recognized
anymore as a numeral one.

regards.




Antonio Linares ha scritto:
> 
> It seems still we have a problem with the stack.
> 
> This little sample works ok if a number less than 1000
> is used. When 1000 is used, it issues a stack related error.
> 
> static n := 1
> 
> function Main()
> 
>    Test()
> 
>    Alert( "Test ok" )
> 
> return nil
> 
> function Test()
> 
>    if n++ < 1000
>       Test()
>    endif
> 
> return nil
> 
> Antonio
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Tue Jan 16 17:43:02 2001
From: harbour@lists.harbour-project.org (Sid Saylors)
Date: Tue Jan 16 17:43:02 2001
Subject: [Harbour] stack problem
References: <200101162206.f0GM6bq23682@ev6.be.wanadoo.com>
Message-ID: <000b01c0800d$a37d4540$aa4c0418@elcjn1.sdca.home.com>

JF,

    Where do i set that?

Sid....


----- Original Message -----
From: "JF Lefebvre" <jfl@wanadoo.be>
To: <harbour@lists.harbour-project.org>
Sent: Tuesday, January 16, 2001 2:25 PM
Subject: Re: [Harbour] stack problem


> Hi Brian,
>
> Could you retry but forcing the stack init to a very large value to try
> to avoid a stack re-allocation ?
>
> Antonio, can you do the same with the little sample you gave us
> today ?
>
> I can't do it at this moment, figthing with Simplex implementation
> and  VC++ :-(((.
>
> >
> > Ryszard, JF, and all:
> > There are still some problems after the last posting regarding arrays
> > passed by reference and detached through a codeblock. But perhaps the
> > remaining problems are stack related, and I just couldn't get that far
> > into it before.
> >
> > In the large app, one scenario (report writer for columnar reports)
works
> > fine.  For another similar but more complex scenario, we get execution
> > slowdown and eventual random blow up.  The error is always in
> > __CLSNEW(0). If we remove whatever class is getting created, it blows up
> > on whatever the next object is down the road--no matter what class.
> >
> > Any ideas how to debug this?
> > This error occurs when we try to run a report from within our editor...
> > Here is a call stack:
> >
> >     Called from __CLSNEW(0)
> >     Called from CREATE(179)
> >     Called from TMETER(37)
> >     Called from RUNREP(256)
> >     Called from __EVAL(156)
> >     Called from EVAL(0)
> >     Called from TBTNBMP:CLICK(266)
> >     Called from TBTNBMP:LBUTTONUP(430)
> >     Called from TBTNBMP:HANDLEEVENT(0)
> >     Called from TBTNBMP:HANDLEEVENT(1303)
> >     Called from _FWH(2904)
> >     Called from DIALOGBOX(0)
> >     Called from TDIALOG:ACTIVATE(268)
> >     Called from PICKREPORT(1256)
> >     Called from __EVAL(159)
> >     Called from EVAL(0)
> >     Called from TBUTTON:CLICK(155)
> >     Called from TBUTTON:HANDLEEVENT(1278)
> >     Called from _FWH(2904)
> >     Called from SENDMESSAGE(0)
> >     Called from TDIALOG:COMMAND(397)
> >     Called from TDIALOG:HANDLEEVENT(0)
> >     Called from TDIALOG:HANDLEEVENT(813)
> >     Called from DIALOGBOX(0)
> >     Called from TDIALOG:ACTIVATE(268)
> >     Called from LAWREPS(230)
> >     Called from __EVAL(1859)
> >     Called from EVAL(0)
> >     Called from TMENU:COMMAND(392)
> >     Called from TMDIFRAME:COMMAND(911)
> >     Called from TMDIFRAME:COMMAND(230)
> >     Called from TMDIFRAME:HANDLEEVENT(0)
> >     Called from _FWH(2904)
> >     Called from WINRUN(0)
> >     Called from TMDIFRAME:ACTIVATE(860)
> >     Called from MAIN(347)
> >
> >
> >
> > _______________________________________________
> > Harbour mailing list
> > Harbour@lists.harbour-project.org
> > http://www.matrixlist.com/mailman/listinfo/harbour
> >
> > Thank you for participating in The Harbour Project.  Be sure to check
> > http://www.Harbour-Project.org
> >
> >
>
>
>
> Best regards,
>
> J. Lefebvre,
> Bruxelles,
> Belgium
>
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Tue Jan 16 17:44:02 2001
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Tue Jan 16 17:44:02 2001
Subject: [Harbour] stack problem
References: <000701c07ff0$c64baa20$0f2aa8c0@antonio> <3A64CCA1.28090ACC@libero.it>
Message-ID: <3A64CE79.1D9F23AD@libero.it>

Look at this one:


       491
       492
       493
       494
       495
       496
       497
       498
Unrecoverable error 9018: Incorrect item type on the stack trying to pop
from hb_vmPopNumb
er()
Called from TEST(17)
Called from TEST(17)
Called from TEST(17)
Called from TEST(17)
Called from TEST(17)


caused by a little change to the sample code, it really seems it is a
stack reallocation error!!


static n := 1

function Main()

   Test(1)

   Alert( "Test ok" )

return nil

function Test(n)

   local x := "THIS IS A STRING"

   if n < 998
      ? n
      Test(n + 1)
   endif

return nil


Maurilio Longo ha scritto:
> 
> Antonio,
> 
> here (OS/2 GCC SimpLex) I get
> 
> Error BASE/1086  Argument error: ++
> Called from TEST(13)
> Called from TEST(14)
> Called from TEST(14)
> ...
> Called from MAIN(5)
> ----------------------------------------
> Total memory allocated: 73979 bytes (2758 blocks)
> WARNING! Memory allocated but not released: 16 bytes (1 blocks)
> fm.c:425: HB_TR_ERROR Block 1 (size 16) (0)
> 
> So it seems that after 997 times the static variable is not recognized
> anymore as a numeral one.
> 
> regards.
> 
> Antonio Linares ha scritto:
> >
> > It seems still we have a problem with the stack.
> >
> > This little sample works ok if a number less than 1000
> > is used. When 1000 is used, it issues a stack related error.
> >
> > static n := 1
> >
> > function Main()
> >
> >    Test()
> >
> >    Alert( "Test ok" )
> >
> > return nil
> >
> > function Test()
> >
> >    if n++ < 1000
> >       Test()
> >    endif
> >
> > return nil
> >
> > Antonio
> >
> > _______________________________________________
> > Harbour mailing list
> > Harbour@lists.harbour-project.org
> > http://www.matrixlist.com/mailman/listinfo/harbour
> >
> > Thank you for participating in The Harbour Project.  Be sure to check
> > http://www.Harbour-Project.org
> 
> --
> 
>  __________
> |  |  | |__| md2520@mclink.it
> |_|_|_|____| Team OS/2 Italia
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Tue Jan 16 17:47:01 2001
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Tue Jan 16 17:47:01 2001
Subject: [Harbour] stack problem
References: <000701c07ff0$c64baa20$0f2aa8c0@antonio> <3A64CCA1.28090ACC@libero.it>
Message-ID: <3A64CF44.EEF40332@libero.it>

And adding a + Space(512) to local x:="THIS IS A STRING" I get:

       496
       497
       498
Virtual Machine Stack Dump at TEST(13):
--------------------------
SYMBOL = TEST
NIL
INTEGER = 499
NIL
STRING = "THIS IS A STRING"
UNKNOWN = TYPE 16964
NIL
INTEGER = 512
NIL
Unrecoverable error 9015: Symbol item expected from hb_vmDo()
Called from TEST(17)

??


Maurilio Longo ha scritto:
> 
> Antonio,
> 
> here (OS/2 GCC SimpLex) I get
> 
> Error BASE/1086  Argument error: ++
> Called from TEST(13)
> Called from TEST(14)
> Called from TEST(14)
> ...
> Called from MAIN(5)
> ----------------------------------------
> Total memory allocated: 73979 bytes (2758 blocks)
> WARNING! Memory allocated but not released: 16 bytes (1 blocks)
> fm.c:425: HB_TR_ERROR Block 1 (size 16) (0)
> 
> So it seems that after 997 times the static variable is not recognized
> anymore as a numeral one.
> 
> regards.
> 
> Antonio Linares ha scritto:
> >
> > It seems still we have a problem with the stack.
> >
> > This little sample works ok if a number less than 1000
> > is used. When 1000 is used, it issues a stack related error.
> >
> > static n := 1
> >
> > function Main()
> >
> >    Test()
> >
> >    Alert( "Test ok" )
> >
> > return nil
> >
> > function Test()
> >
> >    if n++ < 1000
> >       Test()
> >    endif
> >
> > return nil
> >
> > Antonio
> >
> > _______________________________________________
> > Harbour mailing list
> > Harbour@lists.harbour-project.org
> > http://www.matrixlist.com/mailman/listinfo/harbour
> >
> > Thank you for participating in The Harbour Project.  Be sure to check
> > http://www.Harbour-Project.org
> 
> --
> 
>  __________
> |  |  | |__| md2520@mclink.it
> |_|_|_|____| Team OS/2 Italia
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Tue Jan 16 17:51:02 2001
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Tue Jan 16 17:51:02 2001
Subject: [Harbour] stack problem
In-Reply-To: <000b01c0800d$a37d4540$aa4c0418@elcjn1.sdca.home.com>
Message-ID: <200101162231.f0GMVAq28968@ev6.be.wanadoo.com>

Hi Sid

File is source\vm\estack.c 

around line 40 you should find 


/* ------------------------------- */
#define STACK_INITHB_ITEMS      2000
#define STACK_EXPANDHB_ITEMS    200

HB_STACK hb_stack;
/* ------------------------------- */

Just recompile Harbour with a value of 20000 or even 50000.

See you, 




> 
> JF,
> 
>     Where do i set that?
> 
> Sid....
> 
> 
> ----- Original Message -----
> From: "JF Lefebvre" <jfl@wanadoo.be>
> To: <harbour@lists.harbour-project.org>
> Sent: Tuesday, January 16, 2001 2:25 PM
> Subject: Re: [Harbour] stack problem
> 
> 
> > Hi Brian,
> >
> > Could you retry but forcing the stack init to a very large value to try
> > to avoid a stack re-allocation ?
> >
> > Antonio, can you do the same with the little sample you gave us
> > today ?
> >
> > I can't do it at this moment, figthing with Simplex implementation
> > and  VC++ :-(((.
> >
> > >
> > > Ryszard, JF, and all:
> > > There are still some problems after the last posting regarding arrays
> > > passed by reference and detached through a codeblock. But perhaps the
> > > remaining problems are stack related, and I just couldn't get that far
> > > into it before.
> > >
> > > In the large app, one scenario (report writer for columnar reports)
> works
> > > fine.  For another similar but more complex scenario, we get execution
> > > slowdown and eventual random blow up.  The error is always in
> > > __CLSNEW(0). If we remove whatever class is getting created, it blows
> > > up on whatever the next object is down the road--no matter what class.
> > >
> > > Any ideas how to debug this?
> > > This error occurs when we try to run a report from within our
> > > editor... Here is a call stack:
> > >
> > >     Called from __CLSNEW(0)
> > >     Called from CREATE(179)
> > >     Called from TMETER(37)
> > >     Called from RUNREP(256)
> > >     Called from __EVAL(156)
> > >     Called from EVAL(0)
> > >     Called from TBTNBMP:CLICK(266)
> > >     Called from TBTNBMP:LBUTTONUP(430)
> > >     Called from TBTNBMP:HANDLEEVENT(0)
> > >     Called from TBTNBMP:HANDLEEVENT(1303)
> > >     Called from _FWH(2904)
> > >     Called from DIALOGBOX(0)
> > >     Called from TDIALOG:ACTIVATE(268)
> > >     Called from PICKREPORT(1256)
> > >     Called from __EVAL(159)
> > >     Called from EVAL(0)
> > >     Called from TBUTTON:CLICK(155)
> > >     Called from TBUTTON:HANDLEEVENT(1278)
> > >     Called from _FWH(2904)
> > >     Called from SENDMESSAGE(0)
> > >     Called from TDIALOG:COMMAND(397)
> > >     Called from TDIALOG:HANDLEEVENT(0)
> > >     Called from TDIALOG:HANDLEEVENT(813)
> > >     Called from DIALOGBOX(0)
> > >     Called from TDIALOG:ACTIVATE(268)
> > >     Called from LAWREPS(230)
> > >     Called from __EVAL(1859)
> > >     Called from EVAL(0)
> > >     Called from TMENU:COMMAND(392)
> > >     Called from TMDIFRAME:COMMAND(911)
> > >     Called from TMDIFRAME:COMMAND(230)
> > >     Called from TMDIFRAME:HANDLEEVENT(0)
> > >     Called from _FWH(2904)
> > >     Called from WINRUN(0)
> > >     Called from TMDIFRAME:ACTIVATE(860)
> > >     Called from MAIN(347)
> > >
> > >
> > >
> > > _______________________________________________
> > > Harbour mailing list
> > > Harbour@lists.harbour-project.org
> > > http://www.matrixlist.com/mailman/listinfo/harbour
> > >
> > > Thank you for participating in The Harbour Project.  Be sure to check
> > > http://www.Harbour-Project.org
> > >
> > >
> >
> >
> >
> > Best regards,
> >
> > J. Lefebvre,
> > Bruxelles,
> > Belgium
> >
> > _______________________________________________
> > Harbour mailing list
> > Harbour@lists.harbour-project.org
> > http://www.matrixlist.com/mailman/listinfo/harbour
> >
> > Thank you for participating in The Harbour Project.  Be sure to check
> > http://www.Harbour-Project.org
> >
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Tue Jan 16 18:10:03 2001
From: harbour@lists.harbour-project.org (Sid Saylors)
Date: Tue Jan 16 18:10:03 2001
Subject: [Harbour] stack problem
References: <200101162231.f0GMVAq28968@ev6.be.wanadoo.com>
Message-ID: <000501c08011$75f713e0$aa4c0418@elcjn1.sdca.home.com>

JF,
    I changed STACK_INITHB_ITEMS from 2000
to 20000 and still the same problem same place.

Thanks.

Sid........


----- Original Message -----
From: "JF Lefebvre" <jfl@wanadoo.be>
To: <harbour@lists.harbour-project.org>
Sent: Tuesday, January 16, 2001 2:50 PM
Subject: Re: [Harbour] stack problem


> Hi Sid
>
> File is source\vm\estack.c
>
> around line 40 you should find
>
>
> /* ------------------------------- */
> #define STACK_INITHB_ITEMS      2000
> #define STACK_EXPANDHB_ITEMS    200
>
> HB_STACK hb_stack;
> /* ------------------------------- */
>
> Just recompile Harbour with a value of 20000 or even 50000.
>
> See you,
>
>
>
>
> >
> > JF,
> >
> >     Where do i set that?
> >
> > Sid....
> >
> >
> > ----- Original Message -----
> > From: "JF Lefebvre" <jfl@wanadoo.be>
> > To: <harbour@lists.harbour-project.org>
> > Sent: Tuesday, January 16, 2001 2:25 PM
> > Subject: Re: [Harbour] stack problem
> >
> >
> > > Hi Brian,
> > >
> > > Could you retry but forcing the stack init to a very large value to
try
> > > to avoid a stack re-allocation ?
> > >
> > > Antonio, can you do the same with the little sample you gave us
> > > today ?
> > >
> > > I can't do it at this moment, figthing with Simplex implementation
> > > and  VC++ :-(((.
> > >
> > > >
> > > > Ryszard, JF, and all:
> > > > There are still some problems after the last posting regarding
arrays
> > > > passed by reference and detached through a codeblock. But perhaps
the
> > > > remaining problems are stack related, and I just couldn't get that
far
> > > > into it before.
> > > >
> > > > In the large app, one scenario (report writer for columnar reports)
> > works
> > > > fine.  For another similar but more complex scenario, we get
execution
> > > > slowdown and eventual random blow up.  The error is always in
> > > > __CLSNEW(0). If we remove whatever class is getting created, it
blows
> > > > up on whatever the next object is down the road--no matter what
class.
> > > >
> > > > Any ideas how to debug this?
> > > > This error occurs when we try to run a report from within our
> > > > editor... Here is a call stack:
> > > >
> > > >     Called from __CLSNEW(0)
> > > >     Called from CREATE(179)
> > > >     Called from TMETER(37)
> > > >     Called from RUNREP(256)
> > > >     Called from __EVAL(156)
> > > >     Called from EVAL(0)
> > > >     Called from TBTNBMP:CLICK(266)
> > > >     Called from TBTNBMP:LBUTTONUP(430)
> > > >     Called from TBTNBMP:HANDLEEVENT(0)
> > > >     Called from TBTNBMP:HANDLEEVENT(1303)
> > > >     Called from _FWH(2904)
> > > >     Called from DIALOGBOX(0)
> > > >     Called from TDIALOG:ACTIVATE(268)
> > > >     Called from PICKREPORT(1256)
> > > >     Called from __EVAL(159)
> > > >     Called from EVAL(0)
> > > >     Called from TBUTTON:CLICK(155)
> > > >     Called from TBUTTON:HANDLEEVENT(1278)
> > > >     Called from _FWH(2904)
> > > >     Called from SENDMESSAGE(0)
> > > >     Called from TDIALOG:COMMAND(397)
> > > >     Called from TDIALOG:HANDLEEVENT(0)
> > > >     Called from TDIALOG:HANDLEEVENT(813)
> > > >     Called from DIALOGBOX(0)
> > > >     Called from TDIALOG:ACTIVATE(268)
> > > >     Called from LAWREPS(230)
> > > >     Called from __EVAL(1859)
> > > >     Called from EVAL(0)
> > > >     Called from TMENU:COMMAND(392)
> > > >     Called from TMDIFRAME:COMMAND(911)
> > > >     Called from TMDIFRAME:COMMAND(230)
> > > >     Called from TMDIFRAME:HANDLEEVENT(0)
> > > >     Called from _FWH(2904)
> > > >     Called from WINRUN(0)
> > > >     Called from TMDIFRAME:ACTIVATE(860)
> > > >     Called from MAIN(347)
> > > >
> > > >
> > > >
> > > > _______________________________________________
> > > > Harbour mailing list
> > > > Harbour@lists.harbour-project.org
> > > > http://www.matrixlist.com/mailman/listinfo/harbour
> > > >
> > > > Thank you for participating in The Harbour Project.  Be sure to
check
> > > > http://www.Harbour-Project.org
> > > >
> > > >
> > >
> > >
> > >
> > > Best regards,
> > >
> > > J. Lefebvre,
> > > Bruxelles,
> > > Belgium
> > >
> > > _______________________________________________
> > > Harbour mailing list
> > > Harbour@lists.harbour-project.org
> > > http://www.matrixlist.com/mailman/listinfo/harbour
> > >
> > > Thank you for participating in The Harbour Project.  Be sure to check
> > > http://www.Harbour-Project.org
> > >
> >
> > _______________________________________________
> > Harbour mailing list
> > Harbour@lists.harbour-project.org
> > http://www.matrixlist.com/mailman/listinfo/harbour
> >
> > Thank you for participating in The Harbour Project.  Be sure to check
> > http://www.Harbour-Project.org
> >
> >
>
>
>
> Best regards,
>
> J. Lefebvre,
> Bruxelles,
> Belgium
>
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Tue Jan 16 20:41:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Jan 16 20:41:02 2001
Subject: [Harbour] Ron ... Problem with simplex and VC++
In-Reply-To: <200101162212.f0GMCfq25008@ev6.be.wanadoo.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKMENMDIAA.ron@profit-master.com>

Hi J.F.,

> Hi Ron,
>
> I expect the following error when compiling the simplex version of
> HARBOUR with VC++
>
> Compiling 'dbgtmenu.prg'...
> dbgtmenu.prg(395) Error E0030  Syntax error: "parse error at '&'"
>
> where the line 395 is the last line + 1 !!! of dbgtmenu.prg (it was
> previously the line 394 and I added one blank line at the end just to
> see ...)
>
> Any Idea ?

It seems we have a build problem, and it might be related to the 2nd
question. I just verified compiling dbgtmenu.prg without any problem (BCC
5.5 SimpLex) (and I can't find any & in source/debug/dbgtmenu.prg).

Which Make-File do you use? Can you please upload it?

> Also, It seem I miss an include file needed by macroslx.c. The file
> is macroy.h and seem to be created by flex. I used the flex one
> without problem but if I don't generate first a bison.flex version of
> HARBOUR I miss it !
>
> Another Idea ?

Yes, we need to change the build *order* so that macroslx.c is compiled
*after* processing of macro.y! When Bison process macro.y, it creates
macroy.h.

Ron


From harbour@lists.harbour-project.org  Tue Jan 16 21:21:01 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Jan 16 21:21:01 2001
Subject: [Harbour] We need a way to escape this mess.
In-Reply-To: <3A64466C.7758BDA4@libero.it>
Message-ID: <LOBBKAFMMFGJIKLMEPAKGENNDIAA.ron@profit-master.com>

Maurilio,

> Ron,
>
> I like your code very much, I'm using simplex since you released it but
> I start to feel a little uncomfortable with all the efforts to justify
> (or negate) the usefulness of something which _does not improve_ clipper
> compatibility or completeness of harbour.
>
> I urgently and strongly need a fully working clipper 5.2 compatible
> compiler. I even have pieces of code where your inline C could be handy,
> but I can very well live without it until I have a fully working
> harbour.
> Then we will start discussing ways to make it faster and to add bells
> and whistles to it.
>
> But, first,  we should finish it.

I understand! The only piece I don't understand, is, how *not* allowing
developments like  this, will help speed Harbour development?

> I see that the rate of growth is slowing down. I spent nearly all my
> spare time adding code to harbour but there are tasks I don't have
> skills to perform (and I'm using it to write little in house utilities
> for my employer).
>
> You have contributed far more code than me, and I'm using a lot of that
> code. But I think that now we should enforce unpon ourselves a little
> more strict rules to be sure that we will be able to finish it.

Writing the inline feature, which took me just few hours to develop, did
*not* take me away from doing "more important" Harbour related tasks. The
opposite, it helps keep me more focused and interested in Harbour.

> There are tens of messages which don't give us nothing but rantings
> about inline or pragma or things like "you don't know who I am", "don't
> dare speak to me this way" and so on.

Maurilio, I can't recall, any of the above quotes appearing in the mentioned
discussion. I think it was heated but still professional argument. IMO,
There was no name calling, or anything that, any of the participants should
regret.

> I don't think that adding something to \contrib tree makes it less
> usefull. Why couldn't you use an "inline C code module" which is in
> \contrib\inline_c ??

Because it involved core files! Regardless, the subject of the arguments was
not where the files were uploaded. We would/should have had the same
argument, even if this was just a proposal!!! I did state clearly, that I'll
remove the code if requested. As long as the code did not interfere with the
stability of the core, and as long it is clear, we are not committed to use
it, I don't think the "where" is an issue.

> I hope you won't stop adding things to harbour if we agree on proposed
> rules.

Depends, which rules :-).

> PS. Sorry, I'm not a native english speaker, so, maybe, something is not
> so clear in my message or it sounds rude, but I'm not.

I never considered you rude my friend! I just don't think your suggested
rule would benefit Harbour.

There were very, very, very, few arguments in Harbour history, where the
subject was "is it needed ?". Even on this issue, the "is it needed ?" was
*not* the main issue. I think it is quiet clear that majority is interested
in the feature, in one syntax or the other.

So, I just think that your suggestion is not addressing the real issue,
which is, many just like you, do not like (or not interested in) reading
arguments like this one (i.e. this very reply to you!!!). This is a medium
issue, sometimes there is a lot of traffic between limited participants. I
think it is a reasonable price to pay, considering the other benefits of
this medium. The only possible improvement I could see is automatic posting
to News Server, so those not interested in such "half private" threads are
not forced to download them.

Rest assure, I was not offended by your suggestion.

Ron


From harbour@lists.harbour-project.org  Tue Jan 16 21:47:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Jan 16 21:47:02 2001
Subject: [Harbour] Inline C
In-Reply-To: <20010116084116.S9113@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKAENODIAA.ron@profit-master.com>

Dave,

> > As to what is constructive/censorship, and what is not: Suggesting,
> > alternate syntax *is* constructive. Suggesting a feature is not valuable
> > and should be removed, is unconstructive and has censorship qualities.
>
> If someone has a good reason why a feature shouldn't be added to a body of
> code then it should be aired without fear of being branded as an
> attempt at
> censorship. Suggesting that someone is a "censor" because they think the
> feature is a bad idea much worse than actually saying why you think the
> feature is bad IMO.

To claim that something is "not needed" is *not* the same as "providing a
good reason why a feature should not be added"! I clearly said, that
suggesting removal on the basis of no value, has censorship qualities
(because one, self proclaims himself a "judge" of what might/might not be of
value to someone else)!

> Why would you seek to brand those who see problems with the inclusion of
> inline C as censors?

I don't.

Ron


From harbour@lists.harbour-project.org  Tue Jan 16 22:06:02 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Tue Jan 16 22:06:02 2001
Subject: [Harbour] Inline C
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKAENODIAA.ron@profit-master.com>
References: <20010116084116.S9113@hagbard.davep.org>
Message-ID: <200101170305.f0H35UN31898@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Tue,
16 Jan 2001 18:47:27 -0800

> To claim that something is "not needed" is *not* the same as "providing a
> good reason why a feature should not be added"! I clearly said, that
> suggesting removal on the basis of no value, has censorship qualities
> (because one, self proclaims himself a "judge" of what might/might not be of
> value to someone else)!

Oh, and unilaterlly adding a feature that isn't needed and hasn't been
discussed doesn't involve 'one, self proclaims himself a "judge" of what
might/might not be of value to someone else'?
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Tue Jan 16 22:42:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Jan 16 22:42:02 2001
Subject: [Harbour] Inline C
In-Reply-To: <200101170305.f0H35UN31898@thor.parrett.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKIENODIAA.ron@profit-master.com>

David,

> > To claim that something is "not needed" is *not* the same as
> "providing a
> > good reason why a feature should not be added"! I clearly said, that
> > suggesting removal on the basis of no value, has censorship qualities
> > (because one, self proclaims himself a "judge" of what
> might/might not be of
> > value to someone else)!
>
> Oh, and unilaterlly adding a feature that isn't needed and hasn't been
> discussed doesn't involve 'one, self proclaims himself a "judge" of what
> might/might not be of value to someone else'?

1. This feature was suggested by few individuals in the past.
2. I assume one allowed to *offer* what might be of use to some. Such offer
might very well be declined.

Ron


From harbour@lists.harbour-project.org  Tue Jan 16 22:54:02 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Tue Jan 16 22:54:02 2001
Subject: [Harbour] Inline C
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKIENODIAA.ron@profit-master.com>
References: <200101170305.f0H35UN31898@thor.parrett.net>
Message-ID: <200101170353.f0H3rHN02500@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Tue,
16 Jan 2001 19:42:51 -0800

> 1. This feature was suggested by few individuals in the past.

And was promptly shot down as unneeded and unneccessary.

> 2. I assume one allowed to *offer* what might be of use to some. Such offer
> might very well be declined.

Well, you never "offered" your inline C. You just went and implemented
it and then committed it, just like you did with your unneeded and
unneccessary SimpLex alternative to Flex.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Tue Jan 16 23:40:03 2001
From: harbour@lists.harbour-project.org (=?big5?B?ufml1lwoc3MtYmJzXCk=?=)
Date: Tue Jan 16 23:40:03 2001
Subject: [Harbour] MySQL test problem!!
References: <200101170305.f0H35UN31898@thor.parrett.net> <200101170353.f0H3rHN02500@thor.parrett.net>
Message-ID: <001101c0803e$449643c0$6c7ba8c0@zzz.com.tw>

Hello all..

    I try test mysql function,
I'm use lib of "mysql++1_7_1win32_borland_1_1".
link is success!!
But, occur error when I run it.
APP be close!!



From harbour@lists.harbour-project.org  Tue Jan 16 23:47:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Tue Jan 16 23:47:02 2001
Subject: [Harbour] Inline C
In-Reply-To: <200101170353.f0H3rHN02500@thor.parrett.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOEOADIAA.ron@profit-master.com>

David,

> > 1. This feature was suggested by few individuals in the past.
>
> And was promptly shot down as unneeded and unneccessary.

1. Is it not for the *group* to decide? I can't recall any vote.

> > 2. I assume one allowed to *offer* what might be of use to
> some. Such offer
> > might very well be declined.
>
> Well, you never "offered" your inline C. You just went and implemented
> it and then committed it, just like you did with your unneeded and
> unneccessary SimpLex alternative to Flex.

Once I had the idea, It was very natural for me to test if it will work. Why
would you take offense to that? Once, I had it working, it was again natural
to allow the group a simple review. Since it involved modification to core
files, it had to be committed to allow such review. I was, and still am,
confident, of its viability. If I'm wrong, and requested to remove it, it
will be my [minor] problem to deal with, so why are you offended by that?

SimpLex, was *offered*, not forced as you suggest. No one was ever forced to
use it be any means. The group did decide to leave it on CVS for further
evaluation. You are free to ask a vote for its removal at any time, again I
promise I'll remove it myself, if requested.

Ron


From harbour@lists.harbour-project.org  Tue Jan 16 23:53:02 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Tue Jan 16 23:53:02 2001
Subject: [Harbour] Inline C
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKOEOADIAA.ron@profit-master.com>
References: <200101170353.f0H3rHN02500@thor.parrett.net>
Message-ID: <200101170452.f0H4qVN05654@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Tue,
16 Jan 2001 20:47:13 -0800

> 1. Is it not for the *group* to decide? I can't recall any vote.

If you can't recall a vote, then why did you assume that you had
permission to add the inline C feature? Shouldn't you have called for a
vote before implementing it, much less before comitting it?
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Tue Jan 16 23:56:02 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Tue Jan 16 23:56:02 2001
Subject: [Harbour] Inline C
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKOEOADIAA.ron@profit-master.com>
References: <200101170353.f0H3rHN02500@thor.parrett.net>
Message-ID: <200101170455.f0H4toN05855@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Tue,
16 Jan 2001 20:47:13 -0800

> SimpLex, was *offered*, not forced as you suggest. No one was ever forced to
> use it be any means. The group did decide to leave it on CVS for further
> evaluation. You are free to ask a vote for its removal at any time, again I
> promise I'll remove it myself, if requested.

But now we are forced to update both SimpLex and Lex whenever there are
syntax changes, instead of just updating Lex. Which adds a burdensome
level of complexity to Harbour.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Wed Jan 17 00:08:02 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Wed Jan 17 00:08:02 2001
Subject: [Harbour] Inline C
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKOEOADIAA.ron@profit-master.com>
References: <200101170353.f0H3rHN02500@thor.parrett.net>
Message-ID: <200101170507.f0H576N06433@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Tue,
16 Jan 2001 20:47:13 -0800

> > Well, you never "offered" your inline C. You just went and implemented
> > it and then committed it, just like you did with your unneeded and
> > unneccessary SimpLex alternative to Flex.
> 
> Once I had the idea, It was very natural for me to test if it will work. Why
> would you take offense to that?

I don't take offense to it, it's just that if you had submitted a
proposal after implementing and the group had voted your proposal down,
then you would have wasted a lot of your time.

> Once, I had it working, it was again natural
> to allow the group a simple review. Since it involved modification to core
> files, it had to be committed to allow such review.

No, it did not. A correctly documented proposal outlining how it works
would have been quite sufficient.

> I was, and still am, confident, of its viability. If I'm wrong, and
> requested to remove it, it will be my [minor] problem to deal with,
> so why are you offended by that?

Because instead of floating a proposal, which is the proper way to add
a major new feature to Harbour, you just went ahead and implemented it
and committed it. And so far, the vote is 3 in favor of removing the
current inline C implementation to 2 in favor of keeping it. I'm
counting your original message with the subject "INLINE C Synopsis
(version 1.1)" as a vote for and there were only four (4) other messages
in the thread that specified a vote for or against.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Wed Jan 17 00:16:01 2001
From: harbour@lists.harbour-project.org (Charles Kwon ( Kwon,Oh-Jun))
Date: Wed Jan 17 00:16:01 2001
Subject: [Harbour] MySQL test problem!!
References: <200101170305.f0H35UN31898@thor.parrett.net> <200101170353.f0H3rHN02500@thor.parrett.net> <001101c0803e$449643c0$6c7ba8c0@zzz.com.tw>
Message-ID: <001301c08043$ba5d1340$0200a8c0@ns>

VW1tfg0KDQpJIGhhZCBzYW1lIHByb2JsZW0gYW5kIEkgdXNlIE9EQkMgd2l0aCBNeVNRTCBBbmQg
SXQgd29ya2luZyBmaW5lLCBXZSBtdXN0IHJlc2VhcmNoIGZvciBEaXJlY3QgY29ubmVjdCB3aXRo
IFdpbjMyIEdESSBtb2RlLg0KDQpCZXN0IFJlZ2FyZHMsDQpDaGFybGVzIEt3b24gDQoNCmh0dHA6
Ly93d3cuZml2ZXRlY2gubmV0DQpodHRwOi8vZW5nbGlzaC5maXZldGVjaC5uZXQNCmh0dHA6Ly9z
cGFpbi5maXZldGVjaC5uZXQNCg0KRml2ZVRlY2guTmV0DQpURUwgOiArODItMi01NjYtNjgyNg0K
SUNRIDogMTkzMDIyNTgNCi0tLS0tIE9yaWdpbmFsIE1lc3NhZ2UgLS0tLS0gDQo/PyA/PzogIrn5
pdYoc3MtYmJzKSIgPHNzYmJzQG1haWwyLnp6ei5jb20udHc+DQo/PyA/PzogPGhhcmJvdXJAbGlz
dHMuaGFyYm91ci1wcm9qZWN0Lm9yZz4NCj8/ID8/OiAyMDAxPyAxPyAxNz8gPz8/ID8/IDE6MzAN
Cj8/OiBbSGFyYm91cl0gTXlTUUwgdGVzdCBwcm9ibGVtISENCg0KDQo6IEhlbGxvIGFsbC4uDQo6
IA0KOiAgICAgSSB0cnkgdGVzdCBteXNxbCBmdW5jdGlvbiwNCjogSSdtIHVzZSBsaWIgb2YgIm15
c3FsKysxXzdfMXdpbjMyX2JvcmxhbmRfMV8xIi4NCjogbGluayBpcyBzdWNjZXNzISENCjogQnV0
LCBvY2N1ciBlcnJvciB3aGVuIEkgcnVuIGl0Lg0KOiBBUFAgYmUgY2xvc2UhIQ0KOiANCjogDQo6
IF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fDQo6IEhhcmJv
dXIgbWFpbGluZyBsaXN0DQo6IEhhcmJvdXJAbGlzdHMuaGFyYm91ci1wcm9qZWN0Lm9yZw0KOiBo
dHRwOi8vd3d3Lm1hdHJpeGxpc3QuY29tL21haWxtYW4vbGlzdGluZm8vaGFyYm91cg0KOiANCjog
VGhhbmsgeW91IGZvciBwYXJ0aWNpcGF0aW5nIGluIFRoZSBIYXJib3VyIFByb2plY3QuICBCZSBz
dXJlIHRvIGNoZWNrDQo6IGh0dHA6Ly93d3cuSGFyYm91ci1Qcm9qZWN0Lm9yZw0K


From harbour@lists.harbour-project.org  Wed Jan 17 00:54:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Jan 17 00:54:02 2001
Subject: [Harbour] Inline C
In-Reply-To: <200101170507.f0H576N06433@thor.parrett.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEODDIAA.ron@profit-master.com>

David,

> > Once I had the idea, It was very natural for me to test if it
> will work. Why
> > would you take offense to that?
>
> I don't take offense to it, it's just that if you had submitted a
> proposal after implementing and the group had voted your proposal down,
> then you would have wasted a lot of your time.

I had to do it to test its validity for myself, and it was just few hours,
so no it wouldn't have been a waste at all. At worst case, I'll use it
privately. It was definitely worth my efforts. My involvement in this thread
by comparison is few full days of work, and still will be justified, if
others get to benefit from it too!

> > Once, I had it working, it was again natural
> > to allow the group a simple review. Since it involved
> modification to core
> > files, it had to be committed to allow such review.
>
> No, it did not. A correctly documented proposal outlining how it works
> would have been quite sufficient.

1. You might find a correctly documented proposal effective, I think a
working code, is the best documented proposal for working code.

2. No proposal ever, will be as efficient in demonstrating that a proposal
can and will work, as the actual working code.

3. I was not challenged by writing a document, I was challenged and
motivated to develop a working code, which I would have developed, even if I
had no one to share it with.

> > I was, and still am, confident, of its viability. If I'm wrong, and
> > requested to remove it, it will be my [minor] problem to deal with,
> > so why are you offended by that?
>
> Because instead of floating a proposal, which is the proper way to add
> a major new feature to Harbour, you just went ahead and implemented it
> and committed it. And so far, the vote is 3 in favor of removing the
> current inline C implementation to 2 in favor of keeping it. I'm
> counting your original message with the subject "INLINE C Synopsis
> (version 1.1)" as a vote for and there were only four (4) other messages
> in the thread that specified a vote for or against.

I have every right to implement anything I'm interested in implementing. The
term "committing " while technically correct, might be misleading in this
context, I would rather you say uploaded. This group is *not* committed to
accept my upload.

I clearly indicated, I'll summarize all input later this week and will
request a vote. I never defined any voting choices, nor did anyone else.
Lack of any more votes, can clearly be linked to this fact. You know very
well, there were few more individuals that posted vocal opinions in favor of
the feature, yet "did not cast a vote", based on your results.

Please, allow me to take the needed to time, and summarize all input, (as
can you and anyone else). We can then have complete and valid vote results,
where the voted options are clearly defined.

Ron


From harbour@lists.harbour-project.org  Wed Jan 17 01:00:03 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Jan 17 01:00:03 2001
Subject: [Harbour] Inline C
In-Reply-To: <200101170455.f0H4toN05855@thor.parrett.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKKEODDIAA.ron@profit-master.com>

> > SimpLex, was *offered*, not forced as you suggest. No one was
> ever forced to
> > use it be any means. The group did decide to leave it on CVS for further
> > evaluation. You are free to ask a vote for its removal at any
> time, again I
> > promise I'll remove it myself, if requested.
>
> But now we are forced to update both SimpLex and Lex whenever there are
> syntax changes, instead of just updating Lex. Which adds a burdensome
> level of complexity to Harbour.

Burden on whom? No one was requested to share this responsibility, and I
don't consider it a burden. I did consider maintaining the Flex Definitions
a burden, and I was taking an ongoing, active part in that responsibility.

Ron


From harbour@lists.harbour-project.org  Wed Jan 17 01:09:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Jan 17 01:09:02 2001
Subject: [Harbour] Inline C
In-Reply-To: <200101170452.f0H4qVN05654@thor.parrett.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKAEOEDIAA.ron@profit-master.com>

> > 1. Is it not for the *group* to decide? I can't recall any vote.
>
> If you can't recall a vote, then why did you assume that you had
> permission to add the inline C feature? Shouldn't you have called for a
> vote before implementing it, much less before comitting it?

1. I have every right to implement anything I'm interested in implementing.
That's not to say that this group has to accept *any* of what I'm interested
in implementing.

2. I didn't assume that I had permission to upload to CVS, I know I do. The
group may decide to not accept such upload. Further, it might even revoke my
CVS upload right, if my uploads are not considered desirable. Again you are
free to suggest any of the above.

Ron


From harbour@lists.harbour-project.org  Wed Jan 17 02:38:01 2001
From: harbour@lists.harbour-project.org (Alexander S.Kresin)
Date: Wed Jan 17 02:38:01 2001
Subject: [Harbour] Re: RDD changes
In-Reply-To: <3A636D8E.3683.57D11E1@localhost>
References: <3A636D8E.3683.57D11E1@localhost>
Message-ID: <1535573955.20010117101127@belacy.belgorod.su>

 Ryszard,

RG>   During working on DBFCDX support I decided to change some RDD 
RG> architecture to get a better support for future extensions.
RG>   One of the main missing, IMO, of Clipper RDD design was a very tight 
RG> linking between RDD drivers. This caused that for example, DBFCDX had 
RG> hardcoded inheritance from DBF driver. It also contained a code that 
RG> serviced both memo files and indices. To support BLOB files instead of 
RG> FPT the separate driver was used that included repeated code for CDX 
RG> index handling. It was not possible to use additional drivers that can be 
RG> placed between existing drivers, for example, a driver that can handle 
RG> additional types of field or data encryption.
    [ skipped ]

  The whole idea looks very nice.
  But I still didn't understand something in implementation:
    handling of drivers data.
  As far as I understand your explanation, each driver is supposed to
  have its own data and CDXAREA_PTR pArea is a pointer to CDX specific
  data, DBFAREA_PTR pArea - to the DBF's ( right ? ).
  And we cannot access DBFAREA data from CDX methods even via super
  methods, because CDX cannot know about existence of variables in
  super data structure ?
  So, for example, we will have both cdxBof in CDXAREA and dbfBof in
  DBFAREA for the same workarea ? And how they will be synchronized  ?

  How much performance decreasing you expect ?
  
Best regards,
 Alexander



From harbour@lists.harbour-project.org  Wed Jan 17 02:54:02 2001
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Wed Jan 17 02:54:02 2001
Subject: [Harbour] Ron ... Problem with simplex and VC++
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKMENMDIAA.ron@profit-master.com>
References: <200101162212.f0GMCfq25008@ev6.be.wanadoo.com>
Message-ID: <200101170638.f0H6cmq04085@ev6.be.wanadoo.com>

--Message-Boundary-11047
Content-type: text/plain; charset=US-ASCII
Content-transfer-encoding: 7BIT
Content-description: Mail message body

Ron

> > I expect the following error when compiling the simplex version of
> > HARBOUR with VC++
> >
> > Compiling 'dbgtmenu.prg'...
> > dbgtmenu.prg(395) Error E0030  Syntax error: "parse error at '&'"
> >
> > where the line 395 is the last line + 1 !!! of dbgtmenu.prg (it was
> > previously the line 394 and I added one blank line at the end just to
> > see ...)

Same error even after changing the compilation order.

Now the problem of macroy.h is resolved. I attach the make file for 
VC++ and Simplex. (adapted from John's work)

I will add them to the CVS as soon as I remember the way to add a 
file :-(

> > Any Idea ?
> 
> It seems we have a build problem, and it might be related to the 2nd
> question. I just verified compiling dbgtmenu.prg without any problem (BCC
> 5.5 SimpLex) (and I can't find any & in source/debug/dbgtmenu.prg).
> 
> Which Make-File do you use? Can you please upload it?
> 
> > Also, It seem I miss an include file needed by macroslx.c. The file is
> > macroy.h and seem to be created by flex. I used the flex one without
> > problem but if I don't generate first a bison.flex version of HARBOUR I
> > miss it !
> >
> > Another Idea ?
> 
> Yes, we need to change the build *order* so that macroslx.c is compiled
> *after* processing of macro.y! When Bison process macro.y, it creates
> macroy.h.
> 
> Ron
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre,
Bruxelles,
Belgium



--Message-Boundary-11047
Content-type: text/plain; charset=US-ASCII
Content-transfer-encoding: 7BIT
Content-description: Text from file 'Vc_slex.bat'

@echo off
rem 
rem $Id: vc_slex.bat,v 1.0 2000/11/02 22:52:36 jms Exp $
rem 

if "%1" == "clean" goto CLEAN
if "%1" == "CLEAN" goto CLEAN

:BUILD

   nmake /f hb_slex.vc C_USR="-D_MSC_VER=1010" %1 %2 %3 > make_vc.log
   if errorlevel 1 goto BUILD_ERR

:BUILD_OK

   copy bin\vc\*.exe bin\*.* > nul
   copy lib\vc\*.lib lib\*.* > nul
   goto EXIT

:BUILD_ERR

   notepad make_vc.log
   goto EXIT

:CLEAN

   if exist bin\vc\*.exe del bin\vc\*.exe
   if exist bin\vc\*.pdb del bin\vc\*.pdb
   if exist bin\vc\*.ilk del bin\vc\*.ilk
   if exist bin\vc\*.map del bin\vc\*.map
   if exist lib\vc\*.lib del lib\vc\*.lib
   if exist obj\vc\*.obj del obj\vc\*.obj
   if exist obj\vc\*.c   del obj\vc\*.c
   if exist obj\vc\*.h   del obj\vc\*.h
   if exist obj\vc\*.pch del obj\vc\*.pch
   if exist make_vc.log  del make_vc.log
   goto EXIT

:EXIT

--Message-Boundary-11047
Content-type: text/plain; charset=US-ASCII
Content-disposition: inline
Content-description: Attachment information.

The following section of this message contains a file attachment
prepared for transmission using the Internet MIME message format.
If you are using Pegasus Mail, or any another MIME-compliant system,
you should be able to save it or view it from within your mailer.
If you cannot, please ask your system administrator for assistance.

   ---- File information -----------
     File:  hb_slex.vc
     Date:  17 Jan 2001, 7:48
     Size:  23830 bytes.
     Type:  Unknown

--Message-Boundary-11047
Content-type: Application/Octet-stream; name="hb_slex.vc"; type=Unknown
Content-disposition: attachment; filename="hb_slex.vc"
Content-transfer-encoding: BASE64

Iw0KIyAkSWQ6IGhiX3NsZXgudmMsdiAxLjAgMjAwMC8xMS8wMiAyMjo1NToyNiBqbXMgRXhw
ICQNCiMNCg0KIw0KIyBNYWtlZmlsZSBmb3IgSGFyYm91ciBQcm9qZWN0IGZvciBNaWNyb3Nv
ZnQgVmlzdWFsIEMgKDMyIGJpdHMpDQojDQoNCiMNCiMgTk9URTogWW91IGNhbiB1c2UgdGhl
c2UgZW52dmFycyB0byBjb25maWd1cmUgdGhlIG1ha2UgcHJvY2VzczoNCiMgICAgICAgKG5v
dGUgdGhhdCB0aGVzZSBhcmUgYWxsIG9wdGlvbmFsKQ0KIw0KIyAgICAgICBDRkxBR1MgICAg
ICAgLSBFeHRyYSBDIGNvbXBpbGVyIG9wdGlvbnMgZm9yIGxpYnJhcmllcyBhbmQgZm9yDQoj
ICAgICAgICAgICAgICAgICAgICAgIGV4ZWN1dGFibGVzDQojICAgICAgIENfVVNSICAgICAg
ICAtIEV4dHJhIEMgY29tcGlsZXIgb3B0aW9ucyBmb3IgbGlicmFyaWVzIGFuZCBmb3INCiMg
ICAgICAgICAgICAgICAgICAgICAgZXhlY3V0YWJsZXMgKEdOVSBtYWtlIGNvbXBhdGlibGUg
ZW52dmFyKQ0KIyAgICAgICBDTElCRkxBR1MgICAgLSBFeHRyYSBDIGNvbXBpbGVyIG9wdGlv
bnMgZm9yIHRoZSBsaWJyYXJpZXMNCiMgICAgICAgSEFSQk9VUkZMQUdTIC0gRXh0cmEgSGFy
Ym91ciBjb21waWxlciBvcHRpb25zDQojICAgICAgIFBSR19VU1IgICAgICAtIEV4dHJhIEhh
cmJvdXIgY29tcGlsZXIgb3B0aW9ucw0KIyAgICAgICAgICAgICAgICAgICAgICAoR05VIG1h
a2UgY29tcGF0aWJsZSBlbnZ2YXIpDQojICAgICAgIEhCX0dUX0xJQiAgICAtIFRvIG92ZXJy
aWRlIHRoZSBkZWZhdWx0IEdUIGRyaXZlcg0KIyAgICAgICAgICAgICAgICAgICAgICAoc2Vh
cmNoIGZvciBIQl9HVF9MSUJTIGZvciBhIGxpc3Qgb2YgdmFsdWVzKQ0KIw0KDQojDQojIE5v
dGVzIGFib3V0IHRoaXMgbWFrZWZpbGU6DQojDQojIDEuIFRvIGFkZCBuZXcgZmlsZXMgdG8g
YSBkZXBlbmRhbmN5IGxpc3QsIGFkZCBhbiBvYmogbmFtZSB0byBvbmUgb2YgdGhlDQojICAg
IE9CSiBsaXN0cyBmb3IgdGhlIGFwcHJvcHJpYXRlIGxpYnJhcnkuDQojICAgIE5PVEU6IHB1
dCAucHJnIHJlbGF0ZWQgb2JqJ3MgbGFzdCBpbiB0aGUgbGliIGxpc3QuDQojDQojIDIuIFRo
aXMgaXMgYSByZWN1cnNpdmUgc2NyaXB0LiAgSWYgeW91IGNoYW5nZSB0aGUgbmFtZSBvZiB0
aGlzIGZpbGUsDQojICAgIGJlIHN1cmUgdG8gY2hhbmdlIE1LX0ZJTEUgKGEgZmV3IGxpbmVz
IGRvd24pIHRvIHRoZSBuZXcgbmFtZSBhcyB3ZWxsLg0KIw0KIyAzLiBSZWN1cnJzaW9uIHJ1
bGVzIGFyZSBxdWl0ZSBzaW1wbGU6DQojICAgICBJZiB5b3Ugc3BlY2lmaXkgL2Egb24gdGhl
IGNvbW1hbmQgbGluZSwgZmlsZXMgaW4gdGhlIG9ialx2YyBkaXINCiMgICAgIHdpbGwgYmUg
ZGVsZXRlZCwgYW5kIHdoZW4gbm1ha2UgcmVjdXJzZXMsIGl0J3Mgd2l0aG91dCB0aGUgL2Eg
ZmxhZw0KIw0KIyAgICAgSWYgYSAucHJnLm9iaiBydWxlIGlzIGZpcmVkLCBubWFrZSB3aWxs
IGV4ZWN1dGUgdGhpcyBzY3JpcHQgd2l0aA0KIyAgICAgYSBzcGVjaWZpYyB0YXJnZXQgYXMg
YSBwYXJhbWV0ZXIgaW1tZWRpYXRsZXkgYWZ0ZXIgY29tcGlsaW5nIGEgZ2l2ZW4NCiMgICAg
IHNldCBvZiBwcmcgZmlsZXMuDQojICAgICAgaWU6IEhhcmJvdXIgJDwNCiMgICAgICAgICAg
bm1ha2UgL2ZtYWtlZmlsZS52YyBvYmpcdmNccnRsLmxpYjINCiMgICAgIHdoaWNoIHdpbGwg
c2ltcGx5IGdldCBtYWtlIHRvIHJlLWV2YWx1YXRlIHRoZSBkZXBlbmRhbmN5IGxpc3QgZm9y
IHRoZQ0KIyAgICAgbGliLCBhbmQgYXMgYSByZXN1bHQsIGl0IHdpbGwgZXhlY3V0ZSB0aGUg
QyBjb21waWxlciB1c2luZyB0aGUgLmMub2JqDQojICAgICBydWxlIGJlbG93IHRvIGNyZWF0
ZSB0aGUgb2JqJ3MgZm9yIHRoZSBwcmcncyB0aGF0IHdlcmUgY3JlYXRlZCBqdXN0DQojICAg
ICBwcmlvciB0byB0aGUgcmVjdXJyc2l2ZSBjYWxsLiBPbmNlIHRoZSBvYmoncyBhcmUgY3Jl
YXRlZCwgdGhlDQojICAgICByZWN1cnJzaW9uIGlzIGNvbXBsZXRlLg0KIyAgICAgU2VlIGFk
ZGl0aW9uYWwgbm90ZXMgdW5kZXIgUlRMLkxJQiBiZWxvdy4NCiMNCg0KTUtfRklMRSAgICAg
ID0gaGJfc2xleC52Yw0KTUtfRkxBR1MgICAgID0gJChNQUtFRkxBR1M6ID0pDQoNCkJJTl9E
SVIgICAgICA9IGJpblx2Yw0KTElCX0RJUiAgICAgID0gbGliXHZjDQpPQkpfRElSICAgICAg
PSBvYmpcdmMNCg0KIw0KIyBEaXJlY3RvcnkgbWFjcm9zLiBUaGVzZSBzaG91bGQgbmV2ZXIg
aGF2ZSB0byBjaGFuZ2UuDQojDQoNCklOQ0xVREVfRElSICA9IGluY2x1ZGUNCkNPTU1PTl9E
SVIgICA9IHNvdXJjZVxjb21tb24NCkNPTVBJTEVSX0RJUiA9IHNvdXJjZVxjb21waWxlcg0K
REVCVUdfRElSICAgID0gc291cmNlXGRlYnVnDQpMQU5HX0RJUiAgICAgPSBzb3VyY2VcbGFu
Zw0KTUFDUk9fRElSICAgID0gc291cmNlXG1hY3JvDQpQUF9ESVIgICAgICAgPSBzb3VyY2Vc
cHANClJERF9ESVIgICAgICA9IHNvdXJjZVxyZGQNClJUTF9ESVIgICAgICA9IHNvdXJjZVxy
dGwNClZNX0RJUiAgICAgICA9IHNvdXJjZVx2bQ0KSEJSVU5fRElSICAgID0gdXRpbHNcaGJy
dW4NCkhCVEVTVF9ESVIgICA9IHV0aWxzXGhidGVzdA0KSEJET0NfRElSICAgID0gdXRpbHNc
aGJkb2MNCkhCUFBfRElSICAgICA9IHV0aWxzXGhicHANCg0KIw0KIyBDIGNvbXBpbGVyIGRl
ZmluaXRpb24gYW5kIEMgZmxhZ3MuIFRoZXNlIHNob3VsZCBuZXZlciBoYXZlIHRvIGNoYW5n
ZS4NCiMNCg0KQVMgICAgICAgICAgICAgPSBtYXNtDQpDRkxBR1MgICAgICAgICA9IC1JJChJ
TkNMVURFX0RJUikgLVRQIC1XMyAtbm9sb2dvICQoQ19VU1IpICQoQ0ZMQUdTKQ0KQ0xJQkZM
QUdTICAgICAgPSAtYyAkKENGTEFHUykgJChDTElCRkxBR1MpDQpDTElCRkxBR1NERUJVRyA9
IC1aaSAkKENMSUJGTEFHUykNCiNIQVJCT1VSRkxBR1MgICA9IC1pJChJTkNMVURFX0RJUikg
LW4gLXEwIC13IC1lczIgLWdjMCAkKFBSR19VU1IpICQoSEFSQk9VUkZMQUdTKQ0KSEFSQk9V
UkZMQUdTICAgPSAtaSQoSU5DTFVERV9ESVIpIC1uIC13IC1lczIgLWdjMCAkKFBSR19VU1Ip
ICQoSEFSQk9VUkZMQUdTKQ0KTERGTEFHUyAgICAgICAgPSAkKExERkxBR1MpDQoNCiMNCiMg
TWFjcm9zIHRvIGFjY2VzcyBvdXIgbGlicmFyeSBuYW1lcw0KIw0KDQpDT01NT05fTElCICAg
PSAkKExJQl9ESVIpXGNvbW1vbi5saWINCkRCRkNEWF9MSUIgICA9ICQoTElCX0RJUilcZGJm
Y2R4LmxpYg0KREJGTlRYX0xJQiAgID0gJChMSUJfRElSKVxkYmZudHgubGliDQpERUJVR19M
SUIgICAgPSAkKExJQl9ESVIpXGRlYnVnLmxpYg0KTEFOR19MSUIgICAgID0gJChMSUJfRElS
KVxsYW5nLmxpYg0KTUFDUk9fTElCICAgID0gJChMSUJfRElSKVxtYWNyby5saWINCk5VTFNZ
U19MSUIgICA9ICQoTElCX0RJUilcbnVsc3lzLmxpYg0KUFBfTElCICAgICAgID0gJChMSUJf
RElSKVxwcC5saWINClJERF9MSUIgICAgICA9ICQoTElCX0RJUilccmRkLmxpYg0KUlRMX0xJ
QiAgICAgID0gJChMSUJfRElSKVxydGwubGliDQpWTV9MSUIgICAgICAgPSAkKExJQl9ESVIp
XHZtLmxpYg0KDQpHVENHSV9MSUIgICAgPSAkKExJQl9ESVIpXGd0Y2dpLmxpYg0KR1RQQ0Ff
TElCICAgID0gJChMSUJfRElSKVxndHBjYS5saWINCkdUU1REX0xJQiAgICA9ICQoTElCX0RJ
UilcZ3RzdGQubGliDQpHVFdJTl9MSUIgICAgPSAkKExJQl9ESVIpXGd0d2luLmxpYg0KDQpI
QVJCT1VSX0VYRSAgPSAkKEJJTl9ESVIpXGhhcmJvdXIuZXhlDQpIQlBQX0VYRSAgICAgPSAk
KEJJTl9ESVIpXGhicHAuZXhlDQpIQlJVTl9FWEUgICAgPSAkKEJJTl9ESVIpXGhicnVuLmV4
ZQ0KSEJURVNUX0VYRSAgID0gJChCSU5fRElSKVxoYnRlc3QuZXhlDQpIQkRPQ19FWEUgICAg
PSAkKEJJTl9ESVIpXGhiZG9jLmV4ZQ0KDQohaWZuZGVmIEhCX0dUX0xJQg0KSEJfR1RfTElC
ID0gJChHVFdJTl9MSUIpDQohZWxzZQ0KSEJfR1RfTElCID0gJChMSUJfRElSKVwkKEhCX0dU
X0xJQikubGliDQohZW5kaWYNCg0KIw0KIyBSdWxlcw0KIw0KDQouU1VGRklYRVM6IC5wcmcg
LmxpYiAuYyAub2JqIC5hc20NCg0KIyBvdmVycmlkZSBidWlsdGluDQoNCi5jLm9iajoNCiAg
ICQoQ0MpICQoQ0xJQkZMQUdTKSAtRm8kKE9CSl9ESVIpXCAkPA0KDQojDQojDQojDQoNCiMg
VE9ETzogQWRkIEdUU0xOIGFuZCBHVENSUw0KDQpMSUJMSVNUID0gXA0KICAgJChSVExfTElC
KSBcDQogICAkKENPTU1PTl9MSUIpIFwNCiAgICQoREVCVUdfTElCKSBcDQogICAkKE1BQ1JP
X0xJQikgXA0KICAgJChQUF9MSUIpIFwNCiAgICQoTEFOR19MSUIpIFwNCiAgICQoUkREX0xJ
QikgXA0KICAgJChEQkZDRFhfTElCKSBcDQogICAkKERCRk5UWF9MSUIpIFwNCiAgICQoTlVM
U1lTX0xJQikgXA0KICAgJChWTV9MSUIpIFwNCiAgICQoSEJfR1RfTElCKQ0KDQojDQojIG1h
Y3JvLmxpYiBuZWVkcyB0byBiZSBsaXN0ZWQgdHdpY2UNCiMNCg0KTElCUyA9IFwNCiAgICQo
TElCTElTVCkgXA0KICAgJChNQUNST19MSUIpDQoNCiMNCiMgcHJvZ3JhbXMgdGhhdCByZXF1
aXJlIHVzZXIzMi5saWIgKGZvciBPZW1Ub0Fuc2kpDQojDQoNCkxJQlMyID0gXA0KICAgJChM
SUJTKSBcDQogICB1c2VyMzIubGliDQoNCiMNCiMgUlRMLkxJQiBydWxlcw0KIw0KIyBob3cg
dGhpcyB3b3JrczoNCiMNCiMgIHt0YXJnZXQ+LnByZ3tvYmpkaXJ9Lm9iag0KIyAgSGFyYm91
ciAoZmxhZ3MpIC1vb2JqZGlyXCAkPA0KIyAgICBUaGUgbGlzdCBvZiBkZXBlbmRhbnQgcHJn
cyBpcyBzZW50IHRvIHRoZSBoYXJib3VyIGNvbXBpbGVyDQojICAgIFNpbmNlIHRoZSBydWxl
IGlzIC5wcmcgdG8gLm9iaiBhbmQgdGhlIGNvbXBpbGVyIHNwaXRzIG91dA0KIyAgICBDIGNv
ZGUgKGFzIHdlIHVzZSBpdCksIHdlIG5lZWQgdG8gZ2V0IHRob3NlIGludG8gb2JqIGZvcm1h
dC4NCiMgICAgU2luY2UgJCg8Oi5wcmc9LmMpIGRvZXNuJ3Qgd29yaywgd2UgZXhlY3V0ZSB0
aGlzIHNjcmlwdCBhZ2Fpbg0KIyAgICB3aXRoIGEgc3BlY2lmaWMgdGFyZ2V0IHZpYToNCiMg
IG5NYWtlIC9mbWFrZWZpbGUudmMgdGFyZ2V0LmxpYjINCiMgICAgSWYgeW91IHZpZXcgdGhh
dCB0YXJnZXQgYXQgdGhlIGJvdHRvbSBvZiB0aGlzIGZpbGUsIGFsbCBpdCBkb2VzDQojICAg
IGlzIGNhdXNlIG1ha2UgdG8gZXZhbHVhdGUgdGhlIG9iaiBsaXN0IG9mIGRlcGVuZGFudHMg
d2hpY2ggdGhlbg0KIyAgICBjYXVzZXMgdGhlIC5jLm9iaiBydWxlIGFib3ZlIHRvIGZpcmUu
IChieSBpbmZlcmVuY2UpDQoNCnskKFJUTF9ESVIpfS5jeyQoT0JKX0RJUil9Lm9iajoNCiAg
ICQoQ0MpICQoQ0xJQkZMQUdTKSAtRm8kKE9CSl9ESVIpXCAkPA0KDQp7JChSVExfRElSKX0u
cHJneyQoT0JKX0RJUil9Lm9iajoNCiAgICQoSEFSQk9VUl9FWEUpICQoSEFSQk9VUkZMQUdT
KSAtbyQoT0JKX0RJUilcICQ8DQogICAkKE1BS0UpIC1ub2xvZ28gLyQoTUtfRkxBR1MpIC9m
JChNS19GSUxFKSAkKFJUTF9MSUIpMg0KDQpSVExfTElCX09CSlMgPSBcDQogICAkKE9CSl9E
SVIpXGFicy5vYmogXA0KICAgJChPQkpfRElSKVxhY2NlcHQub2JqIFwNCiAgICQoT0JKX0RJ
UilcYW1wbS5vYmogXA0KICAgJChPQkpfRElSKVxhdC5vYmogXA0KICAgJChPQkpfRElSKVxi
aW5udW0ub2JqIFwNCiAgICQoT0JKX0RJUilcYmlubnVteC5vYmogXA0KICAgJChPQkpfRElS
KVxib3gub2JqIFwNCiAgICQoT0JKX0RJUilcY2hyYXNjLm9iaiBcDQogICAkKE9CSl9ESVIp
XGNvbG9yaW5kLm9iaiBcDQogICAkKE9CSl9ESVIpXGNvbnNvbGUub2JqIFwNCiAgICQoT0JK
X0RJUilcY29weWZpbGUub2JqIFwNCiAgICQoT0JKX0RJUilcZGF0ZWMub2JqIFwNCiAgICQo
T0JKX0RJUilcZGF0ZXMub2JqIFwNCiAgICQoT0JKX0RJUilcZGF0ZXNoYi5vYmogXA0KICAg
JChPQkpfRElSKVxkYXRlc3gub2JqIFwNCiAgICQoT0JKX0RJUilcZGVmcGF0aC5vYmogXA0K
ICAgJChPQkpfRElSKVxkZXNjZW5kLm9iaiBcDQogICAkKE9CSl9ESVIpXGRpci5vYmogXA0K
ICAgJChPQkpfRElSKVxkaXJkcml2ZS5vYmogXA0KICAgJChPQkpfRElSKVxkaXNrc3BhYy5v
YmogXA0KICAgJChPQkpfRElSKVxkaXNrc3BoYi5vYmogXA0KICAgJChPQkpfRElSKVxkby5v
YmogXA0KICAgJChPQkpfRElSKVxlbXB0eS5vYmogXA0KICAgJChPQkpfRElSKVxlcnJvcmFw
aS5vYmogXA0KICAgJChPQkpfRElSKVxmaWxlc3lzLm9iaiBcDQogICAkKE9CSl9ESVIpXGZr
bWF4Lm9iaiBcDQogICAkKE9CSl9ESVIpXGZuc3BsaXQub2JqIFwNCiAgICQoT0JKX0RJUilc
ZnNzaXplLm9iaiBcDQogICAkKE9CSl9ESVIpXGZzdGVtcC5vYmogXA0KICAgJChPQkpfRElS
KVxnZXRlLm9iaiBcDQogICAkKE9CSl9ESVIpXGd0Lm9iaiBcDQogICAkKE9CSl9ESVIpXGd0
YXBpLm9iaiBcDQogICAkKE9CSl9ESVIpXGd0YXBpdS5vYmogXA0KICAgJChPQkpfRElSKVxn
eC5vYmogXA0KICAgJChPQkpfRElSKVxoYXJkY3Iub2JqIFwNCiAgICQoT0JKX0RJUilcaWRs
ZS5vYmogXA0KICAgJChPQkpfRElSKVxpbmtleS5vYmogXA0KICAgJChPQkpfRElSKVxpcy5v
YmogXA0KICAgJChPQkpfRElSKVxpc3ByaW50Lm9iaiBcDQogICAkKE9CSl9ESVIpXGxhbmdh
cGkub2JqIFwNCiAgICQoT0JKX0RJUilcbGVmdC5vYmogXA0KICAgJChPQkpfRElSKVxsZW4u
b2JqIFwNCiAgICQoT0JKX0RJUilcbGVubnVtLm9iaiBcDQogICAkKE9CSl9ESVIpXG1hdGgu
b2JqIFwNCiAgICQoT0JKX0RJUilcbWF4cm93Lm9iaiBcDQogICAkKE9CSl9ESVIpXG1lbW9m
aWxlLm9iaiBcDQogICAkKE9CSl9ESVIpXG1lbW9saW5lLm9iaiBcDQogICAkKE9CSl9ESVIp
XG1pbm1heC5vYmogXA0KICAgJChPQkpfRElSKVxtbGNvdW50Lm9iaiBcDQogICAkKE9CSl9E
SVIpXG1scG9zLm9iaiBcDQogICAkKE9CSl9ESVIpXG1vZC5vYmogXA0KICAgJChPQkpfRElS
KVxtb3VzZWFwaS5vYmogXA0KICAgJChPQkpfRElSKVxtb3VzZXgub2JqIFwNCiAgICQoT0JK
X0RJUilcbXRyYW4ub2JqIFwNCiAgICQoT0JKX0RJUilcbmF0bXNnLm9iaiBcDQogICAkKE9C
Sl9ESVIpXG5ldC5vYmogXA0KICAgJChPQkpfRElSKVxvZW1hbnNpLm9iaiBcDQogICAkKE9C
Sl9ESVIpXG9sZGJveC5vYmogXA0KICAgJChPQkpfRElSKVxvbGRjbGVhci5vYmogXA0KICAg
JChPQkpfRElSKVxwYWQub2JqIFwNCiAgICQoT0JKX0RJUilccGFkYy5vYmogXA0KICAgJChP
QkpfRElSKVxwYWRsLm9iaiBcDQogICAkKE9CSl9ESVIpXHBhZHIub2JqIFwNCiAgICQoT0JK
X0RJUilccGhpbGVzLm9iaiBcDQogICAkKE9CSl9ESVIpXHBoaWxlczUzLm9iaiBcDQogICAk
KE9CSl9ESVIpXHBoaWxlc3gub2JqIFwNCiAgICQoT0JKX0RJUilccmF0Lm9iaiBcDQogICAk
KE9CSl9ESVIpXHJlcGxpYy5vYmogXA0KICAgJChPQkpfRElSKVxyaWdodC5vYmogXA0KICAg
JChPQkpfRElSKVxyb3VuZC5vYmogXA0KICAgJChPQkpfRElSKVxydW4ub2JqIFwNCiAgICQo
T0JKX0RJUilcc2FtcGxlcy5vYmogXA0KICAgJChPQkpfRElSKVxzYXZlcmVzdC5vYmogXA0K
ICAgJChPQkpfRElSKVxzY3JvbGwub2JqIFwNCiAgICQoT0JKX0RJUilcc2Vjb25kcy5vYmog
XA0KICAgJChPQkpfRElSKVxzZXQub2JqIFwNCiAgICQoT0JKX0RJUilcc2V0Y29sb3Iub2Jq
IFwNCiAgICQoT0JKX0RJUilcc2V0Y3Vycy5vYmogXA0KICAgJChPQkpfRElSKVxzZXRrZXku
b2JqIFwNCiAgICQoT0JKX0RJUilcc2V0cG9zLm9iaiBcDQogICAkKE9CSl9ESVIpXHNldHBv
c2JzLm9iaiBcDQogICAkKE9CSl9ESVIpXHNoYWRvdy5vYmogXA0KICAgJChPQkpfRElSKVxz
b3VuZGV4Lm9iaiBcDQogICAkKE9CSl9ESVIpXHNwYWNlLm9iaiBcDQogICAkKE9CSl9ESVIp
XHN0ci5vYmogXA0KICAgJChPQkpfRElSKVxzdHJjYXNlLm9iaiBcDQogICAkKE9CSl9ESVIp
XHN0cmluZ3Mub2JqIFwNCiAgICQoT0JKX0RJUilcc3RybWF0Y2gub2JqIFwNCiAgICQoT0JK
X0RJUilcc3RydHJhbi5vYmogXA0KICAgJChPQkpfRElSKVxzdHJ6ZXJvLm9iaiBcDQogICAk
KE9CSl9ESVIpXHN0dWZmLm9iaiBcDQogICAkKE9CSl9ESVIpXHN1YnN0ci5vYmogXA0KICAg
JChPQkpfRElSKVx0ZWRpdG9ybC5vYmogXA0KICAgJChPQkpfRElSKVx0b25lLm9iaiBcDQog
ICAkKE9CSl9ESVIpXHRyYWNlLm9iaiBcDQogICAkKE9CSl9ESVIpXHRyYW5zZnJtLm9iaiBc
DQogICAkKE9CSl9ESVIpXHRyaW0ub2JqIFwNCiAgICQoT0JKX0RJUilcdHlwZS5vYmogXA0K
ICAgJChPQkpfRElSKVx2YWwub2JqIFwNCiAgICQoT0JKX0RJUilcdmFsdG9zdHIub2JqIFwN
CiAgICQoT0JKX0RJUilcdmFsdHlwZS5vYmogXA0KICAgJChPQkpfRElSKVx2ZXJzaW9uLm9i
aiBcDQogICAkKE9CSl9ESVIpXHdvcmQub2JqIFwNCiAgICQoT0JKX0RJUilceGhlbHAub2Jq
IFwNCiAgICQoT0JKX0RJUilceHNhdmVzY3Iub2JqIFwNCiAgIFwNCiAgICQoT0JKX0RJUilc
YWNob2ljZS5vYmogXA0KICAgJChPQkpfRElSKVxhZGlyLm9iaiBcDQogICAkKE9CSl9ESVIp
XGFsZXJ0Lm9iaiBcDQogICAkKE9CSl9ESVIpXGJyb3dkYi5vYmogXA0KICAgJChPQkpfRElS
KVxicm93ZGJ4Lm9iaiBcDQogICAkKE9CSl9ESVIpXGJyb3dzZS5vYmogXA0KICAgJChPQkpf
RElSKVxkYmVkaXQub2JqIFwNCiAgICQoT0JKX0RJUilcZGV2b3V0cC5vYmogXA0KICAgJChP
QkpfRElSKVxkaXJjbWQub2JqIFwNCiAgICQoT0JKX0RJUilcZHVtbXkub2JqIFwNCiAgICQo
T0JKX0RJUilcZXJyb3JzeXMub2JqIFwNCiAgICQoT0JKX0RJUilcZmllbGRibC5vYmogXA0K
ICAgJChPQkpfRElSKVxnZXRsaXN0Lm9iaiBcDQogICAkKE9CSl9ESVIpXGdldHN5cy5vYmog
XA0KICAgJChPQkpfRElSKVxpbnB1dC5vYmogXA0KICAgJChPQkpfRElSKVxtZW1vZWRpdC5v
YmogXA0KICAgJChPQkpfRElSKVxtZW12YXJibC5vYmogXA0KICAgJChPQkpfRElSKVxtZW51
dG8ub2JqIFwNCiAgICQoT0JKX0RJUilcb2JqZnVuYy5vYmogXA0KICAgJChPQkpfRElSKVxy
ZWFka2V5Lm9iaiBcDQogICAkKE9CSl9ESVIpXHJlYWR2YXIub2JqIFwNCiAgICQoT0JKX0RJ
Uilcc2V0ZnVuYy5vYmogXA0KICAgJChPQkpfRElSKVxzZXR0YS5vYmogXA0KICAgJChPQkpf
RElSKVx0YmNvbHVtbi5vYmogXA0KICAgJChPQkpfRElSKVx0YnJvd3NlLm9iaiBcDQogICAk
KE9CSl9ESVIpXHRjbGFzcy5vYmogXA0KICAgJChPQkpfRElSKVx0ZWRpdG9yLm9iaiBcDQog
ICAkKE9CSl9ESVIpXHRlcnJvci5vYmogXA0KICAgJChPQkpfRElSKVx0ZXh0Lm9iaiBcDQog
ICAkKE9CSl9ESVIpXHRnZXQub2JqIFwNCiAgICQoT0JKX0RJUilcdGdldGludC5vYmogXA0K
ICAgJChPQkpfRElSKVx0Z2V0bGlzdC5vYmogXA0KICAgJChPQkpfRElSKVx0bGFiZWwub2Jq
IFwNCiAgICQoT0JKX0RJUilcdG1lbnVpdG0ub2JqIFwNCiAgICQoT0JKX0RJUilcdG9iamVj
dC5vYmogXA0KICAgJChPQkpfRElSKVx0cG9wdXAub2JqIFwNCiAgICQoT0JKX0RJUilcdHJl
cG9ydC5vYmogXA0KICAgJChPQkpfRElSKVx0dGV4dGxpbi5vYmogXA0KICAgJChPQkpfRElS
KVx0dG9wYmFyLm9iaiBcDQogICAkKE9CSl9ESVIpXHR5cGVmaWxlLm9iaiBcDQogICAkKE9C
Sl9ESVIpXHdhaXQub2JqDQoNCiMNCiMgTEFORy5MSUIgcnVsZXMNCiMNCg0KeyQoTEFOR19E
SVIpfS5jeyQoT0JKX0RJUil9Lm9iajoNCiAgICQoQ0MpICQoQ0xJQkZMQUdTKSAtRm8kKE9C
Sl9ESVIpXCAgJDwNCg0KTEFOR19MSUJfT0JKUyA9IFwNCiAgICQoT0JKX0RJUilcbXNnY2Eu
b2JqIFwNCiAgICQoT0JKX0RJUilcbXNnY3M4NTIub2JqIFwNCiAgICQoT0JKX0RJUilcbXNn
Y3Npc28ub2JqIFwNCiAgICQoT0JKX0RJUilcbXNnY3NrYW0ub2JqIFwNCiAgICQoT0JKX0RJ
UilcbXNnY3N3aW4ub2JqIFwNCiAgICQoT0JKX0RJUilcbXNnZGUub2JqIFwNCiAgICQoT0JK
X0RJUilcbXNnZW4ub2JqIFwNCiAgICQoT0JKX0RJUilcbXNnZXMub2JqIFwNCiAgICQoT0JK
X0RJUilcbXNnZXUub2JqIFwNCiAgICQoT0JKX0RJUilcbXNnZnIub2JqIFwNCiAgICQoT0JK
X0RJUilcbXNnZ2wub2JqIFwNCiAgICQoT0JKX0RJUilcbXNnaGU4NjIub2JqIFwNCiAgICQo
T0JKX0RJUilcbXNnaGV3aW4ub2JqIFwNCiAgICQoT0JKX0RJUilcbXNnaHI4NTIub2JqIFwN
CiAgICQoT0JKX0RJUilcbXNnaHJpc28ub2JqIFwNCiAgICQoT0JKX0RJUilcbXNnaHU4NTIu
b2JqIFwNCiAgICQoT0JKX0RJUilcbXNnaHVjd2kub2JqIFwNCiAgICQoT0JKX0RJUilcbXNn
aHV3aW4ub2JqIFwNCiAgICQoT0JKX0RJUilcbXNnaWQub2JqIFwNCiAgICQoT0JKX0RJUilc
bXNnaXM4NTAub2JqIFwNCiAgICQoT0JKX0RJUilcbXNnaXQub2JqIFwNCiAgICQoT0JKX0RJ
UilcbXNna28ub2JqIFwNCiAgICQoT0JKX0RJUilcbXNncGw4NTIub2JqIFwNCiAgICQoT0JK
X0RJUilcbXNncGxpc28ub2JqIFwNCiAgICQoT0JKX0RJUilcbXNncGxtYXoub2JqIFwNCiAg
ICQoT0JKX0RJUilcbXNncHQub2JqIFwNCiAgICQoT0JKX0RJUilcbXNncm8ub2JqIFwNCiAg
ICQoT0JKX0RJUilcbXNnc3I4NTIub2JqIFwNCiAgICQoT0JKX0RJUilcbXNnc3Jpc28ub2Jq
DQoNCiMNCiMgTUFDUk8uTElCIHJ1bGVzDQojDQoNCnskKE1BQ1JPX0RJUil9LmN7JChPQkpf
RElSKX0ub2JqOg0KICAgJChDQykgJChDTElCRkxBR1MpIC1GbyQoT0JKX0RJUilcICAkPA0K
DQpNQUNST19MSUJfT0JKUyA9IFwNCiAgICQoT0JKX0RJUilcbWFjcm95Lm9iaiBcDQogICAk
KE9CSl9ESVIpXG1hY3Jvc2x4Lm9iaiBcDQogICAkKE9CSl9ESVIpXG1hY3JvYS5vYmogXA0K
ICAgJChPQkpfRElSKVxtYWNyb2Iub2JqIFwNCiAgICQoT0JKX0RJUilcbWFjcm9jLm9iag0K
DQojDQojIFJERC5MSUIgcnVsZXMNCiMNCg0KeyQoUkREX0RJUil9LmN7JChPQkpfRElSKX0u
b2JqOg0KICAgJChDQykgJChDTElCRkxBR1MpIC1GbyQoT0JKX0RJUilcICAkPA0KDQp7JChS
RERfRElSKX0ucHJneyQoT0JKX0RJUil9Lm9iajoNCiAgICQoSEFSQk9VUl9FWEUpICQoSEFS
Qk9VUkZMQUdTKSAtbyQoT0JKX0RJUilcICQ8DQogICAkKE1BS0UpIC1ub2xvZ28gLyQoTUtf
RkxBR1MpIC9mJChNS19GSUxFKSAkKFJERF9MSUIpMg0KDQpSRERfTElCX09CSlMgPSBcDQog
ICAkKE9CSl9ESVIpXGRiY21kLm9iaiBcDQogICAkKE9CSl9ESVIpXHdvcmthcmVhLm9iaiBc
DQogICAkKE9CSl9ESVIpXGRiZjEub2JqIFwNCiAgICQoT0JKX0RJUilcZGJudWJzLm9iaiBc
DQogICAkKE9CSl9ESVIpXGRlbGltMS5vYmogXA0KICAgJChPQkpfRElSKVxzZGYxLm9iaiBc
DQogICBcDQogICAkKE9CSl9ESVIpXGRiZjAub2JqIFwNCiAgICQoT0JKX0RJUilcZGJsaXN0
Lm9iaiBcDQogICAkKE9CSl9ESVIpXGRic29ydC5vYmogXA0KICAgJChPQkpfRElSKVxoYmRi
c29ydC5vYmogXA0KICAgJChPQkpfRElSKVxkYnN0cnV4Lm9iaiBcDQogICAkKE9CSl9ESVIp
XGRidXBkYXQub2JqIFwNCiAgICQoT0JKX0RJUilcZGVsaW0wLm9iaiBcDQogICAkKE9CSl9E
SVIpXHJkZG9yZC5vYmogXA0KICAgJChPQkpfRElSKVxyZGRzeXMub2JqIFwNCiAgICQoT0JK
X0RJUilcc2RmMC5vYmoNCg0KDQojDQojIE5VTFNZUy5MSUIgcnVsZXMNCiMNCg0KeyQoUkRE
X0RJUilcbnVsc3lzfS5jeyQoT0JKX0RJUil9Lm9iajoNCiAgICQoQ0MpICQoQ0xJQkZMQUdT
KSAtRm8kKE9CSl9ESVIpXCAgJDwNCg0KeyQoUkREX0RJUilcbnVsc3lzfS5wcmd7JChPQkpf
RElSKX0ub2JqOg0KICAgJChIQVJCT1VSX0VYRSkgJChIQVJCT1VSRkxBR1MpIC1vJChPQkpf
RElSKVwgJDwNCiAgICQoTUFLRSkgLW5vbG9nbyAvJChNS19GTEFHUykgL2YkKE1LX0ZJTEUp
ICQoTlVMU1lTX0xJQikyDQoNCk5VTFNZU19MSUJfT0JKUyA9IFwNCiAgICQoT0JKX0RJUilc
bnVsc3lzLm9iag0KDQoNCiMNCiMgREJGTlRYLkxJQiBydWxlcw0KIw0KDQp7JChSRERfRElS
KVxkYmZudHh9LmN7JChPQkpfRElSKX0ub2JqOg0KICAgJChDQykgJChDTElCRkxBR1MpIC1G
byQoT0JKX0RJUilcICAkPA0KDQp7JChSRERfRElSKVxkYmZudHh9LnByZ3skKE9CSl9ESVIp
fS5vYmo6DQogICAkKEhBUkJPVVJfRVhFKSAkKEhBUkJPVVJGTEFHUykgLW8kKE9CSl9ESVIp
XCAkPA0KICAgJChNQUtFKSAtbm9sb2dvIC8kKE1LX0ZMQUdTKSAvZiQoTUtfRklMRSkgJChE
QkZOVFhfTElCKTINCg0KI0RCRk5UWF9MSUJfT0JKUyA9IFwNCiMgICAkKE9CSl9ESVIpXGRi
Zm50eDEub2JqIFwNCiMgICBcDQojICAgJChPQkpfRElSKVxkYmZudHgwLm9iag0KREJGTlRY
X0xJQl9PQkpTID0gXA0KICAgJChPQkpfRElSKVxkYmZudHgwLm9iag0KDQojDQojIERCRkNE
WC5MSUIgcnVsZXMNCiMNCg0KeyQoUkREX0RJUilcZGJmY2R4fS5jeyQoT0JKX0RJUil9Lm9i
ajoNCiAgICQoQ0MpICQoQ0xJQkZMQUdTKSAtRm8kKE9CSl9ESVIpXCAgJDwNCg0KeyQoUkRE
X0RJUilcZGJmY2R4fS5wcmd7JChPQkpfRElSKX0ub2JqOg0KICAgJChIQVJCT1VSX0VYRSkg
JChIQVJCT1VSRkxBR1MpIC1vJChPQkpfRElSKVwgJDwNCiAgICQoTUFLRSkgLW5vbG9nbyAv
JChNS19GTEFHUykgL2YkKE1LX0ZJTEUpICQoREJGQ0RYX0xJQikyDQoNCkRCRkNEWF9MSUJf
T0JKUyA9IFwNCiAgICQoT0JKX0RJUilcZGJmY2R4MS5vYmogXA0KICAgXA0KICAgJChPQkpf
RElSKVxkYmZjZHgwLm9iag0KDQojDQojIFBQLkxJQiBydWxlcw0KIw0KDQp7JChQUF9ESVIp
fS5jeyQoT0JKX0RJUil9Lm9iajoNCiAgICQoQ0MpICQoQ0xJQkZMQUdTKSAtRm8kKE9CSl9E
SVIpXCAgJDwNCg0KUFBfTElCX09CSlMgPSBcDQogICAkKE9CSl9ESVIpXHBwY29yZS5vYmog
XA0KICAgJChPQkpfRElSKVxwcGNvbXAub2JqIFwNCiAgICQoT0JKX0RJUilccHBsaWIub2Jq
IFwNCiAgICQoT0JKX0RJUilccHB0YWJsZS5vYmogXA0KICAgJChPQkpfRElSKVxwcmFnbWEu
b2JqDQoNCiMNCiMgREVCVUcuTElCIHJ1bGVzDQojDQoNCnskKERFQlVHX0RJUil9LmN7JChP
QkpfRElSKX0ub2JqOg0KICAgJChDQykgJChDTElCRkxBR1MpIC1GbyQoT0JKX0RJUilcICAk
PA0KDQp7JChERUJVR19ESVIpfS5wcmd7JChPQkpfRElSKX0ub2JqOg0KICAgJChIQVJCT1VS
X0VYRSkgJChIQVJCT1VSRkxBR1MpIC1vJChPQkpfRElSKVwgJDwNCiAgICQoTUFLRSkgLW5v
bG9nbyAvJChNS19GTEFHUykgL2YkKE1LX0ZJTEUpICQoREVCVUdfTElCKTINCg0KREVCVUdf
TElCX09CSlMgPSBcDQogICAkKE9CSl9ESVIpXGRiZ21lbnUub2JqIFwNCiAgICQoT0JKX0RJ
UilcZGJndG1lbnUub2JqIFwNCiAgICQoT0JKX0RJUilcZGJndG1pdG0ub2JqIFwNCiAgICQo
T0JKX0RJUilcZGJndHdpbi5vYmogXA0KICAgJChPQkpfRElSKVxkZWJ1Z2dlci5vYmogXA0K
ICAgJChPQkpfRElSKVx0YnJ3dGV4dC5vYmoNCg0KIw0KIyBDT01NT04uTElCIHJ1bGVzDQoj
DQoNCnskKENPTU1PTl9ESVIpfS5jeyQoT0JKX0RJUil9Lm9iajoNCiAgICQoQ0MpICQoQ0xJ
QkZMQUdTKSAtRm8kKE9CSl9ESVIpXCAgJDwNCg0KQ09NTU9OX0xJQl9PQkpTID0gXA0KICAg
JChPQkpfRElSKVxoYmZzYXBpLm9iaiBcDQogICAkKE9CSl9ESVIpXGhic3RyLm9iaiBcDQog
ICAkKE9CSl9ESVIpXGhidHJhY2Uub2JqIFwNCiAgICQoT0JKX0RJUilcaGJ2ZXIub2JqIFwN
CiAgICQoT0JKX0RJUilcaGFzaC5vYmogXA0KICAgJChPQkpfRElSKVxleHByb3B0MS5vYmog
XA0KICAgJChPQkpfRElSKVxleHByb3B0Mi5vYmogXA0KICAgJChPQkpfRElSKVxyZXNlcnZl
ZC5vYmoNCg0KIw0KIyBWTS5MSUIgcnVsZXMNCiMNCg0KeyQoVk1fRElSKX0uYXNteyQoT0JK
X0RJUil9Lm9iajoNCiAgIHJlbSBsaWIgL2V4dHJhY3Q6JChPQkpfRElSKVxzeW1ib2xzLm9i
aiAvb3V0OiQoT0JKX0RJUilcc3ltYm9scy5vYmogXGhhcmIzNVxsaWJcdm0ubGliDQogICAk
KEFTKSAkPCAkQCBudWwgbnVsDQoNCnskKFZNX0RJUil9LmN7JChPQkpfRElSKX0ub2JqOg0K
ICAgJChDQykgJChDTElCRkxBR1MpIC1GbyQoT0JKX0RJUilcICAkPA0KDQp7JChWTV9ESVIp
fS5wcmd7JChPQkpfRElSKX0ub2JqOg0KICAgJChIQVJCT1VSX0VYRSkgJChIQVJCT1VSRkxB
R1MpIC1vJChPQkpfRElSKVwgJDwNCiAgICQoTUFLRSkgLW5vbG9nbyAvJChNS19GTEFHUykg
L2YkKE1LX0ZJTEUpICQoVk1fTElCKTINCg0KVk1fTElCX09CSlMgPSBcDQogICAkKE9CSl9E
SVIpXGFycmF5cy5vYmogXA0KICAgJChPQkpfRElSKVxhcnJheXNoYi5vYmogXA0KICAgJChP
QkpfRElSKVxhc29ydC5vYmogXA0KICAgJChPQkpfRElSKVxicmVhay5vYmogXA0KICAgJChP
QkpfRElSKVxjbGFzc2VzLm9iaiBcDQogICAkKE9CSl9ESVIpXGNtZGFyZy5vYmogXA0KICAg
JChPQkpfRElSKVxjb2RlYmxvYy5vYmogXA0KICAgJChPQkpfRElSKVxkZWJ1Zy5vYmogXA0K
ICAgJChPQkpfRElSKVxkeW5zeW0ub2JqIFwNCiAgICQoT0JKX0RJUilcZXN0YWNrLm9iaiBc
DQogICAkKE9CSl9ESVIpXGV2YWwub2JqIFwNCiAgICQoT0JKX0RJUilcZXh0ZW5kLm9iaiBc
DQogICAkKE9CSl9ESVIpXGZtLm9iaiBcDQogICAkKE9CSl9ESVIpXGdhcmJhZ2Uub2JqIFwN
CiAgICQoT0JKX0RJUilcaHZtLm9iaiBcDQogICAkKE9CSl9ESVIpXGluaXRleGl0Lm9iaiBc
DQogICAkKE9CSl9ESVIpXGluaXRzeW1iLm9iaiBcDQogICAkKE9CSl9ESVIpXGl0ZW1hcGku
b2JqIFwNCiAgICQoT0JKX0RJUilcbWFjcm8ub2JqIFwNCiAgICQoT0JKX0RJUilcbWFpbmRs
bC5vYmogXA0KICAgJChPQkpfRElSKVxtYWluc3RkLm9iaiBcDQogICAkKE9CSl9ESVIpXG1h
aW53aW4ub2JqIFwNCiAgICQoT0JKX0RJUilcbWVtdmFycy5vYmogXA0KICAgJChPQkpfRElS
KVxtZW12Y2xpcC5vYmogXA0KICAgJChPQkpfRElSKVxwY291bnQub2JqIFwNCiAgICQoT0JK
X0RJUilccHJvYy5vYmogXA0KICAgJChPQkpfRElSKVxwdmFsdWUub2JqIFwNCiAgICQoT0JK
X0RJUilccnVubmVyLm9iaiBcDQogICBcDQogICAkKE9CSl9ESVIpXHN5bWJvbHMub2JqIFwN
CiAgIFwNCiAgICQoT0JKX0RJUilcaGFyYmluaXQub2JqDQoNCiMNCiMgR1RDR0kuTElCIHJ1
bGVzDQojDQoNCnskKFJUTF9ESVIpXGd0Y2dpfS5jeyQoT0JKX0RJUil9Lm9iajoNCiAgICQo
Q0MpICQoQ0xJQkZMQUdTKSAtRm8kKE9CSl9ESVIpXCAgJDwNCg0KR1RDR0lfTElCX09CSlMg
PSBcDQogICAkKE9CSl9ESVIpXGd0Y2dpLm9iaiBcDQogICAkKE9CSl9ESVIpXG1vdXNlY2dp
Lm9iag0KDQojDQojIEdUUENBLkxJQiBydWxlcw0KIw0KDQp7JChSVExfRElSKVxndHBjYX0u
Y3skKE9CSl9ESVIpfS5vYmo6DQogICAkKENDKSAkKENMSUJGTEFHUykgLUZvJChPQkpfRElS
KVwgICQ8DQoNCkdUUENBX0xJQl9PQkpTID0gXA0KICAgJChPQkpfRElSKVxndHBjYS5vYmog
XA0KICAgJChPQkpfRElSKVxtb3VzZXBjYS5vYmoNCg0KIw0KIyBHVFNURC5MSUIgcnVsZXMN
CiMNCg0KeyQoUlRMX0RJUilcZ3RzdGR9LmN7JChPQkpfRElSKX0ub2JqOg0KICAgJChDQykg
JChDTElCRkxBR1MpIC1GbyQoT0JKX0RJUilcICAkPA0KDQpHVFNURF9MSUJfT0JKUyA9IFwN
CiAgICQoT0JKX0RJUilcZ3RzdGQub2JqIFwNCiAgICQoT0JKX0RJUilcbW91c2VzdGQub2Jq
DQoNCiMNCiMgR1RXSU4uTElCIHJ1bGVzDQojDQoNCnskKFJUTF9ESVIpXGd0d2lufS5jeyQo
T0JKX0RJUil9Lm9iajoNCiAgICQoQ0MpICQoQ0xJQkZMQUdTKSAtRm8kKE9CSl9ESVIpXCAg
JDwNCg0KR1RXSU5fTElCX09CSlMgPSBcDQogICAkKE9CSl9ESVIpXGd0d2luLm9iaiBcDQog
ICAkKE9CSl9ESVIpXG1vdXNld2luLm9iag0KDQojDQojIE91ciBkZWZhdWx0IHRhcmdldA0K
Iw0KDQoNCiFpZiAoICIkKE1LX0ZMQUdTKSI9PSJBIiApDQoNCmFsbDogem90IFwNCiAgICQo
Q09NTU9OX0xJQikgXA0KICAgJChQUF9MSUIpIFwNCiAgICQoSEFSQk9VUl9FWEUpIFwNCiAg
ICQoVk1fTElCKSBcDQogICAkKFJUTF9MSUIpIFwNCiAgICQoTUFDUk9fTElCKSBcDQogICAk
KERFQlVHX0xJQikgXA0KICAgJChMQU5HX0xJQikgXA0KICAgJChSRERfTElCKSBcDQogICAk
KE5VTFNZU19MSUIpIFwNCiAgICQoREJGTlRYX0xJQikgXA0KICAgJChEQkZDRFhfTElCKSBc
DQogICAkKEdUQ0dJX0xJQikgXA0KICAgJChHVFBDQV9MSUIpIFwNCiAgICQoR1RTVERfTElC
KSBcDQogICAkKEdUV0lOX0xJQikgXA0KICAgJChIQlJVTl9FWEUpIFwNCiAgICQoSEJQUF9F
WEUpIFwNCiAgICQoSEJURVNUX0VYRSkgXA0KICAgJChIQkRPQ19FWEUpDQoNCk1LX0ZMQUdT
ID0gJChNS19GTEFHUzpBPSkNCg0Kem90Og0KICAgLUBpZiBleGlzdCAkKE9CSl9ESVIpXCou
b2JqIGRlbCAkKE9CSl9ESVIpXCoub2JqID4gbnVsDQogICAtQGlmIGV4aXN0ICQoT0JKX0RJ
UilcKi5jIGRlbCAkKE9CSl9ESVIpXCouYyA+IG51bA0KICAgLUBpZiBleGlzdCAkKE9CSl9E
SVIpXCouaCBkZWwgJChPQkpfRElSKVwqLmggPiBudWwNCiAgIC1AaWYgZXhpc3QgJChCSU5f
RElSKVwqLmV4ZSBkZWwgJChCSU5fRElSKVwqLmV4ZSA+IG51bA0KICAgLUBpZiBleGlzdCAk
KEJJTl9ESVIpXCoubWFwIGRlbCAkKEJJTl9ESVIpXCoubWFwID4gbnVsDQoNCiFlbHNlDQoN
CmFsbDogXA0KICAgJChDT01NT05fTElCKSBcDQogICAkKFBQX0xJQikgXA0KICAgJChIQVJC
T1VSX0VYRSkgXA0KICAgJChWTV9MSUIpIFwNCiAgICQoUlRMX0xJQikgXA0KICAgJChNQUNS
T19MSUIpIFwNCiAgICQoREVCVUdfTElCKSBcDQogICAkKExBTkdfTElCKSBcDQogICAkKFJE
RF9MSUIpIFwNCiAgICQoTlVMU1lTX0xJQikgXA0KICAgJChEQkZOVFhfTElCKSBcDQogICAk
KERCRkNEWF9MSUIpIFwNCiAgICQoR1RDR0lfTElCKSBcDQogICAkKEdUUENBX0xJQikgXA0K
ICAgJChHVFNURF9MSUIpIFwNCiAgICQoR1RXSU5fTElCKSBcDQogICAkKEhCUlVOX0VYRSkg
XA0KICAgJChIQlBQX0VYRSkgXA0KICAgJChIQlRFU1RfRVhFKSBcDQogICAkKEhCRE9DX0VY
RSkNCg0KIWVuZGlmDQoNCiQoSEJQUF9FWEUpIDogXA0KICAgJChIQlBQX0RJUilcaGJwcC5j
DQogICAkKENDKSAkKENGTEFHUykgLUZvJChPQkpfRElSKVwgICQqKiAtbyAkKEhCUFBfRVhF
KSAvbGluayAkKExERkxBR1MpICQoUFBfTElCKSAkKENPTU1PTl9MSUIpDQoNCiMNCiMgSEJS
VU4uRVhFIHJ1bGVzDQojDQoNCiQoSEJSVU5fRVhFKSA6IFwNCiAgICQoSEJSVU5fRElSKVxo
YnJ1bi5wcmcgXA0KICAgJChIQlJVTl9ESVIpXGV4dGVybmFsLnByZw0KICAgJChIQVJCT1VS
X0VYRSkgJChIQVJCT1VSRkxBR1MpIC1vJChPQkpfRElSKVwgJCoqDQogICAkKENDKSAkKENG
TEFHUykgLUZvJChPQkpfRElSKVwgICQoT0JKX0RJUilcaGJydW4uYyAgJChPQkpfRElSKVxl
eHRlcm5hbC5jIC1vICQoSEJSVU5fRVhFKSAvbGluayAkKExERkxBR1MpICQoTElCUzIpDQoN
CiMNCiMgSEJURVNULkVYRSBydWxlcw0KIw0KDQokKEhCVEVTVF9FWEUpIDogXA0KICAgJChI
QlRFU1RfRElSKVxoYnRlc3QucHJnIFwNCiAgICQoSEJURVNUX0RJUilccnRfYXJyYXkucHJn
IFwNCiAgICQoSEJURVNUX0RJUilccnRfZGF0ZS5wcmcgXA0KICAgJChIQlRFU1RfRElSKVxy
dF9maWxlLnByZyBcDQogICAkKEhCVEVTVF9ESVIpXHJ0X2h2bS5wcmcgXA0KICAgJChIQlRF
U1RfRElSKVxydF9odm1hLnByZyBcDQogICAkKEhCVEVTVF9ESVIpXHJ0X21hdGgucHJnIFwN
CiAgICQoSEJURVNUX0RJUilccnRfbWlzYy5wcmcgXA0KICAgJChIQlRFU1RfRElSKVxydF9z
dHIucHJnIFwNCiAgICQoSEJURVNUX0RJUilccnRfc3RyYS5wcmcgXA0KICAgJChIQlRFU1Rf
RElSKVxydF90cmFucy5wcmcNCiAgICQoSEFSQk9VUl9FWEUpICQoSEFSQk9VUkZMQUdTKSAt
byQoT0JKX0RJUilcICQqKg0KICAgJChDQykgJChDRkxBR1MpIC1GbyQoT0JKX0RJUilcICAk
KE9CSl9ESVIpXGhidGVzdC5jIFwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgJChPQkpfRElSKVxydF9hcnJheS5jIFwNCiAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgJChPQkpfRElSKVxydF9kYXRlLmMgXA0KICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAkKE9CSl9ESVIpXHJ0X2ZpbGUuYyBcDQogICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICQoT0JKX0RJUilccnRfaHZtLmMgXA0KICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAkKE9CSl9ESVIpXHJ0X2h2bWEuYyBcDQogICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoT0JKX0RJUilccnRfbWF0aC5jIFwNCiAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJChPQkpfRElSKVxydF9taXNjLmMg
XA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKE9CSl9ESVIpXHJ0X3N0
ci5jIFwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJChPQkpfRElSKVxy
dF9zdHJhLmMgXA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKE9CSl9E
SVIpXHJ0X3RyYW5zLmMgXA0KICAgICAgICAgICAgICAgICAgIC1vICQoSEJURVNUX0VYRSkg
L2xpbmsgJChMREZMQUdTKSAkKExJQlMpDQoNCiMNCiMgSEJET0MuRVhFIHJ1bGVzDQojDQoN
CiQoSEJET0NfRVhFKSA6IFwNCiAgICQoSEJET0NfRElSKVxoYmRvYy5wcmcgXA0KICAgJChI
QkRPQ19ESVIpXGdlbmNobS5wcmcgXA0KICAgJChIQkRPQ19ESVIpXGdlbm9zMi5wcmcgXA0K
ICAgJChIQkRPQ19ESVIpXGdlbnRyZi5wcmcgXA0KICAgJChIQkRPQ19ESVIpXGdlbm5nLnBy
ZyAgXA0KICAgJChIQkRPQ19ESVIpXGdlbmh0bS5wcmcgXA0KICAgJChIQkRPQ19ESVIpXGdl
bnJ0Zi5wcmcgXA0KICAgJChIQkRPQ19ESVIpXGdlbmhwYy5wcmcgXA0KICAgJChIQkRPQ19E
SVIpXGdlbmFzYy5wcmcgXA0KICAgJChIQkRPQ19ESVIpXGh0bWwucHJnIFwNCiAgICQoSEJE
T0NfRElSKVxuZy5wcmcgXA0KICAgJChIQkRPQ19ESVIpXG9zMi5wcmcgXA0KICAgJChIQkRP
Q19ESVIpXHJ0Zi5wcmcgXA0KICAgJChIQkRPQ19ESVIpXHRyb2ZmLnByZyBcDQogICAkKEhC
RE9DX0RJUilcZmNsYXNzMS5wcmcgXA0KICAgJChIQkRPQ19ESVIpXGZmaWxlMS5wcmcgXA0K
ICAgJChIQkRPQ19ESVIpXGZ0X2Z1bmNzLnByZw0KICAgJChIQVJCT1VSX0VYRSkgJChIQVJC
T1VSRkxBR1MpIC1vJChPQkpfRElSKVwgJCoqDQogICAkKENDKSAkKENGTEFHUykgLUZvJChP
QkpfRElSKVwgICQoT0JKX0RJUilcaGJkb2MuYyBcDQogICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICQoT0JKX0RJUilcZ2VuY2htLmMgXA0KICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAkKE9CSl9ESVIpXGdlbm9zMi5jIFwNCiAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgJChPQkpfRElSKVxnZW50cmYuYyBcDQogICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICQoT0JKX0RJUilcZ2VubmcuYyBcDQogICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoT0JKX0RJUilcZ2VuaHRtLmMgXA0KICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKE9CSl9ESVIpXGdlbnJ0Zi5jIFwN
CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJChPQkpfRElSKVxnZW5ocGMu
YyBcDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoT0JKX0RJUilcZ2Vu
YXNjLmMgXA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKE9CSl9ESVIp
XGh0bWwuYyBcDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoT0JKX0RJ
UilcbmcuYyBcDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoT0JKX0RJ
Uilcb3MyLmMgXA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKE9CSl9E
SVIpXHJ0Zi5jIFwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJChPQkpf
RElSKVx0cm9mZi5jIFwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJChP
QkpfRElSKVxmY2xhc3MxLmMgXA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAkKE9CSl9ESVIpXGZmaWxlMS5jIFwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgJChPQkpfRElSKVxmdF9mdW5jcy5jIFwNCiAgICAgICAgICAgICAgICAgICAtbyAk
KEhCRE9DX0VYRSkgL2xpbmsgJChMREZMQUdTKSAkKExJQlMyKQ0KDQojDQojIEhBUkJPVVIu
RVhFIHJ1bGVzDQojDQoNCkhBUkJPVVJfRVhFX09CSiA9IFwNCiAgICQoT0JKX0RJUilcaGFy
Ym91ci5vYmogXA0KICAgJChPQkpfRElSKVxoYXJib3VyeS5vYmogXA0KICAgJChPQkpfRElS
KVxoYnNsZXgub2JqIFwNCiAgICQoT0JKX0RJUilcY21kY2hlY2sub2JqIFwNCiAgICQoT0JK
X0RJUilcaGJ1c2FnZS5vYmogXA0KICAgJChPQkpfRElSKVxoYmlkZW50Lm9iaiBcDQogICAk
KE9CSl9ESVIpXGhicGNvZGUub2JqIFwNCiAgICQoT0JKX0RJUilcaGJmaXgub2JqIFwNCiAg
ICQoT0JKX0RJUilcaGJmdW5jaGsub2JqIFwNCiAgICQoT0JKX0RJUilcaGJnZW5lcnIub2Jq
IFwNCiAgICQoT0JKX0RJUilcZ2Vub2JqMzIub2JqIFwNCiAgICQoT0JKX0RJUilcZ2VuYy5v
YmogXA0KICAgJChPQkpfRElSKVxnZW5ocmIub2JqIFwNCiAgICQoT0JKX0RJUilcZ2VuamF2
YS5vYmogXA0KICAgJChPQkpfRElSKVxleHByb3B0YS5vYmogXA0KICAgJChPQkpfRElSKVxl
eHByb3B0Yi5vYmogXA0KICAgJChPQkpfRElSKVxleHByb3B0Yy5vYmoNCg0KIyQoSEFSQk9V
Ul9FWEUpIDogJChIQVJCT1VSX0VYRV9PQkopIFwNCiQoSEFSQk9VUl9FWEUpIDogXA0KICAg
JChDT01QSUxFUl9ESVIpXGhhcmJvdXIuYyBcDQogICAkKE9CSl9ESVIpXGhhcmJvdXJ5LmMg
XA0KICAgJChDT01QSUxFUl9ESVIpXGhic2xleC5jIFwNCiAgICQoQ09NUElMRVJfRElSKVxj
bWRjaGVjay5jIFwNCiAgICQoQ09NUElMRVJfRElSKVxoYnVzYWdlLmMgXA0KICAgJChDT01Q
SUxFUl9ESVIpXGhiaWRlbnQuYyBcDQogICAkKENPTVBJTEVSX0RJUilcaGJwY29kZS5jIFwN
CiAgICQoQ09NUElMRVJfRElSKVxoYmZpeC5jIFwNCiAgICQoQ09NUElMRVJfRElSKVxoYmZ1
bmNoay5jIFwNCiAgICQoQ09NUElMRVJfRElSKVxoYmdlbmVyci5jIFwNCiAgICQoQ09NUElM
RVJfRElSKVxnZW5vYmozMi5jIFwNCiAgICQoQ09NUElMRVJfRElSKVxnZW5jLmMgXA0KICAg
JChDT01QSUxFUl9ESVIpXGdlbmhyYi5jIFwNCiAgICQoQ09NUElMRVJfRElSKVxnZW5qYXZh
LmMgXA0KICAgJChDT01QSUxFUl9ESVIpXGV4cHJvcHRhLmMgXA0KICAgJChDT01QSUxFUl9E
SVIpXGV4cHJvcHRiLmMgXA0KICAgJChDT01QSUxFUl9ESVIpXGV4cHJvcHRjLmMNCiAgIC1l
Y2hvLiA+ICQoT0JKX0RJUilcdW5pc3RkLmgNCiAgICQoQ0MpICQoQ0ZMQUdTKSAtSSQoT0JK
X0RJUikgLUZvJChPQkpfRElSKVwgLXcgJCoqIC1vICQoSEFSQk9VUl9FWEUpIC9saW5rICQo
TERGTEFHUykgJChQUF9MSUIpICQoQ09NTU9OX0xJQikNCiAgIC1kZWwgJChPQkpfRElSKVx1
bmlzdGQuaA0KDQoNCiMgIGZvciAlaSBpbiAoJCoqKSBkbyAkKENDKSAtYyAkKENGTEFHUykg
LUkkKE9CSl9ESVIpIC1GbyQoT0JKX0RJUilcIC13ICAlaQ0KIyAgcmVtIGZvciAlaSBpbiAo
JCgqKjouYz0ub2JqKSkgZG8gZWNobyAlaQ0KIyAgJChDQykgLUkkKE9CSl9ESVIpIC1GbyQo
T0JKX0RJUilcIC13ICQoSEFSQk9VUl9FWEVfT0JKKSAtbyAkKEhBUkJPVVJfRVhFKSAvbGlu
ayAkKExERkxBR1MpICQoUFBfTElCKSAkKENPTU1PTl9MSUIpDQojICAtZGVsICQoT0JKX0RJ
UilcdW5pc3RkLmgNCg0KIyAgJChDQykgJChDRkxBR1MpIC1JJChPQkpfRElSKSAtRm8kKE9C
Sl9ESVIpXCAtdyAkKEhBUkJPVVJfRVhFX09CSikgLW8gJChIQVJCT1VSX0VYRSkgL2xpbmsg
JChMREZMQUdTKSAkKFBQX0xJQikgJChDT01NT05fTElCKQ0KDQojDQojIExpYnJhcnkgZGVw
ZW5kZW5jaWVzIGFuZCBidWlsZCBydWxlcw0KIw0KDQokKFJUTF9MSUIpIDogJChSVExfTElC
X09CSlMpDQogICBsaWIgL291dDokQCAkKioNCg0KJChDT01NT05fTElCKSA6ICQoQ09NTU9O
X0xJQl9PQkpTKQ0KICAgbGliIC9vdXQ6JEAgJCoqDQoNCiQoREVCVUdfTElCKSA6ICQoREVC
VUdfTElCX09CSlMpDQogICBsaWIgL291dDokQCAkKioNCg0KJChNQUNST19MSUIpIDogJChN
QUNST19MSUJfT0JKUykNCiAgIGxpYiAvb3V0OiRAICQqKg0KDQokKFBQX0xJQikgOiAkKFBQ
X0xJQl9PQkpTKQ0KICAgbGliIC9vdXQ6JEAgJCoqDQoNCiQoTEFOR19MSUIpIDogJChMQU5H
X0xJQl9PQkpTKQ0KICAgbGliIC9vdXQ6JEAgJCoqDQoNCiQoUkREX0xJQikgOiAkKFJERF9M
SUJfT0JKUykNCiAgIGxpYiAvb3V0OiRAICQqKg0KDQokKERCRkNEWF9MSUIpIDogJChEQkZD
RFhfTElCX09CSlMpDQogICBsaWIgL291dDokQCAkKioNCg0KJChEQkZOVFhfTElCKSA6ICQo
REJGTlRYX0xJQl9PQkpTKQ0KICAgbGliIC9vdXQ6JEAgJCoqDQoNCiQoTlVMU1lTX0xJQikg
OiAkKE5VTFNZU19MSUJfT0JKUykNCiAgIGxpYiAvb3V0OiRAICQqKg0KDQokKFZNX0xJQikg
OiAkKFZNX0xJQl9PQkpTKQ0KICAgbGliIC9vdXQ6JEAgJCoqDQoNCiQoR1RDR0lfTElCKSA6
ICQoR1RDR0lfTElCX09CSlMpDQogICBsaWIgL291dDokQCAkKioNCg0KJChHVFBDQV9MSUIp
IDogJChHVFBDQV9MSUJfT0JKUykNCiAgIGxpYiAvb3V0OiRAICQqKg0KDQokKEdUU1REX0xJ
QikgOiAkKEdUU1REX0xJQl9PQkpTKQ0KICAgbGliIC9vdXQ6JEAgJCoqDQoNCiQoR1RXSU5f
TElCKSA6ICQoR1RXSU5fTElCX09CSlMpDQogICBsaWIgL291dDokQCAkKioNCg0KIw0KIyBI
QVJCT1VSLkVYRSBkZXBlbmRlbmNpZXMNCiMNCg0KJChPQkpfRElSKVxoYXJib3VyeS5jIDog
JChDT01QSUxFUl9ESVIpXGhhcmJvdXIuc2x5DQogICBiaXNvbiAtZCAtbyRAICQqKg0KDQoN
CiQoT0JKX0RJUilcaGJzbGV4Lm9iaiA6ICQoQ09NUElMRVJfRElSKVxoYnNsZXguYw0KICAg
JChDQykgJChDTElCRkxBR1MpIC1JJChPQkpfRElSKSAtdyAtRm8kQCAgJCoqDQoNCiMNCiMg
TUFDUk8uTElCIGRlcGVuZGVuY2llcw0KIw0KDQokKE9CSl9ESVIpXG1hY3JveS5jIDogJChN
QUNST19ESVIpXG1hY3JvLnkNCiAgIGJpc29uIC1wIGhiX2NvbXAgLWQgJCoqIC1vJEANCg0K
IyQoT0JKX0RJUilcbWFjcm9sLmMgOiAkKE1BQ1JPX0RJUilcbWFjcm8ubA0KIyAgIGZsZXgg
LVBoYl9jb21wIC1pIC04IC1vJEAgJCoqDQoNCiQoT0JKX0RJUilcbWFjcm95Lm9iaiA6ICQo
T0JKX0RJUilcbWFjcm95LmMNCiAgICQoQ0MpICQoQ0xJQkZMQUdTKSAtdyAtRm8kQCAgJCoq
DQoNCiQoT0JKX0RJUilcbWFjcm9zbHgub2JqIDogJChNQUNST19ESVIpXG1hY3Jvc2x4LmMN
CiAgIC1lY2hvLiA+ICQoT0JKX0RJUilcdW5pc3RkLmgNCiAgICQoQ0MpICQoQ0xJQkZMQUdT
KSAtSSQoT0JKX0RJUikgLXcgLUZvJEAgICQqKg0KICAgLWRlbCAkKE9CSl9ESVIpXHVuaXN0
ZC5oDQoNCg0KIyBkdW1teSB0YXJnZXRzIHVzZWQgZm9yIHByZyB0byBjIGNyZWF0aW9uDQoN
CiQoUlRMX0xJQikyICAgIDogJChSVExfTElCX09CSlMpDQokKENPTU1PTl9MSUIpMiA6ICQo
Q09NTU9OX0xJQl9PQkpTKQ0KJChERUJVR19MSUIpMiAgOiAkKERFQlVHX0xJQl9PQkpTKQ0K
JChNQUNST19MSUIpMiAgOiAkKE1BQ1JPX0xJQl9PQkpTKQ0KJChQUF9MSUIpMiAgICAgOiAk
KFBQX0xJQl9PQkpTKQ0KJChSRERfTElCKTIgICAgOiAkKFJERF9MSUJfT0JKUykNCiQoREJG
Q0RYX0xJQikyIDogJChEQkZDRFhfTElCX09CSlMpDQokKERCRk5UWF9MSUIpMiA6ICQoREJG
TlRYX0xJQl9PQkpTKQ0KJChOVUxTWVNfTElCKTIgOiAkKE5VTFNZU19MSUJfT0JKUykNCiQo
Vk1fTElCKTIgICAgIDogJChWTV9MSUJfT0JKUykNCiQoR1RDR0lfTElCKTIgIDogJChHVENH
SV9MSUJfT0JKUykNCiQoR1RQQ0FfTElCKTIgIDogJChHVFBDQV9MSUJfT0JKUykNCiQoR1RT
VERfTElCKTIgIDogJChHVFNURF9MSUJfT0JKUykNCiQoR1RXSU5fTElCKTIgIDogJChHVFdJ
Tl9MSUJfT0JKUykNCg0KGg==

--Message-Boundary-11047--

From harbour@lists.harbour-project.org  Wed Jan 17 03:52:01 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Wed Jan 17 03:52:01 2001
Subject: [Harbour] Inline C
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKIENODIAA.ron@profit-master.com>; from ron@profit-master.com on Tue, Jan 16, 2001 at 07:42:51PM -0800
References: <200101170305.f0H35UN31898@thor.parrett.net> <LOBBKAFMMFGJIKLMEPAKIENODIAA.ron@profit-master.com>
Message-ID: <20010117084124.Q9113@hagbard.davep.org>

On Tue, Jan 16, 2001 at 07:42:51PM -0800, Ron Pinkas wrote:
> David,
> 
> > Oh, and unilaterlly adding a feature that isn't needed and hasn't been
> > discussed doesn't involve 'one, self proclaims himself a "judge" of what
> > might/might not be of value to someone else'?
> 
> 1. This feature was suggested by few individuals in the past.

And what was the conclusion of the discussion that was had about such a
feature? I do have a recollection that it was seen that it was a problematic
feature to add.

> 2. I assume one allowed to *offer* what might be of use to some. Such offer
> might very well be declined.

Offering is not the same as simply putting into CVS.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Wed Jan 17 03:52:27 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Wed Jan 17 03:52:27 2001
Subject: [Harbour] Inline C
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKAENODIAA.ron@profit-master.com>; from ron@profit-master.com on Tue, Jan 16, 2001 at 06:47:27PM -0800
References: <20010116084116.S9113@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKAENODIAA.ron@profit-master.com>
Message-ID: <20010117083943.P9113@hagbard.davep.org>

On Tue, Jan 16, 2001 at 06:47:27PM -0800, Ron Pinkas wrote:
> Dave,
> 
> > If someone has a good reason why a feature shouldn't be added to a body
> > of code then it should be aired without fear of being branded as an
> > attempt at censorship. Suggesting that someone is a "censor" because
> > they think the feature is a bad idea much worse than actually saying why
> > you think the feature is bad IMO.
> 
> To claim that something is "not needed" is *not* the same as "providing a
> good reason why a feature should not be added"! 

Agreed. Such a fact, however, seems to have little to do with the situation
we're faced here. Any call I've seen for removal has actually been
accompanied with a reason.

>                                                 I clearly said, that
> suggesting removal on the basis of no value, has censorship qualities
> (because one, self proclaims himself a "judge" of what might/might not be
> of value to someone else)!

And you're a self-proclaimed judge too, that's the problem with opinion.
Just because you can't see "goodness" or "value" in an argument for removal
it doesn't mean you can then say that the argument has censorship qualities.
Using that label simply gives a useful method of dismissing such a call
without the need for reasoned debate.

More to the point, you've also been a self proclaimed judge by adding the
code to harbour in the first place. You never spoke to the developer
community first, you simply placed it in there. You obviously were a
self-proclaimed judge of the value of the feature you had in mind.

I can also see the censorship qualities you speak about in your argument
against a suggestion for removal. You really need to consider the idea of
approaching this in a more dispassionate way Ron. Using words like "censor"
don't really help you make your case.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Wed Jan 17 05:40:04 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Jan 17 05:40:04 2001
Subject: [Harbour] Inline C
In-Reply-To: <20010117083943.P9113@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKAEOGDIAA.ron@profit-master.com>

Dave,

> > To claim that something is "not needed" is *not* the same as
> "providing a
> > good reason why a feature should not be added"!
>
> Agreed. Such a fact, however, seems to have little to do with the
> situation
> we're faced here. Any call I've seen for removal has actually been
> accompanied with a reason.

Good. The group will soon be able to decide based on all submitted reasons.

> >                                                 I clearly said, that
> > suggesting removal on the basis of no value, has censorship qualities
> > (because one, self proclaims himself a "judge" of what
> might/might not be
> > of value to someone else)!
>
> And you're a self-proclaimed judge too, that's the problem with opinion.
> Just because you can't see "goodness" or "value" in an argument
> for removal
> it doesn't mean you can then say that the argument has censorship
> qualities.
> Using that label simply gives a useful method of dismissing such a call
> without the need for reasoned debate.

Right, but I can and I will, if its *not* "just because..." as you had so
conveniently decided for me, but rather an actual, factually based, reasoned
determination.

>From my end, it appears as if, you keep twisting and re-twisting ideas, till
they vaguely resemble their original identity, and then accuse others of
using straw man tactics!

I believe its fair to say, this community is well protected from my attempts
to "dismiss reasoned debates".

> More to the point, you've also been a self proclaimed judge by adding the
> code to harbour in the first place. You never spoke to the developer
> community first, you simply placed it in there. You obviously were a
> self-proclaimed judge of the value of the feature you had in mind.

Obvious right. Strange, *I* thought we (as in you and me) had "agreed" this
was uploaded to allow peers review, and was never expected to survive,
unless approved/accepted/voted needed.

If you have any reasons why it should be removed, you will be better served
by presenting your case.

> I can also see the censorship qualities you speak about in your argument
> against a suggestion for removal. You really need to consider the idea of
> approaching this in a more dispassionate way Ron. Using words
> like "censor"
> don't really help you make your case.

*If* I would have objected to the very idea of a removal suggestion, it
indeed would have had censorship qualities. As you well know, I never
expressed such idea!

You are welcome to continue doing as you always have done (I truly respect
one's fighting for his position, regardless of that position). I believe
I've stated my position, and have no further interest in arguing what
started as technical discussion, and now was reduced to politics, morals,
and philosophy.

I'll soon summarize the technical merits of my proposed code, and will be
satisfied with what ever will become the group's decision.

In the unlikely event, that my code is voted out, and will thus be remove by
me as promised, I hope you have the integrity to apologize for your baseless
accusation, that I considered myself able to dictate the value of my work,
to this group.

Ron


From harbour@lists.harbour-project.org  Wed Jan 17 05:43:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Jan 17 05:43:02 2001
Subject: [Harbour] Inline C
In-Reply-To: <20010117084124.Q9113@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKEEOGDIAA.ron@profit-master.com>

Dave,

> And what was the conclusion of the discussion that was had about such a
> feature? I do have a recollection that it was seen that it was a 
> problematic
> feature to add.

Problematic in what way? Strange you didn't mention it in the last 3 weeks.

> > 2. I assume one allowed to *offer* what might be of use to 
> some. Such offer
> > might very well be declined.
> 
> Offering is not the same as simply putting into CVS.

How is it different? Is the option to decline such offering, removed?

Ron

From harbour@lists.harbour-project.org  Wed Jan 17 05:53:05 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Wed Jan 17 05:53:05 2001
Subject: [Harbour] Harbour and Graphics mode
Message-ID: <200101170552_MC2-C210-83B6@compuserve.com>

Luiz,

JS> For which GUI APIs?  Mac?  GTK+?  Qt?  Win32?  (Etc.)

"For all platforms that harbour support(OS/2,Win32,Linux)"

Linux has more than one set of GUI APIs, which won't make it any
easier.

I suppose we could use "raw" X. :-(

John.

From harbour@lists.harbour-project.org  Wed Jan 17 05:54:01 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Wed Jan 17 05:54:01 2001
Subject: [Harbour] New rdd func?
Message-ID: <200101170552_MC2-C210-83BD@compuserve.com>

Brian,

"I'll keep you posted..."

Thanks!

John.

From harbour@lists.harbour-project.org  Wed Jan 17 05:54:27 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Wed Jan 17 05:54:27 2001
Subject: [Harbour] simplex (was Inline C)
Message-ID: <200101170552_MC2-C210-83B8@compuserve.com>

Ron,

DH> But now we are forced to update both SimpLex and Lex whenever there a=
re
DH> syntax changes, instead of just updating Lex. Which adds a burdensome=

DH> level of complexity to Harbour.

"Burden on whom? No one was requested to share this responsibility, and I=

don't consider it a burden. I did consider maintaining the Flex Definitio=
ns
a burden, and I was taking an ongoing, active part in that responsibility=
."

The last thing I want to do is start another long thread.  But. :-(
An example of the extra work can be seen just today in a message
posted by Jean.  I too have similar problems quite often with the
simplex build.  Commonly it's due to sloppy C, e.g.
USHORT xxx =3D SomeFunc();
where recently the SomeFunc() was defined to return ULONG.

That's poor C.  It's worse (I think illegal; it's rejected by VC) C++.

This doesn't mean I want to remove simplex!  But it _is_ causing extra
work, no doubt about that.

John.

From harbour@lists.harbour-project.org  Wed Jan 17 05:54:51 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Wed Jan 17 05:54:51 2001
Subject: [Harbour] stack problem
Message-ID: <200101170552_MC2-C210-83BC@compuserve.com>

Jean,

How about changing source\vm\estack.c to

#ifndef STACK_INITHB_ITEMS
#define STACK_INITHB_ITEMS      2000
#endif
#ifndef STACK_EXPANDHB_ITEMS
#define STACK_EXPANDHB_ITEMS    200
#endif

so it can be compiled with -Dxxx=3Dvalue

John.

From harbour@lists.harbour-project.org  Wed Jan 17 06:13:02 2001
From: harbour@lists.harbour-project.org (harbour@lists.harbour-project.org)
Date: Wed Jan 17 06:13:02 2001
Subject: [Harbour] stack problem
In-Reply-To: <200101170552_MC2-C210-83BC@compuserve.com>
Message-ID: <3A658BFE.25786.AA580F@localhost>

Hi John

Yes, why not. Easy to do and does not break anything.

Unfortunatly, the problem seem not to be a stack Re-Size problem 
:-) but it will be more easy to test with this modification.

> Jean,
> 
> How about changing source\vm\estack.c to
> 
> #ifndef STACK_INITHB_ITEMS
> #define STACK_INITHB_ITEMS      2000
> #endif
> #ifndef STACK_EXPANDHB_ITEMS
> #define STACK_EXPANDHB_ITEMS    200
> #endif
> 
> so it can be compiled with -Dxxx=value
> 
> John.
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre <jflefebv@mafact.com>
Mafact SA/NV
Belgium
(See us at http://www.mafact.com)
jflefebv@mafact.com


From harbour@lists.harbour-project.org  Wed Jan 17 06:57:01 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Wed Jan 17 06:57:01 2001
Subject: [Harbour] stack problem
In-Reply-To: <000701c07ff0$c64baa20$0f2aa8c0@antonio>
References: <3A644CA9.15324132@libero.it>
Message-ID: <3A659775.8054.33378B3@localhost>

On 16 Jan 2001, at 20:16, Antonio Linares wrote:

> It seems still we have a problem with the stack.

  Sorry, I cannot access the Sourceforge at this moment.
To cure the stack problem you have to change in estack.c inside 
hb_stackPush():

for( i=CurrIndex; i < hb_stack.wItems; ++i )

into 

for( i=CurrIndex + 1; i < hb_stack.wItems; ++i )


Regards, Ryszard

From harbour@lists.harbour-project.org  Wed Jan 17 07:09:01 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Wed Jan 17 07:09:01 2001
Subject: [Harbour] Harbour and Graphics mode
In-Reply-To: <200101170552_MC2-C210-83B6@compuserve.com>; from John_Skelton@compuserve.com on Wed, Jan 17, 2001 at 05:51:37AM -0500
References: <200101170552_MC2-C210-83B6@compuserve.com>
Message-ID: <20010117120453.Y9113@hagbard.davep.org>

On Wed, Jan 17, 2001 at 05:51:37AM -0500, John Skelton wrote:
> Luiz,
> 
> JS> For which GUI APIs?  Mac?  GTK+?  Qt?  Win32?  (Etc.)
> 
> "For all platforms that harbour support(OS/2,Win32,Linux)"
> 
> Linux has more than one set of GUI APIs, which won't make it any
> easier.
> 
> I suppose we could use "raw" X. :-(

QT/KDE and GTk are the only ones that we'd really need to be concerned with
and Gnome is probably the cleaner of the two when it comes to the free
software side of things.

There's also a couple of free software GUI libraries that provide levels of
abstraction above those too. I'd submit that the problem is better solved by
moving up a level of abstraction, not down.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Wed Jan 17 07:09:29 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Wed Jan 17 07:09:29 2001
Subject: [Harbour] Inline C
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKEEOGDIAA.ron@profit-master.com>; from ron@profit-master.com on Wed, Jan 17, 2001 at 02:43:24AM -0800
References: <20010117084124.Q9113@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKEEOGDIAA.ron@profit-master.com>
Message-ID: <20010117113844.W9113@hagbard.davep.org>

On Wed, Jan 17, 2001 at 02:43:24AM -0800, Ron Pinkas wrote:
> Dave,
> 
> > And what was the conclusion of the discussion that was had about such a
> > feature? I do have a recollection that it was seen that it was a
> > problematic feature to add.
> 
> Problematic in what way? 

See large parts of the discussion that has been going on.

>                          Strange you didn't mention it in the last 3
> weeks.

There's no conspiracy Ron. Seriously, I didn't think it needed mentioning
because a) many of the issues were being touched on anyway and b) you were
around the last time it was discussed (at least I seem to recall you were
involved with harbour back then).

Or, put another way, strange you didn't mention it in the last three weeks
either.

> > > 2. I assume one allowed to *offer* what might be of use to some. Such
> > > offer might very well be declined.
> > 
> > Offering is not the same as simply putting into CVS.
> 
> How is it different? 

Because offering new features to harbour has generally entailed the person
who had the idea consulting the development community about the idea itself,
way before actually placing code into harbour.

Offering to make a gift and actually handing over the gift are two different
things.

>                      Is the option to decline such offering, removed?

The act of declining isn't the same as the act of removing.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Wed Jan 17 07:10:13 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Wed Jan 17 07:10:13 2001
Subject: [Harbour] Inline C
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKAEOGDIAA.ron@profit-master.com>; from ron@profit-master.com on Wed, Jan 17, 2001 at 02:39:54AM -0800
References: <20010117083943.P9113@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKAEOGDIAA.ron@profit-master.com>
Message-ID: <20010117120222.X9113@hagbard.davep.org>

On Wed, Jan 17, 2001 at 02:39:54AM -0800, Ron Pinkas wrote:
> Dave,
> 
> > > To claim that something is "not needed" is *not* the same as
> > > "providing a good reason why a feature should not be added"!
> >
> > Agreed. Such a fact, however, seems to have little to do with the
> > situation we're faced here. Any call I've seen for removal has actually
> > been accompanied with a reason.
> 
> Good. The group will soon be able to decide based on all submitted
> reasons.

Exactly. This is why I'm saying that labeling one or more of the reasons as
"censorship" (no matter how you qualify that) isn't helpful. Much better to
allow all reasons to stand without being emotionally branded.

> > And you're a self-proclaimed judge too, that's the problem with opinion.
> > Just because you can't see "goodness" or "value" in an argument for
> > removal it doesn't mean you can then say that the argument has
> > censorship qualities. Using that label simply gives a useful method of
> > dismissing such a call without the need for reasoned debate.
> 
> Right, but I can and I will, if its *not* "just because..." as you had so
> conveniently decided for me, 

I didn't decide anything for you:

,----
| To claim that something is "not needed" is *not* the same as "providing a
| good reason why a feature should not be added"!
`----

they are your words aren't they?

>                              but rather an actual, factually based,
> reasoned determination.

I don't take issue with your factual reasons.

> From my end, it appears as if, you keep twisting and re-twisting ideas,
> till they vaguely resemble their original identity, and then accuse others
> of using straw man tactics!

Shame you can't see help when it's been offered. Oh well, I'm getting used
to Ron Pinkas dismissing help on technical and emotional grounds.

> If you have any reasons why it should be removed, you will be better
> served by presenting your case.

Oh ${DEITY}, here we go again. Why do you think that I want this feature to
be removed? You complain about me pointing your raising of strawmen and then
you drag one out a couple of paragraphs later.

It almost appears that you think that anyone who isn't in total agreement
with you obviously wants the feature removed and so their total input has to
be discounted until they can defend the position you've invented for them.

If you don't invent positions for me Ron you won't find my case wanting.

> *If* I would have objected to the very idea of a removal suggestion, it
> indeed would have had censorship qualities. As you well know, I never
> expressed such idea!

When I reported my understanding that you'd presented the code for review
you corrected me by saying it was the syntax that was presented for review:

,----[ <LOBBKAFMMFGJIKLMEPAKKEMBDIAA.ron@profit-master.com> ]
| I'm of the opinion that the *syntax* has been presented for review and
| feedback
`----

That suggests that you view the code as something that should stay. If my
original understanding of your position was indeed correct feel free to
correct your correction.

> In the unlikely event, that my code is voted out, and will thus be remove
> by me as promised, I hope you have the integrity to apologize for your
> baseless accusation, that I considered myself able to dictate the value of
> my work, to this group.

Which baseless accusation is this Ron Pinkas? The one where I show a basis
for my understanding above? How can an accusation (which isn't an accusation
anyway) be baseless when I'm open and willing to document my understanding
so that it can be corrected?

Could it be more argument ad-hominem Ron Pinkas?

As for requiring apologies for baseless accusations, I think you need to
ponder the following words before you start acting indignant and call my
integrity into question.

,----[ <LOBBKAFMMFGJIKLMEPAKIEKEDIAA.ron@profit-master.com> ]
| I think you didn't fully analyze this, before making your original
| statement, and now finding, it's hard to get off the tree.
`----

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Wed Jan 17 08:22:02 2001
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Wed Jan 17 08:22:02 2001
Subject: [Harbour] stack problem
References: <3A644CA9.15324132@libero.it> <3A659775.8054.33378B3@localhost>
Message-ID: <3A659C42.D224D0C2@libero.it>

Ryszard,

no, it didn't fix this problem, now I get:

Exception c0000005 at address 1b7c0927
Called from QOUT(0)
Called from TEST(13)
Called from TEST(14)
Called from TEST(14)
Called from TEST(14)
Called from TEST(14)
Called from TEST(14)
Called from TEST(14)
Called from TEST(14)

but it goes up to 898.

regards.

PS. Is this fix needed for something else?

Ryszard Glab ha scritto:
> 
> On 16 Jan 2001, at 20:16, Antonio Linares wrote:
> 
> > It seems still we have a problem with the stack.
> 
>   Sorry, I cannot access the Sourceforge at this moment.
> To cure the stack problem you have to change in estack.c inside
> hb_stackPush():
> 
> for( i=CurrIndex; i < hb_stack.wItems; ++i )
> 
> into
> 
> for( i=CurrIndex + 1; i < hb_stack.wItems; ++i )
> 
> Regards, Ryszard
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Wed Jan 17 09:38:02 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Wed Jan 17 09:38:02 2001
Subject: [Harbour] stack problem
In-Reply-To: <3A659C42.D224D0C2@libero.it>
Message-ID: <3A65BD0F.26389.3C65A44@localhost>

On 17 Jan 2001, at 14:21, Maurilio Longo wrote:

> PS. Is this fix needed for something else?

  Yes it should be there.
I have no problems on Linux/GCC even if I set init/expand to 100/20 and 
the loop is set to 10000 recursive calls in test code. Anyway, I will 
check it some more.

Regards, Ryszard


From harbour@lists.harbour-project.org  Wed Jan 17 10:54:02 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Wed Jan 17 10:54:02 2001
Subject: [Harbour] RDD changes
In-Reply-To: <3A637D5B.90E6EAD2@libero.it>
Message-ID: <3A65CF4B.17722.40D92DA@localhost>

On 15 Jan 2001, at 23:44, Maurilio Longo wrote:

> I think we could use your proposed new RDD system (given that, as of
> now, we don't have any single rdd working) but I'd like to know whether
> your changes make it harder for a developer of clipper RDDs to port
> his/her work under Harbour.

  It can be harder because it adds new features and adds some more 
restrictions. Notice however that the current RDD code will be still 
available for these developers that want a strict Clipper compatibility. 
The code that links RDD with the VM will be the same.
  The new restrictions are the result of changed inheritance design. 
Since the driver can not relay on the order of linked drivers. This is 
causing the we cannot use any longer the current scheme of a workarea 
structure inheritance. For example, for NTX driver we have defined:

typedef struct _NTXAREA
{
   struct _RDDFUNCS * lprfsHost; /* Virtual method table for this workarea */
....removed
   USHORT rddID;

   /*
   *  DBFS's additions to the workarea structure
   *
   *  Warning: The above section MUST match WORKAREA exactly!  Any
   *  additions to the structure MUST be added below, as in this
   *  example.
   */

   FHANDLE hDataFile;            /* Data file handle */
....removed 
   ULONG ulNumLocksPos;          /* Number of records locked */

   /*
   *  NTX's additions to the workarea structure
   *
   *  Warning: The above section MUST match WORKAREA exactly!  Any
   *  additions to the structure MUST be added below, as in this
   *  example.
   */

   USHORT uiOrder;                /* Number of current order */
   LPNTXINDEX lpNtxIndex;         /* Pointer to indexes array */
} NTXAREA;

  This means the we have hardcoded the inheritance here. Also any developer that 
wanted to inherit DBFNTX had to know its workarea structure. This was limiting the 
inheritance from a third party drivers and was limiting inserting layers between 
any two drivers.
  With the new design we will still allocate a single memory block for all drivers 
in the inheritance tree. This memory block will be passed to every virtual table 
function. However only the private driver's workarea structure have to be defined 
and there will be needed an additional call to get a pointer to the workarea 
structure part specific for a driver. This means that the driver cannot directly 
access data from inherited drivers because only the AREA part will have a constant 
location at the beginning of the memory buffer although the calls for virtual 
functions should be preferred.
  This means that developers of existing RDDs will have review their code and fix 
access for a private workarea members and possibly remove access to inherited 
members. The functionality of the most virtual functions will be the same - except 
the very few ('structSize' and 'error' at this moment).
  Notice that in cases where RDD driver has not inherited from 'DBF' than the 
number of required changes will be smaller.

Regards, Ryszard

From harbour@lists.harbour-project.org  Wed Jan 17 10:56:01 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Jan 17 10:56:01 2001
Subject: [Harbour] simplex (was Inline C)
In-Reply-To: <200101170552_MC2-C210-83B8@compuserve.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKKEOIDIAA.ron@profit-master.com>

John

> The last thing I want to do is start another long thread.  But. :-(
> An example of the extra work can be seen just today in a message
> posted by Jean.  I too have similar problems quite often with the
> simplex build.  Commonly it's due to sloppy C, e.g.
> USHORT xxx = SomeFunc();
> where recently the SomeFunc() was defined to return ULONG.
> 
> That's poor C.  It's worse (I think illegal; it's rejected by VC) C++.
> 
> This doesn't mean I want to remove simplex!  But it _is_ causing extra
> work, no doubt about that.

Ok.

From harbour@lists.harbour-project.org  Wed Jan 17 11:04:02 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Wed Jan 17 11:04:02 2001
Subject: [Harbour] Inline C
Message-ID: <200101171102_MC2-C205-BF3D@compuserve.com>

Ron,

DP> I can also see the censorship qualities you speak about in your argum=
ent
DP> against a suggestion for removal. You really need to consider the ide=
a of
DP> approaching this in a more dispassionate way Ron. Using words
DP> like "censor"
DP> don't really help you make your case.

"*If* I would have objected to the very idea of a removal suggestion, it
indeed would have had censorship qualities. As you well know, I never
expressed such idea!"

You used "censor" in a statement about my comments. :-(  I've asked
you "to at least post where I've tried to censor this" [inline C].
If you're not letting this drop, please answer my points.  Otherwise,
let's get on with something (anything!) useful.

In case you again rail against my interest in making a commercial
product, please be aware that a number of very well-known people here
have the same interest, and like me have said so.  Either complain
about them as well or please be so fair as not to throw that in as an
argument against my comments.  Particularly when it's clear to anyone
with even half a brain that I have no commercial bias as regards this
feature.

John.

From harbour@lists.harbour-project.org  Wed Jan 17 12:35:03 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Wed Jan 17 12:35:03 2001
Subject: [Harbour] Inline C
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEODDIAA.ron@profit-master.com>
References: <200101170507.f0H576N06433@thor.parrett.net>
Message-ID: <200101171734.f0HHXxN19031@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Tue,
16 Jan 2001 21:54:32 -0800

> I never defined any voting choices,

The following, taken from your message with subject "INLINE C Synopsis
(version 1.1)" and Message-ID:
<LOBBKAFMMFGJIKLMEPAKCEKBDIAA.ron@profit-master.com>, sure looks like a
definition for voting choices to me:

> Conclusion:
> -----------
> 
> 1. I recommend, we keep current specifications for INLINE c support.
> 
> 2. I recommend we add C FUNCTION support. I suggest the syntax should be:
> ...
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Wed Jan 17 12:36:03 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Wed Jan 17 12:36:03 2001
Subject: [Harbour] Inline C
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKAEOEDIAA.ron@profit-master.com>
References: <200101170452.f0H4qVN05654@thor.parrett.net>
Message-ID: <200101171735.f0HHZqN19174@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Tue,
16 Jan 2001 22:09:39 -0800

> 2. I didn't assume that I had permission to upload to CVS, I know I do. The
> group may decide to not accept such upload.

After the SimpLex fiasco, the group consensus was *clearly* that you
should not do something like that again. Yet you did it anyway.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Wed Jan 17 12:59:02 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Wed Jan 17 12:59:02 2001
Subject: [Harbour] New rdd func?
In-Reply-To: <000901c07f8c$71ac7350$921a5e18@bh>
Message-ID: <3A65EC82.18555.47FB3AB@localhost>

On 15 Jan 2001, at 23:17, Brian Hays wrote:

>     IF empty(ordSetFocus())  .... pick your favorite ord* function

  I don't see nothing wrong with this code :)

> Since all these functions create quite a few calls, and since the info is in
> a pArea-> member ripe for testing, I am surfacing a function for ADS to
> simply return this value.  Does it make sense to add this as an RDD
> extension?
> 
> HB_FUNC( ADSISINDEXED )
> {
>    hb_retl(pArea->hOrdCurrent)
> }

  I think that we should use DBORDINFO() or DBINFO() for this. Adding ADS 
specific functions will work with ADS only. This will cause problems if 
someone will want to inherit this driver to add his support for index 
files.

Regards, Ryszard

From harbour@lists.harbour-project.org  Wed Jan 17 13:09:02 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Wed Jan 17 13:09:02 2001
Subject: [Harbour] Simplex (was inline C)
In-Reply-To: <200101171735.f0HHZqN19174@thor.parrett.net>
Message-ID: <000001c080b0$528018e0$0f2aa8c0@antonio>

David,

> After the SimpLex fiasco, the group consensus was *clearly* that you
> should not do something like that again. Yet you did it anyway.

I don't see Simplex as a Ron fiasco. 

Ron has been working hard to master Harbour architecture.
In fact he has already mastered many important compiler
construction areas, as the lexer, yacc rules, even the
Clipper preprocessor and the RTL.

All this clearly benefits Harbour now and in the future.
We all have seen Ron fixing preprocessor bugs, optimizing
the hvm, etc.

The problem with Ron is that he is very hard headed :-)
(well, it is also an advantage because that made him
master all those things).

We all want a Harbour 1.0 ready, and I guess that is
what is making all of us a little nervous.

Harbour power!

Antonio


From harbour@lists.harbour-project.org  Wed Jan 17 13:12:02 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Wed Jan 17 13:12:02 2001
Subject: [Harbour] Inline C
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKAEOEDIAA.ron@profit-master.com>
References: <200101170452.f0H4qVN05654@thor.parrett.net>
Message-ID: <200101171811.f0HIBmN22212@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Tue,
16 Jan 2001 22:09:39 -0800

> 1. I have every right to implement anything I'm interested in implementing.
> That's not to say that this group has to accept *any* of what I'm interested
> in implementing.
> 
> 2. I didn't assume that I had permission to upload to CVS, I know I do. The
> group may decide to not accept such upload. Further, it might even revoke my
> CVS upload right, if my uploads are not considered desirable. Again you are
> free to suggest any of the above.

Your attitude that you have the right to commit whatever you want into
the CVS is not in keeping with the spirit in which the Harbour project
was founded. The stated goal of Harbour is the implementation of a
compiler that is compatible with CA-Clipper 5.2e, with some additional
features from CA-Cipper 5.3b. Anything else needs a group consensus
before being committed to CVS.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Wed Jan 17 14:56:02 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Wed Jan 17 14:56:02 2001
Subject: [Harbour] RDD changes
In-Reply-To: <002901c07fba$c88afb50$946410ac@jharrier>
Message-ID: <3A6607E0.4733.4EA99F9@localhost>

On 16 Jan 2001, at 8:49, Juan Agustin Barriga wrote:

> The changes proposed by Ryszard will undoubtly break my RDD code, which, by
> the way, IS FULLY working. Harbour itself cannot say this. Of course, my RDD
> is USELESS until Harbour reaches Clipper 5.2 FULL support, which means many
> TODOs. No production system can be ported as it is now.

  Please notice that the current RDD code will be still here. The new 
code will be uploaded either into source/hrdd or contrib/hrdd. If you 
choose to support a new code then I believe (I have never seen the 
Topconnet) that the most of your code can be reused. If you inherit 
directly from the workarea then the number of changes will be quite 
small. You still will be able to use a direct access to members of AREA 
structure (and left unchanged calls for self or super methods if SELF_ 
and SUPER_ macros were used) however you will limit extensibility this 
way - there will be possible to inherit from Topconnect driver only.

Regards, Ryszard

From harbour@lists.harbour-project.org  Wed Jan 17 15:10:04 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Wed Jan 17 15:10:04 2001
Subject: [Harbour] New rdd func?
In-Reply-To: <002901c08007$b4e1d7c0$59f6fbce@local>
Message-ID: <3A660B36.13530.4F7A313@localhost>

On 16 Jan 2001, at 14:00, Brian Hays wrote:

> That is of course a function of each rdd itself.  I _would_ also propose
> that we add an extension to our rdd to offer a common interface to the
> values necessary for scrollbars (Pos--even approximate--and Length) since
> this is a fundamental issue in modern data display.  Even the ADS example
> isn't quite right because even though it gives a RelativePos it does not
> necessarily give the Length/Count/Max value that scroll bars need, so I
> multiply it times 1,000 and keep 1,000 as the Max.

  Clipper 5.3 has ORDKEYCOUNT() and ORDKEYNO() functions for it. I 
remember that I have used them successfuly for scrollbar purposes. 
Although ORDKEYCOUNT() can take 20-30 seconds to count ~1 milion records.

Regards, Ryszard

From harbour@lists.harbour-project.org  Wed Jan 17 15:31:01 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Wed Jan 17 15:31:01 2001
Subject: [Harbour] ChangeLog 2001-01-17 21:45 UTC+0100
Message-ID: <3A66101E.23083.50ACB5B@localhost>

    *source/vm.estack.c
        *fixed initialization of items during the stack reallocation
        *STACK_* constants can be defined using a compiler
        command line

Regards, Ryszard

PS. Any new news regarding the stack problems?


From harbour@lists.harbour-project.org  Wed Jan 17 16:13:02 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Wed Jan 17 16:13:02 2001
Subject: [Harbour] ChangeLog 2001-01-17 21:45 UTC+0100
In-Reply-To: <3A66101E.23083.50ACB5B@localhost>
Message-ID: <000301c080c9$fe63a960$0f2aa8c0@antonio>

Ryszard,

>     *source/vm.estack.c
>         *fixed initialization of items during the stack reallocation
>         *STACK_* constants can be defined using a compiler
>         command line
> PS. Any new news regarding the stack problems?

It is working great now!!! I tested it up to 20000 and all
test ok.


Thanks Master :-)

Antonio


From harbour@lists.harbour-project.org  Wed Jan 17 16:14:03 2001
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Wed Jan 17 16:14:03 2001
Subject: [Harbour] Simplex (was inline C)
References: <000001c080b0$528018e0$0f2aa8c0@antonio>
Message-ID: <3A660AE8.1AB8AE5D@libero.it>

I agree with Antonio, SimpLex is a clever tool which works well (even
better than flex) and requires one tool less to build harbour.

regards.

Antonio Linares ha scritto:
> 
> David,
> 
> > After the SimpLex fiasco, the group consensus was *clearly* that you
> > should not do something like that again. Yet you did it anyway.
> 
> I don't see Simplex as a Ron fiasco.
> 
> Ron has been working hard to master Harbour architecture.
> In fact he has already mastered many important compiler
> construction areas, as the lexer, yacc rules, even the
> Clipper preprocessor and the RTL.
> 
> All this clearly benefits Harbour now and in the future.
> We all have seen Ron fixing preprocessor bugs, optimizing
> the hvm, etc.
> 
> The problem with Ron is that he is very hard headed :-)
> (well, it is also an advantage because that made him
> master all those things).
> 
> We all want a Harbour 1.0 ready, and I guess that is
> what is making all of us a little nervous.
> 
> Harbour power!
> 
> Antonio
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Wed Jan 17 16:15:03 2001
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Wed Jan 17 16:15:03 2001
Subject: [Harbour] MySQL test problem!!
References: <200101170305.f0H35UN31898@thor.parrett.net> <200101170353.f0H3rHN02500@thor.parrett.net> <001101c0803e$449643c0$6c7ba8c0@zzz.com.tw>
Message-ID: <3A660B20.111AFB08@libero.it>

Hi,

are you using \contrib\mysql ??

regards.

 ù¥Ö\(ss-bbs\) ha scritto:
> 
> Hello all..
> 
>     I try test mysql function,
> I'm use lib of "mysql++1_7_1win32_borland_1_1".
> link is success!!
> But, occur error when I run it.
> APP be close!!
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Wed Jan 17 16:17:01 2001
From: harbour@lists.harbour-project.org (Shashkov)
Date: Wed Jan 17 16:17:01 2001
Subject: [Harbour] Re: RDD changes
In-Reply-To: <E14Ivwx-00076a-00@tts.orel.ru>
References: <E14Ivwx-00076a-00@tts.orel.ru>
Message-ID: <13118499289.20010117225835@orel.ru>

Hello!
I have considered Ryszard's suggestions concerning RDD changes. IMO,
before taking this decision it's necessary to give thorough
consideration to all the positive and negative sides. Ryszard suggests
a deviation from the standard or some sort of a new standard.(RDD
driver must be universal. And it presupposes the existence of a
standard.) Ryszard's suggestion provides greater flexibility, but at
the same time it complicates programming and it may appear to be the
cause of potential errors. I think that these changes must have a
really great positive effect and be really necessary to be accepted.

By the way, I have written some features for DBFCDX - support keys of any
type: character, number, date and logical.(Plus the functions which I
had written earlier: ORDSETFOCUS() and others.)

I agree with Maurilio on the point that it is important and essential
to concentrate on Harbour 1.0. I don't quite understand how it is
possible to write a serious code without a fully functioning debugger.
:)

Alex Shashkov                            mailto:shashkov@orel.ru



From harbour@lists.harbour-project.org  Wed Jan 17 16:17:19 2001
From: harbour@lists.harbour-project.org (Sid Saylors)
Date: Wed Jan 17 16:17:19 2001
Subject: [Harbour] ChangeLog 2001-01-17 21:45 UTC+0100
References: <3A66101E.23083.50ACB5B@localhost>
Message-ID: <000501c080ca$ca615760$aa4c0418@elcjn1.sdca.home.com>

Ryszard , JF.

Just tried the latest and i still have the problem...

allocated memory went up by 141 mg

locked memory went up by 21 mg

then it blew in __clsnew()

Sid............



----- Original Message ----- 
From: "Ryszard Glab" <rglab@imid.med.pl>
To: <harbour@lists.harbour-project.org>
Sent: Wednesday, January 17, 2001 12:35 PM
Subject: [Harbour] ChangeLog 2001-01-17 21:45 UTC+0100


>     *source/vm.estack.c
>         *fixed initialization of items during the stack reallocation
>         *STACK_* constants can be defined using a compiler
>         command line
> 
> Regards, Ryszard
> 
> PS. Any new news regarding the stack problems?
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 


From harbour@lists.harbour-project.org  Wed Jan 17 16:27:00 2001
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Wed Jan 17 16:27:00 2001
Subject: [Harbour] ChangeLog 2001-01-17 21:45 UTC+0100
References: <3A66101E.23083.50ACB5B@localhost>
Message-ID: <3A660E1F.3E87DD9C@libero.it>

Ryszard,

I'm sorry, it still dies :-( calling Qout(0).

Ryszard Glab ha scritto:
> 
>     *source/vm.estack.c
>         *fixed initialization of items during the stack reallocation
>         *STACK_* constants can be defined using a compiler
>         command line
> 
> Regards, Ryszard
> 
> PS. Any new news regarding the stack problems?
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Wed Jan 17 16:29:02 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Wed Jan 17 16:29:02 2001
Subject: [Harbour] ChangeLog 2001-01-17 21:45 UTC+0100
In-Reply-To: <000501c080ca$ca615760$aa4c0418@elcjn1.sdca.home.com>
Message-ID: <000501c080cb$e14fe580$0f2aa8c0@antonio>

Sid,

> then it blew in __clsnew()

it may be a different problem from the one that
Ryszard has fixed.

Antonio



From harbour@lists.harbour-project.org  Wed Jan 17 16:29:29 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Wed Jan 17 16:29:29 2001
Subject: [Harbour] Re: RDD changes
In-Reply-To: <13118499289.20010117225835@orel.ru>
Message-ID: <000401c080cb$bf441380$0f2aa8c0@antonio>

Alex, 

> I agree with Maurilio on the point that it is important and essential
> to concentrate on Harbour 1.0. I don't quite understand how it is
> possible to write a serious code without a fully functioning debugger.

I wrote the actual Harbour debugger, though still it is not completed.
Paul help me too.

The debugger is written using standard PRG code and what I can not 
understand is why nobody else has contributed to complete it. There are
many programmers on the list and I am sure they do know to code using
the Clipper language ;-)

Antonio


From harbour@lists.harbour-project.org  Wed Jan 17 16:37:01 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Wed Jan 17 16:37:01 2001
Subject: [Harbour] Simplex (was inline C)
In-Reply-To: <3A660AE8.1AB8AE5D@libero.it>
References: <000001c080b0$528018e0$0f2aa8c0@antonio>
Message-ID: <200101172136.f0HLafN07743@thor.parrett.net>

** Reply to message from Maurilio Longo <maurilio.longo@libero.it> on
Wed, 17 Jan 2001 22:13:13 +0100

My use of "fiasco" was not a reference to the utility of SimpLex.

> I agree with Antonio, SimpLex is a clever tool which works well (even
> better than flex) and requires one tool less to build harbour.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Wed Jan 17 16:54:01 2001
From: harbour@lists.harbour-project.org (Sid Saylors)
Date: Wed Jan 17 16:54:01 2001
Subject: [Harbour] ChangeLog 2001-01-17 21:45 UTC+0100
References: <000501c080cb$e14fe580$0f2aa8c0@antonio>
Message-ID: <001501c080cf$ee31ca80$aa4c0418@elcjn1.sdca.home.com>

Antonio,
    Yep , i think it is a lot more than what Ryszard fixed.
it's strange when it is about to blow it don't matter what
class is next, it will blow in __clsnew(0) and the next stack call is the
fivewin create method.

Sid.........


----- Original Message -----
From: "Antonio Linares" <alinares@fivetech.com>
To: <harbour@lists.harbour-project.org>
Sent: Wednesday, January 17, 2001 1:24 PM
Subject: RE: [Harbour] ChangeLog 2001-01-17 21:45 UTC+0100


> Sid,
>
> > then it blew in __clsnew()
>
> it may be a different problem from the one that
> Ryszard has fixed.
>
> Antonio
>
>
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Wed Jan 17 17:50:03 2001
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Wed Jan 17 17:50:03 2001
Subject: [Harbour] ChangeLog 2001-01-17 21:45 UTC+0100
In-Reply-To: <001501c080cf$ee31ca80$aa4c0418@elcjn1.sdca.home.com>
Message-ID: <200101172229.f0HMThq02944@ev6.be.wanadoo.com>

Sid, Antonio, Maurillio, Bryan, ...

I think I uploaded some intermediate files where I does some test 
about ::Class message :-((((.

I will upload a clean version within a few minutes, hope it will solve 
the problem.


>     Yep , i think it is a lot more than what Ryszard fixed.
> it's strange when it is about to blow it don't matter what
> class is next, it will blow in __clsnew(0) and the next stack call is the
> fivewin create method.
> 
> Sid.........
> 
> 
> ----- Original Message -----
> From: "Antonio Linares" <alinares@fivetech.com>
> To: <harbour@lists.harbour-project.org>
> Sent: Wednesday, January 17, 2001 1:24 PM
> Subject: RE: [Harbour] ChangeLog 2001-01-17 21:45 UTC+0100
> 
> 
> > Sid,
> >
> > > then it blew in __clsnew()
> >
> > it may be a different problem from the one that
> > Ryszard has fixed.
> >
> > Antonio
> >
> >
> > _______________________________________________
> > Harbour mailing list
> > Harbour@lists.harbour-project.org
> > http://www.matrixlist.com/mailman/listinfo/harbour
> >
> > Thank you for participating in The Harbour Project.  Be sure to check
> > http://www.Harbour-Project.org
> >
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Wed Jan 17 18:23:15 2001
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Wed Jan 17 18:23:15 2001
Subject: [Harbour] 2001-01-18 00:18 GMT+1 JFL (Mafact) <jfl@mafact.com>
In-Reply-To: <200101172229.f0HMThq02944@ev6.be.wanadoo.com>
References: <001501c080cf$ee31ca80$aa4c0418@elcjn1.sdca.home.com>
Message-ID: <200101172303.f0HN37q09317@ev6.be.wanadoo.com>

2001-01-18 00:18 GMT+1 JFL (Mafact) <jfl@mafact.com>
   *harbour/makefile.vc
    * minor form adjustement
   *harbour/include/hbclass.ch
    * Clean the ::Class reference wich does'nt work
   *harbour/source/debug/dbgtmenu.prg
    * Adding a blank line at the end of file to test Simplex and VC++
   *harbour/source/rtl/tclass.prg
    * Clean the ::Class reference wich does'nt work
   *harbour/source/rtl/tobject.prg
    * Clean the ::Class reference wich does'nt work
   +harbour/vc_slex.bat
   +harbour/hb_slex.vc
     + simplex make files for VC++ (still a problem)


Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Wed Jan 17 18:31:02 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Wed Jan 17 18:31:02 2001
Subject: [Harbour] New rdd func?
References: <3A65EC82.18555.47FB3AB@localhost>
Message-ID: <013701c080df$42b78680$59f6fbce@local>

Ryszard:

> > HB_FUNC( ADSISINDEXED )
> > {
> >    hb_retl(pArea->hOrdCurrent)
> > }
>
>   I think that we should use DBORDINFO() or DBINFO() for this. Adding ADS
> specific functions will work with ADS only. This will cause problems if
> someone will want to inherit this driver to add his support for index
> files.

Yes, this is my thought also.  I guess what I'm getting at is: What is the
protocol we should use to determine what "extra" features can be added to
the rdd.  John also "voted" in favor of functions aimed at optimizing access
to rdd info for updating scrollbars and such.   I think
dbInfo(DBI_ISINDEXED) is one easy addition that would help--in the case of
ADS it avoids a call to the server completely.

Brian



From harbour@lists.harbour-project.org  Wed Jan 17 18:46:02 2001
From: harbour@lists.harbour-project.org (Sid Saylors)
Date: Wed Jan 17 18:46:02 2001
Subject: [Harbour] 2001-01-18 00:18 GMT+1 JFL (Mafact) <jfl@mafact.com>
References: <001501c080cf$ee31ca80$aa4c0418@elcjn1.sdca.home.com> <200101172303.f0HN37q09317@ev6.be.wanadoo.com>
Message-ID: <000701c080df$88797f20$aa4c0418@elcjn1.sdca.home.com>

JF,

sorry but the problem remains same error, same place....

Sid..........



----- Original Message ----- 
From: "JF Lefebvre" <jfl@wanadoo.be>
To: <harbour@lists.harbour-project.org>
Sent: Wednesday, January 17, 2001 3:22 PM
Subject: [Harbour] 2001-01-18 00:18 GMT+1 JFL (Mafact) <jfl@mafact.com>


> 2001-01-18 00:18 GMT+1 JFL (Mafact) <jfl@mafact.com>
>    *harbour/makefile.vc
>     * minor form adjustement
>    *harbour/include/hbclass.ch
>     * Clean the ::Class reference wich does'nt work
>    *harbour/source/debug/dbgtmenu.prg
>     * Adding a blank line at the end of file to test Simplex and VC++
>    *harbour/source/rtl/tclass.prg
>     * Clean the ::Class reference wich does'nt work
>    *harbour/source/rtl/tobject.prg
>     * Clean the ::Class reference wich does'nt work
>    +harbour/vc_slex.bat
>    +harbour/hb_slex.vc
>      + simplex make files for VC++ (still a problem)
> 
> 
> Best regards,
> 
> J. Lefebvre,
> Bruxelles,
> Belgium
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 


From harbour@lists.harbour-project.org  Wed Jan 17 18:57:02 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Wed Jan 17 18:57:02 2001
Subject: [Harbour] Re: RDD changes
References: <000401c080cb$bf441380$0f2aa8c0@antonio>
Message-ID: <016101c080e2$dcbe7f10$59f6fbce@local>

Antonio:
I could never get the debugger to even start to run on my NT machine, so I
gave up.
Has anyone been able to use it on NT or Win2000?

Brian

----- Original Message -----
From: Antonio Linares <alinares@fivetech.com>
To: <harbour@lists.harbour-project.org>
Sent: Wednesday, January 17, 2001 1:23 PM
Subject: RE: [Harbour] Re: RDD changes


> Alex,
>
> > I agree with Maurilio on the point that it is important and essential
> > to concentrate on Harbour 1.0. I don't quite understand how it is
> > possible to write a serious code without a fully functioning debugger.
>
> I wrote the actual Harbour debugger, though still it is not completed.
> Paul help me too.
>
> The debugger is written using standard PRG code and what I can not
> understand is why nobody else has contributed to complete it. There are
> many programmers on the list and I am sure they do know to code using
> the Clipper language ;-)
>
> Antonio
>
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>



From harbour@lists.harbour-project.org  Wed Jan 17 18:57:31 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Wed Jan 17 18:57:31 2001
Subject: [Harbour] New rdd func?
References: <3A660B36.13530.4F7A313@localhost>
Message-ID: <016001c080e2$dbf4c670$59f6fbce@local>

Ryszard:
>   Clipper 5.3 has ORDKEYCOUNT() and ORDKEYNO() functions for it. I
> remember that I have used them successfuly for scrollbar purposes.
> Although ORDKEYCOUNT() can take 20-30 seconds to count ~1 milion records.

On reasonably fast machines, ORDKEYCOUNT() can take 15 seconds to count
50,000 records.  This is too long to have to wait for a scrollbar to get
updated, especially in cases where the keys get counted repeatedly on
successive keystrokes (like typing in a search string).  If an index file is
particularly large (long keys, many records), then a big chunk has to be
read from the network across the wire to traverse the keys.

ADS has a function that makes a good and very fast percentage estimate of
key position.  It would be good if our own CDX driver could do something
similar.  So it would be nice if our RDD design anticipated this feature.
Scrollbars were not an expected interface element in the days when CLipper
was designed....


(Thanks for reminding me about ORDKEYCOUNT() directly; with Harbour I have
been focusing on the dbOrderInfo() options, and there are some differences
with ADS in how the RAW/Scoped/Filtered options get used)

Brian





From harbour@lists.harbour-project.org  Wed Jan 17 19:09:02 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Wed Jan 17 19:09:02 2001
Subject: [Harbour] Re: RDD changes
References: <E14Ivwx-00076a-00@tts.orel.ru> <13118499289.20010117225835@orel.ru>
Message-ID: <018101c080e4$87291810$59f6fbce@local>

Shashkov:

> I think that these changes must have a
> really great positive effect and be really necessary to be accepted.
I fully agree.  I haven't been able to give it enough time to absorb it all
yet myself.  Hopefully as many people as possible will take a good hard look
at the proposed code.

But since the RDD main system layer is not complete yet anyway, I think it
is a great time to consider an architecture design that will give us
extensibility as well as compatibility before committing to one that only
goes so far.


Brian


----- Original Message -----
From: Shashkov <shashkov@orel.ru>
To: harbour-request@lists.harbour-project.org
<harbour@lists.harbour-project.org>
Sent: Wednesday, January 17, 2001 11:58 AM
Subject: [Harbour] Re: RDD changes


> Hello!
> I have considered Ryszard's suggestions concerning RDD changes. IMO,
> before taking this decision it's necessary to give thorough
> consideration to all the positive and negative sides. Ryszard suggests
> a deviation from the standard or some sort of a new standard.(RDD
> driver must be universal. And it presupposes the existence of a
> standard.) Ryszard's suggestion provides greater flexibility, but at
> the same time it complicates programming and it may appear to be the
> cause of potential errors. I think that these changes must have a
> really great positive effect and be really necessary to be accepted.
>
> By the way, I have written some features for DBFCDX - support keys of any
> type: character, number, date and logical.(Plus the functions which I
> had written earlier: ORDSETFOCUS() and others.)
>
> I agree with Maurilio on the point that it is important and essential
> to concentrate on Harbour 1.0. I don't quite understand how it is
> possible to write a serious code without a fully functioning debugger.
> :)
>
> Alex Shashkov                            mailto:shashkov@orel.ru
>
>
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>



From harbour@lists.harbour-project.org  Wed Jan 17 19:48:01 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Wed Jan 17 19:48:01 2001
Subject: [Harbour] RDD changes
References: <3A65CF4B.17722.40D92DA@localhost>
Message-ID: <000301c080ea$03f6c360$59f6fbce@local>

Ryszard:

>   With the new design we will still allocate a single memory block for all
drivers
> in the inheritance tree. This memory block will be passed to every virtual
table
> function. However only the private driver's workarea structure have to be
defined
> and there will be needed an additional call to get a pointer to the
workarea
> structure part specific for a driver.

Does this mean that existing code that accesses the area via a pointer
retrieved from:
    void * hb_rddGetCurrentWorkAreaPointer( void )

can stay as is?  Or does it need to possibly be re-written for some members
to be accessed from a different structure?

> This means that the driver cannot directly
> access data from inherited drivers because only the AREA part will have a
constant
> location at the beginning of the memory buffer although the calls for
virtual
> functions should be preferred.
>   This means that developers of existing RDDs will have review their code
and fix
> access for a private workarea members and  __possibly remove access to
inherited members.___

For example, RDDADS refers to a pArea for most values it deals with.
How do we determine if a member is or should be accessible or not?
Are all members defined by what was the "standard" area like bEof now part
of the "private workarea" or are they inherited?

Thanks,
Brian





From harbour@lists.harbour-project.org  Wed Jan 17 20:06:02 2001
From: harbour@lists.harbour-project.org (Charles Kwon ( Kwon,Oh-Jun))
Date: Wed Jan 17 20:06:02 2001
Subject: [Harbour] MySQL test problem!!
References: <200101170305.f0H35UN31898@thor.parrett.net> <200101170353.f0H3rHN02500@thor.parrett.net> <001101c0803e$449643c0$6c7ba8c0@zzz.com.tw> <3A660B20.111AFB08@libero.it>
Message-ID: <001301c080e9$ddf61080$0200a8c0@ns>

OiBhcmUgeW91IHVzaW5nIFxjb250cmliXG15c3FsID8/DQoNClllcywgSSBkaWQNCkJ1dCBJIGdv
dCBhIEdQRiB3aXRoIFdpbjMyIEdESSBNb2RlDQoNCkJlc3QgUmVnYXJkcywNCkNoYXJsZXMgS3dv
biANCg0KaHR0cDovL3d3dy5maXZldGVjaC5uZXQNCmh0dHA6Ly9lbmdsaXNoLmZpdmV0ZWNoLm5l
dA0KaHR0cDovL3NwYWluLmZpdmV0ZWNoLm5ldA0KDQpGaXZlVGVjaC5OZXQNClRFTCA6ICs4Mi0y
LTU2Ni02ODI2DQpJQ1EgOiAxOTMwMjI1OA0KLS0tLS0gT3JpZ2luYWwgTWVzc2FnZSAtLS0tLSAN
Cj8/ID8/OiAiTWF1cmlsaW8gTG9uZ28iIDxtYXVyaWxpby5sb25nb0BsaWJlcm8uaXQ+DQo/PyA/
PzogPGhhcmJvdXJAbGlzdHMuaGFyYm91ci1wcm9qZWN0Lm9yZz4NCj8/ID8/OiAyMDAxPyAxPyAx
OD8gPz8/ID8/IDY6MTQNCj8/OiBSZTogW0hhcmJvdXJdIE15U1FMIHRlc3QgcHJvYmxlbSEhDQoN
Cg0KOiBIaSwNCjogDQo6IGFyZSB5b3UgdXNpbmcgXGNvbnRyaWJcbXlzcWwgPz8NCjogDQo6IHJl
Z2FyZHMuDQo6IA0KOiD5pdZcKHNzLWJic1wpIGhhIHNjcml0dG86DQo6ID4gDQo6ID4gSGVsbG8g
YWxsLi4NCjogPiANCjogPiAgICAgSSB0cnkgdGVzdCBteXNxbCBmdW5jdGlvbiwNCjogPiBJJ20g
dXNlIGxpYiBvZiAibXlzcWwrKzFfN18xd2luMzJfYm9ybGFuZF8xXzEiLg0KOiA+IGxpbmsgaXMg
c3VjY2VzcyEhDQo6ID4gQnV0LCBvY2N1ciBlcnJvciB3aGVuIEkgcnVuIGl0Lg0KOiA+IEFQUCBi
ZSBjbG9zZSEhDQo6ID4gDQo6ID4gX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX18NCjogPiBIYXJib3VyIG1haWxpbmcgbGlzdA0KOiA+IEhhcmJvdXJAbGlzdHMu
aGFyYm91ci1wcm9qZWN0Lm9yZw0KOiA+IGh0dHA6Ly93d3cubWF0cml4bGlzdC5jb20vbWFpbG1h
bi9saXN0aW5mby9oYXJib3VyDQo6ID4gDQo6ID4gVGhhbmsgeW91IGZvciBwYXJ0aWNpcGF0aW5n
IGluIFRoZSBIYXJib3VyIFByb2plY3QuICBCZSBzdXJlIHRvIGNoZWNrDQo6ID4gaHR0cDovL3d3
dy5IYXJib3VyLVByb2plY3Qub3JnDQo6IA0KOiAtLSANCjogDQo6ICBfX19fX19fX19fICAgICAg
ICAgICAgICAgICAgIA0KOiB8ICB8ICB8IHxfX3wgbWQyNTIwQG1jbGluay5pdCANCjogfF98X3xf
fF9fX198IFRlYW0gT1MvMiBJdGFsaWENCjogX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX18NCjogSGFyYm91ciBtYWlsaW5nIGxpc3QNCjogSGFyYm91ckBsaXN0
cy5oYXJib3VyLXByb2plY3Qub3JnDQo6IGh0dHA6Ly93d3cubWF0cml4bGlzdC5jb20vbWFpbG1h
bi9saXN0aW5mby9oYXJib3VyDQo6IA0KOiBUaGFuayB5b3UgZm9yIHBhcnRpY2lwYXRpbmcgaW4g
VGhlIEhhcmJvdXIgUHJvamVjdC4gIEJlIHN1cmUgdG8gY2hlY2sNCjogaHR0cDovL3d3dy5IYXJi
b3VyLVByb2plY3Qub3JnDQo=


From harbour@lists.harbour-project.org  Wed Jan 17 20:16:02 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Wed Jan 17 20:16:02 2001
Subject: [Harbour] help with codeblock callback
Message-ID: <001b01c080ee$01ce4140$59f6fbce@local>

I need to create a callback function for ADS indexing to be able to show a
progress display.

I had it all done, but a critical part doesn't work because a codelbock goes
out of scope in some fashion.

I created a C functiion that receives a nPercentage from ADS. This works
fine and gets called OK.
My "Register" function does two things:
    1) Sets up that callback function pointer for ADS, and
    2) receives a codeblock from the PRG level that is to be evaluated when
the callbacks occur.
This item's pointer is stored to a static (does the item itself need to be
copied?), and locked for the gc:

   itmCobCallBack = hb_param( 1, HB_IT_BLOCK );
   if ( ! itmCobCallBack )
   {
      hb_retl( FALSE );
      return;
   }
   hb_gcLockItem( itmCobCallBack );

At this point everything traces fine.  itmCobCallBack has a good address,
and its type is BLOCK.

Unfortunately, within the callback function itself the pointer's value is
the same, but its hb_itemType is now 0.

Apparently because it is called from the other process it has a memory space
problem and can't find the Harbour through the fog :-(

How can a callback function, for another process to execute, turn around and
call Harbour code?

Brian

Here's the callback function itself:

UNSIGNED32 WINAPI ShowPercentage( UNSIGNED16 usPercentDone )
{
   PHB_ITEM pPercentDone = hb_itemPutNI(NULL, usPercentDone);
   if ( itmCobCallBack )
   {
      hb_vmEvalBlockV( itmCobCallBack, 1, pPercentDone ) ;
   }
   else
   {
      HB_TRACE(HB_TR_ALWAYS, ("ShowPercentage(%d) called with no codeblock
set.\n", usPercentDone ));
   }
   hb_itemRelease( pPercentDone );
   return 0;

}  /* ShowPercentage */






From harbour@lists.harbour-project.org  Wed Jan 17 23:32:00 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Jan 17 23:32:00 2001
Subject: [Harbour] Inline C
In-Reply-To: <200101171811.f0HIBmN22212@thor.parrett.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKGEOODIAA.ron@profit-master.com>

David, All,

> Your attitude that you have the right to commit whatever you want into
> the CVS is not in keeping with the spirit in which the Harbour project
> was founded. The stated goal of Harbour is the implementation of a
> compiler that is compatible with CA-Clipper 5.2e, with some additional
> features from CA-Cipper 5.3b. Anything else needs a group consensus
> before being committed to CVS.

It seems you are expressing a common concern, that appears to be rooted in
the belief that uploading to CVS, signifies [unearned] acceptance. I
sincerely respect this concern.

The CVS is a very important medium, which can be used effectively, to make
proposed code available, when in a stable, functional stage, (without
earning or implying acceptance status). Such usage must of course, cause no
extra hardship on any other developer or user. Same quality standards must
apply, as with any other uploads, and it must be clear, that its the
responsibility of the contributor, to remove such code, without impacting
any other developer, when requested.

Given such strict protocol, assuring such proposed code does not place any
extra burden on any of the other developers, will provide the group with
important flexibility, which currently appears to cause a lot of friction,
and misunderstandings.

***

I would like to take this opportunity to explain to the group, why did I
seem disrespectful, and why was I not able to propose my solution first:

While not very common, on some unique occasions, I'd have an idea, and
followed by immediate urge to validate such concept. On those rare
occasions, I become "consumed" with such task, and am completely focused, on
nothing but the code. I'll skip food, sleep, etc., and am not in any
condition to discuss anything, with anyone, including family :-(. At the end
of such phase, I'll usually have a fairly good working model of the idea.
Once reaching that point, I am exhausted, and have no energy to "promote"
such idea, when I can just as easily, make it available, as is, for
evaluation.

For such rare situations, especially when the code is so isolated, and have
no impact on the rest of Harbour, it seems extremely primitive to include
such code into email message, with  cut & paste instructions, and other
needed information. Yet it does involve core files, and can't be functional
in any other context.

I hope it might explain how, so much more "user friendly" it becomes, to
have this proposed idea, uploaded, readily available, for evaluation in the
only context it makes sense - the working core.

This might not represent a great "team spirit", but it is not meant that
way. Its the least of the worst. Not allowing such, will not help advance
our goals. In the absence of such protocol, someone like me, would not be
able to contribute, because it would effectively kill my initiative.

Respectfully,

Ron


From harbour@lists.harbour-project.org  Thu Jan 18 00:10:04 2001
From: harbour@lists.harbour-project.org (=?big5?B?ufml1lwoc3MtYmJzXCk=?=)
Date: Thu Jan 18 00:10:04 2001
Subject: [Harbour] MySQL test problem!!
References: <200101170305.f0H35UN31898@thor.parrett.net> <200101170353.f0H3rHN02500@thor.parrett.net> <001101c0803e$449643c0$6c7ba8c0@zzz.com.tw> <3A660B20.111AFB08@libero.it>
Message-ID: <002201c0810b$98b81c80$6c7ba8c0@zzz.com.tw>

Yes!!
and I link lib of "mysql++1_7_1win32_borland_1_1" download from
www.mysql.com


> Hi,
>
> are you using \contrib\mysql ??
>
> regards.
>
>  ù¥Ö\(ss-bbs\) ha scritto:
> >
> > Hello all..
> >
> >     I try test mysql function,
> > I'm use lib of "mysql++1_7_1win32_borland_1_1".
> > link is success!!
> > But, occur error when I run it.
> > APP be close!!
> >




From harbour@lists.harbour-project.org  Thu Jan 18 02:17:02 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Thu Jan 18 02:17:02 2001
Subject: [Harbour] 2001-01-18 00:18 GMT+1 JFL (Mafact) <jfl@mafact.com>
References: <001501c080cf$ee31ca80$aa4c0418@elcjn1.sdca.home.com> <200101172303.f0HN37q09317@ev6.be.wanadoo.com>
Message-ID: <001301c0811e$af10f520$0100007f@sl.conex.net>

Jean

Can you add the hbmake dependencies to the MSVC make files

Regards From Brazil

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Thu Jan 18 02:34:02 2001
From: harbour@lists.harbour-project.org (harbour@lists.harbour-project.org)
Date: Thu Jan 18 02:34:02 2001
Subject: [Harbour] 2001-01-18 00:18 GMT+1 JFL (Mafact) <jfl@mafact.com>
In-Reply-To: <001301c0811e$af10f520$0100007f@sl.conex.net>
Message-ID: <3A66A9D4.2825.3031106@localhost>

Yes, sure.

I will do it this evening (or night :-( )

See you,

On 18 Jan 2001, at 5:14, Luiz Rafael Culik Guimaraes wrote:

> Jean
> 
> Can you add the hbmake dependencies to the MSVC make files
> 
> Regards From Brazil
> 
> Luiz Rafael Culik
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre <jflefebv@mafact.com>
Mafact SA/NV
Belgium
(See us at http://www.mafact.com)
jflefebv@mafact.com


From harbour@lists.harbour-project.org  Thu Jan 18 02:38:02 2001
From: harbour@lists.harbour-project.org (harbour@lists.harbour-project.org)
Date: Thu Jan 18 02:38:02 2001
Subject: [Harbour] 2001-01-18 00:18 GMT+1 JFL (Mafact) <jfl@mafact.com>
In-Reply-To: <000701c080df$88797f20$aa4c0418@elcjn1.sdca.home.com>
Message-ID: <3A66AB04.21111.307B7D0@localhost>

Sid,

Do you have a small test programe for me to debug the problem ?



> JF,
> 
> sorry but the problem remains same error, same place....
> 
> Sid..........
> 
> 
> 
> ----- Original Message ----- 
> From: "JF Lefebvre" <jfl@wanadoo.be>
> To: <harbour@lists.harbour-project.org>
> Sent: Wednesday, January 17, 2001 3:22 PM
> Subject: [Harbour] 2001-01-18 00:18 GMT+1 JFL (Mafact)
> <jfl@mafact.com>
> 
> 
> > 2001-01-18 00:18 GMT+1 JFL (Mafact) <jfl@mafact.com>
> >    *harbour/makefile.vc
> >     * minor form adjustement
> >    *harbour/include/hbclass.ch
> >     * Clean the ::Class reference wich does'nt work
> >    *harbour/source/debug/dbgtmenu.prg
> >     * Adding a blank line at the end of file to test Simplex and
> >     VC++
> >    *harbour/source/rtl/tclass.prg
> >     * Clean the ::Class reference wich does'nt work
> >    *harbour/source/rtl/tobject.prg
> >     * Clean the ::Class reference wich does'nt work
> >    +harbour/vc_slex.bat
> >    +harbour/hb_slex.vc
> >      + simplex make files for VC++ (still a problem)
> > 
> > 
> > Best regards,
> > 
> > J. Lefebvre,
> > Bruxelles,
> > Belgium
> > 
> > _______________________________________________
> > Harbour mailing list
> > Harbour@lists.harbour-project.org
> > http://www.matrixlist.com/mailman/listinfo/harbour
> > 
> > Thank you for participating in The Harbour Project.  Be sure to
> > check http://www.Harbour-Project.org
> > 
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre <jflefebv@mafact.com>
Mafact SA/NV
Belgium
(See us at http://www.mafact.com)
jflefebv@mafact.com


From harbour@lists.harbour-project.org  Thu Jan 18 03:28:01 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 18 03:28:01 2001
Subject: [Harbour] Inline C
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKGEOODIAA.ron@profit-master.com>; from ron@profit-master.com on Wed, Jan 17, 2001 at 08:32:05PM -0800
References: <200101171811.f0HIBmN22212@thor.parrett.net> <LOBBKAFMMFGJIKLMEPAKGEOODIAA.ron@profit-master.com>
Message-ID: <20010118074736.P9113@hagbard.davep.org>

On Wed, Jan 17, 2001 at 08:32:05PM -0800, Ron Pinkas wrote:

> While not very common, on some unique occasions, I'd have an idea, and
> followed by immediate urge to validate such concept. On those rare
> occasions, I become "consumed" with such task, and am completely focused,
> on nothing but the code. I'll skip food, sleep, etc., and am not in any
> condition to discuss anything, with anyone, including family :-(. At the
> end of such phase, I'll usually have a fairly good working model of the
> idea. 

You've found the hacker compulsion, you've been infected by the hacker
nature. Cool huh?

>       Once reaching that point, I am exhausted, and have no energy to
> "promote" such idea, when I can just as easily, make it available, as is,
> for evaluation.

Perhaps this explains it all then? This exhaustion is the thing that causes
you to be more defensive than you need when you discusses these things? Why
not consider getting the rest you say you need and then present the idea
with a fresh head?

> For such rare situations, especially when the code is so isolated, and
> have no impact on the rest of Harbour, it seems extremely primitive to
> include such code into email message, with cut & paste instructions, and
> other needed information. Yet it does involve core files, and can't be
> functional in any other context.

There's nothing primitive about patch(1) and diff(1). Moreover, there's
nothing primitive about CVS. Correct me if I'm wrong but you can create
experimental branches in CVS.

> I hope it might explain how, so much more "user friendly" it becomes, to
> have this proposed idea, uploaded, readily available, for evaluation in
> the only context it makes sense - the working core.

Speaking to the developers about the idea first is generally considered to
be more user friendly in my experience.

> This might not represent a great "team spirit", but it is not meant that
> way. Its the least of the worst. Not allowing such, will not help advance
> our goals. In the absence of such protocol, someone like me, would not be
> able to contribute, because it would effectively kill my initiative.

Your code still exists and can and will be seen even if you don't drop it
into CVS the moment you've finished the first cut. The only person who would
be killing your initiative in this scenario would be yourself.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 18 04:25:03 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Thu Jan 18 04:25:03 2001
Subject: [Harbour] New rdd func?
Message-ID: <200101180424_MC2-C231-1721@compuserve.com>

Ryszard,

"Clipper 5.3 has ORDKEYCOUNT() and ORDKEYNO() functions for it. I =

remember that I have used them successfuly for scrollbar purposes."

Yes, they work, but:

"ORDKEYCOUNT() can take 20-30 seconds to count ~1 milion records."

Quite.

John.

From harbour@lists.harbour-project.org  Thu Jan 18 06:20:03 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Thu Jan 18 06:20:03 2001
Subject: [Harbour] RDD changes
Message-ID: <200101180618_MC2-C22E-C818@compuserve.com>

Ryszard,

"Please notice that the current RDD code will be still here. The new =

code will be uploaded either into source/hrdd or contrib/hrdd."

:-)

"You still will be able to use a direct access to members of AREA =

structure (and left unchanged calls for self or super methods if SELF_ =

and SUPER_ macros were used)"

:-)

"however you will limit extensibility this way - there will be possible
to inherit from Topconnect driver only."

That sounds OK.  Being able to keep existing driver means we can have
something that (still) works.  Hopefully a newer driver, using the
new system, will be available later.

It'll be wonderful if you manage not to break existing RDDs at the
same time as adding an improved structure.

John.

From harbour@lists.harbour-project.org  Thu Jan 18 09:01:02 2001
From: harbour@lists.harbour-project.org (Jacek Potempa)
Date: Thu Jan 18 09:01:02 2001
Subject: [Harbour] RDD changes
In-Reply-To: <3A65CF4B.17722.40D92DA@localhost>
Message-ID: <NOEPIKLDCODGGHOPAHEEAEOICDAA.Jacek.Potempa@otc.pl>

Ryszard,

>   With the new design we will still allocate a single memory
> block for all drivers
> in the inheritance tree. This memory block will be passed to
> every virtual table
> function. However only the private driver's workarea structure
> have to be defined
> and there will be needed an additional call to get a pointer to
> the workarea
> structure part specific for a driver. This means that the driver
> cannot directly
> access data from inherited drivers because only the AREA part
> will have a constant
> location at the beginning of the memory buffer although the calls
> for virtual
> functions should be preferred.
>   This means that developers of existing RDDs will have review
> their code and fix
> access for a private workarea members and possibly remove access
> to inherited
> members. The functionality of the most virtual functions will be
> the same - except
> the very few ('structSize' and 'error' at this moment).
>   Notice that in cases where RDD driver has not inherited from
> 'DBF' than the
> number of required changes will be smaller.

Please confirm, the following is possible for the new RDD
architecture/design.

We start with the easiest/fastest method of adapting Mediator RDD
to work with the new architecture. We do not change  MEDAREA
structure, so it looks as follows:

struct MEDAREA {
     // AREA structure members
     // MEDNTX/MEDCDX private members
};

- we continue to access AREA members directly through the main workarea
pointer passed to the RDD methods
- we continue to access MEDNTX/MEDCDX "private" members directly through
the main workarea pointer passed to the RDD methods
- calls to SUPER and SELF methods remain unchanged
- we do not modify structSize method (it continues to return
sizeof(MEDAREA))
- calls to RDD virtual machine integration functions
(hb_rddGetCurrentWorkAreaNumber etc.)
remain unchanged

As far as I understand, the above is possible, and the only drawback
of choosing this simplest approach, is the limitation of inheritance
hierarchies including "other" drivers between AREA (root) and
MEDNTX/MEDCDX, such as in
AREA -> "OTHER" driver -> MEDNTX/MEDCDX

Dynamic inheritance from
AREA -> MEDNTX/MEDCDX, such as in
AREA -> MEDNTX/MEDCDX -> "OTHER" driver
is still possible and safe.

If I understand your idea correctly, adapting Mediator to
work with the new code will not be a problem.

The question remains, however, what changes are required
in DBF, DBFNTX, DBFCDX and other existing drivers, and how
much time it will take to implement/test and document them.
I am sure, it is more important to get the reasonably
Clipper-compatible Harbour 1.0 in the nearest future, then
to  wait infinitely for the excellent (all including) version
of Harbour.


Regards,
Jacek



From harbour@lists.harbour-project.org  Thu Jan 18 09:17:02 2001
From: harbour@lists.harbour-project.org (Juan Agustin Barriga)
Date: Thu Jan 18 09:17:02 2001
Subject: [Harbour] RDD changes
References: <NOEPIKLDCODGGHOPAHEEAEOICDAA.Jacek.Potempa@otc.pl>
Message-ID: <002f01c08161$05e6b370$946410ac@jharrier>

I am in this position too. The only thing it bothers me is thst ALL this RDD
mess ould be VERY simple if only Harbour was written in C++, where the
languaje expresses inheritance, not the programmer. But this are as things
are...

Regards
Harrier

----- Original Message -----
From: "Jacek Potempa" <Jacek.Potempa@otc.pl>
To: <harbour@lists.harbour-project.org>
Sent: Thursday, January 18, 2001 9:51 AM
Subject: RE: [Harbour] RDD changes
>
> Please confirm, the following is possible for the new RDD
> architecture/design.
>
> We start with the easiest/fastest method of adapting Mediator RDD
> to work with the new architecture. We do not change  MEDAREA
> structure, so it looks as follows:
>
> struct MEDAREA {
>      // AREA structure members
>      // MEDNTX/MEDCDX private members
> };
>
> - we continue to access AREA members directly through the main workarea
> pointer passed to the RDD methods
> - we continue to access MEDNTX/MEDCDX "private" members directly through
> the main workarea pointer passed to the RDD methods
> - calls to SUPER and SELF methods remain unchanged
> - we do not modify structSize method (it continues to return
> sizeof(MEDAREA))
> - calls to RDD virtual machine integration functions
> (hb_rddGetCurrentWorkAreaNumber etc.)
> remain unchanged
>
> As far as I understand, the above is possible, and the only drawback
> of choosing this simplest approach, is the limitation of inheritance
> hierarchies including "other" drivers between AREA (root) and
> MEDNTX/MEDCDX, such as in
> AREA -> "OTHER" driver -> MEDNTX/MEDCDX
>
> Dynamic inheritance from
> AREA -> MEDNTX/MEDCDX, such as in
> AREA -> MEDNTX/MEDCDX -> "OTHER" driver
> is still possible and safe.
>
> If I understand your idea correctly, adapting Mediator to
> work with the new code will not be a problem.
>
> The question remains, however, what changes are required
> in DBF, DBFNTX, DBFCDX and other existing drivers, and how
> much time it will take to implement/test and document them.
> I am sure, it is more important to get the reasonably
> Clipper-compatible Harbour 1.0 in the nearest future, then
> to  wait infinitely for the excellent (all including) version
> of Harbour.
>
>
> Regards,
> Jacek
>



From harbour@lists.harbour-project.org  Thu Jan 18 09:51:02 2001
From: harbour@lists.harbour-project.org (Diethelm Guallar, Gonzalo)
Date: Thu Jan 18 09:51:02 2001
Subject: [Harbour] Inline C
Message-ID: <01Jan18.114852clst.118115@guardia.sonda.com>

Even though I have not contributed at all to Harbour
in the past months, I have about 10 years of experience
with CVS and projects that use it, so here you have
my thoughts on the issue of committing undiscussed
changes to CVS.

First, I think it is always polite to let everybody
know you are planning to do work on a feature, specially
when the feature is not considered to be part of the
standard of a given project. Heads up are always welcome;
among other things, they make it possible for you to
assess if someone else is thinking or working along the
same lines.

> For such rare situations, especially when the code is so 
> isolated, and have
> no impact on the rest of Harbour, it seems extremely 
> primitive to include
> such code into email message, with  cut & paste instructions, 
> and other
> needed information. Yet it does involve core files, and can't 
> be functional
> in any other context.
> 
> I hope it might explain how, so much more "user friendly" it 
> becomes, to
> have this proposed idea, uploaded, readily available, for 
> evaluation in the
> only context it makes sense - the working core.

Let me suggest that the way this is usually done with
projects where source code is kept with CVS is using
branches and patches. This means:

* You have an idea for feature FOO; you tag the current
  CVS version with a tag FOO_BASE and create a branch
  called FOO_IMPL. It is a good idea to tag the branch
  right after you created it with FOO_START, because
  your tag FOO_IMPL will magically "float" to always
  represent the current version on the branch.

* You implement your idea in branch FOO_IMPL, without
  touching the main development branch. You can commit
  as many times as you want in branch FOO_IMPL.

* When you think your idea is mature and ready to be shown
  to the world, you send a message saying "my implementation
  of feature FOO is now ready to be evaluated. Check out
  branch FOO_IMPL, or apply the following patch to the
  version tagged as FOO_BASE.

* You provide a patch, gotten with a command like

    cvs diff -r FOO_START -r FOO_IMPL >FOO.patch

  That way, people can examine your changes in isolation,
  try them, etc.

* Whether the FOO feature is accepted or not, is left
  as a choice to the community.

* If the FOO feature is accepted, the FOO_IMPL branch
  is projected onto the main trunk. Voila, CVS at its best!

For more information on CVS, read

  http://www.weru.ksu.edu/moses/cvs_training/cvs_toc.html


> Respectfully,

ALWAYS!

> Ron


-- 
Gonzalo A. Diethelm
gonzalo.diethelm@sonda.com

From harbour@lists.harbour-project.org  Thu Jan 18 10:09:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 18 10:09:02 2001
Subject: [Harbour] Inline C
In-Reply-To: <01Jan18.114852clst.118115@guardia.sonda.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKEEPBDIAA.ron@profit-master.com>

Gonzalo,

Thank you so much for the info. It is greatly appreciated.

BTW, As far as I can recall, you did contribute many times, including just
now.

Ron

> Even though I have not contributed at all to Harbour
> in the past months, I have about 10 years of experience
> with CVS and projects that use it, so here you have
> my thoughts on the issue of committing undiscussed
> changes to CVS.
> ...


From harbour@lists.harbour-project.org  Thu Jan 18 10:59:01 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 18 10:59:01 2001
Subject: [Harbour] Inline C
In-Reply-To: <200101171102_MC2-C205-BF3D@compuserve.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKGEPCDIAA.ron@profit-master.com>

Dear John,

Thanks for taking the time to discuss our differences (over the phone). It
was great to learn we have much more we agree about than we the disagree.

Ron

> You used "censor" in a statement about my comments. :-(  I've asked
> you "to at least post where I've tried to censor this" [inline C].
> If you're not letting this drop, please answer my points.  Otherwise,
> let's get on with something (anything!) useful.
>
> In case you again rail against my interest in making a commercial
> product, please be aware that a number of very well-known people here
> have the same interest, and like me have said so.  Either complain
> about them as well or please be so fair as not to throw that in as an
> argument against my comments.  Particularly when it's clear to anyone
> with even half a brain that I have no commercial bias as regards this
> feature.
>
> John.


From harbour@lists.harbour-project.org  Thu Jan 18 11:07:17 2001
From: harbour@lists.harbour-project.org (Andrew W. Ross)
Date: Thu Jan 18 11:07:17 2001
Subject: [Harbour] RDD changes
References: <200101180618_MC2-C22E-C818@compuserve.com>
Message-ID: <001701c08168$66612bc0$9339a2d1@daddy>

Isn't OrdKeyCount based on OrdKeyNo?

Something like this:

FUNCTION OrdKeyCount()

  LOCAL nRec := RECNO()
  LOCAL nKeyCount

  DBGOTOP()

  IF EOF()
    RETURN 0
  ENDIF

  nKeyCount = OrdKeyNo()

  DBGOBOTTOM()

  nKeyCount = OrdKeyNo() - nKeyCount + 1

  DBGOTO( nRec )

RETURN nKeyCount



From harbour@lists.harbour-project.org  Thu Jan 18 12:42:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 18 12:42:02 2001
Subject: [Harbour] hb_inkeyPoll()
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKGEPCDIAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKGEPDDIAA.ron@profit-master.com>

Hi,

Is it intentional that we *do* call hb_inkeyPoll() in HB_P_DO[SHORT] but we
*don't* in HB_P_FUNCTION[SHORT] and HB_P_SEND[SHORT]?

Ron


From harbour@lists.harbour-project.org  Thu Jan 18 12:47:02 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Thu Jan 18 12:47:02 2001
Subject: [Harbour] hb_inkeyPoll()
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKGEPDDIAA.ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKGEPCDIAA.ron@profit-master.com>
Message-ID: <200101181746.f0IHkUN21145@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Thu,
18 Jan 2001 09:42:18 -0800

> Is it intentional that we *do* call hb_inkeyPoll() in HB_P_DO[SHORT] but we
> *don't* in HB_P_FUNCTION[SHORT] and HB_P_SEND[SHORT]?

Probably not.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Thu Jan 18 13:24:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 18 13:24:02 2001
Subject: [Harbour] hb_inkeyPoll()
In-Reply-To: <200101181746.f0IHkUN21145@thor.parrett.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKAEPEDIAA.ron@profit-master.com>

> > Is it intentional that we *do* call hb_inkeyPoll() in 
> HB_P_DO[SHORT] but we
> > *don't* in HB_P_FUNCTION[SHORT] and HB_P_SEND[SHORT]?
> 
> Probably not.

Should it be added/removed?


From harbour@lists.harbour-project.org  Thu Jan 18 13:36:02 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Thu Jan 18 13:36:02 2001
Subject: [Harbour] hb_inkeyPoll()
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKAEPEDIAA.ron@profit-master.com>
References: <200101181746.f0IHkUN21145@thor.parrett.net>
Message-ID: <200101181835.f0IIZjN28232@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Thu,
18 Jan 2001 10:24:37 -0800

> > > Is it intentional that we *do* call hb_inkeyPoll() in 
> > HB_P_DO[SHORT] but we
> > > *don't* in HB_P_FUNCTION[SHORT] and HB_P_SEND[SHORT]?
> > 
> > Probably not.
> 
> Should it be added/removed?

The call was originally at the top of the pcode processing loop, but it
was moved to HB_P_DO due to poor performance. I'm not sure if I didn't
know about HB_P_FUNCTION or HB_P_SEND at the time or if those pcodes
came later. The intent of the move was to check the keyboard only when a
new function is called instead of on every pcode.

I just looked at the other opcodes and they are all calling hb_vm_do,
so I think that instead of adding the hb_inkeyPoll to each of them, we
should probably move the call to inside the hb_vm_do function. I'll run
some before and after performance tests and post the results.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Thu Jan 18 13:44:02 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Thu Jan 18 13:44:02 2001
Subject: [Harbour] RDD changes
References: <200101180618_MC2-C22E-C818@compuserve.com> <001701c08168$66612bc0$9339a2d1@daddy>
Message-ID: <002901c0817f$64ab1fe0$921a5e18@bh>

Andrew:
The concept is right, but it is not implemented that way. After GoBottom,
ordKeyNo() has to go to the top of the index keys (not accessing the dbf,
just in the index) and walk the keys to get to the current one.  It doesn't
know how many intevening keys there might be without traversing them because
of the tree nature of index keys (at least in Clipper/Comix, as well as
ADS).  So ordCount() would just get to the top and walk keys itself, without
the need for the rest of the code.  This all happens with a bulk read of the
index itself and is awfully fast considering the numbers, but still
inefficient for large files and GUI feedback (scrollbars) or where it needs
to get called repeatedly.

Brian

----- Original Message -----
From: "Andrew W. Ross" <awr@jps.net>
To: <harbour@lists.harbour-project.org>
Sent: Thursday, January 18, 2001 8:04 AM
Subject: Re: [Harbour] RDD changes


> Isn't OrdKeyCount based on OrdKeyNo?
>
> Something like this:
>
> FUNCTION OrdKeyCount()
>
>   LOCAL nRec := RECNO()
>   LOCAL nKeyCount
>
>   DBGOTOP()
>
>   IF EOF()
>     RETURN 0
>   ENDIF
>
>   nKeyCount = OrdKeyNo()
>
>   DBGOBOTTOM()
>
>   nKeyCount = OrdKeyNo() - nKeyCount + 1
>
>   DBGOTO( nRec )
>
> RETURN nKeyCount
>
>
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Thu Jan 18 13:53:02 2001
From: harbour@lists.harbour-project.org (Juan Agustin Barriga)
Date: Thu Jan 18 13:53:02 2001
Subject: [Harbour] RDD changes
References: <200101180618_MC2-C22E-C818@compuserve.com> <001701c08168$66612bc0$9339a2d1@daddy> <002901c0817f$64ab1fe0$921a5e18@bh>
Message-ID: <001b01c08187$a87fcdd0$946410ac@jharrier>

And COMPLETELY USELESS when dealing with an SQL database, where NO access to
indexes or such is available. There is no way to respond to a DBO_POSITION
in this environment...

Regards
Harrier

----- Original Message -----
From: "Brian Hays" <bhays@abacuslaw.com>
To: <harbour@lists.harbour-project.org>
Sent: Thursday, January 18, 2001 2:49 PM
Subject: Re: [Harbour] RDD changes


> Andrew:
> The concept is right, but it is not implemented that way. After GoBottom,
> ordKeyNo() has to go to the top of the index keys (not accessing the dbf,
> just in the index) and walk the keys to get to the current one.  It
doesn't
> know how many intevening keys there might be without traversing them
because
> of the tree nature of index keys (at least in Clipper/Comix, as well as
> ADS).  So ordCount() would just get to the top and walk keys itself,
without
> the need for the rest of the code.  This all happens with a bulk read of
the
> index itself and is awfully fast considering the numbers, but still
> inefficient for large files and GUI feedback (scrollbars) or where it
needs
> to get called repeatedly.
>
> Brian
>
> ----- Original Message -----
> From: "Andrew W. Ross" <awr@jps.net>
> To: <harbour@lists.harbour-project.org>
> Sent: Thursday, January 18, 2001 8:04 AM
> Subject: Re: [Harbour] RDD changes
>
>
> > Isn't OrdKeyCount based on OrdKeyNo?
> >
> > Something like this:
> >
> > FUNCTION OrdKeyCount()
> >
> >   LOCAL nRec := RECNO()
> >   LOCAL nKeyCount
> >
> >   DBGOTOP()
> >
> >   IF EOF()
> >     RETURN 0
> >   ENDIF
> >
> >   nKeyCount = OrdKeyNo()
> >
> >   DBGOBOTTOM()
> >
> >   nKeyCount = OrdKeyNo() - nKeyCount + 1
> >
> >   DBGOTO( nRec )
> >
> > RETURN nKeyCount
> >
> >
> > _______________________________________________
> > Harbour mailing list
> > Harbour@lists.harbour-project.org
> > http://www.matrixlist.com/mailman/listinfo/harbour
> >
> > Thank you for participating in The Harbour Project.  Be sure to check
> > http://www.Harbour-Project.org
> >
>
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Thu Jan 18 13:55:03 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Thu Jan 18 13:55:03 2001
Subject: [Harbour] Inline C
References: <01Jan18.114852clst.118115@guardia.sonda.com>
Message-ID: <006101c08180$dbcb1390$921a5e18@bh>

Gonzalo :

I think this is a great idea for how to use the tools at hand for a feature
they were designed to handle.

I think we should encourage any developer interested in "floating" a new
significant feature to try a CVS branch.  It both makes it easily accessible
and avoids surprises and "pollution" :-).
Shall we consider this a footnote to Maurilio's proposal?

Brian

> Even though I have not contributed at all to Harbour
> in the past months, I have about 10 years of experience
> with CVS and projects that use it, so here you have
> my thoughts on the issue of committing undiscussed
> changes to CVS.
> .....
>* You implement your idea in branch FOO_IMPL, without
 > touching the main development branch. You can commit
 > as many times as you want in branch FOO_IMPL.




From harbour@lists.harbour-project.org  Thu Jan 18 13:57:01 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 18 13:57:01 2001
Subject: [Harbour] hb_inkeyPoll()
In-Reply-To: <200101181835.f0IIZjN28232@thor.parrett.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKKEPEDIAA.ron@profit-master.com>

David,

> > Should it be added/removed?
> 
> The call was originally at the top of the pcode processing loop, but it
> was moved to HB_P_DO due to poor performance. I'm not sure if I didn't
> know about HB_P_FUNCTION or HB_P_SEND at the time or if those pcodes
> came later. The intent of the move was to check the keyboard only when a
> new function is called instead of on every pcode.
> 
> I just looked at the other opcodes and they are all calling hb_vm_do,
> so I think that instead of adding the hb_inkeyPoll to each of them, we
> should probably move the call to inside the hb_vm_do function. I'll run
> some before and after performance tests and post the results.

Thanks. Yes, moving it to down to hb_vm_do, makes more sense.


From harbour@lists.harbour-project.org  Thu Jan 18 13:59:01 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Thu Jan 18 13:59:01 2001
Subject: [Harbour] RDD changes
References: <200101180618_MC2-C22E-C818@compuserve.com> <001701c08168$66612bc0$9339a2d1@daddy> <002901c0817f$64ab1fe0$921a5e18@bh> <001b01c08187$a87fcdd0$946410ac@jharrier>
Message-ID: <007701c08181$84809f00$921a5e18@bh>

I thought some SQL engines had evolved a bit ;-)

I don't do SQL, but I know that Borland's BDE at least did some hacks to add
the concept of position within the list to be able to update scrollbars....

Brian

----- Original Message -----
From: "Juan Agustin Barriga" <harrier@topconnect.cl>
To: <harbour@lists.harbour-project.org>
Sent: Thursday, January 18, 2001 11:48 AM
Subject: Re: [Harbour] RDD changes


> And COMPLETELY USELESS when dealing with an SQL database, where NO access
to
> indexes or such is available. There is no way to respond to a DBO_POSITION
> in this environment...
>
> Regards
> Harrier
>
> ----- Original Message -----
> From: "Brian Hays" <bhays@abacuslaw.com>
> To: <harbour@lists.harbour-project.org>
> Sent: Thursday, January 18, 2001 2:49 PM
> Subject: Re: [Harbour] RDD changes
>
>
> > Andrew:
> > The concept is right, but it is not implemented that way. After
GoBottom,
> > ordKeyNo() has to go to the top of the index keys (not accessing the
dbf,
> > just in the index) and walk the keys to get to the current one.  It
> doesn't
> > know how many intevening keys there might be without traversing them
> because
> > of the tree nature of index keys (at least in Clipper/Comix, as well as
> > ADS).  So ordCount() would just get to the top and walk keys itself,
> without
> > the need for the rest of the code.  This all happens with a bulk read of
> the
> > index itself and is awfully fast considering the numbers, but still
> > inefficient for large files and GUI feedback (scrollbars) or where it
> needs
> > to get called repeatedly.
> >
> > Brian
> >
> > ----- Original Message -----
> > From: "Andrew W. Ross" <awr@jps.net>
> > To: <harbour@lists.harbour-project.org>
> > Sent: Thursday, January 18, 2001 8:04 AM
> > Subject: Re: [Harbour] RDD changes
> >
> >
> > > Isn't OrdKeyCount based on OrdKeyNo?
> > >
> > > Something like this:
> > >
> > > FUNCTION OrdKeyCount()
> > >
> > >   LOCAL nRec := RECNO()
> > >   LOCAL nKeyCount
> > >
> > >   DBGOTOP()
> > >
> > >   IF EOF()
> > >     RETURN 0
> > >   ENDIF
> > >
> > >   nKeyCount = OrdKeyNo()
> > >
> > >   DBGOBOTTOM()
> > >
> > >   nKeyCount = OrdKeyNo() - nKeyCount + 1
> > >
> > >   DBGOTO( nRec )
> > >
> > > RETURN nKeyCount
> > >
> > >
> > > _______________________________________________
> > > Harbour mailing list
> > > Harbour@lists.harbour-project.org
> > > http://www.matrixlist.com/mailman/listinfo/harbour
> > >
> > > Thank you for participating in The Harbour Project.  Be sure to check
> > > http://www.Harbour-Project.org
> > >
> >
> > _______________________________________________
> > Harbour mailing list
> > Harbour@lists.harbour-project.org
> > http://www.matrixlist.com/mailman/listinfo/harbour
> >
> > Thank you for participating in The Harbour Project.  Be sure to check
> > http://www.Harbour-Project.org
> >
>
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Thu Jan 18 14:02:01 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Thu Jan 18 14:02:01 2001
Subject: [Harbour] Inline C
In-Reply-To: <006101c08180$dbcb1390$921a5e18@bh>
References: <01Jan18.114852clst.118115@guardia.sonda.com>
Message-ID: <200101181901.f0IJ13N31886@thor.parrett.net>

** Reply to message from "Brian Hays" <bhays@abacuslaw.com> on Thu, 18
Jan 2001 11:00:00 -0800

> I think we should encourage any developer interested in "floating" a new
> significant feature to try a CVS branch.  It both makes it easily accessible
> and avoids surprises and "pollution" :-).
> Shall we consider this a footnote to Maurilio's proposal?

Yes.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Thu Jan 18 14:29:02 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Thu Jan 18 14:29:02 2001
Subject: [Harbour] hb_inkeyPoll()
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKKEPEDIAA.ron@profit-master.com>
References: <200101181835.f0IIZjN28232@thor.parrett.net>
Message-ID: <200101181928.f0IJSfN02989@thor.parrett.net>

This is a multipart message in MIME format.  If you can read this
paragraph, your mail program probably does not support MIME messages,
and you may not be able to receive the contents of this message in
the format intended by the sender.

--pIo0sNt1rNo2aOd3mVa4iAl5eLr


** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Thu,
18 Jan 2001 10:57:37 -0800

> Yes, moving it to down to hb_vm_do, makes more sense.

But it does have a performance impact. I copied tests/classes.prg,
renamed it to t.prg, and modified it to loop 3000 times with a minimum
of console output and a 50-line window to avoid display scrolling (and I
always ran CLS before running the test program).

With the current CVS build, the execution time over 20 runs varied from
1.65 seconds to 1.69 seconds.

After moving the hb_inkeyPoll() call to inside hb_vmDo(), the execution
time over 20 runs varied from 1.78 seconds to 1.83 seconds.

And after removing the call to hb_inkeyPoll() entirely, the execution
time over 20 runs varied from 1.51 seconds to 1.55 seconds.

The test program is attached
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

--pIo0sNt1rNo2aOd3mVa4iAl5eLr
Content-Type: text/plain; name=t.prg; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable
Content-Disposition: attachment; filename=t.prg

//=0D=0A// $Id: classes.prg,v 1.1 1999/10/04 18:46:27 vszel Exp $=0D=0A//=
=0D=0A=0D=0A// Using Harbour Class TClass=0D=0A=0D=0Aprocedure main=0D=0Aloc=
al i, start, stop=0D=0A   start :=3D seconds()=0D=0A   for i :=3D 1 to 3000=
=0D=0A       test()=0D=0A   next i=0D=0A   stop :=3D seconds()=0D=0A   ? sta=
rt, stop, stop - start=0D=0Aquit=0D=0A=0D=0Afunction Test()=0D=0A=0D=0A   lo=
cal oForm :=3D TForm():New()=0D=0A   local cName :=3D oForm:ClassName()=0D=
=0A   oForm:Show()=0D=0A=0D=0Areturn nil=0D=0A=0D=0Afunction TForm()=0D=0A=
=0D=0A   static oClass=0D=0A=0D=0A   if oClass =3D=3D nil=0D=0A      oClass =
=3D TClass():New( "TFORM" )    // starts a new class definition=0D=0A=0D=0A =
     oClass:AddData( "cName" )           // define this class objects datas=
=0D=0A      oClass:AddData( "nTop" )=0D=0A      oClass:AddData( "nLeft" )=
=0D=0A      oClass:AddData( "nBottom" )=0D=0A      oClass:AddData( "nRight" =
)=0D=0A=0D=0A      oClass:AddMethod( "New",  @New() )  // define this class =
objects methods=0D=0A      oClass:AddMethod( "Show", @Show() )=0D=0A=0D=0A  =
    oClass:Create()                     // builds this class=0D=0A   endif=
=0D=0A=0D=0Areturn oClass:Instance()                  // builds an object of=
 this class=0D=0A=0D=0Astatic function New()=0D=0A=0D=0A   local Self :=3D Q=
Self()=0D=0A=0D=0A   ::nTop    =3D 10=0D=0A   ::nLeft   =3D 10=0D=0A   ::nBo=
ttom =3D 20=0D=0A   ::nRight  =3D 40=0D=0A=0D=0Areturn Self=0D=0A=0D=0Astati=
c function Show()=0D=0A=0D=0A   local Self :=3D QSelf()=0D=0A=0D=0A   QQOut(=
 "." )=0D=0A=0D=0Areturn nil=0D=0A
--pIo0sNt1rNo2aOd3mVa4iAl5eLr--

From harbour@lists.harbour-project.org  Thu Jan 18 16:50:04 2001
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Thu Jan 18 16:50:04 2001
Subject: [Harbour] 2001-01-18 22:41 GMT+1 JFL (Mafact) <jfl@mafact.com>
In-Reply-To: <001b01c08187$a87fcdd0$946410ac@jharrier>
Message-ID: <200101182129.f0ILTIj12788@ev6.be.wanadoo.com>

2001-01-18 22:41 GMT+1 JFL (Mafact) <jfl@mafact.com>
   *harbour/hb_slex.vc
    * added HBMAKE
   harbour/makefile.vc
    * added HBMAKE


Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Thu Jan 18 21:09:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 18 21:09:02 2001
Subject: [Harbour] hb_inkeyPoll()
In-Reply-To: <200101181928.f0IJSfN02989@thor.parrett.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKMEPGDIAA.ron@profit-master.com>

David,

The performance impact, is exactly because current CVS does *not* perform
the KB poll for  [real] function calls, and methods calls. It *only*
performs it for procedure calls, or in this case non utilized return,
function calls, which are demoted to procedure calls.

IOW with current CVS, if you only had pure function calls, there would be NO
KB polling at all, which is of course faster, but incomplete.

Ron

> > Yes, moving it to down to hb_vm_do, makes more sense.
>
> But it does have a performance impact. I copied tests/classes.prg,
> renamed it to t.prg, and modified it to loop 3000 times with a minimum
> of console output and a 50-line window to avoid display scrolling (and I
> always ran CLS before running the test program).
>
> With the current CVS build, the execution time over 20 runs varied from
> 1.65 seconds to 1.69 seconds.
>
> After moving the hb_inkeyPoll() call to inside hb_vmDo(), the execution
> time over 20 runs varied from 1.78 seconds to 1.83 seconds.
>
> And after removing the call to hb_inkeyPoll() entirely, the execution
> time over 20 runs varied from 1.51 seconds to 1.55 seconds.
>
> The test program is attached
> --
> David G. Holm, Set Captain and all around
> Harbour Project Clipper Compatibility fanatic.
>


From harbour@lists.harbour-project.org  Fri Jan 19 04:27:02 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Fri Jan 19 04:27:02 2001
Subject: [Harbour] Inline C
Message-ID: <200101190425_MC2-C245-1AD4@compuserve.com>

Ron,

"Thanks for taking the time to discuss our differences (over the phone). =
It
was great to learn we have much more we agree about than we the disagree.=
"

You're welcome - and I'm sure we do!

John.

From harbour@lists.harbour-project.org  Fri Jan 19 05:22:02 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Fri Jan 19 05:22:02 2001
Subject: [Harbour] hb_inkeyPoll()
Message-ID: <200101190521_MC2-C24A-711F@compuserve.com>

David/Ron/et al,

> > > Is it intentional that we *do* call hb_inkeyPoll() ...
> Should it be added/removed?

Is it / will it be empty or not called (or easy to make it so) for a
fully event-driven environment?  I'm sorry I don't know the Harbour
code concerned.

Also, for a non-event-driven env., should it also check a mouse (when
there is one)?

I believe Clipper does various things by using events, then in a non-
event-driven env. it polls to see if the event occurred (overall a
bit pointless for Clipper but making it ready for event-driven).

This has been discussed before :-) but I don't know what happened as
a result. :-(

John.

From harbour@lists.harbour-project.org  Fri Jan 19 05:22:33 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Fri Jan 19 05:22:33 2001
Subject: [Harbour] RDD changes
Message-ID: <200101190521_MC2-C24A-711E@compuserve.com>

Harrier,
 =

"And COMPLETELY USELESS when dealing with an SQL database, where NO acces=
s to
indexes or such is available. There is no way to respond to a DBO_POSITIO=
N
in this environment..."

Could we reasonably take the view that all the SQL RDBMSs we care about
support cursors, and use that to help?

Are there any commonly-used/important SQL systems which do _not_
support cursors?

John.

From harbour@lists.harbour-project.org  Fri Jan 19 05:42:02 2001
From: harbour@lists.harbour-project.org (Juan Agustin Barriga)
Date: Fri Jan 19 05:42:02 2001
Subject: [Harbour] RDD changes
References: <200101190521_MC2-C24A-711E@compuserve.com>
Message-ID: <001901c0820c$33e75170$946410ac@jharrier>

John,
        ALL of them support cursors, but that is NOT the way to go, because
of performance. In TOPConnect case, RDD opened files NEVER leave an open
cursor. It generates the SQL code to perform the task, do it, and close.
Opened cursors also lend to locking problems. Knowing the relative position
at any one time is impossible with this scheme. As impossible is to achieve
100% compatibility when mapping SQL to ISAM.

Regards
Harrier

----- Original Message -----
From: "John Skelton" <John_Skelton@compuserve.com>
To: <harbour@lists.harbour-project.org>
Sent: Friday, January 19, 2001 6:20 AM
Subject: Re: [Harbour] RDD changes


Harrier,

"And COMPLETELY USELESS when dealing with an SQL database, where NO access
to
indexes or such is available. There is no way to respond to a DBO_POSITION
in this environment..."

Could we reasonably take the view that all the SQL RDBMSs we care about
support cursors, and use that to help?

Are there any commonly-used/important SQL systems which do _not_
support cursors?

John.
_______________________________________________
Harbour mailing list
Harbour@lists.harbour-project.org
http://www.matrixlist.com/mailman/listinfo/harbour

Thank you for participating in The Harbour Project.  Be sure to check
http://www.Harbour-Project.org



From harbour@lists.harbour-project.org  Fri Jan 19 05:52:02 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Fri Jan 19 05:52:02 2001
Subject: [Harbour] New rdd func?
In-Reply-To: <013701c080df$42b78680$59f6fbce@local>
Message-ID: <3A682B39.12728.3831DC8@localhost>

On 17 Jan 2001, at 15:43, Brian Hays wrote:

> Yes, this is my thought also.  I guess what I'm getting at is: What is the
> protocol we should use to determine what "extra" features can be added to
> the rdd.  John also "voted" in favor of functions aimed at optimizing access
> to rdd info for updating scrollbars and such.   I think
> dbInfo(DBI_ISINDEXED) is one easy addition that would help--in the case of
> ADS it avoids a call to the server completely.

  IIRC, in Clipper technical Guide there is a statement that values 
bellow 1000 are reserved for internal use in DBINFO(). This means that 
third party developers should use values above 1000. And it means that we 
can use for example values above 500 for harbour extensions. 
  Although a valid alternative would be also adding of some new virtual 
table functions however this needs more discussion.

Regards, Ryszard

From harbour@lists.harbour-project.org  Fri Jan 19 06:47:02 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Fri Jan 19 06:47:02 2001
Subject: [Harbour] New rdd func?
In-Reply-To: <016001c080e2$dbf4c670$59f6fbce@local>
Message-ID: <3A683864.18904.3B6903F@localhost>

On 17 Jan 2001, at 16:04, Brian Hays wrote:

> ADS has a function that makes a good and very fast percentage estimate of
> key position.  It would be good if our own CDX driver could do something
> similar.  So it would be nice if our RDD design anticipated this feature.
> Scrollbars were not an expected interface element in the days when CLipper
> was designed....

  Then this is a more general question: should be all extensions handled 
with current DBINFO/DBORDERINFO...etc functions or should we add new 
functions to the table of virtual functions?

Regards, Ryszard


From harbour@lists.harbour-project.org  Fri Jan 19 07:06:02 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Fri Jan 19 07:06:02 2001
Subject: [Harbour] RDD changes
In-Reply-To: <000301c080ea$03f6c360$59f6fbce@local>
Message-ID: <3A683CC7.4059.3C7B193@localhost>

On 17 Jan 2001, at 16:27, Brian Hays wrote:

> Does this mean that existing code that accesses the area via a pointer
> retrieved from:
>     void * hb_rddGetCurrentWorkAreaPointer( void )
> 
> can stay as is?  Or does it need to possibly be re-written for some members
> to be accessed from a different structure?

  In case of ADS driver then these calls can stay there although there is 
a bug here. Code in adsfuncs.c doesn't check if a current workarea is an 
ADS workarea since it is possible to call ADS* function for non-ADS 
database.
  However such method of calling (used in adsfuncs.c) will not work 
correctly if an ADS driver will be inherited. All calls should go through 
the table of virtual functions to correctly support inheritance.

> For example, RDDADS refers to a pArea for most values it deals with.
> How do we determine if a member is or should be accessible or not?
> Are all members defined by what was the "standard" area like bEof now part
> of the "private workarea" or are they inherited?

  I think that we can allow for direct access for the AREA members only 
using the root pointer. All private members should be accessed with a 
shifted pointer. All members belonging to inherited drivers (except the 
root one) cannot be accessed directly - some of them can be accessed with 
virtual function call.
  Notice that for example, a direct access for bEof is not needed in an 
index layer - this layer can call SELF_EOF or use an index file 
information to determine the logical EOF. 

Regards, Ryszard

From harbour@lists.harbour-project.org  Fri Jan 19 07:38:02 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Fri Jan 19 07:38:02 2001
Subject: [Harbour] help with codeblock callback
In-Reply-To: <001b01c080ee$01ce4140$59f6fbce@local>
Message-ID: <3A6843ED.8157.3E39D28@localhost>

On 17 Jan 2001, at 17:28, Brian Hays wrote:

>    itmCobCallBack = hb_param( 1, HB_IT_BLOCK );
>    if ( ! itmCobCallBack )
>    {
>       hb_retl( FALSE );
>       return;
>    }
>    hb_gcLockItem( itmCobCallBack );

  You should use hb_itemParam() here.
hb_param returns a direct pointer to an item placed on the eval stack - 
this item will be removed (set to NIL) after a function cleanup. 
hb_itemParam() creates a new item outside of the eval stack.

Regards, Ryszard

From harbour@lists.harbour-project.org  Fri Jan 19 10:07:02 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Fri Jan 19 10:07:02 2001
Subject: [Harbour] RDD changes
Message-ID: <200101191005_MC2-C262-C005@compuserve.com>

Harrier,

"ALL of them support cursors, but that is NOT the way to go, because
of performance."

OTOH, why were cursors added?  Wasn't it to allow the kinds of things
Harbour needs?

"As impossible is to achieve 100% compatibility when mapping SQL to
ISAM."

Maybe 100% isn't realistic, but if we don't use cursors can Harbour's
SQL RDDs each support the Ord*(), DB*(), etc features needed?  GUI
users are going to expect scroll bars, and working ones at that. :-)

John.

From harbour@lists.harbour-project.org  Fri Jan 19 10:22:01 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Fri Jan 19 10:22:01 2001
Subject: [Harbour] help with codeblock callback
Message-ID: <200101191021_MC2-C250-DD70@compuserve.com>

Ryszard,

BH>    itmCobCallBack =3D hb_param( 1, HB_IT_BLOCK );
...
BH>    hb_gcLockItem( itmCobCallBack );

"hb_itemParam() creates a new item outside of the eval stack"

Does it need to be GC locked?  If yes, why?  Is it that it will
continue to exist (until hb_itemRelease() is called) but can move?

John.

From harbour@lists.harbour-project.org  Fri Jan 19 10:54:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Fri Jan 19 10:54:02 2001
Subject: [Harbour] help with codeblock callback
In-Reply-To: <200101191021_MC2-C250-DD70@compuserve.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOEPIDIAA.ron@profit-master.com>

John,

Because if all variable handles to the item go out of scope, the item will
be released by GC, as GC can't check for low level handles to an item.

In this case, this is a duplicated item, with no handles at the Harbour
level [I think], so it will be released on first execution of the GC, unless
locked.

Ron

> Ryszard,
>
> BH>    itmCobCallBack = hb_param( 1, HB_IT_BLOCK );
> ...
> BH>    hb_gcLockItem( itmCobCallBack );
>
> "hb_itemParam() creates a new item outside of the eval stack"
>
> Does it need to be GC locked?  If yes, why?  Is it that it will
> continue to exist (until hb_itemRelease() is called) but can move?
>
> John.
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Fri Jan 19 12:13:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Fri Jan 19 12:13:02 2001
Subject: [Harbour] Ron ... Problem with simplex and VC++
In-Reply-To: <200101170638.f0H6cmq04085@ev6.be.wanadoo.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOEPJDIAA.ron@profit-master.com>

J.F.,

Will you please add -DSIMPLEX to CLIBFLAGS as in:

CLIBFLAGS      = -c $(CFLAGS) $(CLIBFLAGS) -DSIMPLEX

Could you then make a CLEAN build and let me know?

Ron

> Ron
>
> > > I expect the following error when compiling the simplex version of
> > > HARBOUR with VC++
> > >
> > > Compiling 'dbgtmenu.prg'...
> > > dbgtmenu.prg(395) Error E0030  Syntax error: "parse error at '&'"
> > >
> > > where the line 395 is the last line + 1 !!! of dbgtmenu.prg (it was
> > > previously the line 394 and I added one blank line at the end just to
> > > see ...)
>
> Same error even after changing the compilation order.
>
> Now the problem of macroy.h is resolved. I attach the make file for
> VC++ and Simplex. (adapted from John's work)
>
> I will add them to the CVS as soon as I remember the way to add a
> file :-(
>
> > > Any Idea ?
> >
> > It seems we have a build problem, and it might be related to the 2nd
> > question. I just verified compiling dbgtmenu.prg without any
> problem (BCC
> > 5.5 SimpLex) (and I can't find any & in source/debug/dbgtmenu.prg).
> >
> > Which Make-File do you use? Can you please upload it?
> >
> > > Also, It seem I miss an include file needed by macroslx.c. The file is
> > > macroy.h and seem to be created by flex. I used the flex one without
> > > problem but if I don't generate first a bison.flex version of
> HARBOUR I
> > > miss it !
> > >
> > > Another Idea ?
> >
> > Yes, we need to change the build *order* so that macroslx.c is compiled
> > *after* processing of macro.y! When Bison process macro.y, it creates
> > macroy.h.
> >
> > Ron


From harbour@lists.harbour-project.org  Fri Jan 19 12:40:04 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Fri Jan 19 12:40:04 2001
Subject: [Harbour] RDD changes
In-Reply-To: <NOEPIKLDCODGGHOPAHEEAEOICDAA.Jacek.Potempa@otc.pl>
References: <3A65CF4B.17722.40D92DA@localhost>
Message-ID: <3A688B21.12339.4F9C05C@localhost>

On 18 Jan 2001, at 14:51, Jacek Potempa wrote:

> - we continue to access AREA members directly through the main workarea
> pointer passed to the RDD methods
> - we continue to access MEDNTX/MEDCDX "private" members directly through
> the main workarea pointer passed to the RDD methods
> - calls to SUPER and SELF methods remain unchanged
> - we do not modify structSize method (it continues to return
> sizeof(MEDAREA))
> - calls to RDD virtual machine integration functions
> (hb_rddGetCurrentWorkAreaNumber etc.)
> remain unchanged

  Yes, all these points are valid. 

> The question remains, however, what changes are required
> in DBF, DBFNTX, DBFCDX and other existing drivers, and how
> much time it will take to implement/test and document them.

  The main work is splitting current code into database/memo/index 
handling parts. 
  However:
- indexing has to be finished in both cases (the most of the code can be 
the same if the current code will be splitted instead of a single 
monolithic file)
- national sorting collation has to be designed - we need sorting using 
locale information and native sorting
- more universal locking has to be designed - IMHO, it should be possible 
to use different locking for different databases placed on different OS

> I am sure, it is more important to get the reasonably
> Clipper-compatible Harbour 1.0 in the nearest future, then
> to  wait infinitely for the excellent (all including) version
> of Harbour.

  I think that if it will be not done right on the beginning then it will 
not done later. See the debugger example, see documentation for Simplex, 
see unreleased memory in macro compiler - also initial RDD was not 
finished - it is very hard to continue work on a complicated code written 
by someone else.

Regards, Ryszard

From harbour@lists.harbour-project.org  Fri Jan 19 13:11:02 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Fri Jan 19 13:11:02 2001
Subject: [Harbour] New rdd func?
References: <3A683864.18904.3B6903F@localhost>
Message-ID: <001f01c08243$fa681a00$921a5e18@bh>

Ryszard:

>   Then this is a more general question: should be all extensions handled
> with current DBINFO/DBORDERINFO...etc functions or should we add new
> functions to the table of virtual functions?

IMO, dbOrderInfo was a good structural step for Clipper, but it was a hack.
Things were put in it that didn't really belong, and the naming of the
options/constants is unhelpful at best, AND the implementation as a "Set"
function as well as a "Get" function is sometimes supported, sometimes
not--even for items that could be.  It also leaves no method for additional
parameters which could be useful for some items.  I'm not that familiar with
dbInfo yet.

So, my preference in general would be to add agreeable functions to the
table, but each proposal would need an individual decision because some
might be very appropriate for db*Info.

I'll compile a list of the items I've come across so far.  If others
interested in possible rdd extended functions could post them now, we could
make it a comprehensive list for the v.1 target.
Just to be clear, it is not my intention to throw in a bunch of kitchen
sinks.  But where useful enhancements just need to be surfaced to the PRG
level or wrappers for specific RDDs point to an opportunity to agree on a
common interface, I think these are worth considering.

Brian

----- Original Message -----
From: "Ryszard Glab" <rglab@imid.med.pl>
To: <harbour@lists.harbour-project.org>
Sent: Friday, January 19, 2001 3:51 AM
Subject: Re: [Harbour] New rdd func?


> On 17 Jan 2001, at 16:04, Brian Hays wrote:
>
> > ADS has a function that makes a good and very fast percentage estimate
of
> > key position.  It would be good if our own CDX driver could do something
> > similar.  So it would be nice if our RDD design anticipated this
feature.
> > Scrollbars were not an expected interface element in the days when
CLipper
> > was designed....
>
>
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Fri Jan 19 14:36:02 2001
From: harbour@lists.harbour-project.org (harbour@lists.harbour-project.org)
Date: Fri Jan 19 14:36:02 2001
Subject: [Harbour] Ron ... Problem with simplex and VC++
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKOEPJDIAA.ron@profit-master.com>
References: <200101170638.f0H6cmq04085@ev6.be.wanadoo.com>
Message-ID: <3A68A486.17418.2574AB5@localhost>

Ok Ron,

Will be done ASAP.

On 19 Jan 2001, at 9:13, Ron Pinkas wrote:

> J.F.,
> 
> Will you please add -DSIMPLEX to CLIBFLAGS as in:
> 
> CLIBFLAGS      = -c $(CFLAGS) $(CLIBFLAGS) -DSIMPLEX
> 
> Could you then make a CLEAN build and let me know?
> 
> Ron
> 
> > Ron
> >
> > > > I expect the following error when compiling the simplex version
> > > > of HARBOUR with VC++
> > > >
> > > > Compiling 'dbgtmenu.prg'...
> > > > dbgtmenu.prg(395) Error E0030  Syntax error: "parse error at
> > > > '&'"
> > > >
> > > > where the line 395 is the last line + 1 !!! of dbgtmenu.prg (it
> > > > was previously the line 394 and I added one blank line at the
> > > > end just to see ...)
> >
> > Same error even after changing the compilation order.
> >
> > Now the problem of macroy.h is resolved. I attach the make file for
> > VC++ and Simplex. (adapted from John's work)
> >
> > I will add them to the CVS as soon as I remember the way to add a
> > file :-(
> >
> > > > Any Idea ?
> > >
> > > It seems we have a build problem, and it might be related to the
> > > 2nd question. I just verified compiling dbgtmenu.prg without any
> > problem (BCC
> > > 5.5 SimpLex) (and I can't find any & in
> > > source/debug/dbgtmenu.prg).
> > >
> > > Which Make-File do you use? Can you please upload it?
> > >
> > > > Also, It seem I miss an include file needed by macroslx.c. The
> > > > file is macroy.h and seem to be created by flex. I used the flex
> > > > one without problem but if I don't generate first a bison.flex
> > > > version of
> > HARBOUR I
> > > > miss it !
> > > >
> > > > Another Idea ?
> > >
> > > Yes, we need to change the build *order* so that macroslx.c is
> > > compiled *after* processing of macro.y! When Bison process
> > > macro.y, it creates macroy.h.
> > >
> > > Ron
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre <jflefebv@mafact.com>
Mafact SA/NV
Belgium
(See us at http://www.mafact.com)
jflefebv@mafact.com


From harbour@lists.harbour-project.org  Fri Jan 19 14:36:36 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Fri Jan 19 14:36:36 2001
Subject: [Harbour] RDD changes
References: <3A683CC7.4059.3C7B193@localhost>
Message-ID: <002501c0824f$ddc90560$921a5e18@bh>

Ryszard:
>   In case of ADS driver then these calls can stay there although there is
> a bug here. Code in adsfuncs.c doesn't check if a current workarea is an
> ADS workarea since it is possible to call ADS* function for non-ADS
> database.
OK, I'll have it test for that.  I guess it should throw a runtime error if
you call an ads-specific function in a non-ads workarea?

FWIW, many of the "wrappers" in that file were written a while back before
the core rdd could support the features.  Part of what I've been doing is
moving that functionality into the "real" RDD (dbOrderInfo, etc.).  Where
the rdd calls handle all the functionality, I would recommend removing the
old direct wrapper.  But this brings up an example for the other msgs'
topic.  ADS in general has 3 different Scope/Filter options for things like
keyCount(), and a parameter gets passed to functions to determine how it
will work:
RESPECTFILTERS  will apply all scope and filtering, equivalent to
dbOrderInfo(DBOI_KEYCOUNT)

RESPECTSCOPE will not take the time to actually filter records (will only
walk the index and not the dbf so it's fast but flawed for scrollbars) ,
equivalent to dbOrderInfo(DBOI_KEYCOUNTRAW) and ORDKEYCOUNT()
    >>Notice RAW is misleading here because it does respect the scope and
just means "no filter"

IGNOREFILTERS  has no equivalent as it returns the count of index keys,
ignoring both scope and filter. This doesn't seem that useful, so I'm not in
a hurry to implement it via the rdd, so anyone needing it will have to use
the wrapper function.  To add to dbOrderInfo would require addition of two
new DBOI_* options, one for count and one for KeyNo.  However, if other RDDs
also wanted to support this, we _should_ add it....

>   However such method of calling (used in adsfuncs.c) will not work
> correctly if an ADS driver will be inherited. All calls should go through
> the table of virtual functions to correctly support inheritance.

Even though ADS can use Dbfs, since it goes thru the server there's little
similarity to the Dbf driver at a low level.   Can anyone think of an
example of where inheritance or the mixing and matching of index or memo
drivers would be of benefit with ADS??

Brian


From harbour@lists.harbour-project.org  Fri Jan 19 15:00:04 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Fri Jan 19 15:00:04 2001
Subject: [Harbour] help with codeblock callback
References: <3A6843ED.8157.3E39D28@localhost>
Message-ID: <002b01c08253$3a393ce0$921a5e18@bh>

Thanks!
I've added that to the api docs...

Brian
----- Original Message ----- 
From: "Ryszard Glab" <rglab@imid.med.pl>
To: <harbour@lists.harbour-project.org>
Sent: Friday, January 19, 2001 4:41 AM
Subject: Re: [Harbour] help with codeblock callback


> On 17 Jan 2001, at 17:28, Brian Hays wrote:
> 
> >    itmCobCallBack = hb_param( 1, HB_IT_BLOCK );
> >    if ( ! itmCobCallBack )
> >    {
> >       hb_retl( FALSE );
> >       return;
> >    }
> >    hb_gcLockItem( itmCobCallBack );
> 
>   You should use hb_itemParam() here.
> hb_param returns a direct pointer to an item placed on the eval stack - 
> this item will be removed (set to NIL) after a function cleanup. 
> hb_itemParam() creates a new item outside of the eval stack.
> 
> Regards, Ryszard
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 


From harbour@lists.harbour-project.org  Fri Jan 19 15:24:02 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Fri Jan 19 15:24:02 2001
Subject: [Harbour] Fw: failure notice
Message-ID: <007801c08256$763e5a10$921a5e18@bh>

Does anyone know if this is related to my provider or the list server?  Half
the msgs I post to the list come back with this, although they usually get
through to the list...

Brian

----- Original Message -----
Hi. This is the qmail-send program at taz2.fiberhosting.com.
I'm afraid I wasn't able to deliver your message to the following addresses.
This is a permanent error; I've given up. Sorry it didn't work out.

<harbour@lists.harbour-project.org>:
This message is looping: it already has my Delivered-To line. (#5.4.6)

--- Below this line is a copy of the message.

Return-Path: <bhays@abacuslaw.com>
Received: (qmail 25451 invoked from network); 19 Jan 2001 20:01:58 -0000
Received: from estacio5.ictnet.es (212.92.33.137)
  by taz.fiberhosting.com with SMTP; 19 Jan 2001 20:01:58 -0000
Received: (qmail 17391 invoked from network); 19 Jan 2001 20:00:55 -0000
Received: from user170-2.ictnet.es (HELO correu.absis.com) ([212.92.35.170])
(envelope-sender <bhays@abacuslaw.com>)
          by estacio5.ictnet.es (qmail-ldap-1.03) with SMTP
          for <harbour@lists.harbour-project.org>; 19 Jan 2001
20:00:55 -0000
Received: from correu (correu.absis.com [222.22.22.4]) by correu.absis.com
with SMTP (Microsoft Exchange Internet Mail Service Version 5.5.2653.13)
id DHWJMVW5; Fri, 19 Jan 2001 21:00:09 +0100
Return-Path: <harbour-admin@lists.harbour-project.org>
Delivered-To: mpajin@absis.es
Received: (qmail 14725 invoked from network); 19 Jan 2001 19:29:21 -0000
Received: from estacio5.ictnet.es ([212.92.33.137]) (envelope-sender
<harbour-admin@lists.harbour-project.org>)
          by legolas.ictnet.es (qmail-ldap-1.03) with SMTP
          for <mpajin@absis.es>; 19 Jan 2001 19:29:21 -0000
Received: (qmail 16277 invoked from network); 19 Jan 2001 19:39:08 -0000
Received: from taz.fiberhosting.com (HELO taz2.fiberhosting.com)
([206.132.232.94]) (envelope-sender
<harbour-admin@lists.harbour-project.org>)
          by estacio5.ictnet.es (qmail-ldap-1.03) with SMTP
          for <mpajin@absis.es>; 19 Jan 2001 19:39:08 -0000
Received: (qmail 24305 invoked from network); 19 Jan 2001 19:37:22 -0000
Received: from ns.dios.net (HELO taz2.fiberhosting.com) (mailman@127.0.0.1)
  by ns.dios.net with SMTP; 19 Jan 2001 19:37:22 -0000
Return-Path: <bhays@abacuslaw.com>
Delivered-To: mailman-harbour@lists.harbour-project.org
Received: (qmail 24038 invoked from network); 19 Jan 2001 19:35:57 -0000
Received: from smtp1.san.rr.com (mta@24.25.195.37)
  by taz.fiberhosting.com with SMTP; 19 Jan 2001 19:35:57 -0000
Received: from bh ([24.94.26.146]) by smtp1.san.rr.com
          (Post.Office MTA v3.5.3 release 223 ID# 0-0U10L2S100V35)
          with SMTP id com for <harbour@lists.harbour-project.org>;
          Fri, 19 Jan 2001 11:36:44 -0800
Message-ID: <002501c0824f$ddc90560$921a5e18@bh>
From: "Brian Hays" <bhays@abacuslaw.com>
To: <harbour@lists.harbour-project.org>
References: <3A683CC7.4059.3C7B193@localhost>
Subject: Re: [Harbour] RDD changes
MIME-Version: 1.0
Content-Type: text/plain;
charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 5.50.4133.2400
X-MimeOLE: Produced By Microsoft MimeOLE V5.50.4133.2400
Sender: harbour-admin@lists.harbour-project.org
Errors-To: harbour-admin@lists.harbour-project.org
X-BeenThere: harbour@lists.harbour-project.org
X-Mailman-Version: 2.0
Precedence: bulk
Reply-To: harbour@lists.harbour-project.org
List-Help: <mailto:harbour-request@lists.harbour-project.org?subject=help>
List-Post: <mailto:harbour@lists.harbour-project.org>
List-Subscribe: <http://www.matrixlist.com/mailman/listinfo/harbour>,
<mailto:harbour-request@lists.harbour-project.org?subject=subscribe>
List-Id: A developers discussion list for the Harbour Project
<harbour.lists.harbour-project.org>
List-Unsubscribe: <http://www.matrixlist.com/mailman/listinfo/harbour>,
<mailto:harbour-request@lists.harbour-project.org?subject=unsubscribe>
List-Archive: <http://www.matrixlist.com/pipermail/harbour/>
X-Original-Date: Fri, 19 Jan 2001 11:41:49 -0800
Date: Fri, 19 Jan 2001 11:41:49 -0800

Ryszard:
>   In case of ADS driver then these calls can stay there although there is
......


From harbour@lists.harbour-project.org  Fri Jan 19 16:02:03 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Fri Jan 19 16:02:03 2001
Subject: [Harbour] RDD changes
In-Reply-To: <3A688B21.12339.4F9C05C@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKAEPMDIAA.ron@profit-master.com>

Hi Ryszard,

>   I think that if it will be not done right on the beginning then it will
> not done later. See the debugger example, see documentation for Simplex,
> see unreleased memory in macro compiler - also initial RDD was not
> finished - it is very hard to continue work on a complicated code written
> by someone else.

I do agree with your position in principal. You highlighted few issues I
would like to better understand:

1. Is there some design problem with the debugger, that you would recommend
we address?

2. Can you explain the memory problem of the macro compiler?

TIA.

BTW, I'm still committed to providing more complete documentation for
SimpLex, and hope to provide an update soon (anyone willing to help?).

Ron


From harbour@lists.harbour-project.org  Fri Jan 19 16:14:02 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Fri Jan 19 16:14:02 2001
Subject: [Harbour] RDD changes
References: <LOBBKAFMMFGJIKLMEPAKAEPMDIAA.ron@profit-master.com>
Message-ID: <00ea01c0825d$78bc9c50$921a5e18@bh>

Ron:
I can help with final editing if you supply the bulk text...

Brian

----- Original Message -----
From: "Ron Pinkas" <ron@profit-master.com>
To: <harbour@lists.harbour-project.org>
Sent: Friday, January 19, 2001 1:03 PM
Subject: RE: [Harbour] RDD changes


> Hi Ryszard,
>
> >   I think that if it will be not done right on the beginning then it
will
> > not done later. See the debugger example, see documentation for Simplex,
> > see unreleased memory in macro compiler - also initial RDD was not
> > finished - it is very hard to continue work on a complicated code
written
> > by someone else.
>
> I do agree with your position in principal. You highlighted few issues I
> would like to better understand:
>
> 1. Is there some design problem with the debugger, that you would
recommend
> we address?
>
> 2. Can you explain the memory problem of the macro compiler?
>
> TIA.
>
> BTW, I'm still committed to providing more complete documentation for
> SimpLex, and hope to provide an update soon (anyone willing to help?).
>
> Ron
>
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Fri Jan 19 16:22:02 2001
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Fri Jan 19 16:22:02 2001
Subject: [Harbour] Ron ... Problem with simplex and VC++
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKOEPJDIAA.ron@profit-master.com>
References: <200101170638.f0H6cmq04085@ev6.be.wanadoo.com>
Message-ID: <200101192101.f0JL16j11749@ev6.be.wanadoo.com>

Ron,

This does'nt change anything but ...

I finally finded something usefull (I hope that).

Harbour give me the following error when the make file reach 
HBRUN ;

J:\disk_t\cvssrc\harbour\utils\hbrun
>harbour.exe -n external.prg
Harbour Compiler 0.35j (Build 35) (2000.11.30) (Flex)
Copyright 1999-2000, http://www.harbour-project.org
Compiling 'external.prg'...
external.prg(43) Error E0030  Syntax error: "parse error at '&'"

wich is a file containing only commentar /* ... */ 

The most interesting point is that I can suppress this error simply 
by adding just a function at the end of the prg like ;

Static function dummy()
return .T.

Perhaps nothing to do, but as you can see, Harbour.exe seem to 
be flagged as FLEX version, not simplex. I will continue to 
investigate. 

> J.F.,
> 
> Will you please add -DSIMPLEX to CLIBFLAGS as in:
> 
> CLIBFLAGS      = -c $(CFLAGS) $(CLIBFLAGS) -DSIMPLEX
> 
> Could you then make a CLEAN build and let me know?
> 
> Ron
> 
> > Ron
> >
> > > > I expect the following error when compiling the simplex version of
> > > > HARBOUR with VC++
> > > >
> > > > Compiling 'dbgtmenu.prg'...
> > > > dbgtmenu.prg(395) Error E0030  Syntax error: "parse error at '&'"
> > > >
> > > > where the line 395 is the last line + 1 !!! of dbgtmenu.prg (it was
> > > > previously the line 394 and I added one blank line at the end just
> > > > to see ...)
> >
> > Same error even after changing the compilation order.
> >
> > Now the problem of macroy.h is resolved. I attach the make file for VC++
> > and Simplex. (adapted from John's work)
> >
> > I will add them to the CVS as soon as I remember the way to add a
> > file :-(
> >
> > > > Any Idea ?
> > >
> > > It seems we have a build problem, and it might be related to the 2nd
> > > question. I just verified compiling dbgtmenu.prg without any
> > problem (BCC
> > > 5.5 SimpLex) (and I can't find any & in source/debug/dbgtmenu.prg).
> > >
> > > Which Make-File do you use? Can you please upload it?
> > >
> > > > Also, It seem I miss an include file needed by macroslx.c. The file
> > > > is macroy.h and seem to be created by flex. I used the flex one
> > > > without problem but if I don't generate first a bison.flex version
> > > > of
> > HARBOUR I
> > > > miss it !
> > > >
> > > > Another Idea ?
> > >
> > > Yes, we need to change the build *order* so that macroslx.c is
> > > compiled *after* processing of macro.y! When Bison process macro.y, it
> > > creates macroy.h.
> > >
> > > Ron
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Fri Jan 19 16:29:02 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Fri Jan 19 16:29:02 2001
Subject: [Harbour] Fw: failure notice
In-Reply-To: <007801c08256$763e5a10$921a5e18@bh>
Message-ID: <200101192128.f0JLSlF12628@thor.parrett.net>

** Reply to message from "Brian Hays" <bhays@abacuslaw.com> on Fri, 19
Jan 2001 12:29:02 -0800

> Does anyone know if this is related to my provider or the list server?  Half
> the msgs I post to the list come back with this, although they usually get
> through to the list...

No, it's the fault of the person that keeps signing up as
mpajin@absis.es. The evidence for that is this header, which appears in
every last one of the bounces:

> Delivered-To: mpajin@absis.es
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Fri Jan 19 16:44:02 2001
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Fri Jan 19 16:44:02 2001
Subject: [Harbour] Ron ... Problem with simplex and VC++
In-Reply-To: <200101192101.f0JL16j11749@ev6.be.wanadoo.com>
References: <LOBBKAFMMFGJIKLMEPAKOEPJDIAA.ron@profit-master.com>
Message-ID: <200101192123.f0JLNCj30327@ev6.be.wanadoo.com>

Ron,

I added a param -DSIMPLEX with the CFLAGS also and now 
Harbour is flagged as Simplex but the problem remain the same.

I'm a bit short of idea now :-( will go to sleep ... hoppe you will have 
some idea during the night.

See you,

> 
> This does'nt change anything but ...
> 
> I finally finded something usefull (I hope that).
> 
> Harbour give me the following error when the make file reach 
> HBRUN ;
> 
> J:\disk_t\cvssrc\harbour\utils\hbrun
> >harbour.exe -n external.prg
> Harbour Compiler 0.35j (Build 35) (2000.11.30) (Flex)
> Copyright 1999-2000, http://www.harbour-project.org
> Compiling 'external.prg'...
> external.prg(43) Error E0030  Syntax error: "parse error at '&'"
> 
> wich is a file containing only commentar /* ... */ 
> 
> The most interesting point is that I can suppress this error simply 
> by adding just a function at the end of the prg like ;
> 
> Static function dummy()
> return .T.
> 
> Perhaps nothing to do, but as you can see, Harbour.exe seem to 
> be flagged as FLEX version, not simplex. I will continue to 
> investigate. 
> 
> > J.F.,
> > 
> > Will you please add -DSIMPLEX to CLIBFLAGS as in:
> > 
> > CLIBFLAGS      = -c $(CFLAGS) $(CLIBFLAGS) -DSIMPLEX
> > 
> > Could you then make a CLEAN build and let me know?
> > 
> > Ron
> > 
> > > Ron
> > >
> > > > > I expect the following error when compiling the simplex version of
> > > > > HARBOUR with VC++
> > > > >
> > > > > Compiling 'dbgtmenu.prg'...
> > > > > dbgtmenu.prg(395) Error E0030  Syntax error: "parse error at '&'"
> > > > >
> > > > > where the line 395 is the last line + 1 !!! of dbgtmenu.prg (it
> > > > > was previously the line 394 and I added one blank line at the end
> > > > > just to see ...)
> > >
> > > Same error even after changing the compilation order.
> > >
> > > Now the problem of macroy.h is resolved. I attach the make file for
> > > VC++ and Simplex. (adapted from John's work)
> > >
> > > I will add them to the CVS as soon as I remember the way to add a file
> > > :-(
> > >
> > > > > Any Idea ?
> > > >
> > > > It seems we have a build problem, and it might be related to the 2nd
> > > > question. I just verified compiling dbgtmenu.prg without any
> > > problem (BCC
> > > > 5.5 SimpLex) (and I can't find any & in source/debug/dbgtmenu.prg).
> > > >
> > > > Which Make-File do you use? Can you please upload it?
> > > >
> > > > > Also, It seem I miss an include file needed by macroslx.c. The
> > > > > file is macroy.h and seem to be created by flex. I used the flex
> > > > > one without problem but if I don't generate first a bison.flex
> > > > > version of
> > > HARBOUR I
> > > > > miss it !
> > > > >
> > > > > Another Idea ?
> > > >
> > > > Yes, we need to change the build *order* so that macroslx.c is
> > > > compiled *after* processing of macro.y! When Bison process macro.y,
> > > > it creates macroy.h.
> > > >
> > > > Ron
> > 
> > _______________________________________________
> > Harbour mailing list
> > Harbour@lists.harbour-project.org
> > http://www.matrixlist.com/mailman/listinfo/harbour
> > 
> > Thank you for participating in The Harbour Project.  Be sure to check
> > http://www.Harbour-Project.org
> > 
> > 
> 
> 
> 
> Best regards,
> 
> J. Lefebvre,
> Bruxelles,
> Belgium
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Fri Jan 19 16:51:02 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Fri Jan 19 16:51:02 2001
Subject: [Harbour] Fw: failure notice
References: <200101192128.f0JLSlF12628@thor.parrett.net>
Message-ID: <001801c08262$a83a8ff0$921a5e18@bh>

So we get an automated response if delivery to one person on the list fails?
Can that feature be turned off on the server?
Can we/should we delete such addresses from the list after x number of
bounces?

Brian

----- Original Message -----
From: "David G. Holm" <dholm@jsd-llc.com>
To: <harbour@lists.harbour-project.org>
Sent: Friday, January 19, 2001 1:28 PM
Subject: Re: [Harbour] Fw: failure notice


> ** Reply to message from "Brian Hays" <bhays@abacuslaw.com> on Fri, 19
> Jan 2001 12:29:02 -0800
>
> > Does anyone know if this is related to my provider or the list server?
Half
> > the msgs I post to the list come back with this, although they usually
get
> > through to the list...
>
> No, it's the fault of the person that keeps signing up as
> mpajin@absis.es. The evidence for that is this header, which appears in
> every last one of the bounces:
>
> > Delivered-To: mpajin@absis.es
> --
> David G. Holm, Set Captain and all around
> Harbour Project Clipper Compatibility fanatic.
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Fri Jan 19 16:54:01 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Fri Jan 19 16:54:01 2001
Subject: [Harbour] Fw: failure notice
In-Reply-To: <001801c08262$a83a8ff0$921a5e18@bh>
References: <200101192128.f0JLSlF12628@thor.parrett.net>
Message-ID: <200101192153.f0JLruF14760@thor.parrett.net>

** Reply to message from "Brian Hays" <bhays@abacuslaw.com> on Fri, 19
Jan 2001 13:56:19 -0800

> Can we/should we delete such addresses from the list after x number of
> bounces?

It does (or at least is supposed to). Phil has even manually killed it
after I complained once. But the address keeps getting resubscribed.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Fri Jan 19 17:31:02 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Fri Jan 19 17:31:02 2001
Subject: [Harbour] help with codeblock callback
Message-ID: <200101191730_MC2-C259-2FB9@compuserve.com>

Ron,

"Because if all variable handles to the item go out of scope, the item wi=
ll
be released by GC, as GC can't check for low level handles to an item."

Oh.  I would expect it to be "lost", i.e. allocated and never freed
(by the GC/etc - I will free it eventually [probably <g>]).

So, is Harbour's hb_itemParam() not like the similar APIs in Clipper?
I believe they _do_ leave such an item unfreed.  Which is useful when
you're still using it. :-)

John.

From harbour@lists.harbour-project.org  Fri Jan 19 17:32:03 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Fri Jan 19 17:32:03 2001
Subject: [Harbour] Fw: failure notice
Message-ID: <200101191730_MC2-C259-2FBA@compuserve.com>

Brian,

"mpajin@absis.es"

I get the same.  I wonder if the list server has a "kill" facility.

John.

From harbour@lists.harbour-project.org  Fri Jan 19 18:21:02 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Fri Jan 19 18:21:02 2001
Subject: [Harbour] Harbour Debugger(Was RE:RDD Changes)
References: <000401c080cb$bf441380$0f2aa8c0@antonio>
Message-ID: <007a01c0826e$899f3620$0100007f@sl.conex.net>

Antonio

>
> The debugger is written using standard PRG code and what I can not
> understand is why nobody else has contributed to complete it. There are
> many programmers on the list and I am sure they do know to code using
> the Clipper language ;-)

It apearing that only me is using Clipper source code along the project, if
every one agree i can add some new functionality to the debugger

Regards

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Fri Jan 19 18:32:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Fri Jan 19 18:32:02 2001
Subject: [Harbour] RDD changes
In-Reply-To: <00ea01c0825d$78bc9c50$921a5e18@bh>
Message-ID: <LOBBKAFMMFGJIKLMEPAKEEPODIAA.ron@profit-master.com>

> Ron:
> I can help with final editing if you supply the bulk text...
> 
> Brian

Thanks.


From harbour@lists.harbour-project.org  Fri Jan 19 18:41:01 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Fri Jan 19 18:41:01 2001
Subject: [Harbour] hb_inkeyPoll()
In-Reply-To: <200101190521_MC2-C24A-711F@compuserve.com>
Message-ID: <200101192340.f0JNeJF23208@thor.parrett.net>

** Reply to message from John Skelton <John_Skelton@compuserve.com> on
Fri, 19 Jan 2001 05:20:56 -0500

> Is it / will it be empty or not called (or easy to make it so) for a
> fully event-driven environment?  I'm sorry I don't know the Harbour
> code concerned.

With the GTCGI library linked in, the times for 20 runs varied from
0.66 seconds to 0.69 seconds, regardless of whether or not the
hb_inkeyPoll() call was commented out of hb_vmDo(). So if the GT library
has an empty hb_gt_readKey() function (GTCGI just returns the constant
value 13), then yes.

> Also, for a non-event-driven env., should it also check a mouse (when
> there is one)?

I don't have enough experience to say one way or the other.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Fri Jan 19 18:41:28 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Fri Jan 19 18:41:28 2001
Subject: [Harbour] hb_inkeyPoll()
Message-ID: <200101192340.f0JNeeF23230@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Thu,
18 Jan 2001 18:09:56 -0800

> IOW with current CVS, if you only had pure function calls, there would be NO
> KB polling at all, which is of course faster, but incomplete.

OK, I'll go ahead and commit the change then.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Fri Jan 19 18:46:01 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Fri Jan 19 18:46:01 2001
Subject: [Harbour] ChangeLog 2001-01-19 18:30 UTC-0500
Message-ID: <200101192344.f0JNilF23509@thor.parrett.net>

2001-01-19 18:30 UTC-0500 David G. Holm <dholm@jsd-llc.com>
  * source/rtl/gtcgi/Makefile
    ! The library is supposed to be 'gtcgi', not 'gtstd'!

  * source/vm/hvm.c
    * Moved hb_inkeyPoll() call to inside the hb_vmDo() function.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Fri Jan 19 19:46:01 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Fri Jan 19 19:46:01 2001
Subject: [Harbour] Changelog 2001-01-19 22:30 GMT -3
Message-ID: <001201c0827a$566ed920$0100007f@sl.conex.net>

*utils/hbmake/hbmake.prg
    *Added code to support multiple -D switchs


Regards From Brazil

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Fri Jan 19 19:52:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Fri Jan 19 19:52:02 2001
Subject: [Harbour] help with codeblock callback
In-Reply-To: <200101191730_MC2-C259-2FB9@compuserve.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEPPDIAA.ron@profit-master.com>

John,

Thanks for the good question. I ended up checking, and found interesting
info:

IIUC, the *only* memory blocks that have to be locked/unlocked are those
allocated by hb_gcAlloc()! The only memory blocks which are currently
allocated with hb_gcAlloc() are BaseArrays *values* created by hb_arrayNew()
and CodeBlocks *values* created by hb_codeblockNew() and
hb_codeblockMacroNew()

Therefore:

1. Locking/unlocking of pointers retrieved by hb_param*() or hb_itemParam()
etc., is only needed for items of type HB_IT_ARRAY or HB_IT_BLOCK.

2. It is *not* the item itself that will be locked, but rather the value
that the item points to by means of ->item.asArray.value
or ->item.asBlock.value. Therefore, it is up to you to protect the item
itself by means of hb_itemCopy() or hb_itemParam()(if such item will be
saved for deferred use).

3. Locking/unlocking of any block *not* within the control of GC, by means
of hb_gcLock() or hb_gcUnlock() will result in *corruption* of memory
immediately below the passed pointer, and possibly the corruption of the GC
linked list of allocated blocks. Therefore, we should make hb_gcLock() and
hb_gcUnlock() static, or add logic to GC to ignore attempts to lock/unlock
of pointers that are not within the GC control.

4. It is the developer responsibility to unlock an item [value] previously
locked, and then free such item.

So John, the answer to your question appears to be yes and no. The item
itself will *not* be freed but the *value* to which such item points to
*will* be freed if of type ARRAY or BLOCK, and if no Harbour level item
points to the value, and the Value has not been explicitly locked.

Ron

> Ron,
>
> "Because if all variable handles to the item go out of scope, the
> item will
> be released by GC, as GC can't check for low level handles to an item."
>
> Oh.  I would expect it to be "lost", i.e. allocated and never freed
> (by the GC/etc - I will free it eventually [probably <g>]).
>
> So, is Harbour's hb_itemParam() not like the similar APIs in Clipper?
> I believe they _do_ leave such an item unfreed.  Which is useful when
> you're still using it. :-)
>
> John.


From harbour@lists.harbour-project.org  Fri Jan 19 20:16:02 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Fri Jan 19 20:16:02 2001
Subject: [Harbour] callbacks
Message-ID: <002701c0827f$59beae20$921a5e18@bh>

OK, I got the callback function working for ADS Indexing progress.

Unfortunately, with the Local Server, it turns out it needs a second
*thread* to handle the callback because the primary thread is busy with the
indexing.  There is only one call that gets processed at 100% :-(

Not having MT experience yet, and not knowing to what degree the vm
architecture might allow limited access to a second thread  ;-),  I thought
I'd ask if anyone had any clues whether there was a possibility here.

???

Brian Hays



From harbour@lists.harbour-project.org  Fri Jan 19 20:20:04 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Fri Jan 19 20:20:04 2001
Subject: [Harbour] Debugger and Local/Static Variables(Ron,Ryszard,Antonio)
Message-ID: <000901c0827f$2ba401c0$0100007f@sl.conex.net>

Dear Friends

Is their any functions that return the local/Static variables names and also
their respective value

Regards From Brazil

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Fri Jan 19 20:31:02 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Fri Jan 19 20:31:02 2001
Subject: [Harbour] callbacks
References: <002701c0827f$59beae20$921a5e18@bh>
Message-ID: <001101c08280$9e5577c0$0100007f@sl.conex.net>

Brian

Has you tried to compile all your Harbour binaries with Borland C++ -tWM
or recompile all your source code with CFLAGS=-tWM

Regards From Brazil

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Fri Jan 19 21:39:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Fri Jan 19 21:39:02 2001
Subject: [Harbour] Debugger and Local/Static Variables(Ron,Ryszard,Antonio)
In-Reply-To: <000901c0827f$2ba401c0$0100007f@sl.conex.net>
Message-ID: <LOBBKAFMMFGJIKLMEPAKIEAADJAA.ron@profit-master.com>

Luiz,

I don't think you can get the names, but you can get the values:

For statics:

 * $FuncName$     <aStat> __vmVarSList()
 * $Description$  Return the statics array. Please aClone before assignments

 * $FuncName$     <xStat> __vmVarSGet(<nStatic>)
 * $Description$  Return a specified statics

 These are PRG level functions.

For locals:

  I'm not sure about the count but you can get the item (there might be a
simpler way):

      pLocal = hb_stackItemFromBase( iLocal );

  This is a C level function.

Ron

> Dear Friends
>
> Is their any functions that return the local/Static variables
> names and also
> their respective value
>
> Regards From Brazil
>
> Luiz Rafael Culik


From harbour@lists.harbour-project.org  Fri Jan 19 21:46:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Fri Jan 19 21:46:02 2001
Subject: [Harbour] callbacks
In-Reply-To: <002701c0827f$59beae20$921a5e18@bh>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEABDJAA.ron@profit-master.com>

Brian,

Why are you not using the Index EVAL clause? Do we not support it in our RDD
yet?

IIRC, I found that using a function call in Index Expression or FOR
condition was actually faster.

You could simply add Progress() to your Index Expression or FOR condition
etc. I used both approaches successfully.

Ron

> OK, I got the callback function working for ADS Indexing progress.
>
> Unfortunately, with the Local Server, it turns out it needs a second
> *thread* to handle the callback because the primary thread is
> busy with the
> indexing.  There is only one call that gets processed at 100% :-(
>
> Not having MT experience yet, and not knowing to what degree the vm
> architecture might allow limited access to a second thread  ;-),
> I thought
> I'd ask if anyone had any clues whether there was a possibility here.
>
> ???
>
> Brian Hays


From harbour@lists.harbour-project.org  Fri Jan 19 23:04:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Fri Jan 19 23:04:02 2001
Subject: [Harbour] Ron ... Problem with simplex and VC++
In-Reply-To: <200101192123.f0JLNCj30327@ev6.be.wanadoo.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKAEACDJAA.ron@profit-master.com>

J.F.

There is *no* need to use -DSIMPLEX with CFLAGS only CLIBFLAGS. The SimpLex
flag in build version is set by compiling hbver.c which is part of
COMMON_LIB and is compiled with CLIBFLAGS.

I have a strong feeling, we have a problem because of some residual file,
that we must clean. Can you forward your make_vc.log file?

It is very odd, that's the only thing I can think of...

John, Paul, can anyone else with VC report results using VC_SLEX.bat ?

Ron

> Ron,
>
> I added a param -DSIMPLEX with the CFLAGS also and now
> Harbour is flagged as Simplex but the problem remain the same.
>
> I'm a bit short of idea now :-( will go to sleep ... hoppe you will have
> some idea during the night.
>
> See you,
>
> >
> > This does'nt change anything but ...
> >
> > I finally finded something usefull (I hope that).
> >
> > Harbour give me the following error when the make file reach
> > HBRUN ;
> >
> > J:\disk_t\cvssrc\harbour\utils\hbrun
> > >harbour.exe -n external.prg
> > Harbour Compiler 0.35j (Build 35) (2000.11.30) (Flex)
> > Copyright 1999-2000, http://www.harbour-project.org
> > Compiling 'external.prg'...
> > external.prg(43) Error E0030  Syntax error: "parse error at '&'"
> >
> > wich is a file containing only commentar /* ... */
> >
> > The most interesting point is that I can suppress this error simply
> > by adding just a function at the end of the prg like ;
> >
> > Static function dummy()
> > return .T.
> >
> > Perhaps nothing to do, but as you can see, Harbour.exe seem to
> > be flagged as FLEX version, not simplex. I will continue to
> > investigate.
> >
> > > J.F.,
> > >
> > > Will you please add -DSIMPLEX to CLIBFLAGS as in:
> > >
> > > CLIBFLAGS      = -c $(CFLAGS) $(CLIBFLAGS) -DSIMPLEX
> > >
> > > Could you then make a CLEAN build and let me know?
> > >
> > > Ron
> > >
> > > > Ron
> > > >
> > > > > > I expect the following error when compiling the simplex
> version of
> > > > > > HARBOUR with VC++
> > > > > >
> > > > > > Compiling 'dbgtmenu.prg'...
> > > > > > dbgtmenu.prg(395) Error E0030  Syntax error: "parse
> error at '&'"
> > > > > >
> > > > > > where the line 395 is the last line + 1 !!! of dbgtmenu.prg (it
> > > > > > was previously the line 394 and I added one blank line
> at the end
> > > > > > just to see ...)
> > > >
> > > > Same error even after changing the compilation order.
> > > >
> > > > Now the problem of macroy.h is resolved. I attach the make file for
> > > > VC++ and Simplex. (adapted from John's work)
> > > >
> > > > I will add them to the CVS as soon as I remember the way to
> add a file
> > > > :-(
> > > >
> > > > > > Any Idea ?
> > > > >
> > > > > It seems we have a build problem, and it might be related
> to the 2nd
> > > > > question. I just verified compiling dbgtmenu.prg without any
> > > > problem (BCC
> > > > > 5.5 SimpLex) (and I can't find any & in
> source/debug/dbgtmenu.prg).
> > > > >
> > > > > Which Make-File do you use? Can you please upload it?
> > > > >
> > > > > > Also, It seem I miss an include file needed by macroslx.c. The
> > > > > > file is macroy.h and seem to be created by flex. I used the flex
> > > > > > one without problem but if I don't generate first a bison.flex
> > > > > > version of
> > > > HARBOUR I
> > > > > > miss it !
> > > > > >
> > > > > > Another Idea ?
> > > > >
> > > > > Yes, we need to change the build *order* so that macroslx.c is
> > > > > compiled *after* processing of macro.y! When Bison
> process macro.y,
> > > > > it creates macroy.h.
> > > > >
> > > > > Ron



From harbour@lists.harbour-project.org  Fri Jan 19 23:47:02 2001
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Fri Jan 19 23:47:02 2001
Subject: [Harbour] Fw: failure notice
In-Reply-To: <200101192128.f0JLSlF12628@thor.parrett.net>
References: <007801c08256$763e5a10$921a5e18@bh>
Message-ID: <3A68D1DD.28390.443BC9DE@localhost>

On 19 Jan 2001, at 16:28, David G. Holm wrote:

> ** Reply to message from "Brian Hays" <bhays@abacuslaw.com> on Fri, 19
> Jan 2001 12:29:02 -0800
> 
> > Does anyone know if this is related to my provider or the list server?  Half
> > the msgs I post to the list come back with this, although they usually get
> > through to the list...
> 
> No, it's the fault of the person that keeps signing up as
> mpajin@absis.es. The evidence for that is this header, which appears in
> every last one of the bounces:
> 
> > Delivered-To: mpajin@absis.es

And I have removed this address twice. He continues to 
resubscribe. I will unsub and block.

...later...

Ok, the address is unsubbed and has been placed in my 
qmail/control/badmailfrom file, so that address can't subscribe by 
mail. I'm sure this doesn't keep from subscribing from the web 
page, so I'll see what the mailman list says to do about something 
like this.


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Sat Jan 20 00:42:02 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Sat Jan 20 00:42:02 2001
Subject: [Harbour] callbacks
References: <002701c0827f$59beae20$921a5e18@bh> <001101c08280$9e5577c0$0100007f@sl.conex.net>
Message-ID: <001401c082a4$6714aeb0$921a5e18@bh>

Luiz:
I haven't tried those switches, but I did get the debugger up with console
apps!
I'll keep you posted...
Brian

----- Original Message -----
From: "Luiz Rafael Culik Guimaraes" <culik@nh.conex.com.br>
To: <harbour@lists.harbour-project.org>
Sent: Friday, January 19, 2001 5:25 PM
Subject: Re: [Harbour] callbacks


> Brian
>
> Has you tried to compile all your Harbour binaries with Borland C++ -tWM
> or recompile all your source code with CFLAGS=-tWM
>
> Regards From Brazil
>
> Luiz Rafael Culik
>
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Sat Jan 20 00:48:01 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Sat Jan 20 00:48:01 2001
Subject: [Harbour] callbacks
References: <002701c0827f$59beae20$921a5e18@bh> <001101c08280$9e5577c0$0100007f@sl.conex.net>
Message-ID: <001801c082a5$5056bb90$921a5e18@bh>

Luiz:
Sorry I thought your question was about the debugger issues, _then_ I looked
at the subject.
Is it possible to compile a Harbour app with -tWM to get a multi-threaded
app? And then make the api call to start a new thread???
I'll be playing....

Brian
----- Original Message -----
From: "Luiz Rafael Culik Guimaraes" <culik@nh.conex.com.br>
To: <harbour@lists.harbour-project.org>
Sent: Friday, January 19, 2001 5:25 PM
Subject: Re: [Harbour] callbacks


> Brian
>
> Has you tried to compile all your Harbour binaries with Borland C++ -tWM
> or recompile all your source code with CFLAGS=-tWM
>
> Regards From Brazil
>
> Luiz Rafael Culik
>
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Sat Jan 20 00:57:02 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Sat Jan 20 00:57:02 2001
Subject: [Harbour] callbacks
References: <LOBBKAFMMFGJIKLMEPAKCEABDJAA.ron@profit-master.com>
Message-ID: <002001c082a6$9deb4f00$921a5e18@bh>

Ron:
> Why are you not using the Index EVAL clause? Do we not support it in our
RDD
> yet?

Remember, ADS is an external server doing the indexing.  I'm afraid it won't
know what to do with an EVAL codeblock ;-)

The Remote server is of course even on a different machine (we *can* do a
callback for progress with it for that reason).  The Local Server is another
process on the same machine, but in this case, IIUC, the Harbour app primary
thread is the one used by the ads dlls to do the indexing itself, so that
thread is both busy and unable to access Harbour code because it's really
the ads dll's operation.

Brian


From harbour@lists.harbour-project.org  Sat Jan 20 05:04:02 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Sat Jan 20 05:04:02 2001
Subject: [Harbour] Harbour Debugger(Was RE:RDD Changes)
In-Reply-To: <007a01c0826e$899f3620$0100007f@sl.conex.net>
Message-ID: <000101c082c8$2314a700$0f2aa8c0@antonio>

Luiz,

> It apearing that only me is using Clipper source code along the
> project, if every one agree i can add some new functionality to the
debugger

Thanks so much Luiz.

Harbour is the result of a group effort.

What I can not understand is why some members only "talk and talk"
but never contribute some source code.

Well, I understand it, in some way...

Antonio



From harbour@lists.harbour-project.org  Sat Jan 20 05:07:01 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Sat Jan 20 05:07:01 2001
Subject: [Harbour] Debugger and Local/Static Variables(Ron,Ryszard,Antonio)
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKIEAADJAA.ron@profit-master.com>
Message-ID: <000201c082c8$91b37060$0f2aa8c0@antonio>

Ron,

> I don't think you can get the names, but you can get the values:

Be aware to use the debugger /b must be used, and that option must
save local and static variable names.

(If not, then Harbour is not Clipper compatible...)

Antonio


From harbour@lists.harbour-project.org  Sat Jan 20 05:13:02 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Sat Jan 20 05:13:02 2001
Subject: [Harbour] Debugger and Local/Static Variables(Ron,Ryszard,Antonio)
References: <LOBBKAFMMFGJIKLMEPAKIEAADJAA.ron@profit-master.com>
Message-ID: <001b01c082c9$a3af83c0$0100007f@sl.conex.net>

Ron

> Luiz,
>
> I don't think you can get the names, but you can get the values:
>
> For statics:
>
>  * $FuncName$     <aStat> __vmVarSList()
>  * $Description$  Return the statics array. Please aClone before
assignments
>
>  * $FuncName$     <xStat> __vmVarSGet(<nStatic>)
>  * $Description$  Return a specified statics
>

I´ve tried this 2 functions, but they dont return noting

Regards

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Sat Jan 20 05:16:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sat Jan 20 05:16:02 2001
Subject: [Harbour] Debugger and Local/Static Variables(Ron,Ryszard,Antonio)
In-Reply-To: <000201c082c8$91b37060$0f2aa8c0@antonio>
Message-ID: <LOBBKAFMMFGJIKLMEPAKGEADDJAA.ron@profit-master.com>

Luiz, Antonio,

We have the PCODE for generating this info for debugger when /b is used, and
compiler generates correct code with names, but support functions in HVM
appear to be incomplete.

Look at hb_vmLocalName() in hvm.c shouldn't be difficult to complete.

Ron

> Ron,
>
> > I don't think you can get the names, but you can get the values:
>
> Be aware to use the debugger /b must be used, and that option must
> save local and static variable names.
>
> (If not, then Harbour is not Clipper compatible...)
>
> Antonio


From harbour@lists.harbour-project.org  Sat Jan 20 10:31:03 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Sat Jan 20 10:31:03 2001
Subject: [Harbour] callbacks
Message-ID: <200101201030_MC2-C267-D201@compuserve.com>

Brian,

"Unfortunately, with the Local Server, it turns out it needs a second
*thread* to handle the callback because the primary thread is busy with t=
he
indexing.  There is only one call that gets processed at 100% :-("

:-(

Maybe it would be better (in some sense) to use a new thread to do
the indexing, keeping the original thread for the callbacks.  That
way might (!) cause less hassles with TLS (thread local storage, i.e.
things specific to a thread).

John.

From harbour@lists.harbour-project.org  Sat Jan 20 10:31:44 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Sat Jan 20 10:31:44 2001
Subject: [Harbour] help with codeblock callback
Message-ID: <200101201030_MC2-C267-D200@compuserve.com>

Ron,

"1. Locking/unlocking of pointers retrieved by hb_param*() or hb_itemPara=
m()
etc., is only needed for items of type HB_IT_ARRAY or HB_IT_BLOCK."

Gulp.

"2. It is *not* the item itself that will be locked, but rather the value=

that the item points to"

OK.

"3. Locking/unlocking of any block *not* within the control of GC, by mea=
ns
of hb_gcLock() or hb_gcUnlock() will result in *corruption* of memory"

:-(  Useful to know, though!

"4. It is the developer responsibility to unlock an item [value] previous=
ly
locked, and then free such item."

As expected. :-)

"the *value* to which such item points to
*will* be freed if of type ARRAY or BLOCK, and if no Harbour level item
points to the value, and the Value has not been explicitly locked."

Ouch!  I _need_ the lock, then.

Many thanks for the info!  And Brian for prompting me to wonder. :-)

Jean: I have no idea why any C4W32 code runs as well as it does...

John.

From harbour@lists.harbour-project.org  Sat Jan 20 10:33:01 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Sat Jan 20 10:33:01 2001
Subject: [Harbour] help with codeblock callback
Message-ID: <200101201030_MC2-C267-D200@compuserve.com>

Ron,

"1. Locking/unlocking of pointers retrieved by hb_param*() or hb_itemPara=
m()
etc., is only needed for items of type HB_IT_ARRAY or HB_IT_BLOCK."

Gulp.

"2. It is *not* the item itself that will be locked, but rather the value=

that the item points to"

OK.

"3. Locking/unlocking of any block *not* within the control of GC, by mea=
ns
of hb_gcLock() or hb_gcUnlock() will result in *corruption* of memory"

:-(  Useful to know, though!

"4. It is the developer responsibility to unlock an item [value] previous=
ly
locked, and then free such item."

As expected. :-)

"the *value* to which such item points to
*will* be freed if of type ARRAY or BLOCK, and if no Harbour level item
points to the value, and the Value has not been explicitly locked."

Ouch!  I _need_ the lock, then.

Many thanks for the info!  And Brian for prompting me to wonder. :-)

Jean: I have no idea why any C4W32 code runs as well as it does...

John.

From harbour@lists.harbour-project.org  Sat Jan 20 10:33:39 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Sat Jan 20 10:33:39 2001
Subject: [Harbour] Ron ... Problem with simplex and VC++
Message-ID: <200101201030_MC2-C267-D1FE@compuserve.com>

Ron,

"John, Paul, can anyone else with VC report results using VC_SLEX.bat ?"

OK.  I got a fresh update (20/1/01 approx 15:00 GMT) and it looks
like it built fine.

Nice job guys. :-)

John.

From harbour@lists.harbour-project.org  Sat Jan 20 13:28:02 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Sat Jan 20 13:28:02 2001
Subject: [Harbour] callbacks
References: <200101201030_MC2-C267-D201@compuserve.com>
Message-ID: <002001c0830f$6a7ed920$921a5e18@bh>

>>Maybe it would be better (in some sense) to use a new thread to do
the indexing, keeping the original thread for the callbacks.  That
way might (!) cause less hassles with TLS (thread local storage, i.e.
things specific to a thread).
John.

I had the same idea, and wrote Extended Systems a msg to see if it would be
possible for them to do that.  They are in beta for v.6, so maybe they could
sneak in a feature for us....

Brian



From harbour@lists.harbour-project.org  Sat Jan 20 16:26:02 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Sat Jan 20 16:26:02 2001
Subject: [Harbour] Gtwin Bug(David)
Message-ID: <000901c08327$a4e04be0$0100007f@sl.conex.net>

David

The gtwin has an bug

When pressing the LEFT ALT+ key , the return value is invalid.Ex: Return
value for ALT_A =97
when pressing the RIGHT ALT+key, the return value is correct

Can you check.

Regards From Brazil

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Sat Jan 20 20:58:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sat Jan 20 20:58:02 2001
Subject: [Harbour] ChangeLog 2001-01-20 17:20 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <002001c0830f$6a7ed920$921a5e18@bh>
Message-ID: <LOBBKAFMMFGJIKLMEPAKAEAFDJAA.ron@profit-master.com>

2001-01-20 17:20 UTC-0800 Ron Pinkas <ron@profit-master.com>
   * hb_slex.vc
     + Added -DSIMPLEX to CLIBFLAGS

   * source/compiler/genc.c
     * Minor correction.

   * utils/hbpp/hbpp.c
   * source/pp/pplib.c
   * include/hbcomp.h
   * source/compiler/harbour.c
     + Added hb_comp_iLinePRG and hb_comp_iLineINLINE

   * source/compiler/harbour.l
   * source/compiler/harbour.slx
   * source/compiler/hbgenerr.c
     + Added logic to disallow multiple HB_INLINE() per source line.

   * source/pp/ppcomp.c
   * source/pp/ppcore.c
   * source/pp/pragma.c
     * Corrected double spacing in PPO generation, and added #pragma
BEGINDUMP to PPO.

   /* Dave could you please report any pending technical issues with
HB_INLINE() so
      that I can post my summary as promised.

      Please note:
      1. Syntax will be documented to allow no more than 1 HB_INLINE() per
source line.
      2. Syntax will be documented to "grab" all subsequent lines starting
with line
         immediately below the HB_INLINE() place holder, and up to and
including the
         first line with a terminating (balanced) '}'
      */


From harbour@lists.harbour-project.org  Sat Jan 20 22:42:02 2001
From: harbour@lists.harbour-project.org (Eduardo)
Date: Sat Jan 20 22:42:02 2001
Subject: [Harbour] =?iso-8859-1?Q?Sugest=E3o?= Harbour
Message-ID: <3A6A5BDE.E0A0F71E@ig.com.br>

Olá Luiz!

Tenho acompanhado os últimos debates e gostaria de fazer uma sugestão.
Não sei se seria uma bobagem ou não mais ai vai.
Esta discussão a respeito do INLINE de Ron está contabilizando números
de quem é a favor e de quem é contra meio na
base do "eu li no e-mail do Fulano que é a favor e no de Siclano que é
contra, e os números reais ficam no ar.
Minha sugestão é:
- Criar uma area de discussão para coisas que são realmente relevantes
ao projeto onde idéias como a de Ron ou de outros
possa ser votada. Voce coloca a sua idéia e as pessoas votam sim ou nao
ou por avaliar e colocam um motivo (se quizerem)
assim ficaria mais facil de discutir.

Tenho uma pergunta a fazer, é a respeito do comando Run.
Eu li a documentação e não achei nada a respeito do que estou
procurando. Minha pergunta é a seguinte:
- Tenho um executável em clipper "A" que vai chamar um outro executável
"B" que por sua vez retorna uma string ou qualquer
outro valor para "A". Como faço isso no Harbour já que até onde eu vi o
comando Run não faz?

Agradeço a atenção.
Eduardo


From harbour@lists.harbour-project.org  Sun Jan 21 04:16:01 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Sun Jan 21 04:16:01 2001
Subject: [Harbour] ChangeLog 2001-01-20 17:20 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKAEAFDJAA.ron@profit-master.com>; from ron@profit-master.com on Sat, Jan 20, 2001 at 05:59:08PM -0800
References: <002001c0830f$6a7ed920$921a5e18@bh> <LOBBKAFMMFGJIKLMEPAKAEAFDJAA.ron@profit-master.com>
Message-ID: <20010121090851.S12735@hagbard.davep.org>

On Sat, Jan 20, 2001 at 05:59:08PM -0800, Ron Pinkas wrote:

>    /* Dave could you please report any pending technical issues with
>    HB_INLINE() so that I can post my summary as promised.

>From what I can see it would appear you've tackled the two main
inconsistencies. I can't see anything else outstanding.

As before, I'll do my best to go over the new proposal and carefully compare
it against the implementation.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Sun Jan 21 04:16:33 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Sun Jan 21 04:16:33 2001
Subject: [Harbour] Harbour Debugger(Was RE:RDD Changes)
In-Reply-To: <000101c082c8$2314a700$0f2aa8c0@antonio>; from alinares@fivetech.com on Sat, Jan 20, 2001 at 11:02:46AM +0100
References: <007a01c0826e$899f3620$0100007f@sl.conex.net> <000101c082c8$2314a700$0f2aa8c0@antonio>
Message-ID: <20010121090552.R12735@hagbard.davep.org>

On Sat, Jan 20, 2001 at 11:02:46AM +0100, Antonio Linares wrote:

> What I can not understand is why some members only "talk and talk" but
> never contribute some source code.

As one such person I can explain from my end. I was asked to do exactly this
for harbour, talk and talk. I was asked to explain the issues of free
software licensing as I understood them, this also involves raising the free
software point of view from time to time. Obviously, anyone involved in
harbour in any way and who cares about the project is going to voice their
opinion if something, *anything*, looks wrong, code or no code contributed.

Besides, code isn't a good measure of involvement. Again, only speaking for
myself (as someone who has only contributed a handful of lines of code), my
contributions have mostly been in the FAQ and free software advocacy
department (by definition, "talk and talk"). That takes as much time as code
does (moreover, my code contributions lie elsewhere, harbour isn't the only
free software project I follow or support).

A free software project that is only code and is only measured in terms of
code isn't a complete free software project.

Perhaps it's worth learning a little about the true free software
involvement of the members you have in mind, then you'll understand why you
think they only "talk and talk"?

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Sun Jan 21 05:28:02 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Sun Jan 21 05:28:02 2001
Subject: [Harbour] =?iso-8859-1?Q?Re:_=5BHarbour=5D_Sugest=E3o_Harbour?=
References: <3A6A5BDE.E0A0F71E@ig.com.br>
Message-ID: <000b01c08394$d2697920$0100007f@sl.conex.net>

--------PORTUGUESE----------

Prezado Amigo Eduardo

Poste apena in ingles na lista principal


--------ENGLISH----------

Dear Friend Eduardo

Please post only in english on the list


About your sugestion
>Create an discussing area for things that are real relevant >to the
project,where ideias like the one from Ron, or the >other could be voted.
You would put your ideia and the >people would vote yes or no,or discuss,so
this would be >more easier to debate.

This list already exist, it is called Harbour Talk, beside, their are
subject that real need to be discussed on the main list.

>I have an question to make about the run command.
>I read the documentation and i could not find any thing >that i was
searching about
>My question is:I have an Clipper executable "A" that call >another
executable "B", where this one return an String >or any other value to
"A".How to do this on Harbour since where i see the run command dont Do.

Why call another where you can use functions to perform this task.
I think that what you asking is not possible,David can you answer this

Regards

Luiz Rafael Culik




From harbour@lists.harbour-project.org  Sun Jan 21 06:00:06 2001
From: harbour@lists.harbour-project.org (Alex Shashkov)
Date: Sun Jan 21 06:00:06 2001
Subject: [Harbour] Debugger and Local/Static Variables(Ron,Ryszard,Antonio)
In-Reply-To: <E14K1Ng-000115-00@tts.orel.ru>
References: <E14K1Ng-000115-00@tts.orel.ru>
Message-ID: <1466095641.20010121095703@orel.ru>

I think that the major problem which appears when creating a debugger
will be breakpoints (F9). In Clipper's debugger breakpoints set only
on those lines on which it is possible (but not on blank lines).
In the existing Harbour debugger there is one more problem. When two
or more functions are in the same .PRG file and they are called one
from the other, the source file will be loaded into the debugger several
times.
One of the possible solutions:
When harbour.exe is compiling a file with the key /b, it forms some
additional information for the debugger: the address of the beginning
and, probably, of the end of the pcode. (Just as well as it is done
for SYMBOLS.) When running app for all the modules compiled with the
key /b, scanning of the pcode must take place and storing of the
debugging information: the names of the local variables, the numbers
of the lines with the code and the name of .PRG file.
In this case it would be much easier to realize correct breakpoints.
If someone added this possibility to the compiler, I think, I would be
able to write a full debugger.

P.S. I think that it is not the best solution to apply modules with the
Clipper code for writing the debugger, moreover, it is not advisable
to use the functions from RTL. The debugger must be as independent as
it is only possible from the application.


-- 
Best regards,
 Alex                            mailto:shashkov@orel.ru



From harbour@lists.harbour-project.org  Sun Jan 21 08:26:02 2001
From: harbour@lists.harbour-project.org (Eduardo)
Date: Sun Jan 21 08:26:02 2001
Subject: [Harbour] =?iso-8859-1?Q?Sugest=E3o?= Harbour
Message-ID: <3A6AE4C0.DA90BD39@ig.com.br>

Dear Friends

Excuse me.
When I gave myself bill, it had already sent.
Thank you for translating for me Luiz.

Regards

Eduardo


From harbour@lists.harbour-project.org  Sun Jan 21 09:30:03 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Sun Jan 21 09:30:03 2001
Subject: [Harbour] Harbour Debugger(Was RE:RDD Changes)
In-Reply-To: <20010121090552.R12735@hagbard.davep.org>
Message-ID: <000001c083b6$57ee5ea0$0f2aa8c0@antonio>

Dave,

> > What I can not understand is why some members only "talk and talk" but
> > never contribute some source code.
> 
> As one such person I can explain from my end. 


I was not thinking about you...


Antonio


From harbour@lists.harbour-project.org  Sun Jan 21 10:15:03 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Sun Jan 21 10:15:03 2001
Subject: [Harbour] Harbour Debugger(Was RE:RDD Changes)
In-Reply-To: <000001c083b6$57ee5ea0$0f2aa8c0@antonio>
Message-ID: <000101c083bc$a405aea0$0f2aa8c0@antonio>

Dave,

> I was not thinking about you...

Because you have hugely contributed -you keep doing it-
to Harbour.

Antonio


From harbour@lists.harbour-project.org  Sun Jan 21 10:16:03 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Sun Jan 21 10:16:03 2001
Subject: [Harbour] Harbour Debugger(Was RE:RDD Changes)
In-Reply-To: <000001c083b6$57ee5ea0$0f2aa8c0@antonio>; from alinares@fivetech.com on Sun, Jan 21, 2001 at 03:27:54PM +0100
References: <20010121090552.R12735@hagbard.davep.org> <000001c083b6$57ee5ea0$0f2aa8c0@antonio>
Message-ID: <20010121150655.Y12735@hagbard.davep.org>

On Sun, Jan 21, 2001 at 03:27:54PM +0100, Antonio Linares wrote:
> Dave,
> 
> > > What I can not understand is why some members only "talk and talk" but
> > > never contribute some source code.
> > 
> > As one such person I can explain from my end. 
> 
> I was not thinking about you...

Apologies if I gave the impression that I thought you were. What I was
trying to get at is that "talk and talk" without contribution of code can be
valuable input and so your question might need qualification. Or, more to
the point, your question might deter someone from making a "talk and talk"
contribution. For example, development advice is "talk and talk", reporting
problems is "talk and talk", neither of these need involve the contribution
of code.

Put another way, I'd hate for people to think that contribution of code is
more important than other forms of supporting a free software project and I
was rather hoping that that wasn't the intent of your words.

Or, put one more way, perhaps you've missed the contribution "some members"
do make?

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Sun Jan 21 10:41:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sun Jan 21 10:41:02 2001
Subject: [Harbour] Debugger and Local/Static Variables(Ron,Ryszard,Antonio)
In-Reply-To: <1466095641.20010121095703@orel.ru>
Message-ID: <LOBBKAFMMFGJIKLMEPAKAEAHDJAA.ron@profit-master.com>

Alex,

I believe this information is already being generated when compiling with
/b! Could you please review the generated .c file, and see if anything is
missing?

At this point the compiler generate HB_P_MODULENAME ... HB_P_LOCALNAME ...
we might be missing HB_P_STATICNAME ...

Ron

> I think that the major problem which appears when creating a debugger
> will be breakpoints (F9). In Clipper's debugger breakpoints set only
> on those lines on which it is possible (but not on blank lines).
> In the existing Harbour debugger there is one more problem. When two
> or more functions are in the same .PRG file and they are called one
> from the other, the source file will be loaded into the debugger several
> times.
> One of the possible solutions:
> When harbour.exe is compiling a file with the key /b, it forms some
> additional information for the debugger: the address of the beginning
> and, probably, of the end of the pcode. (Just as well as it is done
> for SYMBOLS.) When running app for all the modules compiled with the
> key /b, scanning of the pcode must take place and storing of the
> debugging information: the names of the local variables, the numbers
> of the lines with the code and the name of .PRG file.
> In this case it would be much easier to realize correct breakpoints.
> If someone added this possibility to the compiler, I think, I would be
> able to write a full debugger.
>
> P.S. I think that it is not the best solution to apply modules with the
> Clipper code for writing the debugger, moreover, it is not advisable
> to use the functions from RTL. The debugger must be as independent as
> it is only possible from the application.
>
>
> --
> Best regards,
>  Alex                            mailto:shashkov@orel.ru


From harbour@lists.harbour-project.org  Sun Jan 21 10:52:02 2001
From: harbour@lists.harbour-project.org (Alex Shashkov)
Date: Sun Jan 21 10:52:02 2001
Subject: [Harbour] Re: Harbour digest, Vol 1 #218 - 41 msgs
In-Reply-To: <E14K1Ng-000115-00@tts.orel.ru>
References: <E14K1Ng-000115-00@tts.orel.ru>
Message-ID: <1091651303.20010121185242@orel.ru>

Ron,

I have already reviewed the generated .c file. I meant the addition of
special segments for the preliminary scanning of pcode during the
initiation of the application, just as well as it is done for the
symbol table.

>Alex,

>I believe this information is already being generated when compiling with
>/b! Could you please review the generated .c file, and see if anything is
>missing?

>At this point the compiler generate HB_P_MODULENAME ... HB_P_LOCALNAME ...
>we might be missing HB_P_STATICNAME ...


>> When harbour.exe is compiling a file with the key /b, it forms some
>> additional information for the debugger: the address of the beginning
>> and, probably, of the end of the pcode. (Just as well as it is done
>> for SYMBOLS.)


-- 
Best regards,
 Alex                            mailto:shashkov@orel.ru



From harbour@lists.harbour-project.org  Sun Jan 21 11:17:02 2001
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Sun Jan 21 11:17:02 2001
Subject: [Harbour] MySQL test problem!!
References: <200101170305.f0H35UN31898@thor.parrett.net> <200101170353.f0H3rHN02500@thor.parrett.net> <001101c0803e$449643c0$6c7ba8c0@zzz.com.tw> <3A660B20.111AFB08@libero.it> <001301c080e9$ddf61080$0200a8c0@ns>
Message-ID: <3A6B0B59.3BFB123E@libero.it>

Charles,

go to www.mysql.com and download any version you like of mysql. Install
it. Now you have an include subdir with .h files with the same version
number as your mysql.dll.

This is very important. You need to use .h files from the package you
install.

Replace inside \contrib\mysql all .h file with the ones from mysql
include subdir.

Do a make install inside \contrib\mysql to build mysql.lib.

Use implib from borland free bcc to create an import library for
mysql.dll and call it mysqldll.lib

Link mysql.lib and mysqldll.lib to your harbour program (you can try to
recompile dbf2mysql inside \contrib\mysql just to test everything) and
be sure to have mysql.dll on your path.

I did this at work with free borland bcc on a win98 pc and I can connect
to a linux box running mysql without any problem.

Let me know if you have any more problems.

regards.


"Charles Kwon ( Kwon,Oh-Jun)" ha scritto:
> 
> : are you using \contrib\mysql ??
> 
> Yes, I did
> But I got a GPF with Win32 GDI Mode
> 
> Best Regards,
> Charles Kwon
> 
> http://www.fivetech.net
> http://english.fivetech.net
> http://spain.fivetech.net
> 
> FiveTech.Net
> TEL : +82-2-566-6826
> ICQ : 19302258
> ----- Original Message -----
> ?? ??: "Maurilio Longo" <maurilio.longo@libero.it>
> ?? ??: <harbour@lists.harbour-project.org>
> ?? ??: 2001? 1? 18? ??? ?? 6:14
> ??: Re: [Harbour] MySQL test problem!!
> 
> : Hi,
> :
> : are you using \contrib\mysql ??
> :
> : regards.
> :
> : ù¥Ö\(ss-bbs\) ha scritto:
> : >
> : > Hello all..
> : >
> : >     I try test mysql function,
> : > I'm use lib of "mysql++1_7_1win32_borland_1_1".
> : > link is success!!
> : > But, occur error when I run it.
> : > APP be close!!
> : >
> : > _______________________________________________
> : > Harbour mailing list
> : > Harbour@lists.harbour-project.org
> : > http://www.matrixlist.com/mailman/listinfo/harbour
> : >
> : > Thank you for participating in The Harbour Project.  Be sure to check
> : > http://www.Harbour-Project.org
> :
> : --
> :
> :  __________
> : |  |  | |__| md2520@mclink.it
> : |_|_|_|____| Team OS/2 Italia
> : _______________________________________________
> : Harbour mailing list
> : Harbour@lists.harbour-project.org
> : http://www.matrixlist.com/mailman/listinfo/harbour
> :
> : Thank you for participating in The Harbour Project.  Be sure to check
> : http://www.Harbour-Project.org
> ª ¢êæj)b       b²Ñ  º. X¬ Z º.  è ç-¢,! ÿ0 «k b² ( ù  Y  ùb² ~ ájèº'ájy2¢çè  «'"¥«b N jèº ë¢7 '¬º· ¡ ^rHm ÿ jèº ë¢7  à

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Sun Jan 21 11:52:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sun Jan 21 11:52:02 2001
Subject: [Harbour] Re: Harbour digest, Vol 1 #218 - 41 msgs
In-Reply-To: <1091651303.20010121185242@orel.ru>
Message-ID: <LOBBKAFMMFGJIKLMEPAKAEAIDJAA.ron@profit-master.com>

Alex,

Maybe adding just one static hb_DEBUGINIT symbol to Symbol Table (if /b
used), and have the HVM check if such symbol exists at startup, then execute
debugger initialization first. It shouldn't be that difficult to scan
existing PCODE for HB_P_MODULENAME, HB_P_LOCALNAME, HB_STATICNAME etc.

We might not need to change much?

Ron

> Ron,
>
> I have already reviewed the generated .c file. I meant the addition of
> special segments for the preliminary scanning of pcode during the
> initiation of the application, just as well as it is done for the
> symbol table.
>
> >Alex,
>
> >I believe this information is already being generated when compiling with
> >/b! Could you please review the generated .c file, and see if anything is
> >missing?
>
> >At this point the compiler generate HB_P_MODULENAME ...
> HB_P_LOCALNAME ...
> >we might be missing HB_P_STATICNAME ...
>
>
> >> When harbour.exe is compiling a file with the key /b, it forms some
> >> additional information for the debugger: the address of the beginning
> >> and, probably, of the end of the pcode. (Just as well as it is done
> >> for SYMBOLS.)
>
>
> --
> Best regards,
>  Alex                            mailto:shashkov@orel.ru


From harbour@lists.harbour-project.org  Sun Jan 21 12:07:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sun Jan 21 12:07:02 2001
Subject: [Harbour] Re: Harbour digest, Vol 1 #218 - 41 msgs
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKAEAIDJAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKGEAIDJAA.ron@profit-master.com>

Alex,

Sorry, come to think of it, we need to create a list of all PCODE buffers in
the module, so that they can be scanned. I see your point now.

Ron

> Alex,
>
> Maybe adding just one static hb_DEBUGINIT symbol to Symbol Table (if /b
> used), and have the HVM check if such symbol exists at startup,
> then execute
> debugger initialization first. It shouldn't be that difficult to scan
> existing PCODE for HB_P_MODULENAME, HB_P_LOCALNAME, HB_STATICNAME etc.
>
> We might not need to change much?
>
> Ron


From harbour@lists.harbour-project.org  Sun Jan 21 12:21:01 2001
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Sun Jan 21 12:21:01 2001
Subject: [Harbour] Harbour Debugger(Was RE:RDD Changes)
In-Reply-To: <20010121090552.R12735@hagbard.davep.org>
References: <000101c082c8$2314a700$0f2aa8c0@antonio>; from alinares@fivetech.com on Sat, Jan 20, 2001 at 11:02:46AM +0100
Message-ID: <3A6AD403.15390.4C14385E@localhost>

On 21 Jan 2001, at 9:05, Dave Pearson wrote:

> On Sat, Jan 20, 2001 at 11:02:46AM +0100, Antonio Linares wrote:
> 
> > What I can not understand is why some members only "talk and talk" but
> > never contribute some source code.
> 
> As one such person I can explain from my end. I was asked to do exactly this
> for harbour, talk and talk. I was asked to explain the issues of free
> software licensing as I understood them, this also involves raising the free
> software point of view from time to time. Obviously, anyone involved in
> harbour in any way and who cares about the project is going to voice their
> opinion if something, *anything*, looks wrong, code or no code contributed.

The only code that I have contributed to Harbour Project was code 
that I had laying around that was already a drop in.

When Antonio and I first established that he didn't want the 
manager's job because his involvement was so technically 
oriented, we struck a deal for me to manage the project.

Now, I've worked for managers who got their fingers in the code and 
I really hated it. So I decided early on that I would not get into the 
details of the code. Boy, I've wanted to, but I've constrained myself 
to doing management duties only.

This does two things for me. One, I have so many other things 
going on, I really don't have time to do detailed coding for Harbour 
Project, and two, it keeps me out of the weeds and focused on 
seeing how the project moves along, how people interact and 
coding concepts.

I really think I would lose focus on management duties if I was 
directly involved in creating the code for the project.

I hope it doesn't offend anyone that I'm not directly contributing 
code, but I made that decision at the beginning and I don't think it 
was a mistake.

When Harbour Project reaches Beta stage, I expect to shift into 
bringing many of my utilities and much of my code base into 
Harbour.

Now, with that said, I've read literally EVERY email message that's 
been posted, sometimes as many as 10 times, just to understand 
what is in the message. I've invested countless hours in building 
the web server that we currently use, mailing lists that don't carry 
advertising, mailing list and web site search engines, ftp sites, 
automated CVS grabbing, etc... I've also done a lot of behind the 
scenes advertising and trolling for coders. I agree with Dave on his 
point. There is a lot more to do in any successful open source 
project than just coding.


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Sun Jan 21 12:24:02 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Sun Jan 21 12:24:02 2001
Subject: [Harbour] help with codeblock callback
In-Reply-To: <200101191021_MC2-C250-DD70@compuserve.com>
Message-ID: <3A6B2A7E.12646.4F77D35@localhost>

On 19 Jan 2001, at 10:20, John Skelton wrote:

> Does it need to be GC locked?  If yes, why?  Is it that it will
> continue to exist (until hb_itemRelease() is called) but can move?

  Yes, it should be locked if this item will be accessed from other 
functions. If it is used inside a single function only (created and 
released) then it doesn't need to be locked unless someone will call 
hb_gcCollect().
  Notice that, at this moment, we are not maintaining any kind of list of 
dynamically allocated items. This is causing that the GC cannot scan such 
items and can deallocate values stored in them. Notice also that the GC 
is collecting values of items instead of items.

Regards, Ryszard

From harbour@lists.harbour-project.org  Sun Jan 21 12:29:02 2001
From: harbour@lists.harbour-project.org (Patrick Mast)
Date: Sun Jan 21 12:29:02 2001
Subject: [Harbour] Harbour Debugger(Was RE:RDD Changes)
In-Reply-To: <3A6AD403.15390.4C14385E@localhost>
Message-ID: <NCBBJKNMIDPJNLJCHCHIKEJGFNAA.harbour@winfakt.com>

Phil,

> Now, with that said, I've read literally EVERY email message that's 
> been posted, sometimes as many as 10 times, just to understand 
> what is in the message. I've invested countless hours in building 
> the web server that we currently use, mailing lists that don't carry 
> advertising, mailing list and web site search engines, ftp sites, 
> automated CVS grabbing, etc... I've also done a lot of behind the 
> scenes advertising and trolling for coders.

I think that all of us are grateful for you contribution to Harbour Phil.
At least, I am! ;-))
Thanks!

regards,

Patrick Mast
www.Patrick.Be.kz


From harbour@lists.harbour-project.org  Sun Jan 21 12:32:01 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Sun Jan 21 12:32:01 2001
Subject: [Harbour] New rdd func?
In-Reply-To: <001f01c08243$fa681a00$921a5e18@bh>
Message-ID: <3A6B2C13.31775.4FDAD84@localhost>

On 19 Jan 2001, at 10:16, Brian Hays wrote:

> So, my preference in general would be to add agreeable functions to the
> table, but each proposal would need an individual decision because some
> might be very appropriate for db*Info.

   Yes, I prefer this method too. One of such function should be 'rddInfo'

> I'll compile a list of the items I've come across so far.  If others
> interested in possible rdd extended functions could post them now, we could
> make it a comprehensive list for the v.1 target.
> Just to be clear, it is not my intention to throw in a bunch of kitchen
> sinks.  But where useful enhancements just need to be surfaced to the PRG
> level or wrappers for specific RDDs point to an opportunity to agree on a
> common interface, I think these are worth considering.

  I agree. At least we will have time to document these additions so 
other RDD developers can change their code for harbour.

Regards, Ryszard

From harbour@lists.harbour-project.org  Sun Jan 21 12:59:02 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Sun Jan 21 12:59:02 2001
Subject: [Harbour] RDD changes
In-Reply-To: <002501c0824f$ddc90560$921a5e18@bh>
Message-ID: <3A6B3288.13710.516E716@localhost>

On 19 Jan 2001, at 11:41, Brian Hays wrote:

> Even though ADS can use Dbfs, since it goes thru the server there's little
> similarity to the Dbf driver at a low level.   Can anyone think of an
> example of where inheritance or the mixing and matching of index or memo
> drivers would be of benefit with ADS??

  I can think of a single use of inheritance - for automatic translation. 
For example, ADS server can use ISO-8859-2 to store and sort polish 
national characters. If a Linux client will be used which uses ISO-8859-2 
coding then there will be no translation needed. However the client can 
work on Windows station where a different (Windows-1250) coding is used. 
A DOS client will probably use CP-852 coding. This means that there is 
needed an additional layer for translation task.
  Such translation cannot be done in terminal layer because some data can 
be sorted locally (using ASORT() for example).

Regards, Ryszard

From harbour@lists.harbour-project.org  Sun Jan 21 13:08:02 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Sun Jan 21 13:08:02 2001
Subject: [Harbour] RDD changes
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKAEPMDIAA.ron@profit-master.com>
References: <3A688B21.12339.4F9C05C@localhost>
Message-ID: <3A6B349D.15762.51F0725@localhost>

On 19 Jan 2001, at 13:03, Ron Pinkas wrote:

> 1. Is there some design problem with the debugger, that you would recommend
> we address?

  I don't know about any design problems related to the debugger - I have 
never looked at the debugger code in details.

> 2. Can you explain the memory problem of the macro compiler?

  It is possible that during macro compiling of errorneous code some 
memory blocks will be not deallocated because there will be no valid 
expression build. To fix it all hb_xgrab/hb_xfree should be replaced with 
hb_gcAlloc/hb_gcFree so the GC will take care for releasing of such 
blocks. However I didn't found a free time to change it and test it.

Regards, Ryszard

From harbour@lists.harbour-project.org  Sun Jan 21 13:13:02 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Sun Jan 21 13:13:02 2001
Subject: [Harbour] hb_inkeyPoll()
In-Reply-To: <200101192340.f0JNeJF23208@thor.parrett.net>
References: <200101190521_MC2-C24A-711F@compuserve.com>
Message-ID: <3A6B35BC.29202.5236822@localhost>

On 19 Jan 2001, at 18:40, David G. Holm wrote:

> > Also, for a non-event-driven env., should it also check a mouse (when
> > there is one)?
> 
> I don't have enough experience to say one way or the other.

  Maybe it is a good time to return to INKEY() redesign and event 
introduction disscussed earlier?

Regards, Ryszard

From harbour@lists.harbour-project.org  Sun Jan 21 13:21:02 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Sun Jan 21 13:21:02 2001
Subject: [Harbour] help with codeblock callback
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEPPDIAA.ron@profit-master.com>
References: <200101191730_MC2-C259-2FB9@compuserve.com>
Message-ID: <3A6B37B7.7680.52B2543@localhost>

On 19 Jan 2001, at 16:53, Ron Pinkas wrote:

> 1. Locking/unlocking of pointers retrieved by hb_param*() or hb_itemParam()
> etc., is only needed for items of type HB_IT_ARRAY or HB_IT_BLOCK.

  Notice that only hb_itemParam() should be used to retrieve an item that 
should be available for deffered use (or eventually 
hb_itemNew( hb_param(...)) should be used). Such items must be allocated 
outside of the eval stack.

> 3. Locking/unlocking of any block *not* within the control of GC, by means
> of hb_gcLock() or hb_gcUnlock() will result in *corruption* of memory
> immediately below the passed pointer, and possibly the corruption of the GC
> linked list of allocated blocks. Therefore, we should make hb_gcLock() and
> hb_gcUnlock() static, or add logic to GC to ignore attempts to lock/unlock
> of pointers that are not within the GC control.

  hb_gcLock/hb_gcUnlock shouldn't be static functions because they can be 
used to manage direct pointers allocated with hb_gcAlloc() - the GC can 
handle memory blocks allocated from any C code - it is not designed to 
handle harbour level variables only.

Regards, Ryszard

From harbour@lists.harbour-project.org  Sun Jan 21 13:26:02 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Sun Jan 21 13:26:02 2001
Subject: [Harbour] callbacks
In-Reply-To: <002701c0827f$59beae20$921a5e18@bh>
Message-ID: <3A6B38E4.8405.52FBD0E@localhost>

On 19 Jan 2001, at 17:21, Brian Hays wrote:

> Not having MT experience yet, and not knowing to what degree the vm
> architecture might allow limited access to a second thread  ;-),  I thought
> I'd ask if anyone had any clues whether there was a possibility here.

  The VM doesn't support multithreading yet. Some modules can be quite 
easy made MT-friendly for example by moving all static variables into the 
hb_stack structure. However there are some fundamental questions how some 
things should be handled in MT (for example access for global static 
variables, public and private variables, etc).

Regards, Ryszard

From harbour@lists.harbour-project.org  Sun Jan 21 13:32:01 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Sun Jan 21 13:32:01 2001
Subject: [Harbour] help with codeblock callback
In-Reply-To: <200101201030_MC2-C267-D200@compuserve.com>
Message-ID: <3A6B3A39.12751.534F2E3@localhost>

On 20 Jan 2001, at 10:29, John Skelton wrote:

> Ouch!  I _need_ the lock, then.
> 
> Many thanks for the info!  And Brian for prompting me to wonder. :-)
> 
> Jean: I have no idea why any C4W32 code runs as well as it does...

  Please see doc/en/garbage.txt for mor info on the GC.

Regards, Ryszard

From harbour@lists.harbour-project.org  Sun Jan 21 13:32:35 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sun Jan 21 13:32:35 2001
Subject: [Harbour] help with codeblock callback
In-Reply-To: <3A6B37B7.7680.52B2543@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCEAKDJAA.ron@profit-master.com>

Ryszard,

>   hb_gcLock/hb_gcUnlock shouldn't be static functions because they can be
> used to manage direct pointers allocated with hb_gcAlloc() - the GC can
> handle memory blocks allocated from any C code - it is not designed to
> handle harbour level variables only.

Then, shouldn't we add some logic to ignore/report attempts to lock/unlock
pointers not within GC control? Otherwise, it appears it will result in
memory corruption.

Ron


From harbour@lists.harbour-project.org  Sun Jan 21 13:52:02 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Sun Jan 21 13:52:02 2001
Subject: [Harbour] ChangeLog 2001-01-20 17:20 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKAEAFDJAA.ron@profit-master.com>
References: <002001c0830f$6a7ed920$921a5e18@bh>
Message-ID: <3A6B3F25.30274.5482BA2@localhost>

On 20 Jan 2001, at 17:59, Ron Pinkas wrote:

>       1. Syntax will be documented to allow no more than 1 HB_INLINE() per
> source line.
>       2. Syntax will be documented to "grab" all subsequent lines starting
> with line
>          immediately below the HB_INLINE() place holder, and up to and
> including the
>          first line with a terminating (balanced) '}'
>       */

  Well, I tried to be silent...
Ron, please rethink all previous discussion on this subject. You are 
again solving a problem from the wrong end. Instead of adding new 
exceptions and restrictions please remove the syntax which is completely 
wrong!
  This syntax is causing that you are again introducing complex relations 
between different modules (PP and lexer). Please change this code so only 
#pragma will be allowed. 

  Notice that this #pragma solution can be used in other places as a 
method for interaction between PP and lexer. We should support:

#pragma BEGIN [C | PASCAL | JAVA]
#pragma END [C | PASCAL | JAVA]

and 

#pragma BEGIN STRING
#pragma END STRING

The first will be used for dumping any data into the output the second 
can be used to implement TEXT/ENDTEXT or as an extension to harbour 
language that can be used in cases:
? ;
#pragma BEGIN STRING
this 
is
multi-line
output
#pragma END STRING

  Notice that HB_INLINE is nothing else than a normal function with a 
hidden name. This was repeated many times that this is not inlined C 
code. For true inlined code we will need new pcode that will call a 
function using a direct pointer. 

Please stop ignoring other developers!

Regards, Ryszard

From harbour@lists.harbour-project.org  Sun Jan 21 14:01:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sun Jan 21 14:01:02 2001
Subject: [Harbour] INLINE C Synopsis (version 2.0)
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKCEKBDIAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKMEAKDJAA.ron@profit-master.com>

Here is a summary of findings, limitations, and specifications with regard
to inline C (HB_INLINE()), and inplace C (#pragma BEGINDUMP) support:


                               HB_INLINE()
                               -----------

Overview:
---------

  PP -> Lexer - Integration.

In order to fully appreciate the scope of what can be achieved, it is
important to understand, the relationship between the above components, and
their respective responsibilities.

PP Starts with trying to get a full line of code (look for next NewLine). In
that process it does the following (partial non sorted list):

   1. Ignore all other characters, while reading strings.
   2. Strip Multi-Line Comments (/**/).
   3. Strip full line Comments (*).
   4. Strip inline comments (//) and (&&) (note && is a C token!!!)
   5. Combines lines that end with semi-colon (;) with the immediate next
line (note (;) is a C line terminator.
   6. Parses result line for #PRAGMAs, #INCLUDEs, #DEFINEs, #[x]TRANSLATEs,
and #[x]COMMANDS.
   7. Converts [] strings to "" or '' strings if possible, and '' strings to
"" strings if possible (note in C [], '', and "" have different meanings).
   8. Finally it transfers a *complete* [processed], line at a time, to the
Lexer.

Limitations:
------------

The inline syntax consists of an inline Place Holder (HB_INLINE()), which is
treated just like any other Harbour Function Call, where the actual body of
code (C code) that this call will execute, follows on subsequent lines in
the form of a valid C syntax. It is important to note that this in essence
define a multi language syntax, the Harbour syntax (HB_INLINE([...]) and the
actual c body code, which has to conform to C syntax.

In order to allow the inclusion of C syntax, all Harbour PP logic (as
described above) must be suspended, other than looking for next NewLine
character.

Since the C syntax portion, requires that PP logic is suspended, and since
PP transfers full line at a time, we are restricted of using C syntax and
Harbour syntax, on the *same* source line.

Please note the HB_INLINE([...]) (the inline Place Holder) component of the
inline syntax, is considered Harbour syntax, in effect a Harbour expression,
and can be used as any other legal Harbour Expression.

The C body component of the syntax falls under C syntax, and thus can *not*
be placed on the same line with the HB_INLINE(), nor can it share the same
source line, with *any* other Harbour syntax.

Only ONE HB_INLINE() Place Holder is allowed per ONE Harbour source line.

Usage of this feature is restricted to using Harbour with the
[default]-gc[n] compiler switch. Compiling such code, with any other output
option, will be reported as a Compilation Error.

Syntax:
-------

... HB_INLINE( [[@]xPar1 [, [@]xParN] ] ) ...
[.]
{ /* Any C code excluding usage of macros with non balanced '{' and '}' */ }

The ... ... represents any valid Harbour syntax where the HB_INLINE(...) is
a valid expression.

The transition from Harbour to C occurs when encountering the FIRST NewLine
token, at the end of an Harbour syntax line, containing the HB_INLINE()
Place Holder. The transition from C back to Harbour occurs when encountering
the FIRST NewLine token, at the *end* of the FIRST FOUND line of C
containing a terminating balanced '}' token.

There may be any number of lines in such C block. Any legal C syntax
including #directives, and any number of nested balanced {} is allowed.

Can/Can not:
------------

1. Inline C block, can utilize PRG Variables passed as parameters, using
standard Harbour Extend and API systems.

2. Inline C block, can manipulate PRG Variables passed by reference, using
standard Harbour Extend and API systems.

3. The return value of an inline C block ,is represented by its
HB_INLINE(...) Place Holder, and can be directly assigned to any Harbour
variable.

4. The return value of an inline C block , represented by its HB_INLINE(...)
Place Holder, can be directly returned as the return value of a Harbour leve
l function.

5. The return value of an inline C block , represented by its HB_INLINE(...)
Place Holder, can be directly passed as a parameter to another function.

6. The return value of an inline C block , represented by its HB_INLINE(...)
Place Holder, can be directly involved in any valid Harbour expression
manipulation.

7. Only ONE HB_INLINE([...]) allowed per Harbour source line.

8. C Source code must be confined within complete source lines, starting and
ending with NewLine characters.

Misc:
-----

#include of support extend system headers is automatically managed.

C Syntax errors and warnings, are reported with the correct PRG source file
name, and line number.


                               #PRAGMA BEGINDUMP
                               -----------------

The proposed implementation for the inplace C*, offers the ability to
include any C* code, verbatim into the generated compiled Harbour code.

Limitations:
------------

Developer has to worry about any interface between Harbour Code and such
provided code.

No #include files are automatically inserted.

Syntax:
-------

#PRAGMA BEGINDUMP
...
[#PRAGMA STOPDUMP]|EOF

The transition from Harbour to C* occurs when encountering the FIRST NewLine
token, at the end of the #pragme BEGINDUMP directive line. The transition
from C* back to Harbour occurs when encountering the FIRST NewLine token, at
the *end* of the FIRST FOUND line containing a #pragma STOPDUMP directive,
or at the EOF.

There may be any number of lines in such C* block. Any legal C* syntax
including #directives, and any number of nested balanced {} is allowed.

Misc:
-----

C* Syntax errors and warnings, are reported with the correct PRG source file
name, and line number.

No parsing of the C* code is being performed, and thus MACROS of unbalanced
'{}' are allowed.

* This implementation is actually language independent, and will allow
inclusion of any code compatible with the generated output format.

                               Conclusion:
                               -----------

I would like to request any final input.

If any one would like to raise any objections to the inclusion of these
proposed implementations, please state such objections, so that I could post
my response and we could then proceed with a formal vote if requested.

Ron


From harbour@lists.harbour-project.org  Sun Jan 21 16:48:02 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Sun Jan 21 16:48:02 2001
Subject: [Harbour] callbacks
References: <3A6B38E4.8405.52FBD0E@localhost>
Message-ID: <005101c083f4$9a885a20$921a5e18@bh>

Ryszard
>   The VM doesn't support multithreading yet.

For now, do you think it would work for C-level code to create a second
thread to handle progress display completely independent of PRG code?  I.e.
make the api calls to start a thread, and have the callback function use
straight C code with windows msgs to do a simple gui feedback?
If so, how do I start a second thread just for the callback???

Brian


From harbour@lists.harbour-project.org  Sun Jan 21 17:53:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sun Jan 21 17:53:02 2001
Subject: [Harbour] callbacks
In-Reply-To: <005101c083f4$9a885a20$921a5e18@bh>
Message-ID: <LOBBKAFMMFGJIKLMEPAKMEALDJAA.ron@profit-master.com>

Brian,

Did you try using the ADS local server with Clipper? Is it possible? If so,
does it not respect the EVAL .. EVERY ... clause?

Ron

> Ryszard
> >   The VM doesn't support multithreading yet.
>
> For now, do you think it would work for C-level code to create a second
> thread to handle progress display completely independent of PRG
> code?  I.e.
> make the api calls to start a thread, and have the callback function use
> straight C code with windows msgs to do a simple gui feedback?
> If so, how do I start a second thread just for the callback???
>
> Brian


From harbour@lists.harbour-project.org  Sun Jan 21 19:12:02 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Sun Jan 21 19:12:02 2001
Subject: [Harbour] callbacks
References: <LOBBKAFMMFGJIKLMEPAKMEALDJAA.ron@profit-master.com>
Message-ID: <006f01c08408$a78993b0$921a5e18@bh>

Ron:
The 16-bit ads driver for clipper has nothing to do with current
architecture using the ACE 32-Bit DLLs.
Their 16-bit ads driver has its own code for accessing a different set of
communications libraries. For "local server", I believe it actually has the
file-creation code there in the RDD itself--the local server is not a
separate process--so it can handle the codeblock eval directly.

The 32-bit ACE dll was envisioned to support any language.
Think about what the EVAL .. EVERY clause preprocesses to: Codeblocks passed
to the indexing function.
We can't pass Harbour codeblocks to an external 32-bit DLL that knows
nothing about Harbour!
We call the ads function to create an index.  The server goes off and does
that itself independently.  The only opportunity for knowing the progress of
that process is when they call our registered callback function every 2
seconds to give us the percentage.

But thanks for the reminder; I've asked them if there are any backdoors
undocumented funcs to do this differently, but since the Clipper rdd doesn't
use ACE at all, I think we're out of luck.

Brian

----- Original Message -----
From: "Ron Pinkas" <ron@profit-master.com>
To: <harbour@lists.harbour-project.org>
Sent: Sunday, January 21, 2001 2:53 PM
Subject: RE: [Harbour] callbacks


> Brian,
>
> Did you try using the ADS local server with Clipper? Is it possible? If
so,
> does it not respect the EVAL .. EVERY ... clause?
>
> Ron
>
> > Ryszard
> > >   The VM doesn't support multithreading yet.
> >
> > For now, do you think it would work for C-level code to create a second
> > thread to handle progress display completely independent of PRG
> > code?  I.e.
> > make the api calls to start a thread, and have the callback function use
> > straight C code with windows msgs to do a simple gui feedback?
> > If so, how do I start a second thread just for the callback???
> >
> > Brian
>
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Sun Jan 21 21:56:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sun Jan 21 21:56:02 2001
Subject: [Harbour] callbacks
In-Reply-To: <006f01c08408$a78993b0$921a5e18@bh>
Message-ID: <LOBBKAFMMFGJIKLMEPAKMEAMDJAA.ron@profit-master.com>

This is a multi-part message in MIME format.

------=_NextPart_000_0000_01C083DB.E05335C0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit

Brian,

I just checked, the ADS callback function, and it does not require any MT
capabilities. The progress reported by means of the call back is per thread
anyway!

>From the ACE documentation:

"The registered function applies to all connections in the current thread.
Therefore, if Index 1 is being created on a table/cursor handle in
Connection 1 which is running in Thread 1, and Index 2 is being created on a
table/cursor handle in Connection 2 which is running in Thread 2, they can
each have their own Progress Callback functions because
AdsRegisterProgressCallback works per thread. And since there are two
connections each in its own thread, the index creation operations can be
literally happening concurrently with their own Progress Callback
functions."

The reason you got only 100% appears to be related to the [small] size of
your dbf. I too only got 100%, *until* I modified my DBF to have more than
30000 records or so. It appears that the callback is only called every N*
seconds, so on smaller file, you only get the 100% call.

* I didn't find if we have control over N.

Attached is my test source.

Ron

> Ron:
> The 16-bit ads driver for clipper has nothing to do with current
> architecture using the ACE 32-Bit DLLs.
> Their 16-bit ads driver has its own code for accessing a different set of
> communications libraries. For "local server", I believe it
> actually has the
> file-creation code there in the RDD itself--the local server is not a
> separate process--so it can handle the codeblock eval directly.
>
> The 32-bit ACE dll was envisioned to support any language.
> Think about what the EVAL .. EVERY clause preprocesses to:
> Codeblocks passed
> to the indexing function.
> We can't pass Harbour codeblocks to an external 32-bit DLL that knows
> nothing about Harbour!
> We call the ads function to create an index.  The server goes off and does
> that itself independently.  The only opportunity for knowing the
> progress of
> that process is when they call our registered callback function every 2
> seconds to give us the percentage.
>
> But thanks for the reminder; I've asked them if there are any backdoors
> undocumented funcs to do this differently, but since the Clipper
> rdd doesn't
> use ACE at all, I think we're out of luck.
>
> Brian

------=_NextPart_000_0000_01C083DB.E05335C0
Content-Type: application/octet-stream;
	name="ads.c"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: attachment;
	filename="ads.c"

#include <windows.h>
#include <stdio.h>
#include "ace.h"

unsigned long __stdcall ShowPercentage( UNSIGNED16 usPercentDone );
UNSIGNED32 DoProgress( void );

void main( void )
{
  UNSIGNED8 *pucServer =3D "C:";
  UNSIGNED16 usLoaded;
  UNSIGNED32 usResult;

  AdsSetServerType( ADS_LOCAL_SERVER );

  usResult =3D AdsIsServerLoaded( pucServer, &usLoaded);

  printf( "Result: %i Server: %i\n", usResult, usLoaded );

  DoProgress();=20
}

UNSIGNED32 DoProgress( void )
{

   ADSHANDLE   hTable;
   ADSHANDLE   hIndex;
   UNSIGNED32  ulRetVal;

   /* open the table */
   ulRetVal =3D AdsOpenTable( 0, "ORDERS.DBF", NULL, ADS_CDX,
      ADS_ANSI, ADS_COMPATIBLE_LOCKING, ADS_IGNORERIGHTS, ADS_EXCLUSIVE, =
&hTable );

   if ( ulRetVal !=3D AE_SUCCESS )
   {
      /* some kind of error, tell the user what happened */
      AdsShowError( "ACE Couldn't open table" );
      return ulRetVal;
   }
   else
   {
      printf( "Opened\n" );
   }

   /* register a callback function, this function will be called with =
progress
    * information during long indexing operations */
   ulRetVal =3D AdsRegisterProgressCallback( ShowPercentage );
   if ( ulRetVal !=3D AE_SUCCESS )
   {
      printf( "Error %d when attempting to register callback =
function.\n", ulRetVal );
   }
   else
   {
      printf( "Registered\n" );
   }

   /* create an index */

   ulRetVal =3D AdsCreateIndex( hTable, "ORDERS", "ORDERS",
                             "WORK_ORDER", NULL, NULL, ADS_DEFAULT, =
&hIndex );

   if ( ulRetVal !=3D AE_SUCCESS )
   {
      AdsCloseTable( hTable );
      return ulRetVal;
   }
   else
   {
      printf( "Indexed\n" );
   }

   #if 0
      /* reindex all indexes associated with this table */

      AdsReindex( hTable );

      printf( "Re-Indexed\n" );
   #endif

   /* clear the progress callback */
   AdsClearProgressCallback();

   printf( "Un-Registered\n" );

   AdsCloseTable( hTable );

   printf( "Closed\n" );

   return 0;

}   /* DoProgress */


/* this is the function we will register with ACE=20

 * for progress information */
unsigned long __stdcall ShowPercentage( UNSIGNED16 usPercentDone )
{
=20
   printf( "Percent Complete: %d\n", usPercentDone );
   return 0;

}  /* ShowPercentage */


------=_NextPart_000_0000_01C083DB.E05335C0--


From harbour@lists.harbour-project.org  Mon Jan 22 00:21:17 2001
From: harbour@lists.harbour-project.org (Charles Kwon ( Kwon,Oh-Jun))
Date: Mon Jan 22 00:21:17 2001
Subject: [Harbour] hb_inkeyPoll()
References: <200101190521_MC2-C24A-711F@compuserve.com> <3A6B35BC.29202.5236822@localhost>
Message-ID: <000b01c08432$3a667bc0$0200a8c0@ns>

OiAgIE1heWJlIGl0IGlzIGEgZ29vZCB0aW1lIHRvIHJldHVybiB0byBJTktFWSgpIHJlZGVzaWdu
IGFuZCBldmVudCANCjogaW50cm9kdWN0aW9uIGRpc3NjdXNzZWQgZWFybGllcj8NCg0KSSBhZ3Jl
ZSBpdCBhbmQgSXQgYWxzbyBuZWVkcyAyQnl0ZSBjaGFyYWN0ZXIgaW5wdXQgc3lzdGVtIGxpa2Ug
S29yZWFuLCBDaGluZXNlLi4uDQoNCkJlc3QgUmVnYXJkcywNCkNoYXJsZXMgS3dvbiANCg0KaHR0
cDovL3d3dy5maXZldGVjaC5uZXQNCmh0dHA6Ly9lbmdsaXNoLmZpdmV0ZWNoLm5ldA0KaHR0cDov
L3NwYWluLmZpdmV0ZWNoLm5ldA0KDQpGaXZlVGVjaC5OZXQNClRFTCA6ICs4Mi0yLTU2Ni02ODI2
DQpJQ1EgOiAxOTMwMjI1OA0KLS0tLS0gT3JpZ2luYWwgTWVzc2FnZSAtLS0tLSANCj8/ID8/OiAi
UnlzemFyZCBHbGFiIiA8cmdsYWJAaW1pZC5tZWQucGw+DQo/PyA/PzogPGhhcmJvdXJAbGlzdHMu
aGFyYm91ci1wcm9qZWN0Lm9yZz4NCj8/ID8/OiAyMDAxPyAxPyAyMj8gPz8/ID8/IDM6MTcNCj8/
OiBSZTogW0hhcmJvdXJdIGhiX2lua2V5UG9sbCgpDQoNCg0KOiBPbiAxOSBKYW4gMjAwMSwgYXQg
MTg6NDAsIERhdmlkIEcuIEhvbG0gd3JvdGU6DQo6IA0KOiA+ID4gQWxzbywgZm9yIGEgbm9uLWV2
ZW50LWRyaXZlbiBlbnYuLCBzaG91bGQgaXQgYWxzbyBjaGVjayBhIG1vdXNlICh3aGVuDQo6ID4g
PiB0aGVyZSBpcyBvbmUpPw0KOiA+IA0KOiA+IEkgZG9uJ3QgaGF2ZSBlbm91Z2ggZXhwZXJpZW5j
ZSB0byBzYXkgb25lIHdheSBvciB0aGUgb3RoZXIuDQo6IA0KOiAgIE1heWJlIGl0IGlzIGEgZ29v
ZCB0aW1lIHRvIHJldHVybiB0byBJTktFWSgpIHJlZGVzaWduIGFuZCBldmVudCANCjogaW50cm9k
dWN0aW9uIGRpc3NjdXNzZWQgZWFybGllcj8NCjogDQo6IFJlZ2FyZHMsIFJ5c3phcmQNCjogX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18NCjogSGFyYm91ciBt
YWlsaW5nIGxpc3QNCjogSGFyYm91ckBsaXN0cy5oYXJib3VyLXByb2plY3Qub3JnDQo6IGh0dHA6
Ly93d3cubWF0cml4bGlzdC5jb20vbWFpbG1hbi9saXN0aW5mby9oYXJib3VyDQo6IA0KOiBUaGFu
ayB5b3UgZm9yIHBhcnRpY2lwYXRpbmcgaW4gVGhlIEhhcmJvdXIgUHJvamVjdC4gIEJlIHN1cmUg
dG8gY2hlY2sNCjogaHR0cDovL3d3dy5IYXJib3VyLVByb2plY3Qub3JnDQo=


From harbour@lists.harbour-project.org  Mon Jan 22 01:30:04 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Mon Jan 22 01:30:04 2001
Subject: [Harbour] callbacks
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKMEAMDJAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKIEANDJAA.ron@profit-master.com>

This is a multi-part message in MIME format.

------=_NextPart_000_0005_01C083F9.C6792F60
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit

Brian,

The attached is a Harbour PRG (supplemented with C) using ADS RDD that does
report progress correctly using a callback function that executes Harbour
CodeBlock.

You'll have to modify your build file to include RDDADS.lib and ACE32.lib

Use:

ADS TEST

Ron

------=_NextPart_000_0005_01C083F9.C6792F60
Content-Type: application/octet-stream;
	name="ads.prg"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: attachment;
	filename="ads.prg"

PROCEDURE Main( cDBF )

  LOCAL cField

  #ifdef __HARBOUR__
     RddRegister( "ADS", 1 )
     RddSetDefault( "ADS" )
     AdsSetServerType( 1 )
     AdsSetFileType( 2 )
  #endif

  USE ( cDBF ) EXCLUSIVE

  IF ! File( "ADSTEST.DBF" )
    COPY STRUCTURE TO ADSTEST
  ENDIF

  USE ADSTEST

  DO WHILE RecCount() < 50000=20
     ? "Copying..."
     APPEND ALL FROM TEST
  ENDDO

  cField :=3D FieldName(1) =20

  #ifdef __HARBOUR__
     Register_CallBack( {|n| QOut(n) } )
     INDEX ON FIELD->FIRST TO FIRST // Harbour has problem with macro in =
Index Expression
     UnRegister_CallBack()
  #else
     INDEX ON &cField TO (cField)
  #endif

RETURN

#ifdef __HARBOUR__
#pragma BEGINDUMP

#include <windows.h>
#include "ace.h"
#include "hbapi.h"
#include "hbvm.h"
#include "hbapiitm.h"

unsigned long __stdcall ShowPercentage( UNSIGNED16 usPercentDone );

PHB_ITEM pBlock;

HB_FUNC( REGISTER_CALLBACK )
{
   pBlock =3D hb_itemParam( 1 );
   hb_gcLockItem( pBlock );
   AdsRegisterProgressCallback( ShowPercentage );
}

HB_FUNC( UNREGISTER_CALLBACK )
{
   AdsClearProgressCallback();
   hb_gcUnlockItem( pBlock );
   hb_xfree( pBlock );
}

unsigned long __stdcall ShowPercentage( UNSIGNED16 usPercentDone )
{=20
   hb_vmEvalBlockV( pBlock, 1, hb_itemPutNI(NULL, usPercentDone) );
   return 0;
}

#pragma STOPDUMP
#endif

------=_NextPart_000_0005_01C083F9.C6792F60--


From harbour@lists.harbour-project.org  Mon Jan 22 01:39:02 2001
From: harbour@lists.harbour-project.org (Patrick Mast)
Date: Mon Jan 22 01:39:02 2001
Subject: [Harbour] callbacks
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKIEANDJAA.ron@profit-master.com>
Message-ID: <NCBBJKNMIDPJNLJCHCHIIEJMFNAA.harbour@winfakt.com>

Ron,

> The attached is a Harbour PRG (supplemented with C) using ADS RDD 
> that does
> report progress correctly using a callback function that executes Harbour
> CodeBlock.
> You'll have to modify your build file to include RDDADS.lib and ACE32.lib
> Use:
> ADS TEST

Wow, great sample of Inline C also! ;-))

regards,

Patrick Mast
www.Patrick.Be.kz


From harbour@lists.harbour-project.org  Mon Jan 22 04:05:03 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Mon Jan 22 04:05:03 2001
Subject: [Harbour] ChangeLog 2001-01-22 00:50 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <NCBBJKNMIDPJNLJCHCHIIEJMFNAA.harbour@winfakt.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKEEAODJAA.ron@profit-master.com>

2001-01-22 00:50 UTC-0800 Ron Pinkas <ron@profit-master.com>
   * contrib/dot/pp.prg
   * source/pp/ppcore.c
     ! Fixed processing of & with stringify.

   /* This will solve problem with INDEX ON &cMacro, where cMacro is
declared variable. */


From harbour@lists.harbour-project.org  Mon Jan 22 04:32:02 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Mon Jan 22 04:32:02 2001
Subject: [Harbour] INLINE C Synopsis (version 2.0)
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKMEAKDJAA.ron@profit-master.com>; from ron@profit-master.com on Sun, Jan 21, 2001 at 11:02:14AM -0800
References: <LOBBKAFMMFGJIKLMEPAKCEKBDIAA.ron@profit-master.com> <LOBBKAFMMFGJIKLMEPAKMEAKDJAA.ron@profit-master.com>
Message-ID: <20010122091107.M12735@hagbard.davep.org>

On Sun, Jan 21, 2001 at 11:02:14AM -0800, Ron Pinkas wrote:

> Here is a summary of findings, limitations, and specifications with regard
> to inline C (HB_INLINE()), and inplace C (#pragma BEGINDUMP) support:

Isn't there some confusion arising here now? My initial reaction to what I'm
looking at here is that we've got two unrelated features served up together.
Am I wrong in viewing it this way?

On the one hand we've got the HB_INLINE() thing, on the other we've got the
"raw dump" facility. This is further confused by it being referred to on and
off as "inplace C" when, elsewhere in the document, it talks about it being
a dump that is relevant to the target format.

It strikes me that these proposals are quite separate and different and need
to be resented as such.


> Limitations:
> ------------
> 
> The inline syntax consists of an inline Place Holder (HB_INLINE()), which
> is treated just like any other Harbour Function Call, where the actual
> body of code (C code) that this call will execute, follows on subsequent
> lines in the form of a valid C syntax.

You might want to clarify, for documentation purposes if nothing else, what
you mean by "subsequent lines". Depending on the definition of "line" in the
above this code:

,----
| Function Main()
| 
|    ? HB_INLINE(),;
|                7,;
|               23,;
|               42
|    { hb_retni( 5 ); }
|    
| Return( NIL )
`----

might or might not be correct. 

> Please note the HB_INLINE([...]) (the inline Place Holder) component of the
> inline syntax, is considered Harbour syntax, in effect a Harbour expression,
> and can be used as any other legal Harbour Expression.
> 
> [SNIP]
> 
> Only ONE HB_INLINE() Place Holder is allowed per ONE Harbour source line.

This bit here is the one thing that really bothers me, the alternative
bothers me too. I know this is why I, and I suspect others, have raised
concerns about the idea of inline C as presented here. Either way it's done
there's either an artificial restriction (note that the latter sentence
above seems to fly in the face of the previous paragraph, how can it "be
used as any other legal Harbour expression" yet be restricted to one use per
line) or a confusion that doesn't quite match the documentation (the
previous state of affairs).

> { /* Any C code excluding usage of macros with non balanced '{' and '}' */
> }

What does this mean exactly? That exception reads like you've got a specific
case in mind. It also reads like the case you've got in mind is actually
valid C (if it wasn't valid C you wouldn't need to mention it). Perhaps it
would be wise to expand on this?

> The ... ... represents any valid Harbour syntax where the HB_INLINE(...) is
> a valid expression.

What did the "[.]" represent?

> Can/Can not:
> ------------
> 
> 1. Inline C block, can utilize PRG Variables passed as parameters, using
> standard Harbour Extend and API systems.
> 
> 2. Inline C block, can manipulate PRG Variables passed by reference, using
> standard Harbour Extend and API systems.
> 
> 3. The return value of an inline C block ,is represented by its
> HB_INLINE(...) Place Holder, and can be directly assigned to any Harbour
> variable.
> 
> 4. The return value of an inline C block , represented by its HB_INLINE(...)
> Place Holder, can be directly returned as the return value of a Harbour leve
> l function.
> 
> 5. The return value of an inline C block , represented by its HB_INLINE(...)
> Place Holder, can be directly passed as a parameter to another function.
> 
> 6. The return value of an inline C block , represented by its HB_INLINE(...)
> Place Holder, can be directly involved in any valid Harbour expression
> manipulation.

I think that most of the above can be discarded by making it clear that the
code of an INLINE block is actually the code for an extend system function.

> 7. Only ONE HB_INLINE([...]) allowed per Harbour source line.

I think this really requires some explanation why only one is allowed. It
seems like a very severe limit.

> 8. C Source code must be confined within complete source lines, starting and
> ending with NewLine characters.

As opposed to what?

> #include of support extend system headers is automatically managed.

It might be a good idea to say which headers exactly.

>                                #PRAGMA BEGINDUMP
>                                -----------------
> 
> The proposed implementation for the inplace C*, offers the ability to
> include any C* code, verbatim into the generated compiled Harbour code.

All this use of "C*" looks confusing. Moreover, the whole point of this
features appears to be that it is an agnostic dump of raw data to the output
file. Perhaps it would be wise to present it as such?

> Limitations:
> ------------
> 
> Developer has to worry about any interface between Harbour Code and such
> provided code.

This limitation doesn't ring quite true. Also, the same limitation exists
with HB_INLINE(), it just happens to be different in what people have to
learn and remember.

> No #include files are automatically inserted.

If this is a "raw dump" facility then you shouldn't need to say this.

> * This implementation is actually language independent, and will allow
> inclusion of any code compatible with the generated output format.

One thing that isn't touched on is what happens regarding incompatible "raw
code" and output targets. There appears to be no provision in this to say
"when we're compiling with /gc, dump this to the output file". Or, on the
other hand, there appears to be no provision for allowing the compiler to
throw an error when it sees that it's supposed to dump C code (for example)
but it's being asked to output an OBJ.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Mon Jan 22 04:38:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Mon Jan 22 04:38:02 2001
Subject: [Harbour] callbacks
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKIEANDJAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKMEAODJAA.ron@profit-master.com>

Brian,

BTW, Please change ShowPercentage() from my sample ads.prg as follows, as to
not have unreleased memory:

unsigned long __stdcall ShowPercentage( UNSIGNED16 usPercentDone )
{
   PHB_ITEM pPercent = hb_itemPutNI( NULL, usPercentDone );
   hb_vmEvalBlockV( pBlock, 1, pPercent );
   hb_xfree( pPercent );
   return 0;
}

Ron


From harbour@lists.harbour-project.org  Mon Jan 22 04:59:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Mon Jan 22 04:59:02 2001
Subject: [Harbour] INLINE C Synopsis (version 2.0)
In-Reply-To: <20010122091107.M12735@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKGEAPDJAA.ron@profit-master.com>

> You might want to clarify, for documentation purposes if nothing
> else, what
> you mean by "subsequent lines". Depending on the definition of
> "line" in the
> above this code:
>
> ,----
> | Function Main()
> |
> |    ? HB_INLINE(),;
> |                7,;
> |               23,;
> |               42
> |    { hb_retni( 5 ); }
> |
> | Return( NIL )
> `----
>
> might or might not be correct.

All Harbour source lines ending with ';' are consolidated by the PP with the
immediate next line, so ultimately, subsequent lines in the description
refers to the state after such consolidation.

> > { /* Any C code excluding usage of macros with non balanced '{'
> and '}' */
> > }
>
> What does this mean exactly? That exception reads like you've got
> a specific
> case in mind. It also reads like the case you've got in mind is actually
> valid C (if it wasn't valid C you wouldn't need to mention it). Perhaps it
> would be wise to expand on this?

This was purely from the pedantic stand point, It should never become
practical. - If unbalanced '{' or '}' are "hidden" by means of a macro,
parsing of the block will fail to balance {}.

> What did the "[.]" represent?

optional Source preceding the open '{'

> > 8. C Source code must be confined within complete source lines,
> starting and
> > ending with NewLine characters.
>
> As opposed to what?

Sharing a line with Harbour syntax.

> > Developer has to worry about any interface between Harbour Code and such
> > provided code.
>
> This limitation doesn't ring quite true. Also, the same limitation exists
> with HB_INLINE(), it just happens to be different in what people have to
> learn and remember.

Sorry, this was referring to the naming and declaring of the contained
function, not to the extend system.

Ron


From harbour@lists.harbour-project.org  Mon Jan 22 05:04:02 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Mon Jan 22 05:04:02 2001
Subject: [Harbour] INLINE C Synopsis (version 2.0)
In-Reply-To: <20010122091107.M12735@hagbard.davep.org>; from davep@davep.org on Mon, Jan 22, 2001 at 09:11:07AM +0000
References: <LOBBKAFMMFGJIKLMEPAKCEKBDIAA.ron@profit-master.com> <LOBBKAFMMFGJIKLMEPAKMEAKDJAA.ron@profit-master.com> <20010122091107.M12735@hagbard.davep.org>
Message-ID: <20010122100017.O12735@hagbard.davep.org>

On Mon, Jan 22, 2001 at 09:11:07AM +0000, Dave Pearson wrote:

> It strikes me that these proposals are quite separate and different and
> need to be resented as such.
             ^^^^^^^^

LOL! Trust me, that isn't the Freudian slip it appears to be, it really is
just a missing 'p'. :)

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Mon Jan 22 05:26:01 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Mon Jan 22 05:26:01 2001
Subject: [Harbour] INLINE C Synopsis (version 2.0)
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKGEAPDJAA.ron@profit-master.com>; from ron@profit-master.com on Mon, Jan 22, 2001 at 01:59:55AM -0800
References: <20010122091107.M12735@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKGEAPDJAA.ron@profit-master.com>
Message-ID: <20010122101023.P12735@hagbard.davep.org>

On Mon, Jan 22, 2001 at 01:59:55AM -0800, Ron Pinkas wrote:

> > What did the "[.]" represent?
> 
> optional Source preceding the open '{'

I thought that's what the "..." was for:

,----
| ... HB_INLINE( [[@]xPar1 [, [@]xParN] ] ) ...
| [.]
| { /* Any C code excluding usage of macros with non balanced '{' and '}' */ }
`----

Do you mean that the "[.]" indicates that you can write stuff like:

,----
| ? HB_INLINE()
| ? "This is some code"
| ? "This is some more code"
| { hb_retni( 42 ); }
`----

I'm not sure that it's clear from the syntax example what "..." and "[.]"
are really supposed to mean.

> > > Developer has to worry about any interface between Harbour Code and
> > > such provided code.
> >
> > This limitation doesn't ring quite true. Also, the same limitation
> > exists with HB_INLINE(), it just happens to be different in what people
> > have to learn and remember.
> 
> Sorry, this was referring to the naming and declaring of the contained
> function, not to the extend system.

Right, what I'm saying is that the need to understand programming isn't a
limitation or, more to the point, it's a limitation that's shared by
HB_INLINE() too, it's just that there are different rules that have to be
remembered.

Any thoughts on all the other points I raised?

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Mon Jan 22 05:50:04 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Mon Jan 22 05:50:04 2001
Subject: [Harbour] help with codeblock callback
Message-ID: <200101220548_MC2-C28C-FCF7@compuserve.com>

Ryszard,

"Please see doc/en/garbage.txt for mor info on the GC."

Thanks.  I did, but unfortunately this is a case where knowing what
Clipper does misled me into expecting Harbour to be the same.  The
doc appeared to be relevant in other cases than this.

John.

From harbour@lists.harbour-project.org  Mon Jan 22 05:50:43 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Mon Jan 22 05:50:43 2001
Subject: [Harbour] help with codeblock callback
Message-ID: <200101220548_MC2-C28C-FCF8@compuserve.com>

Ryszard,

"Notice that, at this moment, we are not maintaining any kind of list of =

dynamically allocated items. This is causing that the GC cannot scan such=
 =

items and can deallocate values stored in them."

:-(

But: _thanks_ for explaining what is a big difference from Clipper.

"Notice also that the GC is collecting values of items instead of
items."

I understand the difference between those. :-)  But not how or whether
it affects me. :-(  I hope it doesn't - or rather won't after I've
added GC locks.

John.

From harbour@lists.harbour-project.org  Mon Jan 22 05:51:19 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Mon Jan 22 05:51:19 2001
Subject: [Harbour] callbacks
Message-ID: <200101220548_MC2-C28C-FCF4@compuserve.com>

Brian,

"do you think it would work for C-level code to create a second
thread to handle progress display completely independent of PRG code?"

I also saw your msg about ESI - but what I meant in my previous msg
was that maybe you could create an extra thread (at the C level in the
RDD) and have that new thread be the one that calls all the ADS APIs
except the ones for progress.  You'd just do the progress API(s) from
the original Harbour thread.  (Actually, you'd only need to use the
new thread for those APIs which can take long time.)

Er... looks like Ron's test makes the above unnecessary. :-)

John.

From harbour@lists.harbour-project.org  Mon Jan 22 07:43:02 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Mon Jan 22 07:43:02 2001
Subject: [Harbour] Gtwin Bug(David)
In-Reply-To: <000901c08327$a4e04be0$0100007f@sl.conex.net>
Message-ID: <200101221242.f0MCg2F17006@thor.parrett.net>

** Reply to message from "Luiz Rafael Culik Guimaraes"
<culik@nh.conex.com.br> on Sat, 20 Jan 2001 19:24:22 -0200

> The gtwin has an bug
> 
> When pressing the LEFT ALT+ key , the return value is invalid.Ex: Return
> value for ALT_A =97
> when pressing the RIGHT ALT+key, the return value is correct

Like I keep telling you guys with foreign language keyboards, there is
nothing that I can do about the different results that you get, because
I don't have a foreign language keyboard to test with. All I can tell
you is that I get the correct results with a US keyboard with US Windows
95, US Windows NT, and Icelandic Windows 98. The only way this problem
is ever going to get fixed is if one of you guys with a foreign language
keyboard takes the time to debug the values returned by your keyboard by
uncommenting the fprintf() call in the hb_gt_ReadKey() function in
source/rtl/gtwin/gtwin.c and then using tests/inkeytst with the SKIP
parameter.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Mon Jan 22 07:53:01 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Mon Jan 22 07:53:01 2001
Subject: [Harbour] callbacks
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKMEALDJAA.ron@profit-master.com>
References: <005101c083f4$9a885a20$921a5e18@bh>
Message-ID: <200101221252.f0MCqwF17615@thor.parrett.net>

** Reply to message from "Ron Pinkas" <ron@profit-master.com> on Sun,
21 Jan 2001 14:53:31 -0800

The ADS Clipper RDD only supports remote servers. It is not possible to
use the ADS Clipper RDD to access a local ADS server.

> Did you try using the ADS local server with Clipper? Is it possible?
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Mon Jan 22 11:19:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Mon Jan 22 11:19:02 2001
Subject: [Harbour] INLINE C Synopsis (version 2.0)
In-Reply-To: <20010122101023.P12735@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOEBADJAA.ron@profit-master.com>

> I'm not sure that it's clear from the syntax example what "..." and "[.]"
> are really supposed to mean.

It means that there might be a C code that is preceding the { /* more C code
here */ }.

> > Sorry, this was referring to the naming and declaring of the contained
> > function, not to the extend system.
>
> Right, what I'm saying is that the need to understand programming isn't a
> limitation or, more to the point, it's a limitation that's shared by
> HB_INLINE() too, it's just that there are different rules that have to be
> remembered.

Ok.

> Any thoughts on all the other points I raised?

Yes, but I'd rather not engage :-). If any such though becomes a formal
objection, I'm content with letting the group resolve it by means of a vote.

Thanks for the input, it helped me a lot.

Ron


From harbour@lists.harbour-project.org  Mon Jan 22 12:03:02 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Mon Jan 22 12:03:02 2001
Subject: [Harbour] INLINE C Synopsis (version 2.0)
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKOEBADJAA.ron@profit-master.com>; from ron@profit-master.com on Mon, Jan 22, 2001 at 08:20:12AM -0800
References: <20010122101023.P12735@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKOEBADJAA.ron@profit-master.com>
Message-ID: <20010122165800.E12735@hagbard.davep.org>

On Mon, Jan 22, 2001 at 08:20:12AM -0800, Ron Pinkas wrote:

> > Any thoughts on all the other points I raised?
> 
> Yes, but I'd rather not engage :-). If any such though becomes a formal
> objection, I'm content with letting the group resolve it by means of a
> vote.

I'm not sure quite what you're getting at here (engage?) but some of my
questions shouldn't require a vote (which only gets you "popular" solutions
anyway, which might very well be different from "good" or "correct"
solutions). For example, I asked about the issues of correctly directing
"raw dump" output and the possible clash with compiler switches. I also
asked about the fact that it would appear that "inline C" and "inplace C"
(AKA "raw dump") are two very different beasts.

It should require a vote to get an answer from the author of the proposal in
issues like that.

I'm not sure that the "one HB_INLINE per line of code" limitation requires a
vote to get more explanation either.

> Thanks for the input, it helped me a lot.

Glad to have helped.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Mon Jan 22 12:18:02 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Mon Jan 22 12:18:02 2001
Subject: [Harbour] INLINE C Synopsis (version 2.0)
In-Reply-To: <20010122165800.E12735@hagbard.davep.org>; from davep@davep.org on Mon, Jan 22, 2001 at 04:58:00PM +0000
References: <20010122101023.P12735@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKOEBADJAA.ron@profit-master.com> <20010122165800.E12735@hagbard.davep.org>
Message-ID: <20010122171741.G12735@hagbard.davep.org>

On Mon, Jan 22, 2001 at 04:58:00PM +0000, Dave Pearson wrote:

> It should require a vote to get an answer from the author of the proposal
> in issues like that.

Real finger problems today, that should, of course, read "It *shouldn't*..."
and "*on* issues".

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Mon Jan 22 12:37:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Mon Jan 22 12:37:02 2001
Subject: [Harbour] INLINE C Synopsis (version 2.0)
In-Reply-To: <20010122165800.E12735@hagbard.davep.org>
Message-ID: <LOBBKAFMMFGJIKLMEPAKMEBBDJAA.ron@profit-master.com>

> I'm not sure quite what you're getting at here (engage?) but some of my
> questions shouldn't require a vote (which only gets you "popular"
> solutions
> anyway, which might very well be different from "good" or "correct"
> solutions). For example, I asked about the issues of correctly directing
> "raw dump" output and the possible clash with compiler switches. I also
> asked about the fact that it would appear that "inline C" and "inplace C"
> (AKA "raw dump") are two very different beasts.

That's exactly what I don't wish to engage. It is understandable for
different individuals to have different opinions on what is "good" or
"correct". I wouldn't claim that "good" and "correct" are objective
standards, so I can't argue this.

I personally, believe that a *"raw dump"* facility should not make *any*
assumptions as to what can or can not be compatible, with the generated
output format. This is why it is referred to as DUMP! There should be
nothing stopping anyone from finding a way to utilize this feature,
regardless of the selected compiler output (even obj, if/when it is
functional).

I do agree that HB_INLINE() and #pragma BEGINDUMP, are different, and I did
discuss them separately in my synopsis. I don't personally care how these
features are named if accepted. There are many individuals here, better
qualified then me, to name such features. I personally felt OK with naming
them inline and inplace, respectively, just for the purpose of the
discussion.

The above 3 paragraphs, were written only to explain how we might differ,
and demonstrate *what* I have no wish to debate. Please forgive me when I
don't respond to your possible reply to these.

> It should require a vote to get an answer from the author of the
> proposal in
> issues like that.
>
> I'm not sure that the "one HB_INLINE per line of code" limitation
> requires a
> vote to get more explanation either.

I don't agree that's "severe limitation", rather I see it as a practical
limitation, chosen from a syntax design stand point. Again please forgive my
lack of interest in discussing this fact any further.

Ron


From harbour@lists.harbour-project.org  Mon Jan 22 13:51:02 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Mon Jan 22 13:51:02 2001
Subject: [Harbour] INLINE C Synopsis (version 2.0)
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKMEBBDJAA.ron@profit-master.com>; from ron@profit-master.com on Mon, Jan 22, 2001 at 09:38:11AM -0800
References: <20010122165800.E12735@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKMEBBDJAA.ron@profit-master.com>
Message-ID: <20010122182828.H12735@hagbard.davep.org>

On Mon, Jan 22, 2001 at 09:38:11AM -0800, Ron Pinkas wrote:

> I personally, believe that a *"raw dump"* facility should not make *any*
> assumptions as to what can or can not be compatible, with the generated
> output format. This is why it is referred to as DUMP! There should be
> nothing stopping anyone from finding a way to utilize this feature,
> regardless of the selected compiler output (even obj, if/when it is
> functional).

Won't dumping C code when writing an OBJ file (for example) be less than
useful? As I see it there needs to be one of the following going on:

a) You get to say which output switch is compatible with the "raw data" and
   the compiler complains if the wrong switch is used.

b) You get to say which output switch is compatible with the "raw data" and
   the compiler silently ignores the "raw data" if the wrong switch is used.

c) You get to say which output switch is compatible with the "raw data" and
   the compiler either complains or ignores the "raw data" depending on some
   sort of warning level switch.

d) Something different.

> The above 3 paragraphs, were written only to explain how we might differ,
> and demonstrate *what* I have no wish to debate. Please forgive me when I
> don't respond to your possible reply to these.

Oh. Ok. It's kind of hard to discuss your proposal if you don't want to
actually discuss it. I thought you'd said before that you did want to
discuss your tangential features. Oh well.

> > I'm not sure that the "one HB_INLINE per line of code" limitation
> > requires a vote to get more explanation either.
> 
> I don't agree that's "severe limitation", rather I see it as a practical
> limitation, chosen from a syntax design stand point. Again please forgive
> my lack of interest in discussing this fact any further.

Err, ok, that kind of makes it hard for anyone to gain more understanding.
Shame. A vote where the "candidates" won't allow themselves to be
questioned. Hmm.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Mon Jan 22 13:59:02 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Mon Jan 22 13:59:02 2001
Subject: [Harbour] Fwd: ChangeLog 2001-01-22 13:15 UTC-0500
Message-ID: <200101221858.f0MIwOF16028@thor.parrett.net>

2001-01-22 13:15 UTC-0500 David G. Holm <dholm@jsd-llc.com>
  + doc/en/gtslang.txt
    + New file provided by Marek Paliwoda <paliwoda@inetia.pl>
  * source/rtl/gtsln/gtsln.c
    * Enhancements provided by Marek Paliwoda <paliwoda@inetia.pl>
  * source/rtl/gtsln/kbsln.c
    * Enhancements provided by Marek Paliwoda <paliwoda@inetia.pl>
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Mon Jan 22 14:29:01 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Mon Jan 22 14:29:01 2001
Subject: [Harbour] callbacks
References: <LOBBKAFMMFGJIKLMEPAKMEAODJAA.ron@profit-master.com>
Message-ID: <004e01c084aa$601f61b0$921a5e18@bh>

Ron:   (Ryszard please note the @parameter issues discussed at the bottom)

Your C code was almost identical to mine.
One quick question: Shouldn't this line:
    >    hb_xfree( pPercent );
be:
      hb_itemRelease( pPercent );
???
...and ditto for pBlock?

Meanwhile, I had started this test on my slower office machine, which was
taking 8 seconds to create the index, but when I moved it to my new home
machine I didn't realize I had to bump my record count to 200,000 to go more
than 5 seconds.  Gosh darn @#$%^Y fast machine....

However, I am still getting erratic behavior because of a weird coding
thingy in my test program that may point to a problem in detached locals in
codeblocks.
Sometimes I would just get the one call at 100%, and sometimes several
random garbage calls with this output:
    output %         12
    output %         93
    output %         36
    output %         25
    output %         46
    output %          4
    output %          0
    output %         17
    output %         31
    output %        100

All the errors were because of this line:
     adsregcallback( {|nPercent| outputstuff( nPercent, @cStr )} )
        ... and the declared function:
    Function outputstuff(nPercent, cStr)

Notice the @cStr parameter?  I had forgotten that the first tests hoped to
be able to send variable variable text to the function that displays
progress.  Take it out and my original test works fine. Or, take it out of
the function declaration (and leave it in the codeblock) and it works fine.
But as is, the output can give random results AND can go into an infinite
loop, so we are corrupting the memory space used by the ADS local server DLL
operations.

SO, the bottom line is my original C code works perfectly, as does Ron's,
and the need for a second thread was apparently a big fat red herring.
Sorry everybody!  :-(
I'll continue the FWH/GUI and remote server tests now.  The original
suggestion for a second thread was related to Delphi's not being able to
update the GUI, so we'll see soon if that's an issue.

However, it still raises the question of whether passing a detached local to
the codeblock should corrupt whatever memory it was corrupting.  Yes, the
codeblock is eval'ed by a C function called by ADS, but does that mean a
detached local from the function that created the codeblock should not be
accessible?

Programmers using Harbour will undoubtedly try more creative blocks and
functions than this....

Brian



From harbour@lists.harbour-project.org  Mon Jan 22 15:24:02 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Mon Jan 22 15:24:02 2001
Subject: [Harbour] INLINE C Synopsis (version 2.0)
References: <20010122165800.E12735@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKMEBBDJAA.ron@profit-master.com> <20010122182828.H12735@hagbard.davep.org>
Message-ID: <008e01c084b2$08463d80$921a5e18@bh>

Dave:

> > I don't agree that's "severe limitation", rather I see it as a practical
> > limitation, chosen from a syntax design stand point. Again please
forgive
> > my lack of interest in discussing this fact any further.
>
> Err, ok, that kind of makes it hard for anyone to gain more understanding.
> Shame. A vote where the "candidates" won't allow themselves to be
> questioned. Hmm.
>

I think Ron has "allowed himself to be questioned" , er, quite a bit.
If he feels that it has gotten to the point where it's a value judgement --
you think it's a severe limitation and he doesn't, for example -- and he has
expressed his opinion on that point, why insist on his repeating himself, or
criticize him for saying he's already addressed the point?

Brian





From harbour@lists.harbour-project.org  Mon Jan 22 15:40:04 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Mon Jan 22 15:40:04 2001
Subject: [Harbour] INLINE C Synopsis (version 2.0)
In-Reply-To: <008e01c084b2$08463d80$921a5e18@bh>; from bhays@abacuslaw.com on Mon, Jan 22, 2001 at 12:29:33PM -0800
References: <20010122165800.E12735@hagbard.davep.org> <LOBBKAFMMFGJIKLMEPAKMEBBDJAA.ron@profit-master.com> <20010122182828.H12735@hagbard.davep.org> <008e01c084b2$08463d80$921a5e18@bh>
Message-ID: <20010122203957.K12735@hagbard.davep.org>

On Mon, Jan 22, 2001 at 12:29:33PM -0800, Brian Hays wrote:
> Dave:
> 
> > Err, ok, that kind of makes it hard for anyone to gain more
> > understanding. Shame. A vote where the "candidates" won't allow
> > themselves to be questioned. Hmm.
> 
> I think Ron has "allowed himself to be questioned" , er, quite a bit. If
> he feels that it has gotten to the point where it's a value judgement --
> you think it's a severe limitation and he doesn't, for example -- and he
> has expressed his opinion on that point, why insist on his repeating
> himself, or criticize him for saying he's already addressed the point?

Why suggesting that I'm insisting on such a thing? If you re-read my email
you'll see that I'm asking questions about things that are new to the
proposal. Why purpose does it serve to suggest that I'm covering old ground
when I'm obviously not?

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Mon Jan 22 19:57:02 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Mon Jan 22 19:57:02 2001
Subject: [Harbour] callbacks
References: <LOBBKAFMMFGJIKLMEPAKMEAODJAA.ron@profit-master.com> <004e01c084aa$601f61b0$921a5e18@bh>
Message-ID: <00eb01c084d8$1f295a20$921a5e18@bh>

The good news:
a console app works fine with the ADS callbacks as long as the codeblock has
no detached variable references.

The other good news:
With the Remote server, even an FWH app works great.

The bad news:
As expected, the Windows GUI will not update if using the LOCAL server.
I've tried everything from updating a real meter to having a static dialog
variable and just setting the window text.  I have a file-wide static string
variable that concatenates info about each callback: The normal calls every
two seconds are not even happening, though one or two do occur. What's
worse, the indexing takes 3 times longer, indicating that timeouts are
occurring because of the I/O attempts.
This is consistent with what the ESI programmers are telling us, with their
cure being a second thread somewhere.

I will post this and other additions to rddads tonight...

Brian



From harbour@lists.harbour-project.org  Mon Jan 22 21:09:02 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Mon Jan 22 21:09:02 2001
Subject: [Harbour] CHANGELOG: 2000-01-22 18:00 UTC-0800
Message-ID: <019e01c084e2$28681900$921a5e18@bh>

2000-01-22 18:00 UTC-0800 Brian Hays <bhays@abacuslaw.com>
   * contrib/rdd_ads/adsfunc.c
      + added ADSRegCallBack(cbBlock) and ADSClrCallBack() to register a
callback function
         during index creation.

Brian Hays
Abacus Data Systems, Inc.



From harbour@lists.harbour-project.org  Mon Jan 22 21:10:04 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Mon Jan 22 21:10:04 2001
Subject: [Harbour] callbacks
In-Reply-To: <004e01c084aa$601f61b0$921a5e18@bh>
Message-ID: <3A6CF72F.10267.6F917F@localhost>

On 22 Jan 2001, at 11:34, Brian Hays wrote:

> Ron:   (Ryszard please note the @parameter issues discussed at the bottom)

OK. Noted :)

Regards, Ryszard

From harbour@lists.harbour-project.org  Mon Jan 22 21:14:01 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Mon Jan 22 21:14:01 2001
Subject: [Harbour] CHANGELOG: 2000-01-22 18:00 UTC-0800
Message-ID: <019f01c084e2$e3151960$921a5e18@bh>

2000-01-22 18:00 UTC-0800 Brian Hays <bhays@abacuslaw.com>
   * contrib/rdd_ads/ads1.c
      ! integrated AOF creation into dbSetFilter if SET OPTIMIZE is on.

      AdsCreateIndex():
         * fixed bug to set focus to the new order
         + added USECURRENT support for subindexing. Since ADS by default
does NOT
            obey the scope like COMIX, I create a While expression from the
index
            key and scope expression (if there is one).
            NOTE:
               if the new tag/file already exists AND a bagname specifies a
                  non-structural bag, it does not subindex!
                  All records get added to the index.
                  The app needs to see if it's there already and delete it.
                  (Temp tags created with USECURRENT to the structural index
are
                  always created correctly.)

   * contrib/rdd_ads/adsfunc.c
      *  ADSCustomizeAOF( [<nRecno | aRecNos>] [, <nType>] ) --> nSuccess
         Added support for default values (add current record to bitmap if
no
         parameters are passed) and for an array of record numbers to be
         passed so up to 16,383 records can be set or cleared with one call
to the
         server.
         Now returns 0 for success, otherwise the ADS error code.

      + added AdsIsIndexed() to quickly return if currently indexed vs.
natural order
         I hope to remove this if we agree to make it an rdd func

   * harbour/contrib/rdd_ads/doc/en/adsfuncs.txt
      *  documented ADSCustomizeAOF

   * harbour/include/ord.ch and hbapirdd.h
      + added constants for DBOI_OPTLEVEL return values
         #define DBOI_OPTIMIZED_NONE     0
         #define DBOI_OPTIMIZED_PART     1
         #define DBOI_OPTIMIZED_FULL     2

   * harbour/doc/en/hb_api.txt
      * added text for hb_param
   * harbour/doc/en/hb_apiit.txt
      * added text for hb_itemParam


Brian Hays
Abacus Data Systems, Inc.



From harbour@lists.harbour-project.org  Mon Jan 22 21:54:02 2001
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Mon Jan 22 21:54:02 2001
Subject: [Harbour] Sourceforge Feedback (and free t-shirts)
Message-ID: <3A6CABCC.877.105E3B5@localhost>

Forwarded from my regular mailbox. Reply address is 
Quentin Cregan <q@sourceforge.net>   

-----------------------------------

Hi There,  

My name is Quentin Cregan - and as you may know, I'm one of the 
Admins here at SourceForge.  

In short, your project is amongst the most active on the site, and 
we'd appreciate any time you could spare to drop us some 
feedback about the site, based on your experiences.  

As the site has grown, we've experienced a number of growing 
pains. We think we're on track to having the majority of these 
issues resolved in the coming weeks, if not days.  We're increasing 
staff, hardware and site bandwidth to remedy the hassles that 
we've had.  

We'd like to get some feedback from you with respect to the site 
and the services we provide - since we'd like to make the site as 
useful as we possibly can.  To do this, if you could comment on 
the following areas (just in an email reply), we'd be grateful.  

    - Your experience with site support
    - Your top requests for SourceForge features
    - Any general feedback or thoughts you'd 
care to share

I want to thank you in advance for your help.  The feedback will 
help us in improving the site.  As a further incentive, we have a 
number of SourceForge shirts to distribute to projects.  If you send 
us your regular postal address, we'll one in the mail.  

-Quentin  

-- |::: Quentin Cregan <q@sourceforge.net> 
|| SourceForge.NET Systems/Devel 
|::- "Strangers have the best lollies" 		
- Children's books you'll never see  



-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Mon Jan 22 22:14:02 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Mon Jan 22 22:14:02 2001
Subject: [Harbour] CHANGELOG: 2000-01-22 19:15 UTC-0800
Message-ID: <01cf01c084eb$076e8b40$921a5e18@bh>

2000-01-22 19:15 UTC-0800 Brian Hays <bhays@abacuslaw.com>
   * harbour/include/hbsetup.h
      + added #define OS_EOL_LEN  /* # of bytes in End of Line marker */
   * source/rtl/console.c
   * source/rtl/memoline.c
      + implemented OS_EOL_LEN


Brian Hays
Abacus Data Systems, Inc.



From harbour@lists.harbour-project.org  Tue Jan 23 16:19:01 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Tue Jan 23 16:19:01 2001
Subject: [Harbour] Harbour Debugger
Message-ID: <002601c08582$30043a40$0100007f@sl.conex.net>

Dear Friends

I´ve recieved today a patch that fix many problems of the current debugger
code.

I´ll upload the new version this weekend


Regards From Brazil

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Tue Jan 23 16:32:02 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Tue Jan 23 16:32:02 2001
Subject: [Harbour] Harbour Debugger
In-Reply-To: <002601c08582$30043a40$0100007f@sl.conex.net>
Message-ID: <000001c08583$ac917e00$0f2aa8c0@antonio>

Luiz,

> I´ve recieved today a patch that fix many problems of the current debugger
> code.

Very good news!

Thanks a lot, Luiz,

Antonio



From harbour@lists.harbour-project.org  Tue Jan 23 17:23:02 2001
From: harbour@lists.harbour-project.org (Compex Informatica - Jose Augusto Junior)
Date: Tue Jan 23 17:23:02 2001
Subject: [Harbour] How is this project?
Message-ID: <006e01c0858a$e7063a60$0400a8c0@sala_04.compex-ba.com.br>

I would like to know how is this Project. Does the compiler have RDD already
functional?
Is there any library function waiting to be written?
Where is the to-do list? Is it updated?
Thanks in advance.

Regards,

José Augusto Jr.
Compex informática





From harbour@lists.harbour-project.org  Tue Jan 23 17:55:03 2001
From: harbour@lists.harbour-project.org (Sid Saylors)
Date: Tue Jan 23 17:55:03 2001
Subject: [Harbour] Harbour Debugger
References: <002601c08582$30043a40$0100007f@sl.conex.net>
Message-ID: <000901c0858f$83d62180$aa4c0418@cx588881b>

Luiz , you are a good man.....................

Sid....


----- Original Message -----
From: "Luiz Rafael Culik Guimaraes" <culik@nh.conex.com.br>
To: <harbour@lists.harbour-project.org>
Sent: Tuesday, January 23, 2001 1:19 PM
Subject: [Harbour] Harbour Debugger


> Dear Friends
>
> I´ve recieved today a patch that fix many problems of the current debugger
> code.
>
> I´ll upload the new version this weekend
>
>
> Regards From Brazil
>
> Luiz Rafael Culik
>
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Tue Jan 23 23:03:02 2001
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Tue Jan 23 23:03:02 2001
Subject: [Harbour] Harbour Debugger
In-Reply-To: <002601c08582$30043a40$0100007f@sl.conex.net>
Message-ID: <3A6E0D8C.27341.66BB9B3@localhost>

On 23 Jan 2001, at 19:19, Luiz Rafael Culik Guimaraes wrote:

> Dear Friends
> 
> I=B4ve recieved today a patch that fix many problems of the current debu=
gger
> code.
> 
> I=B4ll upload the new version this weekend

Who did you recieve the patch from?


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Wed Jan 24 02:19:02 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Wed Jan 24 02:19:02 2001
Subject: [Harbour] Harbour Debugger
References: <3A6E0D8C.27341.66BB9B3@localhost>
Message-ID: <001c01c085d5$f9f3b300$0100007f@sl.conex.net>

Phil 
> Who did you recieve the patch from?

>From Fernando Luiz, an Brazilian friend

Regards

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Wed Jan 24 02:26:01 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Wed Jan 24 02:26:01 2001
Subject: [Harbour] Error system error with objects
Message-ID: <000901c085d7$992c1600$921a5e18@bh>

When a variable that is presumed to be an object is really a NIL,
referencing an Method with the colon creates a misleading error msg

oWnd := NIL
oWnd:End()

Error BASE/1001  Undefined function: END

Shouldn't this indicate that it is the Object that is missing, not the
function?

Brian Hays
Abacus Data Systems, Inc.



From harbour@lists.harbour-project.org  Wed Jan 24 03:24:02 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Wed Jan 24 03:24:02 2001
Subject: [Harbour] Error system error with objects
In-Reply-To: <000901c085d7$992c1600$921a5e18@bh>; from bhays@abacuslaw.com on Tue, Jan 23, 2001 at 11:30:59PM -0800
References: <000901c085d7$992c1600$921a5e18@bh>
Message-ID: <20010124082319.F20904@hagbard.davep.org>

On Tue, Jan 23, 2001 at 11:30:59PM -0800, Brian Hays wrote:
> When a variable that is presumed to be an object is really a NIL,
> referencing an Method with the colon creates a misleading error msg
> 
> oWnd := NIL
> oWnd:End()
> 
> Error BASE/1001  Undefined function: END
> 
> Shouldn't this indicate that it is the Object that is missing, not the
> function?

I can't speak for the design of harbour but in Clipper terms it's not
actually as wrong as you'd think. In CA-Clipper all values can be sent
messages (although the number of messages they will respond to is small):

,----
| C:\home\davep\x> cat foo.prg
| Function Main( cFile1, cFile2 )
| Local oWnd := NIL
| 
|    ? oWnd:className()
| 
| Return( NIL )
| 
| C:\home\davep\x> foo
| 
| NIL
`----

Your example, in CA-Clipper, gives:

,----
| C:\home\davep\x> cat foo.prg
| Function Main( cFile1, cFile2 )
| Local oWnd := NIL
| 
|    ? oWnd:close()
| 
| Return( NIL )
| 
| C:\home\davep\x> foo
| 
| Error BASE/1004  No exported method: CLOSE
| Called from CLOSE(0)
| Called from MAIN(4)
`----

As you can see, the error isn't that there is a "missing object" (there
isn't, NIL is an object), the error is that harbour is incorrectly reporting
the lack of a function of name FOO when it should really be reporting that
an object of type NIL can't respond to a message called `CLOSE'.

-- 
Dave Pearson                        |   w3ng - The WWW Norton Guide reader.
http://www.davep.org/               |     eg - Norton Guide reader for Linux.
http://www.davep.org/clipper/       |    weg - Norton Guide reader for Windows.
http://www.davep.org/norton-guides/ | dgscan - DGROUP scanner for Clipper.

From harbour@lists.harbour-project.org  Wed Jan 24 04:23:02 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Wed Jan 24 04:23:02 2001
Subject: [Harbour] Ron ... Problem with simplex and VC++
Message-ID: <200101240422_MC2-C2E2-27B4@compuserve.com>

Ron,

To this:

"John, Paul, can anyone else with VC report results using VC_SLEX.bat ?"

I posted:

>>>
OK.  I got a fresh update (20/1/01 approx 15:00 GMT) and it looks
like it built fine.

Nice job guys. :-)
<<<

But it turns out that my harbour.exe is a flex one.  Jean and I are
trying to find out why, but it's not proving easy.  I think it has
to be to do with the makefiles but we can't find what it is that the
BC slex does that we haven't got. :-(

I see source\compiler\makefile shows that we need to get HB_LEX set to
SIMPLEX, but I don't see how the BC slex build does that.

John.

From harbour@lists.harbour-project.org  Wed Jan 24 04:42:02 2001
From: harbour@lists.harbour-project.org (harbour@lists.harbour-project.org)
Date: Wed Jan 24 04:42:02 2001
Subject: [Harbour] Error system error with objects
In-Reply-To: <000901c085d7$992c1600$921a5e18@bh>
Message-ID: <3A6EB0EB.24892.593DAE@localhost>

Hi Brian

This is due to the way harbour is seeing the difference between a 
method or an object. When a function call is done, it became a 
method call if there is an object item pushed at the stack base 
(and so if and object is NUL... :-(( ). Perhaps Riszard could help 
here.

See you,

> When a variable that is presumed to be an object is really a NIL,
> referencing an Method with the colon creates a misleading error msg
> 
> oWnd := NIL
> oWnd:End()
> 
> Error BASE/1001  Undefined function: END
> 
> Shouldn't this indicate that it is the Object that is missing, not the
> function?
> 
> Brian Hays
> Abacus Data Systems, Inc.
> 
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre <jflefebv@mafact.com>
Mafact SA/NV
Belgium
(See us at http://www.mafact.com)
jflefebv@mafact.com


From harbour@lists.harbour-project.org  Wed Jan 24 11:16:03 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Wed Jan 24 11:16:03 2001
Subject: [Harbour] preprocessor bug (Alexander, Ron)
In-Reply-To: <3A6EB0EB.24892.593DAE@localhost>
Message-ID: <000201c08620$b25d2c60$0f2aa8c0@antonio>

Alexander, Ron,

A FWH user has reported us the following:

   @.5,2 SAY "test"      (notice there are no spaces between @ and .)

compiles ok with Clipper but fails with Harbour.

Thanks so much for your help,

Antonio



From harbour@lists.harbour-project.org  Wed Jan 24 14:08:02 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Wed Jan 24 14:08:02 2001
Subject: [Harbour] Error system error with objects
References: <000901c085d7$992c1600$921a5e18@bh> <20010124082319.F20904@hagbard.davep.org>
Message-ID: <003801c08638$d0789d70$921a5e18@bh>

Dave & JF:

Thanks for the clarification.   I guess the next question is whether Harbour
can do a better job reporting the condition than clipper.  The real
confusion is probably more when referencing iVars because it looks like the
Harbour class system has lost track of it rather than that the object is
missing.  I memorized the translation of this a while back and never got
around to mentioning it, but I've introduced two other programmers to
Harbour and have seen them both kill time chasing the wrong ghost as a
result of the msg.

Perhaps the simple fix for now is to alter the msg to:
    Error BASE/1001  Undefined function or no object: END

Brian

> > oWnd := NIL
> > oWnd:End()
> >
> > Error BASE/1001  Undefined function: END
> >

> I can't speak for the design of harbour but in Clipper terms it's not
> actually as wrong as you'd think...




From harbour@lists.harbour-project.org  Wed Jan 24 15:39:01 2001
From: harbour@lists.harbour-project.org (Ryszard Glab)
Date: Wed Jan 24 15:39:01 2001
Subject: [Harbour] Error system error with objects
In-Reply-To: <3A6EB0EB.24892.593DAE@localhost>
References: <000901c085d7$992c1600$921a5e18@bh>
Message-ID: <3A6F4C87.7253.52F84C3@localhost>

On 24 Jan 2001, at 10:39, jflefebv@mafact.com wrote:

> This is due to the way harbour is seeing the difference between a 
> method or an object. When a function call is done, it became a 
> method call if there is an object item pushed at the stack base 
> (and so if and object is NUL... :-(( ). Perhaps Riszard could help 
> here.

  Please notice that the VM is handling this correctly - it is passed to 
hb_vmSend() function. However there is an incorrect error message when 
there is NIL instead of an object passed (EG_NOFUNC). Should we change it 
to EG_NOMETHOD ?

Regards, Ryszard



From harbour@lists.harbour-project.org  Wed Jan 24 15:49:02 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Wed Jan 24 15:49:02 2001
Subject: [Harbour] preprocessor bug (Alexander, Ron)
In-Reply-To: <000201c08620$b25d2c60$0f2aa8c0@antonio>
References: <3A6EB0EB.24892.593DAE@localhost>
Message-ID: <200101242048.f0OKmn724844@thor.parrett.net>

** Reply to message from "Antonio Linares" <alinares@fivetech.com> on
Wed, 24 Jan 2001 17:14:15 +0100

> A FWH user has reported us the following:
> 
>    @.5,2 SAY "test"      (notice there are no spaces between @ and .)
> 
> compiles ok with Clipper but fails with Harbour.

And on Clipper, that will write to line 0, because float to int
truncates...
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Wed Jan 24 15:56:02 2001
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Wed Jan 24 15:56:02 2001
Subject: [Harbour] Error system error with objects
In-Reply-To: <3A6F4C87.7253.52F84C3@localhost>
References: <3A6EB0EB.24892.593DAE@localhost>
Message-ID: <200101242055.f0OKtM107779@ev6.be.wanadoo.com>

Hi Ryszard

> On 24 Jan 2001, at 10:39, jflefebv@mafact.com wrote:
> 
> > This is due to the way harbour is seeing the difference between a 
> > method or an object. When a function call is done, it became a 
> > method call if there is an object item pushed at the stack base 
> > (and so if and object is NUL... :-(( ). Perhaps Riszard could help here.

Oups, sorry to have mispelled your name ...
 
>   Please notice that the VM is handling this correctly - it is passed to
> hb_vmSend() function. However there is an incorrect error message when
> there is NIL instead of an object passed (EG_NOFUNC). Should we change it
> to EG_NOMETHOD ?

Yes, if we are sure we can only be there in case a message is 
sended to what we expect to be an object, so this should be 
EG_NOMETHOD.

You can do the modification if you want, otherwise I will do it 
tomorrow evening (sorry no time today)

Thanks Ryszard, see you,

> Regards, Ryszard
> 
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Wed Jan 24 17:16:01 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Wed Jan 24 17:16:01 2001
Subject: [Harbour] Error system error with objects
In-Reply-To: <003801c08638$d0789d70$921a5e18@bh>; from bhays@abacuslaw.com on Wed, Jan 24, 2001 at 11:06:50AM -0800
References: <000901c085d7$992c1600$921a5e18@bh> <20010124082319.F20904@hagbard.davep.org> <003801c08638$d0789d70$921a5e18@bh>
Message-ID: <20010124221008.D20904@hagbard.davep.org>

On Wed, Jan 24, 2001 at 11:06:50AM -0800, Brian Hays wrote:

> Thanks for the clarification. I guess the next question is whether Harbour
> can do a better job reporting the condition than clipper. 

The CA-Clipper error message is correct. How could harbour do it better?

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Wed Jan 24 22:14:02 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Wed Jan 24 22:14:02 2001
Subject: [Harbour] Error system error with objects
References: <000901c085d7$992c1600$921a5e18@bh> <20010124082319.F20904@hagbard.davep.org> <003801c08638$d0789d70$921a5e18@bh> <20010124221008.D20904@hagbard.davep.org>
Message-ID: <000901c0867d$aa294800$921a5e18@bh>

Dave:

> The CA-Clipper error message is correct. How could harbour do it better?

| Error BASE/1004  No exported method: CLOSE

In the case of   oWnd:close() :
If the "object" variable oWnd is not an object at all, and can be determined
to not be an object, I'd say it would be more helpful to say "Not an Object:
oWnd"


I understand your point explaining the low-level existence of msgs for any
data type.
But high-level code should not be dereferencing methods or ivars for other
data types, whether or not they exist at a low level.
I would consider Clipper's msg an "accurate" one for the initial error
condition, and mine a more well-researched one by the error handler.  But if
the needed info is not available for the better determination, so be it.

Brian


From harbour@lists.harbour-project.org  Wed Jan 24 23:02:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Wed Jan 24 23:02:02 2001
Subject: [Harbour] Error system error with objects
In-Reply-To: <000901c0867d$aa294800$921a5e18@bh>
Message-ID: <LOBBKAFMMFGJIKLMEPAKMEBMDJAA.ron@profit-master.com>

I believe the message can be changed to:

Error BASE/1004  No exported method: CLOSE in class: 'NIL'

Where class: will report Self:ClassName()

This should improve on Clipper while still allowing NIL to be considered a
valid basic type.

Ron

> Dave:
>
> > The CA-Clipper error message is correct. How could harbour do it better?
>
> | Error BASE/1004  No exported method: CLOSE
>
> In the case of   oWnd:close() :
> If the "object" variable oWnd is not an object at all, and can be
> determined
> to not be an object, I'd say it would be more helpful to say "Not
> an Object:
> oWnd"
>
>
> I understand your point explaining the low-level existence of msgs for any
> data type.
> But high-level code should not be dereferencing methods or ivars for other
> data types, whether or not they exist at a low level.
> I would consider Clipper's msg an "accurate" one for the initial error
> condition, and mine a more well-researched one by the error
> handler.  But if
> the needed info is not available for the better determination, so be it.
>
> Brian


From harbour@lists.harbour-project.org  Thu Jan 25 00:00:04 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 25 00:00:04 2001
Subject: [Harbour] ChangeLog 2001-01-24 20:50 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKMEBMDJAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKKEBNDJAA.ron@profit-master.com>

2001-01-24 20:50 UTC-0800 Ron Pinkas <ron@profit-master.com>
   * source/pp/ppcore.c
     ! Fixed compilation and parsing of #command of single and bi-char
operators
     ! Removed prior hack in hb_pp_RdStr() related to @[&-].

   * source/pp/pptable.c
     ! Fixed compilation of #command ?? [ <list,...> ] => QQOut( <list> )

   /* This [should] finally resolve all prior issues regarding @ and many
other problems, of operators as command keys. */

Similar should be applied to #translate, will try to review it soon.

Alexander?


From harbour@lists.harbour-project.org  Thu Jan 25 00:01:03 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 25 00:01:03 2001
Subject: [Harbour] preprocessor bug (Alexander, Ron)
In-Reply-To: <000201c08620$b25d2c60$0f2aa8c0@antonio>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOEBNDJAA.ron@profit-master.com>

Fixed.

> Alexander, Ron,
> 
> A FWH user has reported us the following:
> 
>    @.5,2 SAY "test"      (notice there are no spaces between @ and .)
> 
> compiles ok with Clipper but fails with Harbour.
> 
> Thanks so much for your help,
> 
> Antonio


From harbour@lists.harbour-project.org  Thu Jan 25 03:58:02 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 25 03:58:02 2001
Subject: [Harbour] Error system error with objects
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKMEBMDJAA.ron@profit-master.com>; from ron@profit-master.com on Wed, Jan 24, 2001 at 08:02:43PM -0800
References: <000901c0867d$aa294800$921a5e18@bh> <LOBBKAFMMFGJIKLMEPAKMEBMDJAA.ron@profit-master.com>
Message-ID: <20010125084706.H20904@hagbard.davep.org>

On Wed, Jan 24, 2001 at 08:02:43PM -0800, Ron Pinkas wrote:

> I believe the message can be changed to:
> 
> Error BASE/1004  No exported method: CLOSE in class: 'NIL'
> 
> Where class: will report Self:ClassName()
> 
> This should improve on Clipper while still allowing NIL to be considered a
> valid basic type.

That'd be perfect.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 25 03:58:38 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Thu Jan 25 03:58:38 2001
Subject: [Harbour] Error system error with objects
In-Reply-To: <000901c0867d$aa294800$921a5e18@bh>; from bhays@abacuslaw.com on Wed, Jan 24, 2001 at 07:19:43PM -0800
References: <000901c085d7$992c1600$921a5e18@bh> <20010124082319.F20904@hagbard.davep.org> <003801c08638$d0789d70$921a5e18@bh> <20010124221008.D20904@hagbard.davep.org> <000901c0867d$aa294800$921a5e18@bh>
Message-ID: <20010125084624.G20904@hagbard.davep.org>

On Wed, Jan 24, 2001 at 07:19:43PM -0800, Brian Hays wrote:
> Dave:
> 
> > The CA-Clipper error message is correct. How could harbour do it better?
> 
> | Error BASE/1004  No exported method: CLOSE
> 
> In the case of   oWnd:close() :
> If the "object" variable oWnd is not an object at all, and can be determined
> to not be an object, I'd say it would be more helpful to say "Not an Object:
> oWnd"

Except that NIL can be seen as an object because values in Clipper can
accept messages. Hopefully, at some point in the near future, harbour's OO
support will allow for scalar classes so such a message would be wrong.
CA-Clipper's message makes more sense in both cases.

> But high-level code should not be dereferencing methods or ivars for other
> data types, whether or not they exist at a low level.

Why not? I've got code that has done this in CA-Clipper, both when using
Class(y) scalar classes and when not.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Thu Jan 25 10:32:02 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Thu Jan 25 10:32:02 2001
Subject: [Harbour] Error system error with objects
References: <LOBBKAFMMFGJIKLMEPAKMEBMDJAA.ron@profit-master.com>
Message-ID: <003a01c086e4$b9910b90$921a5e18@bh>

> I believe the message can be changed to:
>
> Error BASE/1004  No exported method: CLOSE in class: 'NIL'
>
> Where class: will report Self:ClassName()
>
> This should improve on Clipper while still allowing NIL to be considered a
> valid basic type.
>
> Ron

Great!  Nothing better than getting all the info!

Brian


From harbour@lists.harbour-project.org  Thu Jan 25 15:05:04 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 25 15:05:04 2001
Subject: [Harbour] Ron ... Problem with simplex and VC++
In-Reply-To: <200101240422_MC2-C2E2-27B4@compuserve.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKIECADJAA.ron@profit-master.com>

John,

I have all reasons to believe you *do* have a SimpLex Harbour, which just
reports Flex, because your make file does not set -DSIMPLEX for CLIBFLAGS.

The reporting is driven by hbver.c, which must be compiled with -DSIMPLEX to
set the correct reported value.

An easy way to know if your Harbour.exe is Flex or SimpLex, is to compile
tests\keywords.prg. Flex build will report 20 errors, SimpLex will report
only 3.

Please let me know...

Ron

> Ron,
>
> To this:
>
> "John, Paul, can anyone else with VC report results using VC_SLEX.bat ?"
>
> I posted:
>
> >>>
> OK.  I got a fresh update (20/1/01 approx 15:00 GMT) and it looks
> like it built fine.
>
> Nice job guys. :-)
> <<<
>
> But it turns out that my harbour.exe is a flex one.  Jean and I are
> trying to find out why, but it's not proving easy.  I think it has
> to be to do with the makefiles but we can't find what it is that the
> BC slex does that we haven't got. :-(
>
> I see source\compiler\makefile shows that we need to get HB_LEX set to
> SIMPLEX, but I don't see how the BC slex build does that.
>
> John.


From harbour@lists.harbour-project.org  Thu Jan 25 15:14:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 25 15:14:02 2001
Subject: [Harbour] ChangeLog 2001-01-25 12:00 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKIECADJAA.ron@profit-master.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKAECBDJAA.ron@profit-master.com>

2001-01-25 12:00 UTC-0800 Ron Pinkas <ron@profit-master.com>
   * source/vm/hvm.c
     * Modified error messages in hb_vmSend() to report class name of native
types (including NIL) along with missing method name.
     + Added default implementation of ClassName() method of native types.

     /* J.F. Can you please check why hb_objGetClsName() was not working
correctly when called from hb_vmSend() ?
        It was returning empty string ("") on my BCC55 latest build. */

   * tests/clasname.prg
     + Added Arrays to types checked.


From harbour@lists.harbour-project.org  Thu Jan 25 16:09:02 2001
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Thu Jan 25 16:09:02 2001
Subject: [Harbour] ChangeLog 2001-01-25 12:00 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKAECBDJAA.ron@profit-master.com>
References: <LOBBKAFMMFGJIKLMEPAKIECADJAA.ron@profit-master.com>
Message-ID: <200101252108.f0PL86119575@ev6.be.wanadoo.com>

Hi Ron

good job, thanks,

> 2001-01-25 12:00 UTC-0800 Ron Pinkas <ron@profit-master.com>
>    * source/vm/hvm.c
>      * Modified error messages in hb_vmSend() to report class name of
>      native
> types (including NIL) along with missing method name.
>      + Added default implementation of ClassName() method of native types.
> 
>      /* J.F. Can you please check why hb_objGetClsName() was not working
> correctly when called from hb_vmSend() ?
>         It was returning empty string ("") on my BCC55 latest build. */


Ok, Will have a look ASAP.
 
>    * tests/clasname.prg
>      + Added Arrays to types checked.
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Thu Jan 25 16:17:02 2001
From: harbour@lists.harbour-project.org (JF Lefebvre)
Date: Thu Jan 25 16:17:02 2001
Subject: [Harbour] Ron ... Problem with simplex and VC++
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKIECADJAA.ron@profit-master.com>
References: <200101240422_MC2-C2E2-27B4@compuserve.com>
Message-ID: <200101252116.f0PLGU121458@ev6.be.wanadoo.com>

Ron,

> John,
> 
> I have all reasons to believe you *do* have a SimpLex Harbour, which just
> reports Flex, because your make file does not set -DSIMPLEX for CLIBFLAGS.

You can check it easily and unfortunatly ... Yes it does.
 
> The reporting is driven by hbver.c, which must be compiled with -DSIMPLEX
> to set the correct reported value.

There is something wrong with our make file, I'm 100% sure and 
the result is some mixed Flex/Simplex exe. I'm sure the problem is 
not only related to hbver.c not correctly compiled.
 
> An easy way to know if your Harbour.exe is Flex or SimpLex, is to compile
> tests\keywords.prg. Flex build will report 20 errors, SimpLex will report
> only 3.
> 
> Please let me know...

I can't do the test just because I always can't compile with VC++ 
SVP3. I think one difference with John is that he use an older 
compiler (And so need the -Tp 'hack' to allow the compilation). I 
don't need it but can't compile any empty prg. (empty mean really 
empty one or full of comments).

I continue to investigate (even if I became to not see anymore 
where to search :((( ) 


> Ron
> ...



Best regards,

J. Lefebvre,
Bruxelles,
Belgium


From harbour@lists.harbour-project.org  Thu Jan 25 17:47:02 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Thu Jan 25 17:47:02 2001
Subject: [Harbour] Debugger Enhacements
Message-ID: <000d01c08720$bffce8a0$0100007f@sl.conex.net>

Antonio,Ron,Ryszard,Patrick,All

I´ll upload the follow enhacementest to the Debugger this weekend, They are.

DbgArray ->Debugger functions for Array Variable
DbgObject -> Debugger functions for Objects Variable
DbgDbf  -> Debugger Functions for DataBases

I´d also like to know if some one is working on hb_vmLocalNames()

Any it is possible to extend the function __mvDbfinfo() to accept the follow
HB_MV_LOCAL -> info for local variables
HB_MV_STATICW -> for globals Static variasbles
HB_MV_STATICL -> For Static Variables defined inside an Function

Also is missing an VM function that return the name and value of the static
variable

Regards From Brazil

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Thu Jan 25 19:33:02 2001
From: harbour@lists.harbour-project.org (Paul Tucker)
Date: Thu Jan 25 19:33:02 2001
Subject: [Harbour] Ron ... Problem with simplex and VC++
References: <200101240422_MC2-C2E2-27B4@compuserve.com> <200101252116.f0PLGU121458@ev6.be.wanadoo.com>
Message-ID: <001001c0872f$379b2120$27141e0a@QUARRY>

Just fwiw - I can take a look at the vc problems, but not till the weekend.

Sorry for the delay.

Paul
----- Original Message -----
From: "JF Lefebvre" <jfl@wanadoo.be>
To: <harbour@lists.harbour-project.org>
Sent: Thursday, January 25, 2001 4:15 PM
Subject: RE: [Harbour] Ron ... Problem with simplex and VC++


> Ron,
>
> > John,
> >
> > I have all reasons to believe you *do* have a SimpLex Harbour, which
just
> > reports Flex, because your make file does not set -DSIMPLEX for
CLIBFLAGS.
>
> You can check it easily and unfortunatly ... Yes it does.
>
> > The reporting is driven by hbver.c, which must be compiled
with -DSIMPLEX
> > to set the correct reported value.
>
> There is something wrong with our make file, I'm 100% sure and
> the result is some mixed Flex/Simplex exe. I'm sure the problem is
> not only related to hbver.c not correctly compiled.
>
> > An easy way to know if your Harbour.exe is Flex or SimpLex, is to
compile
> > tests\keywords.prg. Flex build will report 20 errors, SimpLex will
report
> > only 3.
> >
> > Please let me know...
>
> I can't do the test just because I always can't compile with VC++
> SVP3. I think one difference with John is that he use an older
> compiler (And so need the -Tp 'hack' to allow the compilation). I
> don't need it but can't compile any empty prg. (empty mean really
> empty one or full of comments).
>
> I continue to investigate (even if I became to not see anymore
> where to search :((( )
>
>
> > Ron
> > ...
>
>
>
> Best regards,
>
> J. Lefebvre,
> Bruxelles,
> Belgium



From harbour@lists.harbour-project.org  Thu Jan 25 21:28:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 25 21:28:02 2001
Subject: [Harbour] Ron ... Problem with simplex and VC++
In-Reply-To: <200101252116.f0PLGU121458@ev6.be.wanadoo.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKCECCDJAA.ron@profit-master.com>

J.F.,

I've just installed new VisualStudio.NET (beta 1) which includes VC7. I'll
check and let you know soon...

Ron

> Ron,
>
> > John,
> >
> > I have all reasons to believe you *do* have a SimpLex Harbour,
> which just
> > reports Flex, because your make file does not set -DSIMPLEX for
> CLIBFLAGS.
>
> You can check it easily and unfortunatly ... Yes it does.
>
> > The reporting is driven by hbver.c, which must be compiled with
> -DSIMPLEX
> > to set the correct reported value.
>
> There is something wrong with our make file, I'm 100% sure and
> the result is some mixed Flex/Simplex exe. I'm sure the problem is
> not only related to hbver.c not correctly compiled.
>
> > An easy way to know if your Harbour.exe is Flex or SimpLex, is
> to compile
> > tests\keywords.prg. Flex build will report 20 errors, SimpLex
> will report
> > only 3.
> >
> > Please let me know...
>
> I can't do the test just because I always can't compile with VC++
> SVP3. I think one difference with John is that he use an older
> compiler (And so need the -Tp 'hack' to allow the compilation). I
> don't need it but can't compile any empty prg. (empty mean really
> empty one or full of comments).
>
> I continue to investigate (even if I became to not see anymore
> where to search :((( )


From harbour@lists.harbour-project.org  Thu Jan 25 21:34:02 2001
From: harbour@lists.harbour-project.org (Compex Informatica - Jose Augusto Junior)
Date: Thu Jan 25 21:34:02 2001
Subject: [Harbour] How is this Project?
Message-ID: <00d101c08740$369eb000$0400a8c0@sala_04.compex-ba.com.br>

This is a multi-part message in MIME format.

------=_NextPart_000_00CE_01C0872F.724C7580
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

I would like to know how is Harbour?=20
Is it far from Clipper? Or its almost done?



Jos=E9 Augusto M. de Andrade J=FAnior
Compex Inform=E1tica
(75) 7311715 /  (75) 9981-7220


------=_NextPart_000_00CE_01C0872F.724C7580
Content-Type: text/html;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

<!DOCTYPE HTML PUBLIC "-//W3C//DTD W3 HTML//EN">
<HTML>
<HEAD>

<META content=3Dtext/html;charset=3Diso-8859-1 =
http-equiv=3DContent-Type>
<META content=3D'"MSHTML 4.72.3110.7"' name=3DGENERATOR>
</HEAD>
<BODY bgColor=3D#ffffff>
<DIV><FONT color=3D#000000 size=3D2>I would like to know how is Harbour? =

</FONT></DIV>
<DIV><FONT color=3D#000000 size=3D2></FONT><FONT size=3D2>Is it far from =
Clipper? Or=20
its almost done?</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV>&nbsp;</DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT color=3D#000000 size=3D2>Jos&eacute; Augusto M. de Andrade=20
J&uacute;nior<BR>Compex Inform&aacute;tica<BR>(75) 7311715 /&nbsp; (75)=20
9981-7220<BR></FONT></DIV></BODY></HTML>

------=_NextPart_000_00CE_01C0872F.724C7580--


From harbour@lists.harbour-project.org  Thu Jan 25 21:54:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 25 21:54:02 2001
Subject: [Harbour] How is this Project?
In-Reply-To: <00d101c08740$369eb000$0400a8c0@sala_04.compex-ba.com.br>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOECCDJAA.ron@profit-master.com>

Hi Jose,

> I would like to know how is Harbour?
> Is it far from Clipper? Or its almost done?

Harbour is very close to being complete. In terms of functionality we still
miss the DBFNTX and DBFCDX which are started but not complete (might be very
soon). We do have practically complete ADS RDD, which work with ADS (both
NTX & CDX) Local Server, which is FREE on Windows.

Outside of the RDD, the rest is pretty complete, and seems very stable, but
is still in alpha stage.

BTW, please post in plain text to this group.

Welcome.

Ron


From harbour@lists.harbour-project.org  Thu Jan 25 23:49:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Thu Jan 25 23:49:02 2001
Subject: [Harbour] Ron ... Problem with simplex and VC++
In-Reply-To: <200101252116.f0PLGU121458@ev6.be.wanadoo.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKIECDDJAA.ron@profit-master.com>

J.F.,

I see a problem when compiling hbver.c it behaves as if -DSIMPLEX not
provided. Is it possible that *2* -D not allowed in one command line?

Why do we need -D_MSC_VER=1010

BTW, I don't have masm, can you please forward symbols.obj?

Still looking...

Ron


From harbour@lists.harbour-project.org  Fri Jan 26 03:41:06 2001
From: harbour@lists.harbour-project.org (harbour@lists.harbour-project.org)
Date: Fri Jan 26 03:41:06 2001
Subject: [Harbour] Ron ... Problem with simplex and VC++
In-Reply-To: <LOBBKAFMMFGJIKLMEPAKIECDDJAA.ron@profit-master.com>
References: <200101252116.f0PLGU121458@ev6.be.wanadoo.com>
Message-ID: <3A714600.12101.565421@localhost>

Hi Ron

> 
> I see a problem when compiling hbver.c it behaves as if -DSIMPLEX not
> provided. Is it possible that *2* -D not allowed in one command line?

Yes, good remark, could be the problem. I think to remember this 
is not allowed with the VC make file, but not sure.
 
> Why do we need -D_MSC_VER=1010

There was a time where it was needed, ... new test to be done, 
surely.

> BTW, I don't have masm, can you please forward symbols.obj?

Will try to find it here at my office (where harbour is not installed :(( )
 
> Still looking...

Many thanks,

Best regards,

J. Lefebvre <jflefebv@mafact.com>
Mafact SA/NV
Belgium
(See us at http://www.mafact.com)
jflefebv@mafact.com


From harbour@lists.harbour-project.org  Fri Jan 26 03:47:02 2001
From: harbour@lists.harbour-project.org (harbour@lists.harbour-project.org)
Date: Fri Jan 26 03:47:02 2001
Subject: [Harbour] Ron ... Problem with simplex and VC++
In-Reply-To: <001001c0872f$379b2120$27141e0a@QUARRY>
Message-ID: <3A71472C.24955.5AEB05@localhost>

Thanks Paul

> Just fwiw - I can take a look at the vc problems, but not till the
> weekend.
> 
> Sorry for the delay.
> 
> Paul
> ----- Original Message -----
> From: "JF Lefebvre" <jfl@wanadoo.be>
> To: <harbour@lists.harbour-project.org>
> Sent: Thursday, January 25, 2001 4:15 PM
> Subject: RE: [Harbour] Ron ... Problem with simplex and VC++
> 
> 
> > Ron,
> >
> > > John,
> > >
> > > I have all reasons to believe you *do* have a SimpLex Harbour,
> > > which
> just
> > > reports Flex, because your make file does not set -DSIMPLEX for
> CLIBFLAGS.
> >
> > You can check it easily and unfortunatly ... Yes it does.
> >
> > > The reporting is driven by hbver.c, which must be compiled
> with -DSIMPLEX
> > > to set the correct reported value.
> >
> > There is something wrong with our make file, I'm 100% sure and
> > the result is some mixed Flex/Simplex exe. I'm sure the problem is
> > not only related to hbver.c not correctly compiled.
> >
> > > An easy way to know if your Harbour.exe is Flex or SimpLex, is to
> compile
> > > tests\keywords.prg. Flex build will report 20 errors, SimpLex will
> report
> > > only 3.
> > >
> > > Please let me know...
> >
> > I can't do the test just because I always can't compile with VC++
> > SVP3. I think one difference with John is that he use an older
> > compiler (And so need the -Tp 'hack' to allow the compilation). I
> > don't need it but can't compile any empty prg. (empty mean really
> > empty one or full of comments).
> >
> > I continue to investigate (even if I became to not see anymore
> > where to search :((( )
> >
> >
> > > Ron
> > > ...
> >
> >
> >
> > Best regards,
> >
> > J. Lefebvre,
> > Bruxelles,
> > Belgium
> 
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre <jflefebv@mafact.com>
Mafact SA/NV
Belgium
(See us at http://www.mafact.com)
jflefebv@mafact.com


From harbour@lists.harbour-project.org  Fri Jan 26 03:48:01 2001
From: harbour@lists.harbour-project.org (Charles Kwon ( Kwon,Oh-Jun))
Date: Fri Jan 26 03:48:01 2001
Subject: [Harbour] FREE MASM From Microsoft
References: <200101252116.f0PLGU121458@ev6.be.wanadoo.com> <3A714600.12101.565421@localhost>
Message-ID: <000801c08773$b889c7c0$0200a8c0@ns>

SWYgeW91IHdhbnQgTUFTTSAoIE1hY3JvIEFzc2VtYmxlciApDQoNClBsZWFzZSBkb3dubG9hZCBp
dCBmb2xsb3dpbmcgc2l0ZQ0KaHR0cDovL2Rvd25sb2FkLm1pY3Jvc29mdC5jb20vZG93bmxvYWQv
d2luOThTRS9JbnN0YWxsL0dvbGQvVzk4L0VOLVVTLzk4RERLLkVYRQ0KDQpCZXN0IFJlZ2FyZHMs
DQpDaGFybGVzIEt3b24gDQoNCmh0dHA6Ly93d3cuZml2ZXRlY2gubmV0DQpodHRwOi8vZW5nbGlz
aC5maXZldGVjaC5uZXQNCmh0dHA6Ly9zcGFpbi5maXZldGVjaC5uZXQNCg0KRml2ZVRlY2guTmV0
DQpURUwgOiArODItMi01NjYtNjgyNg0KSUNRIDogMTkzMDIyNTgNCi0tLS0tIE9yaWdpbmFsIE1l
c3NhZ2UgLS0tLS0gDQo/PyA/PzogPGpmbGVmZWJ2QG1hZmFjdC5iZT4NCj8/ID8/OiA8aGFyYm91
ckBsaXN0cy5oYXJib3VyLXByb2plY3Qub3JnPg0KPz8gPz86IDIwMDE/IDE/IDI2PyA/Pz8gPz8g
NTo0MA0KPz86IFJFOiBbSGFyYm91cl0gUm9uIC4uLiBQcm9ibGVtIHdpdGggc2ltcGxleCBhbmQg
VkMrKw0KDQoNCjogSGkgUm9uDQo6IA0KOiA+IA0KOiA+IEkgc2VlIGEgcHJvYmxlbSB3aGVuIGNv
bXBpbGluZyBoYnZlci5jIGl0IGJlaGF2ZXMgYXMgaWYgLURTSU1QTEVYIG5vdA0KOiA+IHByb3Zp
ZGVkLiBJcyBpdCBwb3NzaWJsZSB0aGF0ICoyKiAtRCBub3QgYWxsb3dlZCBpbiBvbmUgY29tbWFu
ZCBsaW5lPw0KOiANCjogWWVzLCBnb29kIHJlbWFyaywgY291bGQgYmUgdGhlIHByb2JsZW0uIEkg
dGhpbmsgdG8gcmVtZW1iZXIgdGhpcyANCjogaXMgbm90IGFsbG93ZWQgd2l0aCB0aGUgVkMgbWFr
ZSBmaWxlLCBidXQgbm90IHN1cmUuDQo6ICANCjogPiBXaHkgZG8gd2UgbmVlZCAtRF9NU0NfVkVS
PTEwMTANCjogDQo6IFRoZXJlIHdhcyBhIHRpbWUgd2hlcmUgaXQgd2FzIG5lZWRlZCwgLi4uIG5l
dyB0ZXN0IHRvIGJlIGRvbmUsIA0KOiBzdXJlbHkuDQo6IA0KOiA+IEJUVywgSSBkb24ndCBoYXZl
IG1hc20sIGNhbiB5b3UgcGxlYXNlIGZvcndhcmQgc3ltYm9scy5vYmo/DQo6IA0KOiBXaWxsIHRy
eSB0byBmaW5kIGl0IGhlcmUgYXQgbXkgb2ZmaWNlICh3aGVyZSBoYXJib3VyIGlzIG5vdCBpbnN0
YWxsZWQgOigoICkNCjogIA0KOiA+IFN0aWxsIGxvb2tpbmcuLi4NCjogDQo6IE1hbnkgdGhhbmtz
LA0KOiANCjogQmVzdCByZWdhcmRzLA0KOiANCjogSi4gTGVmZWJ2cmUgPGpmbGVmZWJ2QG1hZmFj
dC5jb20+DQo6IE1hZmFjdCBTQS9OVg0KOiBCZWxnaXVtDQo6IChTZWUgdXMgYXQgaHR0cDovL3d3
dy5tYWZhY3QuY29tKQ0KOiBqZmxlZmVidkBtYWZhY3QuY29tDQo6IA0KOiBfX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXw0KOiBIYXJib3VyIG1haWxpbmcgbGlz
dA0KOiBIYXJib3VyQGxpc3RzLmhhcmJvdXItcHJvamVjdC5vcmcNCjogaHR0cDovL3d3dy5tYXRy
aXhsaXN0LmNvbS9tYWlsbWFuL2xpc3RpbmZvL2hhcmJvdXINCjogDQo6IFRoYW5rIHlvdSBmb3Ig
cGFydGljaXBhdGluZyBpbiBUaGUgSGFyYm91ciBQcm9qZWN0LiAgQmUgc3VyZSB0byBjaGVjaw0K
OiBodHRwOi8vd3d3LkhhcmJvdXItUHJvamVjdC5vcmcNCg==


From harbour@lists.harbour-project.org  Fri Jan 26 06:38:02 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Fri Jan 26 06:38:02 2001
Subject: [Harbour] Ron ... Problem with simplex and VC++
Message-ID: <200101260635_MC2-C318-8A06@compuserve.com>

Ron,

"Is it possible that *2* -D not allowed in one command line?"

Not really.  I do it all the time. :-)

"Why do we need -D_MSC_VER=3D1010"

It doesn't work (for me; don't know about others) with a smaller
number, I think because some of the files check for various versions
but (for me) don't work.  This was discussed quite a bit some months
ago.  The above -D turned out to be a fix.

John.

From harbour@lists.harbour-project.org  Fri Jan 26 06:38:28 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Fri Jan 26 06:38:28 2001
Subject: [Harbour] Ron ... Problem with simplex and VC++
Message-ID: <200101260635_MC2-C318-8A07@compuserve.com>

Ron,

"I have all reasons to believe you *do* have a SimpLex Harbour, which jus=
t
reports Flex, because your make file does not set -DSIMPLEX for CLIBFLAGS=
."

I _do_ have that in CLIBFLAGS.

"The reporting is driven by hbver.c, which must be compiled with -DSIMPLE=
X to
set the correct reported value."

hbver.obj contains the string SimpLex but not Flex.

harbour.exe has the same date & time as hbver.obj, as does common.lib.
harbour.exe reports it is ... (Flex).

"tests\keywords.prg. Flex build will report 20 errors, SimpLex will repor=
t
only 3."

I got "3 errors".

So, appears to be a simplex build but which reports itself as flex!

John.

From harbour@lists.harbour-project.org  Fri Jan 26 12:50:03 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Fri Jan 26 12:50:03 2001
Subject: [Harbour] Debugger Enhacements
In-Reply-To: <000d01c08720$bffce8a0$0100007f@sl.conex.net>
Message-ID: <000101c087bf$fa7be220$0f2aa8c0@antonio>

Luiz,

> I´ll upload the follow enhacementest to the Debugger this
> weekend, They are.
> DbgArray ->Debugger functions for Array Variable
> DbgObject -> Debugger functions for Objects Variable
> DbgDbf  -> Debugger Functions for DataBases

Great!!! Thanks a lot!!!!!

> I´d also like to know if some one is working on hb_vmLocalNames()
>
> Any it is possible to extend the function __mvDbfinfo() to accept
> the follow
> HB_MV_LOCAL -> info for local variables
> HB_MV_STATICW -> for globals Static variasbles
> HB_MV_STATICL -> For Static Variables defined inside an Function
>
> Also is missing an VM function that return the name and value of
> the static variable

I will have a look and see if I can help,

Antonio



From harbour@lists.harbour-project.org  Fri Jan 26 14:30:04 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Fri Jan 26 14:30:04 2001
Subject: [Harbour] Ron ... Problem with simplex and VC++
In-Reply-To: <200101260635_MC2-C318-8A07@compuserve.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKEECFDJAA.ron@profit-master.com>

John,

Just add -DSIMPLEX on line 870 after $(CFLAGS) in the harbour.exe production
rule.

I was able to build without a problem and get correct reporting with doing
the above. In my case I also removed the -D_MSC_VER=1010.

I had to change the production rule for symbols.asm, I think it is wrong, as
it has to use /Fo...

But one can also remove hbrun.exe from list of targets, as this is the only
file that needs symbols.obj

Ron

> Ron,
>
> "I have all reasons to believe you *do* have a SimpLex Harbour, which just
> reports Flex, because your make file does not set -DSIMPLEX for
> CLIBFLAGS."
>
> I _do_ have that in CLIBFLAGS.
>
> "The reporting is driven by hbver.c, which must be compiled with
> -DSIMPLEX to
> set the correct reported value."
>
> hbver.obj contains the string SimpLex but not Flex.
>
> harbour.exe has the same date & time as hbver.obj, as does common.lib.
> harbour.exe reports it is ... (Flex).
>
> "tests\keywords.prg. Flex build will report 20 errors, SimpLex will report
> only 3."
>
> I got "3 errors".
>
> So, appears to be a simplex build but which reports itself as flex!
>
> John.


From harbour@lists.harbour-project.org  Fri Jan 26 16:25:04 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Fri Jan 26 16:25:04 2001
Subject: [Harbour] harbour app blows up
Message-ID: <003601c087e0$49ea9bb0$59f6fbce@local>

There are still some core memory problems that cause a large app to just
blow up.
If anyone can offer any ideas how to debug this, we're all ears because we
have spent _Days_ chasing it to no avail.

First of all, there is still a problem with large arrays passed by reference
through multiple levels of functions and codeblocks. I have been unable to
isolate a small test to duplicate it.  But code that works perfect in
Clipper has an array that simply becomes NIL for no good reason somewhere
along the line.  Would it be possible to have a PRG call to lock such an
array so no garbage collection would ever touch it ?  That would isolate
whether or not it is the GC that kills it.  Is there a debugging call we can
make to turn off all GC activity to similarly determine if it's a GC
problem?
Perhaps we could have a debugging tool to get the address of that array
early on, and in the GC test for that address and trace the conditions (call
stack?) under which it kills that array?

Our second problem is a bit more insipid.  When we run some reports with our
report engine, it can run fine for many reports.
But for some reports, somewhere in the middle (maybe 100 or so records
processed), the app simply goes away.
No errors thrown, no traces, just gone.  Putting traces in to determine
exactly where it blows is useless, as it just blows up somewhere else if we
change any code.  What's interesting is there does not seem to be any extra
balloning memory allocations that build up.

We've determined for this particular problem that one sub-array element is
empty for the reports that blow. This element preprocesses to oRP[9][4,1].
However, there is NO PROBLEM accessing it.  There are only two lines of code
that touch it, both simply testing for EMPTY:
    #define     R_DATE_WHO      oRP[9][4,1]
    IF ! EMPTY(R_DATE_WHO) ....

again, nothing blows up here, but if that element is empty it will blow.  We
are trying to determine how the 3 other lines of code that are called if it
is NOT empty could possibly set something up that stops the blow up. . . .

Any ideas or tools that might help would be greatly appreciated !!


Brian







From harbour@lists.harbour-project.org  Fri Jan 26 16:42:02 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Fri Jan 26 16:42:02 2001
Subject: [Harbour] harbour app blows up
In-Reply-To: <003601c087e0$49ea9bb0$59f6fbce@local>
Message-ID: <200101262141.f0QLfe203067@thor.parrett.net>

** Reply to message from "Brian Hays" <bhays@abacuslaw.com> on Fri, 26
Jan 2001 13:38:13 -0800

> Is there a debugging call we can make to turn off all GC activity to 
> similarly determine if it's a GC problem?

No, but you can comment out the call to hb_gcCollectAll() in the
hb_idleState() in source/rtl/idle.c module.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Fri Jan 26 16:55:03 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Fri Jan 26 16:55:03 2001
Subject: [Harbour] harbour app blows up
References: <200101262141.f0QLfe203067@thor.parrett.net>
Message-ID: <005a01c087e4$7196b7d0$59f6fbce@local>

Thanks, David.

This is an FWH app. I'll try killing the one in idle.c, but I'm not sure it
gets used.
I've disabled the one I can find in the Fivewin code.
Antonio, are there other calls to hb_gcAll or hb_gcCollectAll() other than
in Dialog:end()?  Does FWH use idle.c functions?

I guess the thing to do is just have hb_gcCollectAll() return
immediately....
Still, it might be a tool worth having to be able to turn the GC off....

Brian

----- Original Message -----
From: David G. Holm <dholm@jsd-llc.com>
To: <harbour@lists.harbour-project.org>
Sent: Friday, January 26, 2001 1:41 PM
Subject: Re: [Harbour] harbour app blows up


> ** Reply to message from "Brian Hays" <bhays@abacuslaw.com> on Fri, 26
> Jan 2001 13:38:13 -0800
>
> > Is there a debugging call we can make to turn off all GC activity to
> > similarly determine if it's a GC problem?
>
> No, but you can comment out the call to hb_gcCollectAll() in the
> hb_idleState() in source/rtl/idle.c module.
> --
> David G. Holm, Set Captain and all around
> Harbour Project Clipper Compatibility fanatic.
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>



From harbour@lists.harbour-project.org  Fri Jan 26 17:01:02 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Fri Jan 26 17:01:02 2001
Subject: [Harbour] harbour app blows up
In-Reply-To: <005a01c087e4$7196b7d0$59f6fbce@local>
References: <200101262141.f0QLfe203067@thor.parrett.net>
Message-ID: <200101262200.f0QM0X204387@thor.parrett.net>

** Reply to message from "Brian Hays" <bhays@abacuslaw.com> on Fri, 26
Jan 2001 14:07:58 -0800

> Still, it might be a tool worth having to be able to turn the GC off....

Yes, it sounds like it might be, at that.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Fri Jan 26 18:27:02 2001
From: harbour@lists.harbour-project.org (Antonio Linares)
Date: Fri Jan 26 18:27:02 2001
Subject: [Harbour] harbour app blows up
In-Reply-To: <005a01c087e4$7196b7d0$59f6fbce@local>
Message-ID: <000b01c087ef$3d8da380$0f2aa8c0@antonio>

Brian,

> Antonio, are there other calls to hb_gcAll or hb_gcCollectAll() other than
> in Dialog:end()?  Does FWH use idle.c functions?

No, not at all. Only that call placed at Dialog:End()

Antonio



From harbour@lists.harbour-project.org  Fri Jan 26 19:52:02 2001
From: harbour@lists.harbour-project.org (Brian Hays)
Date: Fri Jan 26 19:52:02 2001
Subject: [Harbour] Re: harbour app blows up
Message-ID: <000f01c087fd$2fc7e900$59f6fbce@local>

FWIW, we disabled the GC and there is no change in behavior.

So we're at a loss as to where the problems may be.

I'm off to New York for 5 days but will be checking my email.
Sid is working on this too so please post any ideas here or to him directly.

Thanks!

Brian



From harbour@lists.harbour-project.org  Fri Jan 26 20:12:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Fri Jan 26 20:12:02 2001
Subject: [Harbour] ChangeLog 2001-01-26 16:15 UTC-0800 Ron Pinkas <ron@profit-master.com>
In-Reply-To: <000f01c087fd$2fc7e900$59f6fbce@local>
Message-ID: <LOBBKAFMMFGJIKLMEPAKEECHDJAA.ron@profit-master.com>

2001-01-26 16:15 UTC-0800 Ron Pinkas <ron@profit-master.com>
   * hb_slex.vc
     + Added -DSIMPLEX to production of HARBOUR_EXE_OBJs.

   * source/vm/hvm.c
     ! Minor optimization of recent changes to hb_vmSend()

From harbour@lists.harbour-project.org  Fri Jan 26 21:20:04 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Fri Jan 26 21:20:04 2001
Subject: [Harbour] Ron ... Problem with simplex and VC++
In-Reply-To: <3A714600.12101.565421@localhost>
Message-ID: <LOBBKAFMMFGJIKLMEPAKOECHDJAA.ron@profit-master.com>

J.F.,

> > I see a problem when compiling hbver.c it behaves as if -DSIMPLEX not
> > provided. Is it possible that *2* -D not allowed in one command line?
>
> Yes, good remark, could be the problem. I think to remember this
> is not allowed with the VC make file, but not sure.

No, multiple -D are allowed  :-), I had to add -DSIMPLEX to
HARBOUR_EXE_OBJs.

> > Why do we need -D_MSC_VER=1010
>
> There was a time where it was needed, ... new test to be done,
> surely.

I removed it and had no problem :-)

> > BTW, I don't have masm, can you please forward symbols.obj?
>
> Will try to find it here at my office (where harbour is not
> installed :(( )

Apparently masm.exe was renamed to ml.exe in Visual Studio 7, so I have it,
and it worked great after changing the production line of symbols.asm to
have /Foobj\vc\symbols.obj and remove nul nul.

Can anyone confirm if they can build clean, including symbols.obj, using the
current production line???

>
> > Still looking...
>
> Many thanks,

Now, it works great here - I have no problem with empty prgs.

FWIW, I had to leave the -TP (force cpp) because when I removed it the build
failed when getting to source/lang/msgca.c line 187:

HB_CALL_ON_STARTUP_END( hb_lang_Init_CA )

It complained about non-static initialization!

Over...

Ron


From harbour@lists.harbour-project.org  Sat Jan 27 03:20:04 2001
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Sat Jan 27 03:20:04 2001
Subject: [Harbour] Re: harbour app blows up
References: <000f01c087fd$2fc7e900$59f6fbce@local>
Message-ID: <3A728497.F56FCAD@libero.it>

Brian,

use HB_TRACE_ and run your program with tracing on, you get an huge
trace log but you'll be able to spot what harbour is doing just before
it dies.

regards.

Brian Hays ha scritto:
> 
> FWIW, we disabled the GC and there is no change in behavior.
> 
> So we're at a loss as to where the problems may be.
> 
> I'm off to New York for 5 days but will be checking my email.
> Sid is working on this too so please post any ideas here or to him directly.
> 
> Thanks!
> 
> Brian
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Sat Jan 27 14:40:03 2001
From: harbour@lists.harbour-project.org (Sid Saylors)
Date: Sat Jan 27 14:40:03 2001
Subject: [Harbour] Re: harbour app blows up
References: <000f01c087fd$2fc7e900$59f6fbce@local> <3A728497.F56FCAD@libero.it>
Message-ID: <3A7323EE.A71B24F0@home.com>

Maurilo,

how do i do this please.

Regards.

Sid......




Maurilio Longo wrote:
> 
> Brian,
> 
> use HB_TRACE_ and run your program with tracing on, you get an huge
> trace log but you'll be able to spot what harbour is doing just before
> it dies.
> 
> regards.
> 
> Brian Hays ha scritto:
> >
> > FWIW, we disabled the GC and there is no change in behavior.
> >
> > So we're at a loss as to where the problems may be.
> >
> > I'm off to New York for 5 days but will be checking my email.
> > Sid is working on this too so please post any ideas here or to him directly.
> >
> > Thanks!
> >
> > Brian
> >
> > _______________________________________________
> > Harbour mailing list
> > Harbour@lists.harbour-project.org
> > http://www.matrixlist.com/mailman/listinfo/harbour
> >
> > Thank you for participating in The Harbour Project.  Be sure to check
> > http://www.Harbour-Project.org
> 
> --
>  __________
> |  |  | |__| md2520@mclink.it
> |_|_|_|____| Team OS/2 Italia
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

From harbour@lists.harbour-project.org  Sun Jan 28 12:05:04 2001
From: harbour@lists.harbour-project.org (Pedro Rozo)
Date: Sun Jan 28 12:05:04 2001
Subject: [Harbour] __run is not working
Message-ID: <1654D204C35F4D115AE60005B80ADE75@pedro_rozo.tutopia.com>

<html><head><meta Name='keywords' Content='commtouch, pronto, mail, free email, free, branded, web based, free web based email, communications, internet, software, advertising banners, e-mail, free software'></head><body   ><div align='left'><font   ><blockquote><blockquote><TT>Hi friends,<BR>
<BR>
<BR>
Mi name is pedro rozo and i was follwing harbour people from some time ago; <BR>
at this moment i'm trying to run a external command from my harbour program<BR>
without success.<BR>
<BR>
I try with some examples like this:<BR>
<BR>
function Main()<BR>
<BR>
 &nbsp; local cOs := Upper( OS() )<BR>
<BR>
 &nbsp; QOut( &quot;About to compile Hello.prg&quot; )<BR>
 &nbsp; QOut()<BR>
 &nbsp; if at( &quot;WINDOWS&quot;, cOs ) != 0 .or. at( &quot;DOS&quot;, cOs ) != 0 .or. ;<BR>
 &nbsp; &nbsp; &nbsp;at( &quot;OS/2&quot;, cOs ) != 0 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// OS/2, DOS, Windows version<BR>
 &nbsp; &nbsp; &nbsp;__Run( &quot;..\bin\harbour.exe hello.prg /gHRB&quot; )<BR>
 &nbsp; else &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Unix / Linux version<BR>
 &nbsp; &nbsp; &nbsp;__Run( &quot;../bin/harbour.exe hello.prg /gHRB&quot; )<BR>
 &nbsp; endif<BR>
 &nbsp; QOut( &quot;Finished compiling&quot; )<BR>
return nil<BR>
<BR>
<BR>
but harbour not run any aplication, i try with full path and nothing.<BR>
i'm using version 0.35 with BCC55 on windows 98 second edition.<BR>
i test programs on windows NT and the &nbsp;same thing, <BR>
<BR>
Do you know any special function ro sintax for run or spawn external programs from harbour?<BR>
<BR>
i really need it as soon as posible, by other hand do you know some one had tried to make<BR>
harbour on Unix. Solaris (sparc)<BR>
<BR>
thanks a lot.<BR>
<BR>
<BR>
Pedro Rozo<BR>
<BR>
<BR>
<BR>
</TT><br><br><br><br><br><br><font><p align=left><br>_________________________________________________________<br>
E-mail y acceso a la Internet en http://www.Tutopia.com </blockquote></blockquote></div></font></body></html>

From harbour@lists.harbour-project.org  Sun Jan 28 12:58:02 2001
From: harbour@lists.harbour-project.org (Ron Pinkas)
Date: Sun Jan 28 12:58:02 2001
Subject: [Harbour] __run is not working
In-Reply-To: <1654D204C35F4D115AE60005B80ADE75@pedro_rozo.tutopia.com>
Message-ID: <LOBBKAFMMFGJIKLMEPAKAECLDJAA.ron@profit-master.com>

Hi Pedro,

I'm using 0.35 with BCC55 on Win98 and __Run() works perfectly!

BTW, can you please use PLAIN TEXT when posting to this list.

Ron

<<<<
Mi name is pedro rozo and i was follwing harbour people from some time ago;
at this moment i'm trying to run a external command from my harbour program
without success.

I try with some examples like this:

function Main()

  local cOs := Upper( OS() )

  QOut( "About to compile Hello.prg" )
  QOut()
  if at( "WINDOWS", cOs ) != 0 .or. at( "DOS", cOs ) != 0 .or. ;
     at( "OS/2", cOs ) != 0                    // OS/2, DOS, Windows version
     __Run( "..\bin\harbour.exe hello.prg /gHRB" )
  else                                         // Unix / Linux version
     __Run( "../bin/harbour.exe hello.prg /gHRB" )
  endif
  QOut( "Finished compiling" )
return nil


but harbour not run any aplication, i try with full path and nothing.
i'm using version 0.35 with BCC55 on windows 98 second edition.
i test programs on windows NT and the  same thing,

Do you know any special function ro sintax for run or spawn external
programs from harbour?

i really need it as soon as posible, by other hand do you know some one had
tried to make
harbour on Unix. Solaris (sparc)

thanks a lot.


Pedro Rozo
>>>>










_________________________________________________________
E-mail y acceso a la Internet en http://www.Tutopia.com
_______________________________________________ Harbour mailing list
Harbour@lists.harbour-project.org
http://www.matrixlist.com/mailman/listinfo/harbour Thank you for
participating in The Harbour Project. Be sure to check
http://www.Harbour-Project.org


From harbour@lists.harbour-project.org  Sun Jan 28 14:55:04 2001
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Sun Jan 28 14:55:04 2001
Subject: [Harbour] Re: harbour app blows up
References: <000f01c087fd$2fc7e900$59f6fbce@local> <3A728497.F56FCAD@libero.it> <3A7323EE.A71B24F0@home.com>
Message-ID: <3A7478E6.523E704C@libero.it>

Sid,

read harbour\doc\tracing.txt it has everything you need to get going.

regards.


Sid Saylors ha scritto:
> 
> Maurilo,
> 
> how do i do this please.
> 
> Regards.
> 
> Sid......
> 
> Maurilio Longo wrote:
> >
> > Brian,
> >
> > use HB_TRACE_ and run your program with tracing on, you get an huge
> > trace log but you'll be able to spot what harbour is doing just before
> > it dies.
> >
> > regards.
> >
> > Brian Hays ha scritto:
> > >
> > > FWIW, we disabled the GC and there is no change in behavior.
> > >
> > > So we're at a loss as to where the problems may be.
> > >
> > > I'm off to New York for 5 days but will be checking my email.
> > > Sid is working on this too so please post any ideas here or to him directly.
> > >
> > > Thanks!
> > >
> > > Brian
> > >
> > > _______________________________________________
> > > Harbour mailing list
> > > Harbour@lists.harbour-project.org
> > > http://www.matrixlist.com/mailman/listinfo/harbour
> > >
> > > Thank you for participating in The Harbour Project.  Be sure to check
> > > http://www.Harbour-Project.org
> >
> > --
> >  __________
> > |  |  | |__| md2520@mclink.it
> > |_|_|_|____| Team OS/2 Italia
> > _______________________________________________
> > Harbour mailing list
> > Harbour@lists.harbour-project.org
> > http://www.matrixlist.com/mailman/listinfo/harbour
> >
> > Thank you for participating in The Harbour Project.  Be sure to check
> > http://www.Harbour-Project.org
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Sun Jan 28 19:01:02 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Sun Jan 28 19:01:02 2001
Subject: [Harbour] Tbrowse Bug (Maurilio)
Message-ID: <001701c08986$8a6260e0$0100007f@sl.conex.net>

Maurilio

Here is an fix for dehilite()

METHOD DeHilite() CLASS TBrowse

   local nRow := ::nTop + ::RowPos - iif( ::lHeaders, 0, 1 ) + iif( Empty(
::HeadSep ), 0, 1 )
   local nCol ,nPos
for nPos:=1 to len(::acolumns)
    nCol:= ::aColumns[ nPos ]:ColPos
   SetPos( nRow, nCol )
   ::DispCell(ncol, 1)
next
return Self

this is what clipper do

Regards From Brazil

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Mon Jan 29 03:36:03 2001
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Mon Jan 29 03:36:03 2001
Subject: [Harbour] Tbrowse Bug (Maurilio)
References: <001701c08986$8a6260e0$0100007f@sl.conex.net>
Message-ID: <3A752B28.3F48DD16@libero.it>

Luiz,

I see a couple of problems:

1) you rewrite all columns of current row (is it needed?)
2) cursor position is not on _current column_

regards.


Luiz Rafael Culik Guimaraes ha scritto:
> 
> Maurilio
> 
> Here is an fix for dehilite()
> 
> METHOD DeHilite() CLASS TBrowse
> 
>    local nRow := ::nTop + ::RowPos - iif( ::lHeaders, 0, 1 ) + iif( Empty(
> ::HeadSep ), 0, 1 )
>    local nCol ,nPos
> for nPos:=1 to len(::acolumns)
>     nCol:= ::aColumns[ nPos ]:ColPos
>    SetPos( nRow, nCol )
>    ::DispCell(ncol, 1)
> next
> return Self
> 
> this is what clipper do
> 
> Regards From Brazil
> 
> Luiz Rafael Culik
> 
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 
 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia

From harbour@lists.harbour-project.org  Mon Jan 29 06:36:02 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Mon Jan 29 06:36:02 2001
Subject: [Harbour] Ron ... Problem with simplex and VC++
Message-ID: <200101290634_MC2-C379-50ED@compuserve.com>

Ron,

"Just add -DSIMPLEX on line 870 after $(CFLAGS) in the harbour.exe produc=
tion
rule."

:-)

"I had to change the production rule for symbols.asm, I think it is wrong=
, as
it has to use /Fo..."

Could well be.  I haven't been using masm. :-)

John.

From harbour@lists.harbour-project.org  Mon Jan 29 10:17:01 2001
From: harbour@lists.harbour-project.org (harbour@lists.harbour-project.org)
Date: Mon Jan 29 10:17:01 2001
Subject: [Harbour] Ron ... Problem with simplex and VC++
In-Reply-To: <200101290634_MC2-C379-50ED@compuserve.com>
Message-ID: <3A759734.5941.1AE1B4D@localhost>

Hi John,

Hi Ron,

Sorry for my silent this WE, but my computer decided for me :-(((

I'm should be back tommorrow with a full new ATHLON 900 MHZ. :-)

On 29 Jan 2001, at 6:33, John Skelton wrote:

> Ron,
> 
> "Just add -DSIMPLEX on line 870 after $(CFLAGS) in the harbour.exe
> production rule."
> 
> :-)
> 
> "I had to change the production rule for symbols.asm, I think it is
> wrong, as it has to use /Fo..."
> 
> Could well be.  I haven't been using masm. :-)
> 
> John.
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
> 
> 



Best regards,

J. Lefebvre <jflefebv@mafact.com>
Mafact SA/NV
Belgium
(See us at http://www.mafact.com)
jflefebv@mafact.com


From harbour@lists.harbour-project.org  Mon Jan 29 10:37:01 2001
From: harbour@lists.harbour-project.org (Paul Tucker)
Date: Mon Jan 29 10:37:01 2001
Subject: [Harbour] Ron ... Problem with simplex and VC++
References: <200101290634_MC2-C379-50ED@compuserve.com>
Message-ID: <002901c08a08$f79ce540$27141e0a@QUARRY>

Hi John,

To back up a bit to other makefile problems.  Is the commandline length
problem something to do with Win98?  That was caused by having "::" in the
rules instead of ":"

I'd like to change these back to "::" except for the one(s) that are being a
problem.  The main reason is speed.  ("::" is much faster)

Paul

----- Original Message -----
From: "John Skelton" <John_Skelton@compuserve.com>
To: <harbour@lists.harbour-project.org>
Sent: Monday, January 29, 2001 6:33 AM
Subject: RE: [Harbour] Ron ... Problem with simplex and VC++


Ron,

"Just add -DSIMPLEX on line 870 after $(CFLAGS) in the harbour.exe
production
rule."

:-)

"I had to change the production rule for symbols.asm, I think it is wrong,
as
it has to use /Fo..."

Could well be.  I haven't been using masm. :-)

John.
_______________________________________________
Harbour mailing list
Harbour@lists.harbour-project.org
http://www.matrixlist.com/mailman/listinfo/harbour

Thank you for participating in The Harbour Project.  Be sure to check
http://www.Harbour-Project.org



From harbour@lists.harbour-project.org  Mon Jan 29 14:12:02 2001
From: harbour@lists.harbour-project.org (Sid Saylors)
Date: Mon Jan 29 14:12:02 2001
Subject: [Harbour] Re: harbour app blows up
References: <000f01c087fd$2fc7e900$59f6fbce@local> <3A728497.F56FCAD@libero.it> <3A7323EE.A71B24F0@home.com> <3A7478E6.523E704C@libero.it>
Message-ID: <3A75C015.298D6640@home.com>

Maurillo,

	i tried tracing it and it only makes a 0 byte file...

Regards....

Sid...



Maurilio Longo wrote:
> 
> Sid,
> 
> read harbour\doc\tracing.txt it has everything you need to get going.
> 
> regards.
> 
> Sid Saylors ha scritto:
> >
> > Maurilo,
> >
> > how do i do this please.
> >
> > Regards.
> >
> > Sid......
> >
> > Maurilio Longo wrote:
> > >
> > > Brian,
> > >
> > > use HB_TRACE_ and run your program with tracing on, you get an huge
> > > trace log but you'll be able to spot what harbour is doing just before
> > > it dies.
> > >
> > > regards.
> > >
> > > Brian Hays ha scritto:
> > > >
> > > > FWIW, we disabled the GC and there is no change in behavior.
> > > >
> > > > So we're at a loss as to where the problems may be.
> > > >
> > > > I'm off to New York for 5 days but will be checking my email.
> > > > Sid is working on this too so please post any ideas here or to him directly.
> > > >
> > > > Thanks!
> > > >
> > > > Brian
> > > >
> > > > _______________________________________________
> > > > Harbour mailing list
> > > > Harbour@lists.harbour-project.org
> > > > http://www.matrixlist.com/mailman/listinfo/harbour
> > > >
> > > > Thank you for participating in The Harbour Project.  Be sure to check
> > > > http://www.Harbour-Project.org
> > >
> > > --
> > >  __________
> > > |  |  | |__| md2520@mclink.it
> > > |_|_|_|____| Team OS/2 Italia
> > > _______________________________________________
> > > Harbour mailing list
> > > Harbour@lists.harbour-project.org
> > > http://www.matrixlist.com/mailman/listinfo/harbour
> > >
> > > Thank you for participating in The Harbour Project.  Be sure to check
> > > http://www.Harbour-Project.org
> > _______________________________________________
> > Harbour mailing list
> > Harbour@lists.harbour-project.org
> > http://www.matrixlist.com/mailman/listinfo/harbour
> >
> > Thank you for participating in The Harbour Project.  Be sure to check
> > http://www.Harbour-Project.org
> 
> --
> 
>  __________
> |  |  | |__| md2520@mclink.it
> |_|_|_|____| Team OS/2 Italia
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

From harbour@lists.harbour-project.org  Mon Jan 29 14:57:02 2001
From: harbour@lists.harbour-project.org (Maurilio Longo)
Date: Mon Jan 29 14:57:02 2001
Subject: [Harbour] Re: harbour app blows up
References: <000f01c087fd$2fc7e900$59f6fbce@local> <3A728497.F56FCAD@libero.it> <3A7323EE.A71B24F0@home.com> <3A7478E6.523E704C@libero.it> <3A75C015.298D6640@home.com>
Message-ID: <3A75C841.45726AD9@libero.it>

Sid,

you have to rebuild harbour with -DHB_TR_LEVEL=HB_TR_DEBUG

then you compile your code and run it after you have defined an
environment variable with

set HB_TR_LEVEL=HB_TR_DEBUG

your program will print (on your console) _lots_ of tracing infos, like
funcion name and parameters of every RTL function that gets called.

Try with a little example first.

regards.



Sid Saylors ha scritto:
> 
> Maurillo,
> 
>         i tried tracing it and it only makes a 0 byte file...
> 
> Regards....
> 
> Sid...
> 
> Maurilio Longo wrote:
> >
> > Sid,
> >
> > read harbour\doc\tracing.txt it has everything you need to get going.
> >
> > regards.
> >
> > Sid Saylors ha scritto:
> > >
> > > Maurilo,
> > >
> > > how do i do this please.
> > >
> > > Regards.
> > >
> > > Sid......
> > >
> > > Maurilio Longo wrote:
> > > >
> > > > Brian,
> > > >
> > > > use HB_TRACE_ and run your program with tracing on, you get an huge
> > > > trace log but you'll be able to spot what harbour is doing just before
> > > > it dies.
> > > >
> > > > regards.
> > > >
> > > > Brian Hays ha scritto:
> > > > >
> > > > > FWIW, we disabled the GC and there is no change in behavior.
> > > > >
> > > > > So we're at a loss as to where the problems may be.
> > > > >
> > > > > I'm off to New York for 5 days but will be checking my email.
> > > > > Sid is working on this too so please post any ideas here or to him directly.
> > > > >
> > > > > Thanks!
> > > > >
> > > > > Brian
> > > > >
> > > > > _______________________________________________
> > > > > Harbour mailing list
> > > > > Harbour@lists.harbour-project.org
> > > > > http://www.matrixlist.com/mailman/listinfo/harbour
> > > > >
> > > > > Thank you for participating in The Harbour Project.  Be sure to check
> > > > > http://www.Harbour-Project.org
> > > >
> > > > --
> > > >  __________
> > > > |  |  | |__| md2520@mclink.it
> > > > |_|_|_|____| Team OS/2 Italia
> > > > _______________________________________________
> > > > Harbour mailing list
> > > > Harbour@lists.harbour-project.org
> > > > http://www.matrixlist.com/mailman/listinfo/harbour
> > > >
> > > > Thank you for participating in The Harbour Project.  Be sure to check
> > > > http://www.Harbour-Project.org
> > > _______________________________________________
> > > Harbour mailing list
> > > Harbour@lists.harbour-project.org
> > > http://www.matrixlist.com/mailman/listinfo/harbour
> > >
> > > Thank you for participating in The Harbour Project.  Be sure to check
> > > http://www.Harbour-Project.org
> >
> > --
> >
> >  __________
> > |  |  | |__| md2520@mclink.it
> > |_|_|_|____| Team OS/2 Italia
> > _______________________________________________
> > Harbour mailing list
> > Harbour@lists.harbour-project.org
> > http://www.matrixlist.com/mailman/listinfo/harbour
> >
> > Thank you for participating in The Harbour Project.  Be sure to check
> > http://www.Harbour-Project.org
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

-- 

 __________                   
|  |  | |__| md2520@mclink.it 
|_|_|_|____| Team OS/2 Italia



From harbour@lists.harbour-project.org  Mon Jan 29 15:16:01 2001
From: harbour@lists.harbour-project.org (Sid Saylors)
Date: Mon Jan 29 15:16:01 2001
Subject: [Harbour] Re: harbour app blows up
References: <000f01c087fd$2fc7e900$59f6fbce@local> <3A728497.F56FCAD@libero.it> <3A7323EE.A71B24F0@home.com> <3A7478E6.523E704C@libero.it> <3A75C015.298D6640@home.com> <3A75C841.45726AD9@libero.it>
Message-ID: <000b01c08a30$3f630090$aa4c0418@cx588881b>

Thank you , i'll try that.

Regards

Sid.....


----- Original Message -----
From: "Maurilio Longo" <maurilio.longo@libero.it>
To: <harbour@lists.harbour-project.org>
Sent: Monday, January 29, 2001 11:45 AM
Subject: Re: [Harbour] Re: harbour app blows up


> Sid,
>
> you have to rebuild harbour with -DHB_TR_LEVEL=HB_TR_DEBUG
>
> then you compile your code and run it after you have defined an
> environment variable with
>
> set HB_TR_LEVEL=HB_TR_DEBUG
>
> your program will print (on your console) _lots_ of tracing infos, like
> funcion name and parameters of every RTL function that gets called.
>
> Try with a little example first.
>
> regards.
>
>
>
> Sid Saylors ha scritto:
> >
> > Maurillo,
> >
> >         i tried tracing it and it only makes a 0 byte file...
> >
> > Regards....
> >
> > Sid...
> >
> > Maurilio Longo wrote:
> > >
> > > Sid,
> > >
> > > read harbour\doc\tracing.txt it has everything you need to get going.
> > >
> > > regards.
> > >
> > > Sid Saylors ha scritto:
> > > >
> > > > Maurilo,
> > > >
> > > > how do i do this please.
> > > >
> > > > Regards.
> > > >
> > > > Sid......
> > > >
> > > > Maurilio Longo wrote:
> > > > >
> > > > > Brian,
> > > > >
> > > > > use HB_TRACE_ and run your program with tracing on, you get an
huge
> > > > > trace log but you'll be able to spot what harbour is doing just
before
> > > > > it dies.
> > > > >
> > > > > regards.
> > > > >
> > > > > Brian Hays ha scritto:
> > > > > >
> > > > > > FWIW, we disabled the GC and there is no change in behavior.
> > > > > >
> > > > > > So we're at a loss as to where the problems may be.
> > > > > >
> > > > > > I'm off to New York for 5 days but will be checking my email.
> > > > > > Sid is working on this too so please post any ideas here or to
him directly.
> > > > > >
> > > > > > Thanks!
> > > > > >
> > > > > > Brian
> > > > > >
> > > > > > _______________________________________________
> > > > > > Harbour mailing list
> > > > > > Harbour@lists.harbour-project.org
> > > > > > http://www.matrixlist.com/mailman/listinfo/harbour
> > > > > >
> > > > > > Thank you for participating in The Harbour Project.  Be sure to
check
> > > > > > http://www.Harbour-Project.org
> > > > >
> > > > > --
> > > > >  __________
> > > > > |  |  | |__| md2520@mclink.it
> > > > > |_|_|_|____| Team OS/2 Italia
> > > > > _______________________________________________
> > > > > Harbour mailing list
> > > > > Harbour@lists.harbour-project.org
> > > > > http://www.matrixlist.com/mailman/listinfo/harbour
> > > > >
> > > > > Thank you for participating in The Harbour Project.  Be sure to
check
> > > > > http://www.Harbour-Project.org
> > > > _______________________________________________
> > > > Harbour mailing list
> > > > Harbour@lists.harbour-project.org
> > > > http://www.matrixlist.com/mailman/listinfo/harbour
> > > >
> > > > Thank you for participating in The Harbour Project.  Be sure to
check
> > > > http://www.Harbour-Project.org
> > >
> > > --
> > >
> > >  __________
> > > |  |  | |__| md2520@mclink.it
> > > |_|_|_|____| Team OS/2 Italia
> > > _______________________________________________
> > > Harbour mailing list
> > > Harbour@lists.harbour-project.org
> > > http://www.matrixlist.com/mailman/listinfo/harbour
> > >
> > > Thank you for participating in The Harbour Project.  Be sure to check
> > > http://www.Harbour-Project.org
> > _______________________________________________
> > Harbour mailing list
> > Harbour@lists.harbour-project.org
> > http://www.matrixlist.com/mailman/listinfo/harbour
> >
> > Thank you for participating in The Harbour Project.  Be sure to check
> > http://www.Harbour-Project.org
>
> --
>
>  __________
> |  |  | |__| md2520@mclink.it
> |_|_|_|____| Team OS/2 Italia
>
>
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>


From harbour@lists.harbour-project.org  Mon Jan 29 19:06:01 2001
From: harbour@lists.harbour-project.org (Sid Saylors)
Date: Mon Jan 29 19:06:01 2001
Subject: [Harbour] Re: harbour app blows up
References: <000f01c087fd$2fc7e900$59f6fbce@local> <3A728497.F56FCAD@libero.it> <3A7323EE.A71B24F0@home.com> <3A7478E6.523E704C@libero.it>
Message-ID: <3A760542.5174EA9F@home.com>

Maurilio,

got tracing working and it seems to always die on a call to memoline.
would someone please check the c code for a problem?

Regards.

Sid..........




Maurilio Longo wrote:
> 
> Sid,
> 
> read harbour\doc\tracing.txt it has everything you need to get going.
> 
> regards.
> 
> Sid Saylors ha scritto:
> >
> > Maurilo,
> >
> > how do i do this please.
> >
> > Regards.
> >
> > Sid......
> >
> > Maurilio Longo wrote:
> > >
> > > Brian,
> > >
> > > use HB_TRACE_ and run your program with tracing on, you get an huge
> > > trace log but you'll be able to spot what harbour is doing just before
> > > it dies.
> > >
> > > regards.
> > >
> > > Brian Hays ha scritto:
> > > >
> > > > FWIW, we disabled the GC and there is no change in behavior.
> > > >
> > > > So we're at a loss as to where the problems may be.
> > > >
> > > > I'm off to New York for 5 days but will be checking my email.
> > > > Sid is working on this too so please post any ideas here or to him directly.
> > > >
> > > > Thanks!
> > > >
> > > > Brian
> > > >
> > > > _______________________________________________
> > > > Harbour mailing list
> > > > Harbour@lists.harbour-project.org
> > > > http://www.matrixlist.com/mailman/listinfo/harbour
> > > >
> > > > Thank you for participating in The Harbour Project.  Be sure to check
> > > > http://www.Harbour-Project.org
> > >
> > > --
> > >  __________
> > > |  |  | |__| md2520@mclink.it
> > > |_|_|_|____| Team OS/2 Italia
> > > _______________________________________________
> > > Harbour mailing list
> > > Harbour@lists.harbour-project.org
> > > http://www.matrixlist.com/mailman/listinfo/harbour
> > >
> > > Thank you for participating in The Harbour Project.  Be sure to check
> > > http://www.Harbour-Project.org
> > _______________________________________________
> > Harbour mailing list
> > Harbour@lists.harbour-project.org
> > http://www.matrixlist.com/mailman/listinfo/harbour
> >
> > Thank you for participating in The Harbour Project.  Be sure to check
> > http://www.Harbour-Project.org
> 
> --
> 
>  __________
> |  |  | |__| md2520@mclink.it
> |_|_|_|____| Team OS/2 Italia
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
> 
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org

From harbour@lists.harbour-project.org  Mon Jan 29 19:47:02 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Mon Jan 29 19:47:02 2001
Subject: [Harbour] Harbour and International keyboards(David)
Message-ID: <006701c08a56$36ce8aa0$0100007f@sl.conex.net>

David

I´ve got an US type keyboard to test With Harbour.

It still gives the value of  :
with CapsLock OFF
FOR LEFT_ALT_A wKey=30
FOR RIGHT_ALT_A  wKey=30, dwState=33 ch is 0

With CapsLock ON
FOR LEFT_ALT_A wKey=30
FOR RIGHT_ALT_A  wKey=30, dwState=161 ch is 0

Can You Check

Regards From Brazil

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Tue Jan 30 00:57:02 2001
From: harbour@lists.harbour-project.org (Phil Barnett)
Date: Tue Jan 30 00:57:02 2001
Subject: [Harbour] hbrun and Linux
Message-ID: <3A761135.19741.146CBF00@localhost>

Does hbrun work under Linux. I thought it did on an Intel x86 
platform, but I wanted to make sure before I reply on 
comp.lang.clipper.

It's an Intel x86 tie, not an O/S tie, correct?


-- 
              Phil Barnett  mailto:midnight@the-oasis.net
                       WWW  http://www.the-oasis.net/
                  FTP Site  ftp://ftp.the-oasis.net

From harbour@lists.harbour-project.org  Tue Jan 30 03:41:02 2001
From: harbour@lists.harbour-project.org (=?iso-8859-1?Q?Ignacio_Ortiz_de_Zu=F1iga?=)
Date: Tue Jan 30 03:41:02 2001
Subject: [Harbour] Trying to checkout
Message-ID: <BGEJIGGANMIAOJPONENJCEMGCDAA.ignacio@ozs.com>

Trying just to checkout I receive this text:

C:\harbour>cvs checkout -A -P harbour  1>checkout.txt
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@       WARNING: HOST IDENTIFICATION HAS CHANGED!         @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!
Someone could be eavesdropping on you right now (man-in-the-middle attack)!
It is also possible that the host key has just been changed.
Please contact your system administrator.
Add correct host key in C:\HARBOUR\/.ssh/known_hosts to get rid of this
message

Password authentication is disabled to avoid trojan horses.
Permission denied.
cvs [checkout aborted]: end of file from server (consult above messages if
any)

Can someone tell me what could be happening. Thank you in advance.

My checkout.bat looks like this:

@echo off
cls
echo Checkout Harbour:
echo ----------------
SET HOME=C:\HARBOUR\
SET HOMEDRIVE=C:
SET
CVSROOT=:ext:ignacioortiz@cvs.Harbour-project.sourceforge.net:/cvsroot/Harbo
ur-project
SET HOMEPATH=/harbour/
SET CVS_RSH=ssh
@echo on
cvs checkout -A -P harbour > checkout.txt
notepad checkout.txt

Ignacio Ortiz
Email: ignacio@fivetech.com
http: www.fivetech.com



From harbour@lists.harbour-project.org  Tue Jan 30 04:39:02 2001
From: harbour@lists.harbour-project.org (Patrick Mast)
Date: Tue Jan 30 04:39:02 2001
Subject: [Harbour] Trying to checkout
In-Reply-To: <BGEJIGGANMIAOJPONENJCEMGCDAA.ignacio@ozs.com>
Message-ID: <NCBBJKNMIDPJNLJCHCHIGEALFOAA.harbour@winfakt.com>

Ignacio,

Delete your .ssh dir and try again.

Patrick Mast
www.Patrick.Be.kz

> -----Oorspronkelijk bericht-----
> Van: harbour-admin@lists.harbour-project.org
> [mailto:harbour-admin@lists.harbour-project.org]Namens Ignacio Ortiz de
> Zuñiga
> Verzonden: dinsdag 30 januari 2001 9:39
> Aan: Harbour
> Onderwerp: [Harbour] Trying to checkout
>
>
> Trying just to checkout I receive this text:
>
> C:\harbour>cvs checkout -A -P harbour  1>checkout.txt
> @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
> @       WARNING: HOST IDENTIFICATION HAS CHANGED!         @
> @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
> IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!
> Someone could be eavesdropping on you right now
> (man-in-the-middle attack)!
> It is also possible that the host key has just been changed.
> Please contact your system administrator.
> Add correct host key in C:\HARBOUR\/.ssh/known_hosts to get rid of this
> message
>
> Password authentication is disabled to avoid trojan horses.
> Permission denied.
> cvs [checkout aborted]: end of file from server (consult above messages if
> any)
>
> Can someone tell me what could be happening. Thank you in advance.
>
> My checkout.bat looks like this:
>
> @echo off
> cls
> echo Checkout Harbour:
> echo ----------------
> SET HOME=C:\HARBOUR\
> SET HOMEDRIVE=C:
> SET
> CVSROOT=:ext:ignacioortiz@cvs.Harbour-project.sourceforge.net:/cvs
> root/Harbo
> ur-project
> SET HOMEPATH=/harbour/
> SET CVS_RSH=ssh
> @echo on
> cvs checkout -A -P harbour > checkout.txt
> notepad checkout.txt
>
> Ignacio Ortiz
> Email: ignacio@fivetech.com
> http: www.fivetech.com
>
>
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>
>


From harbour@lists.harbour-project.org  Tue Jan 30 04:53:02 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Tue Jan 30 04:53:02 2001
Subject: [Harbour] Ron ... Problem with simplex and VC++
Message-ID: <200101300451_MC2-C397-9787@compuserve.com>

Hi Paul,

"Is the commandline length problem something to do with Win98?"

Yes, but I guess it would also be any non-NT-derived Windows.

"That was caused by having "::" in the rules instead of ":""

It's not related to that AFAIK.

Those rules are "wrong" for make, I think.  "::" and ":" are not
strictly interchangeable (AFAIK).

"I'd like to change these back to "::" except for the one(s) that are bei=
ng a
problem."

Please don't.

"("::" is much faster)"

:-(

OTOH, I've not really found it slow.  I _do_ find harbour.exe can be
slow, but not slow enough to worry much about.

What diff. in overall make time do you find?

John.

From harbour@lists.harbour-project.org  Tue Jan 30 06:00:05 2001
From: harbour@lists.harbour-project.org (Dave Pearson)
Date: Tue Jan 30 06:00:05 2001
Subject: [Harbour] Trying to checkout
In-Reply-To: <NCBBJKNMIDPJNLJCHCHIGEALFOAA.harbour@winfakt.com>; from harbour@winfakt.com on Tue, Jan 30, 2001 at 10:40:10AM +0100
References: <BGEJIGGANMIAOJPONENJCEMGCDAA.ignacio@ozs.com> <NCBBJKNMIDPJNLJCHCHIGEALFOAA.harbour@winfakt.com>
Message-ID: <20010130104300.Z15200@hagbard.davep.org>

On Tue, Jan 30, 2001 at 10:40:10AM +0100, Patrick Mast wrote:

> Delete your .ssh dir and try again.

You want to be careful with that advice. Someone might be using ssh for
other systems too (I use ssh to connect to nine different systems) and
deleting the whole of their .ssh directory will cause their identity files
to be removed. That wouldn't be fun.

IIRC removing the offending entry from ~/.ssh/known_hosts should suffice.

-- 
The Harbour Project: A free software Clipper compatible compiler
Home Page..........: http://www.harbour-project.org/
FAQ................: http://www.harbour-project.org/faq/harbour.html
My harbour page....: http://www.davep.org/harbour/

From harbour@lists.harbour-project.org  Tue Jan 30 06:35:04 2001
From: harbour@lists.harbour-project.org (=?iso-8859-1?Q?Ignacio_Ortiz_de_Zu=F1iga?=)
Date: Tue Jan 30 06:35:04 2001
Subject: [Harbour] Trying to checkout
In-Reply-To: <NCBBJKNMIDPJNLJCHCHIGEALFOAA.harbour@winfakt.com>
Message-ID: <BGEJIGGANMIAOJPONENJKEMJCDAA.ignacio@fivetech.com>

Patrick,

Done and now I receive the following:

C:\harbour>cvs checkout -A -P harbour  1>checkout.txt
Password:
Could not chdir to home directory /home/users/ignacioortiz: No such file or
dire
ctory
cvs [server aborted]: can't chdir(/home/users/ignacioortiz): No such file or
dir
ectory

:-(( Thank you for your support.

Regards,


Ignacio Ortiz de Zuñiga
Email: ignacio@ozs.com
Phone Email: ignaciosms@ozs.com
http://www.ozs.com

-----Mensaje original-----
De: harbour-admin@lists.harbour-project.org
[mailto:harbour-admin@lists.harbour-project.org]En nombre de Patrick
Mast
Enviado el: martes, 30 de enero de 2001 10:40
Para: harbour@lists.harbour-project.org
Asunto: RE: [Harbour] Trying to checkout


Ignacio,

Delete your .ssh dir and try again.

Patrick Mast
www.Patrick.Be.kz

> -----Oorspronkelijk bericht-----
> Van: harbour-admin@lists.harbour-project.org
> [mailto:harbour-admin@lists.harbour-project.org]Namens Ignacio Ortiz de
> Zuñiga
> Verzonden: dinsdag 30 januari 2001 9:39
> Aan: Harbour
> Onderwerp: [Harbour] Trying to checkout
>
>
> Trying just to checkout I receive this text:
>
> C:\harbour>cvs checkout -A -P harbour  1>checkout.txt
> @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
> @       WARNING: HOST IDENTIFICATION HAS CHANGED!         @
> @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
> IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!
> Someone could be eavesdropping on you right now
> (man-in-the-middle attack)!
> It is also possible that the host key has just been changed.
> Please contact your system administrator.
> Add correct host key in C:\HARBOUR\/.ssh/known_hosts to get rid of this
> message
>
> Password authentication is disabled to avoid trojan horses.
> Permission denied.
> cvs [checkout aborted]: end of file from server (consult above messages if
> any)
>
> Can someone tell me what could be happening. Thank you in advance.
>
> My checkout.bat looks like this:
>
> @echo off
> cls
> echo Checkout Harbour:
> echo ----------------
> SET HOME=C:\HARBOUR\
> SET HOMEDRIVE=C:
> SET
> CVSROOT=:ext:ignacioortiz@cvs.Harbour-project.sourceforge.net:/cvs
> root/Harbo
> ur-project
> SET HOMEPATH=/harbour/
> SET CVS_RSH=ssh
> @echo on
> cvs checkout -A -P harbour > checkout.txt
> notepad checkout.txt
>
> Ignacio Ortiz
> Email: ignacio@fivetech.com
> http: www.fivetech.com
>
>
> _______________________________________________
> Harbour mailing list
> Harbour@lists.harbour-project.org
> http://www.matrixlist.com/mailman/listinfo/harbour
>
> Thank you for participating in The Harbour Project.  Be sure to check
> http://www.Harbour-Project.org
>
>

_______________________________________________
Harbour mailing list
Harbour@lists.harbour-project.org
http://www.matrixlist.com/mailman/listinfo/harbour

Thank you for participating in The Harbour Project.  Be sure to check
http://www.Harbour-Project.org



From harbour@lists.harbour-project.org  Tue Jan 30 06:48:02 2001
From: harbour@lists.harbour-project.org (Patrick Mast)
Date: Tue Jan 30 06:48:02 2001
Subject: [Harbour] Trying to checkout
In-Reply-To: <BGEJIGGANMIAOJPONENJKEMJCDAA.ignacio@fivetech.com>
Message-ID: <NCBBJKNMIDPJNLJCHCHIMEANFOAA.harbour@winfakt.com>

Ignacio,

> Done and now I receive the following:
> C:\harbour>cvs checkout -A -P harbour  1>checkout.txt
> Password:
> Could not chdir to home directory /home/users/ignacioortiz: No
> such file or directory
> cvs [server aborted]: can't chdir(/home/users/ignacioortiz): No
> such file or dir ectory
> :-(( Thank you for your support.

This is my GetCVS.bat:
,---------
|SET HOME=p:\cvs\
|SET HOMEDRIVE=P:
|SET
CVSROOT=:ext:patrickmast@cvs.Harbour-project.sourceforge.net:/cvsroot/Harbou
r-project
|SET HOMEPATH=/harbour/
|SET CVS_RSH=ssh
|cvs checkout -P harbour
`----------------------------
Than it aks for my password and it starts. I just checked and it works on my
side.

Regards,

Patrick Mast
www.Patrick.Be.kz


From harbour@lists.harbour-project.org  Tue Jan 30 10:16:02 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Tue Jan 30 10:16:02 2001
Subject: [Harbour] ChangeLog 2001-01-30 10:10 UTC-0500
Message-ID: <200101301515.f0UFFU200884@thor.parrett.net>

2001-01-30 10:10 UTC-0500 David G. Holm <dholm@jsd-llc.com>
  * source/rtl/gtwin/gtwin.c
    * Changed code that determines whether or not a key stroke is for
      an extended key, so that Alt+[alpha/numeric key] works properly.
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Tue Jan 30 10:45:04 2001
From: harbour@lists.harbour-project.org (David G. Holm)
Date: Tue Jan 30 10:45:04 2001
Subject: [Harbour] Harbour and International keyboards(David)
In-Reply-To: <006701c08a56$36ce8aa0$0100007f@sl.conex.net>
Message-ID: <200101301544.f0UFiI203949@thor.parrett.net>

** Reply to message from "Luiz Rafael Culik Guimaraes"
<culik@nh.conex.com.br> on Mon, 29 Jan 2001 22:21:38 -0200

Fixed.

> I=B4ve got an US type keyboard to test With Harbour.
> 
> It still gives the value of  :
> with CapsLock OFF
> FOR LEFT_ALT_A wKey=3D30
> FOR RIGHT_ALT_A  wKey=3D30, dwState=3D33 ch is 0
> 
> With CapsLock ON
> FOR LEFT_ALT_A wKey=3D30
> FOR RIGHT_ALT_A  wKey=3D30, dwState=3D161 ch is 0
> 
> Can You Check
-- 
David G. Holm, Set Captain and all around
Harbour Project Clipper Compatibility fanatic.

From harbour@lists.harbour-project.org  Tue Jan 30 16:09:03 2001
From: harbour@lists.harbour-project.org (Luiz Rafael Culik Guimaraes)
Date: Tue Jan 30 16:09:03 2001
Subject: [Harbour] Harbour and International keyboards(David)
References: <200101301544.f0UFiI203949@thor.parrett.net>
Message-ID: <001c01c08b00$f7e4c600$0100007f@sl.conex.net>

David

> Fixed.

Thanks, Now the debugger can work properly

Regards

Luiz Rafael Culik


From harbour@lists.harbour-project.org  Tue Jan 30 18:16:02 2001
From: harbour@lists.harbour-project.org (Paul Tucker)
Date: Tue Jan 30 18:16:02 2001
Subject: [Harbour] "::" in makefile.vc
References: <200101300451_MC2-C397-9787@compuserve.com>
Message-ID: <006301c08b12$69252c90$27141e0a@QUARRY>

John,

Just so we're on the same page here... "::" is 'Batch mode'

To semi-quote the help:
"Batch-mode inference rules provide only one invocation of the inference
rule when N commands go through this inference rule. Without batch-mode
inference rules, it would require N commands to be invoked. N is the number
of dependents that trigger the inference rule.  Makefiles that contain
batch-mode inference rules must use NMAKE version 1.62 or higher.

The only syntactical difference from the standard inference rule is that the
batch-mode inference rule is terminated with a double colon (::).

Note   The tool being invoked must be able to handle multiple files. The
batch-mode inference rule must use $< as the macro to access dependent
files.

The batch-mode inference rules can speed up the build process. It is faster
to supply files to the compiler in batch, because the compiler driver is
invoked only once. For example, the C and C++ compiler performs better when
handling a set of files because it can remain memory resident during the
process."

So - how 'bout I fire up the '98 box and just fix the ones that don't cause
any trouble?  If not - why not?



Paul





From harbour@lists.harbour-project.org  Wed Jan 31 05:02:02 2001
From: harbour@lists.harbour-project.org (=?iso-8859-1?Q?Ignacio_Ortiz_de_Zu=F1iga?=)
Date: Wed Jan 31 05:02:02 2001
Subject: [Harbour] Trying to checkout
In-Reply-To: <NCBBJKNMIDPJNLJCHCHIMEANFOAA.harbour@winfakt.com>
Message-ID: <BGEJIGGANMIAOJPONENJGENBCDAA.ignacio@fivetech.com>

Patrick,

Thank you for you cooperation, but still does not work.

It seems that my personal directory in the cvs tree is missing, but I do not
know how to fix that:

[Reported by CVS]

Could not chdir to home directory /home/users/ignacioortiz: No such file or
dire
ctory
cvs [server aborted]: can't chdir(/home/users/ignacioortiz): No such file or
dir
ectory

:-((((


Ignacio Ortiz de Zuñiga
Email: ignacio@ozs.com
Phone Email: ignaciosms@ozs.com
http://www.ozs.com

-----Mensaje original-----
De: harbour-admin@lists.harbour-project.org
[mailto:harbour-admin@lists.harbour-project.org]En nombre de Patrick
Mast
Enviado el: martes, 30 de enero de 2001 12:49
Para: harbour@lists.harbour-project.org
Asunto: RE: [Harbour] Trying to checkout


Ignacio,

> Done and now I receive the following:
> C:\harbour>cvs checkout -A -P harbour  1>checkout.txt
> Password:
> Could not chdir to home directory /home/users/ignacioortiz: No
> such file or directory
> cvs [server aborted]: can't chdir(/home/users/ignacioortiz): No
> such file or dir ectory
> :-(( Thank you for your support.

This is my GetCVS.bat:
,---------
|SET HOME=p:\cvs\
|SET HOMEDRIVE=P:
|SET
CVSROOT=:ext:patrickmast@cvs.Harbour-project.sourceforge.net:/cvsroot/Harbou
r-project
|SET HOMEPATH=/harbour/
|SET CVS_RSH=ssh
|cvs checkout -P harbour
`----------------------------
Than it aks for my password and it starts. I just checked and it works on my
side.

Regards,

Patrick Mast
www.Patrick.Be.kz

_______________________________________________
Harbour mailing list
Harbour@lists.harbour-project.org
http://www.matrixlist.com/mailman/listinfo/harbour

Thank you for participating in The Harbour Project.  Be sure to check
http://www.Harbour-Project.org



From harbour@lists.harbour-project.org  Wed Jan 31 07:21:01 2001
From: harbour@lists.harbour-project.org (John Skelton)
Date: Wed Jan 31 07:21:01 2001
Subject: [Harbour] "::" in makefile.vc
Message-ID: <200101310719_MC2-C3AD-CA21@compuserve.com>

Paul,

"... "::" is 'Batch mode'"

Oh.  Trust MS to re-define a standard. :-(

OTOH - you say it's faster - how _much_ faster?  I did already ask. :-)

"how 'bout I fire up the '98 box and just fix the ones that don't cause
any trouble?"

If you think it's worth it.  In the absence of the timings I don't see
any reason yet.

"If not - why not?"

Lemme see those timings. <BG>

More seriously, I'm not sure all versions of VC accept the re-defined
meaning of "::".

John.

From harbour@lists.harbour-project.org  Wed Jan 31 09:30:04 2001
From: harbour@lists.harbour-project.org (Paul Tucker)
Date: Wed Jan 31 09:30:04 2001
Subject: [Harbour] "::" in makefile.vc
References: <200101310719_MC2-C3AD-CA21@compuserve.com>
Message-ID: <000501c08b92$27cac4a0$27141e0a@QUARRY>

>>"... "::" is 'Batch mode'"
>Oh.  Trust MS to re-define a standard. :-(
  heh.

>OTOH - you say it's faster - how _much_ faster?  I did already ask. :-)

I figured if I quoted the docs saying it was faster that would do it. <g>
However, no problem - I'll come up with some numbers.  (You could as easily
have done this too)

>>"how 'bout I fire up the '98 box and just fix the ones that don't cause
>>any trouble?"
>If you think it's worth it.  In the absence of the timings I don't see
>any reason yet.

If I think it's faster to load the compiler only 8 times instead of 50 why
not just humour me. <g>

>>"If not - why not?"
>Lemme see those timings. <BG>
>More seriously, I'm not sure all versions of VC accept the re-defined
>meaning of "::".

It's Nmake >= 1.62  - the version that comes with VC4.1 ( where
_MSC_VER==1010) is 1.61 (I didn't know that till now)

>John.

Paul


From harbour@lists.harbour-project.org  Wed Jan 31 11:56:10 2001
From: harbour@lists.harbour-project.org (=?iso-8859-1?Q?Ignacio_Ortiz_de_Zu=F1iga?=)
Date: Wed Jan 31 11:56:10 2001
Subject: [Harbour] ADS.CH modification
Message-ID: <BGEJIGGANMIAOJPONENJKENECDAA.ignacio@ozs.com>

This two lines at ADS.CH should be modified:

#define ADS_TOP                  1
#define ADS_BOTTOM               2

to:

#define ADS_TOP                  0
#define ADS_BOTTOM               1

I can not do it myself since Sourceforge has deleted my self as a developer
on the Harbour project :-((

Ignacio Ortiz de Zuñiga
Email: ignacio@ozs.com
Phone Email: ignaciosms@ozs.com
http://www.ozs.com



