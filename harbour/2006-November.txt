From philb at philb.us  Thu Nov  2 21:10:01 2006
From: philb at philb.us (Phil Barnett)
Date: Thu Nov  2 21:10:15 2006
Subject: [Harbour] This is the Harbour Project mailing list.
Message-ID: <200611022110.01659.philb@philb.us>

My apologies if I mistakenly rejoined you to this list, but due to a mistake 
in processing a move to a new machine, I lost the old membership list and 
rebuilt it from posts made over the last year.

If you don't want to be on this list, either send me an email and I will 
personally unsubscribe you, or you can follow the instructions in the welcome 
message to remove yourself.

The membership count currently shows 55 list members.

-- 
My other computer is your Windows machine
From druzus at priv.onet.pl  Fri Nov  3 00:59:58 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Fri Nov  3 01:00:43 2006
Subject: [Harbour] This is the Harbour Project mailing list.
In-Reply-To: <200611022110.01659.philb@philb.us>
References: <200611022110.01659.philb@philb.us>
Message-ID: <20061103055958.GA31559@localhost.localdomain>

Thank you very much,
I hope now we will not have more troubles with the mailing list
in next days.
It changed a little bit my plans and terms.
I'm ready to send new PP code and I'd like to know if
anyone tried to work on our own std.ch.
I will wait for any news one day and if no one can help
then I'll do that myself and I'll commit new PP.

best regards,
Przemek
From philb at philb.us  Fri Nov  3 01:55:28 2006
From: philb at philb.us (Phil Barnett)
Date: Fri Nov  3 01:55:30 2006
Subject: [Harbour] This is the Harbour Project mailing list.
In-Reply-To: <20061103055958.GA31559@localhost.localdomain>
References: <200611022110.01659.philb@philb.us>
	<20061103055958.GA31559@localhost.localdomain>
Message-ID: <200611030155.28495.philb@philb.us>

On Friday 03 November 2006 00:59, Przemyslaw Czerpak wrote:
> Thank you very much,
> I hope now we will not have more troubles with the mailing list
> in next days.

Should be good. New machine is Compaq DL-580 with 4Gig of ram, 100G Raid 5 
array, 25mbit unlimited traffic connection.

> It changed a little bit my plans and terms.
> I'm ready to send new PP code and I'd like to know if
> anyone tried to work on our own std.ch.
> I will wait for any news one day and if no one can help
> then I'll do that myself and I'll commit new PP.

Ok, sorry for the delay. Had it gone well, nobody would have even noticed the 
transition.

The primary problem is that I'm overbooked. But I got it done and we are in a 
new colo facility that is only 20 minutes from my house. Two servers back, it 
was Boston, Mass, a 1000 mile drive. Last server was 100 miles.

This is much better.

Other plans include putting in a parallel server to have a hot spare. Should 
the DL-580 go down, I have a DL-360 that will back it up.

-- 
My other computer is your Windows machine
From antonioharbour at gmail.com  Fri Nov  3 03:04:29 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Fri Nov  3 03:04:46 2006
Subject: [Harbour] sourceforge mailing list
Message-ID: <454af816.7fa7efeb.2d01.6ed9@mx.google.com>

Why don't we use sourceforge Harbour mailing list ?

Archives are lost, we have been without the mailing list for too much days,
and Phil is busy due to his work.

Why don't we solve these problems moving to sourceforge mailing list ?


Antonio

From sircaulises at gmail.com  Fri Nov  3 03:08:29 2006
From: sircaulises at gmail.com (Sirca Ulises)
Date: Fri Nov  3 03:08:38 2006
Subject: [Harbour] sourceforge mailing list
In-Reply-To: <454af816.7fa7efeb.2d01.6ed9@mx.google.com>
Message-ID: <003f01c6ff1f$40465ce0$0202a8c0@PORTATIL>

Antonio,

>>Why don't we use sourceforge Harbour mailing list ?

>>Archives are lost, we have been without the mailing list for too much
>> days,and Phil is busy due to his work.

>>Why don't we solve these problems moving to sourceforge mailing list ?

I Agree with you.

Fernando
_______________________________________________
Harbour mailing list
Harbour@harbour-project.org
http://lists.harbour-project.org/mailman/listinfo/harbour

From e.m.giordano at emagsoftware.it  Fri Nov  3 04:17:54 2006
From: e.m.giordano at emagsoftware.it (Enrico Maria Giordano)
Date: Fri Nov  3 04:18:28 2006
Subject: [Harbour] This is the Harbour Project mailing list.
References: <200611022110.01659.philb@philb.us>
	<20061103055958.GA31559@localhost.localdomain>
Message-ID: <005801c6ff28$f17be080$0100a8c0@emag>


-----Messaggio Originale----- 
Da: "Przemyslaw Czerpak" <druzus@priv.onet.pl>
A: "Harbour Project Main Developer List." <harbour@harbour-project.org>
Data invio: venerdi 3 novembre 2006 6.59
Oggetto: Re: [Harbour] This is the Harbour Project mailing list.


> I'm ready to send new PP code and I'd like to know if
> anyone tried to work on our own std.ch.
> I will wait for any news one day and if no one can help
> then I'll do that myself and I'll commit new PP.

If nobody else is working on std.ch I will try to work on it.

Please confirm.

EMG

--
EMAG Software Homepage:     http://www.emagsoftware.it
The EMG's ZX-Spectrum Page: http://www.emagsoftware.it/spectrum
The Best of Spectrum Games: http://www.emagsoftware.it/tbosg
The EMG Music page:         http://www.emagsoftware.it/emgmusic
From antonioharbour at gmail.com  Fri Nov  3 04:32:19 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Fri Nov  3 04:32:35 2006
Subject: [Harbour] harbour -I flag
Message-ID: <454b0caf.7507268e.2b7b.ffff8247@mx.google.com>

Przemek,

On Darwin -Ia_path;another_path does not work, neither -Ia_path
-Ianother_path (it just uses the first one, not both).

I have not tried it yet on Linux. I assume it is a bug, or am I missing
something ? Thanks,

Antonio

From antonioharbour at gmail.com  Fri Nov  3 04:34:32 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Fri Nov  3 04:35:01 2006
Subject: [Harbour] gtgui for Linux & Darwin
Message-ID: <454b0d31.5a8ebccc.3b26.ffff85e8@mx.google.com>

Przemek,

Is gtgui available for Linux and Darwin ? make_gnu.sh does not build it.

Could you please modify the makefile to build it too ? Thanks,


Antonio

From druzus at priv.onet.pl  Fri Nov  3 07:18:14 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Fri Nov  3 07:19:00 2006
Subject: [Harbour] harbour -I flag
In-Reply-To: <454b0caf.7507268e.2b7b.ffff8247@mx.google.com>
References: <454b0caf.7507268e.2b7b.ffff8247@mx.google.com>
Message-ID: <20061103121814.GA11773@localhost.localdomain>

On Fri, 03 Nov 2006, Antonio Linares wrote:
> Przemek,
> On Darwin -Ia_path;another_path does not work, neither -Ia_path
> -Ianother_path (it just uses the first one, not both).
> I have not tried it yet on Linux. I assume it is a bug, or am I missing
> something ? Thanks,

In POSIX systems path delimiter is ':' not ';'

best regards,
Przemek
From druzus at priv.onet.pl  Fri Nov  3 07:24:57 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Fri Nov  3 07:25:42 2006
Subject: [Harbour] gtgui for Linux & Darwin
In-Reply-To: <454b0d31.5a8ebccc.3b26.ffff85e8@mx.google.com>
References: <454b0d31.5a8ebccc.3b26.ffff85e8@mx.google.com>
Message-ID: <20061103122457.GB11773@localhost.localdomain>

On Fri, 03 Nov 2006, Antonio Linares wrote:
> Przemek,
> Is gtgui available for Linux and Darwin ? make_gnu.sh does not build it.
> Could you please modify the makefile to build it too ? Thanks,

Why do you need it?
In *nixes you can use any GT driver with GUI library simultaneously.
Just simply use GTSTD. I added GTGUI as base for GUI library which
may want to support also standard console commands plus one hack for
existing FWH users which don't want to change his link scripts.
I think that such problems do not exist in Linux or Darwin.
In Window GTGUI support also TONE and ClipBoard but it will not work
with Linux or Darwin because these are terminal dependent resources
not system ones like in Windows so you will need one of existing GT
driver to access them, f.e. if your program will work only in XWindow
then you can link it with GTXWC.

best regards,
Przemek
From druzus at priv.onet.pl  Fri Nov  3 07:26:28 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Fri Nov  3 07:27:12 2006
Subject: [Harbour] sourceforge mailing list
In-Reply-To: <454af816.7fa7efeb.2d01.6ed9@mx.google.com>
References: <454af816.7fa7efeb.2d01.6ed9@mx.google.com>
Message-ID: <20061103122628.GC11773@localhost.localdomain>

On Fri, 03 Nov 2006, Antonio Linares wrote:
> Why don't we use sourceforge Harbour mailing list ?
> Archives are lost, we have been without the mailing list for too much days,
> and Phil is busy due to his work.
> Why don't we solve these problems moving to sourceforge mailing list ?

Because it does not work better then harbour mailing list.
The problems and offline time in last years is comparable.

best regards,
Przemek
From antonioharbour at gmail.com  Fri Nov  3 10:11:35 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Fri Nov  3 10:11:50 2006
Subject: [Harbour] harbour -I flag
In-Reply-To: <20061103121814.GA11773@localhost.localdomain>
Message-ID: <454b5c30.4a9d4316.4190.ffffb9e7@mx.google.com>

Przemek, 

> In POSIX systems path delimiter is ':' not ';'

Thanks!

Antonio

From mpaliwoda at interia.pl  Fri Nov  3 16:10:07 2006
From: mpaliwoda at interia.pl (Marek Paliwoda)
Date: Fri Nov  3 16:10:14 2006
Subject: [Harbour] ChangeLog 2006-11-03 22:00 UTC+0100 Marek Paliwoda
 (mpaliwoda at interia pl)
Message-ID: <454BB02F.2070503@interia.pl>

2006-11-03 22:00 UTC+0100 Marek Paliwoda (mpaliwoda at interia pl)
    * harbour/makefile.bc
      * Updated comment section about environment variables used by makefile
    * harbour/makefile.vc
      * Updated comment section about environment variables used by makefile
      * Cleaned compilation under Visual C++ 8.0 (VS2005 compiler), including
        64 bit platforms. To properly compile under Visual C++ 8.0 you have
        set a new environment variable HB_VISUALC_VER to 80 before running
        make_vc.bat.

Please note that I was not able to fully build Harbour under x64 (EM64T)
platform because harbour compiler crashes when it tries to compile even
the simplest prg :(, and the log file from the compilation of harbour
compiler under Visual C++ 8.0 for x64 generates lots of warnings.

-- 

     Marek Paliwoda
mpaliwoda at interia pl

----------------------------------------------------------------------
Jestes kierowca? To poczytaj! >>> http://link.interia.pl/f199e

From druzus at priv.onet.pl  Fri Nov  3 18:16:12 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Fri Nov  3 18:16:59 2006
Subject: [Harbour] This is the Harbour Project mailing list.
In-Reply-To: <005801c6ff28$f17be080$0100a8c0@emag>
References: <200611022110.01659.philb@philb.us>
	<20061103055958.GA31559@localhost.localdomain>
	<005801c6ff28$f17be080$0100a8c0@emag>
Message-ID: <20061103231612.GA32042@localhost.localdomain>

On Fri, 03 Nov 2006, Enrico Maria Giordano wrote:
> >I'm ready to send new PP code and I'd like to know if
> >anyone tried to work on our own std.ch.
> >I will wait for any news one day and if no one can help
> >then I'll do that myself and I'll commit new PP.
> If nobody else is working on std.ch I will try to work on it.
> Please confirm.

Thank you very much.
I've just tested new code and it seems to work quite nice but it needs
std.ch. As soon as it will be ready I'll commit it.
I'll be offline for one day but on Sunday evening I should be back so
I can help. I can also finally update it for Harbour extensions. I do
not want to hard code the PP rule in .c source code only. It's hard to
update and not such readable as it should be. Also the internal rule
representation in new PP is not human readable so it will hard to update
source code directly so the new PP can generate the whole .c file with
predefined rules.
Now I'm thinking only if this file should be generated automatically after
each clean build or not. If Marek will help with adding such functionality
to new non GNU make system then I can make the same for the GNU one.
But it's rather minor technical problem, thank you for your help.

best regards,
Przemek
From philb at philb.us  Fri Nov  3 18:24:53 2006
From: philb at philb.us (Phil Barnett)
Date: Fri Nov  3 18:24:57 2006
Subject: [Harbour] sourceforge mailing list
In-Reply-To: <20061103122628.GC11773@localhost.localdomain>
References: <454af816.7fa7efeb.2d01.6ed9@mx.google.com>
	<20061103122628.GC11773@localhost.localdomain>
Message-ID: <200611031824.53941.philb@philb.us>

On Friday 03 November 2006 07:26, Przemyslaw Czerpak wrote:
> On Fri, 03 Nov 2006, Antonio Linares wrote:
> > Why don't we use sourceforge Harbour mailing list ?
> > Archives are lost, we have been without the mailing list for too much
> > days, and Phil is busy due to his work.

2 days.

> > Why don't we solve these problems moving to sourceforge mailing list ?

Obviously you haven't seen the problems they've had in the last year.

> Because it does not work better then harbour mailing list.
> The problems and offline time in last years is comparable.

The archive is not lost, it's merely on standby until I get it online. I don't 
think we need more than the 26,000 messages that I have archived in my 
personal mailbox.

The membership list was full of bad addresses that have been bouncing like 
crazy and it would have had to be cleaned out soon anyway, so it's not like 
we really lost anything there. Anyone with sincere interest is on the current 
list and anyone we missed that truly cares in the least will resubscribe.

What I am going to do is this:

Once a week, I'll export the membership roll of all three lists and send it to 
some mailboxes of long term members, such as Ryszard, Przemek and Antonio. 
(or whoever, I don't really care)

That way, it will live outside the scope of my server and if something truly 
catastrophic happens, you can quickly put it back together without me.

-- 
My other computer is your Windows machine
From antonioharbour at gmail.com  Fri Nov  3 19:15:21 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Fri Nov  3 19:15:37 2006
Subject: [Harbour] Harbour on Mac OSX
Message-ID: <454bdba3.66343fff.14e9.115b@mx.google.com>

Harbour working nicely on Mac OSX and using the "Cocoa" GUI interface:

http://fivetechsoft.com/forums/viewtopic.php?t=4779

regards,

Antonio

From mpaliwoda at interia.pl  Sat Nov  4 05:25:46 2006
From: mpaliwoda at interia.pl (Marek Paliwoda)
Date: Sat Nov  4 05:26:12 2006
Subject: [Harbour] sourceforge mailing list
In-Reply-To: <200611031824.53941.philb@philb.us>
References: <454af816.7fa7efeb.2d01.6ed9@mx.google.com>	<20061103122628.GC11773@localhost.localdomain>
	<200611031824.53941.philb@philb.us>
Message-ID: <454C6AAA.5060904@interia.pl>

Phil,

> The archive is not lost, it's merely on standby until I get it online. I don't 
> think we need more than the 26,000 messages that I have archived in my 
> personal mailbox.
> 
> The membership list was full of bad addresses that have been bouncing like 
> crazy and it would have had to be cleaned out soon anyway, so it's not like 
> we really lost anything there. Anyone with sincere interest is on the current 
> list and anyone we missed that truly cares in the least will resubscribe.

I am sure we all highly appreciate your services.
Thanks very much for your support in the past and
in the future :).

-- 

Marek

----------------------------------------------------------------------
PS. >>> http://link.interia.pl/f19a6

From mpaliwoda at interia.pl  Sat Nov  4 05:37:21 2006
From: mpaliwoda at interia.pl (Marek Paliwoda)
Date: Sat Nov  4 05:37:28 2006
Subject: [Harbour] ChangeLog 2006-11-03 22:00 UTC+0100 Marek Paliwoda
	(mpaliwoda at interia pl)
In-Reply-To: <454BB02F.2070503@interia.pl>
References: <454BB02F.2070503@interia.pl>
Message-ID: <454C6D61.7060702@interia.pl>

Marek Paliwoda wrote :

> Please note that I was not able to fully build Harbour under x64 (EM64T)
> platform because harbour compiler crashes when it tries to compile even
> the simplest prg :(, and the log file from the compilation of harbour
> compiler under Visual C++ 8.0 for x64 generates lots of warnings.

More update on this ... I was able to perform a full Harbour x64 build
by dividing it into two phases. First build harbour.exe and hbpp.exe,
then replace harbour.exe with a 32 bits version generated by Borland Bcc
compiler and touch its timestamp, and then continue normal compilation.
Everything compiled ok in this case and are running without problems.
I was also able to use this trick to crosscompile Harbour x64 (64bits)
under normal 32 bits environment without problems using MSVC cross
compilation settings.
So I returned to 32bits compilation ... and the problem reocurred :(. 
Harbour.exe crashes also under normal 32 bits build. Is anyone experiencing
similar problems with MSVC builds ?

-- 

Marek

----------------------------------------------------------------------
PS. >>> http://link.interia.pl/f19a6

From e.m.giordano at emagsoftware.it  Sat Nov  4 07:19:23 2006
From: e.m.giordano at emagsoftware.it (Enrico Maria Giordano)
Date: Sat Nov  4 07:19:58 2006
Subject: [Harbour] This is the Harbour Project mailing list.
References: <200611022110.01659.philb@philb.us><20061103055958.GA31559@localhost.localdomain><005801c6ff28$f17be080$0100a8c0@emag>
	<20061103231612.GA32042@localhost.localdomain>
Message-ID: <00cb01c7000b$7679ea10$0100a8c0@emag>


-----Messaggio Originale----- 
Da: "Przemyslaw Czerpak" <druzus@priv.onet.pl>
A: "Harbour Project Main Developer List." <harbour@harbour-project.org>
Data invio: sabato 4 novembre 2006 0.16
Oggetto: Re: [Harbour] This is the Harbour Project mailing list.


> > If nobody else is working on std.ch I will try to work on it.
> > Please confirm.
>
> Thank you very much.

Please can you repeat here the rules I have to follow in writing the new 
std.ch? I can start from Clipper 5.2e std.ch. What do I have to change 
(markers symbols)?  Later I will add the 5.3b one enclosed in a conditional 
compilation symbol (which?).

Let me know.

EMG

--
EMAG Software Homepage:     http://www.emagsoftware.it
The EMG's ZX-Spectrum Page: http://www.emagsoftware.it/spectrum
The Best of Spectrum Games: http://www.emagsoftware.it/tbosg
The EMG Music page:         http://www.emagsoftware.it/emgmusic 

From philb at philb.us  Sat Nov  4 07:28:52 2006
From: philb at philb.us (Phil Barnett)
Date: Sat Nov  4 07:29:05 2006
Subject: [Harbour] This is the Harbour Project mailing list.
In-Reply-To: <00cb01c7000b$7679ea10$0100a8c0@emag>
References: <200611022110.01659.philb@philb.us>
	<20061103231612.GA32042@localhost.localdomain>
	<00cb01c7000b$7679ea10$0100a8c0@emag>
Message-ID: <200611040728.52448.philb@philb.us>

On Saturday 04 November 2006 07:19, Enrico Maria Giordano wrote:

> Please can you repeat here the rules I have to follow in writing the new
> std.ch? I can start from Clipper 5.2e std.ch. What do I have to change
> (markers symbols)?  Later I will add the 5.3b one enclosed in a conditional
> compilation symbol (which?).

The original Clipper 5.2e std.ch is copyrighted and we can't use it for a 
basis. If we could, the job would already be done.

You need to look at the preprocessor and derive the new std.ch from it's 
current behavior.

-- 
My other computer is your Windows machine
From e.m.giordano at emagsoftware.it  Sat Nov  4 08:33:33 2006
From: e.m.giordano at emagsoftware.it (Enrico Maria Giordano)
Date: Sat Nov  4 08:34:08 2006
Subject: [Harbour] This is the Harbour Project mailing list.
References: <200611022110.01659.philb@philb.us><20061103231612.GA32042@localhost.localdomain><00cb01c7000b$7679ea10$0100a8c0@emag>
	<200611040728.52448.philb@philb.us>
Message-ID: <00e401c70015$d2ededf0$0100a8c0@emag>


-----Messaggio Originale----- 
Da: "Phil Barnett" <philb@philb.us>
A: <harbour@harbour-project.org>
Data invio: sabato 4 novembre 2006 13.28
Oggetto: Re: [Harbour] This is the Harbour Project mailing list.


> The original Clipper 5.2e std.ch is copyrighted and we can't use it for a 
> basis. If we could, the job would already be done.
> 
> You need to look at the preprocessor and derive the new std.ch from it's 
> current behavior.

Sorry, where I exactly look at?

EMG

--
EMAG Software Homepage:     http://www.emagsoftware.it
The EMG's ZX-Spectrum Page: http://www.emagsoftware.it/spectrum
The Best of Spectrum Games: http://www.emagsoftware.it/tbosg
The EMG Music page:         http://www.emagsoftware.it/emgmusic
From e.m.giordano at emagsoftware.it  Sat Nov  4 08:40:40 2006
From: e.m.giordano at emagsoftware.it (Enrico Maria Giordano)
Date: Sat Nov  4 08:41:15 2006
Subject: [Harbour] This is the Harbour Project mailing list.
References: <200611022110.01659.philb@philb.us><20061103231612.GA32042@localhost.localdomain><00cb01c7000b$7679ea10$0100a8c0@emag><200611040728.52448.philb@philb.us>
	<00e401c70015$d2ededf0$0100a8c0@emag>
Message-ID: <00fb01c70016$d1998c10$0100a8c0@emag>


-----Messaggio Originale----- 
Da: "Enrico Maria Giordano" <e.m.giordano@emagsoftware.it>
A: "Harbour Project Main Developer List." <harbour@harbour-project.org>
Data invio: sabato 4 novembre 2006 14.33
Oggetto: Re: [Harbour] This is the Harbour Project mailing list.


> Sorry, where I exactly look at?

Sorry, where I exactly have to look at?

EMG

--
EMAG Software Homepage:     http://www.emagsoftware.it
The EMG's ZX-Spectrum Page: http://www.emagsoftware.it/spectrum
The Best of Spectrum Games: http://www.emagsoftware.it/tbosg
The EMG Music page:         http://www.emagsoftware.it/emgmusic
From antonioharbour at gmail.com  Sat Nov  4 18:31:56 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Sat Nov  4 18:32:12 2006
Subject: [Harbour] Harbour on Mac OSX
Message-ID: <454d22f8.18971d63.4a4d.ffff896b@mx.google.com>

DBF browses on Mac OSX:

http://fivetechsoft.com/forums/viewtopic.php?p=21265#21265

From mpaliwoda at interia.pl  Sun Nov  5 05:51:18 2006
From: mpaliwoda at interia.pl (Marek Paliwoda)
Date: Sun Nov  5 05:51:45 2006
Subject: [Harbour] Adding HB_EXPORT  to some VM+RTL functions
Message-ID: <454DC226.4090602@interia.pl>

Hi All,

I would like to add HB_EXPORT to the following functions :

hb_gcAlloc()
hb_gcFree()            (not necesarily)

hb_stackReturnItem()
hb_stackSelfItem()
hb_stackItemFromBase()
hb_stackItemFromTop()  (not necesarily)

Any objections ?

-- 

Marek

----------------------------------------------------------------------
PS. >>> http://link.interia.pl/f19a6

From mpaliwoda at interia.pl  Sun Nov  5 05:56:47 2006
From: mpaliwoda at interia.pl (Marek Paliwoda)
Date: Sun Nov  5 05:56:52 2006
Subject: [Harbour] Adding declarartion METHOD PROCEDURE Foo() to hbclass.ch
Message-ID: <454DC36F.1070500@interia.pl>

Hi Przemek,

I would like to add ( I guess temporarily :) ) the following :

#xcommand METHOD PROCEDURE <MethodName>  [ <export: EXPORTED, VISIBLE>] 
[<protect: PROTECTED>] [<hidde: HIDDEN>] [<persistent: PERSISTENT, 
PROPERTY>] [_CLASS_DECLARATION_] => ;
    _HB_MEMBER __HB_CLS_ASFUNC(<MethodName>) ;;
    __HB_CLS_DECLARE_METHOD __HB_CLS_PARAMS(<MethodName>) _CLASS_NAME_ ;;
    s_oClass:AddMethod( __HB_CLS_ASSTRING(<MethodName>), @__HB_CLS_ASID( 
__HB_CLS_MTHNAME _CLASS_NAME_ <MethodName> )(), __HB_CLS_SCOPE( <.export.>, 
<.protect.>, <.hidde.> ) + iif( <.persistent.>, HB_OO_CLSTP_PERSIST, 0 ) )

to hbclass.ch to allow declaration of METHOD PROCEDURE of CLASS Members ?
Something like :

CLASS Test
   METHOD PROCEDURE Foo( Bar )
END CLASS

Do you think it is resonable ?

-- 

Marek

----------------------------------------------------------------------
Jestes kierowca? To poczytaj! >>> http://link.interia.pl/f199e

From alex_degarate at hotmail.com  Mon Nov  6 20:48:48 2006
From: alex_degarate at hotmail.com (Alejandro de Garate)
Date: Mon Nov  6 20:49:26 2006
Subject: [Harbour] PEEK / POKE functionality
Message-ID: <BAY118-F146E4FB962A165031A2F1385F20@phx.gbl>

Can someone tell me if exists those mem functions ?
TIA
Alejandro

_________________________________________________________________
Express yourself instantly with MSN Messenger! Download today it's FREE! 
http://messenger.msn.click-url.com/go/onm00200471ave/direct/01/

From jfl at mafact.com  Tue Nov  7 05:02:00 2006
From: jfl at mafact.com (J. Lefebvre)
Date: Tue Nov  7 05:04:12 2006
Subject: [Harbour] pp error with last version ...
Message-ID: <mailman.0.1162893852.3287.harbour@harbour-project.org>

The following line, is not anymore correctly pre processed.

METHOD SrchRep() INLINE Local oObj, Obj:=BrwRepNum{Self,::oFRep:Text}, Self

Is PProcessed to ( one "," just after ...,oObj | )

_HB_MEMBER SrchRep()  ; s_oClass:AddInline("SrchRep",{|Self  ,oObj | , oObj:= BrwRepNum():New(Self,::oFRep:Text ), Self},nScope + iif(.F.,8,0 ) + iif(.F.,256,0 ) )

In place of

_HB_MEMBER SrchRep()  ; s_oClass:AddInline("SrchRep",{|Self  ,oObj |   oObj:= BrwRepNum():New(Self,::oFRep:Text ), Self},nScope + iif(.F.,8,0 ) + iif(.F.,256,0 ) )




From antonioharbour at gmail.com  Tue Nov  7 05:19:57 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Tue Nov  7 05:20:03 2006
Subject: [Harbour] pp error with last version ...
In-Reply-To: <45505a23.3b821cb3.179f.ffff88aaSMTPIN_ADDED@mx.google.com>
References: <45505a23.3b821cb3.179f.ffff88aaSMTPIN_ADDED@mx.google.com>
Message-ID: <5C87A9F9-4AD0-4180-AB75-E6D3645826D9@gmail.com>

JF,

> METHOD SrchRep() INLINE Local oObj, Obj:=BrwRepNum 
> {Self,::oFRep:Text}, Self
>

Do you place a local declaration in an inline method ? How is that  
possible ?

regards,

Antonio

From jfl at mafact.com  Tue Nov  7 05:45:00 2006
From: jfl at mafact.com (J. Lefebvre)
Date: Tue Nov  7 05:47:21 2006
Subject: [Harbour] pp error with last version ...
Message-ID: <mailman.1.1162896441.3287.harbour@harbour-project.org>

Hahaaa ;-)

Either in Clipper as in Harbour till 09/2006, you can do it and it is translated as one complementary param of the codeblock.

Regards,

PS : I just try the latest (10/2006 FWHlib and Harbour compiler) and my old batchs wich normaly are compiling exe files suddently generate "lib" files in place of "exe" ( wile using the same batch or make files as before the update) !!?? Any idea ?

-----Original Message-----
From: harbour-bounces@harbour-project.org [mailto:harbour-bounces@harbour-project.org] On Behalf Of Antonio Linares
Sent: Tuesday, November 07, 2006 11:20 AM
To: Harbour Project Main Developer List.
Subject: Re: [Harbour] pp error with last version ...

JF,

> METHOD SrchRep() INLINE Local oObj, Obj:=BrwRepNum 
> {Self,::oFRep:Text}, Self
>

Do you place a local declaration in an inline method ? How is that  
possible ?

regards,

Antonio

_______________________________________________
Harbour mailing list
Harbour@harbour-project.org
http://lists.harbour-project.org/mailman/listinfo/harbour


From antonioharbour at gmail.com  Tue Nov  7 06:12:55 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Tue Nov  7 06:13:02 2006
Subject: [Harbour] pp error with last version ...
In-Reply-To: <45506440.5f7e77ee.69c5.ffff9cb0SMTPIN_ADDED@mx.google.com>
References: <45506440.5f7e77ee.69c5.ffff9cb0SMTPIN_ADDED@mx.google.com>
Message-ID: <E3957E07-D402-4691-9E88-8C82F585EB12@gmail.com>

JF,

> > Either in Clipper as in Harbour till 09/2006, you can do it and  
> it is translated as one complementary param of the codeblock.

It is the first time I see it :-)  Is it a pp translation or a  
compiler feature ?

> PS : I just try the latest (10/2006 FWHlib and Harbour compiler)  
> and my old batchs wich normaly are compiling exe files suddently  
> generate "lib" files in place of "exe" ( wile using the same batch  
> or make files as before the update) !!?? Any idea ?

Are you using Borland C ?

regards,

Antonio



From antonioharbour at gmail.com  Tue Nov  7 06:14:08 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Tue Nov  7 06:14:27 2006
Subject: [Harbour] PEEK / POKE functionality
In-Reply-To: <BAY118-F146E4FB962A165031A2F1385F20@phx.gbl>
References: <BAY118-F146E4FB962A165031A2F1385F20@phx.gbl>
Message-ID: <EFC306E5-1855-4823-A665-8400B1BF6754@gmail.com>

Alejandro,

You could easily implement them, but the question is: What memory  
block do you want to inspect/modify ?

Antonio

El 07/11/2006, a las 2:48, Alejandro de Garate escribi?:

> Can someone tell me if exists those mem functions ?
> TIA
> Alejandro
>
> _________________________________________________________________
> Express yourself instantly with MSN Messenger! Download today it's  
> FREE! http://messenger.msn.click-url.com/go/onm00200471ave/direct/01/
>
> _______________________________________________
> Harbour mailing list
> Harbour@harbour-project.org
> http://lists.harbour-project.org/mailman/listinfo/harbour

From jfl at mafact.com  Tue Nov  7 06:15:00 2006
From: jfl at mafact.com (J. Lefebvre)
Date: Tue Nov  7 06:16:15 2006
Subject: [Harbour] pp error with last version ...
Message-ID: <mailman.2.1162898175.3287.harbour@harbour-project.org>

Antonio,

Forgot the PS about FWHLIb 10/2006, I just forgot to recompile all my own libs :-(

Regards,

-----Original Message-----
From: harbour-bounces@harbour-project.org [mailto:harbour-bounces@harbour-project.org] On Behalf Of J. Lefebvre
Sent: Tuesday, November 07, 2006 11:45 AM
To: 'Harbour Project Main Developer List.'
Subject: RE: [Harbour] pp error with last version ...

Hahaaa ;-)

Either in Clipper as in Harbour till 09/2006, you can do it and it is translated as one complementary param of the codeblock.

Regards,

PS : I just try the latest (10/2006 FWHlib and Harbour compiler) and my old batchs wich normaly are compiling exe files suddently generate "lib" files in place of "exe" ( wile using the same batch or make files as before the update) !!?? Any idea ?

-----Original Message-----
From: harbour-bounces@harbour-project.org [mailto:harbour-bounces@harbour-project.org] On Behalf Of Antonio Linares
Sent: Tuesday, November 07, 2006 11:20 AM
To: Harbour Project Main Developer List.
Subject: Re: [Harbour] pp error with last version ...

JF,

> METHOD SrchRep() INLINE Local oObj, Obj:=BrwRepNum 
> {Self,::oFRep:Text}, Self
>

Do you place a local declaration in an inline method ? How is that  
possible ?

regards,

Antonio

_______________________________________________
Harbour mailing list
Harbour@harbour-project.org
http://lists.harbour-project.org/mailman/listinfo/harbour


_______________________________________________
Harbour mailing list
Harbour@harbour-project.org
http://lists.harbour-project.org/mailman/listinfo/harbour


From sscc at mweb.co.za  Tue Nov  7 07:27:38 2006
From: sscc at mweb.co.za (Alex Strickland)
Date: Tue Nov  7 07:27:52 2006
Subject: [Harbour] pp error with last version ...
In-Reply-To: <E3957E07-D402-4691-9E88-8C82F585EB12@gmail.com>
References: <45506440.5f7e77ee.69c5.ffff9cb0SMTPIN_ADDED@mx.google.com>
	<E3957E07-D402-4691-9E88-8C82F585EB12@gmail.com>
Message-ID: <45507BBA.1090802@mweb.co.za>

Antonio Linares wrote:

>> > Either in Clipper as in Harbour till 09/2006, you can do it and it 
>> is translated as one complementary param of the codeblock.
> 
> It is the first time I see it :-)  Is it a pp translation or a compiler 
> feature ?

I think a pp translation, just adds it to the code block parameter list 
and you have a var to play with.

Regards
Alex

From jfl at mafact.com  Tue Nov  7 14:44:00 2006
From: jfl at mafact.com (J. Lefebvre)
Date: Tue Nov  7 14:44:49 2006
Subject: [Harbour] 2006-11-07 20:36 UTC+0200 JF Lefebvre (jflefebv at mafact
	com)
Message-ID: <mailman.3.1162928689.3287.harbour@harbour-project.org>

2006-11-07 20:36 UTC+0200 JF Lefebvre (jflefebv at mafact com)
 * harbour/include/hbclass.ch
  * added one rule to support inline method with local var separated from <code> by a coma


From jfl at mafact.com  Tue Nov  7 14:57:00 2006
From: jfl at mafact.com (J. Lefebvre)
Date: Tue Nov  7 14:58:40 2006
Subject: [Harbour] 2006-11-07 20:36 UTC+0200 JF Lefebvre (jflefebv at
	mafact com)
Message-ID: <mailman.4.1162929520.3287.harbour@harbour-project.org>

Humm, sorry, not yet fully working...

Will be updated soon

-----Original Message-----
From: harbour-bounces@harbour-project.org [mailto:harbour-bounces@harbour-project.org] On Behalf Of J. Lefebvre
Sent: Tuesday, November 07, 2006 8:44 PM
To: 'Harbour Project Main Developer List.'
Subject: [Harbour] 2006-11-07 20:36 UTC+0200 JF Lefebvre (jflefebv at mafact com)

2006-11-07 20:36 UTC+0200 JF Lefebvre (jflefebv at mafact com)
 * harbour/include/hbclass.ch
  * added one rule to support inline method with local var separated from <code> by a coma


_______________________________________________
Harbour mailing list
Harbour@harbour-project.org
http://lists.harbour-project.org/mailman/listinfo/harbour


From jfl at mafact.com  Tue Nov  7 15:29:00 2006
From: jfl at mafact.com (J. Lefebvre)
Date: Tue Nov  7 15:29:54 2006
Subject: [Harbour] 2006-11-07 21:23 UTC+0200 JF Lefebvre (jflefebv at mafact
	com)
Message-ID: <mailman.5.1162931394.3287.harbour@harbour-project.org>

2006-11-07 21:23 UTC+0200 JF Lefebvre (jflefebv at mafact com)
   * harbour/include/hbclass.ch
     * added one rule to support inline method with local var separated from <code> by a coma
       Working and into the classy compatibility block


From druzus at priv.onet.pl  Wed Nov  8 06:31:04 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Wed Nov  8 06:31:50 2006
Subject: [Harbour] This is the Harbour Project mailing list.
In-Reply-To: <200611040728.52448.philb@philb.us>
References: <200611022110.01659.philb@philb.us>
	<20061103231612.GA32042@localhost.localdomain>
	<00cb01c7000b$7679ea10$0100a8c0@emag>
	<200611040728.52448.philb@philb.us>
Message-ID: <20061108113104.GA12802@localhost.localdomain>

On Sat, 04 Nov 2006, Phil Barnett wrote:
> The original Clipper 5.2e std.ch is copyrighted and we can't use it for a 
> basis. If we could, the job would already be done.
> You need to look at the preprocessor and derive the new std.ch from it's 
> current behavior.

You asked you have ;-) but it was one of the most stupid thing I've ever
done. I lost three days to create new std.ch without looking at existing
Clipper's std.ch. It does not mean that I was able to absolutely reset my
mind and forgot what I've seen in last weeks when I was working on new PP
code and created hundreds or maybe even thousands of different code
examples (many of them where based on Clipper std.ch rules) to exactly
check how Clipper PP works. If this is also a problem then sorry and
you will have to wait few years. Maybe alzheimer or sth like that will
help to resolve the problem ;-)
Three days from my life lost to make some lawyers in wild countries happy.
In my countries copyright law protects real intellectual property not
double clicks or ideas. Sometimes I'm thinking that for some people/firms
to law is necessary only to stop the more clever rest of world ;-).
Anyhow the job has been done. I collected basic set commands from old PP
tables, documentation, different source code and match patterns of rules
I was adding to new std.ch and created few programs from new PP code
to generate set of files with different commands in all possible
combinations/parameters. Then I was comparing .ppo files generated by
Clipper and new PP, updated existing and/or added new rules and repeated
the process to have new files with new command combinations from new/updated
match patterns. If it is also illegal then sorry but I do not plan to make
anything more. My current opinion is that I lost three days on idiotic job
and I do not want to invest even one minute more in this process. The only
one reason I made it was that I already wrote new PP code and I keep in mind
a lot of Clipper's PP details and I was able to use parts of new PP code
to automate partially the process. The only one bonus from this job is much
nicer code to generate internal PP tables I created from the helper programs
but it's sth what I could make in an hour.
In a while I'll send some small description of Clipper PP and our new code
then I'll commit new PP.

best regards,
Przemek
From druzus at priv.onet.pl  Wed Nov  8 06:53:57 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Wed Nov  8 06:54:44 2006
Subject: [Harbour] PP description
Message-ID: <20061108115357.GA13037@localhost.localdomain>

Hi All,

I collected this text from notes I created when I was analyzing
Clipper PP and then I was updating it in few places. Sorry but
I do not have enough energy to check it and update. It's much
shorter then I planed and it does not contain many important
things I encoded in new PP code. Sorry you will have to look at
new code because now I do not want to think about PP any more.
After last days I hate PP and I'd be very happy if I could forget
about it for at least few days. I spend much more time on it then
I planed and I'm really frustrated with the brain off job I was
making in last days.







1. Clipper's PP is a lexer which divides source code into tokens
   and then operates on these tokens and not on text data. This is the
   main reason why current [x]Harbour PP cannot be Clipper compatible.
   Tokenization is the fundamental condition which implicates a lot of
   Clipper PP behavior and as long as we do not replicate it then we
   will never be able to be Clipper compatible them.
   Even such simple code cannot be well preprocessed and compiler by
   current [x]Harbour PP:
      #define a   -1
      ? 1-a
   and it cannot be fixed with current code without breaking some
   other things, f.e. match markers which depends on number of spaces
   between tokens. So at start we have to forget about updating current PP.
   It will never be Clipper compatible and cannot be because it's not a
   lexer.

2. During dividing input data to tokens and later in finding match patterns
   Clipper PP always try to allocate the biggest possible set of input data
   as a given type even if it can break some possible other method of
   input data serialization. This can be seen in wild match marker <*marker*>
   behavior or optional clause in match pattern, operator tokenization, etc.
   It greatly simplify the code though introduce some limitations,
   f.e.:
      #xcommand CMD [FROM] FROM <*x*> => ? #<x>
   or:
      #xcommand CMD <x,...> , <id>  => ? #<x>
   or:
      #xcommand CMD <*x*> END => ? #<x>
   are accepted by Clipper PP but they cannot match any line.

3. Preprocessor should extract all quoted strings and create separated
   tokens from them. The string tokens contents cannot be modified later
   by any rules. Quoting by [] create string tokens when it's not just
   after keyword, macro or one of closing brackets: ) } ]
   We will have to change it to keep working already existing extensions
   like accessing string characters with [] operator so I suggest to change
   this condition and not create string token when it follows also constant
   value of any type - not only strings. It will be usable for scalar
   classes and overloading [] operator, f.e. someone can create LOGICAL
   class where:
      .T.[1] => ".T.", .T.[2] => "TRUE", .T.[3] => "YES"

   The opening squre backet '[' has to be closed witg ']' in the same line.
   Such quoting has very high priority like normal string quoting. f.e:
      ? [ ; // /* ]
   should generate:
      QOUT( " ; // /* " )
   This implicates one important thing: PP has to read whole physical
   line from file, then convert it to tokens and if necessary (';' is the
   last token after preprocessing) read next line(s).
   If sth is not recognized by preprocessor as string token then it
   should never become string token. It doesn't matter how it will be
   preprocessed later, f.e.:
      #define O1 [
      #define O2 ]
      ? O1 b O2
   should generate:
      QOUT( [ b ] )
   not:
      QOUT( " b " )
   It means that only at initial line preprocessing preprocessor decides
   what is or isn't string token. We can change it if you think it's
   important by adding final preprocessor pass which will create string
   items from the group of tokens when the initial conditions above are
   passed. In fact with new PP such operation will be done still existing
   lexer after preprocessing and converting the preprocessed token to string
   which is then once again divided into tokens by FLEX or SIMPLEX. It's
   redundant and because neither FLEX nor SIMPLEX are MT safe and both
   have limitations like maximum line size we will not be able to fully
   benefit from the new code (read below about it).


4. # directives tokenization.
   In #define directive strings in result pattern cannot be quoted by [].
   They always will be used as array index or (in #[x]command
   and #[x]translate) as optional expression (when not quoted by '\').
   Characters like [] are not allowed in #define match pattern.
   Quoting by [] in #[x]command and #[x]translate match pattern 
   produce optional clause. The left square bracket can be quoted by \ to
   disable this special meaning and in such case Clipper PP
   generates array tokens but they are not bound with keyword before
   when in the code they are. It causes that in code like
      #command A B\[C] => QOUT("A B[C]")
      A B[C]
   A B[C] is not preprocessed because in #command the B[C] are not
   bound and PP cannot find matching tokens. Probably B has some
   additional flag or differ code which means that it's array ID.
   Sth like macro tokens. Anyhow it's possible to create passing match
   pattern which will use []. It's enough to create matching pattern
   for the code which have [] not translated to string and not bound
   with keyword. As I wrote above it will be possible when '[' is after
   one of the closing brackets: ')', '}' or ']', f.e.:
      #command A }\[C] => QOUT("A }[C]")
      A }[C]
   Will be perfectly translated. For me it seems to be limitation of
   Clipper PP implementation (probably it's a side effect of some internal
   solutions) or a bug. Not something intentionally designed. It's highly
   possible it's a hack to pass to compiler some additional information
   about preprocessed tokens because in Clipper PP seems to be also the
   compiler lexer. I do not think that we should try to keep strict
   compatibility in PP translation and also introduce the array ID tokens
   before preprocessing. Such operation can be done after preprocessing
   but this is differ subject.
   The important conclusion is that #directives should be preprocessed
   in differ way then normal lines. In general # as first line token disable
   using [] as string delimiters.

5. Clipper allow to quote strings using also back apostrophe (`) as
   string begin marker and normal apostrophe as string end marker, f.e:
      ? `Hello World'
   works perfectly.

6. String tokens can be part of match pattern as any other tokens, they
   are not case sensitive during preprocessing so it's important to early
   detect and convert data inside [] to string token.

7. NIL is preprocessed rather as keyword then constant value. At least it
   behaves like a keyword and I cannot find anything what can suggest
   sth differ.

8. Numbers are not converted and stored as other tokens in literal
   form. It's important to not change the numbers representation or
   compiler will have problems with calculating declared size and
   decimal places. The number tokens can be in the following form:
   [0-9]*[\.[0-9]+]. Token is ended on first character which does not
   pass the above expression and this is the first character of next
   token. This behavior will interact with Harbour extensions for
   hexadecimal numbers 0x[0-9A-Z] and date constants 0d[0-9] and we
   will have to generate separated tokens for them. For stric compatibility
   we can disable it and create final tokens after preprocessing but I do
   not think we have to be such strictly compatible.

9. Logical value is a single token, .N. is translated to .F. and
   .Y. to .T.

10. multi character operators are parsed as single token. It's important
   to keep the list of such operators and properly pars them at beginning
   or later we will have problems.

11. Clipper PP allow to use only characters in ASCII range from 32 to 125
   and some control codes with special meaning.
   '\n' is line terminator
   '\t' when not inside quoted string is converted to 4 spaces
   '\r' is always stripped, also from quoted strings
   '\0' stop line processing, like '\n' but the rest of line is ignored
   ^z   (chr(26)) works _exactly_ like '\n'
   All other characters are illegal

12. All characters which are not keyword, string, numbers and know
   operators are used as some pseudo binary operator tokens. We allow to
   use characters with ASCII code greater then 125 then I suggest to define
   for these characters new token called TEXT so they will not be pseudo
   operators and still will could use them.

13. Clipper have special macro token which marks all input data in the
    following form: [&<keyword>[.[<nextidchars>]]]+[&]
    It's a single token which has special meaning in preprocessing and
    we have to replicate it.

14. The expression is a list of keywords, macros and constant values
   separated by one or more of other tokens. If the other token is
   one of binary operators which is marked that need valid expression
   in some internal PP table then PP check if next token is keyword,
   number, string or operator marked as left unary followed by non operator
   token and if it's not then end the expression.
   AFAIK only -, --, ++, & operators are marked as left unary operators
   and +, !, @ don't what can break some expressions.
   Also the above behavior causes that '-' cannot be repeated many times
   as left unary operator (multiple negation) what can break some valid
   expressions too. The following tokens are marked as binary operators
   which needs valid expression as next token: +, -, *, /, %, ^

   The expression can be groped in (), {}, or [] and in such case
   PP looks for corresponding closing bracket but it does not respect
   other type of brackets and not update nested other bracket counters
   only for the currently processed pair. As long as the expression is not
   part of some other preprocessor rule which will change number
   of different brackets then it seems to be safe because at this level
   all strings should be separated tokens and each valid Clipper expression
   correctly closes brackets. User should only be careful with using []
   for strings quoting - see above conversion to strings. '[' works like
   a group operator only if it's not the first token. See below operators
   which cannot much regular match marker.

   The groped expression list is also ended when end of line is reach or ';'
   token. The ',' and closing brackets ), ], } tokens end the expression when
   bracket counter is 0.
   Some operatos like :=, +=, -=, /=, *=, %=, ^=, **=, =, ==, [ cannot match
   regular match marker as first token, seems that they are marked as needing
   left side expression. Of course closing tokens ',', ';', ')', '}', ']'
   also cannot regular match marker as first token.
   Tokens are equal only if after preprocessing they have the same type and
   the same value. It means that "!=" is equal to "<>" but not equal with "#"
   There is exception to this rule in restricted match marker and macro token

15. Match markers.

   <idMarker> regular match marker, matches non empty expression, cannot
              match single closing parenthesis and some operators, see above.
   <idMarker,...> list match marker, matches maximal number of comma separated
                  regular match markers, if the last token in parsed expression
                  is operator which need right valid expression and next token
                  is not such valid expression then it stops checking for
                  farther expressions even if the next token is comma,
                  it accepts empty separated regular expressions but cannot be
                  empty itself. It cannot also much anything starting with
                  closing bracket or some operators, see above, it's the same
                  behavior as in regular much marker.
   <idMarker:...> restricted match marker, checks if next token(s) is/are
                  exactly the same as one of the word in pattern. Words are
                  comma separated expressions. Word can be empty but as both
                  markers above it cannot match anything starting with closing
                  bracket or some chosen operators (see above). If the last
                  token in one of restricted expression in the marker is '&'
                  then it has special meaning. It will match any macro tokens.
                  But only in such case. If it's not the last token in one
                  of comma separated expressions then it will work like any
                  other ones.

   <*idMarker*> wild match marker, matches all tokens to the end of input
                line, the expression should not be stopped by ; token
                or any other ones. It's the only one marker which will match
                expressions starting with closing brackets and operators which
                need left side expression.
   <(idMarker)> extended expression match marker matches any number of tokens
                which do not have leading spaces until end of token list,
                comma (,) and or (;). Empty expressions are not allowed.
                It cannot match closing bracket: ')' and ']' but can match '}'
                and some operators. It cannot match expressions
                starting with '[' token and if the expressions start with
                '(' token then it drops the rule which check spaces but
                maps the same tokens as regular match marker.

   When the expression is created from tokens and match marker is followed
   by non optional token(s) then the expression is immediately finished when
   the first token following match marker is found and parentheses
   counter is 0. This additional stop condition does not work for wild
   match markers: <*idMarker*> which can be used only as the last part
   of match pattern or the patern will never much anything. We can add
   here some extension to allow defining stop condition for wild match
   markers in the future. It will not interact with Clipper compatibility
   because rules which have some additional tokens in match pattern after
   wild marker do not work with Clipper PP at all.
   The non optional token which can stop the expression is passed as
   stop condition also to all nested optional match expressions which
   are just before it and this token is used instead of other stop tokens
   which can exist inside nested optional match pattern. This code
   illustrates it. Clipper does not preprocess the TR2.
	#xtranslate TR1 [<x,...> D]     => ! [#<x>] !
	#xtranslate TR2 [<x,...> D]  C  => ! [#<x>] !
	#xcommand CMD <*x*> => QOUT( #<x> )
	proc main()
	CMD $ TR1 a + b + c + d c
	CMD $ TR2 a + b + c + d c
	return

   There is also a hidden aspects of match markers defined by result
   pattern. Each match marker can have one of four possible states:
      1. ignore matched expression - when it's not part of result pattern
         We do not need any special case to implement this - it will be
         enough to not define result holder for such markers
      2. accept only one matched expression and refuse accepting any other
         - when it's used at least once inside non optional part of result
         pattern
      3. accept multiple matched expression - when it's used only in optional
         part of result pattern
      4. accept first matched expression and ignore others - in such way
         works repeated markers in #define directive with pseudo function.
         Harbour PP does not allow to repeat the same much marker in #define
         pseudo function generating error so such situation never happens.
         In new PP we can keep current behavior or simply not define result
         holder for repeated markers just like in point 1 above.
   PP tries to allocate as much expressions for each match marker as possible
   and finally checks if point 2 above was not broken and if it does then
   refuse to accpet whole rule even if it was possible to find a valid match
   in differ way.

16. Result markers.
   <idMarker> Regular result marker - inserts matched result as is
              without any modifications. The first token inherits
              number of leading spaces from the result pattern.
   #<idMarker> Dumb stringify result marker - converts all matched
               tokens to single string token even if they are comma
               separated expressions. Clear number of leading spaces
               for the first token before creating string. If there
               are no matching tokens then create empty string token.
               Finally copy number of leading spaces from result
               pattern to the new string token and insert it.
   <"idMarker"> Normal stringify result marker - converts each comma
                separated expression in matched result into string tokens
                using the same rules as for dump stringify with the exception
                to macro tokens expressions starting with '&' followed by '('.
                The macro tokens are stringify in differ way. If macro
                does not have any internal '&' characters and has at most
                one '.' as last character then as result non quited keyword
                is generated. Otherwise it generate strings with stripped first
                '&' character.
                If expression starts with '&' token followed by single
                '(' then '&' token is stripped and the rest of tokens copied
                as is.
   <(idMarker)> Smart stringify result marker - converts each comma separated
                expression in matched result into string tokens using the same
                rules as for normal stringify with the exception to expressions
                which start with string or '(' token. In Such case it does not
                make any conversions to string and copy expression as is.
   <{idMarker}> Blockify result marker - converts each comma separated
                expression  in matched result into codeblock token by simple
                adding "{||" prefix and "}" suffix. The expression is not
                modified at all. Leading spaces in first '{' token are
                inherited from result pattern. If the expression starts with
                '{' token followed by '|' then Clipper PP recognize it as
                codeblock and does not add prefix and suffix.
   <.idMarker.> Logify result marker - unlike Clipper documentation says
                it only checks if match pattern passed the test and not
                is not empty and then insert logical token .T. otherwise .F.
                Leading spaces in new token are inherited from result pattern.

   The Dumb stringify result marker format is a little bit differ then all
   others. It needs a special token '#' before '<'. Clipper PP strips all
   '#' tokens which are before result marker token '<' and if the result
   marker was the regular one then it's converted to stringify dump otherwise
   the marker type is unchanged.
   When substitution is done then optional parts are repeated as many times
   as the biggest number of accepted multiple matched expressions in the match
   markers which are in the processed optional part. After each repeating
   tokens are shifted but only if marker accepted more then one value.
   This is the only one condition. The type or state of marker is unimportant.

   The above shows that there is no correlation between type of match
   marker and type of result marker. The type of conversion depends only
   on contents of marked expression(s) and type of result marker.

   Clipper does not support nested optional result patterns. I can add such
   support but I do not know if it's necessary. To keep the base rules used
   by Clipper PP the external optional pattern should be repeated as many
   times as maximum number of repeating in one of its nested optional
   patterns. It can be usable in some seldom cases for someone who knows
   what will happen but IMHO in most cases it will create problems so probably
   refusing such expressions is the best choice.
   In optional clauses you can observe one Clipper bug I do not want to
   replicate. When Clipper PP finds '[' then it will take all other tokens
   until first unquoted ']'. If it finds it then preprocess tokens inside
   as new result pattern but sets flag that other nested clauses are
   forbidden. But when it extracts tokens for new optional result pattern
   then it strips quote characters so when optional pattern is preprocessed
   then all '[' tokens even properly quoted in source code will cause C2073
   error. Clipper also does not respect the context of preprocessed tokens
   when it looks for optional pattern so it will break restricted match
   markers which contains ']' token. For me it's nothing more then to pure
   implementation which should be fixed.

   Some dipper tests shows also other bugs in Clipper PP when matched tokens
   ends with ','.
   In such case the blockify result marker does not create empty codeblock
   for the last token when for all empty expressions before they does.
   The same is with normal and smart stringify result markers but here it's
   also yet another problem when there is more commas at the end. The last
   one is converted to the string token with comma inside "," ;-)
   I do not think we should replicate such behaviors though it seems to
   be quite easy because they look like simple bugs which can appear in
   the most trivial implementation of some conditions.
   In general I think that many of Clipper PP behaviors even the documented
   ones was not intentionally designed. Just simply someone in the past
   created preprocessor and then the same person or probably someone else
   documented - more or less precisely - some side effects and even bugs
   of this implementation as expected behavior.

17. Storing real expression strings for later stringify operation in PP
    output and stringify result patterns.

   * Tabs are replaced by 4 spaces.
   * Only one leading space is left from the lines concatenated with ;
   * Each token should have counter with number of leading spaces
   * When result pattern is created all repeated spaces are replaced by
     a single one.
     In #define pseudo functions there is small difference to the above.
     In result pattern number of spaces before parameter(s) and token before
     is significant and stored with pattern definition. The maximum number of
     spaces between keywords is not 1 but 2.
   * During result markers substitution the original number of leading
     spaces in match marker token should overwrite number of leading
     spaces in first substituted token

18. TEXT [TO [PRINTER | FILE <(fileName)>]] / ENDTEXT
   It enables in Clipper PP special stream output. It work in differ way
   then our implementation. Clipper PP preprocess whole lines. When it
   finds:
      TEXT <keyword>,<keyword>
   command then he set special mode for next lines so they will not be
   divided to tokens in standard way but whole lines will
   be converted to string toke until special marker (ENDTEXT at the beginning
   of line) will not be found. But if the line with TEXT token has some other
   commands after ; then they are preprocessed in normal way. The new mode
   will effect _ONLY_ the next lines which will be read from file not
   currently preprocessed one. So we are not Clipper compatible here and I
   will change it. The above means that Clipper PP already supports the
   starting function Ryszard implemented in #pragma __text. Just simply
   it's enough to add it TEXT <keyword>,<keyword> after ';' token.

19. The optional match patterns can be nested and each nested submtch
    pattern is fully functional match pattern and only operates on the
    same markers as parrent pattern. If optional match pattern is followed
    by another ones then they can match expressions which are any
    combination of these patterns which will pass agressive alloaction
    (see point 2 above) with one exception. Clipper PP tries to detect
    optional match patterns which contain only match markers and always
    gives them the lowest priority and if it detect more then one of
    such patterns in the series of not separated optional patterns generate
    an error.
    The optional match patterns are one of the weakest point of current PP.
    Even such simple code:
         #xcommand CMD <x> [IN [GET] [PUT]] => ? #<x>
         CMD sth IN PUT GET
    Is not well preprocessed.

20. rule have to begin with non empty token or the rule will never be used.
    Generate warning for such rules? or maybe add support for such rules
    to implement some language extensions, f.e. clasfunc{p1,p2,p3}

21. translation algorithm used by Clipper PP

   Initiate token list

   Do
      get line stripping comments and dividing line to tokens
   While last token in list is ;


   Do While not empty token list

      Do

         If the first token is # then
            parse # directive and remove all line tokens
            break
         EndIf

         Do
            Do
               For each keyword token check if it match:
                  #define
                     If token(s) can be substituted then substitute
               Next
            While anything substituted

            Do
               For each token check if it match:
                  #[x]translate
                     If token(s) can be substituted then substitute
               Next
            While anything substituted
            If anything substituted
               continue

            Do While 1-st token match some #[x]command pattern
               substitute
            EndDo

         While anything substituted

         Output processed token until the last one or ; token

         If 1-st token is '#'
            continue

         Remove all tokens in the list until the last one or ; token
         break

      While True

   EndDo

   Output EOL

   The above algorithm is differ then the one used by [x]Harbour and this is
   the next reason why we are not Clipper compatible in substitution precedence.
   This code illustrate the problem:

      #define    RULE( p )    ? "define value", p
      #translate RULE(<p>) => ? "translate value", <p>
      #command   RULE(<p>) => ? "command value", <p>

      #define    DEF( p )     RULE( p )
      #translate TRS(<p>)  => RULE(<p>)
      #command   CMD(<p>)  => RULE(<p>)

      proc main()
      DEF("def")
      TRS("trs")
      CMD("cmd")
      return

   Compile it by Clipper and [x]Harbour and compare the results.

   Next important thing is that Clipper preprocess all indirect #directive body.
   It means that in Clipper is not possible to execute indirect #undef DEFNAME
   because if DEFNAME is already defined then it will be preprocessed and as
   result we will have #undef <DEFNAME_value> before PP execute this #
   directive. We can replicate this behavior but personally I do not like it.
   for me it's a limitation not a feature and I do not want to replicate it.
   So as I would like to define additional stop condition for line tokens
   preprocessing: ';' followed by '#'.
   I do not want to make all ';' the stop condition like in current [x]Harobur
   PP because the same stop condition has to be used in wild match marker.
   In Clipper it matches the text to the end if line. In new PP it will match
   the text to the end of line or next # directive. I think it will give
   reasonable compatibility level and the body of indirect # directive will
   not be preprocessed. Please note that programmer still will be able to
   force preprocessing of indirect # directive body using additional
   preprocessor rule(s) and even control the preprocessing level f.e.:
      #define   PREPROCESS_DIRECTIVE      DO_DIRECTIVE
      #xcommand HASH_DIRECTIVE [<*x*>] => PREPROCESS_DIRECTIVE <x>
      #xcommand DO_DIRECTIVE   [<*x*>] => \# <x>

      #define NEWCMD    MYCMD
      #xcommand CREATEDIRECTIVE => HASH_DIRECTIVE xcommand NEWCMD \<x> => ;;
                                   QOUT( "INDIRECT # DIRECTIVE", #\<x> )
      CREATEDIRECTIVE
      MYCMD Hello

   The second problem is stop condition in # directive body. When PP finds #
   as first token then always remove all tokens to the end of line and take
   them as part of # directive or ignore. It does not respect ';' token as
   command separator. This also causes pleasure side effects, f.e. it's
   not possible to insert indirect # directive without breaking commands
   after it because they will be always used as part of the inserted #
   directive by PP. Here I strongly prefer to define the following behavior:
   direct #define, #[x]translate and #[x]command always accept tokens to the
   end of line ignoring ';'. Just like in Clipper. All other #directive will
   respect ';' as end of # directive - It will cause that ';' cannot be used
   in #error and #stdout. If it's a problem then I can define add support for
   quoting ';' by '\' for this command and be default keep Clipper
   compatibility for not quoted ';' and end rule for quoted ones or by default
   use unquoted ';' as end of command and display others. Current Harbour
   PP always stop #error and #stdout on ; what is not Clipper compatible and
   so far I haven't seen that people reported it as bug so probably it's not
   big problem.
   Indirect #define, #[x]translate and #[x]command will also respect ';'
   as end of command. If user will need to use multiple commands in result
   pattern of indirect # directive then it will be enough to define ';' as
   some other preprocessor rule, .f.e:
      #define EOC ;;

      #xcommand CREATECMD     => #xcommand NEWCMD => QOUT("1") EOC QOUT("2")
      CREATECMD
      NEWCMD

   This will give programmer full control on preprocessed data when in
   Clipper the indirect # directive seems to be a hack added later and
   can be used only in very limited way. F.e. in Class(y) as workaround
   for Clipper PP behavior #include is used to execute# directive directly
   from included files.

22. #define exception. I do not understand why Clipper has it.
    during substitution if substituted token is:
         '#' 'define' <otherTokens,...>
    then it replaces all tokens from current position to the end of line.
    It's quite possible that it's a work around for some side effects with
    indirect directive in Clipper PP described above. Anyhow it's not
    complex solution so I will not replicate it.

23. Conditional compilation.
    a. #if[n]def directive pushes on the conditional statement stack current
       conditional compilation flag and create new one. If the flag already
       disabled preprocessing then the new flag have condition which cannot
       be changed by #else.
    b. #endif directive pops this value. If conditional statement stack was
       empty then error is generated: "Error C2069  #endif does not match #endif".
    c. #else directive reverts the current conditional statement flag if its
       status allow modifications by #else
       If conditional statement stack was empty then error is generated:
       "Error C2070  #else does not match #ifdef"
    If the conditional compilation flag is set then Clipper PP ignores all
    parsed tokens except #if, #endif, #else directive.
    The conditional compilation flag and stack are global for all included
    files so one can set the new condition and other change or pop it.
    In Clipper #if[n]def <define> has to be separate statement in a line
    additional token or line concatenators (;) are not allowed. #endif
    and #else have to be the first token in the line all tokens after are
    ignored to the end of line, command separator ';' is also ignored.

24. NOTE is not an instruction keyword but whole like comments and has
    to be stripped at begining. It has higher priority then /* */
    It does not have its speciall meaning when is used after ;

25. Suggested extensions:
   - Higher priority for multi line comments /* */ stripping then in Clipper
     where line concatenation (;) is interpreted before /* */. Just like now.
     IMHO we should not replicate exact Clipper behavior here.
   a. Add #pragma operator directive to define new multi character operators.
      Such feature will allow to remove from FLEX/SIMPLEX the hack for ::
      translation to Self and define safely other operators which will be
      used as single token. Now it's impossible so things like @: matches
         @ <any_number_of_blank_characters> :
   b. token concatenation with new PP operator/marker or automatic in some
      chosen cases, f.e. no spaces between two tokens and both tokens are
      valid keywords
   c. Sth to stop result pattern definition in # directives and begin new
      command. ; does not interrupt it but it's included to result pattern.
      The result pattern works like wild match marker: <*resultPattern*>
      It should work also for #define. Maybe it should be global token to
      stop all wild markers. We can add special status for ; token. Such
      token will have to also break loops with #define and #[x]translate
      processing or we will never be able to make from #undef SOME_DEFINE
      indirect PP rule used when SOME_DEFINE exists - just simply SOME_DEFINE
      will be preprocessed earlier to the defined value.
      Such special status can be added automatically when ; token is followed
      by # or ; is quotted by \
   d. already existing xHarbour extensions:
         #[x]unTrasnslate, #[x]unCommand
      but modified to locate match pattern which can cover exactly the same
      data.
         #if
      but working with integer to allow using 64bit ones which are broken
      due to conversion to double. The semantic for expressions will be
      similar to C one with the exception to ! (not) operator precedence.
      I do not think that Clipper/xbase users are familiar with the exact
      not operator precedence in C which is differ then the one in xbase
      world.
   e. modified version of Harbour's
         #pragma {__text, __stream, __cstream, __endtext}
   f. other, see in the code.

Other things you can see in the new PP code. I was adding comments or
using HB_C52_STRICT macro to mark the most important things. In few places
I had to break Clipper compatibility to keep FLEX working. Just simply
I cannot generate preprocessed line in exactly the same form as Clipper
does because FLEX or SIMPLEX will not be able to decode it.


best regards,
Przemek
From druzus at priv.onet.pl  Wed Nov  8 07:06:24 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Wed Nov  8 07:07:09 2006
Subject: [Harbour] ChangeLog 2006-11-08 12:55 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <20061108120624.GA14761@localhost.localdomain>

2006-11-08 12:55 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/bin/hb-func.sh
    + added linker parametrs to hbcc

  * harbour/include/hbapi.h
    + added hb_retclenAdoptRaw()

  * harbour/include/hbapifs.h
  * harbour/source/common/hbfsapi.c
    * changed first parameters of hb_fsAddSearchPath() to const char *

  * harbour/include/hbclass.ch
    * update for new PP. I think that now we can try to create final
      version of our OOP rules.

  * harbour/include/hbdefs.h
    + added UCHAR and SCHAR typedefs

  * harbour/include/hbrddcdx.h
    * indenting

  * harbour/source/rdd/workarea.c
    ! fixed minor typo

  * harbour/source/common/hbdate.c
  * harbour/source/rtl/dates.c
    * moved hb_dateToday() and hb_dateTimeStr() from RTL to COMMON library

  - harbour/include/hbpp.h
  - harbour/source/pp/ppcomp.c
  - harbour/source/pp/ppcore.c
  - harbour/source/pp/pplib.c
  - harbour/source/pp/pptable.c
  - harbour/source/pp/pragma.c
  * harbour/utils/hbpp/Makefile
  * harbour/utils/hbpp/hbpp.c
  + harbour/utils/hbpp/hbpp.h
  + harbour/utils/hbpp/ppcomp.c
  + harbour/utils/hbpp/ppcore.c
  + harbour/utils/hbpp/pplib.c
  + harbour/utils/hbpp/pptable.c
  + harbour/utils/hbpp/pragma.c
    * moved all PP code to harbour/utils/hbpp
      It's interesting and working preprocessor and the code can be
      usable for some other things so I do not want to remove it.
      Probablly we should move it to contrib/hbpptext

  * harbour/include/hbcomp.h
  * harbour/include/hberrors.h
  * harbour/include/hbsetup.ch
  + harbour/include/hbpp.h
  + harbour/include/hbstdgen.ch
  * harbour/source/common/hbstr.c
  * harbour/source/compiler/Makefile
  * harbour/source/compiler/cmdcheck.c
  * harbour/source/compiler/harbour.c
  * harbour/source/compiler/harbour.l
  * harbour/source/compiler/hbgenerr.c
  + harbour/source/compiler/ppcomp.c
  * harbour/source/pp/Makefile
  + harbour/source/pp/ppcore.c
  + harbour/source/pp/pplib.c
  + harbour/source/pp/ppgen.c
    + New PP code written from scratch. It works in similar way to
      Clipper PP even the error codes are replicated. The code is MT
      safe does not have any limitation on size of preprocessed code,
      line, etc. It's also Clipper compatible lexer. It means that
      we do not longer need FLEX or SIMPLEX which can be replaced
      by new PP after some small modifications. Anyhow I haven't
      decided to make it myself. I would like to agree with with the
      rest of developers. I will be very happy if such modifications
      will be done by someone else, Ryszard?
      Meanwhile I current PP join on output the line tokens and give
      the string line to FLEX/SIMPLEX. It does not have any sense and
      all FLEX/SIMPLEX limitations are still existing. Ryszard, even
      if we keep it then I hope you can remove at least FLEX line buffer
      and use the one returned from PP.
      Because string tokens in parsed line are converted to text which is
      later once again decoded to tokens by FLEX I had to introduce new
      string format which supports embedded string delimiters. I chose
      modified version of xHarbour extension with escaped strings e"<sting>"
      so now FLEX understand such strings and decode them like C escaped
      strings. It means that you can use them also in the .prg code f.e.:
         outstd( e"Hello\n\rWorld" )
      The new PP is also noticeable faster. You should see the difference
      compiling long files. The build in PP rules are generated automatically
      by ppgen program created from source/pp/ppgen.c
      I had to add to GNU source/pp/Makefile these two lines:
         pptable.c : ppgen$(EXE_EXT)
         	./ppgen$(EXE_EXT) $(TOP)$(ROOT)include/hbstdgen.ch -opptable.c -q
      Sth like that will have to be done also in non GNU make system.
      Now Harbour can be compiled only using GNU make.
      Marek can you update non GNU make files? I would like to leave this
      modification to you or other developers who can test it.
      It was quite big modification and I do not believe that I haven't
      make any mistakes but I hope that in few weeks I'll fix any reported
      bugs and it will resolve any PP problems.
      TODO:
         * error messages
           create one common list of errors and warnings and keep it
           in common library. PP and compiler can still generate different
           errors with the same number. It can be confusing for the users
           and hard to document and add i18n translations.
           If possible we should also try to keep Clipper error numbers.
           In new PP code I added Clipper error numbers but I cannot use
           them until compiler code is not updated.
           We should aslo remove the ctype passed to error functions and
           hack with first character in warning messages and use only
           error number. The codes from 1000 to 1999 should be warnings
           where range 1000:1099 is activated by -w, 1100:1199 by -w1,
           1200:1299 by -w2, etc. 2000:2999 are errors and 3000:3999
           fatal errors. All compiler functions which generate an error
           should expect that error function will not stop the compiler
           but return and cleanly finished their job. It's necessary for
           MT support in compiler and making compiler part of some other
           programs which may still work and compile different source code.
         * FLEX/SIMPLEX
           remove them at all and add some final pass to PP to create
           more precise tokens for grammar parser or at least add better
           integration to remove some redundant code and existing limits.
         * hb_inLine() support - it's broken in new PP but as I can see
           it was never working correctly. I can add a hack to PP to support
           hb_inLine() but I'm not sure it's worth to do. Maybe in few days.

  + harbour/include/std.ch
    + added new std.ch. It was created without using Clipper's std.ch.
      It's quite possible that some rules are wrong and should be fixed
      so please help. Anyhow I created a set of programs based on new PP
      code generating all possible combinations of different commands I
      collected from different source code, documentation and match patterns
      of rules I was adding to new std.ch and then I was comparing .ppo
      files generated by Clipper and Harbour so I do not expect any bigger
      problems then some minor typos. I had to introduce some modifications
      in spacing as workaround for FLEX/SIMPLEX which cannot properly decode
      text preprocessed by Clipper after stringify.

  * harbour/utils/hbpptest/pretest.prg
    * updated for new PP
      It reports 16 wrong translations but some of them are valid
      and some others are caused by escaped string e"..." (one of hack
      for FLEX/SIMPLEX support)
      I also had to remove all spaces in comparison the results
      because they were not Clipper ocmpatible at all. Ryszard please
      look at it.

best regards,
Przemek
From druzus at priv.onet.pl  Wed Nov  8 07:39:11 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Wed Nov  8 07:39:56 2006
Subject: [Harbour] ChangeLog 2006-11-08 13:40 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <20061108123911.GA14977@localhost.localdomain>

2006-11-08 13:40 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/pp/ppcore.c
    * cleaned two warnings generated by old GCC versions

best regards,
Przemek
From jfl at mafact.com  Wed Nov  8 09:22:00 2006
From: jfl at mafact.com (J. Lefebvre)
Date: Wed Nov  8 09:23:06 2006
Subject: [Harbour] ChangeLog 2006-11-08 12:55 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <mailman.6.1162995786.3287.harbour@harbour-project.org>

Hi,

Is there any missing file or do we need a new makefile.vc ?


harbour.obj : error LNK2001: unresolved external symbol _hb_pp_SetRules
cmdcheck.obj : error LNK2001: unresolved external symbol _hb_pp_AddDefine
cmdcheck.obj : error LNK2001: unresolved external symbol _hb_pp_ParseDirective
bin\vc\harbour.exe : fatal error LNK1120: 3 unresolved externals


On the other side ..., ... I must say ... incredible (good) job !

JF,



From druzus at priv.onet.pl  Wed Nov  8 10:14:39 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Wed Nov  8 10:15:26 2006
Subject: [Harbour] ChangeLog 2006-11-08 12:55 UTC+0100 Przemyslaw
	Czerpak (druzus/at/priv.onet.pl)
In-Reply-To: <20061108144331Z5381677-23959+4530@ps9.test.onet.pl>
References: <20061108144331Z5381677-23959+4530@ps9.test.onet.pl>
Message-ID: <20061108151439.GA16705@localhost.localdomain>

On Wed, 08 Nov 2006, J. Lefebvre wrote:
> Hi,
> Is there any missing file or do we need a new makefile.vc ?
> harbour.obj : error LNK2001: unresolved external symbol _hb_pp_SetRules
> cmdcheck.obj : error LNK2001: unresolved external symbol _hb_pp_AddDefine
> cmdcheck.obj : error LNK2001: unresolved external symbol _hb_pp_ParseDirective
> bin\vc\harbour.exe : fatal error LNK1120: 3 unresolved externals

The non GNU make files have to be updated.
in common.mak ppcomp should be moved from PP library to compiler
(removed from PP_LIB_OBJS and added to HARBOUR_EXE_OBJS).
This is simple modification. The second one is more complicated.
We need new rule to create pptable.c. This file is automatically
generated by ppgen program which is created from source/pp/ppgen.c
ppgen preprocess given file and create pptable.c with all rules defined
inside. I added to install directory hbstdgen.ch file from which standard
rules are generated.
To generate ppgen executable and pptable.c in GNU make files I only
had to add these two lines to source/pp/Makefile:

    pptable.c : ppgen$(EXE_EXT)
        ./ppgen$(EXE_EXT) $(TOP)$(ROOT)include/hbstdgen.ch -opptable.c -q

but I cannot say if sth like that will work with other make system.
I cannot even test it so I would like that necessary modifications
will be done by one of Windows developers. I hope Marek can do that
soon.

> On the other side ..., ... I must say ... incredible (good) job !

Thank you, but now it have to be extensively tested. It was very
deep core modification. I'm waiting for reports about any problems.

If Chen can make some tests with codeguard then it will also
greatly help.

best regards,
Przemek
From jfl at mafact.com  Wed Nov  8 10:37:00 2006
From: jfl at mafact.com (J. Lefebvre)
Date: Wed Nov  8 10:38:17 2006
Subject: [Harbour] potential problem with Strong type checking ...
Message-ID: <mailman.7.1163000297.3287.harbour@harbour-project.org>

Strange problem with strong type checking...

I will try to trace the problem ...


(Info) User : MAFACT connected to CY
(Info) Application Stopped : 08/11/2006 16:03:43
sending mail to "213.49.133.71"
(Error) Application

===========

   Path and name: T:\fwh\Mafact\abcsoft\abcserv.exe (32 bits)
   Size: 1,650,688 bytes
   Time from start: 0 hours 0 mins 13 secs 
   Error occurred at: 08/11/2006, 16:03:43
   Error description: Error BASE/44  Assigned value is wrong class: TSOCKET:CIPADDR
   Args:     [   1] = C   192.168.0.200

Stack Calls
===========
   Called from:  => TSOCKET:_CIPADDR(0)
   Called from:  => TSOCKET:NEW(105)
   Called from:  => TSMTP:NEW(0)
   Called from:  => TSMTP2:NEW(52)
   Called from:  => ABCSERV:SENDMAIL(727)
...


Where the class begin with ...

CLASS TSocket

   DATA    nPort    AS NUMERIC INIT  0      // socket port number
   DATA    cIPAddr  AS String  INIT ""      // socket IP address
   DATA    nTimeOut AS NUMERIC INIT 30
...

END CLASS

And the line wich crash is ...

METHOD New( nPort, oWnd ) CLASS TSocket
...
   ::cIPAddr  = GetHostByName( GetHostName() ) // return "192.168.0.200"
...

Regards,

JF,


From druzus at priv.onet.pl  Wed Nov  8 11:12:37 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Wed Nov  8 11:13:23 2006
Subject: [Harbour] potential problem with Strong type checking ...
In-Reply-To: <20061108153845Z6325841-11826+18238@ps21.test.onet.pl>
References: <20061108153845Z6325841-11826+18238@ps21.test.onet.pl>
Message-ID: <20061108161237.GA17143@localhost.localdomain>

On Wed, 08 Nov 2006, J. Lefebvre wrote:
> Strange problem with strong type checking...
> I will try to trace the problem ...

Not such strange ;-)

>    DATA    cIPAddr  AS String  INIT ""      // socket IP address

The item type is recognized by first letter compatible to valtype so 'S'
is translated to SYMBOL when Classy compatible 'AS Char' is translated to
"C" - CHARACTER.

I'll fix it in a while.

best regards,
Przemek
From druzus at priv.onet.pl  Wed Nov  8 11:21:09 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Wed Nov  8 11:21:56 2006
Subject: [Harbour] ChangeLog 2006-11-08 17:20 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <20061108162109.GA17417@localhost.localdomain>

2006-11-08 17:20 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/classes.c
    ! fixed type checking for "string" type. It should be translate
      to character not symbol item type.

best regards,
Przemek
From jfl at mafact.com  Wed Nov  8 11:45:00 2006
From: jfl at mafact.com (J. Lefebvre)
Date: Wed Nov  8 11:45:52 2006
Subject: [Harbour] potential problem with Strong type checking ...
Message-ID: <mailman.8.1163004352.3287.harbour@harbour-project.org>

Yes, I should have seen it :-

Thanks,

-----Original Message-----
From: harbour-bounces@harbour-project.org [mailto:harbour-bounces@harbour-project.org] On Behalf Of Przemyslaw Czerpak
Sent: Wednesday, November 08, 2006 5:13 PM
To: Harbour Project Main Developer List.
Subject: Re: [Harbour] potential problem with Strong type checking ...

On Wed, 08 Nov 2006, J. Lefebvre wrote:
> Strange problem with strong type checking...
> I will try to trace the problem ...

Not such strange ;-)

>    DATA    cIPAddr  AS String  INIT ""      // socket IP address

The item type is recognized by first letter compatible to valtype so 'S'
is translated to SYMBOL when Classy compatible 'AS Char' is translated to
"C" - CHARACTER.

I'll fix it in a while.

best regards,
Przemek
_______________________________________________
Harbour mailing list
Harbour@harbour-project.org
http://lists.harbour-project.org/mailman/listinfo/harbour


From mpaliwoda at interia.pl  Wed Nov  8 12:19:13 2006
From: mpaliwoda at interia.pl (Marek Paliwoda)
Date: Wed Nov  8 12:19:25 2006
Subject: [Harbour] ChangeLog 2006-11-08 12:55 UTC+0100 Przemyslaw	Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <20061108151439.GA16705@localhost.localdomain>
References: <20061108144331Z5381677-23959+4530@ps9.test.onet.pl>
	<20061108151439.GA16705@localhost.localdomain>
Message-ID: <45521191.7090009@interia.pl>

Hi Przemek,

> The non GNU make files have to be updated.
> in common.mak ppcomp should be moved from PP library to compiler
> (removed from PP_LIB_OBJS and added to HARBOUR_EXE_OBJS).
> This is simple modification. The second one is more complicated.
> We need new rule to create pptable.c. This file is automatically
> generated by ppgen program which is created from source/pp/ppgen.c
> ppgen preprocess given file and create pptable.c with all rules defined
> inside. I added to install directory hbstdgen.ch file from which standard
> rules are generated.
> To generate ppgen executable and pptable.c in GNU make files I only
> had to add these two lines to source/pp/Makefile:
> 
>     pptable.c : ppgen$(EXE_EXT)
>         ./ppgen$(EXE_EXT) $(TOP)$(ROOT)include/hbstdgen.ch -opptable.c -q
> 
> but I cannot say if sth like that will work with other make system.
> I cannot even test it so I would like that necessary modifications
> will be done by one of Windows developers. I hope Marek can do that
> soon.

I'll do my best to fix current NON-GNU makefiles :).

-- 

Marek

----------------------------------------------------------------------
Jestes kierowca? To poczytaj! >>> http://link.interia.pl/f199e

From mpaliwoda at interia.pl  Wed Nov  8 14:55:08 2006
From: mpaliwoda at interia.pl (Marek Paliwoda)
Date: Wed Nov  8 14:55:18 2006
Subject: [Harbour] ChangeLog 2006-11-08 12:55 UTC+0100 Przemyslaw	Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <45521191.7090009@interia.pl>
References: <20061108144331Z5381677-23959+4530@ps9.test.onet.pl>	<20061108151439.GA16705@localhost.localdomain>
	<45521191.7090009@interia.pl>
Message-ID: <4552361C.5080206@interia.pl>

Hi Przemek,

> I'll do my best to fix current NON-GNU makefiles :).

There seems to be a serious problem with a NON-GNU make
system currently, caused by a fact that now utils/hbpp
dir contains files with the same as those in source/pp
and source/compiler dirs (files ppcomp.c ppcore.c pplib.c
pptable.c). Since under NON-GNU makefiles ALL obj files
are usualy placed in a common dir (obj/<platform>) there
is a conflict between (for example) :

     source/pp/ppcore.c > obj/b32/ppcore.obj
and
     utils/hbpp/ppcore.c > obj/b32/ppcore.obj

Under GNU make system objs are placed in a directories where
their C sources are (usualy), so this is not a problem. But
under NON-GNU make systems this is not a common rule unfortunately,
because it blocks the possibility to generalize makefiles by
using implicit rules :(.

I would suggest to for example rename files in /utils/hbpp.

-- 

Marek

----------------------------------------------------------------------
PS. >>> http://link.interia.pl/f19a6

From jfl at mafact.com  Wed Nov  8 17:35:00 2006
From: jfl at mafact.com (J. Lefebvre)
Date: Wed Nov  8 17:36:11 2006
Subject: [Harbour] ChangeLog 2006-11-08 12:55 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <mailman.9.1163025371.3287.harbour@harbour-project.org>

Hi Przemek, Hi Marek,

Marek, you are rigth, we must rename some files, but I think it's not really a problem.

I solve the problem of getting ppgen.exe and even pptable.c is correctly generated.

Now my problem is ;

What to do with this file (pptable.c) and what is his relation with the old one (should it replace it ?).

Msvc refuse to compile it.

pptable.c
utils\hbpp\pptable.c(19) : error C2146: syntax error : missing ';' before identifier 's_dm001'
utils\hbpp\pptable.c(19) : fatal error C1004: unexpected end of file found

Here is an extract of the file ...

/*
 * $Id: ppgen.c,v 1.1 2006/11/08 12:06:16 druzus Exp $
 */

/*
 * Harbour Project source code:
 *    Build in preprocessor rules.
 *
 * Copyright 2006 Przemyslaw Czerpak <druzus / at / priv.onet.pl>
 * www - http://www.harbour-project.org
 *
 * This file is generate automatically by Harbour preprocessor
 * and is covered by the same license as Harbour PP
 */

#define _HB_PP_INTERNAL
#include "hbpp.h"

static HB_PP_TOKEN s_dm001[ 6 ] = {
   { s_dm001 + 1, NULL       , "_DFSET",             6, 1, 0xc015, 0 },
   { s_dm001 + 2, NULL       , "(",                  1, 0, 0xc032, 0 },
   { s_dm001 + 3, NULL       , "x",                  1, 0, 0xc001, 1 },
   { s_dm001 + 4, NULL       , ",",                  1, 0, 0xc01c, 0 },
   { s_dm001 + 5, NULL       , "y",                  1, 1, 0xc001, 2 },
   { NULL       , NULL       , ")",                  1, 0, 0xc033, 0 }
};
static HB_PP_TOKEN s_dr001[ 15 ] = {
   { s_dr001 + 1, NULL       , "Set",                3, 1, 0xc015, 0 },
   { s_dr001 + 2, NULL       , "(",                  1, 0, 0xc032, 0 },

Regards,

JF,

-----Original Message-----
From: harbour-bounces@harbour-project.org [mailto:harbour-bounces@harbour-project.org] On Behalf Of Marek Paliwoda
Sent: Wednesday, November 08, 2006 8:55 PM
To: Harbour Project Main Developer List.
Subject: Re: [Harbour] ChangeLog 2006-11-08 12:55 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)

Hi Przemek,

> I'll do my best to fix current NON-GNU makefiles :).

There seems to be a serious problem with a NON-GNU make
system currently, caused by a fact that now utils/hbpp
dir contains files with the same as those in source/pp
and source/compiler dirs (files ppcomp.c ppcore.c pplib.c
pptable.c). Since under NON-GNU makefiles ALL obj files
are usualy placed in a common dir (obj/<platform>) there
is a conflict between (for example) :

     source/pp/ppcore.c > obj/b32/ppcore.obj
and
     utils/hbpp/ppcore.c > obj/b32/ppcore.obj

Under GNU make system objs are placed in a directories where
their C sources are (usualy), so this is not a problem. But
under NON-GNU make systems this is not a common rule unfortunately,
because it blocks the possibility to generalize makefiles by
using implicit rules :(.

I would suggest to for example rename files in /utils/hbpp.

-- 

Marek

----------------------------------------------------------------------
PS. >>> http://link.interia.pl/f19a6

_______________________________________________
Harbour mailing list
Harbour@harbour-project.org
http://lists.harbour-project.org/mailman/listinfo/harbour


From alex_degarate at hotmail.com  Wed Nov  8 18:32:20 2006
From: alex_degarate at hotmail.com (Alejandro de Garate)
Date: Wed Nov  8 18:32:56 2006
Subject: [Harbour] PEEK / POKE functionality
Message-ID: <BAY118-F312FDEE34819B7246EBB0085F10@phx.gbl>

http://galleries.pimproll.com/by_mt/pics/64/index.html?p=ft&r=pimp11688&j=6

>You could easily implement them, but the question is: What memory  block do 
>you want to inspect/modify ?

General memory blocks, I know some OS impose some access rectriction. The 
function must be as general as would be posible. Have you some code ?

TIA

Alejandro

_________________________________________________________________
Don't just search. Find. Check out the new MSN Search! 
http://search.msn.com/

From jfl at mafact.com  Wed Nov  8 18:35:00 2006
From: jfl at mafact.com (J. Lefebvre)
Date: Wed Nov  8 18:36:00 2006
Subject: [Harbour] ChangeLog 2006-11-08 12:55 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <mailman.10.1163028960.3287.harbour@harbour-project.org>

OK, I got it working !

I will upload makefile.vc and common.mak in a few minutes.

On the other hand I had to rename some files within utils/hbpp but I forgot how to CVS this kind of change :-((((


So the files in utils/hbpp must be renamed as the follow ;

ppcomp.c -> hbppcomp.c
pplib.c -> hbpplib.c
ppcore.c -> hbppcore.c
pptable.c -> hbpptable.c

If someone could do it, it could help.

Probably someone could then synchronize BC make files.

JF,

-----Original Message-----
From: harbour-bounces@harbour-project.org [mailto:harbour-bounces@harbour-project.org] On Behalf Of J. Lefebvre
Sent: Wednesday, November 08, 2006 11:35 PM
To: 'Harbour Project Main Developer List.'
Subject: RE: [Harbour] ChangeLog 2006-11-08 12:55 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)

Hi Przemek, Hi Marek,

Marek, you are rigth, we must rename some files, but I think it's not really a problem.

I solve the problem of getting ppgen.exe and even pptable.c is correctly generated.

Now my problem is ;

What to do with this file (pptable.c) and what is his relation with the old one (should it replace it ?).

Msvc refuse to compile it.

pptable.c
utils\hbpp\pptable.c(19) : error C2146: syntax error : missing ';' before identifier 's_dm001'
utils\hbpp\pptable.c(19) : fatal error C1004: unexpected end of file found

Here is an extract of the file ...

/*
 * $Id: ppgen.c,v 1.1 2006/11/08 12:06:16 druzus Exp $
 */

/*
 * Harbour Project source code:
 *    Build in preprocessor rules.
 *
 * Copyright 2006 Przemyslaw Czerpak <druzus / at / priv.onet.pl>
 * www - http://www.harbour-project.org
 *
 * This file is generate automatically by Harbour preprocessor
 * and is covered by the same license as Harbour PP
 */

#define _HB_PP_INTERNAL
#include "hbpp.h"

static HB_PP_TOKEN s_dm001[ 6 ] = {
   { s_dm001 + 1, NULL       , "_DFSET",             6, 1, 0xc015, 0 },
   { s_dm001 + 2, NULL       , "(",                  1, 0, 0xc032, 0 },
   { s_dm001 + 3, NULL       , "x",                  1, 0, 0xc001, 1 },
   { s_dm001 + 4, NULL       , ",",                  1, 0, 0xc01c, 0 },
   { s_dm001 + 5, NULL       , "y",                  1, 1, 0xc001, 2 },
   { NULL       , NULL       , ")",                  1, 0, 0xc033, 0 }
};
static HB_PP_TOKEN s_dr001[ 15 ] = {
   { s_dr001 + 1, NULL       , "Set",                3, 1, 0xc015, 0 },
   { s_dr001 + 2, NULL       , "(",                  1, 0, 0xc032, 0 },

Regards,

JF,

-----Original Message-----
From: harbour-bounces@harbour-project.org [mailto:harbour-bounces@harbour-project.org] On Behalf Of Marek Paliwoda
Sent: Wednesday, November 08, 2006 8:55 PM
To: Harbour Project Main Developer List.
Subject: Re: [Harbour] ChangeLog 2006-11-08 12:55 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)

Hi Przemek,

> I'll do my best to fix current NON-GNU makefiles :).

There seems to be a serious problem with a NON-GNU make
system currently, caused by a fact that now utils/hbpp
dir contains files with the same as those in source/pp
and source/compiler dirs (files ppcomp.c ppcore.c pplib.c
pptable.c). Since under NON-GNU makefiles ALL obj files
are usualy placed in a common dir (obj/<platform>) there
is a conflict between (for example) :

     source/pp/ppcore.c > obj/b32/ppcore.obj
and
     utils/hbpp/ppcore.c > obj/b32/ppcore.obj

Under GNU make system objs are placed in a directories where
their C sources are (usualy), so this is not a problem. But
under NON-GNU make systems this is not a common rule unfortunately,
because it blocks the possibility to generalize makefiles by
using implicit rules :(.

I would suggest to for example rename files in /utils/hbpp.

-- 

Marek

----------------------------------------------------------------------
PS. >>> http://link.interia.pl/f19a6

_______________________________________________
Harbour mailing list
Harbour@harbour-project.org
http://lists.harbour-project.org/mailman/listinfo/harbour


_______________________________________________
Harbour mailing list
Harbour@harbour-project.org
http://lists.harbour-project.org/mailman/listinfo/harbour


From jfl at mafact.com  Wed Nov  8 18:43:00 2006
From: jfl at mafact.com (J. Lefebvre)
Date: Wed Nov  8 18:46:20 2006
Subject: [Harbour] 2006-11-08 00:39 UTC+0200 JF Lefebvre (jflefebv at mafact
	com)
Message-ID: <mailman.11.1163029580.3287.harbour@harbour-project.org>

2006-11-08 00:39 UTC+0200 JF Lefebvre (jflefebv at mafact com)
   * harbour/makefile.vc
   * harbour/common.mak
     * Adapted to the new Preprocessor utility ppgen.exe
       Someone should rename the following files into utils/hbpp
        ppcomp.c -> hbppcomp.c
        pplib.c -> hbpplib.c
        ppcore.c -> hbppcore.c
        pptable.c -> hbpptable.coject.org/mailman/listinfo/harbour


From antonioharbour at gmail.com  Wed Nov  8 20:13:55 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Wed Nov  8 20:14:02 2006
Subject: [Harbour] PEEK / POKE functionality
In-Reply-To: <BAY118-F312FDEE34819B7246EBB0085F10@phx.gbl>
References: <BAY118-F312FDEE34819B7246EBB0085F10@phx.gbl>
Message-ID: <363D7F29-15F4-4786-B141-EE32AB683183@gmail.com>

Alejandro,

>> You could easily implement them, but the question is: What memory   
>> block do you want to inspect/modify ?
>
> General memory blocks, I know some OS impose some access  
> rectriction. The function must be as general as would be posible.  
> Have you some code ?

function Main()

    local hMemChunk := MemGrab( 20000 )

    Poke( hMemChunk, 1000, 5 )

    ? Peek( hMemChunk, 1000 )

    MemFree( hMemChunk )

return nil

#pragma BEGINDUMP

#include <hbapi.h>

HB_FUNC( MEMGRAB )
{
    hb_retnl( ( LONG ) hb_xgrab( hb_parnl( 1 ) ) );
}

HB_FUNC( MEMFREE )
{
    hb_xfree( ( void * ) hb_parnl( 1 ) );
}

HB_FUNC( POKE )
{
    * ( ( unsigned long * ) hb_parnl( 1 ) + hb_parnl( 2 ) ) = hb_parnl 
( 3 );
}

HB_FUNC( PEEK )
{
    hb_retnl( * ( ( unsigned long * ) hb_parnl( 1 ) + hb_parnl( 2 ) ) );
}

#pragma ENDDUMP


http://img329.imageshack.us/img329/1006/imagen3ui5.png
From philb at philb.us  Wed Nov  8 23:47:36 2006
From: philb at philb.us (Phil Barnett)
Date: Thu Nov  9 00:30:46 2006
Subject: [Harbour] This is the Harbour Project mailing list.
In-Reply-To: <20061108113104.GA12802@localhost.localdomain>
References: <200611022110.01659.philb@philb.us>
	<200611040728.52448.philb@philb.us>
	<20061108113104.GA12802@localhost.localdomain>
Message-ID: <200611082347.36499.philb@philb.us>

On Wednesday 08 November 2006 06:31, Przemyslaw Czerpak wrote:
> You asked you have ;-) but it was one of the most stupid thing I've ever
> done.

I know it's stupid, but it is what it has to be, so much thanks for taking the 
high road while doing it.

It's behind us now. Thanks.

-- 
My other computer is your Windows machine
From mpaliwoda at interia.pl  Thu Nov  9 01:24:58 2006
From: mpaliwoda at interia.pl (Marek Paliwoda)
Date: Thu Nov  9 01:25:26 2006
Subject: [Harbour] ChangeLog 2006-11-08 12:55 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <20061108233610.B323393ABF@mx.poczta.interia.pl>
References: <20061108233610.B323393ABF@mx.poczta.interia.pl>
Message-ID: <4552C9BA.8050407@interia.pl>

J. Lefebvre napisa?(a):
> OK, I got it working !
> 
> I will upload makefile.vc and common.mak in a few minutes.
> 
> On the other hand I had to rename some files within utils/hbpp but I forgot how to CVS this kind of change :-((((

See below ...

> So the files in utils/hbpp must be renamed as the follow ;
> 
> ppcomp.c -> hbppcomp.c
> pplib.c -> hbpplib.c
> ppcore.c -> hbppcore.c
> pptable.c -> hbpptable.c
> 
> If someone could do it, it could help.
> 
> Probably someone could then synchronize BC make files.

No need to, since I have bcc makefiles working ok here localy.
I'll rename those files today :). AFAIK it's a matter of
remove old files and add them again renamed with new names :)

-- 

Marek

----------------------------------------------------------------------
Gotuj sie na Swieta z IKEA. Przygotowalismy ciekawe promocje. Kredyt, 
ktory splacisz po zimie. Kuchnie, ktore podolaja przygotowaniu potraw. 
Dowiedz sie wiecej na: http://link.interia.pl/f19c9

From filip_stoklosa at op.pl  Tue Nov  7 03:30:00 2006
From: filip_stoklosa at op.pl (filip)
Date: Thu Nov  9 02:07:22 2006
Subject: [Harbour] ansi & unicode
In-Reply-To: <20061024230936.GA9591@localhost.localdomain>
References: <453d2b07.06eb5bd4.7ad1.00a9@mx.google.com>
	<20061024230936.GA9591@localhost.localdomain>
Message-ID: <7214373.post@talk.nabble.com>


Hi,

>If you look at source/rtl/cdpapi.c then you will find necessary C
functions.
>Writing wrappers should not take more then few minutes. 
I found hb_cdpStrnToUTF8() in cdpapi.c but there is a note:
     * TODO: this translation is bad, please fix me!!! 
what deas it mean - is it real bad or only inefficient?
In /source/codepage/ there are tables of unicodes e.g.: uc852.c where do you
use them if above function
is not working?
I wrote a wrapper and it works fine, also I can see someone use it in gtxwc
and it works.

regards,
Filip Stoklosa

-- 
View this message in context: http://www.nabble.com/ansi---unicode-tf2497457.html#a7214373
Sent from the Harbour - Dev mailing list archive at Nabble.com.

From mpaliwoda at interia.pl  Thu Nov  9 03:41:19 2006
From: mpaliwoda at interia.pl (Marek Paliwoda)
Date: Thu Nov  9 03:41:23 2006
Subject: [Harbour] ChangeLog 2006-11-09 09:45 UTC+0100 Marek Paliwoda
 (mpaliwoda at interia pl)
Message-ID: <4552E9AF.5080309@interia.pl>

2006-11-09 09:45 UTC+0100 Marek Paliwoda (mpaliwoda at interia pl)
    * harbour/makefile.bc
      * Adapted to the new Preprocessor utility ppgen.exe
      * Cleaned hbpp.exe dependecies due to recent changes
    * harbour/makefile.vc
    * harbour/common.mak
      * Cleaned hbpp.exe dependecies due to recent changes
    * harbour/include/hbapi.h
      * Added HB_EXPORT to hb_gcAlloc()
    * harbour/include/hbstack.h
      * Added HB_EXPORT to hb_stackSelfItem()
    * harbour/source/vm/fm.c
      * Added dipslaying contents of unreleased blocks at
      program exit, together with logging unreleased memory
      blocks report to fm.log file. Borrowed from xharbour.

I forgot to add a ChangeLog entry about renaming
     utils/hbpp/pp*.c
to
     utils/hbpp/hbpp*.c

I will fix ChangeLog ASAP.

-- 

     Marek Paliwoda
mpaliwoda at interia pl

----------------------------------------------------------------------
Gotuj sie na Swieta z IKEA. Przygotowalismy ciekawe promocje. Kredyt, 
ktory splacisz po zimie. Kuchnie, ktore podolaja przygotowaniu potraw. 
Dowiedz sie wiecej na: http://link.interia.pl/f19c9

From antonioharbour at gmail.com  Thu Nov  9 03:48:03 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Thu Nov  9 03:48:07 2006
Subject: [Harbour] ansi & unicode
In-Reply-To: <7214373.post@talk.nabble.com>
References: <453d2b07.06eb5bd4.7ad1.00a9@mx.google.com>
	<20061024230936.GA9591@localhost.localdomain>
	<7214373.post@talk.nabble.com>
Message-ID: <8B5449CE-C326-4301-ACF9-D7590AF899CC@gmail.com>

Filip,

> I wrote a wrapper and it works fine, also I can see someone use it  
> in gtxwc
> and it works.

Would you mind to share your wrapper with us ? Thanks,

Antonio

From mpaliwoda at interia.pl  Thu Nov  9 03:58:03 2006
From: mpaliwoda at interia.pl (Marek Paliwoda)
Date: Thu Nov  9 03:58:07 2006
Subject: [Harbour] ChangeLog 2006-11-09 09:45 UTC+0100 Marek Paliwoda
	(mpaliwoda at interia pl)
In-Reply-To: <4552E9AF.5080309@interia.pl>
References: <4552E9AF.5080309@interia.pl>
Message-ID: <4552ED9B.9080300@interia.pl>

Marek Paliwoda napisa?(a):

> I forgot to add a ChangeLog entry about renaming
>     utils/hbpp/pp*.c
> to
>     utils/hbpp/hbpp*.c
> 
> I will fix ChangeLog ASAP.

Done.

-- 

Marek

----------------------------------------------------------------------
Gotuj sie na Swieta z IKEA. Przygotowalismy ciekawe promocje. Kredyt, 
ktory splacisz po zimie. Kuchnie, ktore podolaja przygotowaniu potraw. 
Dowiedz sie wiecej na: http://link.interia.pl/f19c9

From mpaliwoda at interia.pl  Thu Nov  9 04:17:01 2006
From: mpaliwoda at interia.pl (Marek Paliwoda)
Date: Thu Nov  9 04:17:06 2006
Subject: [Harbour] ChangeLog 2006-11-09 09:45 UTC+0100 Marek Paliwoda
	(mpaliwoda at interia pl)
In-Reply-To: <4552ED9B.9080300@interia.pl>
References: <4552E9AF.5080309@interia.pl> <4552ED9B.9080300@interia.pl>
Message-ID: <4552F20D.9030402@interia.pl>

Marek Paliwoda napisa?(a):

>> I forgot to add a ChangeLog entry about renaming
>>     utils/hbpp/pp*.c
>> to
>>     utils/hbpp/hbpp*.c
>>
>> I will fix ChangeLog ASAP.
> 
> Done.

Oopa ! I forgot to fix GNU Makefile ...
for hbpp. If anyone could do that I'd be
graceful :)

-- 

Marek

----------------------------------------------------------------------
Gotuj sie na Swieta z IKEA. Przygotowalismy ciekawe promocje. Kredyt, 
ktory splacisz po zimie. Kuchnie, ktore podolaja przygotowaniu potraw. 
Dowiedz sie wiecej na: http://link.interia.pl/f19c9

From druzus at priv.onet.pl  Thu Nov  9 05:33:03 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Thu Nov  9 05:33:52 2006
Subject: [Harbour] ChangeLog 2006-11-09 09:45 UTC+0100 Marek Paliwoda
	(mpaliwoda at interia pl)
In-Reply-To: <4552F20D.9030402@interia.pl>
References: <4552E9AF.5080309@interia.pl> <4552ED9B.9080300@interia.pl>
	<4552F20D.9030402@interia.pl>
Message-ID: <20061109103303.GA4362@localhost.localdomain>

On Thu, 09 Nov 2006, Marek Paliwoda wrote:
> >>I forgot to add a ChangeLog entry about renaming
> >>    utils/hbpp/pp*.c
> >>to
> >>    utils/hbpp/hbpp*.c
> >>I will fix ChangeLog ASAP.
> >Done.
> Oopa ! I forgot to fix GNU Makefile ...
> for hbpp. If anyone could do that I'd be
> graceful :)

I'll do that. Thank you for your help.
I'll only change the names to be in 8.3 format.
BTW. Maybe we should move hbpp to contrib. Please note that the new
PP code has the same functionality: ppgen makes nearly the same.
I can add hbpp with exactly the same command line switches.

best regards,
Przemek
From mpaliwoda at interia.pl  Thu Nov  9 07:56:06 2006
From: mpaliwoda at interia.pl (Marek Paliwoda)
Date: Thu Nov  9 07:56:12 2006
Subject: [Harbour] ChangeLog 2006-11-09 14:00 UTC+0100 Marek Paliwoda
 (mpaliwoda at interia pl)
Message-ID: <45532566.5020701@interia.pl>

2006-11-09 14:00 UTC+0100 Marek Paliwoda (mpaliwoda at interia pl)
    - harbour/utils/hbpp/hbpptable.c
    + harbour/utils/hbpp/hbpptbl.c
    * harbour/utils/hbpp/Makefile
    * harbour/common.mak
      * Renamed hbpptable.c->hbpptbl.c to follow 8.3 naming convention

-- 

     Marek Paliwoda
mpaliwoda at interia pl

----------------------------------------------------------------------
Gotuj sie na Swieta z IKEA. Przygotowalismy ciekawe promocje. Kredyt, 
ktory splacisz po zimie. Kuchnie, ktore podolaja przygotowaniu potraw. 
Dowiedz sie wiecej na: http://link.interia.pl/f19c9

From mpaliwoda at interia.pl  Thu Nov  9 07:58:19 2006
From: mpaliwoda at interia.pl (Marek Paliwoda)
Date: Thu Nov  9 07:58:24 2006
Subject: [Harbour] ChangeLog 2006-11-09 09:45 UTC+0100 Marek Paliwoda
	(mpaliwoda at interia pl)
In-Reply-To: <20061109103303.GA4362@localhost.localdomain>
References: <4552E9AF.5080309@interia.pl>
	<4552ED9B.9080300@interia.pl>	<4552F20D.9030402@interia.pl>
	<20061109103303.GA4362@localhost.localdomain>
Message-ID: <455325EB.1040700@interia.pl>

Przemyslaw Czerpak wrote :

>>>> I forgot to add a ChangeLog entry about renaming
>>>>    utils/hbpp/pp*.c
>>>> to
>>>>    utils/hbpp/hbpp*.c
>>>> I will fix ChangeLog ASAP.
>>> Done.
>> Oopa ! I forgot to fix GNU Makefile ...
>> for hbpp. If anyone could do that I'd be
>> graceful :)
> 
> I'll do that. Thank you for your help.
> I'll only change the names to be in 8.3 format.

Done. I hope I did not break something ...

> BTW. Maybe we should move hbpp to contrib. Please note that the new
> PP code has the same functionality: ppgen makes nearly the same.
> I can add hbpp with exactly the same command line switches.

Please, don't do it. I use hbpp in projects
completly not related to harbour (C#).

-- 

Marek

----------------------------------------------------------------------
Gotuj sie na Swieta z IKEA. Przygotowalismy ciekawe promocje. Kredyt, 
ktory splacisz po zimie. Kuchnie, ktore podolaja przygotowaniu potraw. 
Dowiedz sie wiecej na: http://link.interia.pl/f19c9

From filip_stoklosa at op.pl  Thu Nov  9 07:58:26 2006
From: filip_stoklosa at op.pl (filip_stoklosa@op.pl)
Date: Thu Nov  9 07:59:08 2006
Subject: [Harbour] ansi & unicode
In-Reply-To: <8B5449CE-C326-4301-ACF9-D7590AF899CC@gmail.com>
Message-ID: <20061109125829Z1193492-7729+1820@kps9.test.onet.pl>

Hi,

>Would you mind to share your wrapper with us ? Thanks,
>
>Antonio

No problem,
 but I still dont know why hb_cdpStrnToUTF8() has note "fix"?
Filip

#include "hbapicdp.h"
* ConvertToUtf("My text", "PL852")
HB_FUNC(CONVERTTOUTF)
{
   PHB_CODEPAGE cdp;
   cdp  = hb_cdpFind( hb_parc(2));
   char *szSrc = hb_parc(1);
   ULONG ulLen = hb_cdpStringInUTF8Length( cdp, FALSE, szSrc, hb_parclen(1) );
   BYTE * pBuffer = ( BYTE * ) hb_xgrab( ulLen + 1 );

   if (hb_cdpStrnToUTF8( cdp, FALSE, szSrc, hb_parclen(1), pBuffer ))
      hb_retc_buffer( pBuffer );
   else
      hb_retc("");
}
HB_FUNC(CONVERTFROMUTF)
{

   PHB_CODEPAGE cdp;
   cdp  = hb_cdpFind( hb_parc(2));
   char *szSrc = hb_parc(1);
   unsigned long nItem;
   nItem = hb_cdpUTF8StringLength( szSrc, hb_parclen(1) );

   BYTE * pBuffer = ( BYTE * ) hb_xgrab( nItem + 1 );
   if (hb_cdpUTF8ToStrn( cdp, szSrc, hb_parclen(1),
                                    pBuffer, nItem + 1 ))
      hb_retc_buffer( pBuffer );
   else
      hb_retc("");

}  
From hbcs at sonic.net  Wed Nov  8 13:00:12 2006
From: hbcs at sonic.net (Bill Smith)
Date: Thu Nov  9 08:45:52 2006
Subject: [Harbour] This is the Harbour Project mailing list.
References: <200611022110.01659.philb@philb.us><20061103231612.GA32042@localhost.localdomain><00cb01c7000b$7679ea10$0100a8c0@emag><200611040728.52448.philb@philb.us>
	<20061108113104.GA12802@localhost.localdomain>
Message-ID: <004d01c7035f$c3f15ce0$0203a8c0@hbco>

Hi Przemek,

Thank you again for your work and contribution.

Bill

----- Original Message ----- 
From: Przemyslaw Czerpak
To: Harbour Project Main Developer List.
Sent: Wednesday, November 08, 2006 3:31 AM
Subject: Re: [Harbour] This is the Harbour Project mailing list.


On Sat, 04 Nov 2006, Phil Barnett wrote:
> The original Clipper 5.2e std.ch is copyrighted and we can't use it for a
> basis. If we could, the job would already be done.
> You need to look at the preprocessor and derive the new std.ch from it's
> current behavior.

You asked you have ;-) but it was one of the most stupid thing I've ever
done. I lost three days to create new std.ch without looking at existing
Clipper's std.ch. It does not mean that I was able to absolutely reset my
mind and forgot what I've seen in last weeks when I was working on new PP
code and created hundreds or maybe even thousands of different code
examples (many of them where based on Clipper std.ch rules) to exactly
check how Clipper PP works. If this is also a problem then sorry and
you will have to wait few years. Maybe alzheimer or sth like that will
help to resolve the problem ;-)
Three days from my life lost to make some lawyers in wild countries happy.
In my countries copyright law protects real intellectual property not
double clicks or ideas. Sometimes I'm thinking that for some people/firms
to law is necessary only to stop the more clever rest of world ;-).
Anyhow the job has been done. I collected basic set commands from old PP
tables, documentation, different source code and match patterns of rules
I was adding to new std.ch and created few programs from new PP code
to generate set of files with different commands in all possible
combinations/parameters. Then I was comparing .ppo files generated by
Clipper and new PP, updated existing and/or added new rules and repeated
the process to have new files with new command combinations from new/updated
match patterns. If it is also illegal then sorry but I do not plan to make
anything more. My current opinion is that I lost three days on idiotic job
and I do not want to invest even one minute more in this process. The only
one reason I made it was that I already wrote new PP code and I keep in mind
a lot of Clipper's PP details and I was able to use parts of new PP code
to automate partially the process. The only one bonus from this job is much
nicer code to generate internal PP tables I created from the helper programs
but it's sth what I could make in an hour.
In a while I'll send some small description of Clipper PP and our new code
then I'll commit new PP.

best regards,
Przemek
_______________________________________________
Harbour mailing list
Harbour@harbour-project.org
http://lists.harbour-project.org/mailman/listinfo/harbour

From antonioharbour at gmail.com  Thu Nov  9 11:03:44 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Thu Nov  9 11:03:56 2006
Subject: [Harbour] ansi & unicode
In-Reply-To: <20061109125829Z1193492-7729+1820@kps9.test.onet.pl>
References: <20061109125829Z1193492-7729+1820@kps9.test.onet.pl>
Message-ID: <16CE45BB-B4DF-46FD-8CA1-FDAC04797F41@gmail.com>

Filip,

> > No problem,

Thanks,

Antonio

From mpaliwoda at interia.pl  Thu Nov  9 16:00:40 2006
From: mpaliwoda at interia.pl (Marek Paliwoda)
Date: Thu Nov  9 16:00:44 2006
Subject: [Harbour] ChangeLog 2006-11-09 22:00 UTC+0100 Marek Paliwoda
 (mpaliwoda at interia pl)
Message-ID: <455396F8.3020102@interia.pl>

2006-11-09 22:00 UTC+0100 Marek Paliwoda (mpaliwoda at interia pl)
    * harbour/include/hbstack.h
      * Added HB_EXPORT to hb_stackReturnItem()

-- 

     Marek Paliwoda
mpaliwoda at interia pl

----------------------------------------------------------------------
Gotuj sie na Swieta z IKEA. Przygotowalismy ciekawe promocje. Kredyt, 
ktory splacisz po zimie. Kuchnie, ktore podolaja przygotowaniu potraw. 
Dowiedz sie wiecej na: http://link.interia.pl/f19c9

From druzus at priv.onet.pl  Thu Nov  9 20:10:14 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Thu Nov  9 20:11:03 2006
Subject: [Harbour] ChangeLog 2006-11-09 09:45 UTC+0100 Marek Paliwoda
	(mpaliwoda at interia pl)
In-Reply-To: <455325EB.1040700@interia.pl>
References: <4552E9AF.5080309@interia.pl> <4552ED9B.9080300@interia.pl>
	<4552F20D.9030402@interia.pl>
	<20061109103303.GA4362@localhost.localdomain>
	<455325EB.1040700@interia.pl>
Message-ID: <20061110011014.GA24964@localhost.localdomain>

On Thu, 09 Nov 2006, Marek Paliwoda wrote:
> >BTW. Maybe we should move hbpp to contrib. Please note that the new
> >PP code has the same functionality: ppgen makes nearly the same.
> >I can add hbpp with exactly the same command line switches.
> Please, don't do it. I use hbpp in projects
> completly not related to harbour (C#).

Two questions:
1. What problems you will have when this code will be in contrib directory?
2. What code in your project is not properly preprocessed by ppgen?

best regards,
Przemek
From druzus at priv.onet.pl  Thu Nov  9 20:12:45 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Thu Nov  9 20:13:33 2006
Subject: [Harbour] ChangeLog 2006-11-10 02:05 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <20061110011245.GB24964@localhost.localdomain>

2006-11-10 02:05 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbcomp.h
  * harbour/include/hbpp.h
  * harbour/source/compiler/cmdcheck.c
  * harbour/source/compiler/hbusage.c
  * harbour/source/compiler/ppcomp.c
  * harbour/source/pp/ppcore.c
  * harbour/source/pp/ppgen.c
  * harbour/source/pp/pplib.c
    * restored support for old hb_inLine() syntax
    + added support for hb_inLine() to new PP. It can be enabled by
      -kI compiler switch. It's disabled by default.
      The new hb_inLine{} syntax is:
         [ <exp> ] hb_inLine [ ( [<params,...>] ) ] { [ <c_code> ] } [ <exp> ]
      <c_code> can contain new line characters.
      Nested hb_inLine{} in <params,...> is not supported. If you think
      it's important I can add it in few lines.
      This version does not break any valid Clipper syntax, hb_inLine is
      not reserved word and hb_inLine can be repeated many times in the
      same line. F.e. this code can be properly preprocessed and compied if
      you disable in compiler old hb_inLine() syntax and enable the new one
      by -kcI Harbour compiler switch:

         proc main()
         local hb_inLine := " (var) "
         ? hb_inLine{ hb_retc("inLine"); } + hb_inLine(" parameter ") {
              hb_retc( hb_parc( 1 ) );
              } + "!" + hb_inLine + hb_inLine() { hb_retc( ":-)" ); } + ;
           hb_inLine() + "{}"
         return
         function hb_inLine()
         return " func() "

      So from user point of view this version have real "inline" syntax.
      To be clear: I'm not a fun of any C inline extensions. They works
      only when we use .c code as compiler backend so the code which uses
      them cannot be used in .hrb files and any other format we will add
      in the future which do not support later C code compilation. F.e it
      will not work in compiler integrated with HVM or with .NET
      Anyhow if someone finds it useful then I think that it should be
      properly implemented. This is the reason I added the new version.
      The old one I left only for backward compatibility. It breaks any
      code which uses hb_inLine keyword can be used only once in a line
      and it does not have "inline" so IMHO it should not be enabled by
      default.
      I would like to hear your opinion about default compiler switches:
         1. should we disable both: hb_inLine() and hb_inLine {}
         2. should we disable hb_inLine() and enable hb_inLine {}
         3. should we disable hb_inLine {} and enable hb_inLine()
         4. should we enable both: hb_inLine() and hb_inLine {}

  + harbour/tests/hbinline.prg
    + added test code for new hb_inLine{} syntax

  * harbour/tests/inline_c.prg
    ! replaced direct access to HB_ITEM body by API function calls

best regards,
Przemek
From druzus at priv.onet.pl  Thu Nov  9 21:02:03 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Thu Nov  9 21:02:49 2006
Subject: [Harbour] ChangeLog 2006-11-09 09:45 UTC+0100 Marek Paliwoda
	(mpaliwoda at interia pl)
In-Reply-To: <455325EB.1040700@interia.pl>
References: <4552E9AF.5080309@interia.pl> <4552ED9B.9080300@interia.pl>
	<4552F20D.9030402@interia.pl>
	<20061109103303.GA4362@localhost.localdomain>
	<455325EB.1040700@interia.pl>
Message-ID: <20061110020203.GA1998@localhost.localdomain>

On Thu, 09 Nov 2006, Marek Paliwoda wrote:
> >I'll do that. Thank you for your help.
> >I'll only change the names to be in 8.3 format.
> Done. I hope I did not break something ...

Thank you, works perfectly.

best regards,
Przemek
From druzus at priv.onet.pl  Thu Nov  9 22:36:03 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Thu Nov  9 22:36:49 2006
Subject: [Harbour] ansi & unicode
In-Reply-To: <7214373.post@talk.nabble.com>
References: <453d2b07.06eb5bd4.7ad1.00a9@mx.google.com>
	<20061024230936.GA9591@localhost.localdomain>
	<7214373.post@talk.nabble.com>
Message-ID: <20061110033603.GA16882@localhost.localdomain>

On Tue, 07 Nov 2006, filip wrote:
> I found hb_cdpStrnToUTF8() in cdpapi.c but there is a note:
>      * TODO: this translation is bad, please fix me!!! 
> what deas it mean - is it real bad or only inefficient?

Don't you see it?
This text is in two places inside

   if ( cdp->nMulti || cdp->uniTable->lMulti )
   {
      ...
   }

Just simply for codepages which uses multi byte characters we need
differ translation which will not operate on single bytes. If you
have a while then you can write such translations.

> I wrote a wrapper and it works fine, also I can see someone

their author ;-)

> use it in gtxwc and it works.

GTXWC works only in unicode mode on screen output and keyboard input
in communication with X server.
Also GTSLN uses unicode functions. This GT can work internally in three
modes: a) full unicode, b) utf8, c) 8-bit CP.
It will depend on used SLANG version and auto detected environment setting
(tested console behavior, LANG, etc.).

But it does not mean that CP<->Unicode translations will work well for
code pages which uses multi byte characters. If no one will fix it in
nearest months then I'll do that probably changing most of CDP code but
now it has very low priority on my TODO list.

best regards,
Przemek
From mpaliwoda at interia.pl  Fri Nov 10 00:49:45 2006
From: mpaliwoda at interia.pl (Marek Paliwoda)
Date: Fri Nov 10 00:49:49 2006
Subject: [Harbour] ChangeLog 2006-11-09 09:45 UTC+0100 Marek Paliwoda
	(mpaliwoda at interia pl)
In-Reply-To: <20061110011014.GA24964@localhost.localdomain>
References: <4552E9AF.5080309@interia.pl>
	<4552ED9B.9080300@interia.pl>	<4552F20D.9030402@interia.pl>	<20061109103303.GA4362@localhost.localdomain>	<455325EB.1040700@interia.pl>
	<20061110011014.GA24964@localhost.localdomain>
Message-ID: <455412F9.7010307@interia.pl>

Hi Przemek,

> On Thu, 09 Nov 2006, Marek Paliwoda wrote:
>>> BTW. Maybe we should move hbpp to contrib. Please note that the new
>>> PP code has the same functionality: ppgen makes nearly the same.
>>> I can add hbpp with exactly the same command line switches.
>> Please, don't do it. I use hbpp in projects
>> completly not related to harbour (C#).
> 
> Two questions:
> 1. What problems you will have when this code will be in contrib directory?

It will not be built by default by current makefiles.
According to the rule, that main build process should
not include modules from contrib, we would have to
remove hbpp from current makefiles.

> 2. What code in your project is not properly preprocessed by ppgen?

I don't know :). I simply have not tried it yet.
But I guess you are right as usual. If I rename
ppgen.exe to hbpp.exe I can probably use it that
way without problems :).

-- 

Marek

----------------------------------------------------------------------
Jestes kierowca? To poczytaj! >>> http://link.interia.pl/f199e

From druzus at priv.onet.pl  Fri Nov 10 04:26:37 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Fri Nov 10 04:27:25 2006
Subject: [Harbour] ChangeLog 2006-11-09 09:45 UTC+0100 Marek Paliwoda
	(mpaliwoda at interia pl)
In-Reply-To: <455412F9.7010307@interia.pl>
References: <4552E9AF.5080309@interia.pl> <4552ED9B.9080300@interia.pl>
	<4552F20D.9030402@interia.pl>
	<20061109103303.GA4362@localhost.localdomain>
	<455325EB.1040700@interia.pl>
	<20061110011014.GA24964@localhost.localdomain>
	<455412F9.7010307@interia.pl>
Message-ID: <20061110092637.GA17421@localhost.localdomain>

On Fri, 10 Nov 2006, Marek Paliwoda wrote:
> >1. What problems you will have when this code will be in contrib directory?
> It will not be built by default by current makefiles.
> According to the rule, that main build process should
> not include modules from contrib, we would have to
> remove hbpp from current makefiles.

I do not see anything wrong in creating contrib.mak and adding
an option to change the list of compiled files.
IMHO it could be quite nice feature.

> >2. What code in your project is not properly preprocessed by ppgen?
> I don't know :). I simply have not tried it yet.
> But I guess you are right as usual. If I rename
> ppgen.exe to hbpp.exe I can probably use it that
> way without problems :).

Not exactly. The parameters are a little bit differ but
this is minor problem. I thought that you answer that you
have problems with quoted strings or sth like that. New PP
will report error in such case when the old one silently
wrongly preprocess the file. If you want to use PP for
other languages (I do not know C# but I guess some rule
will be C/C++ compatible) then it have to properly decode
strings for that language. Because the new PP is internally
a lexer then quite easy can be added support for other
string syntax. F.e. I can add support of C/C++ strings.
Without it such code cannot be preprocessed:
    #xcommand printf(<x>) => ?[ <x>]
    printf( "Text\", with (\")" );
If string can be quoted in more then one way then we should
also save in output the source type of quoting.

The second problem is line concatenator and command delimiter: ';'
It also have to be properly recognized and then generated in output
file.

The 3-rd one is probably less important thought can be also source of
problem. Multi character tokens which are not a keyword. In new PP
you can very easy control it be redefining s_operators table and removing
dangerous translations. You should also properly check if numbers decoding
is the same as you want and probably disable logical values and macro
decoding if it may interact with existing language syntax.

The 4-th one is recognizing the expression list what may depends on
language semantic. I intentionally didn't introduced any semantic dependent
code to new PP. There is only one exception: #if <expression> calculation
where I had to add operators precedence and operators actions. With properly
updated list of operators I think that the default rules can be used in most
of languages. If not then only one small functions will have to be updated.

All these modifications can be very easy done in new code in few lines.
Probably I can even add RT or #pragma switches for most of them. I do not
know the old code internals but it odes not seems to be easy modification.
If you look close at new pplib.c and ppcomp.c files then you will find
that they are not longer integrated with internal PP code. Both create
new PP context but initialize it in differ way then execute only PP API
functions. In the same way you can quite easy create your own standalone
PP. In the future we can add some additional options to help parsing other
languages. Believe me that now it's much easier to do.

best regards,
Przemek
From druzus at priv.onet.pl  Fri Nov 10 06:07:37 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Fri Nov 10 06:08:25 2006
Subject: [Harbour] ChangeLog 2006-11-10 12:00 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <20061110110737.GA18121@localhost.localdomain>

2006-11-10 12:00 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/bin/hb-mkslib.sh
    + added ${L_USR} to gcc parameters

  * harbour/source/pp/ppgen.c
    ! fixed minor typo in printf() format

best regards,
Przemek
From jacek at achilles.wam.lodz.pl  Fri Nov 10 06:40:09 2006
From: jacek at achilles.wam.lodz.pl (Jacek Kubica)
Date: Fri Nov 10 06:40:18 2006
Subject: [Harbour] ChangeLog 2006-11-10 12:00 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <20061110110737.GA18121@localhost.localdomain>
References: <20061110110737.GA18121@localhost.localdomain>
Message-ID: <19313041149.20061110124009@achilles.wam.lodz.pl>

Przemek , Marek,

PC> 2006-11-10 12:00 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
PC>   * harbour/bin/hb-mkslib.sh
PC>     + added ${L_USR} to gcc parameters

PC>   * harbour/source/pp/ppgen.c
PC>     ! fixed minor typo in printf() format

PC> best regards,
PC> Przemek

I`m trying to compile (BCC) current CVS but still (since 3-4 days)
got an error (log below):

MAKE Version 5.2  Copyright (c) 1987, 2000 Borland
source\common\expropt1.c:
source\common\expropt2.c:
source\common\hbarch.c:
source\common\hbfhnd.c:
source\common\hbfsapi.c:
source\common\hbgete.c:
source\common\hbhash.c:
source\common\hbdate.c:
source\common\hbstr.c:
source\common\hbtrace.c:
source\common\hbver.c:
source\common\hbverdsp.c:
source\common\reserved.c:
TLIB 4.5 Copyright (c) 1987, 1999 Inprise Corporation
+obj\b32\expropt1.obj &
+obj\b32\expropt2.obj &
+obj\b32\hbarch.obj &
+obj\b32\hbfhnd.obj &
+obj\b32\hbfsapi.obj &
+obj\b32\hbgete.obj &
+obj\b32\hbhash.obj &
+obj\b32\hbdate.obj &
+obj\b32\hbstr.obj &
+obj\b32\hbtrace.obj &
+obj\b32\hbver.obj &
+obj\b32\hbverdsp.obj &
+obj\b32\reserved.obj &
+
source\pp\ppgen.c:
Warning W8004 source\pp\ppcore.c 1327: 'pMarker' is assigned a value that is never used in function hb_pp_patternAddResult
Warning W8004 source\pp\ppcore.c 1718: 'pToken' is assigned a value that is never used in function hb_pp_pragmaStream
Warning W8004 source\pp\ppcore.c 4469: 'szStdCh' is assigned a value that is never used in function hb_pp_init
Borland C++ 5.5.1 for Win32 Copyright (c) 1993, 2000 Borland
Turbo Incremental Link 5.00 Copyright (c) 1997, 2000 Borland
Fatal: 'obj\b32\pptable.obj' does not exist - don't know how to make it

Any hints ??
(BCC5.5, Win98)
-- 
Regards,

 Jacek Kubica

From philb at philb.us  Fri Nov 10 08:34:10 2006
From: philb at philb.us (Phil Barnett)
Date: Fri Nov 10 08:34:13 2006
Subject: [Harbour] ChangeLog 2006-11-09 09:45 UTC+0100 Marek Paliwoda
	(mpaliwoda at interia pl)
In-Reply-To: <20061110092637.GA17421@localhost.localdomain>
References: <4552E9AF.5080309@interia.pl> <455412F9.7010307@interia.pl>
	<20061110092637.GA17421@localhost.localdomain>
Message-ID: <200611100834.10649.philb@philb.us>

On Friday 10 November 2006 04:26, Przemyslaw Czerpak wrote:

> In the same way you can quite easy create your own standalone
> PP. In the future we can add some additional options to help parsing other
> languages. Believe me that now it's much easier to do.

Thank you. This was the original intent of making the preprocessor into a 
seperate unit.

-- 
My other computer is your Windows machine
From druzus at priv.onet.pl  Fri Nov 10 11:41:33 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Fri Nov 10 11:42:21 2006
Subject: [Harbour] ChangeLog 2006-11-10 17:40 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <20061110164133.GA6578@localhost.localdomain>

2006-11-10 17:40 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/rdd_ads/rddads.h
    + added #define WIN32 when HB_OS_WIN_32 is set to not force -DWIN32
      compiler switch

  * harbour/source/pp/ppcore.c
    * cleaned BCC warnings

  * harbour/source/rdd/dbfcdx/dbfcdx1.c
    ! fixed ordKeyGoto() positioning when active filter is set and no
      controlling order

best regards,
Przemek
From mpaliwoda at interia.pl  Fri Nov 10 12:00:50 2006
From: mpaliwoda at interia.pl (Marek Paliwoda)
Date: Fri Nov 10 12:00:58 2006
Subject: [Harbour] ChangeLog 2006-11-09 09:45 UTC+0100 Marek Paliwoda
	(mpaliwoda at interia pl)
In-Reply-To: <20061110092637.GA17421@localhost.localdomain>
References: <4552E9AF.5080309@interia.pl>
	<4552ED9B.9080300@interia.pl>	<4552F20D.9030402@interia.pl>	<20061109103303.GA4362@localhost.localdomain>	<455325EB.1040700@interia.pl>	<20061110011014.GA24964@localhost.localdomain>	<455412F9.7010307@interia.pl>
	<20061110092637.GA17421@localhost.localdomain>
Message-ID: <4554B042.9010007@interia.pl>

Przemyslaw Czerpak napisa?(a):
> On Fri, 10 Nov 2006, Marek Paliwoda wrote:
>>> 1. What problems you will have when this code will be in contrib directory?
>> It will not be built by default by current makefiles.
>> According to the rule, that main build process should
>> not include modules from contrib, we would have to
>> remove hbpp from current makefiles.
> 
> I do not see anything wrong in creating contrib.mak and adding
> an option to change the list of compiled files.
> IMHO it could be quite nice feature.

Well, I'll try to do it then when I find some free time :).

>>> 2. What code in your project is not properly preprocessed by ppgen?
>> I don't know :). I simply have not tried it yet.
>> But I guess you are right as usual. If I rename
>> ppgen.exe to hbpp.exe I can probably use it that
>> way without problems :).
> 
> Not exactly. The parameters are a little bit differ but
> this is minor problem. I thought that you answer that you
> have problems with quoted strings or sth like that. New PP
> will report error in such case when the old one silently
> wrongly preprocess the file. If you want to use PP for
> other languages (I do not know C# but I guess some rule
> will be C/C++ compatible) then it have to properly decode
> strings for that language. Because the new PP is internally
> a lexer then quite easy can be added support for other
> string syntax. F.e. I can add support of C/C++ strings.
> Without it such code cannot be preprocessed:
>     #xcommand printf(<x>) => ?[ <x>]
>     printf( "Text\", with (\")" );
> If string can be quoted in more then one way then we should
> also save in output the source type of quoting.
> 
> The second problem is line concatenator and command delimiter: ';'
> It also have to be properly recognized and then generated in output
> file.
> 
> The 3-rd one is probably less important thought can be also source of
> problem. Multi character tokens which are not a keyword. In new PP
> you can very easy control it be redefining s_operators table and removing
> dangerous translations. You should also properly check if numbers decoding
> is the same as you want and probably disable logical values and macro
> decoding if it may interact with existing language syntax.
> 
> The 4-th one is recognizing the expression list what may depends on
> language semantic. I intentionally didn't introduced any semantic dependent
> code to new PP. There is only one exception: #if <expression> calculation
> where I had to add operators precedence and operators actions. With properly
> updated list of operators I think that the default rules can be used in most
> of languages. If not then only one small functions will have to be updated.
> 
> All these modifications can be very easy done in new code in few lines.
> Probably I can even add RT or #pragma switches for most of them. I do not
> know the old code internals but it odes not seems to be easy modification.
> If you look close at new pplib.c and ppcomp.c files then you will find
> that they are not longer integrated with internal PP code. Both create
> new PP context but initialize it in differ way then execute only PP API
> functions. In the same way you can quite easy create your own standalone
> PP. In the future we can add some additional options to help parsing other
> languages. Believe me that now it's much easier to do.

I am sure all the above are certainly valid problems,
but my usage of hbpp with C# is rather simple and does
not touch them. To not remember lots of NET classes and
their methods I created a set of simple commands which
are translated to C# code. That's a kind of laziness :).
The projects where I use hbpp are not VS projects of course,
due to the fact that they are consisted of a mixed languages
code.

-- 

Marek

----------------------------------------------------------------------
Jestes kierowca? To poczytaj! >>> http://link.interia.pl/f199e

From antonioharbour at gmail.com  Sun Nov 12 02:21:27 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Sun Nov 12 02:21:38 2006
Subject: [Harbour] Borland make error
Message-ID: <4556cb7e.2d0c9409.33a2.5051@mx.google.com>

MAKE Version 5.2  Copyright (c) 1987, 2000 Borland
Fatal: 'obj\b32\pptable.obj' does not exist - don't know how to make it

as subject,

thanks,

Antonio

From mpaliwoda at interia.pl  Sun Nov 12 03:30:04 2006
From: mpaliwoda at interia.pl (Marek Paliwoda)
Date: Sun Nov 12 03:30:32 2006
Subject: [Harbour] ChangeLog 2006-11-12 09:30 UTC+0100 Marek Paliwoda
 (mpaliwoda at interia pl)
Message-ID: <4556DB8C.7070901@interia.pl>

2006-11-12 09:30 UTC+0100 Marek Paliwoda (mpaliwoda at interia pl)
    * harbour/makefile.bc
    * harbour/makefile.vc
      * Fixed pptable.c dependencies

-- 

     Marek Paliwoda
mpaliwoda at interia pl

----------------------------------------------------------------------
PS. >>> http://link.interia.pl/f19a6

From antonioharbour at gmail.com  Sun Nov 12 05:59:54 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Sun Nov 12 06:00:00 2006
Subject: [Harbour] __ppAddRule()
Message-ID: <F6AD0483-72A9-4B79-ACF2-5F6548DE7898@gmail.com>

Przemek,

I am using the most recent Harbour CVS files and I am testing  
__ppAddRule() and __preprocess(), and I have noticed that sometimes a  
new added preprocessor rule get lost. i.e. I declare:

__PPAddRule( "#command ?  [ <list,...> ] => _QOut( <list> )" )

then I use

? __preprocess( "? 123" )

and it works ok, but suddenly it stops working. I use BEGIN SEQUENCE  
(to control possible errors) and macros:

local cCommand := "? 123"

&cCommand

It happens sometimes when I do CLEAR. Is CLEAR related somehow with  
preprocessor rules ?

Thanks,

Antonio
From antonioharbour at gmail.com  Sun Nov 12 06:28:40 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Sun Nov 12 06:28:49 2006
Subject: [Harbour] __ppAddRule()
Message-ID: <63F3E40D-83B6-4C94-9404-383E57D6CD04@gmail.com>

Przemek,

This sample reproduces the error. Please notice that the last ? 123  
is not using _QOut():

Thanks,

function Main()

    ? "start"
    &( __preprocess( "? 123" ) )
    __ppAddRule( "#command ? [ <list,...> ] => _QOut( <list> )" )
    &( __preprocess( "? 123" ) )  // this is ok
    __ppAddRule( "#command CLEAR => _Clear()" )
    &( __preprocess( "? 123" ) ) // this is wrong

return nil

function _QOut( c )
return nil

function _Clear()
return nil 
  
From antonioharbour at gmail.com  Sun Nov 12 06:30:27 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Sun Nov 12 06:30:40 2006
Subject: [Harbour] ChangeLog 2006-11-12 09:30 UTC+0100 Marek Paliwoda
	(mpaliwoda at interia pl)
In-Reply-To: <4556DB8C.7070901@interia.pl>
Message-ID: <455705db.38fa14fe.6ff7.134f@mx.google.com>

Marek, 

> 2006-11-12 09:30 UTC+0100 Marek Paliwoda (mpaliwoda at interia pl)
>     * harbour/makefile.bc
>     * harbour/makefile.vc
>       * Fixed pptable.c dependencies

Thanks!

Antonio

From antonioharbour at gmail.com  Sun Nov 12 06:52:26 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Sun Nov 12 06:52:38 2006
Subject: [Harbour] __ppAddRule()
Message-ID: <45570b01.555f9336.45a8.138c@mx.google.com>

Przemek,

This sample also reproduces the error. 

Thanks,

function Main()

   ? "start"
   &( __preprocess( "? 123" ) )
   __ppAddRule( "#command ? [ <list,...> ] => _QOut( <list> )" )    
   &( __preprocess( "? 'Not seen'" ) )
   __ppAddRule( "#define TEST" )
   &( __preprocess( "? 'this should not be seen'" ) )
   
return nil

function _QOut( c )
return nil 

From antonioharbour at gmail.com  Sun Nov 12 07:01:27 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Sun Nov 12 07:01:33 2006
Subject: [Harbour] __ppAddRule()
Message-ID: <F4F8F576-2C0B-41B3-B219-8BEBE737E7AB@gmail.com>

http://img246.imageshack.us/my.php?image=picture3gt7.png
From mpaliwoda at interia.pl  Sun Nov 12 07:15:32 2006
From: mpaliwoda at interia.pl (Marek Paliwoda)
Date: Sun Nov 12 07:15:41 2006
Subject: [Harbour] ChangeLog 2006-11-10 12:00 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <19313041149.20061110124009@achilles.wam.lodz.pl>
References: <20061110110737.GA18121@localhost.localdomain>
	<19313041149.20061110124009@achilles.wam.lodz.pl>
Message-ID: <45571064.9090206@interia.pl>

Hi Jacek,

Should be fixed now :).

> Przemek , Marek,
> 
> PC> 2006-11-10 12:00 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
> PC>   * harbour/bin/hb-mkslib.sh
> PC>     + added ${L_USR} to gcc parameters
> 
> PC>   * harbour/source/pp/ppgen.c
> PC>     ! fixed minor typo in printf() format
> 
> PC> best regards,
> PC> Przemek
> 
> I`m trying to compile (BCC) current CVS but still (since 3-4 days)
> got an error (log below):
> 
> MAKE Version 5.2  Copyright (c) 1987, 2000 Borland
> source\common\expropt1.c:
> source\common\expropt2.c:
> source\common\hbarch.c:
> source\common\hbfhnd.c:
> source\common\hbfsapi.c:
> source\common\hbgete.c:
> source\common\hbhash.c:
> source\common\hbdate.c:
> source\common\hbstr.c:
> source\common\hbtrace.c:
> source\common\hbver.c:
> source\common\hbverdsp.c:
> source\common\reserved.c:
> TLIB 4.5 Copyright (c) 1987, 1999 Inprise Corporation
> +obj\b32\expropt1.obj &
> +obj\b32\expropt2.obj &
> +obj\b32\hbarch.obj &
> +obj\b32\hbfhnd.obj &
> +obj\b32\hbfsapi.obj &
> +obj\b32\hbgete.obj &
> +obj\b32\hbhash.obj &
> +obj\b32\hbdate.obj &
> +obj\b32\hbstr.obj &
> +obj\b32\hbtrace.obj &
> +obj\b32\hbver.obj &
> +obj\b32\hbverdsp.obj &
> +obj\b32\reserved.obj &
> +
> source\pp\ppgen.c:
> Warning W8004 source\pp\ppcore.c 1327: 'pMarker' is assigned a value that is never used in function hb_pp_patternAddResult
> Warning W8004 source\pp\ppcore.c 1718: 'pToken' is assigned a value that is never used in function hb_pp_pragmaStream
> Warning W8004 source\pp\ppcore.c 4469: 'szStdCh' is assigned a value that is never used in function hb_pp_init
> Borland C++ 5.5.1 for Win32 Copyright (c) 1993, 2000 Borland
> Turbo Incremental Link 5.00 Copyright (c) 1997, 2000 Borland
> Fatal: 'obj\b32\pptable.obj' does not exist - don't know how to make it
> 
> Any hints ??
> (BCC5.5, Win98)


-- 

     Marek Paliwoda
mpaliwoda at interia pl

----------------------------------------------------------------------
PS. >>> http://link.interia.pl/f19a6

From filip_stoklosa at op.pl  Tue Nov  7 03:30:00 2006
From: filip_stoklosa at op.pl (filip)
Date: Sun Nov 12 08:24:53 2006
Subject: [Harbour] ansi & unicode
In-Reply-To: <20061024230936.GA9591@localhost.localdomain>
References: <453d2b07.06eb5bd4.7ad1.00a9@mx.google.com>
	<20061024230936.GA9591@localhost.localdomain>
Message-ID: <7214373.post@talk.nabble.com>


Hi,

>If you look at source/rtl/cdpapi.c then you will find necessary C
functions.
>Writing wrappers should not take more then few minutes. 
I found hb_cdpStrnToUTF8() in cdpapi.c but there is a note:
     * TODO: this translation is bad, please fix me!!! 
what deas it mean - is it real bad or only inefficient?
In /source/codepage/ there are tables of unicodes e.g.: uc852.c where do you
use them if above function
is not working?
I wrote a wrapper and it works fine, also I can see someone use it in gtxwc
and it works.

regards,
Filip Stoklosa

-- 
View this message in context: http://www.nabble.com/ansi---unicode-tf2497457.html#a7214373
Sent from the Harbour - Dev mailing list archive at Nabble.com.

From druzus at priv.onet.pl  Sun Nov 12 08:46:08 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Sun Nov 12 08:46:53 2006
Subject: [Harbour] __ppAddRule()
In-Reply-To: <63F3E40D-83B6-4C94-9404-383E57D6CD04@gmail.com>
References: <63F3E40D-83B6-4C94-9404-383E57D6CD04@gmail.com>
Message-ID: <20061112134608.GA22591@localhost.localdomain>

On Sun, 12 Nov 2006, Antonio Linares wrote:
> This sample reproduces the error. Please notice that the last ? 123  
> is not using _QOut():

Antonio all your examples are perfectly well preprocessed.
__ppAdrRule() simply reset the PP state.
Change __ppAdrRule() to __Preprocess() and you will have
the result you wanted.
I guess that the previous __ppAdrRule() function was not reseting PP.
In next commin I'll remove:
    hb_pp_reset( pState );
from HB_FUNC( __PPADDRULE ) so it will work in the same way.

BTW the old PP functions are not MT safe and I will have to change them
to not use static C variables to hold PP state. I've already begin to
work on it but it's not finished yet. I'll do that soon.

best regards,
Przemek
From antonioharbour at gmail.com  Sun Nov 12 10:43:27 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Sun Nov 12 10:43:42 2006
Subject: [Harbour] __ppAddRule()
In-Reply-To: <20061112134608.GA22591@localhost.localdomain>
Message-ID: <45574128.1f19bb3d.2436.4c69@mx.google.com>

Przemek, 

> I guess that the previous __ppAdrRule() function was not reseting PP.
> In next commin I'll remove:
>     hb_pp_reset( pState );
> from HB_FUNC( __PPADDRULE ) so it will work in the same way.

Thanks,

Would it be possible to provide a PRG level __PPRESET() ? Thanks,

Antonio

From druzus at priv.onet.pl  Sun Nov 12 12:59:17 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Sun Nov 12 13:37:30 2006
Subject: [Harbour] __ppAddRule()
In-Reply-To: <45574128.1f19bb3d.2436.4c69@mx.google.com>
References: <20061112134608.GA22591@localhost.localdomain>
	<45574128.1f19bb3d.2436.4c69@mx.google.com>
Message-ID: <20061112175917.GA25174@localhost.localdomain>

On Sun, 12 Nov 2006, Antonio Linares wrote:
> Would it be possible to provide a PRG level __PPRESET() ? Thanks,

Yes, but please not that current code gives much wider possibilities.
You can create more then one PP context simultaneously with differ
translation rules use them to preprocess files. In such case hb_pp_reset()
may not be necessary at all because it will be enough to create new PP
context but of course I'll add a wrapper to hb_pp_reset(). But to make
it I have to change current preprocessor functions to not operate on
one static PP context. I'll prep rare new set of PP functions for .prg
code today or tomorrow. If you have a while then you can create PP class
which will use these functions and commit it to CVS.

best regards,
Przemek
From e.m.giordano at emagsoftware.it  Sun Nov 12 15:19:20 2006
From: e.m.giordano at emagsoftware.it (Enrico Maria Giordano)
Date: Sun Nov 12 15:20:16 2006
Subject: [Harbour] SET FILECASE doesn't compile
Message-ID: <037101c70697$e09a5eb0$0100a8c0@emag>

The following sample doesn't compile anymore:

FUNCTION MAIN()

    SET FILECASE UPPER

    RETURN NIL

Harbour Compiler Alpha build 46.2 (Flex)
Copyright 1999-2006, http://www.harbour-project.org/
test.prg(3) Error E0030  Syntax error: "syntax error at 'FILECASE'"
1 error

No code generated

EMG

--
EMAG Software Homepage:     http://www.emagsoftware.it
The EMG's ZX-Spectrum Page: http://www.emagsoftware.it/spectrum
The Best of Spectrum Games: http://www.emagsoftware.it/tbosg
The EMG Music page:         http://www.emagsoftware.it/emgmusic
From e.m.giordano at emagsoftware.it  Sun Nov 12 15:24:45 2006
From: e.m.giordano at emagsoftware.it (Enrico Maria Giordano)
Date: Sun Nov 12 15:25:22 2006
Subject: [Harbour] String problem
Message-ID: <037501c70698$981531f0$0100a8c0@emag>

The following sample doesn't compile:

FUNCTION MAIN()

    IF ["] $ "test"
    ENDIF

    RETURN NIL

Harbour Compiler Alpha build 46.2 (Flex)
Copyright 1999-2006, http://www.harbour-project.org/
test.prg(3) Error E0002  Unterminated string: '"'
test.prg(4) Error E0010  ENDIF does not match IF
2 errors

No code generated

EMG

--
EMAG Software Homepage:     http://www.emagsoftware.it
The EMG's ZX-Spectrum Page: http://www.emagsoftware.it/spectrum
The Best of Spectrum Games: http://www.emagsoftware.it/tbosg
The EMG Music page:         http://www.emagsoftware.it/emgmusic
From druzus at priv.onet.pl  Sun Nov 12 16:32:31 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Sun Nov 12 16:34:04 2006
Subject: [Harbour] SET FILECASE doesn't compile
In-Reply-To: <037101c70697$e09a5eb0$0100a8c0@emag>
References: <037101c70697$e09a5eb0$0100a8c0@emag>
Message-ID: <20061112213231.GA25484@localhost.localdomain>

On Sun, 12 Nov 2006, Enrico Maria Giordano wrote:
> The following sample doesn't compile anymore:
> FUNCTION MAIN()
>    SET FILECASE UPPER
>    RETURN NIL
> Harbour Compiler Alpha build 46.2 (Flex)
> Copyright 1999-2006, http://www.harbour-project.org/
> test.prg(3) Error E0030  Syntax error: "syntax error at 'FILECASE'"
> 1 error
> No code generated

My fault. All commands from base set of rules I created which existed
only in Harbour was preprocessed by new PP in the same way as in Clipper
and I was not able to detect the differences in the validation code where
I was testing new PP and Clipper. The total size of files with all
possible parameter combination of different commands is over 6GB and it
was physically impossible to compare them manually so I was using diff and
my own very similar to diff program. It causes that I haven't seen it.
In practice only these Harbour extensions I remember to add manually to
final std.ch version will work. It's also possible that I missed some
Clipper commands at all and in such case they also not exist in our std.ch
and that some rules are wrong though it's very low chance for such situation
because it should be detected by my testing code. Probably some rules are
differ but they should give the same result as Clipper ones passing all
original PP condition I detected and encoded in new code.
In all cases when we detect problems it's necessary to update include/std.ch
and add/fix existing rules. Now the default compiler build in PP tables are
generated automatically from this file when Harbour core code is compiled.
Returning to FILECASE problem. As I can see I had to drop most of
[x]Harbour only commands which begins with SET name. I'll review it soon
but if someone else can add them then I'll be really thankful. I do not
think that such modifications will have to be done by me only. I would
like to work on some other things in core code. So far I haven't found
anything what is wrongly translated by new PP code (I'm not talking about
missing rules in std.ch) so it seems that the new code works as it should.
IMHO we should add:
   #ifdef HB_EXTENSION
      [new commands]
   #endif
at the end of std.ch with new Harbour only commands. Some already existing
commands like INDEX ON ... already have Harbour extensions but because
ordCondSet() parameters are differ in CL5.3 and CL5.2 so I do not see any
way to keep strict compatibility here.

best regards,
Przemek
From druzus at priv.onet.pl  Sun Nov 12 21:43:44 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Sun Nov 12 23:37:27 2006
Subject: [Harbour] ChangeLog 2006-11-13 03:40 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <20061113024344.GA27143@localhost.localdomain>

2006-11-13 03:40 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/bin/hb-func.sh
    + pass GTK paths to GCC in hb* scripts when -xbgtk switch is used

  * harbour/contrib/rdd_ads/rddads.h
  * harbour/contrib/rdd_ads/adsfunc.c
    * indenting and casting

  * harbour/source/rdd/dbfcdx/dbfcdx1.c
    * cleaned typos in comments

  + harbour/tests/speedtst.prg
    + added speed test

  * harbour/include/hbpp.h
  * harbour/source/pp/ppcore.c
    + added HB_PP_TOKEN_ISNEUTRAL() macro to make code a little bit more
      readable

  * harbour/include/std.ch
    + added some missing old PP commands

  * harbour/source/Makefile
    * minor modification in order of compiled libraries

  * harbour/source/pp/pplib.c
    * changed the PP interface for .prg code.
      Now following functions are supported:

         __PP_INIT( [<cIncludePath>] [, <cStdChFile> ] ) -> <pPP>
            initialize new PP context and return pointer to it.
            when <cStdChFile> is empty string ("") then no default rules are
            used  only the dynamically created #defines like __HARBOUR__,
            __DATE__, __TIME__, __PLATFORM__*

         __PP_FREE( <pPP> )
            free PP context.

         __PP_PATH( <pPP>, <cPath> [, <lClearPrev>] )
            add new (or replace previous) include paths.

         __PP_RESET( <pPP> )
            reset the PP context (remove all rules added by user or
            preprocessed code)

         __PP_ADDRULE( <pPP>, <cDirective> )
            preprocess and execute new preprocessor directive

         __PREPROCESS( <pPP>, <cCode> ) -> <cPreprocessedCode>
            preprocess given code and return result

      User can create more then one PP context and then use each of them
      separately. Any modification in one context have no effect in other.


Ryszard, Phil, Antonio, Enrico and anyone else interested.
I think that we can prepare new release to test recent modifications.

best regards,
Przemek
From philb at philb.us  Mon Nov 13 00:13:44 2006
From: philb at philb.us (Phil Barnett)
Date: Mon Nov 13 00:15:03 2006
Subject: [Harbour] ChangeLog 2006-11-13 03:40 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <20061113024344.GA27143@localhost.localdomain>
References: <20061113024344.GA27143@localhost.localdomain>
Message-ID: <200611130013.44891.philb@philb.us>

On Sunday 12 November 2006 21:43, Przemyslaw Czerpak wrote:

> Ryszard, Phil, Antonio, Enrico and anyone else interested.
> I think that we can prepare new release to test recent modifications.

Ok, great work!

Let's see how it goes for the next couple of days to see what boils up and let 
it settle just a bit.

-- 
My other computer is your Windows machine
From niki at synel.co.il  Mon Nov 13 03:12:31 2006
From: niki at synel.co.il (Chen Kedem)
Date: Mon Nov 13 03:13:52 2006
Subject: [Harbour] tests after latests PP changes
Message-ID: <455828EF.2D5E@synel.co.il>

Was a bit busy lately so I didn't had the time to test it till now.

ChangeLog: 2006-11-13 03:40 UTC+0100 Przemyslaw Czerpak
Compiler.: Borland C++Builder 5.0 (BC++5.5.1)
OS.......: Win-NT 4.0 Workstation SP-6a
Make file: make_b32.bat
C_USR....: -DHB_FM_STATISTICS_OFF
CFLAGS...: -v -y -vG -Od

Harbour  - complied without any CodeGuard errors or new warnings.
HBTest   - results are the same.
HBPPTest - show 16 failed results (used to be 0).

The following TOFIX is now fixed (I'm going to remove it from TODO now)
,-
| Detail...: When compiling PRG with a very long line
| (12300 characters) gives the following CodeGuard warning:
`-

All seems to be working as it was, good work!


  Chen.
**********************************************************************************************
IMPORTANT: The contents of this email and any attachments are confidential. They are intended for the 
named recipient(s) only.
If you have received this email in error, please notify the system manager or the sender immediately and do 
not disclose the contents to anyone or make copies thereof.
*** eSafe scanned this email for viruses, vandals, and malicious content. ***
**********************************************************************************************

From e.m.giordano at emagsoftware.it  Mon Nov 13 03:28:41 2006
From: e.m.giordano at emagsoftware.it (Enrico Maria Giordano)
Date: Mon Nov 13 03:29:16 2006
Subject: [Harbour] SET FILECASE doesn't compile
References: <037101c70697$e09a5eb0$0100a8c0@emag>
	<20061112213231.GA25484@localhost.localdomain>
Message-ID: <004201c706fd$b9f56c30$0100a8c0@emag>


-----Messaggio Originale----- 
Da: "Przemyslaw Czerpak" <druzus@priv.onet.pl>
A: "Harbour Project Main Developer List." <harbour@harbour-project.org>
Data invio: domenica 12 novembre 2006 22.32
Oggetto: Re: [Harbour] SET FILECASE doesn't compile


> My fault.

You already fixed it, thank you! Did you find the time to look at my other bug 
report (String problem)?

EMG

--
EMAG Software Homepage:     http://www.emagsoftware.it
The EMG's ZX-Spectrum Page: http://www.emagsoftware.it/spectrum
The Best of Spectrum Games: http://www.emagsoftware.it/tbosg
The EMG Music page:         http://www.emagsoftware.it/emgmusic 

From e.m.giordano at emagsoftware.it  Mon Nov 13 03:29:13 2006
From: e.m.giordano at emagsoftware.it (Enrico Maria Giordano)
Date: Mon Nov 13 03:29:48 2006
Subject: [Harbour] ChangeLog 2006-11-13 03:40 UTC+0100 Przemyslaw
	Czerpak(druzus/at/priv.onet.pl)
References: <20061113024344.GA27143@localhost.localdomain>
Message-ID: <004501c706fd$ccf77350$0100a8c0@emag>


-----Messaggio Originale----- 
Da: "Przemyslaw Czerpak" <druzus@priv.onet.pl>
A: "Harbour Project Main Developer List." <harbour@harbour-project.org>
Data invio: lunedi 13 novembre 2006 3.43
Oggetto: [Harbour] ChangeLog 2006-11-13 03:40 UTC+0100 Przemyslaw 
Czerpak(druzus/at/priv.onet.pl)


> Ryszard, Phil, Antonio, Enrico and anyone else interested.
> I think that we can prepare new release to test recent modifications.

I'm not generally involved in making new Harbour releases but if I can be of 
any help then please let me know.

EMG

--
EMAG Software Homepage:     http://www.emagsoftware.it
The EMG's ZX-Spectrum Page: http://www.emagsoftware.it/spectrum
The Best of Spectrum Games: http://www.emagsoftware.it/tbosg
The EMG Music page:         http://www.emagsoftware.it/emgmusic 

From antonioharbour at gmail.com  Mon Nov 13 03:35:41 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Mon Nov 13 03:35:53 2006
Subject: [Harbour] Harbour website update
Message-ID: <2D885D62-9785-48A8-800F-31E7FDC4C0A1@gmail.com>

Could we please modify this line at www.harbour-project.org :

 > Harbour is a cross platform compiler and is known to compile and  
run on MS-DOS, MS-Windows, OS/2 and GNU/Linux.

and add "and Mac OSX" ? Thanks,

Harbour nicely running on Mac OSX using "Cocoa" GUI:
http://fivetechsoft.com/forums/viewtopic.php?p=21700#21700
From jfl at mafact.com  Mon Nov 13 03:44:00 2006
From: jfl at mafact.com (J. Lefebvre)
Date: Mon Nov 13 03:44:43 2006
Subject: [Harbour] ChangeLog 2006-11-13 03:40 UTC+0100 Przemyslaw
	Czerpak(druzus/at/priv.onet.pl)
Message-ID: <mailman.12.1163407483.3287.harbour@harbour-project.org>

If Any need for one msvc 6 version, let it me know.

Regards,

JF,

-----Original Message-----
From: harbour-bounces@harbour-project.org [mailto:harbour-bounces@harbour-project.org] On Behalf Of Enrico Maria Giordano
Sent: Monday, November 13, 2006 9:29 AM
To: Harbour Project Main Developer List.
Subject: Re: [Harbour] ChangeLog 2006-11-13 03:40 UTC+0100 Przemyslaw Czerpak(druzus/at/priv.onet.pl)


-----Messaggio Originale----- 
Da: "Przemyslaw Czerpak" <druzus@priv.onet.pl>
A: "Harbour Project Main Developer List." <harbour@harbour-project.org>
Data invio: lunedi 13 novembre 2006 3.43
Oggetto: [Harbour] ChangeLog 2006-11-13 03:40 UTC+0100 Przemyslaw 
Czerpak(druzus/at/priv.onet.pl)


> Ryszard, Phil, Antonio, Enrico and anyone else interested.
> I think that we can prepare new release to test recent modifications.

I'm not generally involved in making new Harbour releases but if I can be of 
any help then please let me know.

EMG

--
EMAG Software Homepage:     http://www.emagsoftware.it
The EMG's ZX-Spectrum Page: http://www.emagsoftware.it/spectrum
The Best of Spectrum Games: http://www.emagsoftware.it/tbosg
The EMG Music page:         http://www.emagsoftware.it/emgmusic 

_______________________________________________
Harbour mailing list
Harbour@harbour-project.org
http://lists.harbour-project.org/mailman/listinfo/harbour


From niki at synel.co.il  Mon Nov 13 04:25:30 2006
From: niki at synel.co.il (Chen Kedem)
Date: Mon Nov 13 04:24:52 2006
Subject: [Harbour] ChangeLog: 2006-11-13 11:22 UTC+0200 Chen Kedem
Message-ID: <45583A0A.600F@synel.co.il>

2006-11-13 11:22 UTC+0200 Chen Kedem <niki@actcom.co.il>
  * TODO
    - Remove one TOFIX item with was fixed (PP of a long line).
    + Add 3 TOFIX items (these are all that I know of).

  + doc/pp.txt
    * PP description by Przemyslaw Czerpak (druzus/at/priv.onet.pl)


  Chen.
**********************************************************************************************
IMPORTANT: The contents of this email and any attachments are confidential. They are intended for the 
named recipient(s) only.
If you have received this email in error, please notify the system manager or the sender immediately and do 
not disclose the contents to anyone or make copies thereof.
*** eSafe scanned this email for viruses, vandals, and malicious content. ***
**********************************************************************************************

From druzus at priv.onet.pl  Mon Nov 13 06:07:55 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Mon Nov 13 06:08:41 2006
Subject: [Harbour] SET FILECASE doesn't compile
In-Reply-To: <004201c706fd$b9f56c30$0100a8c0@emag>
References: <037101c70697$e09a5eb0$0100a8c0@emag>
	<20061112213231.GA25484@localhost.localdomain>
	<004201c706fd$b9f56c30$0100a8c0@emag>
Message-ID: <20061113110755.GA9866@localhost.localdomain>

On Mon, 13 Nov 2006, Enrico Maria Giordano wrote:
> You already fixed it, thank you! Did you find the time to look at my other 
> bug report (String problem)?

Sorry, I have to missed sth. Where should I look for it?

best regards,
Przemek
From e.m.giordano at emagsoftware.it  Mon Nov 13 06:11:36 2006
From: e.m.giordano at emagsoftware.it (Enrico Maria Giordano)
Date: Mon Nov 13 06:12:10 2006
Subject: [Harbour] SET FILECASE doesn't compile
References: <037101c70697$e09a5eb0$0100a8c0@emag><20061112213231.GA25484@localhost.localdomain><004201c706fd$b9f56c30$0100a8c0@emag>
	<20061113110755.GA9866@localhost.localdomain>
Message-ID: <01b601c70714$7bebf4b0$0100a8c0@emag>


-----Messaggio Originale----- 
Da: "Przemyslaw Czerpak" <druzus@priv.onet.pl>
A: "Harbour Project Main Developer List." <harbour@harbour-project.org>
Data invio: lunedi 13 novembre 2006 12.07
Oggetto: Re: [Harbour] SET FILECASE doesn't compile


> > You already fixed it, thank you! Did you find the time to look at my other
> > bug report (String problem)?
>
> Sorry, I have to missed sth. Where should I look for it?

This sample doesn't compile:

FUNCTION MAIN()

    IF ["] $ "test"
    ENDIF

    RETURN NIL

Harbour Compiler Alpha build 46.2 (Flex)
Copyright 1999-2006, http://www.harbour-project.org/
test.prg(3) Error E0002  Unterminated string: '"'
test.prg(4) Error E0010  ENDIF does not match IF
2 errors

No code generated

EMG

--
EMAG Software Homepage:     http://www.emagsoftware.it
The EMG's ZX-Spectrum Page: http://www.emagsoftware.it/spectrum
The Best of Spectrum Games: http://www.emagsoftware.it/tbosg
The EMG Music page:         http://www.emagsoftware.it/emgmusic 

From druzus at priv.onet.pl  Mon Nov 13 07:50:15 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Mon Nov 13 07:51:02 2006
Subject: [Harbour] SET FILECASE doesn't compile
In-Reply-To: <20061113110755.GA9866@localhost.localdomain>
References: <037101c70697$e09a5eb0$0100a8c0@emag>
	<20061112213231.GA25484@localhost.localdomain>
	<004201c706fd$b9f56c30$0100a8c0@emag>
	<20061113110755.GA9866@localhost.localdomain>
Message-ID: <20061113125015.GA10090@localhost.localdomain>

On Mon, 13 Nov 2006, Przemyslaw Czerpak wrote:
> > You already fixed it, thank you! Did you find the time to look at my other 
> > bug report (String problem)?
> Sorry, I have to missed sth. Where should I look for it?

>This sample doesn't compile:
>FUNCTION MAIN()
>   IF ["] $ "test"
>   ENDIF
>   RETURN NIL

Looks that I missed one rule used by Clipper to detect if '[' should be
string delimiter.
I'll add respecting this condition in a while but in fact it's yet
another Clipper PP "feature" which can break valid expressions. In
your example it's perfectly correct to make string token from ["]
but unfortunatelly Clipper makes the same also for:

   IF a[ f( "]" ) ] $ "test"
   ENDIF

or:

   IF a[ f( "'" ) ] $ "test"
   ENDIF


what breaks valid code. The above examples cannot be compiled by Clipper.
IMHO this condition introduce more problems then gives features anyhow
I'll recreate it. Now I would like to restore the exact Clipper behavior
to not introduce new incompatibilities. Later when we will know all
condition we can think about adding some modifications. Just simply
we will know the exact cost and what type of code our modifications
will break so we can decide it's worth to implement.

best regards,
Przemek
From druzus at priv.onet.pl  Mon Nov 13 09:00:52 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Mon Nov 13 09:01:37 2006
Subject: [Harbour] tests after latests PP changes
In-Reply-To: <455828EF.2D5E@synel.co.il>
References: <455828EF.2D5E@synel.co.il>
Message-ID: <20061113140052.GB10931@localhost.localdomain>

On Mon, 13 Nov 2006, Chen Kedem wrote:
> Was a bit busy lately so I didn't had the time to test it till now.

Many thanks for your tests.

> ChangeLog: 2006-11-13 03:40 UTC+0100 Przemyslaw Czerpak
> Compiler.: Borland C++Builder 5.0 (BC++5.5.1)
> OS.......: Win-NT 4.0 Workstation SP-6a
> Make file: make_b32.bat
> C_USR....: -DHB_FM_STATISTICS_OFF
> CFLAGS...: -v -y -vG -Od
> Harbour  - complied without any CodeGuard errors or new warnings.
> HBTest   - results are the same.
> HBPPTest - show 16 failed results (used to be 0).

Yes but it's intentional and is caused by the method to pass preprocessed
line to FLEX/SIMPLEX. If we eliminate FLEX/SIMPLEX then it will not be
necessary to keep this and some other hacks with inserting spaces between
tokens in PP code. Now they resolve problems with compiling strings which
contains all supported string delimiters (in old PP it was causing errors)
and parsing some operators which are not delimited with spaces after
preprocessing, f.e.: the old PP cannot be ever Clipper compatible in
preprocessing this code:

   #define a -1
   #xcommand CMD  <x>   => CMD2 <x> ; CMD3 <x>
   #xcommand CMD2 <x>   => ? <x>
   #xcommand CMD3 <(x)> => ? <(x)>
   CMD 1-a

and it's not possible to fix the problem because it was not an lexer.
In short words it was physically impossible to make it Clipper compatible
without rewriting the internal logic. Probably some effects can be reached
by introducing some dummy char as token separator and then stripping it.

Also if you remove from HBPPTest the hack which strips spaces I added
then probably all preprocessed lines will be reported as wrong. Just
simply previous PP was not Clipper compatible in keeping spaces between
tokens during translations.

> The following TOFIX is now fixed (I'm going to remove it from TODO now)
> ,-
> | Detail...: When compiling PRG with a very long line
> | (12300 characters) gives the following CodeGuard warning:
> `-

It only fixes the buffer overflow but in fact we have still some
limits on maximum line size inside FLEX/SIMPLEX when new PP is
limited only by available memory. IMHO it's should also be eliminated.
I hope Ryszard can help here.

best regards,
Przemek
From druzus at priv.onet.pl  Mon Nov 13 14:50:41 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Mon Nov 13 14:51:28 2006
Subject: [Harbour] ChangeLog 2006-11-13 20:50 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <20061113195041.GA17581@localhost.localdomain>

2006-11-13 20:50 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbpp.h
  * harbour/source/pp/ppcore.c
    ! fixed the problem reported by Enrico in code like:
         IF ["] $ var
      Unfortuantelly this fix also breaks some valid expressions like:
         x := a[ f("]") ] $ "test"
         x := a[ f( "'" ) ] $ "test"
      what is also Clipper compatible anyhow I think that in the future
      we may want to break Clipper compatibility and allow compilation
      of such code.

  * harbour/doc/pp.txt
    * updated documentation for the above modification

best regards,
Przemek
From e.m.giordano at emagsoftware.it  Mon Nov 13 15:31:57 2006
From: e.m.giordano at emagsoftware.it (Enrico Maria Giordano)
Date: Mon Nov 13 15:32:38 2006
Subject: [Harbour] ChangeLog 2006-11-13 20:50 UTC+0100 Przemyslaw
	Czerpak(druzus/at/priv.onet.pl)
References: <20061113195041.GA17581@localhost.localdomain>
Message-ID: <024701c70762$c71fd4d0$0100a8c0@emag>


-----Messaggio Originale----- 
Da: "Przemyslaw Czerpak" <druzus@priv.onet.pl>
A: "Harbour Project Main Developer List." <harbour@harbour-project.org>
Data invio: lunedi 13 novembre 2006 20.50
Oggetto: [Harbour] ChangeLog 2006-11-13 20:50 UTC+0100 Przemyslaw 
Czerpak(druzus/at/priv.onet.pl)


> 2006-11-13 20:50 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
>  * harbour/include/hbpp.h
>  * harbour/source/pp/ppcore.c
>    ! fixed the problem reported by Enrico in code like:
>         IF ["] $ var
>      Unfortuantelly this fix also breaks some valid expressions like:
>         x := a[ f("]") ] $ "test"
>         x := a[ f( "'" ) ] $ "test"
>      what is also Clipper compatible anyhow I think that in the future
>      we may want to break Clipper compatibility and allow compilation
>      of such code.
>
>  * harbour/doc/pp.txt
>    * updated documentation for the above modification

Thank you!

EMG

--
EMAG Software Homepage:     http://www.emagsoftware.it
The EMG's ZX-Spectrum Page: http://www.emagsoftware.it/spectrum
The Best of Spectrum Games: http://www.emagsoftware.it/tbosg
The EMG Music page:         http://www.emagsoftware.it/emgmusic 

From sscc at mweb.co.za  Tue Nov 14 02:14:33 2006
From: sscc at mweb.co.za (Alex Strickland)
Date: Tue Nov 14 02:14:49 2006
Subject: [Harbour] ChangeLog 2006-11-13 20:50 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <20061113195041.GA17581@localhost.localdomain>
References: <20061113195041.GA17581@localhost.localdomain>
Message-ID: <45596CD9.6080704@mweb.co.za>

Przemyslaw Czerpak wrote:

>     ! fixed the problem reported by Enrico in code like:

If I had to choose between this:

>          IF ["] $ var

and this:

>          x := a[ f("]") ] $ "test"
>          x := a[ f( "'" ) ] $ "test"

It would be the second example I would choose anytime.

The use of square brackets for strings is one of the uglier features of 
Clipper to my mind - even if it does have a glorious dBase lineage (does 
it?).

Regards
Alex

From alex at belacy.belgorod.su  Tue Nov 14 03:51:30 2006
From: alex at belacy.belgorod.su (Alexander S.Kresin)
Date: Tue Nov 14 03:54:50 2006
Subject: [Harbour] Re: Harbour website update
In-Reply-To: <2D885D62-9785-48A8-800F-31E7FDC4C0A1@gmail.com>
References: <2D885D62-9785-48A8-800F-31E7FDC4C0A1@gmail.com>
Message-ID: <3311441053.20061114115130@belacy.belgorod.su>

Monday, November 13, 2006, 11:35:41 AM, Antonio Linares <antonioharbour@gmail.com> wrote:

AL> Could we please modify this line at www.harbour-project.org :

AL>  > Harbour is a cross platform compiler and is known to compile and  
AL> run on MS-DOS, MS-Windows, OS/2 and GNU/Linux.

AL> and add "and Mac OSX" ? Thanks,

 Updated.

-- 
Regards,
 Alexander
http://kresin.belgorod.su


From antonioharbour at gmail.com  Tue Nov 14 04:10:17 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Tue Nov 14 04:10:34 2006
Subject: [Harbour] Re: Harbour website update
In-Reply-To: <3311441053.20061114115130@belacy.belgorod.su>
Message-ID: <45598805.26da2bc0.1dd9.ffffb600@mx.google.com>

Alexander, 

> AL> and add "and Mac OSX" ? Thanks,
> 
>  Updated.

Thank you,

Antonio

From jacek at achilles.wam.lodz.pl  Tue Nov 14 04:11:19 2006
From: jacek at achilles.wam.lodz.pl (Jacek Kubica)
Date: Tue Nov 14 04:11:24 2006
Subject: [Harbour] Re: Harbour website update
In-Reply-To: <3311441053.20061114115130@belacy.belgorod.su>
References: <2D885D62-9785-48A8-800F-31E7FDC4C0A1@gmail.com>
	<3311441053.20061114115130@belacy.belgorod.su>
Message-ID: <662768645.20061114101119@achilles.wam.lodz.pl>

Alexander,

ASK> Monday, November 13, 2006, 11:35:41 AM, Antonio Linares <antonioharbour@gmail.com> wrote:
AL>> Could we please modify this line at www.harbour-project.org :
AL>>  > Harbour is a cross platform compiler and is known to compile and
AL>> run on MS-DOS, MS-Windows, OS/2 and GNU/Linux.
AL>> and add "and Mac OSX" ? Thanks,
ASK>  Updated.

Please update also link for LATEST CHANGELOG to proper:
http://harbour-project.cvs.sourceforge.net/harbour-project/harbour/ChangeLog?view=log

-- 
Regards,

 Jacek Kubica

From alex at belacy.belgorod.su  Tue Nov 14 06:23:44 2006
From: alex at belacy.belgorod.su (Alexander S.Kresin)
Date: Tue Nov 14 06:23:39 2006
Subject: [Harbour] Re: Harbour website update
In-Reply-To: <662768645.20061114101119@achilles.wam.lodz.pl>
References: <2D885D62-9785-48A8-800F-31E7FDC4C0A1@gmail.com>
	<3311441053.20061114115130@belacy.belgorod.su>
	<662768645.20061114101119@achilles.wam.lodz.pl>
Message-ID: <8420576405.20061114142344@belacy.belgorod.su>

Tuesday, November 14, 2006, 12:11:19 PM, Jacek Kubica <jacek@achilles.wam.lodz.pl> wrote:

JK> Please update also link for LATEST CHANGELOG to proper:
JK> http://harbour-project.cvs.sourceforge.net/harbour-project/harbour/ChangeLog?view=log

 Changed, too.


-- 
Regards,
 Alexander
http://kresin.belgorod.su


From alex at belacy.belgorod.su  Tue Nov 14 06:23:01 2006
From: alex at belacy.belgorod.su (Alexander S.Kresin)
Date: Tue Nov 14 06:23:40 2006
Subject: [Harbour] Strange errors
Message-ID: <8020534254.20061114142301@belacy.belgorod.su>

 I have downloaded and compiled Harbour after a two months pause and
 get some new problems.

 Here is the first.
 Compilng HwGUI with new Harbour binaries, I get on some files where
 #pragma BEGINDUMP ... #pragma ENDDUMP is used ( hmonthc.prg,
 hanimation.prg ) a short sequence of non character symbols in the end
 of a result .c file - and, so, an error compiling this .c. This error
 may disappear if I change the -i switch. For example, if I use

 d:\harbour\bin\harbour.exe -iinclude;d:\harbour\include -n hmonthc.prg -oobj\b32\hmonthc.c

 it exists.
 In case of

 d:\harbour\bin\harbour.exe -id:\hwgui\include;d:\harbour\include -n hmonthc.prg -oobj\b32\hmonthc.c

 compiling goes well ...
 
-- 
Regards,
 Alexander
http://kresin.belgorod.su


From alex at belacy.belgorod.su  Tue Nov 14 06:32:02 2006
From: alex at belacy.belgorod.su (Alexander S.Kresin)
Date: Tue Nov 14 06:31:50 2006
Subject: [Harbour] mainstd.c/mainwin.c
Message-ID: <15521074970.20061114143202@belacy.belgorod.su>

 Another problem is related to this change:

2006-10-04 09:02 UTC+0100 Antonio Linares (alinares@fivetechsoft.com)
  * common.mak
    main.c has to be used instead of mainstd.c or mainwin.c
 
Before we could use the same set of Harbour libraries to compile both
console and GUI applications. Now I need to have two copies of vm.lib,
one built with HARBOUR_MAIN_STD and another - with HARBOUR_MAIN_WIN.
Are we really going to distribute two kinds of windows binaries ? Does
this really needed ? What kind of problem was fixed with that change ?
    
-- 
Regards,
 Alexander
http://kresin.belgorod.su


From druzus at priv.onet.pl  Tue Nov 14 07:36:39 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Tue Nov 14 07:37:49 2006
Subject: [Harbour] Strange errors
In-Reply-To: <8020534254.20061114142301@belacy.belgorod.su>
References: <8020534254.20061114142301@belacy.belgorod.su>
Message-ID: <20061114123639.GA24848@localhost.localdomain>

On Tue, 14 Nov 2006, Alexander S.Kresin wrote:
>  I have downloaded and compiled Harbour after a two months pause and
>  get some new problems.
>  Here is the first.
>  Compilng HwGUI with new Harbour binaries, I get on some files where
>  #pragma BEGINDUMP ... #pragma ENDDUMP is used ( hmonthc.prg,
>  hanimation.prg ) a short sequence of non character symbols in the end
>  of a result .c file - and, so, an error compiling this .c. This error
>  may disappear if I change the -i switch. For example, if I use
>  d:\harbour\bin\harbour.exe -iinclude;d:\harbour\include -n hmonthc.prg -oobj\b32\hmonthc.c
>  it exists.
>  In case of
>  d:\harbour\bin\harbour.exe -id:\hwgui\include;d:\harbour\include -n hmonthc.prg -oobj\b32\hmonthc.c
>  compiling goes well ...

Missing \0 at the end of dumped data which is later passed to
fprintf("%s",...) on genc.c caused to stupid typo. The final behavior
is random end will depend on the contents of allocated memory.
Thanks for the info, I'll fix it in a while.

best regards,
Przemek
From antonioharbour at gmail.com  Tue Nov 14 07:44:50 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Tue Nov 14 07:45:09 2006
Subject: [Harbour] mainstd.c/mainwin.c
In-Reply-To: <15521074970.20061114143202@belacy.belgorod.su>
Message-ID: <4559ba4e.62a7e744.24c4.0d84@mx.google.com>

Alexander, 

>  Another problem is related to this change:
> 
> 2006-10-04 09:02 UTC+0100 Antonio Linares (alinares@fivetechsoft.com)
>   * common.mak
>     main.c has to be used instead of mainstd.c or mainwin.c
>  
> Before we could use the same set of Harbour libraries to 
> compile both console and GUI applications. Now I need to have 
> two copies of vm.lib, one built with HARBOUR_MAIN_STD and 
> another - with HARBOUR_MAIN_WIN.
> Are we really going to distribute two kinds of windows 
> binaries ? Does this really needed ? What kind of problem was 
> fixed with that change ?

We may revert it. It was needed when testing with MSVC and -TP (C++ mode)
was no longer used.

I don't know how to revert it, I appreciate if someone does it. Thanks,

Antonio

From druzus at priv.onet.pl  Tue Nov 14 07:51:20 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Tue Nov 14 07:52:05 2006
Subject: [Harbour] ChangeLog 2006-11-14 13:50 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <20061114125120.GA26075@localhost.localdomain>

2006-11-14 13:50 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/TODO
    * removed to resolved problems from TODO/TOFIX list

  * harbour/include/hbexprb.c
    * indenting and tab to spaces conversion

  * harbour/source/compiler/ppcomp.c
    ! fixed typo which cased that dump buffer was not ended
      with \0 character

best regards,
Przemek
From alex at belacy.belgorod.su  Tue Nov 14 08:36:48 2006
From: alex at belacy.belgorod.su (Alexander S.Kresin)
Date: Tue Nov 14 08:37:41 2006
Subject: [Harbour] Re: ChangeLog 2006-11-14 13:50 UTC+0100 Przemyslaw
	Czerpak (druzus/at/priv.onet.pl)
In-Reply-To: <20061114125120.GA26075@localhost.localdomain>
References: <20061114125120.GA26075@localhost.localdomain>
Message-ID: <16128562058.20061114163648@belacy.belgorod.su>

Tuesday, November 14, 2006, 3:51:20 PM, Przemyslaw Czerpak <druzus@priv.onet.pl> wrote:

PC> 2006-11-14 13:50 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
PC>   * harbour/TODO
PC>     * removed to resolved problems from TODO/TOFIX list

PC>   * harbour/include/hbexprb.c
PC>     * indenting and tab to spaces conversion

PC>   * harbour/source/compiler/ppcomp.c
PC>     ! fixed typo which cased that dump buffer was not ended
PC>       with \0 character

 Thanks, Przemek.

-- 
Regards,
 Alexander
http://kresin.belgorod.su


From alex at belacy.belgorod.su  Tue Nov 14 08:37:47 2006
From: alex at belacy.belgorod.su (Alexander S.Kresin)
Date: Tue Nov 14 08:37:42 2006
Subject: [Harbour] Re: mainstd.c/mainwin.c
In-Reply-To: <4559ba4e.62a7e744.24c4.0d84@mx.google.com>
References: <4559ba4e.62a7e744.24c4.0d84@mx.google.com>
Message-ID: <13028620946.20061114163747@belacy.belgorod.su>

Tuesday, November 14, 2006, 3:44:50 PM, Antonio Linares <antonioharbour@gmail.com> wrote:

AL> We may revert it. It was needed when testing with MSVC and -TP (C++ mode)
AL> was no longer used.

AL> I don't know how to revert it, I appreciate if someone does it. Thanks,

 Reverted:

2006-11-14 16:35 UTC+0300 Alexander Kresin <alex@belacy.belgorod.su>
  * common.mak
    * Reverted a change of 2006-10-04 09:02


-- 
Regards,
 Alexander
http://kresin.belgorod.su


From antonioharbour at gmail.com  Tue Nov 14 08:54:40 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Tue Nov 14 08:55:03 2006
Subject: [Harbour] __preprocess() and __compile()
Message-ID: <4559caac.72ea58a5.54ee.ffff8ccb@mx.google.com>

Przemek, Ryszard,

Same as Harbour provides a __preprocess() runtime funtion, would it be
possible to have a __compile() function that would generate a codeblock (?)
with the pcode into it and ready to be evaluated ? Not for a single source
code line like macro compilation, but an entire function or PRG.

Is that possible ? I appreciate your comments,


Antonio

From mpaliwoda at interia.pl  Tue Nov 14 11:22:32 2006
From: mpaliwoda at interia.pl (Marek Paliwoda)
Date: Tue Nov 14 11:22:49 2006
Subject: [Harbour] mainstd.c/mainwin.c
In-Reply-To: <15521074970.20061114143202@belacy.belgorod.su>
References: <15521074970.20061114143202@belacy.belgorod.su>
Message-ID: <4559ED48.4070005@interia.pl>

Hi Alexander,

>  Another problem is related to this change:
> 
> 2006-10-04 09:02 UTC+0100 Antonio Linares (alinares@fivetechsoft.com)
>   * common.mak
>     main.c has to be used instead of mainstd.c or mainwin.c
>  
> Before we could use the same set of Harbour libraries to compile both
> console and GUI applications. Now I need to have two copies of vm.lib,
> one built with HARBOUR_MAIN_STD and another - with HARBOUR_MAIN_WIN.
> Are we really going to distribute two kinds of windows binaries ? Does
> this really needed ? What kind of problem was fixed with that change ?

Sorry, I do not have any clue what was the reason and why it was done
that way. Originaly mainstd.c or mainwin.c were used to allow building
libraries usable from both console and GUI mode at the same time.

-- 

Marek

----------------------------------------------------------------------
Dotknij mnie! >>> http://link.interia.pl/f19ca

From mpaliwoda at interia.pl  Tue Nov 14 14:45:32 2006
From: mpaliwoda at interia.pl (Marek Paliwoda)
Date: Tue Nov 14 14:45:37 2006
Subject: [Harbour] mainstd.c/mainwin.c
In-Reply-To: <4559ED48.4070005@interia.pl>
References: <15521074970.20061114143202@belacy.belgorod.su>
	<4559ED48.4070005@interia.pl>
Message-ID: <455A1CDC.1020506@interia.pl>

Marek Paliwoda wrote :

>>  Another problem is related to this change:
>>
>> 2006-10-04 09:02 UTC+0100 Antonio Linares (alinares@fivetechsoft.com)
>>   * common.mak
>>     main.c has to be used instead of mainstd.c or mainwin.c
>>  
>> Before we could use the same set of Harbour libraries to compile both
>> console and GUI applications. Now I need to have two copies of vm.lib,
>> one built with HARBOUR_MAIN_STD and another - with HARBOUR_MAIN_WIN.
>> Are we really going to distribute two kinds of windows binaries ? Does
>> this really needed ? What kind of problem was fixed with that change ?
> 
> Sorry, I do not have any clue what was the reason and why it was done
> that way. Originaly mainstd.c or mainwin.c were used to allow building
> libraries usable from both console and GUI mode at the same time.
> 

Oops ! Sorry, I haven't received Antonio's explanations until now :(.

-- 

Marek

----------------------------------------------------------------------
Jestes kierowca? To poczytaj! >>> http://link.interia.pl/f199e

From druzus at priv.onet.pl  Tue Nov 14 16:35:30 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Tue Nov 14 16:36:36 2006
Subject: [Harbour] __ppAddRule()
In-Reply-To: <F6AD0483-72A9-4B79-ACF2-5F6548DE7898@gmail.com>
References: <F6AD0483-72A9-4B79-ACF2-5F6548DE7898@gmail.com>
Message-ID: <20061114213530.GA7847@localhost.localdomain>

On Sun, 12 Nov 2006, Antonio Linares wrote:
> Przemek,
> I am using the most recent Harbour CVS files and I am testing  
> __ppAddRule() and __preprocess(), and I have noticed that sometimes a  
> new added preprocessor rule get lost. i.e. I declare:
> __PPAddRule( "#command ?  [ <list,...> ] => _QOut( <list> )" )
> then I use
> ? __preprocess( "? 123" )
> and it works ok, but suddenly it stops working. I use BEGIN SEQUENCE  
> (to control possible errors) and macros:
> local cCommand := "? 123"
> &cCommand
> It happens sometimes when I do CLEAR. Is CLEAR related somehow with  
> preprocessor rules ?

No it isn't but IMHO you are not using latest CVS. There is no
__PPAddRule() function in current CVS. Please see:

2006-11-13 03:40 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/pp/pplib.c
    * changed the PP interface for .prg code.
      Now following functions are supported:

         __PP_INIT( [<cIncludePath>] [, <cStdChFile> ] ) -> <pPP>
            initialize new PP context and return pointer to it.
            when <cStdChFile> is empty string ("") then no default rules are
            used  only the dynamically created #defines like __HARBOUR__,
            __DATE__, __TIME__, __PLATFORM__*

         __PP_FREE( <pPP> )
            free PP context.

         __PP_PATH( <pPP>, <cPath> [, <lClearPrev>] )
            add new (or replace previous) include paths.

         __PP_RESET( <pPP> )
            reset the PP context (remove all rules added by user or
            preprocessed code)

         __PP_ADDRULE( <pPP>, <cDirective> )
            preprocess and execute new preprocessor directive

         __PREPROCESS( <pPP>, <cCode> ) -> <cPreprocessedCode>
            preprocess given code and return result

      User can create more then one PP context and then use each of them
      separately. Any modification in one context have no effect in other.


I also strong suggest to allocate new PP with __PP_INIT() function and
then pass it to PP functions, f.e.:

   local pp := __PP_INIT()

   __PP_ADDRULE( pp, "#command ?  [ <list,...> ] => _QOut( <list> )" )
   ? __PREPROCESS( "? 123" )

   __PP_FREE( pp )

I added old code emulation (without pp as first parameter) but I cannot
promise that I will be able to keep it in the future. It's not MT safe,
does not allow to more then one separate PP in application and blocks
for me using auto destructor for automating freeing PP when all .prg
variables which store item returned by __PP_INIT() will be cleared or
out of scope (with auto destructors is not necessary to call explicitly
__PP_FREE( pp ))
In current CVS __PPAddRule() has been renamed to __PP_ADDRULE and all
functions except __PP_INIT() should receive pointer to allocate PP.
If in your code you have __PPAddRule() then it means that you are still
using some old PP library (probably created before the above ChangeLog)
where in __PPAddRule() was executed hb_pp_reset() function which was
reseting user's rules on each call. I was answering to your questions
about it.

best regards,
Przemek
From antonioharbour at gmail.com  Tue Nov 14 16:40:56 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Tue Nov 14 16:41:04 2006
Subject: [Harbour] __ppAddRule()
In-Reply-To: <20061114213530.GA7847@localhost.localdomain>
Message-ID: <455a37ea.5842eb1a.7c9d.ffff8c32@mx.google.com>

Przemek,

It looks as the mailing list is delivering the msgs in a wrong date/order
again.

regards,

Antonio

From antonioharbour at gmail.com  Tue Nov 14 19:22:11 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Tue Nov 14 19:22:27 2006
Subject: [Harbour] MSVC symbol table initialization
Message-ID: <455a5db5.09065068.2cc1.ffffc0e2@mx.google.com>

Przemek,

I am having some troubles building a self contained Harbour DLL for Pocket
PC. It looks as the PRGs symbol tables are not initialized.

When you recently removed the MSVC -TP (C++ mode) flag, we changed to a
different way to initialize the symbol table. Maybe the #pragmas that are
used may not work when building a DLL ? How may we check them ?

I appreciate your comments, thanks

Antonio

From antonioharbour at gmail.com  Tue Nov 14 20:17:07 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Tue Nov 14 20:17:13 2006
Subject: [Harbour] MSVC symbol table initialization
Message-ID: <455a6a95.1925ea0d.3c91.ffffe425@mx.google.com>

Przemek,

Ok, we found a workaround. It looks like in Windows Mobile a DLL
DllEntryPoint() function gets not called on the DLL startup, so the Harbour
virtual machine was not initialized.

The workaround was to place the call to hb_vmInit() at HBDLLENTRY(), so the
HVM gets initialized.

We are curious to know why Windows Mobile DLLs behave in a different way,
but in the meantime, its working.


Antonio

From antonioharbour at gmail.com  Wed Nov 15 08:22:44 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Wed Nov 15 08:23:03 2006
Subject: [Harbour] INDEX path
Message-ID: <455b14a8.048d49bd.5ad7.7ce1@mx.google.com>

Przemek,

If a DBF is opened at a certain path, shouldn't the index file be created at
the same path ? i.e.:

   USE ( CurDir() + "\Customer" ) VIA "DBFCDX"
   INDEX ON Customer->Last TO "LAST"

The index should be placed at CurDir(), right ?

Thanks,

Antonio

From druzus at priv.onet.pl  Wed Nov 15 08:27:54 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Wed Nov 15 08:28:41 2006
Subject: [Harbour] ChangeLog 2006-11-15 14:20 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <20061115132754.GA20605@localhost.localdomain>

2006-11-15 14:20 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbapi.h
    + added
         void * pLex;
      member to HB_MACRO structure - it will be necessary for MT safe
      macro parser

  * harbour/include/set.ch
  * harbour/include/hbexprb.c
  * harbour/source/macro/macro.l
  * harbour/source/macro/macro.y
    * indenting, formatting and converting tabs to spaces

  * harbour/include/hbpp.h
  * harbour/source/compiler/ppcomp.c
  * harbour/source/pp/ppcore.c
  * harbour/source/pp/ppgen.c
  * harbour/source/pp/pplib.c
    * make HB_PP_TOKEN structure public for other code and changed
      public PP API to not force including static rules by programs
      which does not need them.
    + added basic API for using PP as lexer
    * divided HB_PP_TOKEN_MACRO to HB_PP_TOKEN_MACROVAR and
      HB_PP_TOKEN_MACROTEXT and mark
         [<keyword>][&<keyword>[.[<nextidchars>]]]+
      as HB_PP_TOKEN_MACROTEXT not pair HB_PP_TOKEN_KEYWORD and
      HB_PP_TOKEN_MACRO
      It allows easier integration PP as (macro)compiler lexer and
      fixes preprocessing [<keyword>][&<keyword>[.[<nextidchars>]]]+
      in some patterns.

  * harbour/utils/hbtest/Makefile
    + added PP library to linked library list

  * harbour/source/macro/macro.y
    + added seaport to use PP as lexer. It's disabled by default and
      can be enabled using by defining HB_PP_MACROLEX. It eliminates
      using FLEX or SIMPLEX lexer in macro compiler. Now it emulates
      the behavior of FLEX lexer because I wanted to minimize the
      modification but in fact because parsed token are freed when
      macro compiler finish its job then we can resolve RT memory
      leaks which apear during parsing wrong expressions. It will be
      enough to drop allocating memory for new terminal symbols and
      using them as is like in compiler. It will also quite nice
      simplify include/hbexpr*.c code and will allow to move some
      functions to COMMON library. I want to make also pure compiler
      code MT safe so I will have to add passing pointer to a structure
      with compiler context just like in macro compiler. It means that
      if we define a structure which will be common to compiler and macro
      compiler with local (not common) data stored in other structure for
      which will will keep only a pointer then we will be able to move most
      of include/hbexpr*.c code to common library. But I do not want to
      make farther modification without consultation without Ryszard.
      Also to make PP default lexer some farther modifications should
      be done in core PP code and include/hbexpr*.c files to not reduce
      the speed. Now using HB_PP_MACROLEX for sure will have to cause
      speed reduction in macro compiler. But if we make necessary
      modifications then we should keep at least the same speed or
      probably reach noticeable better results.

Ryszard,
I really would like to hear your opinion, you are the compiler master in
Harbour and after I'll have finished some modifications I plan to add
I would like to leave the compiler code and return to some other tasks.
I do not want to cause situation that in few months you will have to
revert my modifications because you have differ ideas about farther
compiler developing and my modifications badly interact with yours or
worser block you to introduce some extensions.

best regards,
Przemek
From antonioharbour at gmail.com  Thu Nov 16 05:19:27 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Thu Nov 16 06:20:56 2006
Subject: [Harbour] __RUN() enhancement
Message-ID: <455c3b34.6df74546.0ed0.7a5e@mx.google.com>

Shoudn't we modify __Run() to return system() return code ?

hb_retnl( system( hb_parc( 1 ) ) );


Antonio

From antonioharbour at gmail.com  Thu Nov 16 08:27:17 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Thu Nov 16 08:27:22 2006
Subject: [Harbour] compiler unreleased memory blocks under Linux & Darwin
Message-ID: <9471afc80611160527y1fa2d349r5f9697d6b3d8329f@mail.gmail.com>

Compiling:

function Main()

   test())  // Notice the extra ")"

return nil

Harbour on Linux (Ubuntu) reports this:

Harbour Compiler Alpha build 46.2 (Flex)
Copyright 1999-2006, http://www.harbour-project.org/
Compiling 'test.prg'...
test.prg(3) Error E0030  Syntax error: "syntax error at ')'"
1 error

No code generated

----------------------------------------
Total memory allocated: 38157 bytes (612 blocks)
WARNING! Memory allocated but not released: 148 bytes (5 blocks)
harbour.c:697: HB_TR_ERROR Block 1 0x80dd548 (size 36)
"\08\D5\0D\08\C8\D4\0D\08\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\12\00\00\00\00\00\00\00"
harbour.c:697: HB_TR_ERROR Block 2 0x80dd508 (size 36)
"\30\CE\0D\08\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\16\00\00\00\00\00\00\00"
harbour.c:697: HB_TR_ERROR Block 3 0x80dd4c8 (size 36)
"\88\D4\0D\08\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0E\00\00\00\00\00\00\00"
harbour.c:697: HB_TR_ERROR Block 4 0x80dd488 (size 36)
"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00"
harbour.c:697: HB_TR_ERROR Block 5 0x80dce10 (size 4) "\00\00\00\00"
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.leap-cf.org/pipermail/harbour/attachments/20061116/39667865/attachment.html
From antonioharbour at gmail.com  Thu Nov 16 09:05:06 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Thu Nov 16 09:05:12 2006
Subject: [Harbour] Re: compiler unreleased memory blocks under Linux & Darwin
In-Reply-To: <9471afc80611160527y1fa2d349r5f9697d6b3d8329f@mail.gmail.com>
References: <9471afc80611160527y1fa2d349r5f9697d6b3d8329f@mail.gmail.com>
Message-ID: <9471afc80611160605h25da4482h839a1a44c455a60e@mail.gmail.com>

Same test under Darwin:

function Main()
>
>    test())  // Notice the extra ")"
>
> return nil
>
> ----------------------------------------
> Total memory allocated: 38157 bytes (612 blocks)
> WARNING! Memory allocated but not released: 148 bytes (5 blocks)
> harbour.c:697: HB_TR_ERROR Block 1 0x80dd548 (size 36)
> "\08\D5\0D\08\C8\D4\0D\08\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\12\00\00\00\00\00\00\00"
>
> harbour.c:697: HB_TR_ERROR Block 2 0x80dd508 (size 36)
> "\30\CE\0D\08\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\16\00\00\00\00\00\00\00"
> harbour.c:697: HB_TR_ERROR Block 3 0x80dd4c8 (size 36)
> "\88\D4\0D\08\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0E\00\00\00\00\00\00\00"
>
> harbour.c:697: HB_TR_ERROR Block 4 0x80dd488 (size 36)
> "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00"
> harbour.c:697: HB_TR_ERROR Block 5 0x80dce10 (size 4) "\00\00\00\00"


Total memory allocated: 37889 bytes (594 blocks)
WARNING! Memory allocated but not released: 160 bytes (4 blocks)
harbour.c:697: HB_TR_ERROR Block 1 0x507750 (size 40)
"\00\50\77\10\00\50\76\D0\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\12\00\00\00\00\00\00"
harbour.c:697: HB_TR_ERROR Block 2 0x507710 (size 40)
"\00\50\70\E0\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\16\00\00\00\00\00\00"
harbour.c:697: HB_TR_ERROR Block 3 0x5076d0 (size 40)
"\00\50\74\70\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\0E\00\00\00\00\00\00"
harbour.c:697: HB_TR_ERROR Block 4 0x507470 (size 40)
"\00\50\74\A0\00\00\00\00\00\07\@0\6C\00\01\00\00\40\32\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00"
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.leap-cf.org/pipermail/harbour/attachments/20061116/32af396e/attachment.html
From druzus at priv.onet.pl  Fri Nov 17 07:29:57 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Fri Nov 17 07:30:43 2006
Subject: [Harbour] ChangeLog 2006-11-17 13:30 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <20061117122957.GA7558@localhost.localdomain>

2006-11-17 13:30 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbapi.h
  * harbour/source/common/hbstr.c
  * harbour/source/compiler/harbour.l
  * harbour/source/macro/macro.l
  * harbour/source/macro/macro.slx
  * harbour/source/compiler/harbour.slx
    * changed parameters in function: hb_compStrToNum() now the string
      size is passed explicitly so it can work with strings which does
      not have trailing ASCII NUL character.

  * harbour/source/macro/macro.y
    * indenting

  * harbour/include/hbmacro.h
  * harbour/source/common/hbstr.c
  * harbour/source/macro/macro.l
  * harbour/source/macro/macro.y
    * added two new functions for macro compiler: hb_macroLexNew() and
      hb_macroLexDelete() to clearly separate lexer from grammar parser.

  * harbour/source/compiler/harbour.l
  * harbour/source/common/hbstr.c
  * harbour/source/pp/ppcore.c
    * added error generation for wrong e"..." strings and fixed \" quoting
    * removed \q quoting

  * harbour/source/pp/ppcore.c
  * harbour/source/pp/ppgen.c
    * added small description in headers

  * harbour/common.mak
  * harbour/source/pp/Makefile
  * harbour/source/pp/pplib.c
  + harbour/source/pp/pplib2.c
  * harbour/include/hbextern.ch
    + added auto destructor for allocated PP context, it's not longer
      necessary to execute __PP_FREE() so this function was moved from
      the standard .prg API to file with backward compatible functions
    * changed __PREPROCESS() to __PP_PROCESS()
    * moved setting std rules to separate file so now if user uses PP
      with only his own rules we are not forcing linking static tables
      which are quite huge (over 100kb)
      To include stdandard rules in static binaries user should add
      to his code:
         REQUEST __PP_STDRULES

  + harbour/source/pp/pplib3.c
    * old PP functions for backward compatibility:
         __PPADDRULE(), __PREPROCESS(), __PP_FREE()
      Please note that using this function is not MT safe. They should
      work like with old PP code. Using any of this function automatically
      forces linking __PP_STDRULES

best regards,
Przemek
From druzus at priv.onet.pl  Fri Nov 17 08:59:46 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Fri Nov 17 09:00:32 2006
Subject: [Harbour] ChangeLog 2006-11-17 14:55 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <20061117135946.GA10375@localhost.localdomain>

2006-11-17 14:55 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/common/hbstr.c
    ! fixed decoding strings without trailing ASCII NUL character in
      hb_strRemEscSeq()

  * harbour/source/pp/ppcore.c
    + added decoding C escaped strings (e"...") to PP so they can be
      preprocessed like a normal strings, it's not enabled when
      HB_C52_STRICT macro is set

best regards,
Przemek
From rglab at przesiew.imid.med.pl  Fri Nov 17 10:38:01 2006
From: rglab at przesiew.imid.med.pl (Ryszard Glab)
Date: Fri Nov 17 10:52:21 2006
Subject: [Harbour] ChangeLog 2006-11-15 14:20 UTC+0100 Przemyslaw
	Czerpak	(druzus/at/priv.onet.pl)
In-Reply-To: <20061115132754.GA20605@localhost.localdomain>
Message-ID: <455DE569.18500.11592EF@localhost>

On 15 Nov 2006 at 14:27, Przemyslaw Czerpak wrote:

> Ryszard,
> I really would like to hear your opinion, you are the compiler master in
> Harbour and after I'll have finished some modifications I plan to add I
> would like to leave the compiler code and return to some other tasks. I do
> not want to cause situation that in few months you will have to revert my
> modifications because you have differ ideas about farther compiler
> developing and my modifications badly interact with yours or worser block
> you to introduce some extensions.

  Sorry, I was busy with other tasks.
I really like your job and I don't see any problems with replacing the 
FLEX/SIMPLEX with a preprocessor especially if it speeds compilation and 
adds MT capabilities.
  Also it seems that we agree on the future direction in compiler 
development. 
  I was also thinking on unification of compiler and macro part of 
expression optimizer using a common structure passed to the expression 
optimizer functions - however I have delayed it for a single reason: I 
want to integrate the runtime modules with the compiler itself. In my 
plans the compiler will still support compilation into 'C' code, however 
I think that main work should be directet to create a self contained 
environment that will able to compile PRG code into hrb modules, that can 
be linked into hrb libraries and later they will be executed using the 
runtime modules glued into the compiler. Also the compiler should have 
the capability to interpret passed PRG code - this measn compile, link 
and execute in a single compiler call.
So the compiler should support the following options:

-compilation - default task
harbour --compile [options] files.prg
the output will be the same as it is now ('C' file or HRB module)

-linking - linking of hrb modules
harbour --link [options] files.hrb file.hre
the output will be either an executable file with all the RT modules 
linked in or a set of hrb modules that can be leter executed using the RT 
environment included in the compiler

-libraries
harbour --lib [options] files.hrb file.hrl
the output will be a file with no RT modules that will contain hrb 
modules only with additional info suitable for linking

-interpreter
harbour --run [options] files.prg
the compiler compiles and executes the passed prg code. In this task the 
compiler should also load all libraries specified in currently unused 
'-r' switch

-the runtime environment
harbour --execute [options] file.hre
the compiler loads hrb modules stored in 'hre' file and executes it using 
the RT modules glued into the compiler (also loading all needed ibraries 
specified with '-r' switch).

This way we will be able to create a 'just in time' compiler that will no 
longer need any external C compilers (unless of course the user will use 
a pure PRG code - with no C code)

Regards, Ryszard
-- 
Ryszard Glab


From alex at belacy.belgorod.su  Fri Nov 17 12:46:34 2006
From: alex at belacy.belgorod.su (Alexander S.Kresin)
Date: Fri Nov 17 12:47:15 2006
Subject: [Harbour] __Preprocess() error
Message-ID: <1777326915.20061117204634@belacy.belgorod.su>

 Przemek, the following sample

function main( )
Local cc := 'c := " russian letter " + "?"'
  __pp_init()
  ? cc
  ? __Preprocess( cc )
  __pp_free()
  ?

return nil
 
 gives runtime error:
 
  error pp/2 unterminated string : '"'

 Here "?" is a Chr(255).
  

Regards,
 Alexander
http://kresin.belgorod.su

From druzus at priv.onet.pl  Fri Nov 17 13:48:05 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Fri Nov 17 13:48:53 2006
Subject: [Harbour] ChangeLog 2006-11-15 14:20 UTC+0100 Przemyslaw
	Czerpak	(druzus/at/priv.onet.pl)
In-Reply-To: <455DE569.18500.11592EF@localhost>
References: <20061115132754.GA20605@localhost.localdomain>
	<455DE569.18500.11592EF@localhost>
Message-ID: <20061117184805.GA3112@localhost.localdomain>

On Fri, 17 Nov 2006, Ryszard Glab wrote:
> I really like your job and I don't see any problems with replacing the 
> FLEX/SIMPLEX with a preprocessor especially if it speeds compilation and 
> adds MT capabilities.

Fine. So at first I'll create small code based on current PP to replace
FLEX in macro compiler to resolve the following problems:
1. MT safe - FLEX does not generate parsers which are MT safe and
   it's something what cannot be easy fixed by us.
   Then we will only have to make some modifications in code to allocate
   new expression structure to keep linked list of expression in HB_MACRO_PTR
   structure and we will have MT safe macro compiler.
2. It will hold terminal symbols which need string representation during
   whole macro compilation process so it will not be necessary to allocate
   memory for them (hb_strdup()) and then free them. It will fix some
   memory leaks and will make the grammar code for macro compiler more
   simple - just like in compiler we will not have to allocate/free
   memory for terminal symbols.

Using FLEX gives some important features. The rules are readable and
easy to update and final code is usually very fast because FLEX generate
automate with states as final lexer. For sure for grammar which needs very
big number of terminal symbols with context it will be hard to create
manually code which will give comparable speed. Probably in such case
it would also implement an automate. But in our case it's not a problem.
In macro compiler lexer is _very_ simple and I will not have any problem
to encode it manually giving the same or event better speed then FLEX.
In compiler basic tokenization is done by PP. It's slower then the one
we have in FLEX but the cost of tokenization is minor in comparison
to the cost of preprocessing so we cannot win too much in optimizations
here and for sure in few places we will have to make code less readable.
But we really small effort we can convert PP tokens to the one generated
by FLEX in compiler and such conversion will be much faster then stringify
the whole line and then dividing it to tokens once again by FLEX so here
we will reach speed improvement and we will have MT safe lexer.
I already creating such converter for macro compiler and its in our CVS
at the end of macro.y file (it works fine I was making some tests) but
using whole PP as lexer for macro compiler is using a tank against fly
so (as I said) I'll create small separate lexer. It should also reduce
the size though probably in current days it's not important. Anyhow the
"small" FLEX tables we are using now take over 45KB. I think that new
code will be more then 10 times smaller.

>   Also it seems that we agree on the future direction in compiler 
> development. 
>   I was also thinking on unification of compiler and macro part of 
> expression optimizer using a common structure passed to the expression 
> optimizer functions - however I have delayed it for a single reason: I 
> want to integrate the runtime modules with the compiler itself. In my 
> plans the compiler will still support compilation into 'C' code, however 
> I think that main work should be directet to create a self contained 
> environment that will able to compile PRG code into hrb modules, that can 
> be linked into hrb libraries and later they will be executed using the 
> runtime modules glued into the compiler. Also the compiler should have 
> the capability to interpret passed PRG code - this measn compile, link 
> and execute in a single compiler call.

You are reading in my mind and it's goal I'm going to reach. All of the
recent modifications are small steeps to reach it.

> So the compiler should support the following options:
> -compilation - default task
> harbour --compile [options] files.prg
> the output will be the same as it is now ('C' file or HRB module)
> -linking - linking of hrb modules
> harbour --link [options] files.hrb file.hre
> the output will be either an executable file with all the RT modules 
> linked in or a set of hrb modules that can be leter executed using the RT 
> environment included in the compiler
> -libraries
> harbour --lib [options] files.hrb file.hrl
> the output will be a file with no RT modules that will contain hrb 
> modules only with additional info suitable for linking

Exactly. And I'll only extend it a little bit. It's possible to generate
.c/.obj file with .prg functions without any machine code preamble/postamble
just like in .hrb files and we should also support it. It resolves some
problems and will be very usable in the future when we add sending PCODE
functions to other programs by net. Just simply binary executable program
will be able to send some of its functions to other program.

> -interpreter
> harbour --run [options] files.prg
> the compiler compiles and executes the passed prg code. In this task the 
> compiler should also load all libraries specified in currently unused 
> '-r' switch
> -the runtime environment
> harbour --execute [options] file.hre
> the compiler loads hrb modules stored in 'hre' file and executes it using 
> the RT modules glued into the compiler (also loading all needed ibraries 
> specified with '-r' switch).

and if it will be MT safe then it can be a part of some other projects
like Apache WWW server. With portability which is now much better then in
.NET it will be _very_ interesting platform.

> This way we will be able to create a 'just in time' compiler that will no 
> longer need any external C compilers (unless of course the user will use 
> a pure PRG code - with no C code)

Yes it is and it's one of the reasons I do not like any C inline extensions.
It's possible that we will not be able to support them in the future and
for sure I do not plan to reduce functionality only to keep them working.

best regards,
Przemek
From druzus at priv.onet.pl  Fri Nov 17 14:06:20 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Fri Nov 17 14:07:14 2006
Subject: [Harbour] __Preprocess() error
In-Reply-To: <1777326915.20061117204634@belacy.belgorod.su>
References: <1777326915.20061117204634@belacy.belgorod.su>
Message-ID: <20061117190620.GB3112@localhost.localdomain>

On Fri, 17 Nov 2006, Alexander S.Kresin wrote:
>  Przemek, the following sample
[...]
>  Here "?" is a Chr(255).

Thanks for the info. It's a casting problem in line 583 in ppcore.c.
it's:
        ch = pState->pFile->pLineBuf[ 0 ];
and should be:
        ch = ( UCHAR ) pState->pFile->pLineBuf[ 0 ];
The problem will appear only for chr(255) characters and C compilers
where 'char' type is signed.
I'll commit a fix later today when I'll create new new macro lexer.

BTW. Please try to use pointer returned by __PP_INIT(), f.e.:

local pp := __PP_INIT(), ;
      s := '"' + chr( 255 ) + '"'
   ? s
   ? __PP_PROCESS( pp, s )
   pp := NIL // it will cause that allocated PP will be freed. You can also
             // leve the function so pp local variable will be cleared by HVM

__PPADDRULE(), __PREPROCESS(), __PP_FREE() are now only for backward
compatibility and they do not need __PP_INIT().

best regards,
Przemek
From druzus at priv.onet.pl  Fri Nov 17 17:06:50 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Fri Nov 17 17:07:36 2006
Subject: [Harbour] ChangeLog 2006-11-17 22:55 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <20061117220650.GA10084@localhost.localdomain>

2006-11-17 22:55 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/pp/ppcore.c
    ! fixed casting - it resolves problem reported by Alexander with
      preprocessing chr(255) from static buffer (PP used by .prg code)

  * harbour/source/macro/macro.y
    + added some comments

  * harbour/source/macro/Makefile
    * commented out compilation of FLEX based lexer for macro compiler and
      added compilation of new small lexer written in pure .c

  * harbour/common.mak
    * replaced macrol.obj by macrolex.obj

  + harbour/source/macro/macrolex.c
    + new small lexer written in pure .c. The code is much smaller,
      MT safe and more friendly for grammar parser. I think it should
      be also faster but I haven't made any tests yet. When we update
      grammar parser to not free string representation of terminal
      symbols then we should expect some farther speed improvement,
      it will also resolve some set of memory leaks like in:
         type("user input")
      and will allow to make some parts of grammar parser common to
      compiler and macro compiler by removing #if[n]def HB_MACRO_SUPPORT

best regards,
Przemek
From e.m.giordano at emagsoftware.it  Fri Nov 17 17:28:03 2006
From: e.m.giordano at emagsoftware.it (Enrico Maria Giordano)
Date: Fri Nov 17 17:28:39 2006
Subject: [Harbour] ChangeLog 2006-11-17 22:55 UTC+0100 Przemyslaw
	Czerpak(druzus/at/priv.onet.pl)
References: <20061117220650.GA10084@localhost.localdomain>
Message-ID: <063f01c70a97$a5401bd0$0100a8c0@emag>


-----Messaggio Originale----- 
Da: "Przemyslaw Czerpak" <druzus@priv.onet.pl>
A: "Harbour Project Main Developer List." <harbour@harbour-project.org>
Data invio: venerdi 17 novembre 2006 23.06
Oggetto: [Harbour] ChangeLog 2006-11-17 22:55 UTC+0100 Przemyslaw 
Czerpak(druzus/at/priv.onet.pl)


source\macro\macrolex.c:
Error E2209 source\macro\macrolex.c 58: Unable to open include file 'macroy.h'
Error E2147 source\macro\macrolex.c 130: 'YYSTYPE' cannot start a parameter 
declaration
Error E2288 source\macro\macrolex.c 139: Pointer to structure required on left 
side of -> or ->* in function hb_lexNumConv
Error E2288 source\macro\macrolex.c 140: Pointer to structure required on left 
side of -> or ->* in function hb_lexNumConv
Error E2288 source\macro\macrolex.c 141: Pointer to structure required on left 
side of -> or ->* in function hb_lexNumConv
Error E2451 source\macro\macrolex.c 143: Undefined symbol 'NUM_DOUBLE' in 
function hb_lexNumConv
Error E2288 source\macro\macrolex.c 147: Pointer to structure required on left 
side of -> or ->* in function hb_lexNumConv
Error E2288 source\macro\macrolex.c 148: Pointer to structure required on left 
side of -> or ->* in function hb_lexNumConv
Error E2451 source\macro\macrolex.c 150: Undefined symbol 'NUM_LONG' in 
function hb_lexNumConv
Warning W8057 source\macro\macrolex.c 152: Parameter 'yylval_ptr' is never 
used in function hb_lexNumConv
Error E2147 source\macro\macrolex.c 154: 'YYSTYPE' cannot start a parameter 
declaration
Error E2451 source\macro\macrolex.c 187: Undefined symbol 'NE1' in function 
_hb_complex
Error E2451 source\macro\macrolex.c 194: Undefined symbol 'NE2' in function 
_hb_complex
Error E2451 source\macro\macrolex.c 196: Undefined symbol 'NOT' in function 
_hb_complex
Error E2451 source\macro\macrolex.c 208: Undefined symbol 'LE' in function 
_hb_complex
Error E2451 source\macro\macrolex.c 217: Undefined symbol 'GE' in function 
_hb_complex
Error E2451 source\macro\macrolex.c 226: Undefined symbol 'EQ' in function 
_hb_complex
Error E2451 source\macro\macrolex.c 235: Undefined symbol 'INC' in function 
_hb_complex
Error E2451 source\macro\macrolex.c 240: Undefined symbol 'PLUSEQ' in function 
_hb_complex
Error E2451 source\macro\macrolex.c 249: Undefined symbol 'DEC' in function 
_hb_complex
Error E2451 source\macro\macrolex.c 254: Undefined symbol 'MINUSEQ' in 
function _hb_complex
Error E2451 source\macro\macrolex.c 259: Undefined symbol 'ALIASOP' in 
function _hb_complex
Error E2451 source\macro\macrolex.c 271: Undefined symbol 'EXPEQ' in function 
_hb_complex
Error E2451 source\macro\macrolex.c 273: Undefined symbol 'POWER' in function 
_hb_complex
Error E2451 source\macro\macrolex.c 278: Undefined symbol 'MULTEQ' in function 
_hb_complex
Error E2451 source\macro\macrolex.c 287: Undefined symbol 'DIVEQ' in function 
_hb_complex
Error E2228 source\macro\macrolex.c 287: Too many error or warning messages in 
function _hb_complex
*** 26 errors in Compile ***

EMG

--
EMAG Software Homepage:     http://www.emagsoftware.it
The EMG's ZX-Spectrum Page: http://www.emagsoftware.it/spectrum
The Best of Spectrum Games: http://www.emagsoftware.it/tbosg
The EMG Music page:         http://www.emagsoftware.it/emgmusic


From druzus at priv.onet.pl  Fri Nov 17 18:52:47 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Fri Nov 17 18:53:33 2006
Subject: [Harbour] ChangeLog 2006-11-15 14:20 UTC+0100 Przemyslaw
	Czerpak	(druzus/at/priv.onet.pl)
In-Reply-To: <455DE569.18500.11592EF@localhost>
References: <20061115132754.GA20605@localhost.localdomain>
	<455DE569.18500.11592EF@localhost>
Message-ID: <20061117235247.GA21121@localhost.localdomain>

On Fri, 17 Nov 2006, Ryszard Glab wrote:
[...]

I'm just removing hb_strdup() from macro compiler expressions
and there is a code I do not understand. Why we have things like:
    szSymbol = hb_compIdentifierNew( "EVAL", TRUE )
"EVAL" is static string so why to not use it directly?
I can understand hashing all symbols in systems which have
to make very big number of string comparisons so after hashing
instead of str[i]cmp()/memcmp() simple pointer comparison can
be used ( pStr1 == pStr2 ) but as I can see we do not have any
of such code and I do not see big improvement in compiler for
us with this feature but maybe you are working on sth. Any reasons
to not simply use "EVAL" directly? ( szSymbol = "EVAL" )

best regards,
Przemek
From druzus at priv.onet.pl  Fri Nov 17 20:44:12 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Fri Nov 17 20:44:58 2006
Subject: [Harbour] ChangeLog 2006-11-17 22:55 UTC+0100 Przemyslaw
	Czerpak(druzus/at/priv.onet.pl)
In-Reply-To: <063f01c70a97$a5401bd0$0100a8c0@emag>
References: <20061117220650.GA10084@localhost.localdomain>
	<063f01c70a97$a5401bd0$0100a8c0@emag>
Message-ID: <20061118014412.GA1139@localhost.localdomain>

On Fri, 17 Nov 2006, Enrico Maria Giordano wrote:
> source\macro\macrolex.c:
> Error E2209 source\macro\macrolex.c 58: Unable to open include file 
> 'macroy.h'

macrolex.c need this file and it's automatically generated during
macro.y compilation. As I can see in rules used for FLEX then this
file it's probably located in $(OBJ_DIR) set to obj\$(CC_DIRNAME)
and CC_DIRNAME name is b32 for BCC32 so setting:
    set C_USR=-Iobj\b32
should resolve the problem as temporary workaround until we will
not modify the core of non GNU make files and it's something what
I do not want to make myself. I even set-up BCC32 compilation in
my Linux box using WINE and I created BCC32 binaries before commit
but BCC make file is sth what does not want to work in not real
Windows - probably due to some optimizations which needs undocumented
Windows behavior and because I cannot make even simple test I do not
want to make any core modification in BCC make files. It's highly
possible that I will break more then fix so it will have to wait
for Marek or some other Windows developer. Meanwhile you can make
some experiments with setting C_USE. Just check where exactly
macroy.h is generated and set proper path.
Maybe setting -Iobj\$(CC_DIRNAME) by default as C compiler parameter
is not bad idea. Probably it may make some things more easy, f.e.
pptable.c can be generated into obj\$(CC_DIRNAME) directory instead
of source\pp\ and maybe we will need only general rules *.[ly] file
instead of explicit ones. But I only guess.

best regards,
Przemek
From druzus at priv.onet.pl  Fri Nov 17 23:37:14 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Fri Nov 17 23:37:59 2006
Subject: [Harbour] Re: compiler unreleased memory blocks under Linux &
	Darwin
In-Reply-To: <9471afc80611160605h25da4482h839a1a44c455a60e@mail.gmail.com>
References: <9471afc80611160527y1fa2d349r5f9697d6b3d8329f@mail.gmail.com>
	<9471afc80611160605h25da4482h839a1a44c455a60e@mail.gmail.com>
Message-ID: <20061118043714.GA4661@localhost.localdomain>

On Thu, 16 Nov 2006, Antonio Linares wrote:
> Same test under Darwin:
> function Main()
> >   test())  // Notice the extra ")"
> >return nil

Antonio, most of errors generated by FLEX has been always causing
memory leaks in Harbour. This problems exists also in Windows -
probably just simply you were not creating windows builds with FM
stat module enabled.
The same will happen also from code like:
    x:=1..
or:
    x:=1"
or many other type of code which will cause syntax error in FLEX
after preprocessing some expressions and it's one of the most common
problems with BISON (not FLEX). Some differ grammar parser generator
like Lemon forces much more better code where such situation should
not happen, f.e. lexer calls grammar parser what causes that grammar
parser has to keep some structures always accessible. I'm still not well
familiar with grammar code in Harbour so I cannot say too much about
possible fix. I hope Ryszard will help before I'll try to make sth
with it.
Grammar parser is something what needs some general clean-up in
[x]Harbour and I believe it will be done soon. Tomorrow I'll commit
some fixes for problems reported by Chen but it will not touch some
really important aspects. This will have to wait some time.
Anyhow I still think it's time to release new version to test recent
modifications, without it sooner or later I'll begin to change some
core elements and you will have to wait for next possible moment for
code freeze. xHarbour is also in code freeze state now so maybe in
this time I will find a while to implement global HVM file caching
system. It's not very important for me but seems that Windows users
cannot live without it ;-). This job could be done separately to
existing code so I will not disturb in release process.

best regards,
Przemek
From e.m.giordano at emagsoftware.it  Sat Nov 18 04:58:28 2006
From: e.m.giordano at emagsoftware.it (Enrico Maria Giordano)
Date: Sat Nov 18 04:59:03 2006
Subject: [Harbour] ChangeLog 2006-11-17 22:55 UTC+0100
	PrzemyslawCzerpak(druzus/at/priv.onet.pl)
References: <20061117220650.GA10084@localhost.localdomain><063f01c70a97$a5401bd0$0100a8c0@emag>
	<20061118014412.GA1139@localhost.localdomain>
Message-ID: <000601c70af8$18bc4fb0$0100a8c0@emag>


-----Messaggio Originale----- 
Da: "Przemyslaw Czerpak" <druzus@priv.onet.pl>
A: "Harbour Project Main Developer List." <harbour@harbour-project.org>
Data invio: sabato 18 novembre 2006 2.44
Oggetto: Re: [Harbour] ChangeLog 2006-11-17 22:55 UTC+0100 
PrzemyslawCzerpak(druzus/at/priv.onet.pl)


> set C_USR=-Iobj\b32

This temporary workaround did the trick, thank you.

EMG

--
EMAG Software Homepage:     http://www.emagsoftware.it
The EMG's ZX-Spectrum Page: http://www.emagsoftware.it/spectrum
The Best of Spectrum Games: http://www.emagsoftware.it/tbosg
The EMG Music page:         http://www.emagsoftware.it/emgmusic 

From mpaliwoda at interia.pl  Sat Nov 18 07:17:05 2006
From: mpaliwoda at interia.pl (Marek Paliwoda)
Date: Sat Nov 18 07:17:26 2006
Subject: [Harbour] ChangeLog 2006-11-17 22:55 UTC+0100
	Przemyslaw	Czerpak(druzus/at/priv.onet.pl)
In-Reply-To: <20061118014412.GA1139@localhost.localdomain>
References: <20061117220650.GA10084@localhost.localdomain>	<063f01c70a97$a5401bd0$0100a8c0@emag>
	<20061118014412.GA1139@localhost.localdomain>
Message-ID: <455EF9C1.1020103@interia.pl>

Hi Przemek,

> On Fri, 17 Nov 2006, Enrico Maria Giordano wrote:
>> source\macro\macrolex.c:
>> Error E2209 source\macro\macrolex.c 58: Unable to open include file 
>> 'macroy.h'
> 
> macrolex.c need this file and it's automatically generated during
> macro.y compilation. As I can see in rules used for FLEX then this
> file it's probably located in $(OBJ_DIR) set to obj\$(CC_DIRNAME)
> and CC_DIRNAME name is b32 for BCC32 so setting:
>     set C_USR=-Iobj\b32
> should resolve the problem as temporary workaround until we will
> not modify the core of non GNU make files and it's something what
> I do not want to make myself. I even set-up BCC32 compilation in
> my Linux box using WINE and I created BCC32 binaries before commit
> but BCC make file is sth what does not want to work in not real
> Windows - probably due to some optimizations which needs undocumented
> Windows behavior and because I cannot make even simple test I do not
> want to make any core modification in BCC make files. It's highly
> possible that I will break more then fix so it will have to wait
> for Marek or some other Windows developer. Meanwhile you can make
> some experiments with setting C_USE. Just check where exactly
> macroy.h is generated and set proper path.
> Maybe setting -Iobj\$(CC_DIRNAME) by default as C compiler parameter
> is not bad idea. Probably it may make some things more easy, f.e.
> pptable.c can be generated into obj\$(CC_DIRNAME) directory instead
> of source\pp\ and maybe we will need only general rules *.[ly] file
> instead of explicit ones. But I only guess.

I am quite busy currently and will be busy in a next couple of days so
I won't be able to fix current makefiles in a nearest future. If someone
could do it instead of me I'd be really grateful :).

-- 

Marek

----------------------------------------------------------------------
Dotknij mnie! >>> http://link.interia.pl/f19ca

From druzus at priv.onet.pl  Sat Nov 18 09:36:56 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Sat Nov 18 09:37:42 2006
Subject: [Harbour] ChangeLog 2006-11-18 15:35 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <20061118143656.GA6060@localhost.localdomain>

2006-11-18 15:35 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbexpra.c
  * harbour/include/hbexprb.c
  * harbour/include/hbexprc.c
  * harbour/source/macro/macro.y
  * harbour/source/macro/macrolex.c
    * do not allocate separate memory in macro compiler for terminal
      symbols which needs string representation - it fixes some set
      of memory leaks and increase a little bit macro compilation
    ! fixed accessing freed memory in:
         private cMacro := "cEarly", cEarly := {"Early"}
         @ 12,10 GET &cMacro[1]
    ! fixed GPF in:
         p:=@left()
      and similar expressions

  * harbour/source/common/expropt2.c
    % minor modification

  * harbour/source/compiler/harbour.c
    ! fixed HB_TRACE message

best regards,
Przemek
From druzus at priv.onet.pl  Sat Nov 18 09:39:43 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Sat Nov 18 09:40:28 2006
Subject: [Harbour] ChangeLog 2006-11-17 22:55 UTC+0100
	Przemyslaw	Czerpak(druzus/at/priv.onet.pl)
In-Reply-To: <455EF9C1.1020103@interia.pl>
References: <20061117220650.GA10084@localhost.localdomain>
	<063f01c70a97$a5401bd0$0100a8c0@emag>
	<20061118014412.GA1139@localhost.localdomain>
	<455EF9C1.1020103@interia.pl>
Message-ID: <20061118143943.GB6060@localhost.localdomain>

On Sat, 18 Nov 2006, Marek Paliwoda wrote:
> I am quite busy currently and will be busy in a next couple of days so
> I won't be able to fix current makefiles in a nearest future. If someone
> could do it instead of me I'd be really grateful :).

Enrico confirmed that setting C_USR to object output directory resolves
the problem so I'll add it to default compiler switches as temporary fix
and later it can be changed if you will find as too ugly.

best regards,
Przemek
From druzus at priv.onet.pl  Sat Nov 18 10:12:36 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Sat Nov 18 10:13:20 2006
Subject: [Harbour] ChangeLog 2006-11-18 16:10 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <20061118151236.GA6417@localhost.localdomain>

2006-11-18 16:10 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/makefile.bc
  * harbour/makefile.vc
    * added -Iobj\$(CC_DIRNAME) to CFLAGS as temporary workaround
      for recent modifications in core files
      This modification can be done in cleaner way but I intentionally
      wanted to minimize modifications. I hope Windows developers will
      make it better.

best regards,
Przemek
From alex at belacy.belgorod.su  Mon Nov 20 06:36:55 2006
From: alex at belacy.belgorod.su (Alexander S.Kresin)
Date: Mon Nov 20 06:38:16 2006
Subject: [Harbour] New error
Message-ID: <14321544465.20061120143655@belacy.belgorod.su>

Przemek,

  thanks for that preprocessing fix.
  
  With latest changes yet another error appears.

function main
private value, x, block

   block := &( "{|| x := Iif(value==Nil,'',value) }" )
   Eval(block)  // Error here

return nil
  
This sample gives

Error BASE/1003  Variable does not exist: NIL


-- 
Regards,
 Alexander
http://kresin.belgorod.su


From rglab at przesiew.imid.med.pl  Mon Nov 20 07:59:55 2006
From: rglab at przesiew.imid.med.pl (Ryszard Glab)
Date: Mon Nov 20 07:48:50 2006
Subject: [Harbour] ChangeLog 2006-11-15 14:20 UTC+0100
	Przemyslaw	Czerpak	(druzus/at/priv.onet.pl)
In-Reply-To: <20061117235247.GA21121@localhost.localdomain>
References: <455DE569.18500.11592EF@localhost>
Message-ID: <4561B4DB.25011.31B536@localhost>

On 18 Nov 2006 at 0:52, Przemyslaw Czerpak wrote:

> I'm just removing hb_strdup() from macro compiler expressions
> and there is a code I do not understand. Why we have things like:
>     szSymbol = hb_compIdentifierNew( "EVAL", TRUE )
> "EVAL" is static string so why to not use it directly?

  If I remember correctly, using static buffer will cause problem if a 
variable with a name 'EVAL' will be used because all variable names are 
deallocated.

> I can understand hashing all symbols in systems which have
> to make very big number of string comparisons so after hashing
> instead of str[i]cmp()/memcmp() simple pointer comparison can
> be used ( pStr1 == pStr2 ) but as I can see we do not have any
> of such code and I do not see big improvement in compiler for
> us with this feature but maybe you are working on sth. Any reasons
> to not simply use "EVAL" directly? ( szSymbol = "EVAL" )

  Using hash has decreased the number of memory allocations (I was 
sending the statistics a few years ago). The comparision of pointers was 
not used because at the time of hash introduction some strings were 
coming from static buffers.

Regards, Ryszard
-- 
Ryszard Glab


From druzus at priv.onet.pl  Mon Nov 20 10:05:05 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Mon Nov 20 10:05:51 2006
Subject: [Harbour] ChangeLog 2006-11-20 15:20 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <20061120150505.GA7763@localhost.localdomain>

2006-11-20 15:20 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/macro/macrolex.c
    ! fixed bad typo in NIL, IIF, .AND., .NOT. tokens parsing

best regards,
Przemek
From druzus at priv.onet.pl  Mon Nov 20 14:15:18 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Mon Nov 20 14:16:30 2006
Subject: [Harbour] New error
In-Reply-To: <14321544465.20061120143655@belacy.belgorod.su>
References: <14321544465.20061120143655@belacy.belgorod.su>
Message-ID: <20061120191518.GA13446@localhost.localdomain>

On Mon, 20 Nov 2006, Alexander S.Kresin wrote:
> Przemek,
>   thanks for that preprocessing fix.
>   With latest changes yet another error appears.
> function main
> private value, x, block
>    block := &( "{|| x := Iif(value==Nil,'',value) }" )
>    Eval(block)  // Error here
> return nil
> This sample gives
> Error BASE/1003  Variable does not exist: NIL

I think I fixed it today, please check after:
    2006-11-20 15:20 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)

best regards,
Przemek
From druzus at priv.onet.pl  Mon Nov 20 21:30:05 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Mon Nov 20 21:30:52 2006
Subject: [Harbour] ChangeLog 2006-11-21 03:30 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <20061121023005.GA9529@localhost.localdomain>

2006-11-21 03:30 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/common.mak
  * harbour/source/compiler/Makefile
  * harbour/include/hbcomp.h
  * harbour/include/hbexprb.c
  * harbour/include/hbexprc.c
  * harbour/source/compiler/cmdcheck.c
  * harbour/source/compiler/genc.c
  * harbour/source/compiler/harbour.c
  * harbour/source/compiler/harbour.l
  * harbour/source/compiler/harbour.slx
  * harbour/source/compiler/harbour.y
  * harbour/source/compiler/hbgenerr.c
  * harbour/source/compiler/hbident.c
  * harbour/source/compiler/ppcomp.c
  + harbour/source/compiler/complex.c
    + added new PP based compiler lexer - it's smaller, MT safe and a
      little bit faster then then the FLEX version.
    + added HB_COMP structure to hold compiler data in future MT version
    + added global variable HB_COMP_PTR hb_comp_data to make conversion
      to MT easier - now it holds only PP and lexer data.
    * update PP related code in compiler to be MT safe
    + added %pure-parser, %parse-param and %lex-param for bison to generate
      MT safe grammar parser.
    * updated FLEX to work with recent compiler modifications and pure-parser
      bison API

  * harbour/makefile.bc
  * harbour/makefile.vc
  * harbour/source/macro/Makefile
  * harbour/source/macro/macro.l
  * harbour/source/macro/macro.y
  * harbour/source/macro/macrolex.c
    * use hb_macro prefix instead of hb_comp in bison/flex parser/lexer
      used in macro compiler to avoid possible conflicts in the future
    * separated lexer data

  * harbour/include/hbapi.h
  * harbour/include/hbpp.h
  * harbour/source/pp/ppcore.c
  * harbour/source/pp/ppgen.c
  * harbour/source/pp/pplib.c
  * harbour/source/vm/macro.c
    * removed not used members from HB_MACRO structure to make it
      cleaner before creating common to compiler and macro compiler
      structure
    + added new token HB_PP_TOKEN_EPSILON
    + added void * cargo parameters passed to executed user functions
    + hb_pp_tokenGet(), hb_pp_tokenToString(), hb_pp_tokenBlockString()
      functions for new PP based compiler lexer

  * harbour/utils/hbpp/hbpp.c
  * harbour/utils/hbpp/hbpp.h
  * harbour/utils/hbpp/hbppcomp.c
  * harbour/utils/hbpp/hbppcore.c
  * harbour/utils/hbpp/hbpplib.c
  * harbour/utils/hbpp/pragma.c
    * updated to compile with recent compiler header file modifications


    PP, new lexer and most of grammar parser should be MT safe. Now we should
    update all compiler functions to pass pointer to HB_COMP data structure
    where we should all current global variables. This structure as first
    member should have HB_CMPCOMMON structure which will hold common to
    compiler and macro compiler data. Ryszard I think you are the best person
    to define this structure.

    We have new lexer which is MT safe but please note that it has to be
    extensively tested so I would like to ask everybody to compile as much
    as possible different code and check if the final programs work as
    expected. Working on new code I removed some limitations existing in
    FLEX though not all. At the beginning I tried to replicate the exact
    FLEX behavior but I've found that in few places it does not work as
    it should so I begin to encode rules in a way which remove some
    limitations. In fact now it's much easier to control some things.
    I kept the FLEX code working and made all necessary modifications
    so it still can be used but keeping FLEX working cost us IMHO too
    much. It's not possible to introduce some improvements to grammar
    parser. All identifiers, keyword and macros returned by new lexer
    are converted to upper letters, do not have to be freed by hb_xfree()
    and is guarantied that will be always accessible. So from grammar file
    we can remove all hb_compIdentifierNew( hb_strupr($1), TRUE ) what
    should give noticeable speed improvement but will break the FLEX code.
    Ryszard and other you will have to decide if we will support FLEX in
    the future. We can also clean the code and remove most of other
    redundant hb_strupr() and hb_strdup() used in many places. BTW only
    one terminal symbol can be returned with lower letters: DOIDENT
    and I make it intentionally so it's possible to use:
         DO prog1 WITH "sth"
    on case sensitive file systems so this symbol should be cloned in
    upper cases as function symbol but used without modification as
    file name. It's current behavior but I'm not sure you will want
    to keep it. Maybe compiler switch to always convert file names
    created from
         DO <id> [WITH <params,...>]
    to lower cases will be better. Please think about it.

best regards,
Przemek
From druzus at priv.onet.pl  Mon Nov 20 23:06:32 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Mon Nov 20 23:07:18 2006
Subject: [Harbour] ChangeLog 2006-11-21 05:05 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <20061121040632.GA10714@localhost.localdomain>

2006-11-21 05:05 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/compiler/complex.c
  + harbour/source/compiler/hbcomp.c
    * added missing header and file in my previous commit

best regards,
Przemek
From alex at belacy.belgorod.su  Tue Nov 21 01:03:10 2006
From: alex at belacy.belgorod.su (Alexander S.Kresin)
Date: Tue Nov 21 01:02:03 2006
Subject: [Harbour] Re: ChangeLog 2006-11-21 05:05 UTC+0100 Przemyslaw
	Czerpak (druzus/at/priv.onet.pl)
In-Reply-To: <20061121040632.GA10714@localhost.localdomain>
References: <20061121040632.GA10714@localhost.localdomain>
Message-ID: <86980353.20061121090310@belacy.belgorod.su>

Tuesday, November 21, 2006, 7:06:32 AM, Przemyslaw Czerpak <druzus@priv.onet.pl> wrote:

PC> 2006-11-21 05:05 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
PC>   * harbour/source/compiler/complex.c
PC>   + harbour/source/compiler/hbcomp.c
PC>     * added missing header and file in my previous commit

 I can't compile Harbour after last commits:

 source\compiler\harbour.y:2  unrecognized: %parse-param
 source\compiler\harbour.y:2     Skipping to next %
 source\compiler\harbour.y:3  unrecognized: %lex-param
 source\compiler\harbour.y:3     Skipping to next %

-- 
Regards,
 Alexander
http://kresin.belgorod.su


From alex at belacy.belgorod.su  Tue Nov 21 00:59:56 2006
From: alex at belacy.belgorod.su (Alexander S.Kresin)
Date: Tue Nov 21 01:02:04 2006
Subject: [Harbour] Re: New error
In-Reply-To: <20061120191518.GA13446@localhost.localdomain>
References: <14321544465.20061120143655@belacy.belgorod.su>
	<20061120191518.GA13446@localhost.localdomain>
Message-ID: <186786465.20061121085956@belacy.belgorod.su>

Monday, November 20, 2006, 10:15:18 PM, Przemyslaw Czerpak <druzus@priv.onet.pl> wrote:

PC> I think I fixed it today, please check after:
PC>     2006-11-20 15:20 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)

Thanks, Przemek. It's really fixed.

-- 
Regards,
 Alexander
http://kresin.belgorod.su


From e.m.giordano at emagsoftware.it  Tue Nov 21 03:18:47 2006
From: e.m.giordano at emagsoftware.it (Enrico Maria Giordano)
Date: Tue Nov 21 03:19:24 2006
Subject: [Harbour] Errors building latest CVS
Message-ID: <007e01c70d45$ab187600$0100a8c0@emag>

Error: Unresolved external '_hb_comp_new' referenced from C:\HARBOUR 
CVS\HARBOUR\OBJ\B32\HARBOUR.OBJ
Error: Unresolved external '_hb_comp_free' referenced from C:\HARBOUR 
CVS\HARBOUR\OBJ\B32\HARBOUR.OBJ

EMG

--
EMAG Software Homepage:     http://www.emagsoftware.it
The EMG's ZX-Spectrum Page: http://www.emagsoftware.it/spectrum
The Best of Spectrum Games: http://www.emagsoftware.it/tbosg
The EMG Music page:         http://www.emagsoftware.it/emgmusic 

From niki at synel.co.il  Tue Nov 21 06:43:38 2006
From: niki at synel.co.il (Chen Kedem)
Date: Tue Nov 21 06:46:45 2006
Subject: [Harbour] Errors building latest CVS
Message-ID: <4562E66A.1693@synel.co.il>

EMG,

> Error: Unresolved external '_hb_comp_new' referenced from C:\HARBOUR CVS\HARBOUR\OBJ\B32\HARBOUR.OBJ
> Error: Unresolved external '_hb_comp_free' referenced from C:\HARBOUR CVS\HARBOUR\OBJ\B32\HARBOUR.OBJ

This is because source/compiler/hbcomp.c is missing from the non-GNU
makefiles.

  Chen.
**********************************************************************************************
IMPORTANT: The contents of this email and any attachments are confidential. They are intended for the 
named recipient(s) only.
If you have received this email in error, please notify the system manager or the sender immediately and do 
not disclose the contents to anyone or make copies thereof.
*** eSafe scanned this email for viruses, vandals, and malicious content. ***
**********************************************************************************************

From niki at synel.co.il  Tue Nov 21 06:50:33 2006
From: niki at synel.co.il (Chen Kedem)
Date: Tue Nov 21 06:53:37 2006
Subject: [Harbour] Errors building latest CVS
References: <4562E66A.1693@synel.co.il>
Message-ID: <4562E809.71F3@synel.co.il>

I wrote:
> This is because source/compiler/hbcomp.c
> is missing from the non-GNU makefiles.

I don't know if this is the right fix, but it all complie if you
add:

$(OBJ_DIR)\hbcomp.obj \

to common.mak in the HARBOUR_EXE_OBJS section (line number 740)

  Chen.
**********************************************************************************************
IMPORTANT: The contents of this email and any attachments are confidential. They are intended for the 
named recipient(s) only.
If you have received this email in error, please notify the system manager or the sender immediately and do 
not disclose the contents to anyone or make copies thereof.
*** eSafe scanned this email for viruses, vandals, and malicious content. ***
**********************************************************************************************

From e.m.giordano at emagsoftware.it  Tue Nov 21 07:25:19 2006
From: e.m.giordano at emagsoftware.it (Enrico Maria Giordano)
Date: Tue Nov 21 07:25:54 2006
Subject: [Harbour] Errors building latest CVS
References: <4562E66A.1693@synel.co.il> <4562E809.71F3@synel.co.il>
Message-ID: <013801c70d68$1b739cf0$0100a8c0@emag>


-----Messaggio Originale----- 
Da: "Chen Kedem" <niki@synel.co.il>
A: <harbour@harbour-project.org>
Data invio: marted? 21 novembre 2006 12.50
Oggetto: Re: [Harbour] Errors building latest CVS


> I don't know if this is the right fix, but it all complie if you
> add:
>
> $(OBJ_DIR)\hbcomp.obj \
>
> to common.mak in the HARBOUR_EXE_OBJS section (line number 740)

Thank you. Marek?

EMG

--
EMAG Software Homepage:     http://www.emagsoftware.it
The EMG's ZX-Spectrum Page: http://www.emagsoftware.it/spectrum
The Best of Spectrum Games: http://www.emagsoftware.it/tbosg
The EMG Music page:         http://www.emagsoftware.it/emgmusic 

From niki at synel.co.il  Tue Nov 21 07:48:07 2006
From: niki at synel.co.il (Chen Kedem)
Date: Tue Nov 21 07:49:10 2006
Subject: [Harbour] After ChangeLog 2006-11-21 05:05 UTC+0100 Przemyslaw
	Czerpak
Message-ID: <4562F587.71E9@synel.co.il>

05:05am, don't you vampires go to sleep when it dawn??? :)

1) source/compiler/hbcomp.c is missing from non-GNU makefiles.

2) PROCLINE() always return 0

   --tt29.prg--
   PROCEDURE MAIN
    ? procline()     // Clipper: 2  Harbour: 0
    ? procline(0)    // Clipper: 3  Harbour: 0
    ? procline(1)    // Clipper: 0  Harbour: 0
   RETURN
   ------------

3) Here is the warning list when compiling with bcc32,
   I'm using bison 1.875 if it matter
   (there used to be 15 warnings, now only 12 but some are new)

Warning W8065 obj\b32\harboury.c 7764: Call to function 'yydestruct' with no prototype in function yyparse
Warning W8065 obj\b32\harboury.c 7771: Call to function 'yydestruct' with no prototype in function yyparse
Warning W8065 obj\b32\harboury.c 7821: Call to function 'yydestruct' with no prototype in function yyparse
Warning W8004 obj\b32\harboury.c 7697: 'yynerrs' is assigned a value that is never used in function yyparse
Warning W8004 obj\b32\harboury.c 3660: 'yyptr' is assigned a value that is never used in function yyparse
Warning W8066 obj\b32\macroy.c 1895: Unreachable code in function hb_macroparse
Warning W8066 obj\b32\macroy.c 1904: Unreachable code in function hb_macroparse
Warning W8065 obj\b32\macroy.c 3646: Call to function 'yydestruct' with no prototype in function hb_macroparse
Warning W8065 obj\b32\macroy.c 3653: Call to function 'yydestruct' with no prototype in function hb_macroparse
Warning W8065 obj\b32\macroy.c 3703: Call to function 'yydestruct' with no prototype in function hb_macroparse
Warning W8004 obj\b32\macroy.c 3579: 'hb_macronerrs' is assigned a value that is never used in function hb_macroparse
Warning W8004 obj\b32\macroy.c 1726: 'yyptr' is assigned a value that is never used in function hb_macroparse

4) There are no CodeGuard errors during Harbour itself.

5) The TODO samples tt2.prg, tt2b.prg, tt23.prg and tt25.prg no longer
   gives CodeGuard errors (I'll removed them from TODO in a while).

6) HBTest output is the same (apart from the PROCLINE() problem).

7) HBPPTest output is almost the same, there is the PROCLINE() problem
   and \" are now shown as \q (which I guess was intentional).

It looks better everyday now, good work!

  Chen.
**********************************************************************************************
IMPORTANT: The contents of this email and any attachments are confidential. They are intended for the 
named recipient(s) only.
If you have received this email in error, please notify the system manager or the sender immediately and do 
not disclose the contents to anyone or make copies thereof.
*** eSafe scanned this email for viruses, vandals, and malicious content. ***
**********************************************************************************************

From alex at belacy.belgorod.su  Tue Nov 21 08:44:51 2006
From: alex at belacy.belgorod.su (Alexander S.Kresin)
Date: Tue Nov 21 08:43:54 2006
Subject: [Harbour] Re: ChangeLog 2006-11-21 05:05 UTC+0100 Przemyslaw
	Czerpak (druzus/at/priv.onet.pl)
In-Reply-To: <86980353.20061121090310@belacy.belgorod.su>
References: <20061121040632.GA10714@localhost.localdomain>
	<86980353.20061121090310@belacy.belgorod.su>
Message-ID: <1266426344.20061121164451@belacy.belgorod.su>

Tuesday, November 21, 2006, 9:03:10 AM, Alexander S.Kresin <alex@belacy.belgorod.su> wrote:

ASK>  I can't compile Harbour after last commits:

ASK>  source\compiler\harbour.y:2  unrecognized: %parse-param
ASK>  source\compiler\harbour.y:2     Skipping to next %
ASK>  source\compiler\harbour.y:3  unrecognized: %lex-param
ASK>  source\compiler\harbour.y:3     Skipping to next %

 Was solved by installing new bison version ( I used 1.35 before ).


-- 
Regards,
 Alexander
http://kresin.belgorod.su


From druzus at priv.onet.pl  Tue Nov 21 08:43:13 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Tue Nov 21 08:44:19 2006
Subject: [Harbour] Re: ChangeLog 2006-11-21 05:05 UTC+0100 Przemyslaw
	Czerpak (druzus/at/priv.onet.pl)
In-Reply-To: <86980353.20061121090310@belacy.belgorod.su>
References: <20061121040632.GA10714@localhost.localdomain>
	<86980353.20061121090310@belacy.belgorod.su>
Message-ID: <20061121134313.GA11259@localhost.localdomain>

On Tue, 21 Nov 2006, Alexander S.Kresin wrote:
> PC> 2006-11-21 05:05 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
> PC>   * harbour/source/compiler/complex.c
> PC>   + harbour/source/compiler/hbcomp.c
> PC>     * added missing header and file in my previous commit
>  I can't compile Harbour after last commits:
>  source\compiler\harbour.y:2  unrecognized: %parse-param
>  source\compiler\harbour.y:2     Skipping to next %
>  source\compiler\harbour.y:3  unrecognized: %lex-param
>  source\compiler\harbour.y:3     Skipping to next %

You need newer bison version which will recognize %parse-param
and %lex-param. I can try to hard code similar functionality
using YYPARSE_PARAM and YYLEX_PARAM but it does not change the
yyerror() parameters so in compiler we will have to catch errors
by grammar actions so I'm not sure it's good idea. In macro
compiler we have been using %pure-parser for long time and this
broke YACC compatibility so IMHO if we are not YACC compatible
then we should use all current bison features. The above YY*_PARAM
definitions are documented as obsolete in current bison versions
("The use of this macro is deprecated, and is supported only for
Yacc like parsers")
Anyhow it should not be only my decision so if other developers
will want to keep older bison compatibility then I'll revert this
modification but it will force some additional job to make our
compiler grammar code MT safe. I still think that using Lemon
instead bison will be better choice, we can also include Lemon
source code in CVS (it's single .c file). But it will be necessary
to rewrite all grammar rules to Lemon syntax and such job can be
done only if all core developers agree for such modification.

best regards,
Przemek
From druzus at priv.onet.pl  Tue Nov 21 08:45:01 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Tue Nov 21 08:45:45 2006
Subject: [Harbour] Errors building latest CVS
In-Reply-To: <4562E66A.1693@synel.co.il>
References: <4562E66A.1693@synel.co.il>
Message-ID: <20061121134501.GB11259@localhost.localdomain>

On Tue, 21 Nov 2006, Chen Kedem wrote:
> > Error: Unresolved external '_hb_comp_new' referenced from C:\HARBOUR CVS\HARBOUR\OBJ\B32\HARBOUR.OBJ
> > Error: Unresolved external '_hb_comp_free' referenced from C:\HARBOUR CVS\HARBOUR\OBJ\B32\HARBOUR.OBJ
> This is because source/compiler/hbcomp.c is missing from the non-GNU
> makefiles.

Yes. I noticed it but it was to late for farther modifications ;-)
I've just commit the fix.

best regards,
Przemek
From druzus at priv.onet.pl  Tue Nov 21 08:45:32 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Tue Nov 21 08:46:16 2006
Subject: [Harbour] ChangeLog 2006-11-21 14:35 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <20061121134532.GC11259@localhost.localdomain>

2006-11-21 14:35 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/common.mak
    + added missing compiler/hbcomp.c file

best regards,
Przemek
From e.m.giordano at emagsoftware.it  Tue Nov 21 08:55:38 2006
From: e.m.giordano at emagsoftware.it (Enrico Maria Giordano)
Date: Tue Nov 21 08:56:13 2006
Subject: [Harbour] ChangeLog 2006-11-21 14:35 UTC+0100 Przemyslaw
	Czerpak(druzus/at/priv.onet.pl)
References: <20061121134532.GC11259@localhost.localdomain>
Message-ID: <01b401c70d74$b9db1a60$0100a8c0@emag>


-----Messaggio Originale----- 
Da: "Przemyslaw Czerpak" <druzus@priv.onet.pl>
A: "Harbour Project Main Developer List." <harbour@harbour-project.org>
Data invio: martedi 21 novembre 2006 14.45
Oggetto: [Harbour] ChangeLog 2006-11-21 14:35 UTC+0100 Przemyslaw 
Czerpak(druzus/at/priv.onet.pl)


> 2006-11-21 14:35 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
>  * harbour/common.mak
>    + added missing compiler/hbcomp.c file

Thank you!

EMG

--
EMAG Software Homepage:     http://www.emagsoftware.it
The EMG's ZX-Spectrum Page: http://www.emagsoftware.it/spectrum
The Best of Spectrum Games: http://www.emagsoftware.it/tbosg
The EMG Music page:         http://www.emagsoftware.it/emgmusic 

From e.m.giordano at emagsoftware.it  Tue Nov 21 10:15:11 2006
From: e.m.giordano at emagsoftware.it (Enrico Maria Giordano)
Date: Tue Nov 21 10:16:05 2006
Subject: [Harbour] hbzip.lib
Message-ID: <023901c70d7f$d69e1340$0100a8c0@emag>

I already report it in the past: hbzip.lib is not created when Harbour is 
built. Who is in charge of this lib?

I would want to make real-world tests with Harbour trying to compile my 
commercial apps but I can't do it due to the lack of hbzip.lib.

EMG

--
EMAG Software Homepage:     http://www.emagsoftware.it
The EMG's ZX-Spectrum Page: http://www.emagsoftware.it/spectrum
The Best of Spectrum Games: http://www.emagsoftware.it/tbosg
The EMG Music page:         http://www.emagsoftware.it/emgmusic 

From druzus at priv.onet.pl  Tue Nov 21 10:17:55 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Tue Nov 21 10:18:39 2006
Subject: [Harbour] FLEX/BISON
Message-ID: <20061121151755.GA11855@localhost.localdomain>

Ryszard,
I'd like to know how deeply I should change lexer and grammar parser.
Current FLEX/BISON files introduce some limitations which are Clipper
compatible but I do not see any reason to keep them. F.e. some words
are reserved and usage of some other is limited. Also in few cases
we have hard coded work around for some Clipper limits and they causes
bad side effect, f.e. with FLEX
    WHILE WITH 1
is compiled as:
    DO WHILE WITH 1

I do not like it and I want to clean such code. I can left some
Clipper compatible error messages but only if user chose -kc compilation
flag which disable Harbour extensions. In all other cases I will remove
all limitations and reserved words. But this and some farther optimizations
in grammar file will cause that FLEX will stop to work. I do not have
enough time to update FLEX too so I'll need group decision if I should
continue modifications. Probably when I'll finish it will be possible
to write harbour.l from scratch once again and IMHO it will be much easier
and less time consuming job then systematic updating. Just simply we will
have clearly defined necessary output and it can be done as quite good
documentation for lex conditions used by our grammar parser but now it's
keeping FLEX alive is a serious problem for me. I do not even try to talk
about SIMPLEX because after our modifications in last year I do not think
it can be longer used with Harbour.
So if nobody will vote against with some serious reasons I'll begin
to commit farther modifications but FLEX version will stop to work.

It also mean that I need help in testing recent modifications and any
feedback from Harbour users with problems can greatly help to clean
possible bugs and typos in last modifications.

Chen,
if you can make some test of recent modifications with CodeGuard then
I'll be grateful.

Phil,
What about next release?
It will greatly increase number of testers ;-)

To all active developers.
I will have to update nearly all compiler functions and add one additional
parameters with pointer to compiler context. Anyone who can help in this
job is welcome. We can simply divide files and each of us will update one
of them. All internal non static function declarations should be moved to
header files. We should also chose names for new compiler context structure.
It will also replace currently passed pMacro parameter.
I suggest to use:
    HB_COMP_PTR   pComp
    HB_COMP_DECL
    HB_COMP_PARAM
in similar way to current HB_MACRO_* macros but as you've seen many time
my English is fatal so I'll accept any other proposition.
The HB_MACRO structure will be divided and some common to compiler members
will be part of HB_CMPCOMMON common structure which will be the first
member of HB_COMP and rest will be in union which for compiler will probably
have a pointer to separate structure because number of compiler different
compiler variables is really huge and I do not see any reason to introduce
them to HVM (at least now).
Then we will have to systematically eliminate all global variables and
replace them with new structure members.
When we finish we will have MT safe compiler and macro compiler without
any additional synchronization mechanism. If we also resolve the problem
with repeating functions in compiler and macro compiler by making them
really common or using different names then will be ready to integrate
compiler and HVM+RTLs in one common binary.

best regards,
Przemek
From e.m.giordano at emagsoftware.it  Tue Nov 21 10:35:36 2006
From: e.m.giordano at emagsoftware.it (Enrico Maria Giordano)
Date: Tue Nov 21 10:36:12 2006
Subject: [Harbour] Compiler speed
Message-ID: <024601c70d82$b0a01820$0100a8c0@emag>

>From my tests I see that xHarbour compile speed is greater than Harbour one 
(as an example: 7 sec vs. 14 sec).

Why?

EMG

--
EMAG Software Homepage:     http://www.emagsoftware.it
The EMG's ZX-Spectrum Page: http://www.emagsoftware.it/spectrum
The Best of Spectrum Games: http://www.emagsoftware.it/tbosg
The EMG Music page:         http://www.emagsoftware.it/emgmusic 

From philb at philb.us  Tue Nov 21 10:38:09 2006
From: philb at philb.us (Phil Barnett)
Date: Tue Nov 21 10:38:26 2006
Subject: [Harbour] FLEX/BISON
In-Reply-To: <20061121151755.GA11855@localhost.localdomain>
References: <20061121151755.GA11855@localhost.localdomain>
Message-ID: <200611211038.09423.philb@philb.us>

On Tuesday 21 November 2006 10:17, Przemyslaw Czerpak wrote:
> Phil,
> What about next release?
> It will greatly increase number of testers ;-)

I want to release 1.0, but not to get testers. I want to release 1.0 to get it 
iout the door, complete and ready to use.

The beginning of this process is to lock down the code. Are we ready for that?

If we are not ready for that, then another alpha release can be done now.

-- 
My other computer is your Windows machine
From sscc at mweb.co.za  Tue Nov 21 10:42:15 2006
From: sscc at mweb.co.za (Alex Strickland)
Date: Tue Nov 21 10:43:00 2006
Subject: [Harbour] Re: ChangeLog 2006-11-21 05:05 UTC+0100 Przemyslaw
	Czerpak (druzus/at/priv.onet.pl)
In-Reply-To: <20061121134313.GA11259@localhost.localdomain>
References: <20061121040632.GA10714@localhost.localdomain>	<86980353.20061121090310@belacy.belgorod.su>
	<20061121134313.GA11259@localhost.localdomain>
Message-ID: <45631E57.9070000@mweb.co.za>

Przemyslaw Czerpak wrote:

> Anyhow it should not be only my decision so if other developers
> will want to keep older bison compatibility then I'll revert this
> modification but it will force some additional job to make our
> compiler grammar code MT safe. 

IMO, as Alexander did, people can simply get a newer version of Bison.

I still think that using Lemon
> instead bison will be better choice, we can also include Lemon
> source code in CVS (it's single .c file). But it will be necessary
> to rewrite all grammar rules to Lemon syntax and such job can be
> done only if all core developers agree for such modification.

I am not a core developer. I looked briefly at Lemon and it seems that 
for you to reach your goal of a MT compiler, it is the best solution. 
What, though, are your reasons for requiring that the compiler be 
multi-threaded? Is it so that it will be part of the HVM which you also 
have plans to make MT?

Regards
Alex

From niki at synel.co.il  Tue Nov 21 10:50:25 2006
From: niki at synel.co.il (Chen Kedem)
Date: Tue Nov 21 11:23:49 2006
Subject: [Harbour] Re: FLEX/BISON
Message-ID: <B75D4A6BE471094AB02513DB81890397088F49@exch.SYNEL-COMPANY.LTD>

Przemek,
 
> Chen,
> if you can make some test of recent modifications with CodeGuard then
> I'll be grateful.

See my post here:
http://lists.harbour-project.org/pipermail/harbour/2006-November/000159.html
 
  Chen.
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.leap-cf.org/pipermail/harbour/attachments/20061121/25011f12/attachment-0001.html
From alex at belacy.belgorod.su  Tue Nov 21 11:36:21 2006
From: alex at belacy.belgorod.su (Alexander S.Kresin)
Date: Tue Nov 21 11:38:06 2006
Subject: [Harbour] Re: ChangeLog 2006-11-21 05:05 UTC+0100 Przemyslaw
	Czerpak (druzus/at/priv.onet.pl)
In-Reply-To: <20061121134313.GA11259@localhost.localdomain>
References: <20061121040632.GA10714@localhost.localdomain>
	<86980353.20061121090310@belacy.belgorod.su>
	<20061121134313.GA11259@localhost.localdomain>
Message-ID: <1637506263.20061121193621@belacy.belgorod.su>

On  Tuesday, November 21, 2006, 16:43 Przemyslaw Czerpak <druzus@priv.onet.pl> wrote:

PC> Anyhow it should not be only my decision so if other developers
PC> will want to keep older bison compatibility then I'll revert this
PC> modification but it will force some additional job to make our
PC> compiler grammar code MT safe.

  I still don't see reasons for compiler to be MT safe ...
  
PC>  I still think that using Lemon
PC> instead bison will be better choice, we can also include Lemon
PC> source code in CVS (it's single .c file). But it will be necessary
PC> to rewrite all grammar rules to Lemon syntax and such job can be
PC> done only if all core developers agree for such modification.

 The better is an enemy of a good :).
 Bison is included in all Unix/Linux distributions as default ...
 I think that such changes could be done in case of a real serious
 necessity.

Regards,
 Alexander
http://kresin.belgorod.su

From jfl at mafact.com  Tue Nov 21 13:58:00 2006
From: jfl at mafact.com (J. Lefebvre)
Date: Tue Nov 21 13:59:22 2006
Subject: [Harbour] After ChangeLog 2006-11-21 05:05 UTC+0100 Przemyslaw
	Czerpak
Message-ID: <mailman.13.1164135561.3287.harbour@harbour-project.org>

Recompiled a BIG APP on win XP with Fivewin and it seem working great.

The only immediate problem is clearly procline() wich return most of the time 0 !

I also had to change classes.c to allow CODEBLOCK AS Recognized type. But before to upload it, I would like to discuss something about strong typing.

Regards,

JF,

-----Original Message-----
From: harbour-bounces@harbour-project.org [mailto:harbour-bounces@harbour-project.org] On Behalf Of Chen Kedem
Sent: Tuesday, November 21, 2006 1:48 PM
To: Harbour mail-list
Subject: [Harbour] After ChangeLog 2006-11-21 05:05 UTC+0100 Przemyslaw Czerpak

05:05am, don't you vampires go to sleep when it dawn??? :)

1) source/compiler/hbcomp.c is missing from non-GNU makefiles.

2) PROCLINE() always return 0

   --tt29.prg--
   PROCEDURE MAIN
    ? procline()     // Clipper: 2  Harbour: 0
    ? procline(0)    // Clipper: 3  Harbour: 0
    ? procline(1)    // Clipper: 0  Harbour: 0
   RETURN
   ------------

3) Here is the warning list when compiling with bcc32,
   I'm using bison 1.875 if it matter
   (there used to be 15 warnings, now only 12 but some are new)

Warning W8065 obj\b32\harboury.c 7764: Call to function 'yydestruct' with no prototype in function yyparse
Warning W8065 obj\b32\harboury.c 7771: Call to function 'yydestruct' with no prototype in function yyparse
Warning W8065 obj\b32\harboury.c 7821: Call to function 'yydestruct' with no prototype in function yyparse
Warning W8004 obj\b32\harboury.c 7697: 'yynerrs' is assigned a value that is never used in function yyparse
Warning W8004 obj\b32\harboury.c 3660: 'yyptr' is assigned a value that is never used in function yyparse
Warning W8066 obj\b32\macroy.c 1895: Unreachable code in function hb_macroparse
Warning W8066 obj\b32\macroy.c 1904: Unreachable code in function hb_macroparse
Warning W8065 obj\b32\macroy.c 3646: Call to function 'yydestruct' with no prototype in function hb_macroparse
Warning W8065 obj\b32\macroy.c 3653: Call to function 'yydestruct' with no prototype in function hb_macroparse
Warning W8065 obj\b32\macroy.c 3703: Call to function 'yydestruct' with no prototype in function hb_macroparse
Warning W8004 obj\b32\macroy.c 3579: 'hb_macronerrs' is assigned a value that is never used in function hb_macroparse
Warning W8004 obj\b32\macroy.c 1726: 'yyptr' is assigned a value that is never used in function hb_macroparse

4) There are no CodeGuard errors during Harbour itself.

5) The TODO samples tt2.prg, tt2b.prg, tt23.prg and tt25.prg no longer
   gives CodeGuard errors (I'll removed them from TODO in a while).

6) HBTest output is the same (apart from the PROCLINE() problem).

7) HBPPTest output is almost the same, there is the PROCLINE() problem
   and \" are now shown as \q (which I guess was intentional).

It looks better everyday now, good work!

  Chen.
**********************************************************************************************
IMPORTANT: The contents of this email and any attachments are confidential. They are intended for the 
named recipient(s) only.
If you have received this email in error, please notify the system manager or the sender immediately and do 
not disclose the contents to anyone or make copies thereof.
*** eSafe scanned this email for viruses, vandals, and malicious content. ***
**********************************************************************************************

_______________________________________________
Harbour mailing list
Harbour@harbour-project.org
http://lists.harbour-project.org/mailman/listinfo/harbour


From jfl at mafact.com  Tue Nov 21 14:08:00 2006
From: jfl at mafact.com (J. Lefebvre)
Date: Tue Nov 21 14:08:46 2006
Subject: [Harbour] Strong typing in classes.c ... Question before upload !
Message-ID: <mailman.14.1164136126.3287.harbour@harbour-project.org>

Hi,

I just discovered that the Word CODEBLOCK was not recognised as type BLOCK. I modified classes.c to allow it without problem.

Then I discovered something more annoying.

Even for Type VAR (for example ARRAY), I have thousand lines of code where I finish some proc or function setting some Array to NIL before to leave. Also, in some classes, I use optional param, assigning the Object VAR with the param, even in case it is NIL value.

This code is not actually allowed. 

I then modified classes.c to allow assigning either the correct Type or a NIL value.

What do you think about that ? 

If nobody claim against this modification, I would like to upload it in a few days.




From druzus at priv.onet.pl  Tue Nov 21 16:08:40 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Tue Nov 21 16:09:25 2006
Subject: [Harbour] Strong typing in classes.c ... Question before upload !
In-Reply-To: <20061121200119Z13284765-23170+1886@ps31.test.onet.pl>
References: <20061121200119Z13284765-23170+1886@ps31.test.onet.pl>
Message-ID: <20061121210840.GA15405@localhost.localdomain>

On Tue, 21 Nov 2006, J. Lefebvre wrote:
> Hi,
> I just discovered that the Word CODEBLOCK was not recognised as type BLOCK.
> I modified classes.c to allow it without problem.
> Then I discovered something more annoying.
> Even for Type VAR (for example ARRAY), I have thousand lines of code where
> I finish some proc or function setting some Array to NIL before to leave.
> Also, in some classes, I use optional param, assigning the Object VAR with
> the param, even in case it is NIL value.
> This code is not actually allowed. 
> I then modified classes.c to allow assigning either the correct Type or
> a NIL value.
> What do you think about that ? 

This is not Class(y) compatible behavior but this is minor problem
Much more important is the fact that it will badly interact with
future real strong type checking in compiler. Now we do not have any
working strong type support in compiler and only in classes.c code
class members can be strong typed with runtime validation so now you
can only change it and it will work. But in the future we will not be
able to keep such feature working or our strong type support in compiler
will be only warning message generator and we will have to forget about
adding support for environments were weakly typed variables are not
supported or the support is very expensive hardly reducing overall
performance. A good example of such environment is .NET, AFAIR for
weak typed variables at least version 2.0 is necessary and even here
the performance is fatal (real .NET users may say sth more about it).
It will also block adding compile time optimization for strong typed
variables what will have significant speed impact in our native code.
In short words the problem will return and this modification will only
move it to some future days.

> If nobody claim against this modification,
> I would like to upload it in a few days.

IMHO if it's big problem for you then we should rather add to hbclass.c
some code to disable all type identifiers, f.e.:
    #translate AS CHARACTER =>
    #translate AS CODEBLOCK =>
    #translate AS ARRAY     =>
    ...

optionally enabled by some macro.
We can also think about adding support for new types which can accept
some typed value and NIL so they will not be optimized by compiler and
will work as you want but probably Ryszard should also say sth about
it - he plan to work on strong typing in compiler.

best regards,
Przemek
From jfl at mafact.com  Tue Nov 21 16:42:00 2006
From: jfl at mafact.com (J. Lefebvre)
Date: Tue Nov 21 16:43:27 2006
Subject: [Harbour] Strong typing in classes.c ... Question before upload !
Message-ID: <mailman.15.1164145407.3287.harbour@harbour-project.org>

Hi Przemek,

Ok, I forgot the fact we could optimize the code at compile time in the future. You are right.

So I will go back to my first solution, disabling Strong typing using the pre-processor. I will have some time so, to clean my code before we have a full strong typed optimized compiler.

Regards,

JF,

-----Original Message-----
From: harbour-bounces@harbour-project.org [mailto:harbour-bounces@harbour-project.org] On Behalf Of Przemyslaw Czerpak
Sent: Tuesday, November 21, 2006 10:09 PM
To: Harbour Project Main Developer List.
Subject: Re: [Harbour] Strong typing in classes.c ... Question before upload !

On Tue, 21 Nov 2006, J. Lefebvre wrote:
> Hi,
> I just discovered that the Word CODEBLOCK was not recognised as type BLOCK.
> I modified classes.c to allow it without problem.
> Then I discovered something more annoying.
> Even for Type VAR (for example ARRAY), I have thousand lines of code where
> I finish some proc or function setting some Array to NIL before to leave.
> Also, in some classes, I use optional param, assigning the Object VAR with
> the param, even in case it is NIL value.
> This code is not actually allowed. 
> I then modified classes.c to allow assigning either the correct Type or
> a NIL value.
> What do you think about that ? 

This is not Class(y) compatible behavior but this is minor problem
Much more important is the fact that it will badly interact with
future real strong type checking in compiler. Now we do not have any
working strong type support in compiler and only in classes.c code
class members can be strong typed with runtime validation so now you
can only change it and it will work. But in the future we will not be
able to keep such feature working or our strong type support in compiler
will be only warning message generator and we will have to forget about
adding support for environments were weakly typed variables are not
supported or the support is very expensive hardly reducing overall
performance. A good example of such environment is .NET, AFAIR for
weak typed variables at least version 2.0 is necessary and even here
the performance is fatal (real .NET users may say sth more about it).
It will also block adding compile time optimization for strong typed
variables what will have significant speed impact in our native code.
In short words the problem will return and this modification will only
move it to some future days.

> If nobody claim against this modification,
> I would like to upload it in a few days.

IMHO if it's big problem for you then we should rather add to hbclass.c
some code to disable all type identifiers, f.e.:
    #translate AS CHARACTER =>
    #translate AS CODEBLOCK =>
    #translate AS ARRAY     =>
    ...

optionally enabled by some macro.
We can also think about adding support for new types which can accept
some typed value and NIL so they will not be optimized by compiler and
will work as you want but probably Ryszard should also say sth about
it - he plan to work on strong typing in compiler.

best regards,
Przemek
_______________________________________________
Harbour mailing list
Harbour@harbour-project.org
http://lists.harbour-project.org/mailman/listinfo/harbour


From druzus at priv.onet.pl  Tue Nov 21 20:09:57 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Tue Nov 21 20:11:03 2006
Subject: [Harbour] Re: ChangeLog 2006-11-21 05:05 UTC+0100 Przemyslaw
	Czerpak (druzus/at/priv.onet.pl)
In-Reply-To: <1637506263.20061121193621@belacy.belgorod.su>
References: <20061121040632.GA10714@localhost.localdomain>
	<86980353.20061121090310@belacy.belgorod.su>
	<20061121134313.GA11259@localhost.localdomain>
	<1637506263.20061121193621@belacy.belgorod.su>
Message-ID: <20061122010957.GA16167@localhost.localdomain>

On Tue, 21 Nov 2006, Alexander S.Kresin wrote:
> PC> Anyhow it should not be only my decision so if other developers
> PC> will want to keep older bison compatibility then I'll revert this
> PC> modification but it will force some additional job to make our
> PC> compiler grammar code MT safe.
>   I still don't see reasons for compiler to be MT safe ...

Don't you think that having compiler integrated with HVM+RTLs is
very intetesting functionality. Are you interesting in mod_hb to
Appache server and harbour plagins for most popular internet web
browsers so it will be possible to use .prg code just like PHP.
PHP recently became very popular language so IMHO many people looks
for sth like that.
You can imagine many other similar situation. F.e. NETRDD which
will give ADS like functionality but will accept also .prg code
send from user dynamically compiled and included to RTL by the
server what will effectively resolve problems with using UDF.
Personally I do not see any reasons to accept ADS limitations when
we can quite easy create much more powerful solution.
I think that other examples you can create yourself. My goal is
giving support to create MT safe environment with integreated compiler
and HVM+RTLs which can be used in non batch systems (no memory leaks)
and possibility to exchange source code or PCODE between programs
which can be compiled on any platform.

> PC>  I still think that using Lemon
> PC> instead bison will be better choice, we can also include Lemon
> PC> source code in CVS (it's single .c file). But it will be necessary
> PC> to rewrite all grammar rules to Lemon syntax and such job can be
> PC> done only if all core developers agree for such modification.
>  The better is an enemy of a good :).

Yes, but the it's serious question if it was good enough. For sure for
someone who knew existing problems and used some workarounds for them
or simply never touched the area where problems appear yes but it's
not true for all users.

>  Bison is included in all Unix/Linux distributions as default ...
>  I think that such changes could be done in case of a real serious
>  necessity.

Yacc yes (native or emulated by bison), native bison quite often and
it's a reason to keep bison grammar code but only if we will be able
to resolve memory leaks problems. It will cost us some additional job
but it's possible. Anyhow in some other projects people was not such
patients and are dropping bison to some other grammar parser generators
so we will not be the first and for sure not the last.

best regards,
Przemek
From antonioharbour at gmail.com  Wed Nov 22 02:50:04 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Wed Nov 22 02:50:12 2006
Subject: [Harbour] Re: ChangeLog 2006-11-21 05:05 UTC+0100
	PrzemyslawCzerpak (druzus/at/priv.onet.pl)
In-Reply-To: <20061122010957.GA16167@localhost.localdomain>
Message-ID: <45640130.72e98345.577a.ffffb14d@mx.google.com>

> Don't you think that having compiler integrated with HVM+RTLs is very
intetesting functionality.

YES!

Antonio

From jfl at mafact.com  Wed Nov 22 03:12:00 2006
From: jfl at mafact.com (J. Lefebvre)
Date: Wed Nov 22 03:13:17 2006
Subject: [Harbour] After ChangeLog 2006-11-21 05:05 UTC+0100 Przemyslaw
	Czerpak
Message-ID: <mailman.16.1164183197.3287.harbour@harbour-project.org>

Oups,

Also, /p compile param create well a ppo file but an EMPTY one !

Regards,

-----Original Message-----
From: J. Lefebvre [mailto:jfl@mafact.com] 
Sent: Tuesday, November 21, 2006 7:58 PM
To: 'Harbour Project Main Developer List.'
Subject: RE: [Harbour] After ChangeLog 2006-11-21 05:05 UTC+0100 Przemyslaw Czerpak

Recompiled a BIG APP on win XP with Fivewin and it seem working great.

The only immediate problem is clearly procline() wich return most of the time 0 !

I also had to change classes.c to allow CODEBLOCK AS Recognized type. But before to upload it, I would like to discuss something about strong typing.

Regards,

JF,

-----Original Message-----
From: harbour-bounces@harbour-project.org [mailto:harbour-bounces@harbour-project.org] On Behalf Of Chen Kedem
Sent: Tuesday, November 21, 2006 1:48 PM
To: Harbour mail-list
Subject: [Harbour] After ChangeLog 2006-11-21 05:05 UTC+0100 Przemyslaw Czerpak

05:05am, don't you vampires go to sleep when it dawn??? :)

1) source/compiler/hbcomp.c is missing from non-GNU makefiles.

2) PROCLINE() always return 0

   --tt29.prg--
   PROCEDURE MAIN
    ? procline()     // Clipper: 2  Harbour: 0
    ? procline(0)    // Clipper: 3  Harbour: 0
    ? procline(1)    // Clipper: 0  Harbour: 0
   RETURN
   ------------

3) Here is the warning list when compiling with bcc32,
   I'm using bison 1.875 if it matter
   (there used to be 15 warnings, now only 12 but some are new)

Warning W8065 obj\b32\harboury.c 7764: Call to function 'yydestruct' with no prototype in function yyparse
Warning W8065 obj\b32\harboury.c 7771: Call to function 'yydestruct' with no prototype in function yyparse
Warning W8065 obj\b32\harboury.c 7821: Call to function 'yydestruct' with no prototype in function yyparse
Warning W8004 obj\b32\harboury.c 7697: 'yynerrs' is assigned a value that is never used in function yyparse
Warning W8004 obj\b32\harboury.c 3660: 'yyptr' is assigned a value that is never used in function yyparse
Warning W8066 obj\b32\macroy.c 1895: Unreachable code in function hb_macroparse
Warning W8066 obj\b32\macroy.c 1904: Unreachable code in function hb_macroparse
Warning W8065 obj\b32\macroy.c 3646: Call to function 'yydestruct' with no prototype in function hb_macroparse
Warning W8065 obj\b32\macroy.c 3653: Call to function 'yydestruct' with no prototype in function hb_macroparse
Warning W8065 obj\b32\macroy.c 3703: Call to function 'yydestruct' with no prototype in function hb_macroparse
Warning W8004 obj\b32\macroy.c 3579: 'hb_macronerrs' is assigned a value that is never used in function hb_macroparse
Warning W8004 obj\b32\macroy.c 1726: 'yyptr' is assigned a value that is never used in function hb_macroparse

4) There are no CodeGuard errors during Harbour itself.

5) The TODO samples tt2.prg, tt2b.prg, tt23.prg and tt25.prg no longer
   gives CodeGuard errors (I'll removed them from TODO in a while).

6) HBTest output is the same (apart from the PROCLINE() problem).

7) HBPPTest output is almost the same, there is the PROCLINE() problem
   and \" are now shown as \q (which I guess was intentional).

It looks better everyday now, good work!

  Chen.
**********************************************************************************************
IMPORTANT: The contents of this email and any attachments are confidential. They are intended for the 
named recipient(s) only.
If you have received this email in error, please notify the system manager or the sender immediately and do 
not disclose the contents to anyone or make copies thereof.
*** eSafe scanned this email for viruses, vandals, and malicious content. ***
**********************************************************************************************

_______________________________________________
Harbour mailing list
Harbour@harbour-project.org
http://lists.harbour-project.org/mailman/listinfo/harbour



From druzus at priv.onet.pl  Wed Nov 22 06:59:52 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Wed Nov 22 07:00:39 2006
Subject: [Harbour] After ChangeLog 2006-11-21 05:05 UTC+0100
	Przemyslaw Czerpak
In-Reply-To: <20061122091530Z5320134-12963+84286@ps27.test.onet.pl>
References: <20061122091530Z5320134-12963+84286@ps27.test.onet.pl>
Message-ID: <20061122115952.GA16433@localhost.localdomain>

On Wed, 22 Nov 2006, J. Lefebvre wrote:
> Oups,
> Also, /p compile param create well a ppo file but an EMPTY one !

Thanks for the info.
I fixed this and line numbering but now I'm changing most of compiler
function calls adding to parameters pointer to compiler context and
I cannot commit it partially without breaking compilation the whole
code. So if it's not critical please wait a day or two. If it is then
inform me and I'll make modifications on separate CVS copy and commit
them.

best regards,
Przemek
From jfl at mafact.com  Wed Nov 22 07:06:00 2006
From: jfl at mafact.com (J. Lefebvre)
Date: Wed Nov 22 07:06:59 2006
Subject: [Harbour] After ChangeLog 2006-11-21 05:05 UTC+0100
	Przemyslaw Czerpak
Message-ID: <mailman.17.1164197219.3287.harbour@harbour-project.org>

I can wait without any problem.

Regards,

JF,

-----Original Message-----
From: harbour-bounces@harbour-project.org [mailto:harbour-bounces@harbour-project.org] On Behalf Of Przemyslaw Czerpak
Sent: Wednesday, November 22, 2006 1:00 PM
To: Harbour Project Main Developer List.
Subject: Re: RE: [Harbour] After ChangeLog 2006-11-21 05:05 UTC+0100 Przemyslaw Czerpak

On Wed, 22 Nov 2006, J. Lefebvre wrote:
> Oups,
> Also, /p compile param create well a ppo file but an EMPTY one !

Thanks for the info.
I fixed this and line numbering but now I'm changing most of compiler
function calls adding to parameters pointer to compiler context and
I cannot commit it partially without breaking compilation the whole
code. So if it's not critical please wait a day or two. If it is then
inform me and I'll make modifications on separate CVS copy and commit
them.

best regards,
Przemek
_______________________________________________
Harbour mailing list
Harbour@harbour-project.org
http://lists.harbour-project.org/mailman/listinfo/harbour


From alex at belacy.belgorod.su  Wed Nov 22 08:24:03 2006
From: alex at belacy.belgorod.su (Alexander S.Kresin)
Date: Wed Nov 22 08:23:12 2006
Subject: [Harbour] GPF
Message-ID: <11427697169.20061122162403@belacy.belgorod.su>

 Hi,
 I get a GPF after closing the program, built with Harbour and HwGUI,
 Borland C 5.5.1. The GPF appears only in Win98; in WinXP the program
 terminates correctly.

 This problem had appeared in a period between September, 13 and the
 beginning of November.
 I have inserted printf's to Harbour sources to trace the GPF - it
 appears in hb_xgrab, called from:

 hb_getenv(), line 79
 hb_cmdargGet(), line 168
 hb_cmdargCheck(), line 244
 hb_xexit(), line 569
 hb_vmQuit(), line 580

 The strange thing is that the appearance of GPF, seems to be
 dependent of a program module size.
 I have created a short test and if I comment there a portion of
 lines, the GPF may disappear, though the commented code is never
 called in the program ...

 Could anybody give me a clue ?

-- 
Regards,
 Alexander
http://kresin.belgorod.su


From alex at belacy.belgorod.su  Wed Nov 22 09:03:43 2006
From: alex at belacy.belgorod.su (Alexander S.Kresin)
Date: Wed Nov 22 09:02:32 2006
Subject: [Harbour] ppo files
Message-ID: <17730077423.20061122170343@belacy.belgorod.su>

 Ppo files are created empty now ...

-- 
Regards,
 Alexander
http://kresin.belgorod.su


From niki at synel.co.il  Wed Nov 22 09:09:49 2006
From: niki at synel.co.il (Chen Kedem)
Date: Wed Nov 22 09:08:49 2006
Subject: [Harbour] GPF
Message-ID: <45645A2D.35C1@synel.co.il>

Alexander,

> hb_getenv(), line 79
> hb_cmdargGet(), line 168
> hb_cmdargCheck(), line 244
> hb_xexit(), line 569
> hb_vmQuit(), line 580

It happen during exit while checking the //INFO parameter
from the set Clipper=//INFO in source/vm/fm.c happen also in my
environment.

--tt30.prg--
PROCEDURE MAIN
 qout( "test" )
RETURN
------------

bld_b32 tt30 /w/a/n
set clipper=//INFO
tt30

Here is the CodeGuard log:

Error 00001. 0x300010 (Thread 0x00AD):
Resource leak: The memory block (0xCBD988) was never freed

The memory block (0x00CBD988) [size: 11 bytes] was allocated with malloc
Call Tree:
   0x00417EC7(=tt30.exe:0x01:016EC7) source\vm\FM.C#234
   0x004BD2EC(=tt30.exe:0x01:0BC2EC) source\common\HBGETE.C#79
   0x00410676(=tt30.exe:0x01:00F676) source\vm\CMDARG.C#168
   0x004108D2(=tt30.exe:0x01:00F8D2) source\vm\CMDARG.C#244
   0x00410BD6(=tt30.exe:0x01:00FBD6) source\vm\CMDARG.C#328
   0x0041A074(=tt30.exe:0x01:019074) source\vm\HVM.C#422

------------------------------------------
Error 00002. 0x300010 (Thread 0x00AD):
Resource leak: The memory block (0xCB56AC) was never freed

The memory block (0x00CB56AC) [size: 11 bytes] was allocated with malloc
Call Tree:
   0x00417EC7(=tt30.exe:0x01:016EC7) source\vm\FM.C#234
   0x004BD2EC(=tt30.exe:0x01:0BC2EC) source\common\HBGETE.C#79
   0x00410676(=tt30.exe:0x01:00F676) source\vm\CMDARG.C#168
   0x004108D2(=tt30.exe:0x01:00F8D2) source\vm\CMDARG.C#244
   0x004479DF(=tt30.exe:0x01:0469DF) source\rtl\GTAPI.C#100
   0x0044120D(=tt30.exe:0x01:04020D) source\rtl\CONSOLE.C#141

It is working Ok, if I remove the "set clipper" and execute the
program like : tt30 //INFO

Tested with ChangeLog 2006-11-21 05:05 UTC+0100 Przemyslaw Czerpak

  Chen.
**********************************************************************************************
IMPORTANT: The contents of this email and any attachments are confidential. They are intended for the 
named recipient(s) only.
If you have received this email in error, please notify the system manager or the sender immediately and do 
not disclose the contents to anyone or make copies thereof.
*** eSafe scanned this email for viruses, vandals, and malicious content. ***
**********************************************************************************************

From alex at belacy.belgorod.su  Wed Nov 22 09:10:12 2006
From: alex at belacy.belgorod.su (Alexander S.Kresin)
Date: Wed Nov 22 09:08:59 2006
Subject: [Harbour] Re: GPF
In-Reply-To: <11427697169.20061122162403@belacy.belgorod.su>
References: <11427697169.20061122162403@belacy.belgorod.su>
Message-ID: <11430466391.20061122171012@belacy.belgorod.su>

Wednesday, November 22, 2006, 4:24:03 PM, Alexander S.Kresin <alex@belacy.belgorod.su> wrote:

ASK>  Hi,
ASK>  I get a GPF after closing the program, built with Harbour and HwGUI,
ASK>  Borland C 5.5.1. The GPF appears only in Win98; in WinXP the program
ASK>  terminates correctly.

ASK> [ ... ]

 Probably, this is related thing - the hbtest-dll.exe, built with
 Borland C 5.5.1., Win98 ( not tested on XP yet ),  also gives GPF
 while terminating.

-- 
Regards,
 Alexander
http://kresin.belgorod.su


From alex at belacy.belgorod.su  Wed Nov 22 09:11:48 2006
From: alex at belacy.belgorod.su (Alexander S.Kresin)
Date: Wed Nov 22 09:10:36 2006
Subject: [Harbour] Re: ppo files
In-Reply-To: <17730077423.20061122170343@belacy.belgorod.su>
References: <17730077423.20061122170343@belacy.belgorod.su>
Message-ID: <3530562142.20061122171148@belacy.belgorod.su>

Wednesday, November 22, 2006, 5:03:43 PM, Alexander S.Kresin <alex@belacy.belgorod.su> wrote:

ASK>  Ppo files are created empty now ...

 Sorry, see just now that it was reported already.


-- 
Regards,
 Alexander
http://kresin.belgorod.su


From niki at synel.co.il  Wed Nov 22 09:13:12 2006
From: niki at synel.co.il (Chen Kedem)
Date: Wed Nov 22 09:12:11 2006
Subject: [Harbour] ppo files
Message-ID: <45645AF8.4A34@synel.co.il>

Alexander,

> Ppo files are created empty now ...

Przemek knows about it, see here:
http://lists.harbour-project.org/pipermail/harbour/2006-November/000179.html

  Chen.
**********************************************************************************************
IMPORTANT: The contents of this email and any attachments are confidential. They are intended for the 
named recipient(s) only.
If you have received this email in error, please notify the system manager or the sender immediately and do 
not disclose the contents to anyone or make copies thereof.
*** eSafe scanned this email for viruses, vandals, and malicious content. ***
**********************************************************************************************

From alex at belacy.belgorod.su  Wed Nov 22 13:18:10 2006
From: alex at belacy.belgorod.su (Alexander S.Kresin)
Date: Wed Nov 22 13:18:38 2006
Subject: [Harbour] Re: GPF
In-Reply-To: <45645A2D.35C1@synel.co.il>
References: <45645A2D.35C1@synel.co.il>
Message-ID: <331382347.20061122211810@belacy.belgorod.su>

On  Wednesday, November 22, 2006, 17:09 Chen Kedem <niki@synel.co.il> wrote:

CK> Alexander,

>> hb_getenv(), line 79
>> hb_cmdargGet(), line 168
>> hb_cmdargCheck(), line 244
>> hb_xexit(), line 569
>> hb_vmQuit(), line 580

CK> It happen during exit while checking the //INFO parameter
CK> from the set Clipper=//INFO in source/vm/fm.c happen also in my
CK> environment.
CK> [...]

 Yes, really. Thanks for the info! I've spent a half of a day,
 trying to find a reason.
 This happens if SET CLIPPER exist in environment with any value (
 F50, for example ).
 

Regards,
 Alexander
http://kresin.belgorod.su

From antonioharbour at gmail.com  Wed Nov 22 13:27:36 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Wed Nov 22 13:27:45 2006
Subject: [Harbour] Re: GPF
In-Reply-To: <331382347.20061122211810@belacy.belgorod.su>
Message-ID: <4564969c.34e2bb2e.798a.fffffc68@mx.google.com>

>  Yes, really. Thanks for the info! I've spent a half of a 
> day,  trying to find a reason.
>  This happens if SET CLIPPER exist in environment with any 
> value (  F50, for example ).

Could we fix it ?

Antonio

From druzus at priv.onet.pl  Wed Nov 22 16:17:37 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Wed Nov 22 16:31:14 2006
Subject: [Harbour] Re: GPF
In-Reply-To: <4564969c.34e2bb2e.798a.fffffc68@mx.google.com>
References: <331382347.20061122211810@belacy.belgorod.su>
	<4564969c.34e2bb2e.798a.fffffc68@mx.google.com>
Message-ID: <20061122211737.GA18537@localhost.localdomain>

On Wed, 22 Nov 2006, Antonio Linares wrote:
> >  Yes, really. Thanks for the info! I've spent a half of a 
> > day,  trying to find a reason.
> >  This happens if SET CLIPPER exist in environment with any 
> > value (  F50, for example ).
> Could we fix it ?

The problem appears when memory statistic module is linked with application
and program allocates memory after freeing HVM stack.
Add in estack.c at the end of hb_stackFree() function:

   hb_stack.pItems = hb_stack.pPos = hb_stack.pBase = NULL;

It will fix GPF but there is also yet another problem: hb_cmdargCheck()
in cmdarg.c is wrong and causes memory leaks but here fix will need more
modifications. I'll fix it too and commit both fixes tomorrow when I'll
finish some basic part of modifications. Macro compiler will be fully MT
safe without any mutex and also most of compiler code.

best regards,
Przemek
From druzus at priv.onet.pl  Thu Nov 23 00:09:21 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Thu Nov 23 00:10:05 2006
Subject: [Harbour] FLEX/BISON
In-Reply-To: <200611211038.09423.philb@philb.us>
References: <20061121151755.GA11855@localhost.localdomain>
	<200611211038.09423.philb@philb.us>
Message-ID: <20061123050921.GA1378@localhost.localdomain>

On Tue, 21 Nov 2006, Phil Barnett wrote:
> > Phil,
> > What about next release?
> > It will greatly increase number of testers ;-)
> I want to release 1.0, but not to get testers. I want to release 1.0 to get it 
> iout the door, complete and ready to use.

Yes but we cannot make it without some user feedback.
I do not expect any serious problem but current code will have to be
extensively tested to eliminate mostly stupid typos.

> The beginning of this process is to lock down the code. Are we ready for that?

I stop farther modifications. Today last commit and now only bug fixes.

> If we are not ready for that, then another alpha release can be done now.

I still think that we should create next alpha release but if not then we
will have to release some RC versions.

best regards,
Przemek
From jfl at mafact.com  Thu Nov 23 03:13:00 2006
From: jfl at mafact.com (J. Lefebvre)
Date: Thu Nov 23 03:13:53 2006
Subject: [Harbour] FLEX/BISON
Message-ID: <mailman.18.1164269633.3287.harbour@harbour-project.org>

Hi,

I think one more alpha should be the safer way regarding the very big job done up to now (thanks Przemek ;-) ).

Then after some week of debugging we could release an 1.0 RC1.

My two cents,

JF,

-----Original Message-----
From: harbour-bounces@harbour-project.org [mailto:harbour-bounces@harbour-project.org] On Behalf Of Przemyslaw Czerpak
Sent: Thursday, November 23, 2006 6:09 AM
To: Harbour Project Main Developer List.
Subject: Re: [Harbour] FLEX/BISON

On Tue, 21 Nov 2006, Phil Barnett wrote:
> > Phil,
> > What about next release?
> > It will greatly increase number of testers ;-)
> I want to release 1.0, but not to get testers. I want to release 1.0 to get it 
> iout the door, complete and ready to use.

Yes but we cannot make it without some user feedback.
I do not expect any serious problem but current code will have to be
extensively tested to eliminate mostly stupid typos.

> The beginning of this process is to lock down the code. Are we ready for that?

I stop farther modifications. Today last commit and now only bug fixes.

> If we are not ready for that, then another alpha release can be done now.

I still think that we should create next alpha release but if not then we
will have to release some RC versions.

best regards,
Przemek
_______________________________________________
Harbour mailing list
Harbour@harbour-project.org
http://lists.harbour-project.org/mailman/listinfo/harbour


From philb at philb.us  Thu Nov 23 07:45:40 2006
From: philb at philb.us (Phil Barnett)
Date: Thu Nov 23 07:45:40 2006
Subject: [Harbour] FLEX/BISON
In-Reply-To: <20061123050921.GA1378@localhost.localdomain>
References: <20061121151755.GA11855@localhost.localdomain>
	<200611211038.09423.philb@philb.us>
	<20061123050921.GA1378@localhost.localdomain>
Message-ID: <200611230745.40253.philb@philb.us>

On Thursday 23 November 2006 00:09, Przemyslaw Czerpak wrote:

> > The beginning of this process is to lock down the code. Are we ready for
> > that?
>
> I stop farther modifications. Today last commit and now only bug fixes.

If that is the case, then we should lock down for new code and begin the beta 
process.

All in favor say Aye, opposed say Nay.

-- 
My other computer is your Windows machine
From sscc at mweb.co.za  Thu Nov 23 08:45:53 2006
From: sscc at mweb.co.za (Alex Strickland)
Date: Thu Nov 23 08:46:52 2006
Subject: [Harbour] FLEX/BISON
In-Reply-To: <200611230745.40253.philb@philb.us>
References: <20061121151755.GA11855@localhost.localdomain>	<200611211038.09423.philb@philb.us>	<20061123050921.GA1378@localhost.localdomain>
	<200611230745.40253.philb@philb.us>
Message-ID: <4565A611.80205@mweb.co.za>

Phil Barnett wrote:
> On Thursday 23 November 2006 00:09, Przemyslaw Czerpak wrote:
> 
>>> The beginning of this process is to lock down the code. Are we ready for
>>> that?
>> I stop farther modifications. Today last commit and now only bug fixes.
> 
> If that is the case, then we should lock down for new code and begin the beta 
> process.
> 
> All in favor say Aye, opposed say Nay.

Aye

From hbcs at sonic.net  Wed Nov 22 17:28:48 2006
From: hbcs at sonic.net (Bill Smith)
Date: Thu Nov 23 09:23:49 2006
Subject: [Harbour] Re: GPF
References: <331382347.20061122211810@belacy.belgorod.su><4564969c.34e2bb2e.798a.fffffc68@mx.google.com>
	<20061122211737.GA18537@localhost.localdomain>
Message-ID: <005501c70e85$948c2440$0203a8c0@hbco>

Wow!  Happy Thanksgiving Przemek and to all!

Bill



----- Original Message ----- 
From: Przemyslaw Czerpak 
To: Harbour Project Main Developer List. 
Sent: Wednesday, November 22, 2006 1:17 PM
Subject: Re: RE: [Harbour] Re: GPF


On Wed, 22 Nov 2006, Antonio Linares wrote:
> >  Yes, really. Thanks for the info! I've spent a half of a 
> > day,  trying to find a reason.
> >  This happens if SET CLIPPER exist in environment with any 
> > value (  F50, for example ).
> Could we fix it ?

The problem appears when memory statistic module is linked with application
and program allocates memory after freeing HVM stack.
Add in estack.c at the end of hb_stackFree() function:

   hb_stack.pItems = hb_stack.pPos = hb_stack.pBase = NULL;

It will fix GPF but there is also yet another problem: hb_cmdargCheck()
in cmdarg.c is wrong and causes memory leaks but here fix will need more
modifications. I'll fix it too and commit both fixes tomorrow when I'll
finish some basic part of modifications. Macro compiler will be fully MT
safe without any mutex and also most of compiler code.

best regards,
Przemek
_______________________________________________
Harbour mailing list
Harbour@harbour-project.org
http://lists.harbour-project.org/mailman/listinfo/harbour
From druzus at priv.onet.pl  Thu Nov 23 13:58:08 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Thu Nov 23 13:58:52 2006
Subject: [Harbour] ChangeLog 2006-11-23 20:00 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <20061123185807.GA20420@localhost.localdomain>

2006-11-23 20:00 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbapi.h
  * harbour/include/hbcomp.h
  + harbour/include/hbcompdf.h
  * harbour/include/hberrors.h
  * harbour/include/hbexpra.c
  * harbour/include/hbexprb.c
  * harbour/include/hbexprc.c
  * harbour/include/hbexprop.h
  * harbour/include/hbmacro.h
  * harbour/include/hbpp.h
  * harbour/include/hbvm.h
  * harbour/source/common/expropt1.c
  * harbour/source/common/expropt2.c
  * harbour/source/compiler/Makefile
  * harbour/source/compiler/cmdcheck.c
  * harbour/source/compiler/complex.c
  * harbour/source/compiler/genc.c
  * harbour/source/compiler/gencc.c
  * harbour/source/compiler/gencli.c
  * harbour/source/compiler/gencobj.c
  * harbour/source/compiler/genhrb.c
  * harbour/source/compiler/genjava.c
  * harbour/source/compiler/genobj32.c
  * harbour/source/compiler/harbour.c
  * harbour/source/compiler/harbour.l
  * harbour/source/compiler/harbour.y
  * harbour/source/compiler/hbcomp.c
  * harbour/source/compiler/hbdead.c
  * harbour/source/compiler/hbfix.c
  * harbour/source/compiler/hbfunchk.c
  * harbour/source/compiler/hbgenerr.c
  * harbour/source/compiler/hbident.c
  * harbour/source/compiler/hbpcode.c
  * harbour/source/compiler/ppcomp.c
  * harbour/source/macro/macro.y
  * harbour/source/pp/ppcore.c
  * harbour/source/pp/ppgen.c
  * harbour/source/pp/pplib.c
  * harbour/source/vm/cmdarg.c
  * harbour/source/vm/estack.c
  * harbour/source/vm/fm.c
  * harbour/source/vm/macro.c
  * harbour/utils/hbpp/hbpp.c
  * harbour/utils/hbpp/hbpp.h
  * harbour/utils/hbpp/hbppcomp.c
  * harbour/utils/hbpp/hbppcore.c
  * harbour/utils/hbpp/hbpplib.c
  * harbour/utils/hbpp/pragma.c
    * changed the internal compiler API to be MT safe.
      All global and static non constant variables replaced by
      HB_COMP structure which have all compiler context settings.
      It's possible to allocate simultaneously many compiler contexts
      and compile code. Only constant/read only variables are shared.
      In macro compiler HB_COMP is replaced by HB_MACRO.
      In source code I everywhere used to macros: HB_COMP_DECL and
      HB_COMP_PARAM which are equivalents of old HB_MACRO_DECL and
      HB_MACRO_PARAM definitions.
      We will only have to change compiler FATAL errors support to
      not execute exit() for non batch systems.
    * make macro compiler fully MT safe
    * removed not longer used definitions and variables
    ! add direct accessing to PP line number information - it fixes missing
      line numbers reported recently
    ! added generating .ppo files when tokens are teken directly by compiler
      - it fixes empty .ppo file problem
    ! clear hb_stack internall variables after removing hb_stack to avoid
      possible GPF if application still works and try to access unexsiting
      hb_stack
    ! do not allocate new memory block when final FM statistic report is
      generated - it fixes problem with GPF when application compiled with
      FM statistic exits and CLIPPER envvar is set.
    ! fixed memory leak hb_cmdargCheck()
    ! added to harbour.y symbol destructors - it should fixes memory leaks
      in syntax errors but it uses quite new bison feature which is not
      fully supported yet. Unfortunately it's also not MT safe and the
      destructors implementation in 1.875c does not respect %parse-param.
      Bison documentation says that it should so I hope it will be fixed
      soon (or maybe even already is in the newest bison versions) before
      I'll add multi context compilation support. If not then I will have
      to add some workaround. I can pass compiler context pointer inside
      YYSTYPE using hack in a lexer but it will force really huge number
      modifications in existing bison rules so probably it will be much
      easier to fix bison or write a small tool to update generated parser.
    * other modifications - the total size of patch is nearly 1MB and
      detail description will have to take me few days.

best regards,
Przemek
From antonioharbour at gmail.com  Thu Nov 23 14:19:16 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Thu Nov 23 14:19:29 2006
Subject: [Harbour] ChangeLog 2006-11-23 20:00 UTC+0100 Przemyslaw
	Czerpak(druzus/at/priv.onet.pl)
In-Reply-To: <20061123185807.GA20420@localhost.localdomain>
Message-ID: <4565f43a.5794052e.447a.ffffc709@mx.google.com>

Przemek, 

> 2006-11-23 20:00 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)

Wow, many thanks!

BTW, what do you have for breakfast ? ;-)

From alex at belacy.belgorod.su  Fri Nov 24 01:00:33 2006
From: alex at belacy.belgorod.su (Alexander S.Kresin)
Date: Fri Nov 24 00:59:07 2006
Subject: [Harbour] Re: ChangeLog 2006-11-23 20:00 UTC+0100 Przemyslaw
	Czerpak (druzus/at/priv.onet.pl)
In-Reply-To: <20061123185807.GA20420@localhost.localdomain>
References: <20061123185807.GA20420@localhost.localdomain>
Message-ID: <147663781.20061124090033@belacy.belgorod.su>

Thursday, November 23, 2006, 9:58:08 PM, Przemyslaw Czerpak <druzus@priv.onet.pl> wrote:

PC> 2006-11-23 20:00 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
PC> [ ... ]

 Great, Przemek !
 I sincerely admire the tremendous work you does.

-- 
Regards,
 Alexander
http://kresin.belgorod.su


From druzus at priv.onet.pl  Fri Nov 24 02:11:30 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Fri Nov 24 02:12:17 2006
Subject: [Harbour] ChangeLog 2006-11-24 07:50 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <20061124071130.GA18215@localhost.localdomain>

2006-11-24 07:50 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/compiler/harbour.y
    * fixed some memory leaks which cannot be addressed by destructor
      because they are inside our own code which were not freeing
      properly passed expressions, f.e.:
         x:=1->f
      or:
         x:=field->(1)
      This should close the memory leaks problem in grammar parser.
    * indenting

Today I'll commit yet minor modification to add \x<hex> support to
extended strings e"..." and then only bug fixing, of course if I haven't
forgot about sth important. It will be also good to make some cleanup in
file organization and used macros.
What was the final agreement about removing simplex and some related
files? This code cannot be compiled for a long time and after recent
modification it will need _VERY_ serious job to make it working.
It operates mostly on static variables so to make it MT safe it will
be necessary to rewrite from scratch most of code. I do not think
that we will find someone who will make it and we are still keeping
in core source code exceptions hard coded for SIMPLEX what only makes
deeper modifications like the last one much harder then necessary.

best regards,
Przemek
From jfl at mafact.com  Fri Nov 24 02:31:00 2006
From: jfl at mafact.com (J. Lefebvre)
Date: Fri Nov 24 02:31:46 2006
Subject: [Harbour] ChangeLog 2006-11-24 07:50 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <mailman.19.1164353506.3287.harbour@harbour-project.org>

Hi Przemek,

As usual, incredible Job !

About simplex, I have in memory we already agree some month ago we could abandon it without any problem.

In all case, this is my advice.

Let's see what the other think about that.

JF,

-----Original Message-----
From: harbour-bounces@harbour-project.org [mailto:harbour-bounces@harbour-project.org] On Behalf Of Przemyslaw Czerpak
Sent: Friday, November 24, 2006 8:12 AM
To: Harbour Project Main Developer List.
Subject: [Harbour] ChangeLog 2006-11-24 07:50 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)

2006-11-24 07:50 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/compiler/harbour.y
    * fixed some memory leaks which cannot be addressed by destructor
      because they are inside our own code which were not freeing
      properly passed expressions, f.e.:
         x:=1->f
      or:
         x:=field->(1)
      This should close the memory leaks problem in grammar parser.
    * indenting

Today I'll commit yet minor modification to add \x<hex> support to
extended strings e"..." and then only bug fixing, of course if I haven't
forgot about sth important. It will be also good to make some cleanup in
file organization and used macros.
What was the final agreement about removing simplex and some related
files? This code cannot be compiled for a long time and after recent
modification it will need _VERY_ serious job to make it working.
It operates mostly on static variables so to make it MT safe it will
be necessary to rewrite from scratch most of code. I do not think
that we will find someone who will make it and we are still keeping
in core source code exceptions hard coded for SIMPLEX what only makes
deeper modifications like the last one much harder then necessary.

best regards,
Przemek
_______________________________________________
Harbour mailing list
Harbour@harbour-project.org
http://lists.harbour-project.org/mailman/listinfo/harbour


From alex at belacy.belgorod.su  Fri Nov 24 03:08:47 2006
From: alex at belacy.belgorod.su (Alexander S.Kresin)
Date: Fri Nov 24 03:07:29 2006
Subject: [Harbour] Re: ChangeLog 2006-11-24 07:50 UTC+0100 Przemyslaw
	Czerpak (druzus/at/priv.onet.pl)
In-Reply-To: <20061124071130.GA18215@localhost.localdomain>
References: <20061124071130.GA18215@localhost.localdomain>
Message-ID: <1978358641.20061124110847@belacy.belgorod.su>

Friday, November 24, 2006, 10:11:30 AM, Przemyslaw Czerpak <druzus@priv.onet.pl> wrote:

PC> What was the final agreement about removing simplex and some related
PC> files?

 My vote is: yes.

-- 
Regards,
 Alexander
http://kresin.belgorod.su


From sscc at mweb.co.za  Fri Nov 24 05:05:51 2006
From: sscc at mweb.co.za (Alex Strickland)
Date: Fri Nov 24 05:06:51 2006
Subject: [Harbour] ChangeLog 2006-11-24 07:50 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <20061124071130.GA18215@localhost.localdomain>
References: <20061124071130.GA18215@localhost.localdomain>
Message-ID: <4566C3FF.8090006@mweb.co.za>

Przemyslaw Czerpak wrote:
> What was the final agreement about removing simplex and some related
> files? This code cannot be compiled for a long time and after recent
> modification it will need _VERY_ serious job to make it working.
> It operates mostly on static variables so to make it MT safe it will
> be necessary to rewrite from scratch most of code. I do not think
> that we will find someone who will make it and we are still keeping
> in core source code exceptions hard coded for SIMPLEX what only makes
> deeper modifications like the last one much harder then necessary.

I vote "yes".

Regards
Alex

From druzus at priv.onet.pl  Fri Nov 24 08:17:30 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Fri Nov 24 08:18:17 2006
Subject: [Harbour] ChangeLog 2006-11-15 14:20 UTC+0100
	Przemyslaw	Czerpak	(druzus/at/priv.onet.pl)
In-Reply-To: <4561B4DB.25011.31B536@localhost>
References: <455DE569.18500.11592EF@localhost>
	<4561B4DB.25011.31B536@localhost>
Message-ID: <20061124131730.GA8884@localhost.localdomain>

On Mon, 20 Nov 2006, Ryszard Glab wrote:
> > I'm just removing hb_strdup() from macro compiler expressions
> > and there is a code I do not understand. Why we have things like:
> >     szSymbol = hb_compIdentifierNew( "EVAL", TRUE )
> > "EVAL" is static string so why to not use it directly?
>   If I remember correctly, using static buffer will cause problem if a 
> variable with a name 'EVAL' will be used because all variable names are 
> deallocated.

If they were deallocated outside the identifier hash table destructor
then it was a bug which causes multiple deallocation of the same memory
block what could cause internal C RTL memory structure corruption.
If I left such code after recent modification then I hope it will be fixed
soon. It should be reported by any memory statistic system - also our own
FM module.
BTW I changed hb_compIdentifierNew() behavior. Now it cannot be called
with second parameter set to FALSE and static buffer and all static
symbols can be directly assigned to static buffers.

> > I can understand hashing all symbols in systems which have
> > to make very big number of string comparisons so after hashing
> > instead of str[i]cmp()/memcmp() simple pointer comparison can
> > be used ( pStr1 == pStr2 ) but as I can see we do not have any
> > of such code and I do not see big improvement in compiler for
> > us with this feature but maybe you are working on sth. Any reasons
> > to not simply use "EVAL" directly? ( szSymbol = "EVAL" )
>   Using hash has decreased the number of memory allocations (I was 
> sending the statistics a few years ago). The comparision of pointers was 
> not used because at the time of hash introduction some strings were 
> coming from static buffers.

I do not think we will reach much improvement using pointers only.
There are only few functions when it can give some improvement.
Now tokens are taken directly from PP and their value could be in
static or dynamic buffer. In complex.c all dynamic tokens which needs
stringify are automatically converted by hb_compIdentifierNew() without
any new allocation and marked as static so PP will not free their buffer.
It means that now number of allocations in compiler for incoming tokens
which need string representation has been reduced to 0. The only one terminal
symbol which uses dynamically allocated and then freed buffer is CBSTART.
On syntax error in grammar parser it should be properly deallocated by
destructor. I removed nearly all hb_strdup()/hb_strupr() from expression
processing code - the exceptions are intentional with the exception in
hb_compExternAdd() where two hb_strdup() should be removed because cause
memory leak for "_GET_" symbol. I'll already fixed it in my CVS copy and
I'll commit it today.
We should also use hb_compIdentifierNew() or direct static values also
in few other places like file names in AUTOOPEN or INLINE structures
but it will have minor meaning on overall performance.
Finally also PP can use common with compiler symbol hash table but now
I'd like to keep it separated.
There are also some unnecessary memory allocation for temporary PCODE
buffers forced by the old strong typing code and this should also be
removed and some additional structure members which are reserved for it.
I do not know how do you plan to implement string type checking but I do
not think that you will try to use the old code or implementing strong
typing in similar way, don't you?
I should ask before I'll remove it.

best regards,
Przemek
From philb at philb.us  Fri Nov 24 08:46:23 2006
From: philb at philb.us (Phil Barnett)
Date: Fri Nov 24 08:46:22 2006
Subject: [Harbour] ChangeLog 2006-11-24 07:50 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <20061124071130.GA18215@localhost.localdomain>
References: <20061124071130.GA18215@localhost.localdomain>
Message-ID: <200611240846.23361.philb@philb.us>

On Friday 24 November 2006 02:11, Przemyslaw Czerpak wrote:

> What was the final agreement about removing simplex and some related
> files?

We decided a long time ago to remove support.

-- 
My other computer is your Windows machine
From alex at belacy.belgorod.su  Fri Nov 24 09:52:15 2006
From: alex at belacy.belgorod.su (Alexander S.Kresin)
Date: Fri Nov 24 09:52:34 2006
Subject: [Harbour] Re: Error while compiling HUchet
In-Reply-To: <4566CB9C.2000503@obukhov.kiev.ua>
References: <4566CB9C.2000503@obukhov.kiev.ua>
Message-ID: <649582348.20061124175215@belacy.belgorod.su>

???????, 24 ?????? 2006 ?. atzct atzct@obukhov.kiev.ua wrote:

a> Harbour:
a> 2006-11-24 03:25 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)

a> HwGui:
a> 2006-11-23 10:45 UTC+0300 Alexander Kresin <alex@belacy.belgorod.su>


a> While compiling i got this:
a> general.prg(151) Error E0022  Invalid lvalue: 'Numeric'
a> general.prg(159) Error E0022  Invalid lvalue: 'Numeric'
a> general.prg(167) Error E0022  Invalid lvalue: 'Numeric'
a> general.prg(176) Error E0022  Invalid lvalue: 'Numeric'
a> general.prg(189) Error E0022  Invalid lvalue: 'Numeric'
a> general.prg(197) Error E0022  Invalid lvalue: 'Numeric'

a> [ ... ]

 This is an error in the general.prg - I wonder how it worked before.

      @ x,3 OWNERBUTTON OF oApp:oPanel                         ;
           ON CLICK {||oApp:oBrw:Top()}                        ;
           SIZE nWidth,nHeight FLAT TRANSPARENT COLOR 12632256 ;
           TEXT aTxt_Btn[1] FONT oFontBtn COORDINATES 0,20,0,0 ;
           BITMAP "top.bmp" COORDINATES 0,4,0,0

must be

      @ x,3 OWNERBUTTON OF oApp:oPanel                         ;
           ON CLICK {||oApp:oBrw:Top()}                        ;
           SIZE nWidth,nHeight FLAT                            ;
           TEXT aTxt_Btn[1] FONT oFontBtn COORDINATES 0,20,0,0 ;
           BITMAP "top.bmp" COORDINATES 0,4,0,0 TRANSPARENT COLOR 12632256

because TRANSPARENT COLOR relates to a BITMAP clause.


Regards,
 Alexander
http://kresin.belgorod.su

From druzus at priv.onet.pl  Fri Nov 24 12:08:28 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Fri Nov 24 12:09:32 2006
Subject: [Harbour] Re: Error while compiling HUchet
In-Reply-To: <649582348.20061124175215@belacy.belgorod.su>
References: <4566CB9C.2000503@obukhov.kiev.ua>
	<649582348.20061124175215@belacy.belgorod.su>
Message-ID: <20061124170828.GA23494@localhost.localdomain>

On Fri, 24 Nov 2006, Alexander S.Kresin wrote:
> a> While compiling i got this:
> a> general.prg(151) Error E0022  Invalid lvalue: 'Numeric'
> a> [ ... ]
>  This is an error in the general.prg - I wonder how it worked before.
>       @ x,3 OWNERBUTTON OF oApp:oPanel                         ;
>            ON CLICK {||oApp:oBrw:Top()}                        ;
>            SIZE nWidth,nHeight FLAT TRANSPARENT COLOR 12632256 ;
>            TEXT aTxt_Btn[1] FONT oFontBtn COORDINATES 0,20,0,0 ;
>            BITMAP "top.bmp" COORDINATES 0,4,0,0
> must be
>       @ x,3 OWNERBUTTON OF oApp:oPanel                         ;
>            ON CLICK {||oApp:oBrw:Top()}                        ;
>            SIZE nWidth,nHeight FLAT                            ;
>            TEXT aTxt_Btn[1] FONT oFontBtn COORDINATES 0,20,0,0 ;
>            BITMAP "top.bmp" COORDINATES 0,4,0,0 TRANSPARENT COLOR 12632256
> because TRANSPARENT COLOR relates to a BITMAP clause.

Alexander,

Now the results are _EXACTLY_ the same as in Clipper. The only one
difference in the above example are four additional spaces I hard coded
in new PP to allow valid FLEX decoding of some expressions. Now I can
remove them. The old PP was not compatible with the Clipper one in really
many places. This is one of such example but there is much more. Also
many rules cannot be translated by old PP at all. F.e. this is an
example of old code which will never work with old PP and cannot be
fixed without rewriting the internal PP logic.

   #define a -1
   #xcommand CMD  <x>   => CMD2 <x> ; CMD3 <x>
   #xcommand CMD2 <x>   => ? <x>
   #xcommand CMD3 <(x)> => ? <(x)>
   CMD 1-a

It exploits in three different incompatibilities in old PP code
and when you will try to "fix" any of them you will have to break
other rule.
The optional calsues were also not preprocessed like in Clipper.
F.e. [x]Harbour was not preprocessing code like:
    #xcommand CMD <x> [IN [GET] [PUT]] => ? #<x>
    CMD sth IN PUT GET

New PP fixed all know by me problems and AFAIK is 100% Clipper compatible
in all tests I created with some minor differences in spaces I hacked for
compatibility with FLEX and some small others intentionally introduced by
me which can be disabled using HB_C52_STRICT macro.
The side effect is that the fixes are exploited some Clipper incompatible
code.

best regards,
Przemek
From druzus at priv.onet.pl  Fri Nov 24 13:10:26 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Fri Nov 24 13:11:10 2006
Subject: [Harbour] ChangeLog 2006-11-24 19:10 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <20061124181026.GA27608@localhost.localdomain>

2006-11-24 19:10 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/config/bsd/gcc.cf
  * harbour/config/darwin/gcc.cf
  * harbour/config/dos/djgpp.cf
  * harbour/config/dos/owatcom.cf
  * harbour/config/hpux/gcc.cf
  * harbour/config/linux/gcc.cf
  * harbour/config/linux/owatcom.cf
  * harbour/config/os2/gcc.cf
  * harbour/config/sunos/gcc.cf
  * harbour/config/w32/bcc32.cf
  * harbour/config/w32/gcc.cf
  * harbour/config/w32/mingw32.cf
  * harbour/include/hbcomp.h
  * harbour/include/hbcompdf.h
  * harbour/include/hberrors.h
  * harbour/include/hbexpra.c
  * harbour/include/hbexprb.c
  * harbour/include/hbver.h
  * harbour/source/common/hbstr.c
  * harbour/source/common/hbver.c
  * harbour/source/compiler/Makefile
  * harbour/source/compiler/cmdcheck.c
  * harbour/source/compiler/complex.c
  * harbour/source/compiler/gencli.c
  * harbour/source/compiler/genjava.c
  * harbour/source/compiler/genobj32.c
  * harbour/source/compiler/harbour.c
  - harbour/source/compiler/harbour.simple
  - harbour/source/compiler/harbour.slx
  - harbour/source/compiler/harbour.sly
  * harbour/source/compiler/harbour.y
  * harbour/source/compiler/hbgenerr.c
  - harbour/source/compiler/hbslex.c
  - harbour/source/compiler/hbstrong.c
  * harbour/source/compiler/hbusage.c
  - harbour/source/compiler/simplex.c
  * harbour/source/macro/Makefile
  - harbour/source/macro/macro.slx
  - harbour/source/macro/macroslx.c
  * harbour/source/pp/ppcore.c
  * harbour/utils/hbpp/hbppcomp.c
    - removed SIMPLEX references
    ! fixed memory leak in request _GET_
    * use hb_compIdentifiersNew() in INLINE and AUTOOPEN structures
      members
    * eliminated all internal exit() calls. Now hb_compGenError() with
      fatal errors does not interrupt application but only sets
         HB_COMP_PARAM->fExit = TRUE;
      What should cause silent clean application close.
      Please keep it in mind making future modifications and do not
      introduce and exit() function call.
    + added support for \x<hex> and \<oct> quoting in extended strings
      (just like in C). Warning !!!. Embedded 0 bytes are supported by
      PP, lexer and expression optimizer but not by bison. To make them
      working it will be necessary to change Literal terminal symbol
      holder and add length field in bison rules and also change the hash
      table used to hold identifiers, literals and macros to store and use
      real string length. If someone will try to use strings with embedded
      0 now then they will be cut but nothing worser should happen.

best regards,
Przemek
From druzus at priv.onet.pl  Fri Nov 24 13:13:05 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Fri Nov 24 13:13:49 2006
Subject: [Harbour] ChangeLog 2006-11-24 07:50 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <200611240846.23361.philb@philb.us>
References: <20061124071130.GA18215@localhost.localdomain>
	<200611240846.23361.philb@philb.us>
Message-ID: <20061124181305.GB27608@localhost.localdomain>

On Fri, 24 Nov 2006, Phil Barnett wrote:
> > What was the final agreement about removing simplex and some related
> > files?
> We decided a long time ago to remove support.

Sorry but nothing has been changed in CVS so I thought that we haven't
reached group consensus. I've just removed it.

best regards,
Przemek
From druzus at priv.onet.pl  Fri Nov 24 14:50:25 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Fri Nov 24 14:51:10 2006
Subject: [Harbour] Compiler speed
In-Reply-To: <024601c70d82$b0a01820$0100a8c0@emag>
References: <024601c70d82$b0a01820$0100a8c0@emag>
Message-ID: <20061124195025.GA28514@localhost.localdomain>

On Tue, 21 Nov 2006, Enrico Maria Giordano wrote:
> >From my tests I see that xHarbour compile speed is greater than Harbour 
> >one 
> (as an example: 7 sec vs. 14 sec).
> Why?

Do you have any code example?
I do not think that such results

Probably you built Harbour and xHarbour with default switches.
In Harbour memory statistic is always enabled by default and
you have to set C_USR=HB_FM_STATISTICS_OFF to disable it.
In xHarbour memory statistinc is disabled by default and have
to be explicitly enabled.
Runing application with
    ./<prog> //info
should display on console memory statistic module state (MemStat:???)
Also used C compiler switches will effect the speed. I do not know
if you used the same switches for both builds.
If you compile xHarbour and Harbour using the same conditions then
later application compiler with Harbour compiler are from 20% to 30%
faster then the xHarbour ones (of course if you do not test the speed
of some very slow C function which will consume 90% of CPU time and is
exactly the same in both projects. In such case the HVM speed difference
can be seen only in the rest 10% so total difference will be much smaller.
I'm attaching speedtst output I generated yesterday. The same code was
compiled by current xHarbour CVS version, current Harbour CVS version and
last Harbour stable release. All build and tests done on the same machine
with exactly the same compiler switches. -gc3 output was used.

best regards,
Przemek




11/23/06 19:08:28 xHarbour build 0.99.61 Intl. (SimpLex), Linux 2.6.15 i686 
ARR_LEN =         16 
N_LOOPS =    1000000 
empty loops overhead =          0.10 
CPU usage -> secondsCPU() 
 
c:=L_C ->                                             0.10 
n:=L_N ->                                             0.08 
d:=L_D ->                                             0.10 
c:=M_C ->                                             0.10 
n:=M_N ->                                             0.10 
d:=M_D ->                                             0.10 
(sh) c:=F_C ->                                        0.51 
(sh) n:=F_N ->                                        0.35 
(sh) d:=F_D ->                                        0.16 
(ex) c:=F_C ->                                        0.53 
(ex) n:=F_N ->                                        0.34 
(ex) d:=F_D ->                                        0.17 
n:=o:GenCode ->                                       0.35 
n:=o[8] ->                                            0.15 
round(i/1000,2) ->                                    0.41 
str(i/1000) ->                                        1.21 
val(a3[i%ARR_LEN+1]) ->                               0.68 
dtos(j+i%10000-5000) ->                               0.66 
eval({||i%ARR_LEN}) ->                                0.58 
eval({|x|x%ARR_LEN}) ->                               0.63 
eval({|x|f1(x)}) ->                                   0.80 
&('f1('+str(i)+')') ->                                7.50 
eval([&('{|x|f1(x)}')]) ->                            0.74 
j := valtype(a)+valtype(i) ->                         1.03 
j := str(i%100,2) $ a2[i%ARR_LEN+1] ->                1.61 
j := val(a2[i%ARR_LEN+1]) ->                          0.76 
j := a2[i%ARR_LEN+1] == s ->                          0.54 
j := a2[i%ARR_LEN+1] = s ->                           0.54 
j := a2[i%ARR_LEN+1] >= s ->                          0.56 
j := a2[i%ARR_LEN+1] < s ->                           0.56 
aadd(aa,{i,j,s,a,a2,t,bc}) ->                         1.71 
f0() ->                                               0.22 
f1(i) ->                                              0.32 
f2(c[8]) ->                                           0.28 
f2(c[40000]) ->                                       0.29 
f2(@c[40000]) ->                                      0.27 
f3(a,a2,c,i,j,t,bc) ->                                0.66 
f2(a2) ->                                             0.30 
s:=f4() ->                                           11.67 
s:=f5() ->                                            0.95 
ascan(a,i%ARR_LEN) ->                                 0.60 
ascan(a2,c+chr(i%64+64)) ->                           2.99 
ascan(a,{|x|x==i%ARR_LEN}) ->                         6.06 
============================================================ 
total application time:                              52.58 
total real time:                                     57.66 


11/23/06 19:09:27 Harbour Alpha build 46.2 Intl. (Flex), Linux 2.6.15 i686 
ARR_LEN =         16 
N_LOOPS =    1000000 
empty loops overhead =          0.06 
CPU usage -> secondsCPU() 
 
c:=L_C ->                                             0.08 
n:=L_N ->                                             0.05 
d:=L_D ->                                             0.05 
c:=M_C ->                                             0.08 
n:=M_N ->                                             0.06 
d:=M_D ->                                             0.06 
(sh) c:=F_C ->                                        0.38 
(sh) n:=F_N ->                                        0.34 
(sh) d:=F_D ->                                        0.14 
(ex) c:=F_C ->                                        0.39 
(ex) n:=F_N ->                                        0.33 
(ex) d:=F_D ->                                        0.16 
n:=o:GenCode ->                                       0.28 
n:=o[8] ->                                            0.12 
round(i/1000,2) ->                                    0.29 
str(i/1000) ->                                        0.91 
val(a3[i%ARR_LEN+1]) ->                               0.57 
dtos(j+i%10000-5000) ->                               0.69 
eval({||i%ARR_LEN}) ->                                0.42 
eval({|x|x%ARR_LEN}) ->                               0.45 
eval({|x|f1(x)}) ->                                   0.60 
&('f1('+str(i)+')') ->                                6.77 
eval([&('{|x|f1(x)}')]) ->                            0.60 
j := valtype(a)+valtype(i) ->                         0.71 
j := str(i%100,2) $ a2[i%ARR_LEN+1] ->                1.25 
j := val(a2[i%ARR_LEN+1]) ->                          0.68 
j := a2[i%ARR_LEN+1] == s ->                          0.40 
j := a2[i%ARR_LEN+1] = s ->                           0.41 
j := a2[i%ARR_LEN+1] >= s ->                          0.41 
j := a2[i%ARR_LEN+1] < s ->                           0.41 
aadd(aa,{i,j,s,a,a2,t,bc}) ->                         1.51 
f0() ->                                               0.16 
f1(i) ->                                              0.26 
f2(c[8]) ->                                           0.19 
f2(c[40000]) ->                                       0.19 
f2(@c[40000]) ->                                      0.16 
f3(a,a2,c,i,j,t,bc) ->                                0.51 
f2(a2) ->                                             0.19 
s:=f4() ->                                            9.61 
s:=f5() ->                                            0.58 
ascan(a,i%ARR_LEN) ->                                 0.50 
ascan(a2,c+chr(i%64+64)) ->                           1.67 
ascan(a,{|x|x==i%ARR_LEN}) ->                         4.50 
============================================================ 
total application time:                              40.70 
total real time:                                     41.33 


11/23/06 19:10:10 Harbour Alpha build 46.1 Intl. (Flex), Linux 2.6.15 i686 
ARR_LEN =         16 
N_LOOPS =    1000000 
empty loops overhead =          0.10 
CPU usage -> secondsCPU() 
 
c:=L_C ->                                             0.09 
n:=L_N ->                                             0.07 
d:=L_D ->                                             0.07 
c:=M_C ->                                             0.09 
n:=M_N ->                                             0.08 
d:=M_D ->                                             0.08 
(sh) c:=F_C ->                                        0.48 
(sh) n:=F_N ->                                        0.31 
(sh) d:=F_D ->                                        0.16 
(ex) c:=F_C ->                                        0.48 
(ex) n:=F_N ->                                        0.30 
(ex) d:=F_D ->                                        0.16 
n:=o:GenCode ->                                       0.29 
n:=o[8] ->                                            0.42 
round(i/1000,2) ->                                    0.35 
str(i/1000) ->                                        1.03 
val(a3[i%ARR_LEN+1]) ->                               0.61 
dtos(j+i%10000-5000) ->                               0.87 
eval({||i%ARR_LEN}) ->                                0.50 
eval({|x|x%ARR_LEN}) ->                               0.54 
eval({|x|f1(x)}) ->                                   0.68 
&('f1('+str(i)+')') ->                                8.26 
eval([&('{|x|f1(x)}')]) ->                            0.69 
j := valtype(a)+valtype(i) ->                         0.88 
j := str(i%100,2) $ a2[i%ARR_LEN+1] ->                1.47 
j := val(a2[i%ARR_LEN+1]) ->                          0.72 
j := a2[i%ARR_LEN+1] == s ->                          0.49 
j := a2[i%ARR_LEN+1] = s ->                           0.49 
j := a2[i%ARR_LEN+1] >= s ->                          0.50 
j := a2[i%ARR_LEN+1] < s ->                           0.49 
aadd(aa,{i,j,s,a,a2,t,bc}) ->                         1.69 
f0() ->                                               0.19 
f1(i) ->                                              0.28 
f2(c[8]) ->                                           0.24 
f2(c[40000]) ->                                       0.24 
f2(@c[40000]) ->                                      0.21 
f3(a,a2,c,i,j,t,bc) ->                                0.52 
f2(a2) ->                                             0.24 
s:=f4() ->                                           11.66 
s:=f5() ->                                            0.77 
ascan(a,i%ARR_LEN) ->                                 0.58 
ascan(a2,c+chr(i%64+64)) ->                           2.68 
ascan(a,{|x|x==i%ARR_LEN}) ->                         5.48 
============================================================ 
total application time:                              50.73 
total real time:                                     54.07 



And creted a while ago with -gc0

11/24/06 20:43:51 xHarbour build 0.99.61 Intl. (SimpLex), Linux 2.6.15 i686 
ARR_LEN =         16 
N_LOOPS =    1000000 
empty loops overhead =          0.19 
CPU usage -> secondsCPU() 
 
c:=L_C ->                                             0.12 
n:=L_N ->                                             0.11 
d:=L_D ->                                             0.10 
c:=M_C ->                                             0.14 
n:=M_N ->                                             0.12 
d:=M_D ->                                             0.12 
(sh) c:=F_C ->                                        0.65 
(sh) n:=F_N ->                                        0.32 
(sh) d:=F_D ->                                        0.18 
(ex) c:=F_C ->                                        0.59 
(ex) n:=F_N ->                                        0.33 
(ex) d:=F_D ->                                        0.18 
n:=o:GenCode ->                                       0.32 
n:=o[8] ->                                            0.25 
round(i/1000,2) ->                                    0.51 
str(i/1000) ->                                        1.31 
val(a3[i%ARR_LEN+1]) ->                               0.81 
dtos(j+i%10000-5000) ->                               0.73 
eval({||i%ARR_LEN}) ->                                0.62 
eval({|x|x%ARR_LEN}) ->                               0.67 
eval({|x|f1(x)}) ->                                   0.86 
&('f1('+str(i)+')') ->                                7.55 
eval([&('{|x|f1(x)}')]) ->                            0.86 
j := valtype(a)+valtype(i) ->                         1.19 
j := str(i%100,2) $ a2[i%ARR_LEN+1] ->                1.87 
j := val(a2[i%ARR_LEN+1]) ->                          0.94 
j := a2[i%ARR_LEN+1] == s ->                          0.71 
j := a2[i%ARR_LEN+1] = s ->                           0.71 
j := a2[i%ARR_LEN+1] >= s ->                          0.72 
j := a2[i%ARR_LEN+1] < s ->                           0.71 
aadd(aa,{i,j,s,a,a2,t,bc}) ->                         2.17 
f0() ->                                               0.34 
f1(i) ->                                              0.45 
f2(c[8]) ->                                           0.41 
f2(c[40000]) ->                                       0.40 
f2(@c[40000]) ->                                      0.37 
f3(a,a2,c,i,j,t,bc) ->                                0.85 
f2(a2) ->                                             0.43 
s:=f4() ->                                           11.84 
s:=f5() ->                                            1.10 
ascan(a,i%ARR_LEN) ->                                 0.71 
ascan(a2,c+chr(i%64+64)) ->                           3.00 
ascan(a,{|x|x==i%ARR_LEN}) ->                         6.16 
============================================================ 
total application time:                              60.71 
total real time:                                     60.71 


11/24/06 20:44:53 Harbour Alpha build 46.2 Intl., Linux 2.6.15 i686 
ARR_LEN =         16 
N_LOOPS =    1000000 
empty loops overhead =          0.16 
CPU usage -> secondsCPU() 
 
c:=L_C ->                                             0.10 
n:=L_N ->                                             0.08 
d:=L_D ->                                             0.08 
c:=M_C ->                                             0.11 
n:=M_N ->                                             0.09 
d:=M_D ->                                             0.08 
(sh) c:=F_C ->                                        0.42 
(sh) n:=F_N ->                                        0.30 
(sh) d:=F_D ->                                        0.18 
(ex) c:=F_C ->                                        0.42 
(ex) n:=F_N ->                                        0.30 
(ex) d:=F_D ->                                        0.18 
n:=o:GenCode ->                                       0.32 
n:=o[8] ->                                            0.20 
round(i/1000,2) ->                                    0.45 
str(i/1000) ->                                        1.07 
val(a3[i%ARR_LEN+1]) ->                               0.75 
dtos(j+i%10000-5000) ->                               0.94 
eval({||i%ARR_LEN}) ->                                0.50 
eval({|x|x%ARR_LEN}) ->                               0.52 
eval({|x|f1(x)}) ->                                   0.76 
&('f1('+str(i)+')') ->                                7.31 
eval([&('{|x|f1(x)}')]) ->                            0.77 
j := valtype(a)+valtype(i) ->                         0.90 
j := str(i%100,2) $ a2[i%ARR_LEN+1] ->                1.57 
j := val(a2[i%ARR_LEN+1]) ->                          0.86 
j := a2[i%ARR_LEN+1] == s ->                          0.61 
j := a2[i%ARR_LEN+1] = s ->                           0.63 
j := a2[i%ARR_LEN+1] >= s ->                          0.61 
j := a2[i%ARR_LEN+1] < s ->                           0.61 
aadd(aa,{i,j,s,a,a2,t,bc}) ->                         1.90 
f0() ->                                               0.27 
f1(i) ->                                              0.44 
f2(c[8]) ->                                           0.33 
f2(c[40000]) ->                                       0.33 
f2(@c[40000]) ->                                      0.32 
f3(a,a2,c,i,j,t,bc) ->                                0.72 
f2(a2) ->                                             0.34 
s:=f4() ->                                           11.43 
s:=f5() ->                                            0.74 
ascan(a,i%ARR_LEN) ->                                 0.60 
ascan(a2,c+chr(i%64+64)) ->                           1.89 
ascan(a,{|x|x==i%ARR_LEN}) ->                         5.07 
============================================================ 
total application time:                              52.98 
total real time:                                     52.99 


11/24/06 20:45:47 Harbour Alpha build 46.1 Intl. (Flex), Linux 2.6.15 i686 
ARR_LEN =         16 
N_LOOPS =    1000000 
empty loops overhead =          0.19 
CPU usage -> secondsCPU() 
 
c:=L_C ->                                             0.11 
n:=L_N ->                                             0.09 
d:=L_D ->                                             0.09 
c:=M_C ->                                             0.12 
n:=M_N ->                                             0.10 
d:=M_D ->                                             0.10 
(sh) c:=F_C ->                                        0.59 
(sh) n:=F_N ->                                        0.37 
(sh) d:=F_D ->                                        0.18 
(ex) c:=F_C ->                                        0.58 
(ex) n:=F_N ->                                        0.37 
(ex) d:=F_D ->                                        0.18 
n:=o:GenCode ->                                       0.34 
n:=o[8] ->                                            0.48 
round(i/1000,2) ->                                    0.44 
str(i/1000) ->                                        1.22 
val(a3[i%ARR_LEN+1]) ->                               0.76 
dtos(j+i%10000-5000) ->                               1.13 
eval({||i%ARR_LEN}) ->                                0.47 
eval({|x|x%ARR_LEN}) ->                               0.51 
eval({|x|f1(x)}) ->                                   0.77 
&('f1('+str(i)+')') ->                                8.36 
eval([&('{|x|f1(x)}')]) ->                            0.79 
j := valtype(a)+valtype(i) ->                         1.03 
j := str(i%100,2) $ a2[i%ARR_LEN+1] ->                1.70 
j := val(a2[i%ARR_LEN+1]) ->                          0.86 
j := a2[i%ARR_LEN+1] == s ->                          0.66 
j := a2[i%ARR_LEN+1] = s ->                           0.67 
j := a2[i%ARR_LEN+1] >= s ->                          0.67 
j := a2[i%ARR_LEN+1] < s ->                           0.67 
aadd(aa,{i,j,s,a,a2,t,bc}) ->                         1.97 
f0() ->                                               0.30 
f1(i) ->                                              0.42 
f2(c[8]) ->                                           0.32 
f2(c[40000]) ->                                       0.34 
f2(@c[40000]) ->                                      0.31 
f3(a,a2,c,i,j,t,bc) ->                                0.67 
f2(a2) ->                                             0.33 
s:=f4() ->                                           11.69 
s:=f5() ->                                            0.97 
ascan(a,i%ARR_LEN) ->                                 0.69 
ascan(a2,c+chr(i%64+64)) ->                           3.19 
ascan(a,{|x|x==i%ARR_LEN}) ->                         5.06 
============================================================ 
total application time:                              58.84 
total real time:                                     58.85 

From druzus at priv.onet.pl  Fri Nov 24 17:40:03 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Fri Nov 24 17:40:48 2006
Subject: [Harbour] ChangeLog 2006-11-24 23:40 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <20061124224003.GA29534@localhost.localdomain>

2006-11-24 23:40 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/common/hbstr.c
    ! fixed final string size calculation in extended strings

best regards,
Przemek
From dbtopas at dbtopas.lt  Fri Nov 24 19:54:37 2006
From: dbtopas at dbtopas.lt (Mindaugas Kavaliauskas)
Date: Fri Nov 24 19:54:39 2006
Subject: [Harbour] Bison
Message-ID: <4567944D.5050706@dbtopas.lt>

Hi,


harbour.y:
> /* NOTE: direct using of hb_comp_data is not MT safe but
>    the version of bison (1.875c) I'm using now does not
>    support %parse-param for destructors. I can create a
>    work around for it but documentation says that %destructor
>    should respect pure parser parameters so probably it will
>    be (already is?) fixed in next releases do now I'm leaving 
>    it as is. [druzus]
>  */
> %destructor { 
>                hb_compExprDelete( $$, hb_comp_data );
>             }



I've upgraded bison to version 2.1, since the old one could not
compile new code. But yydestructor definition still is:
static void yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)

A possible workaround is storing context data inside a allocated memory
structure:
        hb_compExprDelete( $$, ( HB_COMP_TYPE ) ( $$->context ) );


#if !defined( HB_MACRO_SUPPORT )

...

#define HB_COMP_PARAM         pComp
#define HB_COMP_TYPE          HB_COMP_PTR

#else

#define HB_COMP_PARAM         pMacro
#define HB_COMP_TYPE          HB_MACRO_PTR

#endif /* !HB_MACRO_SUPPORT  */

#define HB_COMP_DECL          HB_COMP_TYPE HB_COMP_PARAM



BTW, one more typo. macro.y first line:
   %pure_parser
instead of
   %pure-parser
but bison accepts both of them!!! :)


Best regards,
Mindaugas

From dbtopas at dbtopas.lt  Fri Nov 24 22:27:54 2006
From: dbtopas at dbtopas.lt (Mindaugas Kavaliauskas)
Date: Fri Nov 24 22:27:54 2006
Subject: [Harbour] ChangeLog 2006-11-24 19:10 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <20061124181026.GA27608@localhost.localdomain>
References: <20061124181026.GA27608@localhost.localdomain>
Message-ID: <4567B83A.6010506@dbtopas.lt>

Hi again,


>     + added support for \x<hex> and \<oct> quoting in extended strings
>       (just like in C). Warning !!!. Embedded 0 bytes are supported by
>       PP, lexer and expression optimizer but not by bison. To make them
>       working it will be necessary to change Literal terminal symbol
>       holder and add length field in bison rules and also change the hash
>       table used to hold identifiers, literals and macros to store and use
>       real string length. If someone will try to use strings with embedded
>       0 now then they will be cut but nothing worser should happen.

I'm not sure whether the things below is not nonsence, because today 
(ok, tonight :) ) is the third day I've started to read docs about lex, 
yacc, and looked into compiler source code.

I guess we do not need change identifiers holder, because identifiers do 
not include \x00. So, the hash table code does not to be changed. We 
need to change only litterals holder.

Here is the changes I imagine has to be done:

complex.c:
------------------------------------------------------------------------------
       case HB_PP_TOKEN_STRING:
          pLex->iState = LITERAL;
          pLex->lasttok = yylval_ptr->string =
                               hb_comp_tokenIdentifer( HB_COMP_PARAM, 
pToken );
          return LITERAL;
----
       case HB_PP_TOKEN_STRING:
          pLex->iState = LITERAL;

          // do we have function like hb_memdup( void* ptr, ULONG len ) 
or hb_xgrabptr( ULONG len, void* ptr ) ?
          yylval_ptr->asString.ulLen = (ULONG) pToken->len;
          yylval_ptr->asString.szValue = hb_xgrab( 
yylval_ptr->asString.ulLen + 1 );
          memcpy( yylval_ptr->asString.szValue, pToken->value );

          pLex->lasttok = yylval_ptr->asString.szValue;
          return LITERAL;

------------------------------------------------------------------------------
             case WITH:
             case WHILE:
                pLex->iState = LITERAL;
                hb_pp_tokenToString( pLex->pPP, pToken );
                pLex->lasttok = yylval_ptr->string =
                               hb_comp_tokenIdentifer( HB_COMP_PARAM, 
pToken );
                return LITERAL;
----
             case WITH:
             case WHILE:
                pLex->iState = LITERAL;
                hb_pp_tokenToString( pLex->pPP, pToken );

                yylval_ptr->asString.ulLen = (ULONG) pToken->len;
                yylval_ptr->asString.szValue = hb_xgrab( 
yylval_ptr->asString.ulLen + 1 );
                memcpy( yylval_ptr->asString.szValue, pToken->value );

                pLex->lasttok = yylval_ptr->asString.szValue;
                return LITERAL;




harbour.y:
------------------------------------------------------------------------------
%type <string>  IdentName IDENTIFIER LITERAL MACROVAR MACROTEXT CompTimeStr
----
%type <valString> LITERAL
%type <string>  IdentName IDENTIFIER MACROVAR MACROTEXT CompTimeStr


------------------------------------------------------------------------------
LiteralValue : LITERAL        {
                                  ULONG len = strlen( $1 );
                                  $$ = hb_compExprNewString( $1, len, 
HB_COMP_PARAM );
                               }
              ;
----
LiteralValue : LITERAL        {
                                  $$ = hb_compExprNewString( $1.szValue, 
$1.ulLen, HB_COMP_PARAM );
                               }
              ;

------------------------------------------------------------------------------
CompTimeStr: LITERAL { hb_compAutoOpenAdd( HB_COMP_PARAM, $1 ); }
            | LITERAL '+' LITERAL { char szFileName[ _POSIX_PATH_MAX + 1 
]; hb_strncat( hb_strncpy( szFileName, $1, _POSIX_PATH_MAX ), $3, 
_POSIX_PATH_MAX ); hb_compAutoOpenAdd( HB_COMP_PARAM, 
hb_compIdentifierNew( HB_COMP_PARAM, szFileName, TRUE ) ); }
            ;
----
CompTimeStr: LITERAL { hb_compAutoOpenAdd( HB_COMP_PARAM, $1.szValue ); }
            | LITERAL '+' LITERAL { char szFileName[ _POSIX_PATH_MAX + 1 
]; hb_strncat( hb_strncpy( szFileName, $1.szValue, _POSIX_PATH_MAX ), 
$3.szValue, _POSIX_PATH_MAX ); hb_compAutoOpenAdd( HB_COMP_PARAM, 
hb_compIdentifierNew( HB_COMP_PARAM, szFileName, TRUE ) ); }
            ;


------------------------------------------------------------------------------
%union                  /* special structure used by lex and yacc to 
share info */
{
    char *  string;      /* to hold a string returned by lex */
    int     iNumber;     /* to hold a temporary integer number */
    HB_LONG lNumber;     /* to hold a temporary long number */
    BOOL    bTrue;
    struct
    {
       int      iNumber;      /* to hold a number returned by lex */
       char *   szValue;
    } valInteger;
----
%union                  /* special structure used by lex and yacc to 
share info */
{
    char *  string;      /* to hold a string returned by lex */
    int     iNumber;     /* to hold a temporary integer number */
    HB_LONG lNumber;     /* to hold a temporary long number */
    BOOL    bTrue;
    struct
    {
       char *   szValue;
       ULONG    ulLen;
    } valString;
    struct
    {
       int      iNumber;      /* to hold a number returned by lex */
       char *   szValue;
    } valInteger;


------------------------------------------------------------------------------
----
%destructor { hb_xfree( $$.szValue ); } LITERAL




I've never used expression "blah &blah" as a macro in my life
(I use "Save &As", this makes letter "A" to be shortcut of menu item in 
WinAPI, and I need to rewrite it "Save " + "&" + "As" to avoid macro 
expansion if such macro is valid, hoping to change it to e"Save \x26As" 
after last commit).

But if we want to support e"\x00&blah" we need to do a few more changes:

- add ulLen field in asMacro struct of HB_EXPR structure

- change static HB_EXPR_FUNC( hb_compExprUseString ) and
          static HB_EXPR_FUNC( hb_compExprUseMacro )
   to respect macro text length in code:
      szDupl = hb_strupr( hb_strdup( pSelf->value.asMacro.szMacro ) );
      HB_EXPR_PCODE2( hb_compGenPushString, 
pSelf->value.asMacro.szMacro, strlen(pSelf->value.asMacro.szMacro) + 1 );

- add length parameter to function hb_compExprIsValidMacro()

- maybe(?) some minor modification in hb_compExprNewFunCall() - I do not
   understand details of this __GET implementation...

- add length parameter hb_compExprNewMacro()

- set the value of hb_compExprNewMacro() length parameter in harbour.y,
   macro.y, hbexprb.c. Total 7 places to change.


There is no need to add length parameter to other functions, because 
asMacro.szText is name of variable and can not contain \x00. And I guess 
there is no need to alter MACROVAR and MACROTEXT terminal symbol holder, 
because lexer can not generate \x00 for these terminal symbols.



Good night,
Mindaugas
From randy at palmasdev.com  Fri Nov 24 14:50:11 2006
From: randy at palmasdev.com (Randy Portnoff)
Date: Sat Nov 25 01:27:58 2006
Subject: [Harbour] -gc3
Message-ID: <5.2.0.9.0.20061124144920.02182b00@pop3.pathcom.com>

Hi all,

What is the benefit/purpose of using the new "-gc3" compiler option?

TIA.

Regards,
Randy.

From alex at belacy.belgorod.su  Sat Nov 25 01:50:33 2006
From: alex at belacy.belgorod.su (Alexander S.Kresin)
Date: Sat Nov 25 01:52:33 2006
Subject: [Harbour] Changelog 2006-11-25 09:50 UTC+0300 Alexander Kresin
Message-ID: <13656688.20061125095033@belacy.belgorod.su>

2006-11-25 09:50 UTC+0300 Alexander Kresin <alex@belacy.belgorod.su>
  * common.mak
    ! hbstrong.c is removed

  

Regards,
 Alexander
http://kresin.belgorod.su

From druzus at priv.onet.pl  Sat Nov 25 03:50:52 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Sat Nov 25 03:51:36 2006
Subject: [Harbour] Bison
In-Reply-To: <4567944D.5050706@dbtopas.lt>
References: <4567944D.5050706@dbtopas.lt>
Message-ID: <20061125085052.GA30395@localhost.localdomain>

On Sat, 25 Nov 2006, Mindaugas Kavaliauskas wrote:
> harbour.y:
> >/* NOTE: direct using of hb_comp_data is not MT safe but
> >   the version of bison (1.875c) I'm using now does not
> >   support %parse-param for destructors. I can create a
> >   work around for it but documentation says that %destructor
> >   should respect pure parser parameters so probably it will
> >   be (already is?) fixed in next releases do now I'm leaving 
> >   it as is. [druzus]
> > */
> >%destructor { 
> >               hb_compExprDelete( $$, hb_comp_data );
> >            }
> I've upgraded bison to version 2.1, since the old one could not
> compile new code. But yydestructor definition still is:
> static void yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)

In bison 2.3 it's fixed and %parse-param defined parameters are passed
to destructors.

> A possible workaround is storing context data inside a allocated memory
> structure:
>        hb_compExprDelete( $$, ( HB_COMP_TYPE ) ( $$->context ) );

Yes we can change YYSTYPE definition and set context in lexer but
mych easier is to fix yacc.c file - bison uses this file to dynamically
generate parsers.

> BTW, one more typo. macro.y first line:
>   %pure_parser
> instead of
>   %pure-parser
> but bison accepts both of them!!! :)

And both are documented.

best regards,
Przemek
From druzus at priv.onet.pl  Sat Nov 25 05:29:12 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Sat Nov 25 05:29:57 2006
Subject: [Harbour] ChangeLog 2006-11-24 19:10 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <4567B83A.6010506@dbtopas.lt>
References: <20061124181026.GA27608@localhost.localdomain>
	<4567B83A.6010506@dbtopas.lt>
Message-ID: <20061125102912.GB30395@localhost.localdomain>

On Sat, 25 Nov 2006, Mindaugas Kavaliauskas wrote:
> I guess we do not need change identifiers holder, because identifiers do 
> not include \x00. So, the hash table code does not to be changed. We 
> need to change only litterals holder.

No. We are storing in hash table all expressions which
have string representation. Also macros and strings.
Of course we can exaclude strings from hash table and
allocate new memory for them. But we will also have to
change hb_compExprNewString() to set
    pExpr->value.asString.dealloc = TRUE;

> I've never used expression "blah &blah" as a macro in my life
> (I use "Save &As", this makes letter "A" to be shortcut of menu item in 
> WinAPI, and I need to rewrite it "Save " + "&" + "As" to avoid macro 
> expansion if such macro is valid,

This will not help in xHarbour. It always makes macro expansion becase
expression optimizer does not have protection against creating single
string token which will be valid macro.

> hoping to change it to e"Save \x26As" after last commit).

It will not help now. Probably you will need new compiler switch, f.e.
-kM to disable macro expansion for literal strings. It can be quite
easy done.

> But if we want to support e"\x00&blah" we need to do a few more changes:
> - add ulLen field in asMacro struct of HB_EXPR structure
> - change static HB_EXPR_FUNC( hb_compExprUseString ) and
>          static HB_EXPR_FUNC( hb_compExprUseMacro )
>   to respect macro text length in code:
>      szDupl = hb_strupr( hb_strdup( pSelf->value.asMacro.szMacro ) );
>      HB_EXPR_PCODE2( hb_compGenPushString, 
> pSelf->value.asMacro.szMacro, strlen(pSelf->value.asMacro.szMacro) + 1 );
> - add length parameter to function hb_compExprIsValidMacro()
> - maybe(?) some minor modification in hb_compExprNewFunCall() - I do not
>   understand details of this __GET implementation...
> - add length parameter hb_compExprNewMacro()
> - set the value of hb_compExprNewMacro() length parameter in harbour.y,
>   macro.y, hbexprb.c. Total 7 places to change.
> There is no need to add length parameter to other functions, because 
> asMacro.szText is name of variable and can not contain \x00. And I guess 
> there is no need to alter MACROVAR and MACROTEXT terminal symbol holder, 
> because lexer can not generate \x00 for these terminal symbols.

Yes, though I'm not sure these are all places - I haven't check it yet.
Probably we will find some others, f.e. in function hb_compExprReducePlus()
there is code which check if reduction can be done using strchr().
Anyhow it will be good to clean all such places and always pass string
length because it's source of some small incompatibilities. The internal
ASCII NUL character can appear also in expression optimization process.
F.e. in this code neither Harbour nor xHarbour is Clipper compatible:

    private V:="<VAL>"
    ? "["+chr(0)+"]&V"

bescause some code does not expect that strings with internal 0 character
can appear. This should be fixed.

best regards,
Przemek
From dbtopas at dbtopas.lt  Sat Nov 25 11:43:29 2006
From: dbtopas at dbtopas.lt (Mindaugas Kavaliauskas)
Date: Sat Nov 25 11:43:33 2006
Subject: [Harbour] ChangeLog 2006-11-24 19:10 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <20061125102912.GB30395@localhost.localdomain>
References: <20061124181026.GA27608@localhost.localdomain>	<4567B83A.6010506@dbtopas.lt>
	<20061125102912.GB30395@localhost.localdomain>
Message-ID: <456872B1.4040804@dbtopas.lt>

Przemyslaw Czerpak wrote:
> No. We are storing in hash table all expressions which
> have string representation. Also macros and strings.
> Of course we can exaclude strings from hash table and
> allocate new memory for them. But we will also have to
> change hb_compExprNewString() to set
>     pExpr->value.asString.dealloc = TRUE;

Perhaps, I haven't understood the idea of this hash... We do not use it 
as lookup table. So, we use this hash to avoid duplicated allocation of 
the same string (i.e., space for variable "nI" name will be allocated 
only once, even if we use it in .prg ource hundreds of times), and for 
garbage collection (hb_compIdentifierClose() releases memory occupied by 
identifiers names). Hash can also be used to compare strings pointers 
instead of strcmp(). But strings do not need to be compared and string 
memory can be released in yydestructor().


>>I've never used expression "blah &blah" as a macro in my life
>>(I use "Save &As", this makes letter "A" to be shortcut of menu item in 
>>WinAPI, and I need to rewrite it "Save " + "&" + "As" to avoid macro 
>>expansion if such macro is valid,
> 
> This will not help in xHarbour. It always makes macro expansion becase
> expression optimizer does not have protection against creating single
> string token which will be valid macro.

I remember it helped long time ago. Perhaps it was my first native Win 
app in Clipper. And Clipper don't use expression optimizer.


>>hoping to change it to e"Save \x26As" after last commit).
> 
> It will not help now. Probably you will need new compiler switch, f.e.
> -kM to disable macro expansion for literal strings. It can be quite
> easy done.

I use MEMVARs very seldom, usually as parameters or variables for some 
"plug-in" (code which can be entered by customer and is interpreted 
using macro). That's why my menu still work OK. But such switch would be 
very useful to make my code valid.


I general it's very strange what it is not possible to write valid code for
   ? "Plug&play"
in [x]Harbour. Of cause, we can try do some workaround. "Plug" + "&" + 
"play", this does not help anymore. Until compiler is not clever enough, 
we can use:
   ? "Plug" + Amp() + "play"

STATIC FUNC Amp()
RETURN "&"

But nobody knows if we are not going to add function inlining in the future.

In other languages which uses macro inside strings, there is some way to 
avoid macroexpansion. Ex., in PHP, only "..." strings are macroexpanded,
but '...' are not.
I think macroexpansion in Clipper came from DBase, where variables does 
not need to be defined and all of them are memvars. But if we use more 
modern style of programming with declared locals, I would prefere:
   ? "Plug" + &("play")
code if we really want to do macroexpansion. Of cause backward 
compatibility is nessesary, but compiler -kM switch is the switch most 
of us would expect by default.

I've never tried to declare
   PUBLIC nbsp := "", lt := "", gt := "", amp := ""
before using any [x]Harbour written html library, but you can imagine 
how it will work.



Best regards,
Mindaugas
From druzus at priv.onet.pl  Sat Nov 25 13:33:18 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Sat Nov 25 13:34:05 2006
Subject: [Harbour] ChangeLog 2006-11-25 19:30 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <20061125183317.GA9498@localhost.localdomain>

2006-11-25 19:30 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbexpra.c
  * harbour/include/hbexprb.c
  * harbour/include/hbexprc.c
  * harbour/include/hbexprop.h
  * harbour/source/common/expropt1.c
  * harbour/source/common/expropt2.c
  * harbour/source/compiler/complex.c
  * harbour/source/compiler/harbour.c
  * harbour/source/compiler/harbour.y
  * harbour/source/macro/macro.y
    + added support for strings with with ASCII NUL character
      Strings with ASCII NUL character are not stored with hash table
      but dynamically allocated/deallocated
    ! fixed compilation of strings with ASCII NUL character which
      can appear in escaped strings e"..." or after compiler chr(0)
      optimization
    % removed some not longer necessary memory allocations

  * harbour/source/vm/macro.c
    ! fixed GPF caused by HB_MACRO structure double freeing
    - removed some code which was added as workaround for the old
      behavior of HVM QUIT and false FM stat memory leak reports.
      It's not longer necessary in current HVM.

  * harbour/source/common/hbstr.c
    ! fixed final string size calculation in extended strings

  * harbour/source/compiler/gencli.c
    * cleaned BCC warning

best regards,
Przemek
From druzus at priv.onet.pl  Sat Nov 25 14:00:41 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Sat Nov 25 14:01:25 2006
Subject: [Harbour] ChangeLog 2006-11-25 20:00 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <20061125190041.GA23919@localhost.localdomain>

2006-11-25 20:00 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbexprb.c
    ! fixed parenthesis in expression

  * harbour/source/pp/ppcore.c
    ! fixed code block tokens stringify

best regards,
Przemek
From e.m.giordano at emagsoftware.it  Sat Nov 25 14:24:06 2006
From: e.m.giordano at emagsoftware.it (Enrico Maria Giordano)
Date: Sat Nov 25 14:24:42 2006
Subject: [Harbour] Latest CVS: error in Bison
Message-ID: <010a01c710c7$4629cf70$0100a8c0@emag>

Dear friends, I can't build Harbour anymore. The build process bombs out with 
a GPF in Bison. I'm currently using Bison 1.875. Do I have to upgrade it?

Please let me know.

EMG

--
EMAG Software Homepage:     http://www.emagsoftware.it
The EMG's ZX-Spectrum Page: http://www.emagsoftware.it/spectrum
The Best of Spectrum Games: http://www.emagsoftware.it/tbosg
The EMG Music page:         http://www.emagsoftware.it/emgmusic 

From elart at elart.it  Sat Nov 25 15:15:43 2006
From: elart at elart.it (elart)
Date: Sat Nov 25 15:10:54 2006
Subject: [Harbour] Latest CVS: error in Bison
In-Reply-To: <010a01c710c7$4629cf70$0100a8c0@emag>
References: <010a01c710c7$4629cf70$0100a8c0@emag>
Message-ID: <4568A46F.9060808@elart.it>

Enrico Maria Giordano wrote:
> Dear friends, I can't build Harbour anymore. The build process bombs out 
> with a GPF in Bison. I'm currently using Bison 1.875. Do I have to 
> upgrade it?
> 
> Please let me know.
> 
> EMG
> 
With Bison 1.875 i get GPF

I have upgraded my Bison copy to Bison 2.1 from:

http://www.gnu.org/software/bison/bison.html
http://prdownloads.sourceforge.net/gnuwin32/bison-2.1.exe?download


I cannot build and i get this error:
-----------------------------------------------------------
Borland C++ 5.5.1 for Win32 Copyright (c) 1993, 2000 Borland
Turbo Incremental Link 5.00 Copyright (c) 1997, 2000 Borland

utils\hbpptest\pretest.prg(371) Error E0002  Unterminated string: '"'

utils\hbpptest\pretest.prg(372) Warning W0001  Ambiguous reference: 'F1'

1 error

No code generated

** error 1 ** deleting obj\b32\pretest.obj
--------------------------------------------------------------

on Fedora Linux and Ubuntu Linux harbour build with some warnings

HTH

Elart
From druzus at priv.onet.pl  Sat Nov 25 15:20:24 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Sat Nov 25 15:21:09 2006
Subject: [Harbour] Latest CVS: error in Bison
In-Reply-To: <010a01c710c7$4629cf70$0100a8c0@emag>
References: <010a01c710c7$4629cf70$0100a8c0@emag>
Message-ID: <20061125202024.GA24466@localhost.localdomain>

On Sat, 25 Nov 2006, Enrico Maria Giordano wrote:
> Dear friends, I can't build Harbour anymore. The build process bombs out 
> with a GPF in Bison. I'm currently using Bison 1.875. Do I have to upgrade 
> it?

bison 1.875 version can be used to compile Harbour. I'm using this
version in most of my computers. Anyhow it's possible that your binaries
are wrong or bison has some bugs. I've just tested 1.875c in valgrind
and thee errors are reported. Each of them can be source of later GPF
See below. Please ask some Windows users which binaries they are using.

best reegards,
Przemek


==24692== Conditional jump or move depends on uninitialised value(s)
==24692==    at 0x80567D0: (within /usr/bin/bison)
==24692==    by 0x8056E17: (within /usr/bin/bison)
==24692==    by 0x805BBBA: (within /usr/bin/bison)
==24692==    by 0x804E3F3: (within /usr/bin/bison)
==24692==    by 0x847E32: __libc_start_main (in /lib/tls/libc-2.3.3.so)
==24692==    by 0x80492E0: (within /usr/bin/bison)
==24692== 
==24692== Conditional jump or move depends on uninitialised value(s)
==24692==    at 0x80567D4: (within /usr/bin/bison)
==24692==    by 0x8056E17: (within /usr/bin/bison)
==24692==    by 0x805BBBA: (within /usr/bin/bison)
==24692==    by 0x804E3F3: (within /usr/bin/bison)
==24692==    by 0x847E32: __libc_start_main (in /lib/tls/libc-2.3.3.so)
==24692==    by 0x80492E0: (within /usr/bin/bison)
==24692== 
==24692== Conditional jump or move depends on uninitialised value(s)
==24692==    at 0x80567D9: (within /usr/bin/bison)
==24692==    by 0x8056E17: (within /usr/bin/bison)
==24692==    by 0x805BBBA: (within /usr/bin/bison)
==24692==    by 0x804E3F3: (within /usr/bin/bison)
==24692==    by 0x847E32: __libc_start_main (in /lib/tls/libc-2.3.3.so)
==24692==    by 0x80492E0: (within /usr/bin/bison)
==24692== TRANSLATE: 0x895E70 redirected to 0x1B905380
==24692== TRANSLATE: 0x89C190 redirected to 0x1B904800
==24692== TRANSLATE: 0x89AE20 redirected to 0x1B9043DC
==24692== TRANSLATE: 0x896610 redirected to 0x1B905432
==24692== 
==24692== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 12 from 1)
From elart at elart.it  Sat Nov 25 15:37:16 2006
From: elart at elart.it (elart)
Date: Sat Nov 25 15:32:26 2006
Subject: [Harbour] Latest CVS: error in Bison
In-Reply-To: <4568A46F.9060808@elart.it>
References: <010a01c710c7$4629cf70$0100a8c0@emag> <4568A46F.9060808@elart.it>
Message-ID: <4568A97C.5090905@elart.it>

elart wrote:
> With Bison 1.875 i get GPF
> 
> I have upgraded my Bison copy to Bison 2.1 from:
> 
> http://www.gnu.org/software/bison/bison.html
> http://prdownloads.sourceforge.net/gnuwin32/bison-2.1.exe?download
> 
> 
> I cannot build and i get this error:
> -----------------------------------------------------------
> Borland C++ 5.5.1 for Win32 Copyright (c) 1993, 2000 Borland
> Turbo Incremental Link 5.00 Copyright (c) 1997, 2000 Borland
> 
> utils\hbpptest\pretest.prg(371) Error E0002  Unterminated string: '"'
> 
> utils\hbpptest\pretest.prg(372) Warning W0001  Ambiguous reference: 'F1'
> 
I have changed the utils\hbpptest\pretest.prg line 371
from:
  in := "
index on LEFT(   f1  ,  10   )      to _tst"

to

  in := "index on LEFT(   f1  ,  10   )      to _tst"

and Harbour now builds with Bison 2.1

HTH

Elart
From e.m.giordano at emagsoftware.it  Sun Nov 26 08:12:47 2006
From: e.m.giordano at emagsoftware.it (Enrico Maria Giordano)
Date: Sun Nov 26 08:13:27 2006
Subject: [Harbour] Harbour build ok using Bison 2.1
Message-ID: <005501c7115c$920c1fc0$0100a8c0@emag>

As subject, thanks to all.

EMG

--
EMAG Software Homepage:     http://www.emagsoftware.it
The EMG's ZX-Spectrum Page: http://www.emagsoftware.it/spectrum
The Best of Spectrum Games: http://www.emagsoftware.it/tbosg
The EMG Music page:         http://www.emagsoftware.it/emgmusic
From e.m.giordano at emagsoftware.it  Sun Nov 26 08:21:52 2006
From: e.m.giordano at emagsoftware.it (Enrico Maria Giordano)
Date: Sun Nov 26 08:22:27 2006
Subject: [Harbour] Compiler speed
References: <024601c70d82$b0a01820$0100a8c0@emag>
	<20061124195025.GA28514@localhost.localdomain>
Message-ID: <005801c7115d$d5de60e0$0100a8c0@emag>


-----Messaggio Originale----- 
Da: "Przemyslaw Czerpak" <druzus@priv.onet.pl>
A: "Harbour Project Main Developer List." <harbour@harbour-project.org>
Data invio: venerdi 24 novembre 2006 20.50
Oggetto: Re: [Harbour] Compiler speed


> > From my tests I see that xHarbour compile speed is greater than Harbour
> > one (as an example: 7 sec vs. 14 sec).
> > Why?
>
> Do you have any code example?

No, I'm just recompiling my apps and noticing that xHarbour is faster than 
Harbour at compile time.

> I do not think that such results
>
> Probably you built Harbour and xHarbour with default switches.
> In Harbour memory statistic is always enabled by default and
> you have to set C_USR=HB_FM_STATISTICS_OFF to disable it.

I tried using the following commands:

@ ECHO OFF
SET PATH=c:\bcc55\bin;c:\programmi\gnuwin32\bin;c:\harbour cvs\harbour\bin\b32
SET C_USR=-DHB_FM_STATISTICS_OFF
SET PRG_USR=-l
CALL make_b32 clean
CALL make_b32
CD contrib\ole
CALL build32

but it did not make any differences.

> In xHarbour memory statistinc is disabled by default and have
> to be explicitly enabled.
> Runing application with
>    ./<prog> //info

This is what I get:

Harbour Terminal: Win32 buffered console
Harbour Alpha build 46.2 Intl.
Windows XP 5.1.2600 Service Pack 2
DS avail=192232KB  OS avail=2080892KB  EMM avail=0KB  MemStat:Off

> should display on console memory statistic module state (MemStat:???)
> Also used C compiler switches will effect the speed. I do not know
> if you used the same switches for both builds.

Yes, I use the same switches in both builds.

> If you compile xHarbour and Harbour using the same conditions then
> later application compiler with Harbour compiler are from 20% to 30%
> faster then the xHarbour ones

This is not what I get. Surely I'm doing something wrong but what?

EMG

--
EMAG Software Homepage:     http://www.emagsoftware.it
The EMG's ZX-Spectrum Page: http://www.emagsoftware.it/spectrum
The Best of Spectrum Games: http://www.emagsoftware.it/tbosg
The EMG Music page:         http://www.emagsoftware.it/emgmusic 

From druzus at priv.onet.pl  Sun Nov 26 08:38:52 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Sun Nov 26 08:39:35 2006
Subject: [Harbour] Latest CVS: error in Bison
In-Reply-To: <4568A97C.5090905@elart.it>
References: <010a01c710c7$4629cf70$0100a8c0@emag> <4568A46F.9060808@elart.it>
	<4568A97C.5090905@elart.it>
Message-ID: <20061126133852.GA23588@localhost.localdomain>

On Sat, 25 Nov 2006, elart wrote:
> I have changed the utils\hbpptest\pretest.prg line 371
> from:
>  in := "
> index on LEFT(   f1  ,  10   )      to _tst"
> to
>  in := "index on LEFT(   f1  ,  10   )      to _tst"
> and Harbour now builds with Bison 2.1

In line 371 in pretest.prg file just after " character is chr(13) char.
I do not know if it was introduced intentionally or it's a typo but
seems that your CVS client translated it to new line and it was the source
of your problems so the messages from Harbour compiler were perfectly
valid. Now you fixed your local copy of pretest.prg file and you can build
Harbour but I'd like to know if you can also use 1.875 version. It should
work. Enrico reported problems inside bison and I'd like to know if they
are related to his bison binaries or sth else. I'm using this version
without any problems though it does not support terminal symbol destructors
in MT safe way. So in the future when we will create binaries with integrated
compiler and HVM+RTLs we will have to resolve this problem. There are three
possible solutions:
1. use bison 2.3 where the problem has been fixed
2. we can fix it ourself in bison quite easy. I'm attaching modified yyac.c 
   from bison 1.875 which passes user parameters to destructors.
   It's enough to replace yyac.c which comes with bison 1.875 binaries
   and generated grammar parser will pass user parameters to destructors.
3. we can hard code workaround and pass parameters to destructor using
   terminal symbol union (YYSTYPE) or compiler expression structure (HB_EXPR)
   In such case it will be possible to use unmodified 1.875 version for
   future MT builds with some small memory cost. In fact it will be the
   most easy solution for users but we are encoding in our core code
   workarounds for problems in older bison versions which are fixed in
   recent bison releases.
Please think about possible solutions and which one you will prefer.

best regards,
Przemek
-------------- next part --------------
A non-text attachment was scrubbed...
Name: yacc.c.gz
Type: application/x-gzip
Size: 10476 bytes
Desc: not available
Url : http://lists.leap-cf.org/pipermail/harbour/attachments/20061126/21b1ca0b/yacc.c-0001.gz
From niki at synel.co.il  Sun Nov 26 09:02:56 2006
From: niki at synel.co.il (Chen Kedem)
Date: Sun Nov 26 09:01:52 2006
Subject: [Harbour] Re: Latest CVS: error in Bison
Message-ID: <45699E8F.28D2@synel.co.il>

Przemek,

I'm using bison 1.875 (in my BCC32 environment), and it GPF with the
ChangeLog 2006-11-25 20:00 UTC+0100 Przemyslaw Czerpak:

source\compiler\HARBOUR.C:

** error -1073741819 ** deleting obj\b32\harboury.c

It does not help if I replace my yacc.c with the one you gave.

So, do I need to upgrade my bison now? Last year I tested bison 2.1
and it did not work with our version than (the 1.875 did). Can you
do something to make Harbour less dependent in the exact bison version?


  Chen.
**********************************************************************************************
IMPORTANT: The contents of this email and any attachments are confidential. They are intended for the 
named recipient(s) only.
If you have received this email in error, please notify the system manager or the sender immediately and do 
not disclose the contents to anyone or make copies thereof.
*** eSafe scanned this email for viruses, vandals, and malicious content. ***
**********************************************************************************************

From druzus at priv.onet.pl  Sun Nov 26 09:02:12 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Sun Nov 26 09:02:58 2006
Subject: [Harbour] Compiler speed
In-Reply-To: <005801c7115d$d5de60e0$0100a8c0@emag>
References: <024601c70d82$b0a01820$0100a8c0@emag>
	<20061124195025.GA28514@localhost.localdomain>
	<005801c7115d$d5de60e0$0100a8c0@emag>
Message-ID: <20061126140212.GB23588@localhost.localdomain>

On Sun, 26 Nov 2006, Enrico Maria Giordano wrote:
> >> From my tests I see that xHarbour compile speed is greater than Harbour
> >> one (as an example: 7 sec vs. 14 sec).
> >> Why?
> >Do you have any code example?
> No, I'm just recompiling my apps and noticing that xHarbour is faster than 
> Harbour at compile time.

Ah, you are talking about compilation speed not execution speed.
Yes, it's possible. In Harbour the compile time speed has been
quite nicely improved after last modifications and now it's
about few times faster then month ago. F.e. my source code can be
compiled about 4 times faster. But still some things can be improved
yet. F.e. new PP does not use any hash table to increase searching for
rules. In xHarbour there is hardcoded a trick which for each character
marks if it start some expression and it can effectively reduce number
of PP table scans. If you have many [x]translate/define directives and
you used to use some similar prefixes then it will cause noticeable speed
improvement in PP. In the future I'll add some set of such extensions but
it will be bound with implementing some common to compiler and preprocessor
identifier hash table used also for predefined rules so in one modification
I'll decrease the memory usage and increase the speed much better then using
first character as hash value.

> >If you compile xHarbour and Harbour using the same conditions then
> >later application compiler with Harbour compiler are from 20% to 30%
> >faster then the xHarbour ones
> This is not what I get. Surely I'm doing something wrong but what?

Are you talking now about execution speed of your program or compilation
speed?
If about your program execution then maybe you are using sth what is very
slow in Harbour. What are your results for speedtst.prg?

best regards,
Przemek
From niki at synel.co.il  Sun Nov 26 09:15:04 2006
From: niki at synel.co.il (Chen Kedem)
Date: Sun Nov 26 09:13:54 2006
Subject: [Harbour] Re: Latest CVS: error in Bison
References: <45699E8F.28D2@synel.co.il>
Message-ID: <4569A168.2CFC@synel.co.il>

Just tested with bison 2.1 and, as it said, it does compile all files

  Chen.
**********************************************************************************************
IMPORTANT: The contents of this email and any attachments are confidential. They are intended for the 
named recipient(s) only.
If you have received this email in error, please notify the system manager or the sender immediately and do 
not disclose the contents to anyone or make copies thereof.
*** eSafe scanned this email for viruses, vandals, and malicious content. ***
**********************************************************************************************

From druzus at priv.onet.pl  Sun Nov 26 09:49:15 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Sun Nov 26 09:50:01 2006
Subject: [Harbour] Re: Latest CVS: error in Bison
In-Reply-To: <45699E8F.28D2@synel.co.il>
References: <45699E8F.28D2@synel.co.il>
Message-ID: <20061126144915.GA5240@localhost.localdomain>

On Sun, 26 Nov 2006, Chen Kedem wrote:
> Przemek,
> I'm using bison 1.875 (in my BCC32 environment), and it GPF with the
> ChangeLog 2006-11-25 20:00 UTC+0100 Przemyslaw Czerpak:
> source\compiler\HARBOUR.C:
> ** error -1073741819 ** deleting obj\b32\harboury.c
> It does not help if I replace my yacc.c with the one you gave.
> So, do I need to upgrade my bison now? Last year I tested bison 2.1
> and it did not work with our version than (the 1.875 did). Can you
> do something to make Harbour less dependent in the exact bison version?

Yes by dropping bison ;-)
The problems are caused by some bugs in bison and GPF is the optimistic
effect. Much worser will be silent bison execution which will generate
broken grammar parser as final result.
The modified yacc.c does not fix any internal bison errors but only change
a little bit generated parser code.
I cannot reproduce GPF in my Linux box but as you've seen in the valgrind
log I sent at least three errors appears and each of them can cause
unexpected behavior because these are internal jumps which depends on
uninitialized memory. I can install 1.875 source code and try to find
where exactly it happens and fix it or add some workaround (if it will
be possible) in harbour.y. The question is if I should invest time in
fixing old bison version when the current one seems to work correctly.
I've just make a test with bison 2.3 and it works without any errors
executed in valgrind. Only some memory leaks are reported (see log below)
but it's unimportant for us. It also generate MT safe destructors so it's
not necessary to update yacc.c file.
If you really think I should work on old bison then I'll do that but
I'd strongly prefer to invest time in Harbour core code developing.
Anyhow one of recent modifications exploited bugs in 1.875 version
so it should be quite easy to locate when exactly the problem appeared
by checking few recent harbour.y versions and then by adding modifications
steep by step. If we are lucky and  it's not a bad thing like dirty
buffer so even modification in number of dummy spaces will exploit
the problem then we should locate the exact code/rule then maybe we
will be able to add some workaround for it. But it has to be done by
someone who can reproduce the problem. I cannot reproduce the GPF in
my Linux box.

best regards,
Przemek



==5320== 
==5320== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 12 from 1)
--5320-- 
--5320-- supp:   12 Ugly strchr error in /lib/ld-2.3.3.so
==5320== malloc/free: in use at exit: 21243 bytes in 15 blocks.
==5320== malloc/free: 119377 allocs, 119362 frees, 7882033 bytes allocated.
==5320== 
==5320== searching for pointers to 15 not-freed blocks.
==5320== checked 1574516 bytes.
==5320== 
==5320== 1343 bytes in 4 blocks are definitely lost in loss record 6 of 7
==5320==    at 0x1B904A90: malloc (vg_replace_malloc.c:131)
==5320==    by 0x806F21F: xmalloc (xmalloc.c:49)
==5320==    by 0x806F393: xmemdup (xmalloc.c:232)
==5320==    by 0x806F3C6: xstrdup (xmalloc.c:240)
==5320==    by 0x804E17B: muscle_grow (muscle_tab.c:141)
==5320==    by 0x804E5CB: muscle_pair_list_grow (muscle_tab.c:193)
==5320==    by 0x80553C4: add_param (parse-gram.y:562)
==5320==    by 0x8056944: gram_parse (parse-gram.y:245)
==5320==    by 0x805937C: reader (reader.c:515)
==5320==    by 0x804D86E: main (main.c:81)
==5320== 
==5320== 
==5320== 19808 bytes in 1 blocks are possibly lost in loss record 7 of 7
==5320==    at 0x1B904A90: malloc (vg_replace_malloc.c:131)
==5320==    by 0x806F21F: xmalloc (xmalloc.c:49)
==5320==    by 0x806F393: xmemdup (xmalloc.c:232)
==5320==    by 0x806F3C6: xstrdup (xmalloc.c:240)
==5320==    by 0x804E17B: muscle_grow (muscle_tab.c:141)
==5320==    by 0x804E358: muscle_code_grow (muscle_tab.c:175)
==5320==    by 0x80563D6: gram_parse (parse-gram.y:480)
==5320==    by 0x805937C: reader (reader.c:515)
==5320==    by 0x804D86E: main (main.c:81)
==5320== 
==5320== LEAK SUMMARY:
==5320==    definitely lost: 1343 bytes in 4 blocks.
==5320==    possibly lost:   19808 bytes in 1 blocks.
==5320==    still reachable: 92 bytes in 10 blocks.
==5320==         suppressed: 0 bytes in 0 blocks.
==5320== Reachable blocks (those to which a pointer was found) are not shown.
==5320== To see them, rerun with: --show-reachable=yes
--5320--     TT/TC: 0 tc sectors discarded.
--5320--            8756 tt_fast misses.
--5320-- translate: new     7127 (124625 -> 1669949; ratio 133:10)
--5320--            discard 1 (23 -> 320; ratio 139:10).
--5320-- chainings: 5649 chainings, 2 unchainings.
--5320--  dispatch: 58950000 jumps (bb entries); of them 4821820 (8%) unchained.
--5320--            1904/249353 major/minor sched events.
--5320-- reg-alloc: 1757 t-req-spill, 310193+10768 orig+spill uis,
--5320--            39250 total-reg-rank
--5320--    sanity: 1767 cheap, 71 expensive checks.
--5320--    ccalls: 31107 C calls, 54% saves+restores avoided (99840 bytes)
--5320--            41079 args, avg 0.84 setup instrs each (12648 bytes)
--5320--            0% clear the stack (93060 bytes)
--5320--            12345 retvals, 24% of reg-reg movs avoided (5922 bytes)
From e.m.giordano at emagsoftware.it  Sun Nov 26 10:06:47 2006
From: e.m.giordano at emagsoftware.it (Enrico Maria Giordano)
Date: Sun Nov 26 10:07:24 2006
Subject: [Harbour] Compiler speed
References: <024601c70d82$b0a01820$0100a8c0@emag><20061124195025.GA28514@localhost.localdomain><005801c7115d$d5de60e0$0100a8c0@emag>
	<20061126140212.GB23588@localhost.localdomain>
Message-ID: <015001c7116c$7e82f400$0100a8c0@emag>


-----Messaggio Originale----- 
Da: "Przemyslaw Czerpak" <druzus@priv.onet.pl>
A: "Harbour Project Main Developer List." <harbour@harbour-project.org>
Data invio: domenica 26 novembre 2006 15.02
Oggetto: Re: [Harbour] Compiler speed


> > No, I'm just recompiling my apps and noticing that xHarbour is faster than
> > Harbour at compile time.
>
> Ah, you are talking about compilation speed not execution speed.
> Yes, it's possible.

Ok, thank you.

> Are you talking now about execution speed of your program or compilation
> speed?

Compilation speed. As I said in another message, I can't test the execution of 
my apps due to the lack of hbzip.lib.

EMG

--
EMAG Software Homepage:     http://www.emagsoftware.it
The EMG's ZX-Spectrum Page: http://www.emagsoftware.it/spectrum
The Best of Spectrum Games: http://www.emagsoftware.it/tbosg
The EMG Music page:         http://www.emagsoftware.it/emgmusic 

From jfl at mafact.com  Sun Nov 26 12:11:00 2006
From: jfl at mafact.com (J. Lefebvre)
Date: Sun Nov 26 12:12:25 2006
Subject: [Harbour] Re: Latest CVS: error in Bison
Message-ID: <mailman.20.1164561145.3287.harbour@harbour-project.org>

Hi,

I'm using version 2.1 wich work (as) perfectly (as possible). I all case, it does it's job.

I opened Przemek yacc.c and added the memory release block to it without any side effect. Hard to say if it work or not ;-)

Best regards,

JF,

-----Original Message-----
From: harbour-bounces@harbour-project.org [mailto:harbour-bounces@harbour-project.org] On Behalf Of Przemyslaw Czerpak
Sent: Sunday, November 26, 2006 3:49 PM
To: Harbour Project Main Developer List.
Subject: Re: [Harbour] Re: Latest CVS: error in Bison

On Sun, 26 Nov 2006, Chen Kedem wrote:
> Przemek,
> I'm using bison 1.875 (in my BCC32 environment), and it GPF with the
> ChangeLog 2006-11-25 20:00 UTC+0100 Przemyslaw Czerpak:
> source\compiler\HARBOUR.C:
> ** error -1073741819 ** deleting obj\b32\harboury.c
> It does not help if I replace my yacc.c with the one you gave.
> So, do I need to upgrade my bison now? Last year I tested bison 2.1
> and it did not work with our version than (the 1.875 did). Can you
> do something to make Harbour less dependent in the exact bison version?

Yes by dropping bison ;-)
The problems are caused by some bugs in bison and GPF is the optimistic
effect. Much worser will be silent bison execution which will generate
broken grammar parser as final result.
The modified yacc.c does not fix any internal bison errors but only change
a little bit generated parser code.
I cannot reproduce GPF in my Linux box but as you've seen in the valgrind
log I sent at least three errors appears and each of them can cause
unexpected behavior because these are internal jumps which depends on
uninitialized memory. I can install 1.875 source code and try to find
where exactly it happens and fix it or add some workaround (if it will
be possible) in harbour.y. The question is if I should invest time in
fixing old bison version when the current one seems to work correctly.
I've just make a test with bison 2.3 and it works without any errors
executed in valgrind. Only some memory leaks are reported (see log below)
but it's unimportant for us. It also generate MT safe destructors so it's
not necessary to update yacc.c file.
If you really think I should work on old bison then I'll do that but
I'd strongly prefer to invest time in Harbour core code developing.
Anyhow one of recent modifications exploited bugs in 1.875 version
so it should be quite easy to locate when exactly the problem appeared
by checking few recent harbour.y versions and then by adding modifications
steep by step. If we are lucky and  it's not a bad thing like dirty
buffer so even modification in number of dummy spaces will exploit
the problem then we should locate the exact code/rule then maybe we
will be able to add some workaround for it. But it has to be done by
someone who can reproduce the problem. I cannot reproduce the GPF in
my Linux box.

best regards,
Przemek



==5320== 
==5320== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 12 from 1)
--5320-- 
--5320-- supp:   12 Ugly strchr error in /lib/ld-2.3.3.so
==5320== malloc/free: in use at exit: 21243 bytes in 15 blocks.
==5320== malloc/free: 119377 allocs, 119362 frees, 7882033 bytes allocated.
==5320== 
==5320== searching for pointers to 15 not-freed blocks.
==5320== checked 1574516 bytes.
==5320== 
==5320== 1343 bytes in 4 blocks are definitely lost in loss record 6 of 7
==5320==    at 0x1B904A90: malloc (vg_replace_malloc.c:131)
==5320==    by 0x806F21F: xmalloc (xmalloc.c:49)
==5320==    by 0x806F393: xmemdup (xmalloc.c:232)
==5320==    by 0x806F3C6: xstrdup (xmalloc.c:240)
==5320==    by 0x804E17B: muscle_grow (muscle_tab.c:141)
==5320==    by 0x804E5CB: muscle_pair_list_grow (muscle_tab.c:193)
==5320==    by 0x80553C4: add_param (parse-gram.y:562)
==5320==    by 0x8056944: gram_parse (parse-gram.y:245)
==5320==    by 0x805937C: reader (reader.c:515)
==5320==    by 0x804D86E: main (main.c:81)
==5320== 
==5320== 
==5320== 19808 bytes in 1 blocks are possibly lost in loss record 7 of 7
==5320==    at 0x1B904A90: malloc (vg_replace_malloc.c:131)
==5320==    by 0x806F21F: xmalloc (xmalloc.c:49)
==5320==    by 0x806F393: xmemdup (xmalloc.c:232)
==5320==    by 0x806F3C6: xstrdup (xmalloc.c:240)
==5320==    by 0x804E17B: muscle_grow (muscle_tab.c:141)
==5320==    by 0x804E358: muscle_code_grow (muscle_tab.c:175)
==5320==    by 0x80563D6: gram_parse (parse-gram.y:480)
==5320==    by 0x805937C: reader (reader.c:515)
==5320==    by 0x804D86E: main (main.c:81)
==5320== 
==5320== LEAK SUMMARY:
==5320==    definitely lost: 1343 bytes in 4 blocks.
==5320==    possibly lost:   19808 bytes in 1 blocks.
==5320==    still reachable: 92 bytes in 10 blocks.
==5320==         suppressed: 0 bytes in 0 blocks.
==5320== Reachable blocks (those to which a pointer was found) are not shown.
==5320== To see them, rerun with: --show-reachable=yes
--5320--     TT/TC: 0 tc sectors discarded.
--5320--            8756 tt_fast misses.
--5320-- translate: new     7127 (124625 -> 1669949; ratio 133:10)
--5320--            discard 1 (23 -> 320; ratio 139:10).
--5320-- chainings: 5649 chainings, 2 unchainings.
--5320--  dispatch: 58950000 jumps (bb entries); of them 4821820 (8%) unchained.
--5320--            1904/249353 major/minor sched events.
--5320-- reg-alloc: 1757 t-req-spill, 310193+10768 orig+spill uis,
--5320--            39250 total-reg-rank
--5320--    sanity: 1767 cheap, 71 expensive checks.
--5320--    ccalls: 31107 C calls, 54% saves+restores avoided (99840 bytes)
--5320--            41079 args, avg 0.84 setup instrs each (12648 bytes)
--5320--            0% clear the stack (93060 bytes)
--5320--            12345 retvals, 24% of reg-reg movs avoided (5922 bytes)
_______________________________________________
Harbour mailing list
Harbour@harbour-project.org
http://lists.harbour-project.org/mailman/listinfo/harbour


From druzus at priv.onet.pl  Sun Nov 26 22:10:21 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Sun Nov 26 22:11:09 2006
Subject: [Harbour] hbzip.lib
In-Reply-To: <023901c70d7f$d69e1340$0100a8c0@emag>
References: <023901c70d7f$d69e1340$0100a8c0@emag>
Message-ID: <20061127031021.GA3644@localhost.localdomain>

On Tue, 21 Nov 2006, Enrico Maria Giordano wrote:
> I already report it in the past: hbzip.lib is not created when Harbour is 
> built. Who is in charge of this lib?
> I would want to make real-world tests with Harbour trying to compile my 
> commercial apps but I can't do it due to the lack of hbzip.lib.

Enrico,
are you talking about contrib/hbzlib?
If yes and you want to use it in commercial software then
you should bought commercial license for ZipArchive library.
I think you should read contrib/hbzlib/License.txt

best regards,
Przemek
From e.m.giordano at emagsoftware.it  Mon Nov 27 03:06:37 2006
From: e.m.giordano at emagsoftware.it (Enrico Maria Giordano)
Date: Mon Nov 27 03:07:12 2006
Subject: [Harbour] hbzip.lib
References: <023901c70d7f$d69e1340$0100a8c0@emag>
	<20061127031021.GA3644@localhost.localdomain>
Message-ID: <002501c711fa$f6699800$0100a8c0@emag>


-----Messaggio Originale----- 
Da: "Przemyslaw Czerpak" <druzus@priv.onet.pl>
A: "Harbour Project Main Developer List." <harbour@harbour-project.org>
Data invio: lunedi 27 novembre 2006 4.10
Oggetto: Re: [Harbour] hbzip.lib


> > I already report it in the past: hbzip.lib is not created when Harbour is
> > built. Who is in charge of this lib?
> > I would want to make real-world tests with Harbour trying to compile my
> > commercial apps but I can't do it due to the lack of hbzip.lib.
>
> Enrico,
> are you talking about contrib/hbzlib?

Yes.

> If yes and you want to use it in commercial software then
> you should bought commercial license for ZipArchive library.
> I think you should read contrib/hbzlib/License.txt

Ok, but the point is that hbzlib can't be built using Harbour.

EMG

--
EMAG Software Homepage:     http://www.emagsoftware.it
The EMG's ZX-Spectrum Page: http://www.emagsoftware.it/spectrum
The Best of Spectrum Games: http://www.emagsoftware.it/tbosg
The EMG Music page:         http://www.emagsoftware.it/emgmusic 

From druzus at priv.onet.pl  Mon Nov 27 07:40:45 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Mon Nov 27 07:55:32 2006
Subject: [Harbour] hbzip.lib
In-Reply-To: <002501c711fa$f6699800$0100a8c0@emag>
References: <023901c70d7f$d69e1340$0100a8c0@emag>
	<20061127031021.GA3644@localhost.localdomain>
	<002501c711fa$f6699800$0100a8c0@emag>
Message-ID: <20061127124045.GA27536@localhost.localdomain>

On Mon, 27 Nov 2006, Enrico Maria Giordano wrote:
> >If yes and you want to use it in commercial software then
> >you should bought commercial license for ZipArchive library.
> >I think you should read contrib/hbzlib/License.txt
> Ok, but the point is that hbzlib can't be built using Harbour.

This code is one big trash which needs serious cleanup.
I cannot build hbzlib in xHarbour too and because its
license is more restricted then [x]Harbour one I do not
plan to invest even a minute to fix it.

best regards,
Przemek
From e.m.giordano at emagsoftware.it  Mon Nov 27 08:32:26 2006
From: e.m.giordano at emagsoftware.it (Enrico Maria Giordano)
Date: Mon Nov 27 08:33:56 2006
Subject: [Harbour] hbzip.lib
References: <023901c70d7f$d69e1340$0100a8c0@emag><20061127031021.GA3644@localhost.localdomain><002501c711fa$f6699800$0100a8c0@emag>
	<20061127124045.GA27536@localhost.localdomain>
Message-ID: <000c01c71228$7a67c000$0100a8c0@emag>


-----Messaggio Originale----- 
Da: "Przemyslaw Czerpak" <druzus@priv.onet.pl>
A: "Harbour Project Main Developer List." <harbour@harbour-project.org>
Data invio: lunedi 27 novembre 2006 13.40
Oggetto: Re: [Harbour] hbzip.lib


> This code is one big trash which needs serious cleanup.
> I cannot build hbzlib in xHarbour too and because its
> license is more restricted then [x]Harbour one I do not
> plan to invest even a minute to fix it.

I agree. Can I ask you what are you using (if you're using one) to handle ZIP 
files?

EMG

--
EMAG Software Homepage:     http://www.emagsoftware.it
The EMG's ZX-Spectrum Page: http://www.emagsoftware.it/spectrum
The Best of Spectrum Games: http://www.emagsoftware.it/tbosg
The EMG Music page:         http://www.emagsoftware.it/emgmusic 

From hbcs at sonic.net  Sun Nov 26 15:06:35 2006
From: hbcs at sonic.net (Bill Smith)
Date: Mon Nov 27 08:58:38 2006
Subject: [Harbour] Re: Latest CVS: error in Bison
References: <45699E8F.28D2@synel.co.il>
	<20061126144915.GA5240@localhost.localdomain>
Message-ID: <003c01c71196$60b9bba0$0203a8c0@hbco>


----- Original Message ----- 
From: Przemyslaw Czerpak
<snips>

Yes by dropping bison ;-)

:-)

I'd strongly prefer to invest time in Harbour core code developing.

:-)

best regards,
Przemek

Is 2.3 available only in Linux?  2.1 seems to be the latest binary package
available in Windows.  All 5++ mb of it.
http://gnuwin32.sourceforge.net/packages/bison.htm

From elart at elart.it  Mon Nov 27 14:30:11 2006
From: elart at elart.it (elart)
Date: Mon Nov 27 14:25:19 2006
Subject: [Harbour] Re: Latest CVS: error in Bison
In-Reply-To: <20061126144915.GA5240@localhost.localdomain>
References: <45699E8F.28D2@synel.co.il>
	<20061126144915.GA5240@localhost.localdomain>
Message-ID: <456B3CC3.7020001@elart.it>

Changelog:
2006-06-02 14:30 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)

With Bison 2.1

Borland C++ 5.5.1 for Win32 Copyright (c) 1993, 2000 Borland
obj\b32\harboury.c:
Warning W8004 obj\b32\harboury.c 3492: 'yymsg' is assigned a value that 
is never used in function yydestruct
Error E2040 obj\b32\harboury.c 3554: Declaration terminated incorrectly
*** 1 errors in Compile ***

** error 1 ** deleting obj\b32\harboury.obj

HTH

From elart at elart.it  Mon Nov 27 14:33:19 2006
From: elart at elart.it (elart)
Date: Mon Nov 27 14:28:23 2006
Subject: [Harbour] Re: Latest CVS: error in Bison
In-Reply-To: <456B3CC3.7020001@elart.it>
References: <45699E8F.28D2@synel.co.il>	<20061126144915.GA5240@localhost.localdomain>
	<456B3CC3.7020001@elart.it>
Message-ID: <456B3D7F.2010004@elart.it>

elart wrote:
> Changelog:
> 2006-06-02 14:30 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
> 
> With Bison 2.1
> 
> Borland C++ 5.5.1 for Win32 Copyright (c) 1993, 2000 Borland
> obj\b32\harboury.c:
> Warning W8004 obj\b32\harboury.c 3492: 'yymsg' is assigned a value that 
> is never used in function yydestruct
> Error E2040 obj\b32\harboury.c 3554: Declaration terminated incorrectly
> *** 1 errors in Compile ***
> 
> ** error 1 ** deleting obj\b32\harboury.obj
> 
> HTH
> 
> _______________________________________________
> Harbour mailing list
> Harbour@harbour-project.org
> http://lists.harbour-project.org/mailman/listinfo/harbour
> 
> 

Please ignore this wrong message... :-(
From druzus at priv.onet.pl  Mon Nov 27 20:11:00 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Mon Nov 27 20:12:20 2006
Subject: [Harbour] ChangeLog 2006-11-27 02:10 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <20061128011100.GA19799@localhost.localdomain>

2006-11-27 02:10 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/tests/codebl.prg
  * harbour/tests/langmsg.prg
  * harbour/utils/hbpptest/pp_test.prg
  * harbour/utils/hbpptest/pretest.prg
  * harbour/samples/pe/license.txt
    * removed carriage return (\r) characters

  * harbour/include/hbcomp.h
  * harbour/include/hbapi.h
  * harbour/include/hbcompdf.h
  * harbour/include/hbexprb.c
  * harbour/include/hbexprop.h
  * harbour/source/vm/macro.c
  * harbour/source/compiler/hbcomp.c
  * harbour/source/compiler/complex.c
  * harbour/source/compiler/harbour.c
  * harbour/source/compiler/harbour.l
  * harbour/source/compiler/harbour.y
  * harbour/source/compiler/genjava.c
  * harbour/source/compiler/hbcomp.c
  * harbour/source/compiler/hbident.c
  * harbour/source/compiler/hbpcode.c
  * harbour/source/compiler/ppcomp.c
    * separated HB_COMP and HB_MACRO definitions and added HB_COMMON
      structure used when HB_COMMON_SUPPORT macro is set
    * hide HB_MACRO internal definitions in hbapi.h when HB_MACRO_SUPPORT
      is not set
    These modifications should help in future compiler and macro compiler
    integration into single binary.

    + added clipper compatible error message in unclosed structures
      In general we should cleanup rules to make error reporting more
      user friendly and Clipper compatible
    % eliminated unnecessary allocations
    + added int mode member to common part of HB_COMP and HB_MACRO
      structure. It's initialized to HB_MODE_MACRO or HB_MODE_COMPILER
    + add TOFIX note about memory leaks in cParamTypes and pParamClasses
      members of COMDECLARED structure. It's a part of unfinished strong
      typing code. I do not know what Ryszard plan to do with it so I'm
      leaving it as is. The part of strong typing which were operating
      on emulated HVM stack has been removed.
    * removed static variables from genjava.c. Also gencli.c and genobj32.c
      should be fixed but this will not make this code working so I haven't
      touched it.
    * changed 3-rd parameter of hb_compIdentifierNew() from BOOL to int.
      Now it can have the following values: HB_IDENT_STATIC, HB_IDENT_FREE,
      HB_IDENT_COPY. This modification will allow in the future using common
      for static and dynamic symbol hash table without additional source code
      changes. I also plan to use identifier hash table in PP the reduce
      number of memory allocations and speed-up preprocessing by using
      second level hashing for hash keys.

  * harbour/source/common/expropt1.c
  * harbour/source/common/expropt2.c
    * changed HB_MACRO_SUPPORT to HB_COMMON_SUPPORT to automatically detect
      possible conflicts between compiler and macro compiler
    ! removed first detected conflict which existed for long time
    + added hb_compExprMacroAsAlias() function to convert HB_ET_VARIABLE
      expression to HB_ET_ALIAS.

  * harbour/source/macro/macro.y
    ! fixed using prefix&macro-> and &macro.sufix-> when macro cannot be
      substituted by compiler, f.e.:
         M->v := NIL
         x := "&v.1->fld"
         M->v := "v"
         M->v1:= "data"
         ? &x
    ! fixed memory leak in macro substituted expression compilation

  * harbour/source/vm/macro.c
    ! fixed initialization of some HB_MACRO members
    ! fixed value returned for type("&V->F") when alias does not exist
    - removed not longer used hb_comp_bShortCuts global variable

   Now I've finished compiler modifications. To integrate compiler with HVM
   it will be necessary to resolve problem with common function names used
   in compiler and macro compiler or simply add most of compiler features
   to macro compiler and use the same code. These job I'd like to leave to
   Ryszard. He knows the best what he may need it the future and how to
   implement it. I made all modifications in compiler I planed. The code
   is MT safe, without memory leaks (excluding documented bug in left strong
   typing code) and can be integrated with HVM after some modifications.
   In fact some rules in bison can be cleaned but I do not want to touch it.
   I have quite long TODO list and I would like to return to some other code.
   Ryszard, any chance that you can move the include/hbexpr* code to COMMON
   library and update macro compiler functions so they can be linked with
   compiler? We will need a table of functions attached to common data in
   HB_COMP/HB_MACRO structure. I can create yet basic version of such table
   and of course help you if will need some help but to finish this job it
   will be necessary to decide what compiler extensions we want to add to
   macro compiler and this is sth what you should make yourself.

best regards,
Przemek
From elart at elart.it  Mon Nov 27 20:42:34 2006
From: elart at elart.it (elart)
Date: Mon Nov 27 20:38:07 2006
Subject: [Harbour] ChangeLog 2006-11-27 02:10 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <20061128011100.GA19799@localhost.localdomain>
References: <20061128011100.GA19799@localhost.localdomain>
Message-ID: <456B940A.8010505@elart.it>

Przemyslaw Czerpak wrote:
> 2006-11-27 02:10 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)

With Bison 2.1 harbour build whitout error.log but into the dos windows 
i get a lot of messages:

C:\harbour>make_b32
source\compiler\harbour.c:563: HB_TR_ERROR Block 1 006FEBB4 (size 25) 
"(_INITSTA
TICS00001)......"
source\compiler\harbour.c:563: HB_TR_ERROR Block 1 0072F1A0 (size 25) 
"(_INITSTA
TICS00001).M...("
source\compiler\harbour.c:563: HB_TR_ERROR Block 1 00729E28 (size 25) 
"(_INITSTA
TICS00001)......"
source\compiler\harbour.c:563: HB_TR_ERROR Block 1 0072BE10 (size 25) 
"(_INITSTA
TICS00001).?+G.."
source\compiler\harbour.c:563: HB_TR_ERROR Block 1 007377A4 (size 25) 
"(_INITSTA
TICS00001)......"
source\compiler\harbour.c:563: HB_TR_ERROR Block 1 0072C3D0 (size 25) 
"(_INITSTA
TICS00001)......"
source\compiler\harbour.c:563: HB_TR_ERROR Block 1 006EB6B8 (size 25) 
"(_INITSTA
TICS00002)......"
source\compiler\harbour.c:563: HB_TR_ERROR Block 1 00740868 (size 25) 
"(_INITSTA
TICS00001).....4"

and so on

HTH
From druzus at priv.onet.pl  Mon Nov 27 23:32:42 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Mon Nov 27 23:38:05 2006
Subject: [Harbour] ChangeLog 2006-11-27 02:10 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <456B940A.8010505@elart.it>
References: <20061128011100.GA19799@localhost.localdomain>
	<456B940A.8010505@elart.it>
Message-ID: <20061128043242.GA23067@localhost.localdomain>

On Tue, 28 Nov 2006, elart wrote:
> With Bison 2.1 harbour build whitout error.log but into the dos windows 
> i get a lot of messages:
> C:\harbour>make_b32
> source\compiler\harbour.c:563: HB_TR_ERROR Block 1 006FEBB4 (size 25) 
> "(_INITSTATICS00001)......"
[...]

Thanks for the info - I left one hb_xgrab() by mistake.
I'll commit a fix in a while.

best regards,
Przemek
From druzus at priv.onet.pl  Mon Nov 27 23:41:54 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Mon Nov 27 23:43:39 2006
Subject: [Harbour] ChangeLog 2006-11-28 05:40 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <20061128044154.GB23067@localhost.localdomain>

2006-11-28 05:40 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/compiler/harbour.c
    ! fixed typo in last modification which caused memory leak

  * harbour/source/vm/codebloc.c
    + initialize freed codeblock structure with pointer to static PCODE
      which returns NIL for buggy .prg destructors.

  * harbour/ChangeLog
    ! fixed date of my last commit

best regards,
Przemek
From druzus at priv.onet.pl  Tue Nov 28 08:54:32 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Tue Nov 28 08:55:20 2006
Subject: [Harbour] Re: Latest CVS: error in Bison
In-Reply-To: <003c01c71196$60b9bba0$0203a8c0@hbco>
References: <45699E8F.28D2@synel.co.il>
	<20061126144915.GA5240@localhost.localdomain>
	<003c01c71196$60b9bba0$0203a8c0@hbco>
Message-ID: <20061128135432.GA31347@localhost.localdomain>

On Sun, 26 Nov 2006, Bill Smith wrote:
> Is 2.3 available only in Linux?  2.1 seems to be the latest binary package
> available in Windows.  All 5++ mb of it.
> http://gnuwin32.sourceforge.net/packages/bison.htm

I took bison source code and compiled it. Version 2.3 was released
at the beginning of June.
Creating binaries in most of Unix system is rather trivial job.
Two commands:
    ./configure
    ./make

but in Windows it could be more complicated because tools used by
bison are not supported by the default system installation. But
I think that in MSYS environment it should be possible to build bison
as in *nixes.
Anyhow there is also one think I'd like to add to CVS: preprocessed
harbour.y file. We can call it harbour.yyc and put it in source/compiler
directory. The we can add one option to existing make files and if
some environment variable is set (f.e.: HB_REBUILD_PARSER=no or
HB_USE_BISON=no) then instead of executing bison to generate harboury.c
we will simply copy harbour.yyc to harboury.c
The same should be done for macro.y (macro.yyc) and it will be possible
to build Harbour without any external tools. We should remember only
about generating new .yyc files after updating the corresponding .y ones.
I do not think it's a big problem and can be done by anyone who has working
bison. In such case I will change the harbour.y to use MT safe destructors
ASAP (it's enough to replace hb_comp_data with HB_COMP_PARAM in one place).
I haven't made it so far because after this modification it's necessary to
use bison 2.3 or modified yacc.c I sent in one of previous messages but if
we will have an ready to compile parser code in CVS then I do not think
it will be big problem.
I can make necessary modifications in GNU make files even today. It will be
nice if someone can make them also for Windows. If this will work in practice
then we can set using parser code from CVS as default so only people who are
working on grammar code will have to set HB_REBUILD_PARSER|HB_USE_BISON=yes.

Your opinions?

best regards,
Przemek
From philb at philb.us  Tue Nov 28 09:00:35 2006
From: philb at philb.us (Phil Barnett)
Date: Tue Nov 28 09:00:11 2006
Subject: [Harbour] Re: Latest CVS: error in Bison
In-Reply-To: <20061128135432.GA31347@localhost.localdomain>
References: <45699E8F.28D2@synel.co.il> <003c01c71196$60b9bba0$0203a8c0@hbco>
	<20061128135432.GA31347@localhost.localdomain>
Message-ID: <200611280900.36012.philb@philb.us>

On Tuesday 28 November 2006 08:54, Przemyslaw Czerpak wrote:
> On Sun, 26 Nov 2006, Bill Smith wrote:
> > Is 2.3 available only in Linux?  2.1 seems to be the latest binary
> > package available in Windows.  All 5++ mb of it.
> > http://gnuwin32.sourceforge.net/packages/bison.htm
>
> I took bison source code and compiled it. Version 2.3 was released
> at the beginning of June.
> Creating binaries in most of Unix system is rather trivial job.
> Two commands:
>     ./configure
>     ./make
>
> but in Windows it could be more complicated because tools used by
> bison are not supported by the default system installation. But
> I think that in MSYS environment it should be possible to build bison
> as in *nixes.
> Anyhow there is also one think I'd like to add to CVS: preprocessed
> harbour.y file. We can call it harbour.yyc and put it in source/compiler
> directory. The we can add one option to existing make files and if
> some environment variable is set (f.e.: HB_REBUILD_PARSER=no or
> HB_USE_BISON=no) then instead of executing bison to generate harboury.c
> we will simply copy harbour.yyc to harboury.c
> The same should be done for macro.y (macro.yyc) and it will be possible
> to build Harbour without any external tools. We should remember only
> about generating new .yyc files after updating the corresponding .y ones.
> I do not think it's a big problem and can be done by anyone who has working
> bison. In such case I will change the harbour.y to use MT safe destructors
> ASAP (it's enough to replace hb_comp_data with HB_COMP_PARAM in one place).
> I haven't made it so far because after this modification it's necessary to
> use bison 2.3 or modified yacc.c I sent in one of previous messages but if
> we will have an ready to compile parser code in CVS then I do not think
> it will be big problem.
> I can make necessary modifications in GNU make files even today. It will be
> nice if someone can make them also for Windows. If this will work in
> practice then we can set using parser code from CVS as default so only
> people who are working on grammar code will have to set
> HB_REBUILD_PARSER|HB_USE_BISON=yes.
>
> Your opinions?

I think it's an excellent idea.

-- 
My other computer is your Windows machine
From jacek at achilles.wam.lodz.pl  Tue Nov 28 09:02:06 2006
From: jacek at achilles.wam.lodz.pl (Jacek Kubica)
Date: Tue Nov 28 09:02:32 2006
Subject: [Harbour] bison 2.1 binaries for bcc5.5
Message-ID: <912482841.20061128150206@achilles.wam.lodz.pl>

Hi,

I noticed that current CVS Harbour version
is probably not 'compatible' with bison 1.875
used by me since years for Harbour compilation.
Someone reported success with bison 2.1 , but where
can I download this version binaries for bcc55 ??

Any advise will be appreciated!

-- 
Regards,
 
 Jacek Kubica    

From druzus at priv.onet.pl  Tue Nov 28 09:15:25 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Tue Nov 28 09:16:17 2006
Subject: [Harbour] bison 2.1 binaries for bcc5.5
In-Reply-To: <912482841.20061128150206@achilles.wam.lodz.pl>
References: <912482841.20061128150206@achilles.wam.lodz.pl>
Message-ID: <20061128141525.GA32091@localhost.localdomain>

[wtorek, 28 listopad 2006], Jacek Kubica napisa?(a):
> Hi,
> I noticed that current CVS Harbour version
> is probably not 'compatible' with bison 1.875
> used by me since years for Harbour compilation.

To be more precise. It is compatible with this bison version
but some of recent modification exploited some bugs in older
bison binaries on some platforms and bison GPFs. I'm using
bison 1.875 on some of my Linux controlled computers without
any visible problems though I can see in valgrind some bugs
which may cause GPF.

> Someone reported success with bison 2.1 , but where
> can I download this version binaries for bcc55 ??
> Any advise will be appreciated!

If you are looking for Windows binaries then you will find
links in last messages.

best regards,
Przemek
From niki at synel.co.il  Tue Nov 28 09:19:30 2006
From: niki at synel.co.il (Chen Kedem)
Date: Tue Nov 28 09:18:19 2006
Subject: [Harbour] bison 2.1 binaries for bcc5.5
Message-ID: <456C4572.37CA@synel.co.il>

Jacek,

Read the post Przemek just made, so soon we might not need to have
bison in our Windows environment in order to build Harbour. To get
bison 2.1 you need to go to the GNU site and look for bison. There
is a list of dependancy packages that you also need (it is written
in the bison site) like M4SUGAR and the libintl3.

  Chen.
**********************************************************************************************
IMPORTANT: The contents of this email and any attachments are confidential. They are intended for the 
named recipient(s) only.
If you have received this email in error, please notify the system manager or the sender immediately and do 
not disclose the contents to anyone or make copies thereof.
*** eSafe scanned this email for viruses, vandals, and malicious content. ***
**********************************************************************************************

From niki at synel.co.il  Tue Nov 28 09:21:41 2006
From: niki at synel.co.il (Chen Kedem)
Date: Tue Nov 28 09:20:26 2006
Subject: [Harbour] bison 2.1 binaries for bcc5.5
References: <456C4572.37CA@synel.co.il>
Message-ID: <456C45F5.6850@synel.co.il>

http://gnuwin32.sourceforge.net/packages/bison.htm
**********************************************************************************************
IMPORTANT: The contents of this email and any attachments are confidential. They are intended for the 
named recipient(s) only.
If you have received this email in error, please notify the system manager or the sender immediately and do 
not disclose the contents to anyone or make copies thereof.
*** eSafe scanned this email for viruses, vandals, and malicious content. ***
**********************************************************************************************

From sscc at mweb.co.za  Tue Nov 28 09:28:01 2006
From: sscc at mweb.co.za (Alex Strickland)
Date: Tue Nov 28 09:28:17 2006
Subject: [Harbour] Re: Latest CVS: error in Bison
In-Reply-To: <20061128135432.GA31347@localhost.localdomain>
References: <45699E8F.28D2@synel.co.il>	<20061126144915.GA5240@localhost.localdomain>	<003c01c71196$60b9bba0$0203a8c0@hbco>
	<20061128135432.GA31347@localhost.localdomain>
Message-ID: <456C4771.60009@mweb.co.za>

Przemyslaw Czerpak wrote:
> Anyhow there is also one think I'd like to add to CVS: preprocessed
> harbour.y file. We can call it harbour.yyc and put it in source/compiler
> directory. The we can add one option to existing make files and if
> some environment variable is set (f.e.: HB_REBUILD_PARSER=no or
> HB_USE_BISON=no) then instead of executing bison to generate harboury.c
> we will simply copy harbour.yyc to harboury.c
> The same should be done for macro.y (macro.yyc) and it will be possible
> to build Harbour without any external tools. We should remember only
> about generating new .yyc files after updating the corresponding .y ones.
> I do not think it's a big problem and can be done by anyone who has working
> bison. In such case I will change the harbour.y to use MT safe destructors
> ASAP (it's enough to replace hb_comp_data with HB_COMP_PARAM in one place).
> I haven't made it so far because after this modification it's necessary to
> use bison 2.3 or modified yacc.c I sent in one of previous messages but if
> we will have an ready to compile parser code in CVS then I do not think
> it will be big problem.

It is a good idea.

Regards
Alex
From druzus at priv.onet.pl  Tue Nov 28 13:31:58 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Tue Nov 28 13:32:45 2006
Subject: [Harbour] ChangeLog 2006-11-28 19:30 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <20061128183158.GA6387@localhost.localdomain>

2006-11-28 19:30 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/compiler/harbour.y
    * use HB_COMP_PARAM macro in expression destructor instead of
      direct accessing hb_comp_data global variable to make compiler
      code MT safe

  + harbour/source/compiler/harbour.yyc
  + harbour/source/compiler/harbour.yyh
  + harbour/source/macro/macro.yyc
  + harbour/source/macro/macro.yyh
    + added generated by bison 2.3 grammar parsers for compiler and
      macro compiler

  * harbour/config/dos/global.cf
  * harbour/config/dos/install.cf
  * harbour/config/w32/global.cf
    * changed CP definition for COMMAND.COM so it can work as standalone
      command and added DIRSEP macro

  * harbour/config/c.cf
    + added support for HB_REBUILD_PARSER=no environment variable.
      When it's set then during build process grammars parsers
      will not be generated from grammar definitions files (.y)
      but instead the predefined ones (.yyc) used.
      Tested and works well in Linux and DOS

  * harbour/makefile.bc
    + added support for HB_REBUILD_PARSER=no environment variable.
      Not tested. It's even possible that I've just broken the BCC
      compilation with this modification. Please check it and fix
      me if necessary.

I'm waiting for your opinions how do you find it and what should be
the default setting:
    HB_REBUILD_PARSER=no
or:
    HB_REBUILD_PARSER=yes

Now by default grammar parser code is generated so bison is necessary.

best regards,
Przemek
From e.m.giordano at emagsoftware.it  Tue Nov 28 13:55:54 2006
From: e.m.giordano at emagsoftware.it (Enrico Maria Giordano)
Date: Tue Nov 28 13:56:30 2006
Subject: [Harbour] ChangeLog 2006-11-28 19:30 UTC+0100 Przemyslaw
	Czerpak(druzus/at/priv.onet.pl)
References: <20061128183158.GA6387@localhost.localdomain>
Message-ID: <039e01c7131e$d504b2b0$0100a8c0@emag>


-----Messaggio Originale----- 
Da: "Przemyslaw Czerpak" <druzus@priv.onet.pl>
A: "Harbour Project Main Developer List." <harbour@harbour-project.org>
Data invio: martedi 28 novembre 2006 19.31
Oggetto: [Harbour] ChangeLog 2006-11-28 19:30 UTC+0100 Przemyslaw 
Czerpak(druzus/at/priv.onet.pl)

I get

Error E2451 obj\b32\harboury.c 3632: Undefined symbol 'pComp' in function 
yydestruct

EMG

--
EMAG Software Homepage:     http://www.emagsoftware.it
The EMG's ZX-Spectrum Page: http://www.emagsoftware.it/spectrum
The Best of Spectrum Games: http://www.emagsoftware.it/tbosg
The EMG Music page:         http://www.emagsoftware.it/emgmusic 

From elart at elart.it  Tue Nov 28 14:01:50 2006
From: elart at elart.it (elart)
Date: Tue Nov 28 13:56:55 2006
Subject: [Harbour] ChangeLog 2006-11-28 19:30 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <20061128183158.GA6387@localhost.localdomain>
References: <20061128183158.GA6387@localhost.localdomain>
Message-ID: <456C879E.60903@elart.it>

Przemyslaw Czerpak wrote:
> 2006-11-28 19:30 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
>   * harbour/source/compiler/harbour.y
>     * use HB_COMP_PARAM macro in expression destructor instead of
>       direct accessing hb_comp_data global variable to make compiler
>       code MT safe
> 
>   + harbour/source/compiler/harbour.yyc
>   + harbour/source/compiler/harbour.yyh
>   + harbour/source/macro/macro.yyc
>   + harbour/source/macro/macro.yyh
>     + added generated by bison 2.3 grammar parsers for compiler and
>       macro compiler
> 
>   * harbour/config/dos/global.cf
>   * harbour/config/dos/install.cf
>   * harbour/config/w32/global.cf
>     * changed CP definition for COMMAND.COM so it can work as standalone
>       command and added DIRSEP macro
> 
>   * harbour/config/c.cf
>     + added support for HB_REBUILD_PARSER=no environment variable.
>       When it's set then during build process grammars parsers
>       will not be generated from grammar definitions files (.y)
>       but instead the predefined ones (.yyc) used.
>       Tested and works well in Linux and DOS
> 
>   * harbour/makefile.bc
>     + added support for HB_REBUILD_PARSER=no environment variable.
>       Not tested. It's even possible that I've just broken the BCC
>       compilation with this modification. Please check it and fix
>       me if necessary.
> 
> I'm waiting for your opinions how do you find it and what should be
> the default setting:
>     HB_REBUILD_PARSER=no
> or:
>     HB_REBUILD_PARSER=yes
> 
> Now by default grammar parser code is generated so bison is necessary.
> 
> best regards,
> Przemek
> _______________________________________________
> Harbour mailing list
> Harbour@harbour-project.org
> http://lists.harbour-project.org/mailman/listinfo/harbour
> 
> 

On Linux:

bison -d  -oharboury.c ../../harbour.y
gcc -I. -I../../../../include -DHB_OS_LINUX -Wall -W -fsigned-char 
-march=i386 -mtune=i686  -c harboury.c -oharboury.o
../../harbour.y: In function 'yydestruct':
../../harbour.y:244: error: 'pComp' undeclared (first use in this function)
../../harbour.y:244: error: (Each undeclared identifier is reported only 
once
../../harbour.y:244: error: for each function it appears in.)

On Win:

source\compiler\harbour.c:
obj\b32\harboury.c:
Error E2451 obj\b32\harboury.c 3632: Undefined symbol 'pComp' in 
function yydestruct
Warning W8065 obj\b32\harboury.c 8593: Call to function 'yydestruct' 
with no prototype in function yyparse
Warning W8008 obj\b32\harboury.c 8611: Condition is always false in 
function yyparse
Warning W8066 obj\b32\harboury.c 8612: Unreachable code in function yyparse
Warning W8065 obj\b32\harboury.c 8645: Call to function 'yydestruct' 
with no prototype in function yyparse
Warning W8065 obj\b32\harboury.c 8691: Call to function 'yydestruct' 
with no prototype in function yyparse
Warning W8065 obj\b32\harboury.c 8695: Call to function 'yydestruct' 
with no prototype in function yyparse
*** 1 errors in Compile ***

** error 1 ** deleting obj\b32\harboury.obj

HTH

From e.m.giordano at emagsoftware.it  Tue Nov 28 13:57:02 2006
From: e.m.giordano at emagsoftware.it (Enrico Maria Giordano)
Date: Tue Nov 28 13:57:36 2006
Subject: [Harbour] ChangeLog 2006-11-28 19:30 UTC+0100 Przemyslaw
	Czerpak(druzus/at/priv.onet.pl)
References: <20061128183158.GA6387@localhost.localdomain>
Message-ID: <03a101c7131e$fd87cab0$0100a8c0@emag>


-----Messaggio Originale----- 
Da: "Przemyslaw Czerpak" <druzus@priv.onet.pl>
A: "Harbour Project Main Developer List." <harbour@harbour-project.org>
Data invio: martedi 28 novembre 2006 19.31
Oggetto: [Harbour] ChangeLog 2006-11-28 19:30 UTC+0100 Przemyslaw 
Czerpak(druzus/at/priv.onet.pl)


> I'm waiting for your opinions how do you find it and what should be
> the default setting:
>    HB_REBUILD_PARSER=no
> or:
>    HB_REBUILD_PARSER=yes
>
> Now by default grammar parser code is generated so bison is necessary.

Where exactly do I have to put that setting?

EMG

--
EMAG Software Homepage:     http://www.emagsoftware.it
The EMG's ZX-Spectrum Page: http://www.emagsoftware.it/spectrum
The Best of Spectrum Games: http://www.emagsoftware.it/tbosg
The EMG Music page:         http://www.emagsoftware.it/emgmusic 

From dbtopas at dbtopas.lt  Tue Nov 28 14:25:04 2006
From: dbtopas at dbtopas.lt (Mindaugas Kavaliauskas)
Date: Tue Nov 28 14:25:15 2006
Subject: [Harbour] ChangeLog 2006-11-28 19:30 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <20061128183158.GA6387@localhost.localdomain>
References: <20061128183158.GA6387@localhost.localdomain>
Message-ID: <456C8D10.7000705@dbtopas.lt>

Przemyslaw Czerpak wrote:
> I'm waiting for your opinions how do you find it and what should be
> the default setting:
>     HB_REBUILD_PARSER=no
> or:
>     HB_REBUILD_PARSER=yes
> 
> Now by default grammar parser code is generated so bison is necessary.

If we will follow the rule: upload .yy*, if you've changed .y, then
   HB_REBUILD_PARSER=no
is better. It will allow to rebuild CVS for unexperienced users. I 
guess, it will be not a problem to set HB_REBUILD_PARSER=yes for those 
who has enough knowledge to change parser.

Best regards,
Mindaugas
From druzus at priv.onet.pl  Tue Nov 28 14:29:06 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Tue Nov 28 14:29:54 2006
Subject: [Harbour] Re: ChangeLog 2006-11-28 19:30 UTC+0100 Przemyslaw
	Czerpak (druzus/at/priv.onet.pl)
In-Reply-To: <20061128183158.GA6387@localhost.localdomain>
References: <20061128183158.GA6387@localhost.localdomain>
Message-ID: <20061128192906.GA6522@localhost.localdomain>

I can see your messages only on web page, there is quite huge delay
(sometimes few days) in messages I'm receiving.

> I get
> Error E2451 obj\b32\harboury.c 3632: Undefined symbol 'pComp' in function
> yydestruct

Perfectly valid message because you do not use bison 2.3 or updated yacc.c
file I sent.

> Where exactly do I have to put that setting?

In the same place when you usually set environment variables.

    SET HB_REBUILD_PARSER=no

at command prompt or in you build batch file(s).

best regards,
Przemek
From e.m.giordano at emagsoftware.it  Tue Nov 28 14:57:57 2006
From: e.m.giordano at emagsoftware.it (Enrico Maria Giordano)
Date: Tue Nov 28 15:00:25 2006
Subject: [Harbour] Re: ChangeLog 2006-11-28 19:30 UTC+0100
	PrzemyslawCzerpak (druzus/at/priv.onet.pl)
References: <20061128183158.GA6387@localhost.localdomain>
	<20061128192906.GA6522@localhost.localdomain>
Message-ID: <042401c71327$7fcd1ef0$0100a8c0@emag>


-----Messaggio Originale----- 
Da: "Przemyslaw Czerpak" <druzus@priv.onet.pl>
A: "Harbour Project Main Developer List." <harbour@harbour-project.org>
Data invio: martedi 28 novembre 2006 20.29
Oggetto: [Harbour] Re: ChangeLog 2006-11-28 19:30 UTC+0100 PrzemyslawCzerpak 
(druzus/at/priv.onet.pl)


> > I get
> > Error E2451 obj\b32\harboury.c 3632: Undefined symbol 'pComp' in function
> > yydestruct
>
> Perfectly valid message because you do not use bison 2.3 or updated yacc.c
> file I sent.

Sorry, I missed that file. Can you resend it, please?

> > Where exactly do I have to put that setting?
>
> In the same place when you usually set environment variables.
>
>    SET HB_REBUILD_PARSER=no
>
> at command prompt or in you build batch file(s).

Thank you. Now I get

Fatal: 'source\compiler\macro.yyc' does not exist - don't know how to make it

EMG

--
EMAG Software Homepage:     http://www.emagsoftware.it
The EMG's ZX-Spectrum Page: http://www.emagsoftware.it/spectrum
The Best of Spectrum Games: http://www.emagsoftware.it/tbosg
The EMG Music page:         http://www.emagsoftware.it/emgmusic 

From hbcs at sonic.net  Tue Nov 28 14:22:24 2006
From: hbcs at sonic.net (Bill Smith)
Date: Tue Nov 28 15:16:49 2006
Subject: [Harbour] ChangeLog 2006-11-28 19:30 UTC+0100 Przemyslaw
	Czerpak(druzus/at/priv.onet.pl)
References: <20061128183158.GA6387@localhost.localdomain>
Message-ID: <006001c71322$88a85ee0$0203a8c0@hbco>

My vote is   HB_REBUILD_PARSER=no

By default pregenerated grammar parser code is used so bison is not
necessary.

Hope documentation is updated so that version of Bison is available in case
someone needs to use the utility.

Bill

----- Original Message ----- 
From: Przemyslaw Czerpak
To: Harbour Project Main Developer List.
Sent: Tuesday, November 28, 2006 10:31 AM
Subject: [Harbour] ChangeLog 2006-11-28 19:30 UTC+0100 Przemyslaw
Czerpak(druzus/at/priv.onet.pl)
<snips>
I'm waiting for your opinions how do you find it and what should be
the default setting:
    HB_REBUILD_PARSER=no
or:
    HB_REBUILD_PARSER=yes

Now by default grammar parser code is generated so bison is necessary.

best regards,
Przemek
_______________________________________________
Harbour mailing list
Harbour@harbour-project.org
http://lists.harbour-project.org/mailman/listinfo/harbour

From druzus at priv.onet.pl  Tue Nov 28 15:09:24 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Tue Nov 28 15:18:49 2006
Subject: [Harbour] Re: ChangeLog 2006-11-28 19:30 UTC+0100 Przemyslaw
	Czerpak (druzus/at/priv.onet.pl)
In-Reply-To: <20061128192906.GA6522@localhost.localdomain>
References: <20061128183158.GA6387@localhost.localdomain>
	<20061128192906.GA6522@localhost.localdomain>
Message-ID: <20061128200924.GA7393@localhost.localdomain>

> I missed that file. Can you resend it, please?

In attachment. It was for 1.875 but maybe it can work with 2.1 or
you can quite easy create your own updating yacc.c from 2.1.

> Now I get
> Fatal: 'source\compiler\macro.yyc' does not exist - don't know how to make it

You do not have to make it. It already exist and this is only my typo
in makefile.bc - as I said it was not tested. Anyhow with your help
I think that I can update it step by step ;-)
In this case $(HARBOUR_DIR)\macro.y should be changed to $(MACRO_DIR)\macro.y
in two places. I'll commit fix in a while and I also change the default
setting to not use bison. Mindaugas suggestion seems to be reasonable for me.

best regards,
Przemek
-------------- next part --------------
A non-text attachment was scrubbed...
Name: yacc.c.gz
Type: application/x-gzip
Size: 10476 bytes
Desc: not available
Url : http://lists.leap-cf.org/pipermail/harbour/attachments/20061128/54ea9a7a/yacc.c-0001.gz
From druzus at priv.onet.pl  Tue Nov 28 15:22:52 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Tue Nov 28 15:30:02 2006
Subject: [Harbour] ChangeLog 2006-11-28 21:10 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <20061128202252.GB7393@localhost.localdomain>

2006-11-28 21:10 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/makefile.bc
  * harbour/config/c.cf
    * changed default settings to not use bison for generation new
      grammar files. Now developers who will want to update our
      grammar definition files for compiler and macro compiler
      should set environment variable HB_REBUILD_PARSER=yes
      to force preprocessing new rules by bison and should
      remember to update before committing modifications in *.y
      file(s) corresponding *.yy[ch] files by copping the new
      ones generated by parser.
    ! fixed typo in makefile.bc - instead of $(HARBOUR_DIR)\macro.yyc
      should be $(MACRO_DIR)\macro.yyc

best regards,
Przemek
From druzus at priv.onet.pl  Tue Nov 28 15:40:06 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Tue Nov 28 15:40:55 2006
Subject: [Harbour] ChangeLog 2006-11-28 21:40 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <20061128204006.GA7665@localhost.localdomain>

2006-11-28 21:40 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/makefile.bc
  * harbour/config/c.cf
    ! fixed typo in last modification - I have bad day today.

best regards,
Przemek
From elart at elart.it  Tue Nov 28 16:35:22 2006
From: elart at elart.it (elart)
Date: Tue Nov 28 16:30:21 2006
Subject: [Harbour] Harbour wiki error...
In-Reply-To: <20061128200924.GA7393@localhost.localdomain>
References: <20061128183158.GA6387@localhost.localdomain>	<20061128192906.GA6522@localhost.localdomain>
	<20061128200924.GA7393@localhost.localdomain>
Message-ID: <456CAB9A.5060002@elart.it>

There is something wrong on
http://www.harbour-project.org/wiki/

HTH
From elart at elart.it  Tue Nov 28 16:36:49 2006
From: elart at elart.it (elart)
Date: Tue Nov 28 16:31:48 2006
Subject: [Harbour] ChangeLog 2006-11-28 21:40 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <20061128204006.GA7665@localhost.localdomain>
References: <20061128204006.GA7665@localhost.localdomain>
Message-ID: <456CABF1.9090906@elart.it>

Przemyslaw Czerpak wrote:
> 2006-11-28 21:40 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
>   * harbour/makefile.bc
>   * harbour/config/c.cf
>     ! fixed typo in last modification - I have bad day today.
> 
> best regards,
> Przemek
> _______________________________________________
> Harbour mailing list
> Harbour@harbour-project.org
> http://lists.harbour-project.org/mailman/listinfo/harbour
> 
>
With Bison 2.1 on Win, Harbour is builded without error


On Linux with Bison 2.1 Harbour builds with this warning

bison -d  -oharboury.c ../../harbour.y
../../harbour.y:311.14-39: attenzione: unused value: $3
../../harbour.y:312.14-51: attenzione: unused value: $3
../../harbour.y:312.14-51: attenzione: unused value: $5
../../harbour.y:606.15-48: attenzione: unused value: $1
../../harbour.y:704.15-54: attenzione: unused value: $1
../../harbour.y:705.15-54: attenzione: unused value: $1
../../harbour.y:706.15-54: attenzione: unused value: $1
../../harbour.y:707.15-54: attenzione: unused value: $1
../../harbour.y:708.15-54: attenzione: unused value: $1
../../harbour.y:709.15-54: attenzione: unused value: $1
../../harbour.y:710.15-54: attenzione: unused value: $1
../../harbour.y:711.15-54: attenzione: unused value: $1
../../harbour.y:712.15-54: attenzione: unused value: $1
../../harbour.y:713.15-54: attenzione: unused value: $1
../../harbour.y:714.15-54: attenzione: unused value: $1
../../harbour.y:715.15-54: attenzione: unused value: $1
../../harbour.y:716.15-54: attenzione: unused value: $1
../../harbour.y:717.15-54: attenzione: unused value: $1
../../harbour.y:718.15-54: attenzione: unused value: $1
../../harbour.y:860.15-58: attenzione: unused value: $1
../../harbour.y:861.15-58: attenzione: unused value: $1
../../harbour.y:862.15-58: attenzione: unused value: $1
../../harbour.y:863.15-58: attenzione: unused value: $1
../../harbour.y:864.15-58: attenzione: unused value: $1
../../harbour.y:865.15-58: attenzione: unused value: $1
../../harbour.y:866.15-58: attenzione: unused value: $1
../../harbour.y:867.15-58: attenzione: unused value: $1
../../harbour.y:868.15-58: attenzione: unused value: $1
../../harbour.y:869.15-58: attenzione: unused value: $1
../../harbour.y:870.15-58: attenzione: unused value: $1
../../harbour.y:871.15-58: attenzione: unused value: $1
../../harbour.y:872.15-58: attenzione: unused value: $1
../../harbour.y:873.15-58: attenzione: unused value: $1
../../harbour.y:874.15-58: attenzione: unused value: $1
../../harbour.y:875.15-58: attenzione: unused value: $1
../../harbour.y:876.15-58: attenzione: unused value: $1
../../harbour.y:877.15-58: attenzione: unused value: $1
../../harbour.y:878.15-58: attenzione: unused value: $1
../../harbour.y:1109.14-1110.56: attenzione: unused value: $3
../../harbour.y:1109.14-1110.56: attenzione: unused value: $5
../../harbour.y:1111.14-1112.56: attenzione: unused value: $3
../../harbour.y:1111.14-1112.56: attenzione: unused value: $5
../../harbour.y:1118.16-101: attenzione: unused value: $1
../../harbour.y:1128.16-206: attenzione: unused value: $1
../../harbour.y:1427.17-50: attenzione: unused value: $1
../../harbour.y:1854.14-72: attenzione: unused value: $3
../../harbour.y:1855.14-72: attenzione: unused value: $3

HTH


-- 

---------------------------------------------------------------------
---- Firefox e Thunderbird aumentano la sicurezza del vostro pc ------
---- Domande e risposte ----
---------------------------------------------------------------------
1) - Cosa sono queste note su Firefox e Thunderbird a cosa servono?
Servono a rendere il vostro pc pi? sicuro e a utilizzare Internet in 
modo veloce ed funzionale.
Sono programmi gratuiti e vengono sviluppati da volontari.

2) - C'e' almeno un motivo per continuare a leggere questa breve nota ?
Si!... se siete stanchi di finestre popup che si aprono all'improvviso e
non volete che software spia si installi a vostra insaputa rallentando
il vostro pc...
Se volete provare Firefox e l'estrema comodit? e velocit? della 
navigazione a schede.

3) - Cosa e' la navigazione a schede?
Provatela voi stessi con Firefox per navigare a schede si tiene premuto 
il tasto control
e si clicca su un collegamento di una pagina internet.

4) - Si voglio provare cosa devo fare?
La risposta ...e' semplice.
Per consultare Internet usa --------> Firefox.
Mentre per posta elettronica usa ---> Thunderbird.
Continua a leggere fino in fondo queste brevi note.

5) - Cosa sono questi software?
Sono due software gratuiti in lingua italiana si installano in 10
minuti, non modificano le precedenti impostazioni del pc.
Sono stati gi? scaricati ed installati da milioni di utenti
che li usano con piena soddisfazione.

6) - Uso Windows posso installarli?
Si puoi installarli senza problemi.

7) - Danneggio il mio pc se li installo?
No assolutamente, anzi migliorera' la tua sicurezza.

8) - Perder? tutte le impostazioni precedenti se li installo?
No!
Firefox durante l'installazione importa impostazioni, preferiti
insomma tutto quanto da Internet Explorer.
Thunderbird importa impostazioni e tutti i messaggi inviati
ricevuti e rubrica da Microsoft Outlook.

9) - Se non mi piacciono potro' tornare indietro?
Si..! ma pensiamo che difficilmente tornerai indietro perch? Firefox
e Thunderbird sono programmi stabili, funzionali, utili e sicuri.
In effetti non dovrai tornare indietro perch? essi non intaccano i 
programmi
gi? esistenti che potrai continuare ad usare.
Potrai semplicemente disinstallarli senza problemi.

10) - Bene ho deciso li installo perch? almeno voglio provarli cosa devo 
fare ?
Per un'installazione immediata c'e' una pagina apposita
http://www.elart.it/mozilla/

11) - Come rifinisco l'installazione di Firefox ovvero come scarico in 
modo veloce Java, Flash ?
Visita il link http://elart.it/mozilla/plugin_etc.php

--------------------------------------------------------------------
Sentitevi liberi di allegare questa nota ai vostri messaggi di posta
e di diffondere Firefox e Thunderbird in qualsiasi modo.
Questa nota la scriviamo perch? stiamo partecipando alla diffusione
mondiale, gratuita e volontaria di Firefox e Thunderbird.
Maggiori dettagli al sito www.spreadfirefox.com ( in lingua inglese )
---------------------------------------------------------------------
From e.m.giordano at emagsoftware.it  Tue Nov 28 17:05:11 2006
From: e.m.giordano at emagsoftware.it (Enrico Maria Giordano)
Date: Tue Nov 28 17:05:47 2006
Subject: [Harbour] Re: ChangeLog 2006-11-28 19:30 UTC+0100
	PrzemyslawCzerpak (druzus/at/priv.onet.pl)
References: <20061128183158.GA6387@localhost.localdomain><20061128192906.GA6522@localhost.localdomain>
	<20061128200924.GA7393@localhost.localdomain>
Message-ID: <051f01c71339$4666bbf0$0100a8c0@emag>


-----Messaggio Originale----- 
Da: "Przemyslaw Czerpak" <druzus@priv.onet.pl>
A: "Harbour Project Main Developer List." <harbour@harbour-project.org>
Data invio: martedi 28 novembre 2006 21.09
Oggetto: [Harbour] Re: ChangeLog 2006-11-28 19:30 UTC+0100 PrzemyslawCzerpak 
(druzus/at/priv.onet.pl)


> > I missed that file. Can you resend it, please?
>
> In attachment. It was for 1.875 but maybe it can work with 2.1 or
> you can quite easy create your own updating yacc.c from 2.1.

Thank you.

> > Now I get
> > Fatal: 'source\compiler\macro.yyc' does not exist - don't know how to make 
> > it
>
> You do not have to make it. It already exist and this is only my typo
> in makefile.bc - as I said it was not tested. Anyhow with your help
> I think that I can update it step by step ;-)
> In this case $(HARBOUR_DIR)\macro.y should be changed to 
> $(MACRO_DIR)\macro.y
> in two places. I'll commit fix in a while and I also change the default
> setting to not use bison. Mindaugas suggestion seems to be reasonable for 
> me.

Ok, it seems to build fine without Bison. I get the following (old) warnings 
(I don't know it they are of any importance, though):

Warning W8004 harboury.c 3835: 'yymsg' is assigned a value that is never used 
in function yydestruct
Warning W8065 harboury.c 8750: Call to function 'yydestruct' with no prototype 
in function yyparse
Warning W8008 harboury.c 8768: Condition is always false in function yyparse
Warning W8066 harboury.c 8769: Unreachable code in function yyparse
Warning W8065 harboury.c 8806: Call to function 'yydestruct' with no prototype 
in function yyparse
Warning W8065 harboury.c 8852: Call to function 'yydestruct' with no prototype 
in function yyparse
Warning W8065 harboury.c 8860: Call to function 'yydestruct' with no prototype 
in function yyparse
Warning W8004 harboury.c 8696: 'yynerrs' is assigned a value that is never 
used in function yyparse
Warning W8004 harboury.c 4628: 'yyptr' is assigned a value that is never used 
in function yyparse

Warning W8004 macroy.c 1891: 'yymsg' is assigned a value that is never used in 
function yydestruct
Warning W8066 ../../macro.y 255: Unreachable code in function hb_macroparse
Warning W8066 ../../macro.y 260: Unreachable code in function hb_macroparse
Warning W8065 macroy.c 3984: Call to function 'yydestruct' with no prototype 
in function hb_macroparse
Warning W8008 macroy.c 4002: Condition is always false in function 
hb_macroparse
Warning W8066 macroy.c 4003: Unreachable code in function hb_macroparse
Warning W8065 macroy.c 4040: Call to function 'yydestruct' with no prototype 
in function hb_macroparse
Warning W8065 macroy.c 4086: Call to function 'yydestruct' with no prototype 
in function hb_macroparse
Warning W8065 macroy.c 4094: Call to function 'yydestruct' with no prototype 
in function hb_macroparse
Warning W8004 macroy.c 3930: 'hb_macronerrs' is assigned a value that is never 
used in function hb_macroparse
Warning W8004 macroy.c 2079: 'yyptr' is assigned a value that is never used in 
function hb_macroparse

EMG

--
EMAG Software Homepage:     http://www.emagsoftware.it
The EMG's ZX-Spectrum Page: http://www.emagsoftware.it/spectrum
The Best of Spectrum Games: http://www.emagsoftware.it/tbosg
The EMG Music page:         http://www.emagsoftware.it/emgmusic 

From philb at philb.us  Tue Nov 28 18:07:48 2006
From: philb at philb.us (Phil Barnett)
Date: Tue Nov 28 18:07:20 2006
Subject: [Harbour] ChangeLog 2006-11-28 19:30 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <20061128183158.GA6387@localhost.localdomain>
References: <20061128183158.GA6387@localhost.localdomain>
Message-ID: <200611281807.48560.philb@philb.us>

On Tuesday 28 November 2006 13:31, Przemyslaw Czerpak wrote:

I would default it to:

> ? HB_REBUILD_PARSER=no

Once we have a released version, who is ever going to need to rebuild it?

-- 
My other computer is your Windows machine
From antonioharbour at gmail.com  Tue Nov 28 23:59:56 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Wed Nov 29 00:00:03 2006
Subject: [Harbour] ChangeLog 2006-11-28 19:30 UTC+0100 Przemyslaw
	Czerpak(druzus/at/priv.onet.pl)
In-Reply-To: <200611281807.48560.philb@philb.us>
Message-ID: <456d13cf.4b1c1ba8.0ed0.ffffab03@mx.google.com>

Phil, 

> I would default it to:
> 
> > ? HB_REBUILD_PARSER=no
> 
> Once we have a released version, who is ever going to need to 
> rebuild it?

Lots of users want to build Harbour themselves from the CVS files, as
Harbour is constantly changing/evolving.

The simpler it gets, the better.

regards,

Antonio

From philb at philb.us  Wed Nov 29 00:45:20 2006
From: philb at philb.us (Phil Barnett)
Date: Wed Nov 29 00:44:45 2006
Subject: [Harbour] ChangeLog 2006-11-28 19:30 UTC+0100 Przemyslaw
	Czerpak(druzus/at/priv.onet.pl)
In-Reply-To: <456d13cf.4b1c1ba8.0ed0.ffffab03@mx.google.com>
References: <456d13cf.4b1c1ba8.0ed0.ffffab03@mx.google.com>
Message-ID: <200611290045.20163.philb@philb.us>

On Tuesday 28 November 2006 23:59, Antonio Linares wrote:
> Phil,
>
> > I would default it to:
> > > ? HB_REBUILD_PARSER=no
> >
> > Once we have a released version, who is ever going to need to
> > rebuild it?
>
> Lots of users want to build Harbour themselves from the CVS files, as
> Harbour is constantly changing/evolving.
>
> The simpler it gets, the better.

I doubt that many users will be rebuilding Harbour from CVS after we have our 
1.0 release. Most everyone will just use a package.

The developers will likely be the only people needing to rebuild the lexer.

-- 
My other computer is your Windows machine
From antonioharbour at gmail.com  Wed Nov 29 00:48:18 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Wed Nov 29 00:48:25 2006
Subject: [Harbour] OT: Harbour on line
Message-ID: <456d1f25.265ead87.7a94.6c43@mx.google.com>

I love this concept :-)

http://codeide.com/

Could we do something similar with Harbour ?

An IDE on line. No need to setup, quick tests and results. Simply great.


Antonio

From druzus at priv.onet.pl  Wed Nov 29 04:33:07 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Wed Nov 29 04:33:55 2006
Subject: [Harbour] Re: ChangeLog 2006-11-28 19:30 UTC+0100 Przemyslaw
	Czerpak (druzus/at/priv.onet.pl)
In-Reply-To: <20061128192906.GA6522@localhost.localdomain>
References: <20061128183158.GA6387@localhost.localdomain>
	<20061128192906.GA6522@localhost.localdomain>
Message-ID: <20061129093307.GA5333@localhost.localdomain>

> On Linux with Bison 2.1 Harbour builds with this warning
> bison -d  -oharboury.c ../../harbour.y
> ../../harbour.y:311.14-39: attenzione: unused value: $3
> ../../harbour.y:312.14-51: attenzione: unused value: $3
> ../../harbour.y:312.14-51: attenzione: unused value: $5
[...]

These warning messages are quite usable to detect some problems
in grammar definition or possible memory leaks. Using destructors
enable some additional logic which makes much more precise validation
for all states and these is the result.
I cleaned only these ones which caused directly memory leaks and
left rest of them untouched. In few cases they show places where
destructors can be activated and in few others they are false alarms.
I can force pacifying them but I do not want to make it because I can
also hide some real future problems when someone will update grammar
definition. I do not want to be grammar master in Harbour and I'd like
to work on some other code.
Maybe Ryszard in some spare time can look at it and clean used rules.
Bison 2.1 or higher is necessary to show these warnings though of
course the potential problems do not depend on used bison version
and only older bisons are silently ignoring them.

> With Bison 2.1 on Win, Harbour is builded without error

If it means that the above warning messages are not shown then in Windows
bison binaries you used some usable functionality is not enabled :-(
I hope that only warning messages are disabled and destructors are still
properly supported. Though maybe it will be safer to not rebuild grammar
parser in Windows.

best regards,
Przemek
From jfl at mafact.com  Wed Nov 29 04:34:00 2006
From: jfl at mafact.com (J. Lefebvre)
Date: Wed Nov 29 04:34:54 2006
Subject: [Harbour] 2006-11-29 10:30 UTC+0100 J. Lefebvre (jfl/at/mafact.com)
Message-ID: <mailman.0.1164792894.3340.harbour@harbour-project.org>

2006-11-29 10:30 UTC+0100 J. Lefebvre (jfl/at/mafact.com)
  * harbour/makefile.vc
    * Sync. with makefile.bc for msvc compiler.


From niki at synel.co.il  Wed Nov 29 05:18:08 2006
From: niki at synel.co.il (Chen Kedem)
Date: Wed Nov 29 05:16:54 2006
Subject: [Harbour] ChangeLog 2006-11-28 21:40 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <456D5E60.A0E@synel.co.il>

With this ChangeLog the BCC32 build is broken for me :(
While copying the *.yyc and *.yyh files, it write to inst_b32.log
(should be make_b32.log):

The syntax of the command is incorrect.

This is because on Windows NT the /Y flag is not supported for the
COPY command (this is stupid since it is supported in Win95 and later),
since I never use the install option of the build I never saw this
problem.

To fix it the /Y should not be used, instead there is a system env:

set COPYCMD=/Y

which force the same switch. But now we need to save the user value
if there was one before we change it.

So in begining of make_b32.bat there should be something like:

set HB_ORG_ENV_COPYCMD=%COPYCMD%
set COPYCMD=/Y

and in the end of make_b32.bat there should be:

set COPYCMD=%HB_ORG_ENV_COPYCMD%
set HB_ORG_ENV_COPYCMD=

And all the /Y flags should be removed from the COPY comand in
makefile.bc (this is actuallt the same for make_vc.bat and makefile.vc)

And there is no need to redirect the COPY command into the LOG file
since it is done automatically. So it should be removed.

After these changes it work on my NT 4.0 along with BCC32

  Chen.
**********************************************************************************************
IMPORTANT: The contents of this email and any attachments are confidential. They are intended for the 
named recipient(s) only.
If you have received this email in error, please notify the system manager or the sender immediately and do 
not disclose the contents to anyone or make copies thereof.
*** eSafe scanned this email for viruses, vandals, and malicious content. ***
**********************************************************************************************

From druzus at priv.onet.pl  Wed Nov 29 06:33:35 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Wed Nov 29 06:34:22 2006
Subject: [Harbour] ChangeLog 2006-11-28 21:40 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <456D5E60.A0E@synel.co.il>
References: <456D5E60.A0E@synel.co.il>
Message-ID: <20061129113335.GA22730@localhost.localdomain>

On Wed, 29 Nov 2006, Chen Kedem wrote:
> The syntax of the command is incorrect.
> This is because on Windows NT the /Y flag is not supported for the
> COPY command (this is stupid since it is supported in Win95 and later),
> since I never use the install option of the build I never saw this
> problem.
> To fix it the /Y should not be used, instead there is a system env:
> set COPYCMD=/Y

Or simply we should use XCOPY instead. AFAIR it supports /Y in all versions

> which force the same switch. But now we need to save the user value
> if there was one before we change it.

Why. It should not be possible to change parent process environment
and for us it will not be a problem

> And all the /Y flags should be removed from the COPY comand in
> makefile.bc (this is actuallt the same for make_vc.bat and makefile.vc)

IMHO it will be enough if we add set COPYCMD=/Y at the beginning of BC/VC
make files or change COPY to XCOPY.
We can also define our own macro CP and use $(CP)

> And there is no need to redirect the COPY command into the LOG file
> since it is done automatically. So it should be removed.
> After these changes it work on my NT 4.0 along with BCC32

Please make all necessary modification and commit them. I cannot test
any changes in makefile.[vb]c in Linux so I'd like to reduce any of such
modifications done by me.

best regards,
Przemek
From niki at synel.co.il  Wed Nov 29 09:15:59 2006
From: niki at synel.co.il (Chen Kedem)
Date: Wed Nov 29 09:14:47 2006
Subject: [Harbour] ChangeLog: 2006-11-29 16:11 UTC+0200 Chen Kedem
Message-ID: <456D961F.4845@synel.co.il>

2006-11-29 16:11 UTC+0200 Chen Kedem <niki@actcom.co.il>
  * makefile.bc
  * make_b32.bat
    ! Fixed the COPY command to work on Windows-NT
      (/Y flag isn't supported)

  * TODO
    - Remove TOFIX item with were fixed


The makefile.vc and make_vc.bat files probably need to be changed too,
but since I can't test them, I didn't want to touch them.

  Chen.
**********************************************************************************************
IMPORTANT: The contents of this email and any attachments are confidential. They are intended for the 
named recipient(s) only.
If you have received this email in error, please notify the system manager or the sender immediately and do 
not disclose the contents to anyone or make copies thereof.
*** eSafe scanned this email for viruses, vandals, and malicious content. ***
**********************************************************************************************

From jfl at mafact.com  Wed Nov 29 17:23:00 2006
From: jfl at mafact.com (J. Lefebvre)
Date: Wed Nov 29 17:24:50 2006
Subject: [Harbour] Missing external with MSVC,
	last CVS and HB_REBUILD_PARSER=no
Message-ID: <mailman.1.1164839090.3340.harbour@harbour-project.org>

HI,

I expect this missing external from hbrun.exe during Harbour compile if using the default parser (HB_REBUILD_PARSER=no).

Using Bison 2.1 and setting HB_REBUILD_PARSER=yes, allow me to compile it.

Any idea ?

JF,


Microsoft (R) Library Manager Version 6.00.8447
Copyright (C) Microsoft Corp 1992-1998. All rights reserved.

hbrun.c
external.c
macro.lib(macroy.obj) : error LNK2001: unresolved external symbol _yylex
bin\vc\hbrun.exe : fatal error LNK1120: 1 unresolved externals


From jfl at mafact.com  Wed Nov 29 17:29:00 2006
From: jfl at mafact.com (J. Lefebvre)
Date: Wed Nov 29 17:30:30 2006
Subject: [Harbour] 2006-11-29 23:30 UTC+0100 J. Lefebvre (jfl/at/mafact.com)
Message-ID: <mailman.2.1164839430.3340.harbour@harbour-project.org>

2006-11-29 23:30 UTC+0100 J. Lefebvre (jfl/at/mafact.com)
  * makefile.vc
  * make_vc.bat
    ! Fixed the COPY command to work on Windows-NT (/Y flag isn't supported)
    * Sync. with makefile.bc & make_b32.bat.


From elart at elart.it  Wed Nov 29 20:43:00 2006
From: elart at elart.it (elart)
Date: Wed Nov 29 20:38:01 2006
Subject: [Harbour] 2006-11-29 23:30 UTC+0100 J. Lefebvre
	(jfl/at/mafact.com)
In-Reply-To: <20061129223244.3BB0A2C857B@mail.elart.it>
References: <20061129223244.3BB0A2C857B@mail.elart.it>
Message-ID: <456E3724.4040105@elart.it>

After last change:

-------------------------------------------------------------
2006-11-29 23:30 UTC+0100 J. Lefebvre (jfl/at/mafact.com)
    * makefile.vc
    * make_vc.bat
      ! Fixed the COPY command to work on Windows-NT (/Y flag isn't 
supported)
      * Sync. with makefile.bc & make_b32.bat.

--------------------------------------------------------------
2006-11-29 16:11 UTC+0200 Chen Kedem <niki@actcom.co.il>
   * makefile.bc
   * make_b32.bat
     ! Fixed the COPY command to work on Windows-NT
       (/Y flag isn't supported)

   * TODO
     - Remove TOFIX item with were fixed

-----------------------------

On: win98 - Bison 2.1

make_b32 clean --> go to an infinite loop


make_b32

Give this error:

MAKE Version 5.2  Copyright (c) 1987, 2000 Borland
Borland C++ 5.5.1 for Win32 Copyright (c) 1993, 2000 Borland
Turbo Incremental Link 5.00 Copyright (c) 1997, 2000 Borland
Error: Unresolved external '_yylex' referenced from 
C:\HARBOUR\LIB\B32\MACRO.LIB|macroy

** error 1 ** deleting bin\b32\hbrun.exe

and go to a compile loop that never exit.

It fails and after a while i see multiple notepad window with the 
error_log.file opened.

HTH
From elart at elart.it  Wed Nov 29 20:50:32 2006
From: elart at elart.it (elart)
Date: Wed Nov 29 20:45:28 2006
Subject: [Harbour] 2006-11-29 23:30 UTC+0100 J. Lefebvre
	(jfl/at/mafact.com)
In-Reply-To: <20061129223244.3BB0A2C857B@mail.elart.it>
References: <20061129223244.3BB0A2C857B@mail.elart.it>
Message-ID: <456E38E8.5030506@elart.it>

After last change:

on Linux

gcc -DHB_OS_LINUX -Wall -W -fsigned-char -opretest pretest.o 
-L../../../../source/debug/linux/gcc  -L../../../../source/vm/linux/gcc 
  -L../../../../source/rtl/linux/gcc 
-L../../../../source/lang/linux/gcc  -L../../../../source/rdd/linux/gcc 
  -L../../../../source/rtl/linux/gcc  -L../../../../source/vm/linux/gcc 
  -L../../../../source/macro/linux/gcc 
-L../../../../source/pp/linux/gcc  -L../../../../source/common/linux/gcc 
  -L../../../../source/rdd/nulsys/linux/gcc 
-L../../../../source/rdd/dbfntx/linux/gcc 
-L../../../../source/rdd/dbfcdx/linux/gcc 
-L../../../../source/rdd/dbffpt/linux/gcc 
-L../../../../source/rdd/hbsix/linux/gcc 
-L../../../../source/rdd/hsx/linux/gcc 
-L../../../../source/rdd/usrrdd/linux/gcc 
-L../../../../source/rtl/gtstd/linux/gcc  -Wl,--start-group   -ldebug 
-lvm  -lrtl  -llang  -lrdd  -lrtl  -lvm  -lmacro  -lpp  -lcommon 
-lnulsys  -ldbfntx  -ldbfcdx  -ldbffpt  -lhbsix  -lhsx  -lusrrdd -lgtstd 
-lgpm -lm -ldl -Wl,--end-group
../../../../source/macro/linux/gcc/libmacro.a(macroy.o): In function 
`yyparse':
macroy.c:(.text+0x20f): undefined reference to `yylex'
collect2: ld returned 1 exit status
make[3]: *** [pretest] Error 1
make[3]: Leaving directory `/usr/src/harbour/utils/hbpptest/linux/gcc'
make[2]: *** [descend] Error 2
make[2]: Leaving directory `/usr/src/harbour/utils/hbpptest'
make[2]: Entering directory `/usr/src/harbour/utils/hbver'
make[3]: Entering directory `/usr/src/harbour/utils/hbver/linux/gcc'

HTH

From druzus at priv.onet.pl  Wed Nov 29 21:54:34 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Wed Nov 29 21:55:23 2006
Subject: [Harbour] ChangeLog 2006-11-30 03:50 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <20061130025434.GA7116@localhost.localdomain>

2006-11-30 03:50 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbcompdf.h
  * harbour/source/compiler/harbour.l
  * harbour/source/compiler/harbour.c
  * harbour/source/compiler/harbour.y
    * removed declaration and all references to global variable hb_comp_data
      it's not longer necessary after last modifications

  * harbour/source/compiler/harbour.yyc
    * synced compiler grammar parser

  * harbour/source/macro/macro.yyc
    ! regenerated macro compiler grammar parser with -p hb_macro - I forgot
      about this prefix before last commit

best regards,
Przemek
From antonioharbour at gmail.com  Thu Nov 30 01:34:02 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Thu Nov 30 01:34:12 2006
Subject: [Harbour] ping
In-Reply-To: <456E3724.4040105@elart.it>
Message-ID: <456e7b5f.5a567a8e.7fb7.5808@mx.google.com>

Lately I get the feeling that my msgs don't reach the list or that nobody
cares... :-(

People look quite obsessed with MT, bison, replacing old working parts with
new ones that do the same, with HRB files, and can't open their minds to
other harbour possibilities.

I wonder if the lack of response means no interest at all, or the
uncapability to look futher than their own nose...

regards,

Antonio

From jfl at mafact.com  Thu Nov 30 01:55:00 2006
From: jfl at mafact.com (J. Lefebvre)
Date: Thu Nov 30 01:56:21 2006
Subject: [Harbour] ChangeLog 2006-11-30 03:50 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
Message-ID: <mailman.3.1164869781.3340.harbour@harbour-project.org>

Thanks, Przemzek,

Working now.

JF,

-----Original Message-----
From: harbour-bounces@harbour-project.org [mailto:harbour-bounces@harbour-project.org] On Behalf Of Przemyslaw Czerpak
Sent: Thursday, November 30, 2006 3:55 AM
To: Harbour Project Main Developer List.
Subject: [Harbour] ChangeLog 2006-11-30 03:50 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)

2006-11-30 03:50 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbcompdf.h
  * harbour/source/compiler/harbour.l
  * harbour/source/compiler/harbour.c
  * harbour/source/compiler/harbour.y
    * removed declaration and all references to global variable hb_comp_data
      it's not longer necessary after last modifications

  * harbour/source/compiler/harbour.yyc
    * synced compiler grammar parser

  * harbour/source/macro/macro.yyc
    ! regenerated macro compiler grammar parser with -p hb_macro - I forgot
      about this prefix before last commit

best regards,
Przemek
_______________________________________________
Harbour mailing list
Harbour@harbour-project.org
http://lists.harbour-project.org/mailman/listinfo/harbour


From sscc at mweb.co.za  Thu Nov 30 01:57:05 2006
From: sscc at mweb.co.za (Alex Strickland)
Date: Thu Nov 30 01:57:27 2006
Subject: [Harbour] ping
In-Reply-To: <456e7b5f.5a567a8e.7fb7.5808@mx.google.com>
References: <456e7b5f.5a567a8e.7fb7.5808@mx.google.com>
Message-ID: <456E80C1.8050206@mweb.co.za>

Antonio Linares wrote:
> Lately I get the feeling that my msgs don't reach the list or that nobody
> cares... :-(
> 
> People look quite obsessed with MT, bison, replacing old working parts with
> new ones that do the same, with HRB files, and can't open their minds to
> other harbour possibilities.
> 
> I wonder if the lack of response means no interest at all, or the
> uncapability to look futher than their own nose...

I see two e-mails in the last week, 29/11 06:59 where you seem to like 
the idea of it being simpler (no bison required), 29/11 07:48, the 
online IDE, which I haven't had time to look at. Neither seemed to 
require much of an answer. Are there others?

Regards
Alex

From antonioharbour at gmail.com  Thu Nov 30 02:11:53 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Thu Nov 30 02:12:06 2006
Subject: [Harbour] ping
In-Reply-To: <456E80C1.8050206@mweb.co.za>
Message-ID: <456e843e.4c811031.4133.0639@mx.google.com>

Alex, 

> I see two e-mails in the last week, 29/11 06:59 where you 
> seem to like the idea of it being simpler

These days I see a lot of inhouse maintenance, lots of changes, but I don't
see new features. Its ok, I am not complaining. If people have lots of free
time and like to invest it on that, its fine.

> the online IDE, which I haven't had time to look at. 
> Neither seemed to require much of an answer. 

In a world thats moving so strongly and quickly to "Web 2.0" (whatever it
may means :-), taking the concept from a "desktop harbour" to a "Web 2.0
Harbour" looks very important to me. 

At least I just have the feeling to generate some brainstorming with the
harbour list members for talking about possibilities. But all I can read is
bison, flags, and endless texts describing changes here and there, but
without seeing the road where we want to go to... (no pun intended).

:-)

Antonio

From philb at philb.us  Thu Nov 30 02:42:31 2006
From: philb at philb.us (Phil Barnett)
Date: Thu Nov 30 02:41:51 2006
Subject: [Harbour] ping
In-Reply-To: <456e843e.4c811031.4133.0639@mx.google.com>
References: <456e843e.4c811031.4133.0639@mx.google.com>
Message-ID: <200611300242.31494.philb@philb.us>

On Thursday 30 November 2006 02:11, Antonio Linares wrote:
> At least I just have the feeling to generate some brainstorming with the
> harbour list members for talking about possibilities. But all I can read is
> bison, flags, and endless texts describing changes here and there, but
> without seeing the road where we want to go to... (no pun intended).

We outlined the road to what we are working on about two months ago in our 
conversation about getting to release state for Harbour 1.0 where Przemek 
said that he wanted to do some serious work to the internals to get the 
compiler output to a thread safe setup.

He is pretty much complete on that and when things settle down, we will lock 
the code and go into beta where we will do only testing and bug fixing, no 
enhancements at all.

In that process he found a way to eliminate the need for most Harbour users to 
install bison. In my book, that's a great thing. If you need it you can, but 
you probably won't. The best of all possible outcomes.

If there is a feature that you feel is missing from Harbour before we go to 
beta status and release version 1.0 for all to use, you need to get it in 
there now or wait until after 1.0 is released and we will plan next steps, 
like where the future lies.

I am quite satisfied with the work that Przemek has been doing. We recently 
got STH.CH completed. That's something that has been not finished for years 
because everyone was using the one from Clipper. While you can do that on 
your own, we can't distribute the one from Clipper due to copyright issues.

Yes, some of the end game is boring and simply consists of mopping up loose 
ends. But it has to be done. Beta could be even more boring, but I'm looking 
forward to it in the biggest way.

-- 
My other computer is your Windows machine
From philb at philb.us  Thu Nov 30 02:43:09 2006
From: philb at philb.us (Phil Barnett)
Date: Thu Nov 30 02:42:29 2006
Subject: [Harbour] ChangeLog 2006-11-30 03:50 UTC+0100 Przemyslaw Czerpak
	(druzus/at/priv.onet.pl)
In-Reply-To: <20061130025434.GA7116@localhost.localdomain>
References: <20061130025434.GA7116@localhost.localdomain>
Message-ID: <200611300243.09749.philb@philb.us>

On Wednesday 29 November 2006 21:54, Przemyslaw Czerpak wrote:
> 2006-11-30 03:50 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
>   * harbour/include/hbcompdf.h
>   * harbour/source/compiler/harbour.l
>   * harbour/source/compiler/harbour.c
>   * harbour/source/compiler/harbour.y
>     * removed declaration and all references to global variable
> hb_comp_data it's not longer necessary after last modifications
>
>   * harbour/source/compiler/harbour.yyc
>     * synced compiler grammar parser
>
>   * harbour/source/macro/macro.yyc
>     ! regenerated macro compiler grammar parser with -p hb_macro - I forgot
>       about this prefix before last commit

Thank you for never sleeping. I know that's what it must be, right?

-- 
My other computer is your Windows machine
From sscc at mweb.co.za  Thu Nov 30 02:42:43 2006
From: sscc at mweb.co.za (Alex Strickland)
Date: Thu Nov 30 02:42:51 2006
Subject: [Harbour] ping
In-Reply-To: <456e843e.4c811031.4133.0639@mx.google.com>
References: <456e843e.4c811031.4133.0639@mx.google.com>
Message-ID: <456E8B73.7080507@mweb.co.za>

Antonio Linares wrote:
> At least I just have the feeling to generate some brainstorming with the
> harbour list members for talking about possibilities. But all I can read is
> bison, flags, and endless texts describing changes here and there, but
> without seeing the road where we want to go to... (no pun intended).

It is all about foundations. For 100% reliable OO system the PP had to 
be redone. Once the PP was redone, it makes sense to use it for the 
compiler. Once the compiler is redone we have the ability to perform MT 
for macro evaluation. Once we have that it is a foundation for MT 
throughout the app. I find it all of this very exciting, and as for the 
road ahead I think we are heading for an product to rival Python, Perl, 
Ruby etc.

My 2c.

But I promise, I read all your posts :)

Regards
Alex





From antonioharbour at gmail.com  Thu Nov 30 02:55:21 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Thu Nov 30 02:55:31 2006
Subject: [Harbour] ping
In-Reply-To: <456E8B73.7080507@mweb.co.za>
Message-ID: <456e8e6e.2c7555da.503b.ffffd038@mx.google.com>

Alex, 

> It is all about foundations. For 100% reliable OO system the 
> PP had to be redone. Once the PP was redone, it makes sense 
> to use it for the compiler. Once the compiler is redone we 
> have the ability to perform MT for macro evaluation. Once we 
> have that it is a foundation for MT throughout the app. I 
> find it all of this very exciting, and as for the road ahead 
> I think we are heading for an product to rival Python, Perl, Ruby etc.

Yes, I see all that. But also I have a strong feeling that we are getting
very "old fashioned". By the time that we end that roadmap, Clipper (and
ClipperHeads) may be totally "dead".

We should carry on with a parallel R+D, besides cleaning and fixing. Or when
we finally reach our target, there will be nobody there...

> But I promise, I read all your posts :)

thanks :)

Antonio

From philb at philb.us  Thu Nov 30 03:01:21 2006
From: philb at philb.us (Phil Barnett)
Date: Thu Nov 30 03:00:40 2006
Subject: [Harbour] ping
In-Reply-To: <456e8e6e.2c7555da.503b.ffffd038@mx.google.com>
References: <456e8e6e.2c7555da.503b.ffffd038@mx.google.com>
Message-ID: <200611300301.21504.philb@philb.us>

On Thursday 30 November 2006 02:55, Antonio Linares wrote:

> We should carry on with a parallel R+D, besides cleaning and fixing. Or
> when we finally reach our target, there will be nobody there...

Then someone needs to round up more volunteers, because right now we are 
running on limited but very talented free labor.

-- 
My other computer is your Windows machine
From antonioharbour at gmail.com  Thu Nov 30 03:08:44 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Thu Nov 30 03:08:54 2006
Subject: [Harbour] ping
In-Reply-To: <200611300301.21504.philb@philb.us>
Message-ID: <456e9191.0ec96698.675a.3947@mx.google.com>

Phil, 

> Then someone needs to round up more volunteers, because right 
> now we are running on limited but very talented free labor.

The volunteers will only come if we offer them real exciting features (or
concepts).

As we said on the first Harbour logo (from Kevin Costner movie?): "If we
build it, they will come". Not the other way round... :)


Antonio 

From jfl at mafact.com  Thu Nov 30 03:12:00 2006
From: jfl at mafact.com (J. Lefebvre)
Date: Thu Nov 30 03:13:32 2006
Subject: [Harbour] ping
Message-ID: <mailman.4.1164874412.3340.harbour@harbour-project.org>

I 100 % agree, the road is clearly to Harbour 1.0.

After that, there is so many opportunities to discuss and develop, that really, it time to first stabilize the compiler.

Then, we will think about new destination.

JF,

-----Original Message-----
From: harbour-bounces@harbour-project.org [mailto:harbour-bounces@harbour-project.org] On Behalf Of Phil Barnett
Sent: Thursday, November 30, 2006 8:43 AM
To: harbour@harbour-project.org
Subject: Re: [Harbour] ping

On Thursday 30 November 2006 02:11, Antonio Linares wrote:
> At least I just have the feeling to generate some brainstorming with the
> harbour list members for talking about possibilities. But all I can read is
> bison, flags, and endless texts describing changes here and there, but
> without seeing the road where we want to go to... (no pun intended).

We outlined the road to what we are working on about two months ago in our 
conversation about getting to release state for Harbour 1.0 where Przemek 
said that he wanted to do some serious work to the internals to get the 
compiler output to a thread safe setup.

He is pretty much complete on that and when things settle down, we will lock 
the code and go into beta where we will do only testing and bug fixing, no 
enhancements at all.

In that process he found a way to eliminate the need for most Harbour users to 
install bison. In my book, that's a great thing. If you need it you can, but 
you probably won't. The best of all possible outcomes.

If there is a feature that you feel is missing from Harbour before we go to 
beta status and release version 1.0 for all to use, you need to get it in 
there now or wait until after 1.0 is released and we will plan next steps, 
like where the future lies.

I am quite satisfied with the work that Przemek has been doing. We recently 
got STH.CH completed. That's something that has been not finished for years 
because everyone was using the one from Clipper. While you can do that on 
your own, we can't distribute the one from Clipper due to copyright issues.

Yes, some of the end game is boring and simply consists of mopping up loose 
ends. But it has to be done. Beta could be even more boring, but I'm looking 
forward to it in the biggest way.

-- 
My other computer is your Windows machine
_______________________________________________
Harbour mailing list
Harbour@harbour-project.org
http://lists.harbour-project.org/mailman/listinfo/harbour


From antonioharbour at gmail.com  Thu Nov 30 03:27:43 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Thu Nov 30 03:27:53 2006
Subject: [Harbour] ping
In-Reply-To: <456E8B73.7080507@mweb.co.za>
Message-ID: <456e9605.507fb948.1f03.56df@mx.google.com>

Alex, 

> and as for the road ahead 
> I think we are heading for an product to rival Python, Perl, Ruby etc.

Thats fine, of course, but Python, Perl, Ruby, PHP, etc. they _already_
exist. 

If the users already have them and use them, why should they change for a
replacement ?

Thats what I mean: A step further. Only if we focus on a more ambitious
target, then we may have a real contender. 

i.e., maybe we should turn Harbour capable to run on PHP, using all features
from PHP, Python, libs, etc. so it may run on millions of hosting companies,
on millions of computers. Very few hosting companies will let a harbour app
run on a server (unless its dedicated). Too dangerous... (is it a virus?
-they may ask- Will it hang the server ? etc.)

Whats the added value that Harbour may offer ? Another desktop compiler ?
Thats dying, and if we don't see it, then we will die with it too. And I may
asure you that my company sales go very well :) we have more than enough,
but I am looking towards the next five or six years ahead.

Will google take all our bussiness ? Meanwhile we keep using ideas from the
past ?

Its just brainstorming, no intention to sound scary :)

Antonio

From antonioharbour at gmail.com  Thu Nov 30 03:36:09 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Thu Nov 30 03:36:24 2006
Subject: [Harbour] ping
In-Reply-To: <456e92b0.515011ed.1590.5d5aSMTPIN_ADDED@mx.google.com>
Message-ID: <456e97ff.367c2592.798a.2e5b@mx.google.com>

JF, 

> I 100 % agree, the road is clearly to Harbour 1.0.

I fully agree, we need it. Of course.

What how long have we taken to come here ? SIX years (or more) since we
started and still we don't have a 1.0 version.

Will we need six more years or more to get agressive on the market ? We
don't have that time.

We need to start thinking _now_, what we want for Harbour.

Desktop applications will become VERY SOON a thing from the past. As SUN
said, the internet IS the computer. Google and similars are showing it. 


Antonio

From druzus at priv.onet.pl  Thu Nov 30 07:27:29 2006
From: druzus at priv.onet.pl (Przemyslaw Czerpak)
Date: Thu Nov 30 07:28:17 2006
Subject: [Harbour] ping
In-Reply-To: <456e7b5f.5a567a8e.7fb7.5808@mx.google.com>
References: <456E3724.4040105@elart.it>
	<456e7b5f.5a567a8e.7fb7.5808@mx.google.com>
Message-ID: <20061130122729.GA5478@localhost.localdomain>

On Thu, 30 Nov 2006, Antonio Linares wrote:
> Lately I get the feeling that my msgs don't reach the list or that nobody
> cares... :-(

Why?
AFAIR you sent a non trivial to fix memory leak report in compiler
which was not ignored by fixed with recent modification (it was necessary
to make some serious modification in grammar code and begin to use
destructors what forced newer bison versions) and information that
you like some integrated IDE, compiler and RT environment - I though
that it was a way you wanted to show that you are finding recent
modifications very usable for you.

> People look quite obsessed with MT, bison, replacing old working parts with
> new ones that do the same, with HRB files, and can't open their minds to
> other harbour possibilities.

Now I have very serious doubt you understand what has been recently
changed. Recent modifications fixed all known memory leaks in active
code and they were a milestone in having integrated IDE, compiler and
RT environment which can be run in non batch mode what seems to be sth
you want to have. Without them asking about such features is nothing
more then wasting your and our time.
What to do you want to have? Few windows with nice color icons but
unfortunately not working because the core code is not ready for such
usage or real working program?

> I wonder if the lack of response means no interest at all, or the
> uncapability to look futher than their own nose...

What other response do you expect then very active code updating which
seems to perfectly cover your wishes?

best regards,
Przemek
From antonioharbour at gmail.com  Thu Nov 30 08:04:37 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Thu Nov 30 08:04:48 2006
Subject: [Harbour] ping
In-Reply-To: <20061130122729.GA5478@localhost.localdomain>
Message-ID: <456ed6ec.2063c6ea.60df.ffff91a5@mx.google.com>

Dear Przemek, 

> What other response do you expect then very active code 
> updating which seems to perfectly cover your wishes?

I have no complaints at all, most of all because you are doing an outstading
job and we all thank you :-)

Its just that sometimes I need to do self-brainstorming and reconsider my
own ideas, and on those ocassions I like to discuss them with the Harbour
team :-)

best regards,

Antonio

From r at astral-it.com  Thu Nov 30 09:01:49 2006
From: r at astral-it.com (roman modic)
Date: Thu Nov 30 10:24:37 2006
Subject: [Harbour] OT: Harbour on line
References: <456d1f25.265ead87.7a94.6c43@mx.google.com>
Message-ID: <00ab01c71493$8d2db740$6501a8c0@MASTERMIND>

Hello!

----- Original Message ----- 
From: "Antonio Linares" <antonioharbour@gmail.com>
To: "'Harbour Project Main Developer List.'" <harbour@harbour-project.org>
Sent: Wednesday, November 29, 2006 6:48 AM
Subject: [Harbour] OT: Harbour on line


>I love this concept :-)
> 
> http://codeide.com/
> 
> Could we do something similar with Harbour ?
> 
> An IDE on line. No need to setup, quick tests and results. Simply great.
> 
> 

OT, but here are two Adobe Flex 2 examples:
http://www.adobe.com/devnet/flex/samples/code_explorer/
http://www.adobe.com/devnet/flex/samples/style_explorer/

Regards, Roman
From jfl at mafact.com  Thu Nov 30 10:32:00 2006
From: jfl at mafact.com (J. Lefebvre)
Date: Thu Nov 30 10:33:24 2006
Subject: [Harbour] harbour.exe,
	unrecoverable error 9010: hb_xfree called with an invalid pointer
Message-ID: <mailman.5.1164900804.3340.harbour@harbour-project.org>

Hi,

The following program crash harbour.exe at compile time.


#include "std.ch"
#include "hbclass.ch"


Procedure Main()
trace("Hello World)  // here, no crash, only a gentle error message as
                        expected
Return


create class test

 method test inline trace("Hello World)
 method test inline ,trace("Hello World")


endclass

First line in error cause harbour to say ;
Test.prg(13) Error E0002 Unterminated string: '"Hello World)'
followed by 
unrecoverable error 9010: hb_xfree called with an invalid pointer

Second line in error cause harbour to say ;
test.prg(14) Error E0030 Syntax error: "syntax error at ','"
followed by
unrecoverable error 9010: hb_xfree called with an invalid pointer


From antonioharbour at gmail.com  Thu Nov 30 11:13:41 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Thu Nov 30 11:14:06 2006
Subject: [Harbour] OT: Harbour on line
In-Reply-To: <00ab01c71493$8d2db740$6501a8c0@MASTERMIND>
Message-ID: <456f033b.4ff57f54.2bde.ffff8704@mx.google.com>

Roman, 

> OT, but here are two Adobe Flex 2 examples:
> http://www.adobe.com/devnet/flex/samples/code_explorer/
> http://www.adobe.com/devnet/flex/samples/style_explorer/

Very interesting! Thanks! :)

Antonio

From antonioharbour at gmail.com  Thu Nov 30 11:23:55 2006
From: antonioharbour at gmail.com (Antonio Linares)
Date: Thu Nov 30 11:24:06 2006
Subject: [Harbour] OT: Harbour on line
In-Reply-To: <00ab01c71493$8d2db740$6501a8c0@MASTERMIND>
Message-ID: <456f05a1.111d42ba.5316.ffff84b0@mx.google.com>

Roman, 

> OT, but here are two Adobe Flex 2 examples:
> http://www.adobe.com/devnet/flex/samples/code_explorer/
> http://www.adobe.com/devnet/flex/samples/style_explorer/

Are you able to run a mxml file from a web server ? I have tried from our
hosting company and from google pages creator, but it does not run. What is
it missing ? Thanks! :)

Antonio

From r at astral-it.com  Thu Nov 30 11:36:20 2006
From: r at astral-it.com (roman modic)
Date: Thu Nov 30 11:36:30 2006
Subject: [Harbour] Multi-core may be bad for Java
Message-ID: <003601c7149d$ada08e30$6501a8c0@MASTERMIND>

Hello!

http://www.devwebsphere.com/devwebsphere/2006/11/multicore_may_b.html#comment-25646600
[quote]
- Java likely has a longer path length than languages like C and 
clock speeds won't help with this. 
- JavaEE promotes a simple threading model for applications 
- Garbage collection remains heavily dependant on clock speed
for small pauses.
[/quote]

[quote]
Applications may have to be written to exploit threading if they 
want very high performance. Developers will be put back 5 years 
in terms of clock speeds (1Ghz sound good to anyone?) so it 
may be necessary to heavily multi-thread code to make up for 
this in applications. 
[/quote]

Are these issues relevant to Harbour, too?

Best regards, Roman
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.harbour-project.org/pipermail/harbour/attachments/20061130/61b53df5/attachment.html
From hbcs at sonic.net  Thu Nov 30 03:06:17 2006
From: hbcs at sonic.net (Bill Smith)
Date: Thu Nov 30 17:29:06 2006
Subject: [Harbour] ping
References: <456e8e6e.2c7555da.503b.ffffd038@mx.google.com>
Message-ID: <002301c71456$70641a60$0203a8c0@hbco>


----- Original Message ----- 
From: Antonio Linares
To: 'Harbour Project Main Developer List.'

<snips>
Alex,

We should carry on with a parallel R+D, besides cleaning and fixing. Or when
we finally reach our target, there will be nobody there...

> But I promise, I read all your posts :)

thanks :)

Antonio

What kind of R+D do you envision, Antonio?

Bill

